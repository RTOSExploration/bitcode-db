; ModuleID = 'build/arduino_due/kernel/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.wdt_sam_dev_cfg = type { %struct._thread_stack_info* }
%struct.wdt_driver_api = type { i32 (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.wdt_timeout_cfg*)*, i32 (%struct.device*, i32)* }
%struct.wdt_timeout_cfg = type { %struct._thread_arch, void (%struct.device*, i32)*, i8 }
%struct.wdt_sam_dev_data = type { void (%struct.device*, i32)*, i32, i8, i8 }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.uart_sam_dev_cfg = type { %struct.Uart*, i32, %struct.pinctrl_dev_config* }
%struct.Uart = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [55 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.soc_gpio_pin = type { i32, %struct.Pio*, i8, i32 }
%struct.Pio = type { i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, [3 x i32], i32, i32, i32, i32, [4 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 542200 to i8*), void (i8*)* inttoptr (i32 541721 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [17 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_atmel_sam3x_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_26 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_wdt_sam to i8*), i8* bitcast (%struct._isr_list* @wdt_sam_irq_config.__isr_wdt_sam_isr_irq_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_atmel_sam3x_init = internal constant %struct.init_entry { i32 (%struct.device*)* @atmel_sam3x_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@.str.65 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.66 = private unnamed_addr constant [10 x i8] c"id < (45)\00", align 1
@.str.2.67 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/soc/arm/atmel_sam/common/soc_pmc.c\00", align 1
@.str.3.68 = private unnamed_addr constant [24 x i8] c"\09Invalid peripheral id\0A\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.70 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.71 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/soc/arm/atmel_sam/common/soc_gpio.c\00", align 1
@.str.3.72 = private unnamed_addr constant [50 x i8] c"\09Unsupported pin function, check pin.flags value\0A\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.78 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.79 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.77 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.81 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.82 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.80 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.83 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.84 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.85 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.86 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.88 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.89 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.90 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.93 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.94 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.95 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.96 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.108 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.100 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.101 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.102 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.103 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.104 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.105 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.106 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.107 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.98 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.99 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25.97 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !549
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !680
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !555
@.str.120 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.121 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.122 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.123 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.128 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.129 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !689
@.str.6.130 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.131 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.124 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.125 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !724
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 524288, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.140, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 537329664, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.141, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !734
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !739
@.str.140 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.141 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !759
@.str.143 = private unnamed_addr constant [8 x i8] c"wdt_sam\00", align 1
@log_const_wdt_sam = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.143, i32 0, i32 0), i8 3 }, section ".log_const_wdt_sam", align 4, !dbg !825
@.str.1.148 = private unnamed_addr constant [56 x i8] c"%c: Invalid timeout value allowed range:%d ms to %d ms\0A\00", align 1
@__devicehdl_dts_ord_26 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !939
@.str.2.144 = private unnamed_addr constant [18 x i8] c"watchdog@400e1a50\00", align 1
@wdt_sam_cfg = internal constant %struct.wdt_sam_dev_cfg { %struct._thread_stack_info* inttoptr (i32 1074666064 to %struct._thread_stack_info*) }, align 4, !dbg !901
@wdt_sam_api = internal constant %struct.wdt_driver_api { i32 (%struct.device*, i8)* @wdt_sam_setup, i32 (%struct.device*)* @wdt_sam_disable, i32 (%struct.device*, %struct.wdt_timeout_cfg*)* @wdt_sam_install_timeout, i32 (%struct.device*, i32)* @wdt_sam_feed }, align 4, !dbg !915
@__devstate_dts_ord_26 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !899
@wdt_sam_data = internal global %struct.wdt_sam_dev_data zeroinitializer, align 4, !dbg !917
@__device_dts_ord_26 = dso_local constant %struct.device { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.144, i32 0, i32 0), i8* bitcast (%struct.wdt_sam_dev_cfg* @wdt_sam_cfg to i8*), i8* bitcast (%struct.wdt_driver_api* @wdt_sam_api to i8*), %struct.device_state* @__devstate_dts_ord_26, i8* bitcast (%struct.wdt_sam_dev_data* @wdt_sam_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_26, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_150_", align 4, !dbg !890
@__init___device_dts_ord_26 = internal constant %struct.init_entry { i32 (%struct.device*)* @wdt_sam_init, %struct.device* @__device_dts_ord_26 }, section ".z_init_PRE_KERNEL_150_", align 4, !dbg !892
@.str.3.149 = private unnamed_addr constant [33 x i8] c"%c: No valid timeouts installed\0A\00", align 1
@.str.4.145 = private unnamed_addr constant [39 x i8] c"%c: No more timeouts can be installed\0A\00", align 1
@.str.5.146 = private unnamed_addr constant [40 x i8] c"%c: Invalid(NULL) ISR callback passed\0A\0A\00", align 1
@.str.6.147 = private unnamed_addr constant [39 x i8] c"%c: Unsupported watchdog config Flag\0A\0A\00", align 1
@wdt_sam_irq_config.__isr_wdt_sam_isr_irq_0 = internal global %struct._isr_list { i32 4, i32 0, i8* bitcast (void (%struct.device*)* @wdt_sam_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*) }, section ".intList", align 4, !dbg !925
@__devicehdl_dts_ord_21 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.153 = private unnamed_addr constant [14 x i8] c"uart@400e0800\00", align 1
@uart0_sam_config = internal constant %struct.uart_sam_dev_cfg { %struct.Uart* inttoptr (i32 1074661376 to %struct.Uart*), i32 8, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_21 }, align 4, !dbg !948
@uart_sam_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_sam_poll_in, void (%struct.device*, i8)* @uart_sam_poll_out, i32 (%struct.device*)* @uart_sam_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_sam_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_sam_config_get }, align 4, !dbg !1053
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1051
@uart0_sam_data = internal global %struct.k_spinlock { i32 115200 }, align 4, !dbg !1055
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.153, i32 0, i32 0), i8* bitcast (%struct.uart_sam_dev_cfg* @uart0_sam_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.k_spinlock* @uart0_sam_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1042
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_sam_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1044
@.str.1.154 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.155 = private unnamed_addr constant [9 x i8] c"baudrate\00", align 1
@.str.3.156 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/drivers/serial/uart_sam.c\00", align 1
@.str.4.157 = private unnamed_addr constant [36 x i8] c"\09baud rate has to be bigger than 0\0A\00", align 1
@.str.5.158 = private unnamed_addr constant [25 x i8] c"84000000/16U >= baudrate\00", align 1
@.str.6.159 = private unnamed_addr constant [55 x i8] c"\09MCK frequency is too small to set required baud rate\0A\00", align 1
@__pinctrl_dev_config__device_dts_ord_21 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_21, i32 0, i32 0), i8 1 }, align 4, !dbg !1060
@__pinctrl_states__device_dts_ord_21 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_21, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1079
@__pinctrl_state_pins_0__device_dts_ord_21 = internal constant [2 x i32] [i32 41943041, i32 42991616], align 4, !dbg !1082
@switch.table.uart_sam_cfg2sam_parity = private unnamed_addr constant [4 x i32] [i32 512, i32 0, i32 1536, i32 1024], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1120
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1285
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1287
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1283
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1278
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1252
@.str.163 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.164 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.165 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.166 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.167 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.168 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.175 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.176 = private unnamed_addr constant [210 x i8] c"port_idx < ((size_t) (((int) sizeof(char[1 - 2 * !(!__builtin_types_compatible_p(__typeof__(sam_port_addrs), __typeof__(&(sam_port_addrs)[0])))]) - 1) + (sizeof(sam_port_addrs) / sizeof((sam_port_addrs)[0]))))\00", align 1
@.str.2.177 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/drivers/pinctrl/pinctrl_sam.c\00", align 1
@sam_port_addrs = internal unnamed_addr constant [5 x i32] [i32 1074662912, i32 1074663424, i32 1074663936, i32 1074664448, i32 1074664960], align 4, !dbg !1289
@sam_port_periph_id = internal unnamed_addr constant [5 x i32] [i32 11, i32 12, i32 13, i32 14, i32 15], align 4, !dbg !1355
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1360
@.str.182 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.186 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.187 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.188 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.189 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.190 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.191 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.192 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.196 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.197 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.198 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.199 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.200 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.195 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.194 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.196, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.197, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.198, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.199, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.200, i32 0, i32 0)], align 4
@.str.202 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.202, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1367
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1592
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1579
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1587
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1598
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1603
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.211 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.217, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.218, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.219, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.221, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.215, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.222, i32 0, i32 0)], align 4, !dbg !1631
@.str.216 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.217 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.218 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.219 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.220 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.221 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.215 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.222 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1745
@.str.8.214 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.225 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.226 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.227 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.228 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.232 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.233 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.236 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.237 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.248 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.255 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.256 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.257 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.258 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.259 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.260 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.261 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.262 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.263 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.268 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1759
@.str.269 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.275 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.276 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.277 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.270 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.271 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.272 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.278 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.279 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !1784
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !1894
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !1897
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !1899
@.str.280 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.287 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.307 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.317 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.290 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.312 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.286 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.324 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.325 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.333 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.334 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.335 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.336 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.281 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.282 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.283 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.284 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.285 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.289 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.304 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.313 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.314 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1589
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1596
@.str.23.328 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.342 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.343 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.344 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.345 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1901
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !1931
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !1936
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1454
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !1934
@.str.4.346 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.347 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.348 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.352 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.353 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.373 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !1942
@.str.375 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.384 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.377 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.385 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.376 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.378 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.381 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.382 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.383 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.386 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.387 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2550 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2552, !srcloc !2553
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2554, !srcloc !2555
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2556, !srcloc !2557
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #24, !dbg !2558, !srcloc !2559
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #24, !dbg !2560, !srcloc !2561
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2562, !srcloc !2563
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #24, !dbg !2564, !srcloc !2565
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2566, !srcloc !2567
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #24, !dbg !2568, !srcloc !2569
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2570, !srcloc !2571
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2572, !srcloc !2573
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2574, !srcloc !2575
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2576, !srcloc !2577
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2578, !srcloc !2579
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2580, !srcloc !2581
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2582, !srcloc !2583
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2584, !srcloc !2585
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2586, !srcloc !2587
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2588, !srcloc !2589
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2590, !srcloc !2591
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2592, !srcloc !2593
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2594, !srcloc !2595
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2596, !srcloc !2597
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2598, !srcloc !2599
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2600, !srcloc !2601
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2602, !srcloc !2603
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2604, !srcloc !2605
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2606, !srcloc !2609
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2610, !srcloc !2611
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2612, !srcloc !2613
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2614, !srcloc !2615
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2616, !srcloc !2617
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2618, !srcloc !2619
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2620, !srcloc !2621
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2622, !srcloc !2623
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2624, !srcloc !2625
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2626, !srcloc !2627
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2628, !srcloc !2629
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2630, !srcloc !2631
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2632, !srcloc !2633
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2634, !srcloc !2635
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2636, !srcloc !2637
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2638, !srcloc !2639
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2640, !srcloc !2641
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2642, !srcloc !2643
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2644, !srcloc !2645
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2646, !srcloc !2647
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2648, !srcloc !2649
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2650, !srcloc !2651
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2652, !srcloc !2653
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2654, !srcloc !2655
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2656, !srcloc !2657
  ret void, !dbg !2658
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !2661 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2663, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.value(metadata i8* %1, metadata !2664, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.value(metadata i8* %2, metadata !2665, metadata !DIExpression()), !dbg !2669
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !2670

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #24, !dbg !2671
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !2666, metadata !DIExpression()), !dbg !2672
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #25, !dbg !2673
  %11 = call fastcc i32 @k_cycle_get_32() #26, !dbg !2674
  %12 = load i32, i32* %6, align 4, !dbg !2675
  %13 = sub i32 %11, %12, !dbg !2676
  store i32 %13, i32* %7, align 4, !dbg !2677
  %14 = load i32, i32* %8, align 4, !dbg !2678
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !2679
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #26, !dbg !2680
  call void @llvm.dbg.value(metadata i32 %16, metadata !2668, metadata !DIExpression()), !dbg !2681
  %17 = icmp eq i32 %16, 0, !dbg !2682
  br i1 %17, label %23, label %18, !dbg !2684

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !2685
  %20 = zext i8 %19 to i32, !dbg !2685
  %21 = load i32, i32* %8, align 4, !dbg !2685
  %22 = load i32, i32* %9, align 4, !dbg !2685
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #25, !dbg !2685
  br label %23, !dbg !2691

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #24, !dbg !2692
  br label %10, !dbg !2670, !llvm.loop !2693
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !2694 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !2695
  ret i32 %1, !dbg !2696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !2697 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !2709, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !2707, metadata !DIExpression()), !dbg !2710
  call void @llvm.dbg.value(metadata i8* %1, metadata !2708, metadata !DIExpression()), !dbg !2710
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2711, !srcloc !2713
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #25, !dbg !2714
  ret i32 %3, !dbg !2715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !2716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2721, metadata !DIExpression()), !dbg !2722
  %2 = icmp eq i32 %0, 2, !dbg !2723
  %3 = select i1 %2, i8 87, i8 63, !dbg !2723
  %4 = icmp eq i32 %0, 3, !dbg !2723
  %5 = select i1 %4, i8 73, i8 %3, !dbg !2723
  ret i8 %5, !dbg !2724
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !2725 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !2727
  ret i32 %1, !dbg !2728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2729 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2731, metadata !DIExpression()), !dbg !2736
  br label %2, !dbg !2737

1:                                                ; preds = %2
  tail call void @message_dev_init() #25, !dbg !2738
  ret void, !dbg !2739

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2731, metadata !DIExpression()), !dbg !2736
  %4 = add nsw i32 %3, -2, !dbg !2740
  call void @llvm.dbg.value(metadata i32 %4, metadata !2733, metadata !DIExpression()), !dbg !2741
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !2742
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !2743
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !2744
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #25, !dbg !2745
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !2746
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !2747
  %10 = inttoptr i32 %3 to i8*, !dbg !2748
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #26, !dbg !2749
  %11 = add nuw nsw i32 %3, 1, !dbg !2750
  call void @llvm.dbg.value(metadata i32 %11, metadata !2731, metadata !DIExpression()), !dbg !2736
  %12 = icmp eq i32 %11, 4, !dbg !2751
  br i1 %12, label %1, label %2, !dbg !2737, !llvm.loop !2752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !2754 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !2767, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2758, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !2759, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i32 2048, metadata !2760, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !2761, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i8* %2, metadata !2762, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i8* null, metadata !2763, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i8* null, metadata !2764, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i32 %3, metadata !2765, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.value(metadata i32 0, metadata !2766, metadata !DIExpression()), !dbg !2768
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2769, !srcloc !2771
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !2772
  ret void, !dbg !2773
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !2774 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2776, metadata !DIExpression()), !dbg !2789
  call void @llvm.dbg.value(metadata i8* %1, metadata !2777, metadata !DIExpression()), !dbg !2789
  call void @llvm.dbg.value(metadata i8* %2, metadata !2778, metadata !DIExpression()), !dbg !2789
  %6 = ptrtoint i8* %0 to i32, !dbg !2790
  call void @llvm.dbg.value(metadata i32 %6, metadata !2779, metadata !DIExpression()), !dbg !2789
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !2791
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !2791
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !2780, metadata !DIExpression()), !dbg !2792
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !2793
  %9 = zext i8 %8 to i32, !dbg !2793
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !2793
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #26, !dbg !2793
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #25, !dbg !2793
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #26, !dbg !2798
  call void @llvm.dbg.value(metadata i32 %13, metadata !2781, metadata !DIExpression()), !dbg !2799
  %14 = call fastcc i32 @k_cycle_get_32() #26, !dbg !2800
  call void @llvm.dbg.value(metadata i32 %14, metadata !2783, metadata !DIExpression()), !dbg !2799
  %15 = icmp eq i32 %13, 0, !dbg !2801
  br i1 %15, label %16, label %28, !dbg !2804

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !2804

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #26, !dbg !2805
  %25 = sub i32 %24, %23, !dbg !2806
  %26 = load i32, i32* %17, align 4, !dbg !2807
  %27 = icmp ult i32 %25, %26, !dbg !2808
  br i1 %27, label %29, label %42, !dbg !2809

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #25, !dbg !2810
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #25, !dbg !2810
  unreachable, !dbg !2810

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !2812
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2784, metadata !DIExpression()), !dbg !2813
  store volatile i32 0, i32* %5, align 4, !dbg !2813
  %30 = load volatile i32, i32* %5, align 4, !dbg !2814
  %31 = icmp slt i32 %30, 100, !dbg !2816
  br i1 %31, label %37, label %32, !dbg !2817

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !2818
  %33 = call fastcc i32 @k_cycle_get_32() #26, !dbg !2805
  %34 = sub i32 %33, %23, !dbg !2806
  %35 = load i32, i32* %17, align 4, !dbg !2807
  %36 = icmp ult i32 %34, %35, !dbg !2808
  br i1 %36, label %29, label %42, !dbg !2809, !llvm.loop !2819

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !2821
  %39 = add nsw i32 %38, 1, !dbg !2821
  store volatile i32 %39, i32* %5, align 4, !dbg !2821
  %40 = load volatile i32, i32* %5, align 4, !dbg !2814
  %41 = icmp slt i32 %40, 100, !dbg !2816
  br i1 %41, label %37, label %32, !dbg !2817, !llvm.loop !2822

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #26, !dbg !2824
  %44 = sub i32 %43, %23, !dbg !2825
  call void @llvm.dbg.value(metadata i32 %44, metadata !2788, metadata !DIExpression()), !dbg !2799
  %45 = load i32, i32* %18, align 4, !dbg !2826
  %46 = load i32, i32* %19, align 4, !dbg !2826
  %47 = load i32, i32* %20, align 4, !dbg !2826
  %48 = sub i32 %23, %47, !dbg !2826
  %49 = load i32, i32* %17, align 4, !dbg !2826
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #25, !dbg !2826
  %50 = load i32, i32* %20, align 4, !dbg !2831
  %51 = sub i32 %23, %50, !dbg !2832
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #26, !dbg !2833
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #26, !dbg !2798
  call void @llvm.dbg.value(metadata i32 %52, metadata !2781, metadata !DIExpression()), !dbg !2799
  %53 = call fastcc i32 @k_cycle_get_32() #26, !dbg !2800
  call void @llvm.dbg.value(metadata i32 %53, metadata !2783, metadata !DIExpression()), !dbg !2799
  %54 = icmp eq i32 %52, 0, !dbg !2801
  br i1 %54, label %22, label %28, !dbg !2804, !llvm.loop !2834
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !2837 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !2840
  ret %struct.k_thread* %1, !dbg !2841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !2842 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2846, metadata !DIExpression()), !dbg !2847
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2848, !srcloc !2850
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #25, !dbg !2851
  ret i32 %2, !dbg !2852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !2853 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !2859, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !2857, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.value(metadata i8* %1, metadata !2858, metadata !DIExpression()), !dbg !2860
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2861, !srcloc !2863
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #25, !dbg !2864
  ret i32 %3, !dbg !2865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !2866 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !2871, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.value(metadata i32 %1, metadata !2872, metadata !DIExpression()), !dbg !2884
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !2885
  %8 = load i32, i32* %7, align 4, !dbg !2885
  %9 = icmp ugt i32 %8, 39, !dbg !2887
  br i1 %9, label %60, label %10, !dbg !2888

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !2889
  %12 = load i32, i32* %11, align 4, !dbg !2889
  call void @llvm.dbg.value(metadata i32 %12, metadata !2873, metadata !DIExpression()), !dbg !2884
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !2890
  %14 = load i32, i32* %13, align 4, !dbg !2891
  %15 = add i32 %14, 1, !dbg !2891
  store i32 %15, i32* %13, align 4, !dbg !2891
  call void @llvm.dbg.value(metadata i32 %14, metadata !2874, metadata !DIExpression()), !dbg !2884
  %16 = icmp ult i32 %14, 20, !dbg !2892
  br i1 %16, label %17, label %19, !dbg !2894

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !2895
  store i32 %1, i32* %18, align 4, !dbg !2897
  br label %19, !dbg !2898

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !2899
  %21 = load i32, i32* %20, align 4, !dbg !2899
  %22 = tail call fastcc i32 @atomic_inc() #26, !dbg !2900
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !2901
  store i32 %21, i32* %23, align 4, !dbg !2902
  %24 = load i32, i32* %7, align 4, !dbg !2903
  %25 = icmp eq i32 %24, 39, !dbg !2904
  br i1 %25, label %26, label %60, !dbg !2905

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !2906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #24, !dbg !2906
  %28 = bitcast i32* %4 to i8*, !dbg !2906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #24, !dbg !2906
  %29 = bitcast i32* %5 to i8*, !dbg !2906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #24, !dbg !2906
  %30 = bitcast i32* %6 to i8*, !dbg !2906
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #24, !dbg !2906
  %31 = tail call fastcc i32 @k_sem_take() #26, !dbg !2907
  call void @llvm.dbg.value(metadata i32 %31, metadata !2881, metadata !DIExpression()), !dbg !2908
  %32 = icmp eq i32 %31, 0, !dbg !2909
  br i1 %32, label %34, label %33, !dbg !2912

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #25, !dbg !2913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #25, !dbg !2913
  unreachable, !dbg !2913

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #26, !dbg !2915
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !2916
  call void @llvm.dbg.value(metadata i32* %3, metadata !2875, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call void @llvm.dbg.value(metadata i32* %4, metadata !2878, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call void @llvm.dbg.value(metadata i32* %5, metadata !2879, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call void @llvm.dbg.value(metadata i32* %6, metadata !2880, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #26, !dbg !2917
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !2918
  %37 = zext i8 %36 to i32, !dbg !2918
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #25, !dbg !2918
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #25, !dbg !2923
  %38 = load i32, i32* %4, align 4, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %38, metadata !2878, metadata !DIExpression()), !dbg !2908
  %39 = load i32, i32* %3, align 4, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %39, metadata !2875, metadata !DIExpression()), !dbg !2908
  %40 = load i32, i32* %5, align 4, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %40, metadata !2879, metadata !DIExpression()), !dbg !2908
  %41 = load i32, i32* %6, align 4, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %41, metadata !2880, metadata !DIExpression()), !dbg !2908
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #25, !dbg !2928
  call void @llvm.dbg.value(metadata i32 0, metadata !2882, metadata !DIExpression()), !dbg !2933
  br label %43, !dbg !2934

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #25, !dbg !2935
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #24, !dbg !2940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #24, !dbg !2940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #24, !dbg !2940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #24, !dbg !2940
  br label %60, !dbg !2941

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !2882, metadata !DIExpression()), !dbg !2933
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !2942
  %46 = load i32, i32* %45, align 4, !dbg !2942
  %47 = icmp eq i32 %46, 0, !dbg !2946
  br i1 %47, label %48, label %51, !dbg !2947

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #26, !dbg !2948
  %50 = zext i8 %49 to i32, !dbg !2948
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #25, !dbg !2948
  br label %57, !dbg !2954

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !2955
  call void @llvm.dbg.value(metadata i32* %3, metadata !2875, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call void @llvm.dbg.value(metadata i32* %4, metadata !2878, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call void @llvm.dbg.value(metadata i32* %5, metadata !2879, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call void @llvm.dbg.value(metadata i32* %6, metadata !2880, metadata !DIExpression(DW_OP_deref)), !dbg !2908
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #26, !dbg !2956
  %53 = load i32, i32* %4, align 4, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %53, metadata !2878, metadata !DIExpression()), !dbg !2908
  %54 = load i32, i32* %3, align 4, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %54, metadata !2875, metadata !DIExpression()), !dbg !2908
  %55 = load i32, i32* %5, align 4, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %55, metadata !2879, metadata !DIExpression()), !dbg !2908
  %56 = load i32, i32* %6, align 4, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %56, metadata !2880, metadata !DIExpression()), !dbg !2908
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #25, !dbg !2957
  br label %57, !dbg !2962

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !2963
  call void @llvm.dbg.value(metadata i32 %58, metadata !2882, metadata !DIExpression()), !dbg !2933
  %59 = icmp eq i32 %58, 4, !dbg !2964
  br i1 %59, label %42, label %43, !dbg !2934, !llvm.loop !2965

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !2967
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !2968 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !2975, metadata !DIExpression()), !dbg !2976
  %1 = tail call fastcc i32 @atomic_add() #26, !dbg !2977
  ret i32 %1, !dbg !2978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !2979 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !2985, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !2984, metadata !DIExpression()), !dbg !2986
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2987, !srcloc !2989
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #25, !dbg !2990
  ret i32 %1, !dbg !2991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !2992 {
  call void @llvm.dbg.value(metadata i32 100, metadata !2996, metadata !DIExpression()), !dbg !2997
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #26, !dbg !2998
  ret void, !dbg !2999
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3000 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3005, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32 %1, metadata !3006, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32* %2, metadata !3007, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32* %3, metadata !3008, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32* %4, metadata !3009, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32* %5, metadata !3010, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i64 0, metadata !3011, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i64 0, metadata !3012, metadata !DIExpression()), !dbg !3020
  store i32 2147483647, i32* %2, align 4, !dbg !3021
  store i32 0, i32* %3, align 4, !dbg !3022
  call void @llvm.dbg.value(metadata i32 0, metadata !3013, metadata !DIExpression()), !dbg !3023
  call void @llvm.dbg.value(metadata i64 0, metadata !3011, metadata !DIExpression()), !dbg !3020
  %7 = icmp eq i32 %1, 0, !dbg !3024
  br i1 %7, label %8, label %21, !dbg !3026

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3027
  %10 = trunc i32 %9 to i8, !dbg !3028
  %11 = trunc i32 %1 to i8, !dbg !3028
  %12 = udiv i8 %10, %11, !dbg !3028
  %13 = zext i8 %12 to i32, !dbg !3029
  store i32 %13, i32* %4, align 4, !dbg !3030
  call void @llvm.dbg.value(metadata i32 0, metadata !3015, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.value(metadata i64 0, metadata !3012, metadata !DIExpression()), !dbg !3020
  br label %38, !dbg !3032

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3027
  %16 = zext i32 %15 to i64, !dbg !3033
  %17 = add i64 %35, %16, !dbg !3034
  %18 = zext i32 %1 to i64, !dbg !3035
  %19 = udiv i64 %17, %18, !dbg !3028
  %20 = trunc i64 %19 to i32, !dbg !3029
  store i32 %20, i32* %4, align 4, !dbg !3030
  call void @llvm.dbg.value(metadata i32 0, metadata !3015, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.value(metadata i64 0, metadata !3012, metadata !DIExpression()), !dbg !3020
  br i1 %7, label %38, label %45, !dbg !3032

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3011, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.value(metadata i32 %23, metadata !3013, metadata !DIExpression()), !dbg !3023
  %24 = load i32, i32* %2, align 4, !dbg !3036
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3036
  %26 = load i32, i32* %25, align 4, !dbg !3036
  %27 = icmp ult i32 %24, %26, !dbg !3036
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3036
  store i32 %28, i32* %2, align 4, !dbg !3038
  %29 = load i32, i32* %3, align 4, !dbg !3039
  %30 = load i32, i32* %25, align 4, !dbg !3039
  %31 = icmp ugt i32 %29, %30, !dbg !3039
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3039
  store i32 %32, i32* %3, align 4, !dbg !3040
  %33 = load i32, i32* %25, align 4, !dbg !3041
  %34 = zext i32 %33 to i64, !dbg !3041
  %35 = add i64 %22, %34, !dbg !3042
  call void @llvm.dbg.value(metadata i64 %35, metadata !3011, metadata !DIExpression()), !dbg !3020
  %36 = add nuw nsw i32 %23, 1, !dbg !3043
  call void @llvm.dbg.value(metadata i32 %36, metadata !3013, metadata !DIExpression()), !dbg !3023
  %37 = icmp eq i32 %36, %1, !dbg !3024
  br i1 %37, label %14, label %21, !dbg !3026, !llvm.loop !3044

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3020
  %42 = add i64 %41, %40, !dbg !3046
  %43 = udiv i64 %42, %39, !dbg !3047
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #26, !dbg !3048
  store i32 %44, i32* %5, align 4, !dbg !3049
  ret void, !dbg !3050

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3015, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.value(metadata i64 %47, metadata !3012, metadata !DIExpression()), !dbg !3020
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3051
  %49 = load i32, i32* %48, align 4, !dbg !3051
  %50 = sub i32 %49, %20, !dbg !3052
  %51 = sext i32 %50 to i64, !dbg !3053
  call void @llvm.dbg.value(metadata i64 %51, metadata !3017, metadata !DIExpression()), !dbg !3054
  %52 = mul nsw i64 %51, %51, !dbg !3055
  %53 = add i64 %52, %47, !dbg !3056
  call void @llvm.dbg.value(metadata i64 %53, metadata !3012, metadata !DIExpression()), !dbg !3020
  %54 = add nuw nsw i32 %46, 1, !dbg !3057
  call void @llvm.dbg.value(metadata i32 %54, metadata !3015, metadata !DIExpression()), !dbg !3031
  %55 = icmp eq i32 %54, %1, !dbg !3058
  br i1 %55, label %38, label %45, !dbg !3032, !llvm.loop !3059
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3061 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3065, metadata !DIExpression()), !dbg !3070
  %2 = icmp ugt i64 %0, 1, !dbg !3071
  %3 = trunc i64 %0 to i32, !dbg !3072
  br i1 %2, label %6, label %4, !dbg !3072

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3073

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3074
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #26, !dbg !3075
  %9 = shl i32 %8, 1, !dbg !3076
  %10 = zext i32 %9 to i64, !dbg !3075
  call void @llvm.dbg.value(metadata i64 %10, metadata !3066, metadata !DIExpression()), !dbg !3077
  %11 = or i64 %10, 1, !dbg !3078
  call void @llvm.dbg.value(metadata i64 %11, metadata !3069, metadata !DIExpression()), !dbg !3077
  %12 = mul nuw i64 %11, %11, !dbg !3079
  %13 = icmp ugt i64 %12, %0, !dbg !3080
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3081
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3082 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3086, metadata !DIExpression()), !dbg !3087
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3088, !srcloc !3090
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3091
  ret void, !dbg !3092
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3093 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3097, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.value(metadata i32 1, metadata !3098, metadata !DIExpression()), !dbg !3099
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3100
  ret i32 %1, !dbg !3101
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3102 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3103, !srcloc !3105
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3106
  ret %struct.k_thread* %1, !dbg !3107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3108 {
  call void @llvm.dbg.value(metadata i64 8400, metadata !3110, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i64 4, metadata !3111, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i64 33600, metadata !3112, metadata !DIExpression()), !dbg !3113
  store i32 40320, i32* @max_duty_cyc, align 4, !dbg !3114
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #25, !dbg !3115
  ret void, !dbg !3116
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3117 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3119, metadata !DIExpression()), !dbg !3130
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3131
  br i1 %3, label %5, label %4, !dbg !3134

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #25, !dbg !3135
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #25, !dbg !3135
  unreachable, !dbg !3135

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #26, !dbg !3137
  call void @llvm.dbg.value(metadata i32 %6, metadata !3120, metadata !DIExpression()), !dbg !3130
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3138
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !3138
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3121, metadata !DIExpression()), !dbg !3139
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3140
  %9 = add i32 %8, 1, !dbg !3140
  store i32 %9, i32* @msg_seq, align 4, !dbg !3140
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3141
  store i32 %8, i32* %10, align 4, !dbg !3142
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3143
  store i32 %6, i32* %11, align 4, !dbg !3144
  %12 = tail call fastcc i32 @rand32() #26, !dbg !3145
  %13 = and i32 %12, 3, !dbg !3146
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3147
  store i32 %13, i32* %14, align 4, !dbg !3148
  %15 = tail call fastcc i32 @rand32() #26, !dbg !3149
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3150
  %17 = urem i32 %15, %16, !dbg !3151
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3152
  store i32 %17, i32* %18, align 4, !dbg !3153
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #26, !dbg !3154
  call void @llvm.dbg.value(metadata i32 %19, metadata !3129, metadata !DIExpression()), !dbg !3130
  %20 = icmp eq i32 %19, 0, !dbg !3155
  br i1 %20, label %22, label %21, !dbg !3157

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #25, !dbg !3158
  br label %22, !dbg !3160

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3161
  %24 = icmp ult i32 %23, 40, !dbg !3163
  br i1 %24, label %25, label %26, !dbg !3164

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #26, !dbg !3165
  br label %26, !dbg !3167

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !3168
  ret void, !dbg !3168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3169 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #26, !dbg !3170
  ret i32 %1, !dbg !3171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3172
  %2 = icmp eq i64 %1, 0, !dbg !3172
  br i1 %2, label %3, label %7, !dbg !3174

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #26, !dbg !3175
  %5 = zext i32 %4 to i64, !dbg !3177
  %6 = shl nuw nsw i64 %5, 16, !dbg !3178
  br label %7, !dbg !3179

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3180
  %9 = mul i64 %8, 6364136223846793005, !dbg !3181
  %10 = add i64 %9, 1442695040888963407, !dbg !3182
  store i64 %10, i64* @rand32.state, align 8, !dbg !3183
  %11 = lshr i64 %10, 32, !dbg !3184
  %12 = trunc i64 %11 to i32, !dbg !3185
  ret i32 %12, !dbg !3186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3187 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3198, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3196, metadata !DIExpression()), !dbg !3199
  call void @llvm.dbg.value(metadata i8* %0, metadata !3197, metadata !DIExpression()), !dbg !3199
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3200, !srcloc !3202
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !3203
  ret i32 %2, !dbg !3204
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3205 {
  %1 = tail call fastcc i32 @rand32() #26, !dbg !3208
  %2 = and i32 %1, 7, !dbg !3209
  call void @llvm.dbg.value(metadata i32 %2, metadata !3207, metadata !DIExpression()), !dbg !3210
  %3 = zext i32 %2 to i64, !dbg !3211
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3212
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #25, !dbg !3212
  ret void, !dbg !3213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3214 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !3215
  ret i32 %1, !dbg !3216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3217 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3222, metadata !DIExpression()), !dbg !3224
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3225
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #26, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %3, metadata !3223, metadata !DIExpression()), !dbg !3224
  %4 = icmp eq i32 %3, 0, !dbg !3227
  br i1 %4, label %6, label %5, !dbg !3230

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #25, !dbg !3231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #25, !dbg !3231
  unreachable, !dbg !3231

6:                                                ; preds = %1
  ret void, !dbg !3233
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3234 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3240, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3238, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i8* %0, metadata !3239, metadata !DIExpression()), !dbg !3241
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3242, !srcloc !3244
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3245
  ret i32 %2, !dbg !3246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3247 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %0, metadata !3258, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %1, metadata !3259, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %2, metadata !3260, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %3, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %0, metadata !3263, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %0, metadata !3264, metadata !DIExpression()), !dbg !3325
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3326
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !3326
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3267, metadata !DIExpression()), !dbg !3327
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3328
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #24, !dbg !3328
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3269, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i32 0, metadata !3270, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 0, metadata !3271, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 0, metadata !3272, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 -1, metadata !3273, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 0, metadata !3276, metadata !DIExpression()), !dbg !3325
  %12 = and i32 %2, 4, !dbg !3330
  %13 = icmp eq i32 %12, 0, !dbg !3331
  call void @llvm.dbg.value(metadata i1 %13, metadata !3277, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3325
  %14 = lshr i32 %2, 3, !dbg !3332
  %15 = and i32 %14, 7, !dbg !3332
  %16 = add nuw nsw i32 %15, 1, !dbg !3333
  call void @llvm.dbg.value(metadata i32 %16, metadata !3278, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 0, metadata !3279, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %0, metadata !3280, metadata !DIExpression()), !dbg !3325
  %17 = ptrtoint i8* %0 to i32, !dbg !3334
  %18 = and i32 %17, 3, !dbg !3336
  %19 = icmp eq i32 %18, 0, !dbg !3336
  br i1 %19, label %20, label %320, !dbg !3337

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3338
  call void @llvm.dbg.value(metadata i8* %21, metadata !3264, metadata !DIExpression()), !dbg !3325
  %22 = icmp eq i8* %0, null, !dbg !3339
  %23 = and i32 %1, 7, !dbg !3341
  %24 = sub nuw nsw i32 8, %23, !dbg !3341
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3341
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3341
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %27, metadata !3259, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %26, metadata !3264, metadata !DIExpression()), !dbg !3325
  br i1 %22, label %33, label %28, !dbg !3342

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3344
  %30 = sub i32 4, %17, !dbg !3344
  %31 = add i32 %30, %29, !dbg !3345
  %32 = icmp ugt i32 %31, %27, !dbg !3346
  br i1 %32, label %320, label %33, !dbg !3347

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3348
  call void @llvm.dbg.value(metadata i8* %34, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %3, metadata !3275, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 4, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 4, metadata !3265, metadata !DIExpression()), !dbg !3325
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3349

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %42, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %43, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %44, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %45, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %72, metadata !3273, metadata !DIExpression()), !dbg !3325
  br i1 %46, label %73, label %47, !dbg !3350

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3351
  %49 = zext i1 %48 to i32, !dbg !3355
  %50 = add nsw i32 %72, %49, !dbg !3355
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3355
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3355
  call void @llvm.dbg.value(metadata i32 %52, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %51, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %50, metadata !3273, metadata !DIExpression()), !dbg !3325
  br label %53, !dbg !3356

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %40, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %58, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %57, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %56, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %54, metadata !3273, metadata !DIExpression()), !dbg !3325
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3357
  call void @llvm.dbg.value(metadata i8* %60, metadata !3261, metadata !DIExpression()), !dbg !3325
  %61 = load i8, i8* %60, align 1, !dbg !3359
  %62 = icmp eq i8 %61, 0, !dbg !3360
  br i1 %62, label %226, label %63, !dbg !3361, !llvm.loop !3362

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3350

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3365

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3276, metadata !DIExpression()), !dbg !3325
  %75 = add nsw i32 %72, -1, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %75, metadata !3273, metadata !DIExpression()), !dbg !3325
  br label %53, !dbg !3367

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3368

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 4, metadata !3265, metadata !DIExpression()), !dbg !3325
  br label %53, !dbg !3369

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 4, metadata !3265, metadata !DIExpression()), !dbg !3325
  br label %53, !dbg !3370

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3371
  %81 = icmp eq i8 %80, 108, !dbg !3373
  br i1 %81, label %82, label %109, !dbg !3374

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3375
  %84 = load i8, i8* %83, align 1, !dbg !3375
  %85 = icmp eq i8 %84, 108, !dbg !3378
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3379
  %89 = add i32 %88, 7, !dbg !3379
  %90 = and i32 %89, -8, !dbg !3379
  %91 = inttoptr i32 %90 to i8*, !dbg !3379
  %92 = inttoptr i32 %90 to double*, !dbg !3379
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3379
  %94 = load double, double* %92, align 8, !dbg !3379
  call void @llvm.dbg.value(metadata i8* %93, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 8, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 8, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata double %94, metadata !3293, metadata !DIExpression()), !dbg !3381
  %95 = ptrtoint i8* %43 to i32, !dbg !3382
  %96 = add i32 %95, 7, !dbg !3382
  %97 = and i32 %96, -8, !dbg !3382
  %98 = inttoptr i32 %97 to i8*, !dbg !3383
  call void @llvm.dbg.value(metadata i8* %98, metadata !3264, metadata !DIExpression()), !dbg !3325
  br i1 %22, label %104, label %99, !dbg !3384

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3385
  %101 = icmp ugt i32 %100, %196, !dbg !3389
  br i1 %101, label %320, label %102, !dbg !3390

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3391
  store double %94, double* %103, align 8, !dbg !3391
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3394
  call void @llvm.dbg.value(metadata i8* %105, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3276, metadata !DIExpression()), !dbg !3325
  br label %53, !dbg !3395

107:                                              ; preds = %73, %73
  br label %109, !dbg !3396

108:                                              ; preds = %73
  br label %109, !dbg !3396

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3325
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3325
  call void @llvm.dbg.value(metadata i32 %113, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %112, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3279, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  %114 = ptrtoint i8* %43 to i32, !dbg !3396
  %115 = add i32 %114, -1, !dbg !3396
  %116 = add i32 %115, %112, !dbg !3396
  %117 = sub i32 0, %112, !dbg !3396
  %118 = and i32 %116, %117, !dbg !3396
  %119 = inttoptr i32 %118 to i8*, !dbg !3397
  call void @llvm.dbg.value(metadata i8* %119, metadata !3264, metadata !DIExpression()), !dbg !3325
  br i1 %22, label %124, label %120, !dbg !3398

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3400
  %122 = add i32 %121, %118, !dbg !3401
  %123 = icmp ugt i32 %122, %196, !dbg !3402
  br i1 %123, label %320, label %124, !dbg !3403

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3404

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3397
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3405
  call void @llvm.dbg.value(metadata i8* %127, metadata !3262, metadata !DIExpression()), !dbg !3325
  %128 = bitcast i8* %41 to i8**, !dbg !3405
  %129 = load i8*, i8** %128, align 4, !dbg !3405
  call void @llvm.dbg.value(metadata i8* %129, metadata !3275, metadata !DIExpression()), !dbg !3325
  br label %130, !dbg !3406

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3325
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3407
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3325
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3408
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3325
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3325
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3325
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3325
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3325
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3325
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3409
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %142, metadata !3259, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %141, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %140, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %139, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %138, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %137, metadata !3270, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %136, metadata !3278, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %135, metadata !3271, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %133, metadata !3275, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %132, metadata !3273, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %131, metadata !3272, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.label(metadata !3324), !dbg !3411
  br i1 %22, label %146, label %144, !dbg !3412

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3413
  store i8* %133, i8** %145, align 4, !dbg !3416
  br label %146, !dbg !3417

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %147, metadata !3278, metadata !DIExpression()), !dbg !3325
  %148 = icmp sgt i32 %136, 0, !dbg !3419
  br i1 %148, label %152, label %149, !dbg !3420

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3421
  %151 = zext i1 %150 to i32, !dbg !3421
  br label %152, !dbg !3420

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3420
  %154 = icmp eq i32 %153, 0, !dbg !3420
  call void @llvm.dbg.value(metadata i1 %154, metadata !3302, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3422
  call void @llvm.dbg.value(metadata i1 %36, metadata !3305, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3422
  %155 = or i1 %36, %154, !dbg !3423
  br i1 %155, label %156, label %192, !dbg !3423

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3424
  %158 = sub i32 %157, %17, !dbg !3424
  %159 = lshr i32 %158, 2, !dbg !3425
  call void @llvm.dbg.value(metadata i32 %159, metadata !3306, metadata !DIExpression()), !dbg !3426
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3427
  br i1 %161, label %162, label %163, !dbg !3427

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #25, !dbg !3429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #25, !dbg !3429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #25, !dbg !3429
  unreachable, !dbg !3429

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3434
  br i1 %164, label %165, label %166, !dbg !3436

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #25, !dbg !3437
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !3437
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #25, !dbg !3437
  unreachable, !dbg !3437

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3442

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3443
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3446
  store i8 %168, i8* %169, align 1, !dbg !3447
  %170 = trunc i32 %132 to i8, !dbg !3448
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3449
  store i8 %170, i8* %171, align 1, !dbg !3450
  br i1 %154, label %175, label %172, !dbg !3451

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3452
  store i8 %173, i8* %169, align 1, !dbg !3452
  %174 = add i32 %131, 1, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %174, metadata !3272, metadata !DIExpression()), !dbg !3325
  br label %187, !dbg !3456

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3457
  call void @llvm.dbg.value(metadata i32 %176, metadata !3271, metadata !DIExpression()), !dbg !3325
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3459

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %179, metadata !3259, metadata !DIExpression()), !dbg !3325
  br label %187, !dbg !3463

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3464

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %182, metadata !3259, metadata !DIExpression()), !dbg !3325
  br label %187, !dbg !3468

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3469
  %185 = add i32 %142, 2, !dbg !3471
  %186 = add i32 %185, %184, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %186, metadata !3259, metadata !DIExpression()), !dbg !3325
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3325
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3325
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3325
  call void @llvm.dbg.value(metadata i32 %190, metadata !3259, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %189, metadata !3271, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %188, metadata !3272, metadata !DIExpression()), !dbg !3325
  %191 = add nuw nsw i32 %137, 1, !dbg !3473
  call void @llvm.dbg.value(metadata i32 %191, metadata !3270, metadata !DIExpression()), !dbg !3325
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3325
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3408
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3325
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3409
  call void @llvm.dbg.value(metadata i32 %196, metadata !3259, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %195, metadata !3270, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %194, metadata !3271, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %193, metadata !3272, metadata !DIExpression()), !dbg !3325
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3474
  call void @llvm.dbg.value(metadata i8* %197, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %143, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %141, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %139, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %138, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3279, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %132, metadata !3273, metadata !DIExpression()), !dbg !3325
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3357
  call void @llvm.dbg.value(metadata i8* %198, metadata !3261, metadata !DIExpression()), !dbg !3325
  %199 = load i8, i8* %198, align 1, !dbg !3359
  %200 = icmp eq i8 %199, 0, !dbg !3360
  br i1 %200, label %226, label %63, !dbg !3361

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3475

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3476
  call void @llvm.dbg.value(metadata i8* %203, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 undef, metadata !3309, metadata !DIExpression()), !dbg !3477
  br i1 %22, label %219, label %204, !dbg !3478

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3476
  %206 = load i32, i32* %205, align 4, !dbg !3476
  call void @llvm.dbg.value(metadata i32 %206, metadata !3309, metadata !DIExpression()), !dbg !3477
  %207 = inttoptr i32 %118 to i32*, !dbg !3479
  store i32 %206, i32* %207, align 4, !dbg !3482
  br label %219, !dbg !3483

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3484
  %210 = add i32 %209, 7, !dbg !3484
  %211 = and i32 %210, -8, !dbg !3484
  %212 = inttoptr i32 %211 to i8*, !dbg !3484
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3484
  call void @llvm.dbg.value(metadata i8* %213, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i64 undef, metadata !3315, metadata !DIExpression()), !dbg !3485
  br i1 %22, label %219, label %214, !dbg !3486

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3484
  %216 = load i64, i64* %215, align 8, !dbg !3484
  call void @llvm.dbg.value(metadata i64 %216, metadata !3315, metadata !DIExpression()), !dbg !3485
  %217 = inttoptr i32 %118 to i64*, !dbg !3487
  store i64 %216, i64* %217, align 8, !dbg !3492
  br label %219, !dbg !3493

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #25, !dbg !3494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #25, !dbg !3494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #25, !dbg !3494
  unreachable, !dbg !3494

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3499
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3499
  call void @llvm.dbg.value(metadata i8* %221, metadata !3262, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %40, metadata !3261, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %222, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %113, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %112, metadata !3266, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3279, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8 poison, metadata !3276, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %72, metadata !3273, metadata !DIExpression()), !dbg !3325
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3357
  call void @llvm.dbg.value(metadata i8* %223, metadata !3261, metadata !DIExpression()), !dbg !3325
  %224 = load i8, i8* %223, align 1, !dbg !3359
  %225 = icmp eq i8 %224, 0, !dbg !3360
  br i1 %225, label %226, label %38, !dbg !3361

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3500
  %228 = ptrtoint i8* %227 to i32, !dbg !3501
  %229 = sub i32 %228, %17, !dbg !3501
  %230 = lshr i32 %229, 2, !dbg !3503
  %231 = icmp ugt i32 %229, 1023, !dbg !3504
  br i1 %231, label %232, label %233, !dbg !3505

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #25, !dbg !3506
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #25, !dbg !3506
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #25, !dbg !3506
  unreachable, !dbg !3506

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3511

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3512
  %236 = add i32 %235, %229, !dbg !3515
  br label %320, !dbg !3516

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3517
  store i8 %238, i8* %0, align 1, !dbg !3518
  %239 = trunc i32 %194 to i8, !dbg !3519
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3521
  store i8 %240, i8* %242, align 1, !dbg !3523
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3524
  store i8 %241, i8* %243, align 1, !dbg !3525
  %244 = trunc i32 %193 to i8, !dbg !3526
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3527
  store i8 %244, i8* %245, align 1, !dbg !3528
  %246 = icmp eq i32 %193, 0, !dbg !3529
  %247 = xor i1 %246, true, !dbg !3530
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3530
  call void @llvm.dbg.value(metadata i8* %227, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 0, metadata !3274, metadata !DIExpression()), !dbg !3325
  br i1 %249, label %250, label %269, !dbg !3530

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3531

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %254, metadata !3274, metadata !DIExpression()), !dbg !3325
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3532
  %256 = load i8, i8* %255, align 1, !dbg !3532
  %257 = icmp sgt i8 %256, -1, !dbg !3534
  br i1 %257, label %265, label %258, !dbg !3535

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3318, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3536
  %259 = ptrtoint i8* %253 to i32, !dbg !3537
  %260 = add i32 %251, %259, !dbg !3539
  %261 = icmp ugt i32 %260, %196, !dbg !3540
  br i1 %261, label %320, label %262, !dbg !3541

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3542
  call void @llvm.dbg.value(metadata i8 %263, metadata !3318, metadata !DIExpression()), !dbg !3536
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3543
  call void @llvm.dbg.value(metadata i8* %264, metadata !3264, metadata !DIExpression()), !dbg !3325
  store i8 %263, i8* %253, align 1, !dbg !3544
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3474
  call void @llvm.dbg.value(metadata i8* %266, metadata !3264, metadata !DIExpression()), !dbg !3325
  %267 = add nuw i32 %254, 1, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %267, metadata !3274, metadata !DIExpression()), !dbg !3325
  %268 = icmp eq i32 %267, %195, !dbg !3546
  br i1 %268, label %269, label %252, !dbg !3531, !llvm.loop !3547

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3474
  call void @llvm.dbg.value(metadata i8* %270, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 0, metadata !3274, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %133, metadata !3275, metadata !DIExpression()), !dbg !3325
  %271 = icmp eq i32 %195, 0, !dbg !3549
  br i1 %271, label %316, label %272, !dbg !3552

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3552

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %276, metadata !3275, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %277, metadata !3274, metadata !DIExpression()), !dbg !3325
  br i1 %246, label %282, label %278, !dbg !3553

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3556
  %280 = load i8, i8* %279, align 1, !dbg !3556
  %281 = icmp sgt i8 %280, -1, !dbg !3557
  br i1 %281, label %282, label %311, !dbg !3558

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3559

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3265, metadata !DIExpression()), !dbg !3325
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3560
  %285 = load i8, i8* %284, align 1, !dbg !3560
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3563
  call void @llvm.dbg.value(metadata i8* %286, metadata !3264, metadata !DIExpression()), !dbg !3325
  store i8 %285, i8* %275, align 1, !dbg !3564
  br label %297, !dbg !3565

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3566
  %289 = load i8, i8* %288, align 1, !dbg !3566
  %290 = zext i8 %289 to i32, !dbg !3566
  %291 = shl nuw nsw i32 %290, 2, !dbg !3568
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3569
  %293 = bitcast i8* %292 to i8**, !dbg !3570
  %294 = load i8*, i8** %293, align 4, !dbg !3570
  call void @llvm.dbg.value(metadata i8* %294, metadata !3275, metadata !DIExpression()), !dbg !3325
  store i8* null, i8** %293, align 4, !dbg !3571
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3572
  %296 = add i32 %295, 1, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %296, metadata !3265, metadata !DIExpression()), !dbg !3325
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3325
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3574
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3325
  call void @llvm.dbg.value(metadata i8* %300, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i32 %299, metadata !3265, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %298, metadata !3275, metadata !DIExpression()), !dbg !3325
  %301 = ptrtoint i8* %300 to i32, !dbg !3575
  %302 = add i32 %273, %299, !dbg !3577
  %303 = add i32 %302, %301, !dbg !3578
  %304 = icmp ugt i32 %303, %196, !dbg !3579
  br i1 %304, label %320, label %305, !dbg !3580

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3581
  %307 = load i8, i8* %306, align 1, !dbg !3581
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3582
  call void @llvm.dbg.value(metadata i8* %308, metadata !3264, metadata !DIExpression()), !dbg !3325
  store i8 %307, i8* %300, align 1, !dbg !3583
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3584
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3585
  call void @llvm.dbg.value(metadata i8* %310, metadata !3264, metadata !DIExpression()), !dbg !3325
  br label %311, !dbg !3586

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3587
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3325
  call void @llvm.dbg.value(metadata i8* %313, metadata !3264, metadata !DIExpression()), !dbg !3325
  call void @llvm.dbg.value(metadata i8* %312, metadata !3275, metadata !DIExpression()), !dbg !3325
  %314 = add nuw i32 %277, 1, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %314, metadata !3274, metadata !DIExpression()), !dbg !3325
  %315 = icmp eq i32 %314, %195, !dbg !3549
  br i1 %315, label %316, label %274, !dbg !3552, !llvm.loop !3589

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3474
  %318 = ptrtoint i8* %317 to i32, !dbg !3591
  %319 = sub i32 %318, %17, !dbg !3591
  br label %320, !dbg !3592

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #24, !dbg !3593
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !3593
  ret i32 %321, !dbg !3593
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3598, metadata !DIExpression()), !dbg !3599
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !3600
  ret i1 %2, !dbg !3601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !3602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3607, metadata !DIExpression()), !dbg !3608
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3609
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3610
  %4 = and i1 %2, %3, !dbg !3610
  ret i1 %4, !dbg !3611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3612 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3616, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %1, metadata !3617, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i32 %2, metadata !3618, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.value(metadata i8* %3, metadata !3619, metadata !DIExpression()), !dbg !3622
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !3623
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3620, metadata !DIExpression()), !dbg !3624
  call void @llvm.va_start(i8* nonnull %6), !dbg !3625
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3626
  %8 = load i32, i32* %7, align 4, !dbg !3626
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3626
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %10, metadata !3621, metadata !DIExpression()), !dbg !3622
  call void @llvm.va_end(i8* nonnull %6), !dbg !3627
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !3628
  ret i32 %10, !dbg !3629
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3630 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3642, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3643, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8* %2, metadata !3644, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8* %3, metadata !3645, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8* %3, metadata !3646, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8* %3, metadata !3647, metadata !DIExpression()), !dbg !3661
  %5 = icmp eq i8* %3, null, !dbg !3662
  br i1 %5, label %45, label %6, !dbg !3664

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3656, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3661
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3665
  %8 = load i8, i8* %7, align 1, !dbg !3665
  %9 = zext i8 %8 to i32, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %9, metadata !3657, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i8 undef, metadata !3658, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata i8 undef, metadata !3659, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata i32 0, metadata !3655, metadata !DIExpression()), !dbg !3661
  %10 = icmp eq i8 %8, 0, !dbg !3667
  br i1 %10, label %39, label %11, !dbg !3670

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3671
  call void @llvm.dbg.value(metadata i8 %12, metadata !3656, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %13 = zext i8 %12 to i32, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %13, metadata !3656, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %14 = shl nuw nsw i32 %13, 2, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %14, metadata !3656, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3674
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3675
  %17 = load i8, i8* %16, align 1, !dbg !3675
  call void @llvm.dbg.value(metadata i8 %17, metadata !3658, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %18 = zext i8 %17 to i32, !dbg !3676
  call void @llvm.dbg.value(metadata i32 %18, metadata !3658, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3677
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3678
  %21 = load i8, i8* %20, align 1, !dbg !3678
  call void @llvm.dbg.value(metadata i8 %21, metadata !3659, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %22 = zext i8 %21 to i32, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %22, metadata !3659, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %23 = shl nuw nsw i32 %22, 1, !dbg !3680
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3653, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3661
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3681
  call void @llvm.dbg.value(metadata i8* %24, metadata !3653, metadata !DIExpression()), !dbg !3661
  br label %25, !dbg !3670

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3653, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i32 %27, metadata !3655, metadata !DIExpression()), !dbg !3661
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3682
  call void @llvm.dbg.value(metadata i8* %28, metadata !3653, metadata !DIExpression()), !dbg !3661
  %29 = load i8, i8* %26, align 1, !dbg !3684
  %30 = zext i8 %29 to i32, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %30, metadata !3660, metadata !DIExpression()), !dbg !3661
  %31 = shl nuw nsw i32 %30, 2, !dbg !3685
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3686
  %33 = bitcast i8* %32 to i8**, !dbg !3687
  call void @llvm.dbg.value(metadata i8** %33, metadata !3654, metadata !DIExpression()), !dbg !3661
  store i8* %28, i8** %33, align 4, !dbg !3688
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3689
  %35 = add i32 %34, 1, !dbg !3690
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3691
  call void @llvm.dbg.value(metadata i8* %36, metadata !3653, metadata !DIExpression()), !dbg !3661
  %37 = add nuw nsw i32 %27, 1, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %37, metadata !3655, metadata !DIExpression()), !dbg !3661
  %38 = icmp eq i32 %37, %9, !dbg !3667
  br i1 %38, label %39, label %25, !dbg !3670, !llvm.loop !3693

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3695
  call void @llvm.dbg.value(metadata i8* %40, metadata !3646, metadata !DIExpression()), !dbg !3661
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3696
  %42 = bitcast i8* %41 to i8**, !dbg !3696
  %43 = load i8*, i8** %42, align 1, !dbg !3696
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !3697
  br label %45, !dbg !3698

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3661
  ret i32 %46, !dbg !3699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3700 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3704, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3705, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %2, metadata !3706, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %3, metadata !3707, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %4, metadata !3708, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %4, metadata !3709, metadata !DIExpression()), !dbg !3714
  %6 = ptrtoint i8* %4 to i32, !dbg !3715
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3715
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3715
  ret i32 %8, !dbg !3716
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !3717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3721, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i32 %1, metadata !3722, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i8 0, metadata !3724, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i32 0, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i8 poison, metadata !3724, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i8* %0, metadata !3721, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3726
  %3 = load i8, i8* %0, align 1, !dbg !3727
  call void @llvm.dbg.value(metadata i8 %3, metadata !3723, metadata !DIExpression()), !dbg !3726
  %4 = icmp eq i8 %3, 0, !dbg !3728
  br i1 %4, label %29, label %5, !dbg !3729

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %8, metadata !3725, metadata !DIExpression()), !dbg !3726
  br i1 %9, label %11, label %22, !dbg !3731

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3733
  br i1 %12, label %13, label %17, !dbg !3737

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3738
  br i1 %14, label %29, label %15, !dbg !3741

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !3742
  br i1 %16, label %29, label %22, !dbg !3744

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !3745
  %19 = xor i1 %18, true, !dbg !3747
  %20 = zext i1 %18 to i32, !dbg !3747
  %21 = add nsw i32 %8, %20, !dbg !3747
  br label %22, !dbg !3747

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3726
  call void @llvm.dbg.value(metadata i32 %24, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i8 poison, metadata !3724, metadata !DIExpression()), !dbg !3726
  %25 = icmp eq i8 %6, 37, !dbg !3748
  %26 = xor i1 %25, %23, !dbg !3750
  call void @llvm.dbg.value(metadata i8* %10, metadata !3721, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.value(metadata i8* %10, metadata !3721, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3726
  %27 = load i8, i8* %10, align 1, !dbg !3727
  call void @llvm.dbg.value(metadata i8 %27, metadata !3723, metadata !DIExpression()), !dbg !3726
  %28 = icmp eq i8 %27, 0, !dbg !3728
  br i1 %28, label %29, label %5, !dbg !3729, !llvm.loop !3751

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3726
  ret i1 %30, !dbg !3753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !3754 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3758, metadata !DIExpression()), !dbg !3759
  %2 = add i8 %0, -64, !dbg !3760
  %3 = icmp ult i8 %2, 59, !dbg !3760
  ret i1 %3, !dbg !3761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3762 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3770, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %1, metadata !3771, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3772, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %3, metadata !3773, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %4, metadata !3774, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i16* %5, metadata !3775, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %6, metadata !3776, metadata !DIExpression()), !dbg !3839
  %11 = icmp eq i8* %0, null, !dbg !3840
  br i1 %11, label %12, label %13, !dbg !3843

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #25, !dbg !3844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #25, !dbg !3844
  unreachable, !dbg !3844

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3777, metadata !DIExpression()), !dbg !3839
  %14 = bitcast i8* %0 to i32*, !dbg !3846
  call void @llvm.dbg.value(metadata i32* %14, metadata !3778, metadata !DIExpression()), !dbg !3839
  %15 = and i32 %4, 8, !dbg !3847
  %16 = icmp eq i32 %15, 0, !dbg !3848
  call void @llvm.dbg.value(metadata i1 %16, metadata !3782, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %0, metadata !3785, metadata !DIExpression()), !dbg !3839
  %17 = icmp eq i32 %1, 0, !dbg !3849
  br i1 %17, label %18, label %20, !dbg !3850

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #26, !dbg !3851
  br label %20, !dbg !3850

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3850
  call void @llvm.dbg.value(metadata i32 %21, metadata !3771, metadata !DIExpression()), !dbg !3839
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3852
  %23 = load i8, i8* %22, align 1, !dbg !3852
  %24 = zext i8 %23 to i32, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %24, metadata !3780, metadata !DIExpression()), !dbg !3839
  %25 = icmp ne i8 %23, 0, !dbg !3854
  %26 = and i32 %4, 1, !dbg !3855
  %27 = icmp ne i32 %26, 0, !dbg !3855
  %28 = and i1 %27, %25, !dbg !3855
  call void @llvm.dbg.value(metadata i1 %28, metadata !3784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3839
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3856
  %30 = load i8, i8* %29, align 1, !dbg !3856
  %31 = zext i8 %30 to i32, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %31, metadata !3781, metadata !DIExpression()), !dbg !3839
  %32 = icmp ne i8 %30, 0, !dbg !3858
  %33 = and i32 %4, 2, !dbg !3859
  %34 = icmp ne i32 %33, 0, !dbg !3859
  %35 = and i1 %34, %32, !dbg !3859
  call void @llvm.dbg.value(metadata i1 %35, metadata !3783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3839
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3860
  br i1 %36, label %41, label %37, !dbg !3860

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3862
  br i1 %38, label %287, label %39, !dbg !3865

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3866
  br label %287, !dbg !3868

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3869
  %43 = zext i8 %42 to i32, !dbg !3870
  %44 = shl nuw nsw i32 %43, 2, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %44, metadata !3779, metadata !DIExpression()), !dbg !3839
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3872
  %46 = bitcast i8* %45 to i8**, !dbg !3873
  %47 = load i8*, i8** %46, align 4, !dbg !3873
  call void @llvm.dbg.value(metadata i8* %47, metadata !3788, metadata !DIExpression()), !dbg !3839
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %48, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 0, metadata !3790, metadata !DIExpression()), !dbg !3839
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3875
  br i1 %49, label %50, label %135, !dbg !3876

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3787, metadata !DIExpression()), !dbg !3839
  br i1 %28, label %51, label %76, !dbg !3877

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %48, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 0, metadata !3790, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 0, metadata !3791, metadata !DIExpression()), !dbg !3878
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3879

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %55, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %56, metadata !3790, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %57, metadata !3791, metadata !DIExpression()), !dbg !3878
  %58 = load i8, i8* %55, align 1, !dbg !3880
  %59 = zext i8 %58 to i32, !dbg !3881
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3881
  %61 = bitcast i32* %60 to i8**, !dbg !3882
  %62 = load i8*, i8** %61, align 4, !dbg !3882
  call void @llvm.dbg.value(metadata i8* %62, metadata !3797, metadata !DIExpression()), !dbg !3883
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #26, !dbg !3884
  call void @llvm.dbg.value(metadata i32 %63, metadata !3800, metadata !DIExpression()), !dbg !3883
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3885
  br i1 %65, label %66, label %70, !dbg !3885

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3887
  %68 = add nuw i32 %56, 1, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %68, metadata !3790, metadata !DIExpression()), !dbg !3839
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3890
  store i16 %67, i16* %69, align 2, !dbg !3891
  br label %70, !dbg !3892

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3839
  call void @llvm.dbg.value(metadata i32 %71, metadata !3790, metadata !DIExpression()), !dbg !3839
  %72 = add nsw i32 %63, %54, !dbg !3893
  call void @llvm.dbg.value(metadata i32 %72, metadata !3787, metadata !DIExpression()), !dbg !3839
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3894
  call void @llvm.dbg.value(metadata i8* %73, metadata !3789, metadata !DIExpression()), !dbg !3839
  %74 = add nuw nsw i32 %57, 1, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %74, metadata !3791, metadata !DIExpression()), !dbg !3878
  %75 = icmp eq i32 %74, %24, !dbg !3896
  br i1 %75, label %82, label %53, !dbg !3879, !llvm.loop !3897

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3899
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3899
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3899
  br label %82, !dbg !3899

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3902
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3839
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3903
  call void @llvm.dbg.value(metadata i1 undef, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3904
  call void @llvm.dbg.value(metadata i32 0, metadata !3802, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.value(metadata i32 %85, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %84, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %83, metadata !3790, metadata !DIExpression()), !dbg !3839
  %86 = icmp eq i8 %30, 0, !dbg !3906
  br i1 %86, label %287, label %87, !dbg !3907

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3908
  %89 = icmp eq i32 %88, 0, !dbg !3909
  call void @llvm.dbg.value(metadata i1 %89, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3904
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3907

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8* %96, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %97, metadata !3790, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %98, metadata !3802, metadata !DIExpression()), !dbg !3905
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3910
  call void @llvm.dbg.value(metadata i8* %99, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 undef, metadata !3804, metadata !DIExpression()), !dbg !3911
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3912
  call void @llvm.dbg.value(metadata i8* %100, metadata !3789, metadata !DIExpression()), !dbg !3839
  %101 = load i8, i8* %99, align 1, !dbg !3913
  call void @llvm.dbg.value(metadata i8 %101, metadata !3807, metadata !DIExpression()), !dbg !3911
  %102 = zext i8 %101 to i32, !dbg !3914
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3914
  %104 = bitcast i32* %103 to i8**, !dbg !3915
  %105 = load i8*, i8** %104, align 4, !dbg !3915
  call void @llvm.dbg.value(metadata i8* %105, metadata !3808, metadata !DIExpression()), !dbg !3911
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #26, !dbg !3916
  call void @llvm.dbg.value(metadata i1 %106, metadata !3809, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3911
  br i1 %16, label %113, label %107, !dbg !3917

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3919
  call void @llvm.dbg.value(metadata i8 %108, metadata !3804, metadata !DIExpression()), !dbg !3911
  %109 = zext i8 %108 to i32, !dbg !3920
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #26, !dbg !3921
  br i1 %110, label %111, label %113, !dbg !3922

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3923
  %112 = add nsw i32 %95, -2, !dbg !3929
  call void @llvm.dbg.value(metadata i32 %112, metadata !3787, metadata !DIExpression()), !dbg !3839
  br label %130, !dbg !3930

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3931

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3932

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3934
  call void @llvm.dbg.value(metadata i32 %116, metadata !3787, metadata !DIExpression()), !dbg !3839
  br label %130, !dbg !3937

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3938

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3835), !dbg !3939
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #26, !dbg !3940
  call void @llvm.dbg.value(metadata i32 %119, metadata !3810, metadata !DIExpression()), !dbg !3911
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3941
  br i1 %121, label %122, label %126, !dbg !3941

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3943
  %124 = add nuw i32 %97, 1, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %124, metadata !3790, metadata !DIExpression()), !dbg !3839
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3946
  store i16 %123, i16* %125, align 2, !dbg !3947
  br label %126, !dbg !3948

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3839
  call void @llvm.dbg.value(metadata i32 %127, metadata !3790, metadata !DIExpression()), !dbg !3839
  %128 = add i32 %95, -1, !dbg !3949
  %129 = add i32 %128, %119, !dbg !3950
  call void @llvm.dbg.value(metadata i32 %129, metadata !3787, metadata !DIExpression()), !dbg !3839
  br label %130, !dbg !3951

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3839
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3911
  call void @llvm.dbg.value(metadata i32 %132, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %131, metadata !3790, metadata !DIExpression()), !dbg !3839
  %133 = add nuw nsw i32 %98, 1, !dbg !3952
  call void @llvm.dbg.value(metadata i8* %100, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %133, metadata !3802, metadata !DIExpression()), !dbg !3905
  %134 = icmp eq i32 %133, %31, !dbg !3906
  br i1 %134, label %287, label %94, !dbg !3907, !llvm.loop !3953

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3812, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3813, metadata !DIExpression()), !dbg !3956
  br i1 %28, label %136, label %138, !dbg !3957

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3814, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 0, metadata !3815, metadata !DIExpression()), !dbg !3839
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %137, metadata !3816, metadata !DIExpression()), !dbg !3839
  br label %143, !dbg !3961

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3962
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3962

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3816, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 undef, metadata !3815, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 0, metadata !3814, metadata !DIExpression()), !dbg !3839
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3964
  br label %148, !dbg !3967

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3968
  call void @llvm.dbg.value(metadata i8* %151, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 0, metadata !3818, metadata !DIExpression()), !dbg !3969
  call void @llvm.dbg.value(metadata i8 %149, metadata !3815, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 %150, metadata !3814, metadata !DIExpression()), !dbg !3839
  %152 = icmp eq i8 %30, 0, !dbg !3970
  br i1 %152, label %153, label %155, !dbg !3971

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3972
  br label %160, !dbg !3971

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3971

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3972
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3973
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3974
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3839
  call void @llvm.dbg.value(metadata i8 undef, metadata !3811, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3839
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3975
  %166 = load i8, i8* %165, align 1, !dbg !3975
  %167 = zext i8 %162 to i32, !dbg !3976
  %168 = add i8 %166, %162, !dbg !3977
  call void @llvm.dbg.value(metadata i8 %168, metadata !3811, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3839
  %169 = icmp eq i32 %33, 0, !dbg !3978
  %170 = lshr i8 %163, 1, !dbg !3979
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3979
  call void @llvm.dbg.value(metadata i8 %171, metadata !3811, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3839
  %172 = icmp eq i32 %26, 0, !dbg !3980
  %173 = icmp eq i32 %161, 0, !dbg !3972
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3972
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3972
  call void @llvm.dbg.value(metadata i8 %175, metadata !3811, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3839
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3826, metadata !DIExpression()), !dbg !3981
  %176 = load i32, i32* %14, align 1, !dbg !3982
  store i8 %168, i8* %165, align 1, !dbg !3983
  store i8 %175, i8* %22, align 1, !dbg !3983
  store i8 %171, i8* %29, align 1, !dbg !3983
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %177, metadata !3817, metadata !DIExpression()), !dbg !3839
  %178 = icmp slt i32 %177, 0, !dbg !3985
  br i1 %178, label %287, label %240, !dbg !3987

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %181, metadata !3818, metadata !DIExpression()), !dbg !3969
  call void @llvm.dbg.value(metadata i8 %182, metadata !3815, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 %183, metadata !3814, metadata !DIExpression()), !dbg !3839
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3988
  call void @llvm.dbg.value(metadata i8* %184, metadata !3789, metadata !DIExpression()), !dbg !3839
  %185 = load i8, i8* %180, align 1, !dbg !3989
  call void @llvm.dbg.value(metadata i8 %185, metadata !3820, metadata !DIExpression()), !dbg !3990
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3991
  call void @llvm.dbg.value(metadata i8* %186, metadata !3789, metadata !DIExpression()), !dbg !3839
  %187 = load i8, i8* %184, align 1, !dbg !3992
  call void @llvm.dbg.value(metadata i8 %187, metadata !3823, metadata !DIExpression()), !dbg !3990
  %188 = zext i8 %187 to i32, !dbg !3993
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3993
  %190 = bitcast i32* %189 to i8**, !dbg !3994
  %191 = load i8*, i8** %190, align 4, !dbg !3994
  call void @llvm.dbg.value(metadata i8* %191, metadata !3824, metadata !DIExpression()), !dbg !3990
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #26, !dbg !3995
  call void @llvm.dbg.value(metadata i1 %192, metadata !3825, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3990
  br i1 %16, label %196, label %193, !dbg !3996

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3998
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #26, !dbg !3999
  br i1 %195, label %235, label %196, !dbg !4000

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4001

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4002

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4005
  br i1 %199, label %201, label %200, !dbg !4010

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4011
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4011
  unreachable, !dbg !4011

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4005
  %203 = add nuw nsw i8 %183, 1, !dbg !4013
  call void @llvm.dbg.value(metadata i8 %203, metadata !3814, metadata !DIExpression()), !dbg !3839
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4014
  br label %231, !dbg !4015

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4016

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4017
  br i1 %207, label %209, label %208, !dbg !4022

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4023
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4023
  unreachable, !dbg !4023

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4017
  %211 = add nuw nsw i8 %182, 1, !dbg !4025
  call void @llvm.dbg.value(metadata i8 %211, metadata !3815, metadata !DIExpression()), !dbg !3839
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4026
  br label %231, !dbg !4027

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4028

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4030
  br i1 %215, label %217, label %216, !dbg !4035

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4036
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4036
  unreachable, !dbg !4036

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4030
  %219 = add nuw nsw i8 %183, 1, !dbg !4038
  call void @llvm.dbg.value(metadata i8 %219, metadata !3814, metadata !DIExpression()), !dbg !3839
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4039
  br label %231, !dbg !4040

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4041
  br i1 %222, label %224, label %223, !dbg !4045

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4046
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4046
  unreachable, !dbg !4046

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4041
  %226 = add nuw nsw i8 %182, 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8 %226, metadata !3815, metadata !DIExpression()), !dbg !3839
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4049
  store i8 %185, i8* %227, align 1, !dbg !4050
  %228 = add nuw nsw i8 %182, 2, !dbg !4051
  call void @llvm.dbg.value(metadata i8 %228, metadata !3815, metadata !DIExpression()), !dbg !3839
  %229 = zext i8 %226 to i32, !dbg !4052
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4052
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4053
  br label %235, !dbg !4054

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3839
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3974
  call void @llvm.dbg.value(metadata i8 %237, metadata !3815, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i8 %236, metadata !3814, metadata !DIExpression()), !dbg !3839
  %238 = add nuw nsw i32 %181, 1, !dbg !4054
  call void @llvm.dbg.value(metadata i8* %186, metadata !3789, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 %238, metadata !3818, metadata !DIExpression()), !dbg !3969
  %239 = icmp eq i32 %238, %31, !dbg !3970
  br i1 %239, label %160, label %179, !dbg !3971, !llvm.loop !4055

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %177, metadata !3787, metadata !DIExpression()), !dbg !3839
  store i32 %176, i32* %14, align 1, !dbg !4057
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4058
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4059
  call void @llvm.dbg.value(metadata i32 %243, metadata !3817, metadata !DIExpression()), !dbg !3839
  %244 = icmp slt i32 %243, 0, !dbg !4060
  br i1 %244, label %287, label %245, !dbg !4062

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3839
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4063
  %248 = add nuw nsw i32 %44, %24, !dbg !4063
  %249 = sub i32 %247, %248, !dbg !4063
  call void @llvm.dbg.value(metadata i32 %249, metadata !3827, metadata !DIExpression()), !dbg !3839
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %250, metadata !3817, metadata !DIExpression()), !dbg !3839
  %251 = icmp slt i32 %250, 0, !dbg !4065
  br i1 %251, label %287, label %252, !dbg !4067

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4068
  call void @llvm.dbg.value(metadata i32 %253, metadata !3787, metadata !DIExpression()), !dbg !3839
  %254 = add nuw nsw i32 %253, %250, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %254, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.dbg.value(metadata i32 0, metadata !3828, metadata !DIExpression()), !dbg !4070
  %255 = icmp eq i8 %162, 0, !dbg !4071
  br i1 %255, label %284, label %256, !dbg !4072

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4072

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3828, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i32 %260, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #24, !dbg !4073
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4074
  %262 = load i8, i8* %261, align 1, !dbg !4074
  call void @llvm.dbg.value(metadata i8 %262, metadata !3830, metadata !DIExpression()), !dbg !4075
  store i8 %262, i8* %10, align 1, !dbg !4076
  %263 = zext i8 %262 to i32, !dbg !4077
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4077
  %265 = bitcast i32* %264 to i8**, !dbg !4078
  %266 = load i8*, i8** %265, align 4, !dbg !4078
  call void @llvm.dbg.value(metadata i8* %266, metadata !3833, metadata !DIExpression()), !dbg !4075
  br i1 %257, label %270, label %267, !dbg !4079

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4080
  %269 = load i16, i16* %268, align 2, !dbg !4080
  br label %270, !dbg !4079

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4079
  call void @llvm.dbg.value(metadata i32 undef, metadata !3834, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4075
  call void @llvm.dbg.value(metadata i8* %10, metadata !3830, metadata !DIExpression(DW_OP_deref)), !dbg !4075
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %272, metadata !3817, metadata !DIExpression()), !dbg !3839
  %273 = icmp slt i32 %272, 0, !dbg !4082
  br i1 %273, label %277, label %274, !dbg !4084

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3834, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3839
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #26, !dbg !4085
  call void @llvm.dbg.value(metadata i32 %275, metadata !3817, metadata !DIExpression()), !dbg !3839
  %276 = icmp slt i32 %275, 0, !dbg !4086
  br i1 %276, label %277, label %279, !dbg !4088

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #24, !dbg !4089
  call void @llvm.dbg.value(metadata i32 undef, metadata !3787, metadata !DIExpression()), !dbg !3839
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %280, metadata !3787, metadata !DIExpression()), !dbg !3839
  %281 = add nsw i32 %280, %275, !dbg !4091
  call void @llvm.dbg.value(metadata i32 %281, metadata !3787, metadata !DIExpression()), !dbg !3839
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #24, !dbg !4089
  %282 = add nuw nsw i32 %259, 1, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %282, metadata !3828, metadata !DIExpression()), !dbg !4070
  %283 = icmp eq i32 %282, %167, !dbg !4071
  br i1 %283, label %284, label %258, !dbg !4072, !llvm.loop !4093

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4069
  call void @llvm.dbg.value(metadata i32 %285, metadata !3787, metadata !DIExpression()), !dbg !3839
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4095
  br label %287, !dbg !4096

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3839
  ret i32 %288, !dbg !4097
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4102, metadata !DIExpression()), !dbg !4110
  %2 = icmp eq i8* %0, null, !dbg !4111
  br i1 %2, label %3, label %4, !dbg !4114

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #25, !dbg !4115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #25, !dbg !4115
  unreachable, !dbg !4115

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4103, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata i8* %0, metadata !4104, metadata !DIExpression()), !dbg !4110
  %5 = load i8, i8* %0, align 1, !dbg !4117
  %6 = zext i8 %5 to i32, !dbg !4117
  %7 = shl nuw nsw i32 %6, 2, !dbg !4118
  call void @llvm.dbg.value(metadata i32 %7, metadata !4105, metadata !DIExpression()), !dbg !4110
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4119
  %9 = load i8, i8* %8, align 1, !dbg !4119
  %10 = zext i8 %9 to i32, !dbg !4119
  call void @llvm.dbg.value(metadata i32 %10, metadata !4106, metadata !DIExpression()), !dbg !4110
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4120
  %12 = load i8, i8* %11, align 1, !dbg !4120
  %13 = zext i8 %12 to i32, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %13, metadata !4107, metadata !DIExpression()), !dbg !4110
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4121
  call void @llvm.dbg.value(metadata i8* %14, metadata !4103, metadata !DIExpression()), !dbg !4110
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4122
  call void @llvm.dbg.value(metadata i8* %15, metadata !4103, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata i32 0, metadata !4108, metadata !DIExpression()), !dbg !4123
  %16 = icmp eq i8 %9, 0, !dbg !4124
  br i1 %16, label %17, label %22, !dbg !4126

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4110
  %19 = ptrtoint i8* %18 to i32, !dbg !4127
  %20 = ptrtoint i8* %0 to i32, !dbg !4127
  %21 = sub i32 %19, %20, !dbg !4127
  ret i32 %21, !dbg !4128

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4108, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i8* %24, metadata !4103, metadata !DIExpression()), !dbg !4110
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4129
  call void @llvm.dbg.value(metadata i8* %25, metadata !4103, metadata !DIExpression()), !dbg !4110
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4131
  %27 = add i32 %26, 1, !dbg !4132
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %28, metadata !4103, metadata !DIExpression()), !dbg !4110
  %29 = add nuw nsw i32 %23, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %29, metadata !4108, metadata !DIExpression()), !dbg !4123
  %30 = icmp eq i32 %29, %10, !dbg !4124
  br i1 %30, label %17, label %22, !dbg !4126, !llvm.loop !4135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4137 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4141, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8* %1, metadata !4142, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8* %2, metadata !4143, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i16 %3, metadata !4144, metadata !DIExpression()), !dbg !4145
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4146
  br i1 %5, label %6, label %9, !dbg !4148

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4149
  %8 = add i32 %7, 1, !dbg !4151
  br label %20, !dbg !4152

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4153
  br i1 %10, label %13, label %11, !dbg !4154

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4154
  br label %16, !dbg !4154

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4155
  %15 = add i32 %14, 1, !dbg !4156
  br label %16, !dbg !4154

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4154
  %18 = and i32 %17, 65535, !dbg !4157
  call void @llvm.dbg.value(metadata i32 %17, metadata !4144, metadata !DIExpression()), !dbg !4145
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4158
  br label %20, !dbg !4159

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4145
  ret i32 %21, !dbg !4160
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4163, metadata !DIExpression()), !dbg !4164
  ret i32 0, !dbg !4165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4166 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4170, metadata !DIExpression()), !dbg !4171
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4172
  ret void, !dbg !4173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4174 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4177
  ret i8* %1, !dbg !4178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4179 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4190, metadata !DIExpression()), !dbg !4199
  call void @llvm.dbg.value(metadata i8* %0, metadata !4189, metadata !DIExpression()), !dbg !4199
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4200
  ret void, !dbg !4202
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4207, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i8* %1, metadata !4208, metadata !DIExpression()), !dbg !4209
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4210
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4210
  ret i32 %4, !dbg !4211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4212 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4219, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4216, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i8* %1, metadata !4217, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i8* %2, metadata !4218, metadata !DIExpression()), !dbg !4220
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4221
  ret void, !dbg !4222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4223 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4227, metadata !DIExpression()), !dbg !4230
  call void @llvm.dbg.value(metadata i32 %1, metadata !4228, metadata !DIExpression()), !dbg !4230
  call void @llvm.dbg.value(metadata i32 0, metadata !4229, metadata !DIExpression()), !dbg !4230
  %3 = icmp eq i32 %1, 0, !dbg !4231
  br i1 %3, label %13, label %4, !dbg !4234

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4229, metadata !DIExpression()), !dbg !4230
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4235
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4237
  %8 = load i8, i8* %7, align 1, !dbg !4237
  %9 = zext i8 %8 to i32, !dbg !4237
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4235
  %11 = add nuw i32 %5, 1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %11, metadata !4229, metadata !DIExpression()), !dbg !4230
  %12 = icmp eq i32 %11, %1, !dbg !4231
  br i1 %12, label %13, label %4, !dbg !4234, !llvm.loop !4239

13:                                               ; preds = %4, %2
  ret void, !dbg !4241
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4242 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4246, metadata !DIExpression()), !dbg !4248
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !4249
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4247, metadata !DIExpression()), !dbg !4250
  call void @llvm.va_start(i8* nonnull %3), !dbg !4251
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4252
  %5 = load i32, i32* %4, align 4, !dbg !4252
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4252
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4252
  call void @llvm.va_end(i8* nonnull %3), !dbg !4253
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !4254
  ret void, !dbg !4254
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4255 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4259, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i32 %1, metadata !4260, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.value(metadata i8* %2, metadata !4261, metadata !DIExpression()), !dbg !4264
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !4265
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4262, metadata !DIExpression()), !dbg !4266
  call void @llvm.va_start(i8* nonnull %5), !dbg !4267
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4268
  %7 = load i32, i32* %6, align 4, !dbg !4268
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4268
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %9, metadata !4263, metadata !DIExpression()), !dbg !4264
  call void @llvm.va_end(i8* nonnull %5), !dbg !4269
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !4270
  ret i32 %9, !dbg !4271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4272 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4279, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i8* %0, metadata !4276, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i32 %1, metadata !4277, metadata !DIExpression()), !dbg !4286
  call void @llvm.dbg.value(metadata i8* %2, metadata !4278, metadata !DIExpression()), !dbg !4286
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4287
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !4287
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4280, metadata !DIExpression()), !dbg !4288
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4289
  store i8* %0, i8** %7, align 4, !dbg !4289
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4289
  store i32 %1, i32* %8, align 4, !dbg !4289
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4289
  store i32 0, i32* %9, align 4, !dbg !4289
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4290
  %10 = load i32, i32* %9, align 4, !dbg !4291
  %11 = load i32, i32* %8, align 4, !dbg !4293
  %12 = icmp slt i32 %10, %11, !dbg !4294
  br i1 %12, label %13, label %15, !dbg !4295

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4296
  store i8 0, i8* %14, align 1, !dbg !4298
  br label %15, !dbg !4299

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !4300
  ret i32 %10, !dbg !4301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !4302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4307, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4308, metadata !DIExpression()), !dbg !4309
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4310
  %4 = load i8*, i8** %3, align 4, !dbg !4310
  %5 = icmp eq i8* %4, null, !dbg !4312
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4313
  br i1 %5, label %12, label %8, !dbg !4314

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4315
  %10 = load i32, i32* %9, align 4, !dbg !4315
  %11 = icmp slt i32 %7, %10, !dbg !4316
  br i1 %11, label %15, label %12, !dbg !4317

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4318
  %14 = add nsw i32 %7, 1, !dbg !4320
  store i32 %14, i32* %13, align 4, !dbg !4320
  br label %25, !dbg !4321

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4322
  %17 = icmp eq i32 %7, %16, !dbg !4324
  br i1 %17, label %18, label %21, !dbg !4325

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4326
  store i32 %19, i32* %6, align 4, !dbg !4326
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4328
  store i8 0, i8* %20, align 1, !dbg !4329
  br label %25, !dbg !4330

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4331
  %23 = add nsw i32 %7, 1, !dbg !4333
  store i32 %23, i32* %6, align 4, !dbg !4333
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4334
  store i8 %22, i8* %24, align 1, !dbg !4335
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4336
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4337 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4342, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i8* %1, metadata !4343, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i8* %2, metadata !4344, metadata !DIExpression()), !dbg !4346
  call void @llvm.dbg.value(metadata i8* %3, metadata !4345, metadata !DIExpression()), !dbg !4346
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4347
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #27, !dbg !4348
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4349
  unreachable, !dbg !4350
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !4351 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #27, !dbg !4457
  ret %struct.k_thread* %1, !dbg !4458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4459 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4463, metadata !DIExpression()), !dbg !4464
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !4465, !srcloc !4467
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4468
  ret void, !dbg !4469
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !4470 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !4471, !srcloc !4473
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4474
  ret %struct.k_thread* %1, !dbg !4475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !4476 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4487, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i8* %1, metadata !4488, metadata !DIExpression()), !dbg !4491
  %3 = icmp eq i8* %1, null, !dbg !4492
  br i1 %3, label %16, label %4, !dbg !4494

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4495
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4495
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4489, metadata !DIExpression()), !dbg !4491
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4496, !range !4497
  call void @llvm.dbg.value(metadata i32 %7, metadata !4490, metadata !DIExpression()), !dbg !4491
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4498
  br i1 %8, label %10, label %9, !dbg !4501

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #25, !dbg !4502
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #25, !dbg !4502
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #25, !dbg !4502
  unreachable, !dbg !4502

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4504
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #26, !dbg !4504
  %13 = icmp eq i32 %12, %7, !dbg !4504
  br i1 %13, label %15, label %14, !dbg !4507

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #25, !dbg !4508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #25, !dbg !4508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #25, !dbg !4508
  unreachable, !dbg !4508

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4510
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4511
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !4512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !4513 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4517, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.value(metadata i8* %1, metadata !4518, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.value(metadata i8* %1, metadata !4519, metadata !DIExpression()), !dbg !4521
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4522
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4520, metadata !DIExpression()), !dbg !4521
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4523
  %5 = ptrtoint i8* %4 to i32, !dbg !4524
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4524
  %7 = sub i32 %5, %6, !dbg !4524
  %8 = lshr i32 %7, 3, !dbg !4525
  ret i32 %8, !dbg !4526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4527 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4531, metadata !DIExpression()), !dbg !4533
  call void @llvm.dbg.value(metadata i32 %1, metadata !4532, metadata !DIExpression()), !dbg !4533
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4534
  %4 = and i32 %3, 1, !dbg !4535
  %5 = icmp ne i32 %4, 0, !dbg !4534
  ret i1 %5, !dbg !4536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4537 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4541, metadata !DIExpression()), !dbg !4543
  call void @llvm.dbg.value(metadata i32 %1, metadata !4542, metadata !DIExpression()), !dbg !4543
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4544
  %4 = add i32 %3, %1, !dbg !4545
  ret i32 %4, !dbg !4546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4547 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4549, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i32 %1, metadata !4550, metadata !DIExpression()), !dbg !4551
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4552
  %4 = sub i32 %1, %3, !dbg !4553
  ret i32 %4, !dbg !4554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !4555 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4559, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i32 %1, metadata !4560, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i1 %2, metadata !4561, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4564
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4565
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4562, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4563, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4566
  %6 = bitcast i8* %5 to i16*, !dbg !4566
  %7 = load i16, i16* %6, align 2, !dbg !4566
  %8 = and i16 %7, -2, !dbg !4570
  %9 = zext i1 %2 to i16, !dbg !4570
  %10 = or i16 %8, %9, !dbg !4570
  store i16 %10, i16* %6, align 2, !dbg !4566
  ret void, !dbg !4571
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !4572 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4576, metadata !DIExpression()), !dbg !4578
  call void @llvm.dbg.value(metadata i32 %1, metadata !4577, metadata !DIExpression()), !dbg !4578
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4579
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4581
  br i1 %4, label %7, label %5, !dbg !4582

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4583
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4585
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4586
  br label %7, !dbg !4587

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4588
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4590
  br i1 %9, label %13, label %10, !dbg !4591

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4592
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4594
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4595
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %12, metadata !4577, metadata !DIExpression()), !dbg !4578
  br label %13, !dbg !4597

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4577, metadata !DIExpression()), !dbg !4578
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4598
  ret void, !dbg !4599
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !4600 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4602, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 %1, metadata !4603, metadata !DIExpression()), !dbg !4607
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4608, !range !4609
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %4, metadata !4604, metadata !DIExpression()), !dbg !4611
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4612
  ret void, !dbg !4613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !4614 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4618, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.value(metadata i32 %1, metadata !4619, metadata !DIExpression()), !dbg !4623
  call void @llvm.dbg.value(metadata i32 %2, metadata !4620, metadata !DIExpression()), !dbg !4623
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4624
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4625
  %6 = add i32 %5, %4, !dbg !4626
  call void @llvm.dbg.value(metadata i32 %6, metadata !4621, metadata !DIExpression()), !dbg !4623
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4627
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4628
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4629
  ret void, !dbg !4630
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !4631 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4633, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.value(metadata i32 %1, metadata !4634, metadata !DIExpression()), !dbg !4638
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4639, !range !4609
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %4, metadata !4635, metadata !DIExpression()), !dbg !4641
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4642
  ret void, !dbg !4643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4644 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4648, metadata !DIExpression()), !dbg !4650
  call void @llvm.dbg.value(metadata i32 %1, metadata !4649, metadata !DIExpression()), !dbg !4650
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4651
  %4 = lshr i32 %3, 1, !dbg !4652
  ret i32 %4, !dbg !4653
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !4654 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4658, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.value(metadata i32 %1, metadata !4659, metadata !DIExpression()), !dbg !4661
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4662
  %4 = add i32 %1, 1, !dbg !4663
  %5 = sub i32 %4, %3, !dbg !4664
  call void @llvm.dbg.value(metadata i32 %5, metadata !4660, metadata !DIExpression()), !dbg !4661
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4665, !range !4666
  %7 = sub nsw i32 31, %6, !dbg !4667
  ret i32 %7, !dbg !4668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !4669 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4673, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %1, metadata !4674, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32 %2, metadata !4675, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4676, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4682
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4683
  %5 = load i32, i32* %4, align 4, !dbg !4683
  %6 = icmp eq i32 %5, 0, !dbg !4684
  br i1 %6, label %7, label %12, !dbg !4685

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4686
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4688
  %10 = load i32, i32* %9, align 4, !dbg !4689
  %11 = or i32 %10, %8, !dbg !4689
  store i32 %11, i32* %9, align 4, !dbg !4689
  store i32 %1, i32* %4, align 4, !dbg !4690
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4691
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4692
  br label %14, !dbg !4693

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4678, metadata !DIExpression()), !dbg !4694
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4695, !range !4696
  call void @llvm.dbg.value(metadata i32 %13, metadata !4681, metadata !DIExpression()), !dbg !4694
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4697
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4698
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4699
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4700
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !4702 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4704, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i32 %1, metadata !4705, metadata !DIExpression()), !dbg !4707
  call void @llvm.dbg.value(metadata i32 %2, metadata !4706, metadata !DIExpression()), !dbg !4707
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4708
  ret void, !dbg !4709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !4710 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4712, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %1, metadata !4713, metadata !DIExpression()), !dbg !4715
  call void @llvm.dbg.value(metadata i32 %2, metadata !4714, metadata !DIExpression()), !dbg !4715
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4716
  ret void, !dbg !4717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !4718 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4720, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i32 %1, metadata !4721, metadata !DIExpression()), !dbg !4722
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4723
  ret i32 %3, !dbg !4724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !4725 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4729, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i32 %1, metadata !4730, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata i32 %2, metadata !4731, metadata !DIExpression()), !dbg !4734
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4735
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4732, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4734
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4734
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %5, metadata !4733, metadata !DIExpression()), !dbg !4734
  %6 = bitcast i8* %5 to i16*, !dbg !4737
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4740
  %8 = load i16, i16* %7, align 2, !dbg !4740
  %9 = zext i16 %8 to i32, !dbg !4740
  ret i32 %9, !dbg !4741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !4742 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4746, metadata !DIExpression()), !dbg !4747
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4748
  ret %struct.chunk_unit_t* %2, !dbg !4749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !4750 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4754, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %1, metadata !4755, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %2, metadata !4756, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %3, metadata !4757, metadata !DIExpression()), !dbg !4760
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4761
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4758, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4760
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %6, metadata !4759, metadata !DIExpression()), !dbg !4760
  %7 = trunc i32 %3 to i16, !dbg !4763
  %8 = bitcast i8* %6 to i16*, !dbg !4766
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4767
  store i16 %7, i16* %9, align 2, !dbg !4768
  ret void, !dbg !4769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !4770 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4774, metadata !DIExpression()), !dbg !4775
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4776
  ret i32 %2, !dbg !4777
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !4778 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4782, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i32 %1, metadata !4783, metadata !DIExpression()), !dbg !4784
  %3 = add i32 %1, 4, !dbg !4785
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4786
  ret i32 %4, !dbg !4787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !4788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4792, metadata !DIExpression()), !dbg !4793
  %2 = add i32 %0, 7, !dbg !4794
  %3 = lshr i32 %2, 3, !dbg !4795
  ret i32 %3, !dbg !4796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !4797 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4801, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %1, metadata !4802, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.value(metadata i32 %2, metadata !4803, metadata !DIExpression()), !dbg !4804
  %4 = shl i32 %2, 1, !dbg !4805
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4806
  ret void, !dbg !4807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !4808 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4810, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i32 %1, metadata !4811, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.value(metadata i32 %2, metadata !4812, metadata !DIExpression()), !dbg !4813
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4814
  ret void, !dbg !4815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !4816 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4818, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %1, metadata !4819, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %2, metadata !4820, metadata !DIExpression()), !dbg !4826
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !4821, metadata !DIExpression()), !dbg !4826
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4828
  %6 = icmp eq i32 %5, %1, !dbg !4829
  br i1 %6, label %7, label %14, !dbg !4830

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4831
  %9 = xor i32 %8, -1, !dbg !4833
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4834
  %11 = load i32, i32* %10, align 4, !dbg !4835
  %12 = and i32 %11, %9, !dbg !4835
  store i32 %12, i32* %10, align 4, !dbg !4835
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !4836
  store i32 0, i32* %13, align 4, !dbg !4837
  br label %17, !dbg !4838

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4839
  call void @llvm.dbg.value(metadata i32 %15, metadata !4822, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i32 %5, metadata !4825, metadata !DIExpression()), !dbg !4840
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !4841
  store i32 %5, i32* %16, align 4, !dbg !4842
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4843
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4844
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !4846 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4848, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.value(metadata i32 %1, metadata !4849, metadata !DIExpression()), !dbg !4850
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4851
  ret i32 %3, !dbg !4852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !4853 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4857, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.value(metadata i8* %1, metadata !4858, metadata !DIExpression()), !dbg !4864
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4865
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4865
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4859, metadata !DIExpression()), !dbg !4864
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %5, metadata !4860, metadata !DIExpression()), !dbg !4864
  %6 = ptrtoint i8* %1 to i32, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %6, metadata !4861, metadata !DIExpression()), !dbg !4864
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4868
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4868
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4869
  call void @llvm.dbg.value(metadata i32 %9, metadata !4862, metadata !DIExpression()), !dbg !4864
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4870
  %11 = shl i32 %10, 3, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %11, metadata !4863, metadata !DIExpression()), !dbg !4864
  %12 = sub i32 %9, %6, !dbg !4872
  %13 = add i32 %12, %11, !dbg !4873
  ret i32 %13, !dbg !4874
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4875 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4879, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 %1, metadata !4880, metadata !DIExpression()), !dbg !4885
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4886
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4886
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4881, metadata !DIExpression()), !dbg !4885
  %5 = icmp eq i32 %1, 0, !dbg !4887
  br i1 %5, label %19, label %6, !dbg !4889

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4890
  br i1 %7, label %19, label %8, !dbg !4891

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4892, !range !4497
  call void @llvm.dbg.value(metadata i32 %9, metadata !4883, metadata !DIExpression()), !dbg !4885
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %10, metadata !4884, metadata !DIExpression()), !dbg !4885
  %11 = icmp eq i32 %10, 0, !dbg !4894
  br i1 %11, label %19, label %12, !dbg !4896

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4897
  %14 = icmp ugt i32 %13, %9, !dbg !4899
  br i1 %14, label %15, label %17, !dbg !4900

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4901
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4903
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4904
  br label %17, !dbg !4905

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4906
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4907
  call void @llvm.dbg.value(metadata i8* %18, metadata !4882, metadata !DIExpression()), !dbg !4885
  br label %19, !dbg !4908

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4885
  ret i8* %20, !dbg !4909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !4910 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4914, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 %1, metadata !4915, metadata !DIExpression()), !dbg !4916
  %3 = lshr i32 %1, 3, !dbg !4917
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4918
  %5 = load i32, i32* %4, align 4, !dbg !4918
  %6 = icmp uge i32 %3, %5, !dbg !4919
  ret i1 %6, !dbg !4920
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !4921 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4925, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i32 %1, metadata !4926, metadata !DIExpression()), !dbg !4940
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %3, metadata !4927, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4928, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4940
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4942
  %5 = load i32, i32* %4, align 4, !dbg !4942
  %6 = icmp eq i32 %5, 0, !dbg !4943
  br i1 %6, label %19, label %7, !dbg !4944

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4945
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4946
  call void @llvm.dbg.value(metadata i32 %9, metadata !4932, metadata !DIExpression()), !dbg !4946
  call void @llvm.dbg.value(metadata i32 %8, metadata !4933, metadata !DIExpression()), !dbg !4947
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4948
  %11 = icmp ult i32 %10, %1, !dbg !4950
  br i1 %11, label %13, label %12, !dbg !4951

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4952
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4954
  store i32 %14, i32* %4, align 4, !dbg !4955
  %15 = add nsw i32 %9, -1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %15, metadata !4932, metadata !DIExpression()), !dbg !4946
  %16 = icmp eq i32 %15, 0, !dbg !4956
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4957
  br i1 %18, label %19, label %7, !dbg !4957, !llvm.loop !4958

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4961
  %21 = load i32, i32* %20, align 4, !dbg !4961
  %22 = add nsw i32 %3, 1, !dbg !4962
  %23 = shl nsw i32 -1, %22, !dbg !4962
  %24 = and i32 %21, %23, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %24, metadata !4935, metadata !DIExpression()), !dbg !4940
  %25 = icmp eq i32 %24, 0, !dbg !4964
  br i1 %25, label %30, label %26, !dbg !4965

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4966, !range !4666
  call void @llvm.dbg.value(metadata i32 %27, metadata !4936, metadata !DIExpression()), !dbg !4967
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4968
  %29 = load i32, i32* %28, align 4, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %29, metadata !4939, metadata !DIExpression()), !dbg !4967
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4969
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4940
  ret i32 %31, !dbg !4970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !4971 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4973, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i32 %1, metadata !4974, metadata !DIExpression()), !dbg !4979
  call void @llvm.dbg.value(metadata i32 %2, metadata !4975, metadata !DIExpression()), !dbg !4979
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4980
  call void @llvm.dbg.value(metadata i32 %4, metadata !4976, metadata !DIExpression()), !dbg !4979
  %5 = sub i32 %2, %1, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %5, metadata !4977, metadata !DIExpression()), !dbg !4979
  %6 = sub i32 %4, %5, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %6, metadata !4978, metadata !DIExpression()), !dbg !4979
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4983
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4984
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4985
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4986
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4987
  ret void, !dbg !4988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !4989 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4993, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i32 %1, metadata !4994, metadata !DIExpression()), !dbg !4997
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4998
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4995, metadata !DIExpression()), !dbg !4997
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4999
  call void @llvm.dbg.value(metadata i8* %4, metadata !4996, metadata !DIExpression()), !dbg !4997
  ret i8* %4, !dbg !5000
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5001 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5005, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i32 %1, metadata !5006, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i32 %2, metadata !5007, metadata !DIExpression()), !dbg !5017
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5018
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5018
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5008, metadata !DIExpression()), !dbg !5017
  %6 = sub i32 0, %1, !dbg !5019
  %7 = and i32 %6, %1, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %7, metadata !5010, metadata !DIExpression()), !dbg !5017
  %8 = icmp eq i32 %7, %1, !dbg !5021
  br i1 %8, label %13, label %9, !dbg !5023

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %10, metadata !5006, metadata !DIExpression()), !dbg !5017
  %11 = icmp ult i32 %7, 4, !dbg !5026
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5026
  br label %17, !dbg !5026

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5027
  br i1 %14, label %15, label %17, !dbg !5030

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5031
  br label %61, !dbg !5033

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5017
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5034
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5006, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i32 %19, metadata !5009, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i32 %18, metadata !5010, metadata !DIExpression()), !dbg !5017
  %21 = add i32 %20, -1, !dbg !5035
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5035, !range !4666
  %23 = icmp ult i32 %22, 2, !dbg !5035
  br i1 %23, label %25, label %24, !dbg !5038

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #25, !dbg !5039
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #25, !dbg !5039
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #25, !dbg !5039
  unreachable, !dbg !5039

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5041
  br i1 %26, label %61, label %27, !dbg !5043

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5044
  br i1 %28, label %61, label %29, !dbg !5045

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5046
  %31 = add i32 %30, %20, !dbg !5047
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #26, !dbg !5048, !range !4497
  call void @llvm.dbg.value(metadata i32 %32, metadata !5011, metadata !DIExpression()), !dbg !5017
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #26, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %33, metadata !5012, metadata !DIExpression()), !dbg !5017
  %34 = icmp eq i32 %33, 0, !dbg !5050
  br i1 %34, label %61, label %35, !dbg !5052

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !5053
  call void @llvm.dbg.value(metadata i8* %36, metadata !5013, metadata !DIExpression()), !dbg !5017
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5054
  %38 = ptrtoint i8* %37 to i32, !dbg !5054
  %39 = add i32 %21, %38, !dbg !5054
  %40 = sub i32 0, %20, !dbg !5054
  %41 = and i32 %39, %40, !dbg !5054
  %42 = inttoptr i32 %41 to i8*, !dbg !5055
  %43 = sub i32 0, %18, !dbg !5056
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %44, metadata !5013, metadata !DIExpression()), !dbg !5017
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5057
  %46 = ptrtoint i8* %45 to i32, !dbg !5057
  %47 = add i32 %46, 7, !dbg !5057
  %48 = and i32 %47, -8, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %48, metadata !5014, metadata !DIExpression()), !dbg !5017
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #26, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %49, metadata !5015, metadata !DIExpression()), !dbg !5017
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5059
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5060
  %52 = sub i32 %48, %51, !dbg !5060
  %53 = ashr exact i32 %52, 3, !dbg !5060
  call void @llvm.dbg.value(metadata i32 %53, metadata !5016, metadata !DIExpression()), !dbg !5017
  %54 = icmp ugt i32 %49, %33, !dbg !5061
  br i1 %54, label %55, label %56, !dbg !5063

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #26, !dbg !5064
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !5066
  br label %56, !dbg !5067

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5068
  %58 = icmp ugt i32 %57, %53, !dbg !5070
  br i1 %58, label %59, label %60, !dbg !5071

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #26, !dbg !5072
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #26, !dbg !5074
  br label %60, !dbg !5075

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #26, !dbg !5076
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5017
  ret i8* %62, !dbg !5077
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5078 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5082, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i8* %1, metadata !5083, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32 %2, metadata !5084, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.value(metadata i32 %3, metadata !5085, metadata !DIExpression()), !dbg !5101
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5102
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5102
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5086, metadata !DIExpression()), !dbg !5101
  %7 = icmp eq i8* %1, null, !dbg !5103
  br i1 %7, label %8, label %10, !dbg !5105

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5106
  br label %63, !dbg !5108

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5109
  br i1 %11, label %12, label %13, !dbg !5111

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5112
  br label %63, !dbg !5114

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5115
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5115, !range !4666
  %16 = icmp ult i32 %15, 2, !dbg !5115
  br i1 %16, label %18, label %17, !dbg !5118

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #25, !dbg !5119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #25, !dbg !5119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #25, !dbg !5119
  unreachable, !dbg !5119

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5121
  br i1 %19, label %63, label %20, !dbg !5123

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5124, !range !4497
  call void @llvm.dbg.value(metadata i32 %21, metadata !5087, metadata !DIExpression()), !dbg !5101
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %22, metadata !5088, metadata !DIExpression()), !dbg !5101
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5126
  %24 = ptrtoint i8* %1 to i32, !dbg !5127
  %25 = ptrtoint i8* %23 to i32, !dbg !5127
  %26 = sub i32 %24, %25, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %26, metadata !5089, metadata !DIExpression()), !dbg !5101
  %27 = add i32 %26, %3, !dbg !5128
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #26, !dbg !5129
  call void @llvm.dbg.value(metadata i32 %28, metadata !5090, metadata !DIExpression()), !dbg !5101
  %29 = icmp eq i32 %2, 0, !dbg !5130
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5131
  br i1 %32, label %33, label %53, !dbg !5131

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5132
  %35 = icmp eq i32 %28, %34, !dbg !5133
  br i1 %35, label %63, label %36, !dbg !5134

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5135
  br i1 %37, label %38, label %40, !dbg !5136

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5137
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #26, !dbg !5139
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !5140
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #26, !dbg !5141
  br label %63, !dbg !5142

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5143
  br i1 %41, label %53, label %42, !dbg !5144

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5145
  %44 = add i32 %43, %34, !dbg !5146
  %45 = icmp ult i32 %44, %28, !dbg !5147
  br i1 %45, label %53, label %46, !dbg !5148

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %47, metadata !5091, metadata !DIExpression()), !dbg !5150
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5151
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5152
  %49 = icmp ult i32 %47, %48, !dbg !5154
  br i1 %49, label %50, label %52, !dbg !5155

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5156
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #26, !dbg !5158
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !5159
  br label %52, !dbg !5160

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #26, !dbg !5161
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !5162
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5163
  call void @llvm.dbg.value(metadata i8* %54, metadata !5097, metadata !DIExpression()), !dbg !5101
  %55 = icmp eq i8* %54, null, !dbg !5164
  br i1 %55, label %63, label %56, !dbg !5165

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5166, !range !4609
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #26, !dbg !5167
  %59 = sub i32 %58, %26, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %59, metadata !5098, metadata !DIExpression()), !dbg !5169
  %60 = icmp ult i32 %59, %3, !dbg !5170
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5170
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #25, !dbg !5171
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5172
  br label %63, !dbg !5173

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5101
  ret i8* %64, !dbg !5174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5175 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5179, metadata !DIExpression()), !dbg !5181
  call void @llvm.dbg.value(metadata i32 %1, metadata !5180, metadata !DIExpression()), !dbg !5181
  %3 = shl i32 %1, 3, !dbg !5182
  %4 = add i32 %3, -4, !dbg !5183
  ret i32 %4, !dbg !5184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5185 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5189, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i8* %1, metadata !5190, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.value(metadata i32 %2, metadata !5191, metadata !DIExpression()), !dbg !5200
  %4 = icmp ult i32 %2, 262144, !dbg !5201
  br i1 %4, label %6, label %5, !dbg !5206

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #25, !dbg !5207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #25, !dbg !5207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #25, !dbg !5207
  unreachable, !dbg !5207

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5209
  br i1 %7, label %9, label %8, !dbg !5212

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #25, !dbg !5213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #25, !dbg !5213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #25, !dbg !5213
  unreachable, !dbg !5213

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5215
  call void @llvm.dbg.value(metadata i32 %10, metadata !5191, metadata !DIExpression()), !dbg !5200
  %11 = ptrtoint i8* %1 to i32, !dbg !5216
  %12 = add i32 %11, 7, !dbg !5216
  %13 = and i32 %12, -8, !dbg !5216
  call void @llvm.dbg.value(metadata i32 %13, metadata !5192, metadata !DIExpression()), !dbg !5200
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5217
  %15 = ptrtoint i8* %14 to i32, !dbg !5217
  %16 = and i32 %15, -8, !dbg !5217
  call void @llvm.dbg.value(metadata i32 %16, metadata !5193, metadata !DIExpression()), !dbg !5200
  %17 = sub i32 %16, %13, !dbg !5218
  %18 = lshr exact i32 %17, 3, !dbg !5219
  call void @llvm.dbg.value(metadata i32 %18, metadata !5194, metadata !DIExpression()), !dbg !5200
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #26, !dbg !5220
  %20 = icmp ugt i32 %18, %19, !dbg !5220
  br i1 %20, label %22, label %21, !dbg !5223

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #25, !dbg !5224
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #25, !dbg !5224
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #25, !dbg !5224
  unreachable, !dbg !5224

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5226
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5195, metadata !DIExpression()), !dbg !5200
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5227
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5228
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5229
  store i32 %18, i32* %25, align 8, !dbg !5230
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5231
  store i32 0, i32* %26, align 4, !dbg !5232
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #26, !dbg !5233
  call void @llvm.dbg.value(metadata i32 %27, metadata !5196, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5200
  %28 = shl i32 %27, 2, !dbg !5234
  %29 = add i32 %28, 20, !dbg !5235
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #26, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %30, metadata !5197, metadata !DIExpression()), !dbg !5200
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #26, !dbg !5237
  %32 = add i32 %31, %30, !dbg !5237
  %33 = icmp ugt i32 %32, %18, !dbg !5237
  br i1 %33, label %36, label %34, !dbg !5240

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5198, metadata !DIExpression()), !dbg !5241
  %35 = icmp slt i32 %27, 0, !dbg !5242
  br i1 %35, label %37, label %39, !dbg !5244

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #25, !dbg !5245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #25, !dbg !5245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #25, !dbg !5245
  unreachable, !dbg !5245

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #26, !dbg !5247
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #26, !dbg !5248
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5249
  %38 = sub i32 %18, %30, !dbg !5250
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #26, !dbg !5251
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #26, !dbg !5252
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #26, !dbg !5253
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #26, !dbg !5254
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #26, !dbg !5255
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #26, !dbg !5256
  ret void, !dbg !5257

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5198, metadata !DIExpression()), !dbg !5241
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5258
  store i32 0, i32* %41, align 4, !dbg !5260
  %42 = add nuw i32 %40, 1, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %42, metadata !5198, metadata !DIExpression()), !dbg !5241
  %43 = icmp eq i32 %40, %27, !dbg !5242
  br i1 %43, label %37, label %39, !dbg !5244, !llvm.loop !5262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5264 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5277, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5274, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %1, metadata !5275, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %2, metadata !5276, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %4, metadata !5278, metadata !DIExpression()), !dbg !5403
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5404
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5404
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5279, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata i32 0, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i1 undef, metadata !5285, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5403
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5406

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5406

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5407
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5277, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %30, metadata !5276, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %29, metadata !5283, metadata !DIExpression()), !dbg !5403
  %31 = load i8, i8* %30, align 1, !dbg !5408
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5406

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5408
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5409
  call void @llvm.dbg.value(metadata i8* %34, metadata !5276, metadata !DIExpression()), !dbg !5403
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5409
  call void @llvm.dbg.value(metadata i32 %35, metadata !5287, metadata !DIExpression()), !dbg !5410
  %36 = icmp slt i32 %35, 0, !dbg !5411
  %37 = add i32 %29, 1, !dbg !5409
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %36, label %365, label %28, !llvm.loop !5413

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5415
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5292, metadata !DIExpression()), !dbg !5416
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5416
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5335, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5338, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* %30, metadata !5341, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 -1, metadata !5342, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 -1, metadata !5343, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* null, metadata !5344, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* %14, metadata !5345, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 0, metadata !5346, metadata !DIExpression()), !dbg !5417
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5418
  call void @llvm.dbg.value(metadata i8* %39, metadata !5276, metadata !DIExpression()), !dbg !5403
  %40 = load i24, i24* %15, align 8, !dbg !5419
  %41 = and i24 %40, 256, !dbg !5419
  %42 = icmp eq i24 %41, 0, !dbg !5419
  br i1 %42, label %51, label %43, !dbg !5421

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5422
  call void @llvm.dbg.value(metadata i8* %44, metadata !5277, metadata !DIExpression()), !dbg !5403
  %45 = bitcast i8* %27 to i32*, !dbg !5422
  %46 = load i32, i32* %45, align 4, !dbg !5422
  call void @llvm.dbg.value(metadata i32 %46, metadata !5342, metadata !DIExpression()), !dbg !5417
  %47 = icmp slt i32 %46, 0, !dbg !5424
  br i1 %47, label %48, label %56, !dbg !5426

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5427
  store i24 %49, i24* %15, align 8, !dbg !5427
  %50 = sub nsw i32 0, %46, !dbg !5429
  call void @llvm.dbg.value(metadata i32 %50, metadata !5342, metadata !DIExpression()), !dbg !5417
  br label %56, !dbg !5430

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5431
  %53 = icmp eq i24 %52, 0, !dbg !5431
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5433
  br label %56, !dbg !5433

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5434
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5417
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5277, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %58, metadata !5342, metadata !DIExpression()), !dbg !5417
  %60 = and i24 %57, 1024, !dbg !5434
  %61 = icmp eq i24 %60, 0, !dbg !5434
  br i1 %61, label %69, label %62, !dbg !5435

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5436
  call void @llvm.dbg.value(metadata i8* %63, metadata !5277, metadata !DIExpression()), !dbg !5403
  %64 = bitcast i8* %59 to i32*, !dbg !5436
  %65 = load i32, i32* %64, align 4, !dbg !5436
  call void @llvm.dbg.value(metadata i32 %65, metadata !5347, metadata !DIExpression()), !dbg !5437
  %66 = icmp slt i32 %65, 0, !dbg !5438
  br i1 %66, label %67, label %74, !dbg !5440

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5441
  store i24 %68, i24* %15, align 8, !dbg !5441
  br label %74, !dbg !5443

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5444
  %71 = icmp eq i24 %70, 0, !dbg !5444
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5446
  br label %74, !dbg !5446

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5447
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5417
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5417
  call void @llvm.dbg.value(metadata i8* %77, metadata !5277, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %76, metadata !5343, metadata !DIExpression()), !dbg !5417
  store i32 0, i32* %16, align 4, !dbg !5448
  store i32 0, i32* %17, align 8, !dbg !5449
  %78 = lshr i24 %75, 16, !dbg !5447
  call void @llvm.dbg.value(metadata i24 %78, metadata !5350, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5417
  %79 = lshr i24 %75, 11, !dbg !5450
  %80 = and i24 %79, 15, !dbg !5450
  %81 = zext i24 %80 to i32, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %81, metadata !5351, metadata !DIExpression()), !dbg !5417
  %82 = trunc i24 %78 to i3, !dbg !5451
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5451

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5452

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5455
  call void @llvm.dbg.value(metadata i8* %85, metadata !5277, metadata !DIExpression()), !dbg !5403
  %86 = bitcast i8* %77 to i32*, !dbg !5455
  %87 = load i32, i32* %86, align 4, !dbg !5455
  %88 = sext i32 %87 to i64, !dbg !5455
  store i64 %88, i64* %20, align 8, !dbg !5457
  br label %115, !dbg !5458

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5459
  call void @llvm.dbg.value(metadata i8* %90, metadata !5277, metadata !DIExpression()), !dbg !5403
  %91 = bitcast i8* %77 to i32*, !dbg !5459
  %92 = load i32, i32* %91, align 4, !dbg !5459
  %93 = sext i32 %92 to i64, !dbg !5459
  store i64 %93, i64* %20, align 8, !dbg !5462
  br label %115, !dbg !5463

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5464
  %96 = add i32 %95, 7, !dbg !5464
  %97 = and i32 %96, -8, !dbg !5464
  %98 = inttoptr i32 %97 to i8*, !dbg !5464
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5464
  call void @llvm.dbg.value(metadata i8* %99, metadata !5277, metadata !DIExpression()), !dbg !5403
  %100 = inttoptr i32 %97 to i64*, !dbg !5464
  %101 = load i64, i64* %100, align 8, !dbg !5464
  store i64 %101, i64* %20, align 8, !dbg !5465
  br label %115, !dbg !5466

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5467
  %104 = add i32 %103, 7, !dbg !5467
  %105 = and i32 %104, -8, !dbg !5467
  %106 = inttoptr i32 %105 to i8*, !dbg !5467
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5467
  call void @llvm.dbg.value(metadata i8* %107, metadata !5277, metadata !DIExpression()), !dbg !5403
  %108 = inttoptr i32 %105 to i64*, !dbg !5467
  %109 = load i64, i64* %108, align 8, !dbg !5467
  store i64 %109, i64* %20, align 8, !dbg !5468
  br label %115, !dbg !5469

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5470
  call void @llvm.dbg.value(metadata i8* %111, metadata !5277, metadata !DIExpression()), !dbg !5403
  %112 = bitcast i8* %77 to i32*, !dbg !5470
  %113 = load i32, i32* %112, align 4, !dbg !5470
  %114 = sext i32 %113 to i64, !dbg !5471
  store i64 %114, i64* %20, align 8, !dbg !5472
  br label %115, !dbg !5473

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5474
  call void @llvm.dbg.value(metadata i8* %117, metadata !5277, metadata !DIExpression()), !dbg !5403
  %118 = trunc i24 %79 to i4, !dbg !5475
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5475

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5476
  %121 = ashr exact i64 %120, 56, !dbg !5476
  store i64 %121, i64* %20, align 8, !dbg !5479
  br label %177, !dbg !5480

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5481
  %124 = ashr exact i64 %123, 48, !dbg !5481
  store i64 %124, i64* %20, align 8, !dbg !5484
  br label %177, !dbg !5485

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5486

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5489
  call void @llvm.dbg.value(metadata i8* %127, metadata !5277, metadata !DIExpression()), !dbg !5403
  %128 = bitcast i8* %77 to i32*, !dbg !5489
  %129 = load i32, i32* %128, align 4, !dbg !5489
  %130 = zext i32 %129 to i64, !dbg !5489
  store i64 %130, i64* %20, align 8, !dbg !5491
  br label %157, !dbg !5492

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5493
  call void @llvm.dbg.value(metadata i8* %132, metadata !5277, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %132, metadata !5277, metadata !DIExpression()), !dbg !5403
  %133 = bitcast i8* %77 to i32*, !dbg !5493
  %134 = load i32, i32* %133, align 4, !dbg !5493
  %135 = zext i32 %134 to i64, !dbg !5493
  store i64 %135, i64* %20, align 8, !dbg !5493
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5495
  %138 = add i32 %137, 7, !dbg !5495
  %139 = and i32 %138, -8, !dbg !5495
  %140 = inttoptr i32 %139 to i8*, !dbg !5495
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5495
  call void @llvm.dbg.value(metadata i8* %141, metadata !5277, metadata !DIExpression()), !dbg !5403
  %142 = inttoptr i32 %139 to i64*, !dbg !5495
  %143 = load i64, i64* %142, align 8, !dbg !5495
  store i64 %143, i64* %20, align 8, !dbg !5496
  br label %157, !dbg !5497

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5498
  %146 = add i32 %145, 7, !dbg !5498
  %147 = and i32 %146, -8, !dbg !5498
  %148 = inttoptr i32 %147 to i8*, !dbg !5498
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5498
  call void @llvm.dbg.value(metadata i8* %149, metadata !5277, metadata !DIExpression()), !dbg !5403
  %150 = inttoptr i32 %147 to i64*, !dbg !5498
  %151 = load i64, i64* %150, align 8, !dbg !5498
  store i64 %151, i64* %20, align 8, !dbg !5499
  br label %157, !dbg !5500

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5501
  call void @llvm.dbg.value(metadata i8* %153, metadata !5277, metadata !DIExpression()), !dbg !5403
  %154 = bitcast i8* %77 to i32*, !dbg !5501
  %155 = load i32, i32* %154, align 4, !dbg !5501
  %156 = zext i32 %155 to i64, !dbg !5502
  store i64 %156, i64* %20, align 8, !dbg !5503
  br label %157, !dbg !5504

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5505
  call void @llvm.dbg.value(metadata i8* %159, metadata !5277, metadata !DIExpression()), !dbg !5403
  %160 = trunc i24 %79 to i4, !dbg !5506
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5506

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5507
  store i64 %162, i64* %20, align 8, !dbg !5510
  br label %177, !dbg !5511

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5512
  store i64 %164, i64* %20, align 8, !dbg !5515
  br label %177, !dbg !5516

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5517
  %167 = add i32 %166, 7, !dbg !5517
  %168 = and i32 %167, -8, !dbg !5517
  %169 = inttoptr i32 %168 to i8*, !dbg !5517
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5517
  call void @llvm.dbg.value(metadata i8* %170, metadata !5277, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %170, metadata !5277, metadata !DIExpression()), !dbg !5403
  %171 = inttoptr i32 %168 to double*, !dbg !5517
  %172 = load double, double* %171, align 8, !dbg !5517
  store double %172, double* %19, align 8, !dbg !5517
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5521
  call void @llvm.dbg.value(metadata i8* %174, metadata !5277, metadata !DIExpression()), !dbg !5403
  %175 = bitcast i8* %77 to i8**, !dbg !5521
  %176 = load i8*, i8** %175, align 4, !dbg !5521
  store i8* %176, i8** %18, align 8, !dbg !5524
  br label %177, !dbg !5525

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5417
  call void @llvm.dbg.value(metadata i8* %178, metadata !5277, metadata !DIExpression()), !dbg !5403
  %179 = and i24 %75, 3, !dbg !5526
  %180 = icmp eq i24 %179, 0, !dbg !5526
  br i1 %180, label %185, label %181, !dbg !5526

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5527
  call void @llvm.dbg.value(metadata i32 %182, metadata !5352, metadata !DIExpression()), !dbg !5528
  %183 = icmp slt i32 %182, 0, !dbg !5529
  %184 = add i32 %182, %29, !dbg !5527
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5531
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5532

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !5533
  call void @llvm.dbg.value(metadata i32 %188, metadata !5356, metadata !DIExpression()), !dbg !5534
  %189 = icmp slt i32 %188, 0, !dbg !5535
  %190 = add i32 %29, 1, !dbg !5533
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5537
  call void @llvm.dbg.value(metadata i8* %192, metadata !5344, metadata !DIExpression()), !dbg !5417
  %193 = icmp sgt i32 %76, -1, !dbg !5538
  br i1 %193, label %194, label %196, !dbg !5540

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !5541
  call void @llvm.dbg.value(metadata i32 %195, metadata !5359, metadata !DIExpression()), !dbg !5543
  br label %241, !dbg !5544

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !5545
  call void @llvm.dbg.value(metadata i32 %197, metadata !5359, metadata !DIExpression()), !dbg !5543
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5344, metadata !DIExpression()), !dbg !5417
  %199 = load i64, i64* %20, align 8, !dbg !5547
  %200 = trunc i64 %199 to i8, !dbg !5548
  store i8 %200, i8* %10, align 1, !dbg !5549
  call void @llvm.dbg.value(metadata i8* %23, metadata !5345, metadata !DIExpression()), !dbg !5417
  br label %245, !dbg !5550

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5551
  %203 = icmp eq i24 %202, 0, !dbg !5551
  %204 = trunc i24 %75 to i8, !dbg !5553
  %205 = shl i8 %204, 1, !dbg !5553
  %206 = and i8 %205, 32, !dbg !5553
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5553
  call void @llvm.dbg.value(metadata i8 %207, metadata !5346, metadata !DIExpression()), !dbg !5417
  %208 = load i64, i64* %20, align 8, !dbg !5554
  call void @llvm.dbg.value(metadata i64 %208, metadata !5284, metadata !DIExpression()), !dbg !5403
  %209 = icmp slt i64 %208, 0, !dbg !5555
  br i1 %209, label %210, label %212, !dbg !5557

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5346, metadata !DIExpression()), !dbg !5417
  %211 = sub nsw i64 0, %208, !dbg !5558
  store i64 %211, i64* %20, align 8, !dbg !5560
  br label %212, !dbg !5561

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5417
  call void @llvm.dbg.value(metadata i8 %213, metadata !5346, metadata !DIExpression()), !dbg !5417
  %214 = load i64, i64* %20, align 8, !dbg !5562
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5563
  call void @llvm.dbg.value(metadata i8* %215, metadata !5344, metadata !DIExpression()), !dbg !5417
  br label %216, !dbg !5564

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5565
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5566
  call void @llvm.dbg.value(metadata i8* %218, metadata !5344, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 %217, metadata !5346, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.label(metadata !5402), !dbg !5567
  %219 = icmp sgt i32 %76, -1, !dbg !5568
  br i1 %219, label %222, label %220, !dbg !5569

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5570
  br label %245, !dbg !5569

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5572
  %224 = sub i32 %22, %223, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %224, metadata !5361, metadata !DIExpression()), !dbg !5573
  %225 = load i24, i24* %15, align 8, !dbg !5574
  %226 = and i24 %225, -65, !dbg !5574
  store i24 %226, i24* %15, align 8, !dbg !5574
  %227 = icmp ugt i32 %76, %224, !dbg !5575
  br i1 %227, label %228, label %245, !dbg !5577

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5578
  store i32 %229, i32* %16, align 4, !dbg !5580
  br label %245, !dbg !5581

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5582
  %232 = icmp eq i8* %231, null, !dbg !5584
  br i1 %232, label %245, label %233, !dbg !5585

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5586
  %235 = zext i32 %234 to i64, !dbg !5586
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5588
  call void @llvm.dbg.value(metadata i8* %236, metadata !5344, metadata !DIExpression()), !dbg !5417
  %237 = load i24, i24* %15, align 8, !dbg !5589
  %238 = or i24 %237, 1048576, !dbg !5589
  store i24 %238, i24* %15, align 8, !dbg !5589
  store i8 120, i8* %21, align 1, !dbg !5590
  br label %216, !dbg !5591

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5592
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5595
  br label %363, !dbg !5596

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5597
  call void @llvm.dbg.value(metadata i32 %242, metadata !5359, metadata !DIExpression()), !dbg !5543
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5598
  call void @llvm.dbg.value(metadata i32 -1, metadata !5343, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %29, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8* %192, metadata !5344, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8* %243, metadata !5345, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 0, metadata !5346, metadata !DIExpression()), !dbg !5417
  %244 = icmp eq i8* %192, null, !dbg !5599
  br i1 %244, label %363, label %245, !dbg !5601, !llvm.loop !5413

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5570
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5417
  call void @llvm.dbg.value(metadata i32 0, metadata !5365, metadata !DIExpression()), !dbg !5417
  %250 = zext i8 %249 to i32, !dbg !5602
  %251 = icmp eq i8 %249, 0, !dbg !5604
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  call void @llvm.dbg.value(metadata i32 undef, metadata !5364, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  call void @llvm.dbg.value(metadata i32 undef, metadata !5364, metadata !DIExpression()), !dbg !5417
  %252 = icmp sgt i32 %58, 0, !dbg !5605
  br i1 %252, label %253, label %302, !dbg !5606

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5570
  %255 = icmp eq i24 %254, 0, !dbg !5570
  %256 = ptrtoint i8* %248 to i32, !dbg !5607
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  %257 = ptrtoint i8* %247 to i32, !dbg !5607
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  %258 = xor i1 %251, true, !dbg !5608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  %259 = sext i1 %258 to i32, !dbg !5608
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  %260 = lshr i24 %246, 19, !dbg !5609
  %261 = and i24 %260, 1, !dbg !5609
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5609
  %263 = zext i24 %262 to i32, !dbg !5609
  %264 = add i32 %257, %259, !dbg !5609
  %265 = add i32 %256, %263, !dbg !5609
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  %266 = and i24 %246, 4194304, !dbg !5610
  %267 = icmp eq i24 %266, 0, !dbg !5610
  %268 = load i32, i32* %16, align 4, !dbg !5612
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5364, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5417
  call void @llvm.dbg.value(metadata i32 undef, metadata !5364, metadata !DIExpression()), !dbg !5417
  %269 = load i32, i32* %17, align 8, !dbg !5613
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5613
  call void @llvm.dbg.value(metadata i32 undef, metadata !5364, metadata !DIExpression()), !dbg !5417
  %271 = add i32 %264, %58, !dbg !5613
  %272 = add i32 %265, %268, !dbg !5613
  %273 = add i32 %272, %270, !dbg !5614
  %274 = sub i32 %271, %273, !dbg !5614
  call void @llvm.dbg.value(metadata i32 %274, metadata !5342, metadata !DIExpression()), !dbg !5417
  %275 = and i24 %246, 4, !dbg !5615
  %276 = icmp eq i24 %275, 0, !dbg !5615
  br i1 %276, label %277, label %302, !dbg !5616

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5366, metadata !DIExpression()), !dbg !5617
  %278 = and i24 %246, 64, !dbg !5618
  %279 = icmp eq i24 %278, 0, !dbg !5618
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5619
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5619
  %282 = select i1 %279, i32 32, i32 48, !dbg !5619
  br i1 %280, label %287, label %283, !dbg !5619

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5620
  call void @llvm.dbg.value(metadata i32 %284, metadata !5371, metadata !DIExpression()), !dbg !5621
  %285 = icmp slt i32 %284, 0, !dbg !5622
  %286 = add i32 %29, 1, !dbg !5620
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5417
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %290, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i8 undef, metadata !5366, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i8 %288, metadata !5346, metadata !DIExpression()), !dbg !5417
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5624
  %292 = add i32 %291, -1, !dbg !5624
  br label %293, !dbg !5624

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5625
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %295, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %294, metadata !5342, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i32 %294, metadata !5342, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5417
  %296 = icmp sgt i32 %294, 0, !dbg !5626
  br i1 %296, label %297, label %302, !dbg !5624

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5627
  call void @llvm.dbg.value(metadata i32 %298, metadata !5342, metadata !DIExpression()), !dbg !5417
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %299, metadata !5377, metadata !DIExpression()), !dbg !5629
  %300 = icmp slt i32 %299, 0, !dbg !5630
  %301 = add i32 %295, 1, !dbg !5628
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %300, label %361, label %293, !llvm.loop !5632

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5417
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5417
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %305, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %304, metadata !5342, metadata !DIExpression()), !dbg !5417
  call void @llvm.dbg.value(metadata i8 %303, metadata !5346, metadata !DIExpression()), !dbg !5417
  %306 = icmp eq i8 %303, 0, !dbg !5634
  br i1 %306, label %312, label %307, !dbg !5635

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5636
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5637
  call void @llvm.dbg.value(metadata i32 %309, metadata !5380, metadata !DIExpression()), !dbg !5638
  %310 = icmp slt i32 %309, 0, !dbg !5639
  %311 = add i32 %305, 1, !dbg !5637
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %313, metadata !5283, metadata !DIExpression()), !dbg !5403
  %314 = lshr i24 %246, 20, !dbg !5641
  %315 = lshr i24 %246, 19, !dbg !5642
  %316 = or i24 %314, %315, !dbg !5643
  %317 = and i24 %316, 1, !dbg !5643
  %318 = icmp eq i24 %317, 0, !dbg !5643
  br i1 %318, label %323, label %319, !dbg !5644

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5645
  call void @llvm.dbg.value(metadata i32 %320, metadata !5384, metadata !DIExpression()), !dbg !5646
  %321 = icmp slt i32 %320, 0, !dbg !5647
  %322 = add i32 %313, 1, !dbg !5645
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %324, metadata !5283, metadata !DIExpression()), !dbg !5403
  %325 = and i24 %246, 1048576, !dbg !5649
  %326 = icmp eq i24 %325, 0, !dbg !5649
  br i1 %326, label %333, label %327, !dbg !5650

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5651
  %329 = zext i8 %328 to i32, !dbg !5651
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %330, metadata !5390, metadata !DIExpression()), !dbg !5652
  %331 = icmp slt i32 %330, 0, !dbg !5653
  %332 = add i32 %324, 1, !dbg !5651
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %334, metadata !5283, metadata !DIExpression()), !dbg !5403
  %335 = load i32, i32* %16, align 4, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %335, metadata !5365, metadata !DIExpression()), !dbg !5417
  br label %336, !dbg !5656

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5657
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %338, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %337, metadata !5365, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5417
  %339 = icmp sgt i32 %337, 0, !dbg !5658
  br i1 %339, label %340, label %345, !dbg !5656

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %341, metadata !5365, metadata !DIExpression()), !dbg !5417
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %342, metadata !5394, metadata !DIExpression()), !dbg !5661
  %343 = icmp slt i32 %342, 0, !dbg !5662
  %344 = add i32 %338, 1, !dbg !5660
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %343, label %361, label %336, !llvm.loop !5664

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %346, metadata !5397, metadata !DIExpression()), !dbg !5667
  %347 = icmp slt i32 %346, 0, !dbg !5668
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5666
  call void @llvm.dbg.value(metadata i32 %349, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %304, metadata !5342, metadata !DIExpression()), !dbg !5417
  %350 = icmp sgt i32 %304, 0, !dbg !5670
  br i1 %350, label %351, label %363, !dbg !5671

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5671
  %353 = add i32 %352, %338, !dbg !5671
  br label %354, !dbg !5671

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %355, metadata !5342, metadata !DIExpression()), !dbg !5417
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5672
  call void @llvm.dbg.value(metadata i32 %356, metadata !5399, metadata !DIExpression()), !dbg !5673
  %357 = icmp slt i32 %356, 0, !dbg !5674
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5676
  call void @llvm.dbg.value(metadata i32 undef, metadata !5283, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5403
  call void @llvm.dbg.value(metadata i32 %359, metadata !5342, metadata !DIExpression()), !dbg !5417
  %360 = icmp sgt i32 %355, 1, !dbg !5670
  br i1 %360, label %354, label %363, !dbg !5671, !llvm.loop !5677

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5414
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5407
  call void @llvm.dbg.value(metadata i32 %364, metadata !5283, metadata !DIExpression()), !dbg !5403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5414
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5403
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5679
  ret i32 %366, !dbg !5679
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !5680 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5684, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.value(metadata i8* %1, metadata !5685, metadata !DIExpression()), !dbg !5686
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5687
  store i24 0, i24* %3, align 4, !dbg !5687
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5687
  store i8 0, i8* %4, align 1, !dbg !5687
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5687
  store i32 0, i32* %5, align 4, !dbg !5687
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5687
  store i32 0, i32* %6, align 4, !dbg !5687
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5688
  call void @llvm.dbg.value(metadata i8* %7, metadata !5685, metadata !DIExpression()), !dbg !5686
  %8 = load i8, i8* %7, align 1, !dbg !5689
  %9 = icmp eq i8 %8, 37, !dbg !5691
  br i1 %9, label %10, label %12, !dbg !5692

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5693
  call void @llvm.dbg.value(metadata i8* %11, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i8 37, i8* %4, align 1, !dbg !5695
  br label %18, !dbg !5696

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5697
  call void @llvm.dbg.value(metadata i8* %13, metadata !5685, metadata !DIExpression()), !dbg !5686
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5698
  call void @llvm.dbg.value(metadata i8* %14, metadata !5685, metadata !DIExpression()), !dbg !5686
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5699
  call void @llvm.dbg.value(metadata i8* %15, metadata !5685, metadata !DIExpression()), !dbg !5686
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5700
  call void @llvm.dbg.value(metadata i8* %16, metadata !5685, metadata !DIExpression()), !dbg !5686
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5701
  call void @llvm.dbg.value(metadata i8* %17, metadata !5685, metadata !DIExpression()), !dbg !5686
  br label %18, !dbg !5702

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5686
  ret i8* %19, !dbg !5703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5704 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5708, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %1, metadata !5709, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %2, metadata !5710, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %3, metadata !5711, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 0, metadata !5712, metadata !DIExpression()), !dbg !5715
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5716

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5717
  call void @llvm.dbg.value(metadata i32 %9, metadata !5712, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i8* %8, metadata !5710, metadata !DIExpression()), !dbg !5715
  %10 = icmp ult i8* %8, %3, !dbg !5718
  br i1 %10, label %11, label %13, !dbg !5719

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5720
  br label %17, !dbg !5719

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5721

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5722
  %16 = icmp eq i8 %15, 0, !dbg !5721
  br i1 %16, label %24, label %17, !dbg !5716

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5720
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5723
  call void @llvm.dbg.value(metadata i8* %19, metadata !5710, metadata !DIExpression()), !dbg !5715
  %20 = zext i8 %18 to i32, !dbg !5724
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %21, metadata !5713, metadata !DIExpression()), !dbg !5726
  %22 = icmp slt i32 %21, 0, !dbg !5727
  %23 = add i32 %9, 1, !dbg !5729
  call void @llvm.dbg.value(metadata i32 undef, metadata !5712, metadata !DIExpression()), !dbg !5715
  br i1 %22, label %24, label %7, !llvm.loop !5730

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5715
  ret i32 %25, !dbg !5732
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !5733 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5737, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5738, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata i8* %2, metadata !5739, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata i8* %3, metadata !5740, metadata !DIExpression()), !dbg !5747
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5748
  %6 = load i8, i8* %5, align 1, !dbg !5748
  %7 = zext i8 %6 to i32, !dbg !5749
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5750
  %9 = icmp eq i32 %8, 0, !dbg !5750
  call void @llvm.dbg.value(metadata i1 %9, metadata !5741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5747
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5751
  call void @llvm.dbg.value(metadata i32 %10, metadata !5742, metadata !DIExpression()), !dbg !5747
  %11 = ptrtoint i8* %3 to i32, !dbg !5752
  %12 = ptrtoint i8* %2 to i32, !dbg !5752
  %13 = sub i32 %11, %12, !dbg !5752
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5753
  call void @llvm.dbg.value(metadata i8* %14, metadata !5744, metadata !DIExpression()), !dbg !5747
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5754

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5747
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5737, metadata !DIExpression()), !dbg !5747
  call void @llvm.dbg.value(metadata i8* %18, metadata !5744, metadata !DIExpression()), !dbg !5747
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5755
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %25, metadata !5745, metadata !DIExpression()), !dbg !5757
  %26 = icmp ult i32 %25, 10, !dbg !5758
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5759
  %28 = add i32 %27, %25, !dbg !5757
  %29 = trunc i32 %28 to i8, !dbg !5759
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5760
  call void @llvm.dbg.value(metadata i8* %30, metadata !5744, metadata !DIExpression()), !dbg !5747
  store i8 %29, i8* %30, align 1, !dbg !5761
  call void @llvm.dbg.value(metadata i64 %22, metadata !5737, metadata !DIExpression()), !dbg !5747
  %31 = icmp uge i64 %19, %15, !dbg !5762
  %32 = icmp ugt i8* %30, %2, !dbg !5763
  %33 = and i1 %31, %32, !dbg !5763
  br i1 %33, label %17, label %34, !dbg !5764, !llvm.loop !5765

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5767
  %36 = load i24, i24* %35, align 4, !dbg !5767
  %37 = and i24 %36, 32, !dbg !5767
  %38 = icmp eq i24 %37, 0, !dbg !5767
  br i1 %38, label %44, label %39, !dbg !5769

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5770

40:                                               ; preds = %39
  br label %41, !dbg !5772

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5776
  store i24 %43, i24* %35, align 4, !dbg !5776
  br label %44, !dbg !5777

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !5778 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5784, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.value(metadata i8* %1, metadata !5785, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.value(metadata i32 %2, metadata !5786, metadata !DIExpression()), !dbg !5787
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5788
  %5 = load i24, i24* %4, align 4, !dbg !5788
  %6 = lshr i24 %5, 11, !dbg !5788
  %7 = and i24 %6, 15, !dbg !5788
  %8 = zext i24 %7 to i32, !dbg !5788
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5789

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5790
  store i32 %2, i32* %10, align 4, !dbg !5792
  br label %28, !dbg !5793

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5794
  store i8 %12, i8* %1, align 1, !dbg !5795
  br label %28, !dbg !5796

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5797
  %15 = bitcast i8* %1 to i16*, !dbg !5798
  store i16 %14, i16* %15, align 2, !dbg !5799
  br label %28, !dbg !5800

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5801
  store i32 %2, i32* %17, align 4, !dbg !5802
  br label %28, !dbg !5803

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5804
  %20 = bitcast i8* %1 to i64*, !dbg !5805
  store i64 %19, i64* %20, align 8, !dbg !5806
  br label %28, !dbg !5807

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5808
  %23 = bitcast i8* %1 to i64*, !dbg !5809
  store i64 %22, i64* %23, align 8, !dbg !5810
  br label %28, !dbg !5811

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5812
  store i32 %2, i32* %25, align 4, !dbg !5813
  br label %28, !dbg !5814

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5815
  store i32 %2, i32* %27, align 4, !dbg !5816
  br label %28, !dbg !5817

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5818
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !5819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5822, metadata !DIExpression()), !dbg !5823
  %2 = add i32 %0, -65, !dbg !5824
  %3 = icmp ult i32 %2, 26, !dbg !5825
  %4 = zext i1 %3 to i32, !dbg !5825
  ret i32 %4, !dbg !5826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !5827 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5831, metadata !DIExpression()), !dbg !5832
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5833

2:                                                ; preds = %1
  br label %4, !dbg !5834

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5836

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5837
  ret i32 %5, !dbg !5838
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !5839 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5841, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i8* %1, metadata !5842, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i8 1, metadata !5843, metadata !DIExpression()), !dbg !5844
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5845

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5843, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i8* %5, metadata !5842, metadata !DIExpression()), !dbg !5844
  %6 = load i8, i8* %5, align 1, !dbg !5846
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5848

7:                                                ; preds = %4
  br label %11, !dbg !5849

8:                                                ; preds = %4
  br label %11, !dbg !5851

9:                                                ; preds = %4
  br label %11, !dbg !5852

10:                                               ; preds = %4
  br label %11, !dbg !5853

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5854
  %14 = or i24 %13, %12, !dbg !5854
  store i24 %14, i24* %3, align 4, !dbg !5854
  call void @llvm.dbg.value(metadata i8 poison, metadata !5843, metadata !DIExpression()), !dbg !5844
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5842, metadata !DIExpression()), !dbg !5844
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5843, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i8* %15, metadata !5842, metadata !DIExpression()), !dbg !5844
  %17 = load i24, i24* %3, align 4, !dbg !5855
  %18 = and i24 %17, 68, !dbg !5857
  %19 = icmp eq i24 %18, 68, !dbg !5857
  br i1 %19, label %20, label %22, !dbg !5857

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5858
  store i24 %21, i24* %3, align 4, !dbg !5858
  br label %22, !dbg !5860

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5861
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !5862 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5864, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8* %1, metadata !5865, metadata !DIExpression()), !dbg !5868
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5869
  %5 = load i24, i24* %4, align 4, !dbg !5870
  %6 = or i24 %5, 128, !dbg !5870
  store i24 %6, i24* %4, align 4, !dbg !5870
  call void @llvm.dbg.value(metadata i8* %1, metadata !5865, metadata !DIExpression()), !dbg !5868
  %7 = load i8, i8* %1, align 1, !dbg !5871
  %8 = icmp eq i8 %7, 42, !dbg !5873
  br i1 %8, label %9, label %12, !dbg !5874

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5875
  store i24 %10, i24* %4, align 4, !dbg !5875
  call void @llvm.dbg.value(metadata i8* %1, metadata !5865, metadata !DIExpression()), !dbg !5868
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5877
  call void @llvm.dbg.value(metadata i8* %11, metadata !5865, metadata !DIExpression()), !dbg !5868
  store i8* %11, i8** %3, align 4, !dbg !5877
  br label %29, !dbg !5878

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5866, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8** %3, metadata !5865, metadata !DIExpression(DW_OP_deref)), !dbg !5868
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5879
  call void @llvm.dbg.value(metadata i32 %13, metadata !5867, metadata !DIExpression()), !dbg !5868
  %14 = load i8*, i8** %3, align 4, !dbg !5880
  call void @llvm.dbg.value(metadata i8* %14, metadata !5865, metadata !DIExpression()), !dbg !5868
  %15 = icmp eq i8* %14, %1, !dbg !5882
  br i1 %15, label %29, label %16, !dbg !5883

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5884
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5886
  store i32 %13, i32* %18, align 4, !dbg !5887
  %19 = lshr i32 %13, 31, !dbg !5888
  %20 = lshr i24 %17, 1, !dbg !5889
  %21 = and i24 %20, 1, !dbg !5889
  %22 = zext i24 %21 to i32, !dbg !5889
  %23 = or i32 %19, %22, !dbg !5889
  %24 = trunc i32 %23 to i24, !dbg !5889
  %25 = shl nuw nsw i24 %24, 1, !dbg !5889
  %26 = and i24 %17, -131, !dbg !5889
  %27 = or i24 %26, 128, !dbg !5889
  %28 = or i24 %25, %27, !dbg !5889
  store i24 %28, i24* %4, align 4, !dbg !5889
  br label %29, !dbg !5890

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5868
  ret i8* %30, !dbg !5891
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !5892 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5894, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata i8* %1, metadata !5895, metadata !DIExpression()), !dbg !5897
  %4 = load i8, i8* %1, align 1, !dbg !5898
  %5 = icmp eq i8 %4, 46, !dbg !5899
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5900
  %7 = load i24, i24* %6, align 4, !dbg !5901
  %8 = select i1 %5, i24 512, i24 0, !dbg !5901
  %9 = and i24 %7, -513, !dbg !5901
  %10 = or i24 %9, %8, !dbg !5901
  store i24 %10, i24* %6, align 4, !dbg !5901
  br i1 %5, label %11, label %32, !dbg !5902

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5895, metadata !DIExpression()), !dbg !5897
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5903
  call void @llvm.dbg.value(metadata i8* %12, metadata !5895, metadata !DIExpression()), !dbg !5897
  store i8* %12, i8** %3, align 4, !dbg !5903
  %13 = load i8, i8* %12, align 1, !dbg !5904
  %14 = icmp eq i8 %13, 42, !dbg !5906
  br i1 %14, label %15, label %18, !dbg !5907

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5908
  store i24 %16, i24* %6, align 4, !dbg !5908
  call void @llvm.dbg.value(metadata i8* %12, metadata !5895, metadata !DIExpression()), !dbg !5897
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5910
  call void @llvm.dbg.value(metadata i8* %17, metadata !5895, metadata !DIExpression()), !dbg !5897
  store i8* %17, i8** %3, align 4, !dbg !5910
  br label %32, !dbg !5911

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5895, metadata !DIExpression(DW_OP_deref)), !dbg !5897
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %19, metadata !5896, metadata !DIExpression()), !dbg !5897
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5913
  store i32 %19, i32* %20, align 4, !dbg !5914
  %21 = lshr i32 %19, 31, !dbg !5915
  %22 = load i24, i24* %6, align 4, !dbg !5916
  %23 = lshr i24 %22, 1, !dbg !5916
  %24 = and i24 %23, 1, !dbg !5916
  %25 = zext i24 %24 to i32, !dbg !5916
  %26 = or i32 %21, %25, !dbg !5916
  %27 = trunc i32 %26 to i24, !dbg !5916
  %28 = shl nuw nsw i24 %27, 1, !dbg !5916
  %29 = and i24 %22, -3, !dbg !5916
  %30 = or i24 %28, %29, !dbg !5916
  store i24 %30, i24* %6, align 4, !dbg !5916
  %31 = load i8*, i8** %3, align 4, !dbg !5917
  call void @llvm.dbg.value(metadata i8* %31, metadata !5895, metadata !DIExpression()), !dbg !5897
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5897
  ret i8* %33, !dbg !5918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5919 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5921, metadata !DIExpression()), !dbg !5923
  call void @llvm.dbg.value(metadata i8* %1, metadata !5922, metadata !DIExpression()), !dbg !5923
  %3 = load i8, i8* %1, align 1, !dbg !5924
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5925

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5926
  call void @llvm.dbg.value(metadata i8* %5, metadata !5922, metadata !DIExpression()), !dbg !5923
  %6 = load i8, i8* %5, align 1, !dbg !5929
  %7 = icmp eq i8 %6, 104, !dbg !5930
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5931
  %9 = load i24, i24* %8, align 4, !dbg !5931
  %10 = and i24 %9, -30721, !dbg !5931
  br i1 %7, label %11, label %14, !dbg !5932

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5933
  store i24 %12, i24* %8, align 4, !dbg !5933
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5935
  call void @llvm.dbg.value(metadata i8* %13, metadata !5922, metadata !DIExpression()), !dbg !5923
  br label %56, !dbg !5936

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5937
  store i24 %15, i24* %8, align 4, !dbg !5937
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5939
  call void @llvm.dbg.value(metadata i8* %17, metadata !5922, metadata !DIExpression()), !dbg !5923
  %18 = load i8, i8* %17, align 1, !dbg !5941
  %19 = icmp eq i8 %18, 108, !dbg !5942
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5943
  %21 = load i24, i24* %20, align 4, !dbg !5943
  %22 = and i24 %21, -30721, !dbg !5943
  br i1 %19, label %23, label %26, !dbg !5944

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5945
  store i24 %24, i24* %20, align 4, !dbg !5945
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5947
  call void @llvm.dbg.value(metadata i8* %25, metadata !5922, metadata !DIExpression()), !dbg !5923
  br label %56, !dbg !5948

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5949
  store i24 %27, i24* %20, align 4, !dbg !5949
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5951
  %30 = load i24, i24* %29, align 4, !dbg !5952
  %31 = and i24 %30, -30721, !dbg !5952
  %32 = or i24 %31, 10240, !dbg !5952
  store i24 %32, i24* %29, align 4, !dbg !5952
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5953
  call void @llvm.dbg.value(metadata i8* %33, metadata !5922, metadata !DIExpression()), !dbg !5923
  br label %56, !dbg !5954

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5955
  %36 = load i24, i24* %35, align 4, !dbg !5956
  %37 = and i24 %36, -30721, !dbg !5956
  %38 = or i24 %37, 12288, !dbg !5956
  store i24 %38, i24* %35, align 4, !dbg !5956
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5957
  call void @llvm.dbg.value(metadata i8* %39, metadata !5922, metadata !DIExpression()), !dbg !5923
  br label %56, !dbg !5958

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5959
  %42 = load i24, i24* %41, align 4, !dbg !5960
  %43 = and i24 %42, -30721, !dbg !5960
  %44 = or i24 %43, 14336, !dbg !5960
  store i24 %44, i24* %41, align 4, !dbg !5960
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5961
  call void @llvm.dbg.value(metadata i8* %45, metadata !5922, metadata !DIExpression()), !dbg !5923
  br label %56, !dbg !5962

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5963
  %48 = load i24, i24* %47, align 4, !dbg !5964
  %49 = and i24 %48, -30723, !dbg !5964
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5965
  call void @llvm.dbg.value(metadata i8* %50, metadata !5922, metadata !DIExpression()), !dbg !5923
  %51 = or i24 %49, 16386, !dbg !5966
  store i24 %51, i24* %47, align 4, !dbg !5966
  br label %56, !dbg !5967

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5968
  %54 = load i24, i24* %53, align 4, !dbg !5969
  %55 = and i24 %54, -30721, !dbg !5969
  store i24 %55, i24* %53, align 4, !dbg !5969
  br label %56, !dbg !5970

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5922, metadata !DIExpression()), !dbg !5923
  ret i8* %57, !dbg !5971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5972 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5974, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i8* %1, metadata !5975, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i8 0, metadata !5976, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i8* %1, metadata !5975, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5979
  %3 = load i8, i8* %1, align 1, !dbg !5980
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5981
  store i8 %3, i8* %4, align 1, !dbg !5982
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5983

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5984

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5985
  %9 = load i24, i24* %8, align 4, !dbg !5985
  %10 = and i24 %9, -458753, !dbg !5985
  %11 = or i24 %10, %7, !dbg !5985
  call void @llvm.dbg.label(metadata !5977), !dbg !5986
  %12 = and i24 %9, 30720, !dbg !5987
  %13 = icmp eq i24 %12, 16384, !dbg !5987
  %14 = zext i1 %13 to i24, !dbg !5989
  %15 = or i24 %11, %14, !dbg !5989
  %16 = icmp eq i8 %3, 99, !dbg !5990
  br i1 %16, label %17, label %43, !dbg !5992

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5993
  %19 = icmp ne i24 %18, 0, !dbg !5993
  call void @llvm.dbg.value(metadata i1 %19, metadata !5976, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5979
  br label %43, !dbg !5995

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5996
  %22 = load i24, i24* %21, align 4, !dbg !5997
  %23 = and i24 %22, -458753, !dbg !5997
  %24 = or i24 %23, 262144, !dbg !5997
  call void @llvm.dbg.value(metadata i8 1, metadata !5976, metadata !DIExpression()), !dbg !5979
  br label %43, !dbg !5998

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6001
  %27 = load i24, i24* %26, align 4, !dbg !6002
  %28 = and i24 %27, -458753, !dbg !6002
  %29 = or i24 %28, 196608, !dbg !6002
  %30 = and i24 %27, 30720, !dbg !6003
  %31 = icmp eq i24 %30, 16384, !dbg !6003
  br label %43, !dbg !6005

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6006
  %34 = load i24, i24* %33, align 4, !dbg !6007
  %35 = and i24 %34, -458753, !dbg !6007
  %36 = or i24 %35, 196608, !dbg !6007
  %37 = and i24 %34, 30720, !dbg !6008
  %38 = icmp ne i24 %37, 0, !dbg !6008
  br label %43, !dbg !6010

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6011
  %41 = load i24, i24* %40, align 4, !dbg !6012
  %42 = or i24 %41, 1, !dbg !6012
  br label %43, !dbg !6013

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6014
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6015
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %48, metadata !5975, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.value(metadata i8 poison, metadata !5976, metadata !DIExpression()), !dbg !5979
  %49 = lshr i24 %44, 1, !dbg !6014
  %50 = and i24 %49, 1, !dbg !6014
  %51 = zext i24 %50 to i32, !dbg !6014
  %52 = or i32 %51, %47, !dbg !6014
  %53 = trunc i32 %52 to i24, !dbg !6014
  %54 = shl nuw nsw i24 %53, 1, !dbg !6014
  %55 = and i24 %44, -3, !dbg !6014
  %56 = or i24 %54, %55, !dbg !6014
  store i24 %56, i24* %46, align 4, !dbg !6014
  ret i8* %48, !dbg !6017
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6018 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6022, metadata !DIExpression()), !dbg !6025
  %2 = load i8*, i8** %0, align 4, !dbg !6026
  call void @llvm.dbg.value(metadata i8* %2, metadata !6023, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i32 0, metadata !6024, metadata !DIExpression()), !dbg !6025
  %3 = load i8, i8* %2, align 1, !dbg !6027
  %4 = zext i8 %3 to i32, !dbg !6028
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6029
  %6 = icmp eq i32 %5, 0, !dbg !6030
  br i1 %6, label %19, label %7, !dbg !6030

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6024, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata i8* %10, metadata !6023, metadata !DIExpression()), !dbg !6025
  %11 = mul i32 %9, 10, !dbg !6031
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6033
  call void @llvm.dbg.value(metadata i8* %12, metadata !6023, metadata !DIExpression()), !dbg !6025
  %13 = add i32 %11, -48, !dbg !6034
  %14 = add i32 %13, %8, !dbg !6035
  call void @llvm.dbg.value(metadata i32 %14, metadata !6024, metadata !DIExpression()), !dbg !6025
  %15 = load i8, i8* %12, align 1, !dbg !6027
  %16 = zext i8 %15 to i32, !dbg !6028
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6029
  %18 = icmp eq i32 %17, 0, !dbg !6030
  br i1 %18, label %19, label %7, !dbg !6030, !llvm.loop !6036

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6025
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6025
  store i8* %20, i8** %0, align 4, !dbg !6038
  ret i32 %21, !dbg !6039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6042, metadata !DIExpression()), !dbg !6043
  %2 = add i32 %0, -48, !dbg !6044
  %3 = icmp ult i32 %2, 10, !dbg !6045
  %4 = zext i1 %3 to i32, !dbg !6045
  ret i32 %4, !dbg !6046
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.value(metadata i32 %1, metadata !6053, metadata !DIExpression()), !dbg !6054
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !6055, !srcloc !6057
  ret void, !dbg !6058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6059 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6061, metadata !DIExpression()), !dbg !6069
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6070
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !6070
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6062, metadata !DIExpression()), !dbg !6071
  call void @llvm.va_start(i8* nonnull %3), !dbg !6072
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6073
  %5 = load i32, i32* %4, align 4, !dbg !6073
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6073
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6073
  call void @llvm.va_end(i8* nonnull %3), !dbg !6074
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !6075
  ret void, !dbg !6075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6076 {
  tail call void asm sideeffect ".globl\09CONFIG_WATCHDOG\0A\09.equ\09CONFIG_WATCHDOG,1\0A\09.type\09CONFIG_WATCHDOG,%object", ""() #24, !dbg !6078, !srcloc !6079
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !6080, !srcloc !6081
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !6082, !srcloc !6083
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !6084, !srcloc !6085
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !6086, !srcloc !6087
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !6088, !srcloc !6089
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x80000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !6090, !srcloc !6091
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !6092, !srcloc !6093
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !6094, !srcloc !6095
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #24, !dbg !6096, !srcloc !6097
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !6098, !srcloc !6099
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !6100, !srcloc !6101
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !6104, !srcloc !6105
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #24, !dbg !6106, !srcloc !6107
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !6108, !srcloc !6109
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !6110, !srcloc !6111
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !6112, !srcloc !6113
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !6114, !srcloc !6115
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !6116, !srcloc !6117
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !6118, !srcloc !6119
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !6120, !srcloc !6121
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #24, !dbg !6122, !srcloc !6123
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !6124, !srcloc !6125
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED,%object", ""() #24, !dbg !6126, !srcloc !6127
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED,%object", ""() #24, !dbg !6128, !srcloc !6129
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED,%object", ""() #24, !dbg !6130, !srcloc !6131
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED,%object", ""() #24, !dbg !6132, !srcloc !6133
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED,%object", ""() #24, !dbg !6134, !srcloc !6135
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !6136, !srcloc !6137
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !6138, !srcloc !6139
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !6140, !srcloc !6141
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !6142, !srcloc !6143
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !6144, !srcloc !6145
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !6146, !srcloc !6147
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !6148, !srcloc !6149
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #24, !dbg !6150, !srcloc !6151
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #24, !dbg !6152, !srcloc !6153
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !6154, !srcloc !6155
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !6156, !srcloc !6157
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !6158, !srcloc !6159
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !6160, !srcloc !6161
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !6162, !srcloc !6163
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !6164, !srcloc !6165
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !6166, !srcloc !6167
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !6168, !srcloc !6169
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !6170, !srcloc !6171
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !6172, !srcloc !6173
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !6174, !srcloc !6175
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !6176, !srcloc !6177
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !6178, !srcloc !6179
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !6180, !srcloc !6181
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !6182, !srcloc !6183
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !6186, !srcloc !6187
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !6188, !srcloc !6189
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !6190, !srcloc !6191
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !6192, !srcloc !6193
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !6194, !srcloc !6195
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !6196, !srcloc !6197
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !6198, !srcloc !6199
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !6200, !srcloc !6201
  tail call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #24, !dbg !6202, !srcloc !6203
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !6204, !srcloc !6205
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !6206, !srcloc !6207
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !6208, !srcloc !6209
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ARDUINO_DUE\0A\09.equ\09CONFIG_BOARD_ARDUINO_DUE,1\0A\09.type\09CONFIG_BOARD_ARDUINO_DUE,%object", ""() #24, !dbg !6210, !srcloc !6211
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAM3X\0A\09.equ\09CONFIG_SOC_SERIES_SAM3X,1\0A\09.type\09CONFIG_SOC_SERIES_SAM3X,%object", ""() #24, !dbg !6212, !srcloc !6213
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !6214, !srcloc !6215
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !6216, !srcloc !6217
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM\0A\09.equ\09CONFIG_SOC_FAMILY_SAM,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM,%object", ""() #24, !dbg !6218, !srcloc !6219
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAM3X8E\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAM3X8E,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAM3X8E,%object", ""() #24, !dbg !6220, !srcloc !6221
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK,1\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK,%object", ""() #24, !dbg !6222, !srcloc !6223
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA,0x06\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA,%object", ""() #24, !dbg !6224, !srcloc !6225
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA,0x01\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA,%object", ""() #24, !dbg !6226, !srcloc !6227
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #24, !dbg !6228, !srcloc !6229
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #24, !dbg !6230, !srcloc !6231
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !6232, !srcloc !6233
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !6234, !srcloc !6235
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !6236, !srcloc !6237
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !6238, !srcloc !6239
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !6240, !srcloc !6241
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !6242, !srcloc !6243
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !6244, !srcloc !6245
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !6246, !srcloc !6247
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !6248, !srcloc !6249
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !6250, !srcloc !6251
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !6252, !srcloc !6253
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #24, !dbg !6254, !srcloc !6255
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !6256, !srcloc !6257
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !6258, !srcloc !6259
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !6260, !srcloc !6261
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !6262, !srcloc !6263
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !6264, !srcloc !6265
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !6266, !srcloc !6267
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !6268, !srcloc !6269
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !6270, !srcloc !6271
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !6272, !srcloc !6273
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !6274, !srcloc !6275
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !6276, !srcloc !6277
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !6278, !srcloc !6279
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !6280, !srcloc !6281
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !6282, !srcloc !6283
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !6284, !srcloc !6285
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #24, !dbg !6286, !srcloc !6287
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #24, !dbg !6288, !srcloc !6289
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !6290, !srcloc !6291
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !6292, !srcloc !6293
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20070000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !6294, !srcloc !6295
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !6296, !srcloc !6297
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !6298, !srcloc !6299
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !6300, !srcloc !6301
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !6302, !srcloc !6303
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !6304, !srcloc !6305
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !6306, !srcloc !6307
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !6308, !srcloc !6309
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !6310, !srcloc !6311
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !6312, !srcloc !6313
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !6314, !srcloc !6315
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !6316, !srcloc !6317
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !6318, !srcloc !6319
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !6320, !srcloc !6321
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !6322, !srcloc !6323
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !6324, !srcloc !6325
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !6326, !srcloc !6327
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !6328, !srcloc !6329
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !6330, !srcloc !6331
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !6332, !srcloc !6333
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !6334, !srcloc !6335
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !6336, !srcloc !6337
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6338, !srcloc !6339
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !6340, !srcloc !6341
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !6342, !srcloc !6343
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !6344, !srcloc !6345
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !6346, !srcloc !6347
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !6348, !srcloc !6349
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #24, !dbg !6350, !srcloc !6351
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #24, !dbg !6352, !srcloc !6353
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !6354, !srcloc !6355
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !6356, !srcloc !6357
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !6358, !srcloc !6359
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #24, !dbg !6360, !srcloc !6361
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #24, !dbg !6362, !srcloc !6363
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !6364, !srcloc !6365
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !6366, !srcloc !6367
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !6368, !srcloc !6369
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !6370, !srcloc !6371
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !6372, !srcloc !6373
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !6374, !srcloc !6375
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !6376, !srcloc !6377
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !6378, !srcloc !6379
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !6380, !srcloc !6381
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !6382, !srcloc !6383
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !6384, !srcloc !6385
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !6386, !srcloc !6387
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !6388, !srcloc !6389
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !6390, !srcloc !6391
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !6392, !srcloc !6393
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !6394, !srcloc !6395
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !6396, !srcloc !6397
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !6398, !srcloc !6399
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !6400, !srcloc !6401
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !6402, !srcloc !6403
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !6404, !srcloc !6405
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !6406, !srcloc !6407
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !6408, !srcloc !6409
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !6410, !srcloc !6411
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !6412, !srcloc !6413
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !6414, !srcloc !6415
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !6416, !srcloc !6417
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !6418, !srcloc !6419
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !6420, !srcloc !6421
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !6422, !srcloc !6423
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !6424, !srcloc !6425
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !6426, !srcloc !6427
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !6428, !srcloc !6429
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !6430, !srcloc !6431
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #24, !dbg !6432, !srcloc !6433
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !6434, !srcloc !6435
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !6436, !srcloc !6437
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6438, !srcloc !6439
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !6440, !srcloc !6441
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !6442, !srcloc !6443
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !6444, !srcloc !6445
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !6446, !srcloc !6447
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !6448, !srcloc !6449
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #24, !dbg !6450, !srcloc !6451
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #24, !dbg !6452, !srcloc !6453
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !6454, !srcloc !6455
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !6456, !srcloc !6457
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !6458, !srcloc !6459
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !6460, !srcloc !6461
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #24, !dbg !6462, !srcloc !6463
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #24, !dbg !6464, !srcloc !6465
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !6466, !srcloc !6467
  tail call void asm sideeffect ".globl\09CONFIG_UART_SAM\0A\09.equ\09CONFIG_UART_SAM,1\0A\09.type\09CONFIG_UART_SAM,%object", ""() #24, !dbg !6468, !srcloc !6469
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !6470, !srcloc !6471
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #24, !dbg !6472, !srcloc !6473
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #24, !dbg !6474, !srcloc !6475
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !6476, !srcloc !6477
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !6478, !srcloc !6479
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !6480, !srcloc !6481
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !6482, !srcloc !6483
  tail call void asm sideeffect ".globl\09CONFIG_WDT_DISABLE_AT_BOOT\0A\09.equ\09CONFIG_WDT_DISABLE_AT_BOOT,1\0A\09.type\09CONFIG_WDT_DISABLE_AT_BOOT,%object", ""() #24, !dbg !6484, !srcloc !6485
  tail call void asm sideeffect ".globl\09CONFIG_WDT_LOG_LEVEL_INF\0A\09.equ\09CONFIG_WDT_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_WDT_LOG_LEVEL_INF,%object", ""() #24, !dbg !6486, !srcloc !6487
  tail call void asm sideeffect ".globl\09CONFIG_WDT_LOG_LEVEL\0A\09.equ\09CONFIG_WDT_LOG_LEVEL,3\0A\09.type\09CONFIG_WDT_LOG_LEVEL,%object", ""() #24, !dbg !6488, !srcloc !6489
  tail call void asm sideeffect ".globl\09CONFIG_WDT_SAM\0A\09.equ\09CONFIG_WDT_SAM,1\0A\09.type\09CONFIG_WDT_SAM,%object", ""() #24, !dbg !6490, !srcloc !6491
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #24, !dbg !6492, !srcloc !6493
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #24, !dbg !6494, !srcloc !6495
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM\0A\09.equ\09CONFIG_PINCTRL_SAM,1\0A\09.type\09CONFIG_PINCTRL_SAM,%object", ""() #24, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #24, !dbg !6498, !srcloc !6499
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #24, !dbg !6500, !srcloc !6501
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !6502, !srcloc !6503
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !6504, !srcloc !6505
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !6506, !srcloc !6507
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !6508, !srcloc !6509
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !6510, !srcloc !6511
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !6512, !srcloc !6513
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !6514, !srcloc !6515
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !6516, !srcloc !6517
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !6518, !srcloc !6519
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !6520, !srcloc !6521
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !6522, !srcloc !6523
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !6526, !srcloc !6527
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !6528, !srcloc !6529
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !6530, !srcloc !6531
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !6532, !srcloc !6533
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !6534, !srcloc !6535
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #24, !dbg !6536, !srcloc !6537
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #24, !dbg !6538, !srcloc !6539
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !6540, !srcloc !6541
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !6542, !srcloc !6543
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !6544, !srcloc !6545
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !6546, !srcloc !6547
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !6548, !srcloc !6549
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !6550, !srcloc !6551
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #24, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #24, !dbg !6554, !srcloc !6555
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #24, !dbg !6556, !srcloc !6557
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !6558, !srcloc !6559
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #24, !dbg !6560, !srcloc !6561
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #24, !dbg !6562, !srcloc !6563
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #24, !dbg !6564, !srcloc !6565
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #24, !dbg !6566, !srcloc !6567
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #24, !dbg !6568, !srcloc !6569
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #24, !dbg !6570, !srcloc !6571
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #24, !dbg !6572, !srcloc !6573
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #24, !dbg !6574, !srcloc !6575
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !6576, !srcloc !6577
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !6578, !srcloc !6579
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6580, !srcloc !6581
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !6582, !srcloc !6583
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6584, !srcloc !6585
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !6586, !srcloc !6587
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !6590, !srcloc !6591
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !6592, !srcloc !6593
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !6594, !srcloc !6595
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !6596, !srcloc !6597
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !6598, !srcloc !6599
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !6600, !srcloc !6601
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !6602, !srcloc !6603
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !6604, !srcloc !6605
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !6606, !srcloc !6607
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !6608, !srcloc !6609
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !6610, !srcloc !6611
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !6612, !srcloc !6613
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !6630, !srcloc !6631
  ret void, !dbg !6632
}

; Function Attrs: noinline nounwind optsize
define internal i32 @atmel_sam3x_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6635, metadata !DIExpression()), !dbg !6637
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6638, !srcloc !6647
  call void @llvm.dbg.value(metadata i32 undef, metadata !6644, metadata !DIExpression()) #24, !dbg !6648
  call void @llvm.dbg.value(metadata i32 undef, metadata !6645, metadata !DIExpression()) #24, !dbg !6648
  call void @llvm.dbg.value(metadata i32 undef, metadata !6636, metadata !DIExpression()), !dbg !6637
  store volatile i32 1024, i32* inttoptr (i32 1074661888 to i32*), align 512, !dbg !6649
  store volatile i32 1024, i32* inttoptr (i32 1074662400 to i32*), align 1024, !dbg !6650
  store volatile i32 3669769, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !6651
  br label %3, !dbg !6656

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6657
  %5 = and i32 %4, 1, !dbg !6658
  %6 = icmp eq i32 %5, 0, !dbg !6659
  br i1 %6, label %3, label %7, !dbg !6656, !llvm.loop !6660

7:                                                ; preds = %3
  store volatile i32 20446985, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !6662
  br label %8, !dbg !6663

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6664
  %10 = and i32 %9, 65536, !dbg !6665
  %11 = icmp eq i32 %10, 0, !dbg !6666
  br i1 %11, label %8, label %12, !dbg !6663, !llvm.loop !6667

12:                                               ; preds = %8
  store volatile i32 20446977, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !6669
  br label %13, !dbg !6670

13:                                               ; preds = %13, %12
  %14 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6671
  %15 = and i32 %14, 131072, !dbg !6672
  %16 = icmp eq i32 %15, 0, !dbg !6670
  br i1 %16, label %17, label %13, !dbg !6670, !llvm.loop !6673

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !6675
  %19 = and i32 %18, -4, !dbg !6676
  call void @llvm.dbg.value(metadata i32 %19, metadata !6654, metadata !DIExpression()), !dbg !6677
  %20 = or i32 %19, 1, !dbg !6678
  store volatile i32 %20, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !6679
  br label %21, !dbg !6680

21:                                               ; preds = %21, %17
  %22 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6681
  %23 = and i32 %22, 8, !dbg !6682
  %24 = icmp eq i32 %23, 0, !dbg !6683
  br i1 %24, label %21, label %25, !dbg !6680, !llvm.loop !6684

25:                                               ; preds = %21
  store volatile i32 537280257, i32* inttoptr (i32 1074660904 to i32*), align 8, !dbg !6686
  br label %26, !dbg !6687

26:                                               ; preds = %26, %25
  %27 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6688
  %28 = and i32 %27, 2, !dbg !6689
  %29 = icmp eq i32 %28, 0, !dbg !6690
  br i1 %29, label %26, label %30, !dbg !6687, !llvm.loop !6691

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !6693
  %32 = and i32 %31, -113, !dbg !6694
  call void @llvm.dbg.value(metadata i32 %32, metadata !6654, metadata !DIExpression()), !dbg !6677
  store volatile i32 %32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !6695
  br label %33, !dbg !6696

33:                                               ; preds = %33, %30
  %34 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6697
  %35 = and i32 %34, 8, !dbg !6698
  %36 = icmp eq i32 %35, 0, !dbg !6699
  br i1 %36, label %33, label %37, !dbg !6696, !llvm.loop !6700

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !6702
  %39 = and i32 %38, -4, !dbg !6703
  call void @llvm.dbg.value(metadata i32 %39, metadata !6654, metadata !DIExpression()), !dbg !6677
  %40 = or i32 %39, 2, !dbg !6704
  store volatile i32 %40, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !6705
  br label %41, !dbg !6706

41:                                               ; preds = %41, %37
  %42 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !6707
  %43 = and i32 %42, 8, !dbg !6708
  %44 = icmp eq i32 %43, 0, !dbg !6709
  br i1 %44, label %41, label %45, !dbg !6706, !llvm.loop !6710

45:                                               ; preds = %41
  %46 = extractvalue { i32, i32 } %2, 0, !dbg !6638
  call void @llvm.dbg.value(metadata i32 %46, metadata !6644, metadata !DIExpression()) #24, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %46, metadata !6636, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i32 undef, metadata !6712, metadata !DIExpression()) #24, !dbg !6717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %46) #24, !dbg !6719, !srcloc !6720
  ret i32 0, !dbg !6721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_pmc_peripheral_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6727, metadata !DIExpression()), !dbg !6728
  %2 = icmp ult i32 %0, 45, !dbg !6729
  br i1 %2, label %4, label %3, !dbg !6732

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 21) #25, !dbg !6733
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.68, i32 0, i32 0)) #25, !dbg !6733
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 21) #25, !dbg !6733
  unreachable, !dbg !6733

4:                                                ; preds = %1
  %5 = icmp ult i32 %0, 32, !dbg !6735
  br i1 %5, label %6, label %8, !dbg !6737

6:                                                ; preds = %4
  %7 = shl nuw i32 1, %0, !dbg !6738
  store volatile i32 %7, i32* inttoptr (i32 1074660880 to i32*), align 16, !dbg !6740
  br label %11, !dbg !6741

8:                                                ; preds = %4
  %9 = and i32 %0, 31, !dbg !6742
  %10 = shl nuw i32 1, %9, !dbg !6742
  store volatile i32 %10, i32* inttoptr (i32 1074661120 to i32*), align 256, !dbg !6745
  br label %11, !dbg !6746

11:                                               ; preds = %8, %6
  ret void, !dbg !6747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_pmc_peripheral_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6750, metadata !DIExpression()), !dbg !6751
  %2 = icmp ult i32 %0, 45, !dbg !6752
  br i1 %2, label %4, label %3, !dbg !6755

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 38) #25, !dbg !6756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.68, i32 0, i32 0)) #25, !dbg !6756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 38) #25, !dbg !6756
  unreachable, !dbg !6756

4:                                                ; preds = %1
  %5 = icmp ult i32 %0, 32, !dbg !6758
  %6 = and i32 %0, 31, !dbg !6760
  %7 = select i1 %5, i32* inttoptr (i32 1074660884 to i32*), i32* inttoptr (i32 1074661124 to i32*), !dbg !6760
  %8 = shl nuw i32 1, %6, !dbg !6761
  store volatile i32 %8, i32* %7, align 4, !dbg !6761
  ret void, !dbg !6762
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @soc_pmc_peripheral_is_enabled(i32 noundef %0) local_unnamed_addr #1 !dbg !6763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6767, metadata !DIExpression()), !dbg !6768
  %2 = icmp ult i32 %0, 45, !dbg !6769
  br i1 %2, label %4, label %3, !dbg !6772

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.66, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 55) #25, !dbg !6773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.68, i32 0, i32 0)) #25, !dbg !6773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.67, i32 0, i32 0), i32 noundef 55) #25, !dbg !6773
  unreachable, !dbg !6773

4:                                                ; preds = %1
  %5 = icmp ult i32 %0, 32, !dbg !6775
  br i1 %5, label %6, label %9, !dbg !6777

6:                                                ; preds = %4
  %7 = load volatile i32, i32* inttoptr (i32 1074660888 to i32*), align 8, !dbg !6778
  %8 = lshr i32 %7, %0, !dbg !6780
  br label %13, !dbg !6781

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1074661128 to i32*), align 8, !dbg !6782
  %11 = and i32 %0, 31, !dbg !6785
  %12 = lshr i32 %10, %11, !dbg !6786
  br label %13, !dbg !6787

13:                                               ; preds = %9, %6
  %14 = phi i32 [ %8, %6 ], [ %12, %9 ]
  %15 = and i32 %14, 1, !dbg !6768
  ret i32 %15, !dbg !6788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_gpio_configure(%struct.soc_gpio_pin* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !6789 {
  call void @llvm.dbg.value(metadata %struct.soc_gpio_pin* %0, metadata !6861, metadata !DIExpression()), !dbg !6867
  %2 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 0, !dbg !6868
  %3 = load i32, i32* %2, align 4, !dbg !6868
  call void @llvm.dbg.value(metadata i32 %3, metadata !6862, metadata !DIExpression()), !dbg !6867
  %4 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 1, !dbg !6869
  %5 = load %struct.Pio*, %struct.Pio** %4, align 4, !dbg !6869
  call void @llvm.dbg.value(metadata %struct.Pio* %5, metadata !6863, metadata !DIExpression()), !dbg !6867
  %6 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 2, !dbg !6870
  %7 = load i8, i8* %6, align 4, !dbg !6870
  call void @llvm.dbg.value(metadata i8 %7, metadata !6864, metadata !DIExpression()), !dbg !6867
  %8 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 3, !dbg !6871
  %9 = load i32, i32* %8, align 4, !dbg !6871
  call void @llvm.dbg.value(metadata i32 %9, metadata !6865, metadata !DIExpression()), !dbg !6867
  %10 = and i32 %9, 983040, !dbg !6872
  call void @llvm.dbg.value(metadata i32 %9, metadata !6866, metadata !DIExpression(DW_OP_constu, 983040, DW_OP_and, DW_OP_stack_value)), !dbg !6867
  tail call fastcc void @configure_common_attr(%struct.Pio* noundef %5, i32 noundef %3, i32 noundef %9) #26, !dbg !6873
  %11 = lshr exact i32 %10, 16, !dbg !6874
  switch i32 %11, label %34 [
    i32 0, label %12
    i32 1, label %18
    i32 8, label %23
    i32 10, label %27
    i32 9, label %27
  ], !dbg !6874

12:                                               ; preds = %1
  %13 = xor i32 %3, -1, !dbg !6875
  %14 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 28, !dbg !6877
  %15 = load volatile i32, i32* %14, align 4, !dbg !6878
  %16 = and i32 %15, %13, !dbg !6878
  store volatile i32 %16, i32* %14, align 4, !dbg !6878
  %17 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 1, !dbg !6879
  br label %35, !dbg !6880

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 28, !dbg !6881
  %20 = load volatile i32, i32* %19, align 4, !dbg !6882
  %21 = or i32 %20, %3, !dbg !6882
  store volatile i32 %21, i32* %19, align 4, !dbg !6882
  %22 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 1, !dbg !6883
  br label %35, !dbg !6884

23:                                               ; preds = %1
  %24 = zext i8 %7 to i32, !dbg !6885
  tail call void @soc_pmc_peripheral_enable(i32 noundef %24) #25, !dbg !6886
  tail call fastcc void @configure_input_attr(%struct.Pio* noundef %5, i32 noundef %3, i32 noundef %9) #26, !dbg !6887
  %25 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 5, !dbg !6888
  store volatile i32 %3, i32* %25, align 4, !dbg !6889
  %26 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 0, !dbg !6890
  br label %35, !dbg !6891

27:                                               ; preds = %1, %1
  %28 = icmp eq i32 %10, 655360, !dbg !6892
  %29 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 13, !dbg !6894
  %30 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 12, !dbg !6894
  %31 = select i1 %28, i32* %30, i32* %29, !dbg !6894
  store volatile i32 %3, i32* %31, align 4, !dbg !6895
  tail call fastcc void @configure_output_attr(%struct.Pio* noundef nonnull %5, i32 noundef %3) #26, !dbg !6896
  %32 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 4, !dbg !6897
  store volatile i32 %3, i32* %32, align 4, !dbg !6898
  %33 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 0, !dbg !6899
  br label %35, !dbg !6900

34:                                               ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.71, i32 0, i32 0), i32 noundef 193) #25, !dbg !6901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3.72, i32 0, i32 0)) #25, !dbg !6901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.71, i32 0, i32 0), i32 noundef 193) #25, !dbg !6901
  unreachable, !dbg !6901

35:                                               ; preds = %27, %23, %18, %12
  %36 = phi i32* [ %33, %27 ], [ %26, %23 ], [ %22, %18 ], [ %17, %12 ]
  store volatile i32 %3, i32* %36, align 4, !dbg !6905
  ret void, !dbg !6906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_common_attr(%struct.Pio* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !6907 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !6911, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i32 %1, metadata !6912, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i32 %2, metadata !6913, metadata !DIExpression()), !dbg !6914
  %4 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 17, !dbg !6915
  store volatile i32 %1, i32* %4, align 4, !dbg !6916
  %5 = and i32 %2, 1, !dbg !6917
  %6 = icmp eq i32 %5, 0, !dbg !6917
  %7 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 24, !dbg !6919
  %8 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 25, !dbg !6919
  %9 = select i1 %6, i32* %7, i32* %8, !dbg !6919
  store volatile i32 %1, i32* %9, align 4, !dbg !6920
  %10 = and i32 %2, 4, !dbg !6921
  %11 = icmp eq i32 %10, 0, !dbg !6921
  %12 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 21, !dbg !6923
  %13 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 20, !dbg !6923
  %14 = select i1 %11, i32* %12, i32* %13, !dbg !6923
  store volatile i32 %1, i32* %14, align 4, !dbg !6924
  ret void, !dbg !6925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_input_attr(%struct.Pio* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !6926 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !6928, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 %1, metadata !6929, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 %2, metadata !6930, metadata !DIExpression()), !dbg !6931
  %4 = and i32 %2, 24, !dbg !6932
  switch i32 %4, label %7 [
    i32 0, label %12
    i32 8, label %5
  ], !dbg !6934

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 31, !dbg !6935
  br label %9, !dbg !6939

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 30, !dbg !6940
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i32* [ %8, %7 ], [ %6, %5 ]
  store volatile i32 %1, i32* %10, align 4, !dbg !6942
  %11 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 8, !dbg !6943
  br label %14, !dbg !6944

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 9, !dbg !6945
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32* [ %13, %12 ], [ %11, %9 ]
  store volatile i32 %1, i32* %15, align 4, !dbg !6947
  %16 = and i32 %2, 32, !dbg !6948
  %17 = icmp eq i32 %16, 0, !dbg !6948
  br i1 %17, label %38, label %18, !dbg !6950

18:                                               ; preds = %14
  %19 = trunc i32 %2 to i8, !dbg !6951
  %20 = and i8 %19, -64, !dbg !6951
  switch i8 %20, label %25 [
    i8 -128, label %21
    i8 64, label %23
  ], !dbg !6951

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 40, !dbg !6953
  br label %35, !dbg !6956

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 43, !dbg !6957
  br label %27, !dbg !6961

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 44, !dbg !6962
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i32* [ %26, %25 ], [ %24, %23 ]
  store volatile i32 %1, i32* %28, align 4, !dbg !6964
  %29 = and i32 %2, 256, !dbg !6965
  %30 = icmp eq i32 %29, 0, !dbg !6965
  %31 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 47, !dbg !6967
  %32 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 48, !dbg !6967
  %33 = select i1 %30, i32* %31, i32* %32, !dbg !6967
  store volatile i32 %1, i32* %33, align 4, !dbg !6968
  %34 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 39, !dbg !6969
  br label %35

35:                                               ; preds = %27, %21
  %36 = phi i32* [ %34, %27 ], [ %22, %21 ]
  store volatile i32 %1, i32* %36, align 4, !dbg !6970
  %37 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 16, !dbg !6971
  store volatile i32 %1, i32* %37, align 4, !dbg !6972
  br label %38, !dbg !6973

38:                                               ; preds = %14, %35
  ret void, !dbg !6974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_output_attr(%struct.Pio* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !6975 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !6977, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.value(metadata i32 %1, metadata !6978, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.value(metadata i32 undef, metadata !6979, metadata !DIExpression()), !dbg !6980
  %3 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 35, !dbg !6981
  store volatile i32 %1, i32* %3, align 4, !dbg !6982
  ret void, !dbg !6983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_gpio_list_configure(%struct.soc_gpio_pin* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6984 {
  call void @llvm.dbg.value(metadata %struct.soc_gpio_pin* %0, metadata !6988, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.value(metadata i32 %1, metadata !6989, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.value(metadata i32 0, metadata !6990, metadata !DIExpression()), !dbg !6993
  %3 = icmp eq i32 %1, 0, !dbg !6994
  br i1 %3, label %4, label %5, !dbg !6996

4:                                                ; preds = %5, %2
  ret void, !dbg !6997

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %8, %5 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6990, metadata !DIExpression()), !dbg !6993
  %7 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 %6, !dbg !6998
  tail call void @soc_gpio_configure(%struct.soc_gpio_pin* noundef %7) #26, !dbg !7000
  %8 = add nuw i32 %6, 1, !dbg !7001
  call void @llvm.dbg.value(metadata i32 %8, metadata !6990, metadata !DIExpression()), !dbg !6993
  %9 = icmp eq i32 %8, %1, !dbg !6994
  br i1 %9, label %4, label %5, !dbg !6996, !llvm.loop !7002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7004 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7007, metadata !DIExpression()), !dbg !7015
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7016
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !7016
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7008, metadata !DIExpression()), !dbg !7017
  call void @llvm.va_start(i8* nonnull %3), !dbg !7018
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7019
  %5 = load i32, i32* %4, align 4, !dbg !7019
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7019
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !7019
  call void @llvm.va_end(i8* nonnull %3), !dbg !7020
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !7021
  ret void, !dbg !7021
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7022 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7027, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.value(metadata i8* %0, metadata !7026, metadata !DIExpression()), !dbg !7028
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !7029
  ret void, !dbg !7030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7035, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i8* %1, metadata !7036, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 %2, metadata !7037, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i8* %1, metadata !7038, metadata !DIExpression()), !dbg !7039
  %4 = icmp eq i32 %2, 0, !dbg !7040
  br i1 %4, label %14, label %5, !dbg !7041

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.75(i32 noundef %0) #26, !dbg !7039
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7041

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7038, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i32 %10, metadata !7037, metadata !DIExpression()), !dbg !7039
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i32 noundef %7) #25, !dbg !7042
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7044
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7045
  call void @llvm.dbg.value(metadata i32 %11, metadata !7037, metadata !DIExpression()), !dbg !7039
  call void @llvm.dbg.value(metadata i8* %12, metadata !7038, metadata !DIExpression()), !dbg !7039
  br i1 %13, label %14, label %8, !dbg !7045, !llvm.loop !7046

14:                                               ; preds = %8, %3
  ret void, !dbg !7048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.75(i32 noundef %0) unnamed_addr #5 !dbg !7049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7051, metadata !DIExpression()), !dbg !7052
  %2 = add i32 %0, -1, !dbg !7053
  %3 = icmp ult i32 %2, 4, !dbg !7053
  %4 = shl i32 %2, 3, !dbg !7053
  %5 = lshr i32 1145657157, %4, !dbg !7053
  %6 = trunc i32 %5 to i8, !dbg !7053
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7053
  ret i8 %7, !dbg !7054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7059, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i32 %1, metadata !7060, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i32 0, metadata !7061, metadata !DIExpression()), !dbg !7071
  br label %4, !dbg !7072

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.77, i32 0, i32 0)) #25, !dbg !7073
  call void @llvm.dbg.value(metadata i32 0, metadata !7063, metadata !DIExpression()), !dbg !7074
  br label %16, !dbg !7075

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7061, metadata !DIExpression()), !dbg !7071
  %6 = icmp ult i32 %5, %1, !dbg !7076
  br i1 %6, label %7, label %11, !dbg !7080

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7081
  %9 = load i8, i8* %8, align 1, !dbg !7081
  %10 = zext i8 %9 to i32, !dbg !7083
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.78, i32 0, i32 0), i32 noundef %10) #25, !dbg !7084
  br label %12, !dbg !7085

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.79, i32 0, i32 0)) #25, !dbg !7086
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %13, metadata !7061, metadata !DIExpression()), !dbg !7071
  %14 = icmp eq i32 %13, 8, !dbg !7089
  br i1 %14, label %3, label %4, !dbg !7072, !llvm.loop !7090

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.80, i32 0, i32 0)) #25, !dbg !7092
  ret void, !dbg !7093

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7063, metadata !DIExpression()), !dbg !7074
  %18 = icmp ult i32 %17, %1, !dbg !7094
  br i1 %18, label %19, label %26, !dbg !7095

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7096
  %21 = load i8, i8* %20, align 1, !dbg !7096
  call void @llvm.dbg.value(metadata i8 %21, metadata !7065, metadata !DIExpression()), !dbg !7097
  %22 = zext i8 %21 to i32, !dbg !7098
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7099
  %24 = icmp eq i32 %23, 0, !dbg !7100
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7099
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.81, i32 0, i32 0), i32 noundef %25) #25, !dbg !7101
  br label %27, !dbg !7102

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.82, i32 0, i32 0)) #25, !dbg !7103
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7105
  call void @llvm.dbg.value(metadata i32 %28, metadata !7063, metadata !DIExpression()), !dbg !7074
  %29 = icmp eq i32 %28, 8, !dbg !7106
  br i1 %29, label %15, label %16, !dbg !7075, !llvm.loop !7107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7111, metadata !DIExpression()), !dbg !7112
  %2 = add i32 %0, -32, !dbg !7113
  %3 = icmp ult i32 %2, 95, !dbg !7113
  %4 = zext i1 %3 to i32, !dbg !7113
  ret i32 %4, !dbg !7114
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7164, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7165, metadata !DIExpression()), !dbg !7166
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7167
  br i1 %3, label %5, label %4, !dbg !7169

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7170
  br label %5, !dbg !7172

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !7173
  ret void, !dbg !7174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7175 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7179, metadata !DIExpression()), !dbg !7180
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7181
  %3 = load i32, i32* %2, align 4, !dbg !7181
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7181
  %5 = load i32, i32* %4, align 4, !dbg !7181
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7181
  %7 = load i32, i32* %6, align 4, !dbg !7181
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !7181
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7186
  %9 = load i32, i32* %8, align 4, !dbg !7186
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7186
  %11 = load i32, i32* %10, align 4, !dbg !7186
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7186
  %13 = load i32, i32* %12, align 4, !dbg !7186
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.84, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !7186
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7191
  %15 = load i32, i32* %14, align 4, !dbg !7191
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.85, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !7191
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7196
  %17 = load i32, i32* %16, align 4, !dbg !7196
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.86, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7196
  ret void, !dbg !7201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7202 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7219, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7220, metadata !DIExpression()), !dbg !7222
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7223
  %4 = load i32, i32* %3, align 4, !dbg !7223
  call void @llvm.dbg.value(metadata i32 %4, metadata !7221, metadata !DIExpression()), !dbg !7222
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7224
  ret void, !dbg !7225
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7226 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7230, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.value(metadata i8* %0, metadata !7231, metadata !DIExpression()), !dbg !7233
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7234
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !7234
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7232, metadata !DIExpression()), !dbg !7235
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7235
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7236
  %5 = bitcast i8* %4 to i32*, !dbg !7236
  %6 = load i32, i32* %5, align 4, !dbg !7236
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7237
  store i32 %6, i32* %7, align 4, !dbg !7238
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7239
  unreachable, !dbg !7240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7244, metadata !DIExpression()), !dbg !7245
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7246
  ret void, !dbg !7247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7252, metadata !DIExpression()), !dbg !7253
  %2 = icmp sgt i32 %0, -1, !dbg !7254
  br i1 %2, label %3, label %8, !dbg !7256

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7257, !srcloc !7259
  %4 = and i32 %0, 31, !dbg !7260
  %5 = shl nuw i32 1, %4, !dbg !7261
  %6 = lshr i32 %0, 5, !dbg !7262
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7263
  store volatile i32 %5, i32* %7, align 4, !dbg !7264
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7265, !srcloc !7266
  br label %8, !dbg !7267

8:                                                ; preds = %3, %1
  ret void, !dbg !7268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7271, metadata !DIExpression()), !dbg !7272
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7273
  ret void, !dbg !7274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7277, metadata !DIExpression()), !dbg !7278
  %2 = icmp sgt i32 %0, -1, !dbg !7279
  br i1 %2, label %3, label %8, !dbg !7281

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7282
  %5 = shl nuw i32 1, %4, !dbg !7284
  %6 = lshr i32 %0, 5, !dbg !7285
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7286
  store volatile i32 %5, i32* %7, align 4, !dbg !7287
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7288, !srcloc !7292
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7293, !srcloc !7296
  br label %8, !dbg !7297

8:                                                ; preds = %3, %1
  ret void, !dbg !7298
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7303, metadata !DIExpression()), !dbg !7304
  %2 = lshr i32 %0, 5, !dbg !7305
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7306
  %4 = load volatile i32, i32* %3, align 4, !dbg !7306
  %5 = and i32 %0, 31, !dbg !7307
  %6 = shl nuw i32 1, %5, !dbg !7307
  %7 = and i32 %4, %6, !dbg !7308
  ret i32 %7, !dbg !7309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7310 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7314, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 %1, metadata !7315, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.value(metadata i32 %2, metadata !7316, metadata !DIExpression()), !dbg !7317
  %4 = add i32 %1, 1, !dbg !7318
  call void @llvm.dbg.value(metadata i32 %4, metadata !7315, metadata !DIExpression()), !dbg !7317
  %5 = icmp ult i32 %4, 16, !dbg !7321
  br i1 %5, label %7, label %6, !dbg !7324

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.89, i32 0, i32 0), i32 noundef 94) #25, !dbg !7325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.90, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !7325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.89, i32 0, i32 0), i32 noundef 94) #25, !dbg !7325
  unreachable, !dbg !7325

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7327
  ret void, !dbg !7328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i32 %1, metadata !7334, metadata !DIExpression()), !dbg !7335
  %3 = trunc i32 %1 to i8, !dbg !7336
  %4 = shl i8 %3, 4, !dbg !7336
  %5 = and i32 %0, 15, !dbg !7338
  %6 = add nsw i32 %5, -4, !dbg !7338
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7338
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7338
  %9 = icmp slt i32 %0, 0, !dbg !7338
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7338
  store volatile i8 %4, i8* %10, align 1, !dbg !7336
  ret void, !dbg !7339
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7342, metadata !DIExpression()), !dbg !7343
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7344
  ret void, !dbg !7345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7346 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7348
  tail call void @z_arm_int_exit() #25, !dbg !7349
  ret void, !dbg !7350
}

; Function Attrs: optsize
declare !dbg !7351 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7352 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7354 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7356
  tail call void @z_bss_zero() #25, !dbg !7357
  tail call void @z_data_copy() #25, !dbg !7358
  tail call void @z_arm_interrupt_init() #25, !dbg !7359
  tail call void @z_cstart() #28, !dbg !7360
  unreachable, !dbg !7360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7361 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7362
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7363, !srcloc !7366
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7367, !srcloc !7370
  ret void, !dbg !7371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7375, metadata !DIExpression()), !dbg !7376
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7377
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7378
  store i32 %0, i32* %3, align 4, !dbg !7379
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7380
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7381
  store i32 %4, i32* %5, align 4, !dbg !7382
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7383
  %7 = or i32 %6, 268435456, !dbg !7383
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7383
  call void @llvm.dbg.value(metadata i32 0, metadata !7384, metadata !DIExpression()) #24, !dbg !7387
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7389, !srcloc !7390
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7391
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7392
  %10 = load i32, i32* %9, align 4, !dbg !7392
  ret i32 %10, !dbg !7393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7506, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7507, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %2, metadata !7508, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7509, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %4, metadata !7510, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %5, metadata !7511, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %6, metadata !7512, metadata !DIExpression()), !dbg !7514
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7515
  call void @llvm.dbg.value(metadata i8* %8, metadata !7513, metadata !DIExpression()), !dbg !7514
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7516
  %10 = bitcast i8* %9 to i32*, !dbg !7516
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7517
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7518
  %12 = bitcast i8* %8 to i32*, !dbg !7519
  store i32 %11, i32* %12, align 4, !dbg !7520
  %13 = ptrtoint i8* %4 to i32, !dbg !7521
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7522
  %15 = bitcast i8* %14 to i32*, !dbg !7522
  store i32 %13, i32* %15, align 4, !dbg !7523
  %16 = ptrtoint i8* %5 to i32, !dbg !7524
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7525
  %18 = bitcast i8* %17 to i32*, !dbg !7525
  store i32 %16, i32* %18, align 4, !dbg !7526
  %19 = ptrtoint i8* %6 to i32, !dbg !7527
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7528
  %21 = bitcast i8* %20 to i32*, !dbg !7528
  store i32 %19, i32* %21, align 4, !dbg !7529
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7530
  %23 = bitcast i8* %22 to i32*, !dbg !7530
  store i32 16777216, i32* %23, align 4, !dbg !7531
  %24 = ptrtoint i8* %8 to i32, !dbg !7532
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7533
  store i32 %24, i32* %25, align 8, !dbg !7534
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7535
  store i32 0, i32* %26, align 4, !dbg !7536
  ret void, !dbg !7537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !7538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7542, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %1, metadata !7543, metadata !DIExpression()), !dbg !7548
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7549
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7544, metadata !DIExpression()), !dbg !7548
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7550
  br i1 %4, label %19, label %5, !dbg !7552

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7547, metadata !DIExpression()), !dbg !7548
  %6 = icmp eq i32 %0, -22, !dbg !7553
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7553
  %8 = load i32, i32* %7, align 4, !dbg !7553
  br i1 %6, label %16, label %9, !dbg !7555

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7553
  %11 = icmp ule i32 %10, %0, !dbg !7553
  %12 = icmp ugt i32 %8, %0, !dbg !7553
  %13 = and i1 %12, %11, !dbg !7553
  %14 = icmp ugt i32 %8, %1, !dbg !7553
  %15 = and i1 %14, %13, !dbg !7553
  br i1 %15, label %18, label %19, !dbg !7553

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7553
  br i1 %17, label %18, label %19, !dbg !7555

18:                                               ; preds = %9, %16
  br label %19, !dbg !7556

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7548
  ret i32 %20, !dbg !7558
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7563, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata i8* %1, metadata !7564, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7565, metadata !DIExpression()), !dbg !7566
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7567
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7568
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7569, !srcloc !7570
  unreachable, !dbg !7571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7572 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7590, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %1, metadata !7591, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 %2, metadata !7592, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7593, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32 0, metadata !7594, metadata !DIExpression()), !dbg !7600
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %8, metadata !7595, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !7600
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7602
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7602
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !7603
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #24, !dbg !7603
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7599, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 0, metadata !7605, metadata !DIExpression()) #24, !dbg !7608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7610, !srcloc !7611
  call void @llvm.dbg.value(metadata i8* %6, metadata !7597, metadata !DIExpression(DW_OP_deref)), !dbg !7600
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7612
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !7598, metadata !DIExpression()), !dbg !7600
  %11 = icmp eq %struct.__esf* %10, null, !dbg !7613
  br i1 %11, label %12, label %13, !dbg !7616

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 1057) #25, !dbg !7617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.96, i32 0, i32 0)) #25, !dbg !7617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 1057) #25, !dbg !7617
  unreachable, !dbg !7617

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %14, metadata !7595, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i8* %5, metadata !7596, metadata !DIExpression(DW_OP_deref)), !dbg !7600
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #26, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %15, metadata !7594, metadata !DIExpression()), !dbg !7600
  %16 = load i8, i8* %5, align 1, !dbg !7621, !range !7623
  call void @llvm.dbg.value(metadata i8 %16, metadata !7596, metadata !DIExpression()), !dbg !7600
  %17 = icmp eq i8 %16, 0, !dbg !7621
  br i1 %17, label %18, label %35, !dbg !7624

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !7625
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !7626
  %21 = load i8, i8* %6, align 1, !dbg !7627, !range !7623
  call void @llvm.dbg.value(metadata i8 %21, metadata !7597, metadata !DIExpression()), !dbg !7600
  %22 = icmp eq i8 %21, 0, !dbg !7627
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7629
  %24 = load i32, i32* %23, align 4, !dbg !7629
  br i1 %22, label %30, label %25, !dbg !7630

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !7631
  %27 = icmp eq i32 %26, 0, !dbg !7634
  br i1 %27, label %28, label %34, !dbg !7635

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !7636
  br label %32, !dbg !7638

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !7639
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !7629
  br label %34, !dbg !7641

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !7641
  br label %35, !dbg !7642

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #24, !dbg !7642
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7642
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7642
  ret void, !dbg !7642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7648, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %1, metadata !7649, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %2, metadata !7650, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %3, metadata !7651, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8 0, metadata !7652, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i8 0, i8* %3, align 1, !dbg !7655
  %5 = icmp ugt i32 %2, -16777217, !dbg !7656
  br i1 %5, label %6, label %17, !dbg !7658

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7659
  %8 = icmp eq i32 %7, 8, !dbg !7659
  br i1 %8, label %9, label %10, !dbg !7659

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.108, i32 0, i32 0), i32 noundef 69) #25, !dbg !7661
  br label %17, !dbg !7667

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7668
  %12 = icmp eq i32 %11, 0, !dbg !7668
  br i1 %12, label %13, label %14, !dbg !7669

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i8 1, i8* %3, align 1, !dbg !7672
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7654
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7653, metadata !DIExpression()), !dbg !7654
  br label %17, !dbg !7675

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7654
  ret %struct.__esf* %18, !dbg !7676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7677 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7681, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %1, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i8* %2, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  store i8 0, i8* %2, align 1, !dbg !7686
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7687

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %5, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7690

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %7, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7692

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7693
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7694

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7695
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  br label %12, !dbg !7696

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7697
  br label %12, !dbg !7698

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7699
  br label %12, !dbg !7700

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !7685
  call void @llvm.dbg.value(metadata i32 %13, metadata !7684, metadata !DIExpression()), !dbg !7685
  ret i32 %13, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7702 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7706, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i8* %1, metadata !7707, metadata !DIExpression()), !dbg !7709
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()), !dbg !7709
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.100, i32 0, i32 0), i32 noundef 69) #25, !dbg !7710
  store i8 0, i8* %1, align 1, !dbg !7715
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7716
  %4 = and i32 %3, 2, !dbg !7718
  %5 = icmp eq i32 %4, 0, !dbg !7719
  br i1 %5, label %7, label %6, !dbg !7720

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.101, i32 0, i32 0), i32 noundef 69) #25, !dbg !7721
  br label %38, !dbg !7727

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7728
  %9 = icmp sgt i32 %8, -1, !dbg !7730
  br i1 %9, label %11, label %10, !dbg !7731

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.102, i32 0, i32 0), i32 noundef 69) #25, !dbg !7732
  br label %38, !dbg !7738

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7739
  %13 = and i32 %12, 1073741824, !dbg !7741
  %14 = icmp eq i32 %13, 0, !dbg !7742
  br i1 %14, label %37, label %15, !dbg !7743

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.103, i32 0, i32 0), i32 noundef 69) #25, !dbg !7744
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7750
  br i1 %16, label %17, label %21, !dbg !7752

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7753
  %19 = load i32, i32* %18, align 4, !dbg !7753
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.104, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7753
  %20 = load i32, i32* %18, align 4, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %20, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %38, !dbg !7760

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7761
  %23 = and i32 %22, 255, !dbg !7763
  %24 = icmp eq i32 %23, 0, !dbg !7764
  br i1 %24, label %27, label %25, !dbg !7765

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %26, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %38, !dbg !7768

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7769
  %29 = and i32 %28, 65280, !dbg !7771
  %30 = icmp eq i32 %29, 0, !dbg !7772
  br i1 %30, label %32, label %31, !dbg !7773

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7774
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %38, !dbg !7776

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7777
  %34 = icmp ult i32 %33, 65536, !dbg !7779
  br i1 %34, label %36, label %35, !dbg !7780

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !7781
  call void @llvm.dbg.value(metadata i32 0, metadata !7708, metadata !DIExpression()), !dbg !7709
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 755) #25, !dbg !7783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.106, i32 0, i32 0)) #25, !dbg !7783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 755) #25, !dbg !7783
  unreachable, !dbg !7783

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 760) #25, !dbg !7788
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.107, i32 0, i32 0)) #25, !dbg !7788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 760) #25, !dbg !7788
  unreachable, !dbg !7788

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !7709
  call void @llvm.dbg.value(metadata i32 %39, metadata !7708, metadata !DIExpression()), !dbg !7709
  ret i32 %39, !dbg !7793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7794 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7796, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 %1, metadata !7797, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* %2, metadata !7798, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 0, metadata !7799, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 -22, metadata !7800, metadata !DIExpression()), !dbg !7809
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.98, i32 0, i32 0), i32 noundef 69) #25, !dbg !7810
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7815
  %5 = and i32 %4, 16, !dbg !7817
  %6 = icmp eq i32 %5, 0, !dbg !7818
  br i1 %6, label %8, label %7, !dbg !7819

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.99, i32 0, i32 0), i32 noundef 69) #25, !dbg !7820
  br label %8, !dbg !7826

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7827
  %10 = and i32 %9, 8, !dbg !7829
  %11 = icmp eq i32 %10, 0, !dbg !7830
  br i1 %11, label %13, label %12, !dbg !7831

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7832
  br label %13, !dbg !7838

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7839
  %15 = and i32 %14, 2, !dbg !7840
  %16 = icmp eq i32 %15, 0, !dbg !7841
  br i1 %16, label %27, label %17, !dbg !7842

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !7843
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7848
  call void @llvm.dbg.value(metadata i32 %18, metadata !7801, metadata !DIExpression()), !dbg !7849
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7850
  %20 = and i32 %19, 128, !dbg !7852
  %21 = icmp eq i32 %20, 0, !dbg !7853
  br i1 %21, label %27, label %22, !dbg !7854

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7800, metadata !DIExpression()), !dbg !7809
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7855
  %23 = icmp eq i32 %1, 0, !dbg !7861
  br i1 %23, label %27, label %24, !dbg !7863

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7864
  %26 = and i32 %25, -129, !dbg !7864
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7864
  br label %27, !dbg !7866

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7809
  call void @llvm.dbg.value(metadata i32 %28, metadata !7800, metadata !DIExpression()), !dbg !7809
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7867
  %30 = and i32 %29, 1, !dbg !7869
  %31 = icmp eq i32 %30, 0, !dbg !7870
  br i1 %31, label %33, label %32, !dbg !7871

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7872
  br label %33, !dbg !7878

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7879
  %35 = and i32 %34, 16, !dbg !7880
  %36 = icmp eq i32 %35, 0, !dbg !7880
  br i1 %36, label %37, label %41, !dbg !7881

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7882
  %39 = and i32 %38, 2, !dbg !7883
  %40 = icmp eq i32 %39, 0, !dbg !7883
  br i1 %40, label %55, label %41, !dbg !7884

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7885
  %43 = and i32 %42, 2048, !dbg !7886
  %44 = icmp eq i32 %43, 0, !dbg !7886
  br i1 %44, label %55, label %45, !dbg !7887

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !7888
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #25, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %47, metadata !7804, metadata !DIExpression()), !dbg !7890
  %48 = icmp eq i32 %47, 0, !dbg !7891
  br i1 %48, label %50, label %49, !dbg !7893

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !7894, metadata !DIExpression()) #24, !dbg !7897
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #24, !dbg !7900, !srcloc !7901
  call void @llvm.dbg.value(metadata i32 2, metadata !7799, metadata !DIExpression()), !dbg !7809
  br label %55, !dbg !7902

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7903
  %52 = and i32 %51, 16, !dbg !7903
  %53 = icmp eq i32 %52, 0, !dbg !7903
  br i1 %53, label %55, label %54, !dbg !7907

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.93, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 343) #25, !dbg !7908
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #25, !dbg !7908
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.95, i32 0, i32 0), i32 noundef 343) #25, !dbg !7908
  unreachable, !dbg !7908

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !7809
  call void @llvm.dbg.value(metadata i32 %56, metadata !7799, metadata !DIExpression()), !dbg !7809
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7910
  %58 = or i32 %57, 255, !dbg !7910
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7910
  store i8 0, i8* %2, align 1, !dbg !7911
  ret i32 %56, !dbg !7912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7913 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7917, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i32 %0, metadata !7918, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i8* %1, metadata !7919, metadata !DIExpression()), !dbg !7924
  call void @llvm.dbg.value(metadata i32 0, metadata !7920, metadata !DIExpression()), !dbg !7924
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7925
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7930
  %4 = and i32 %3, 4096, !dbg !7932
  %5 = icmp eq i32 %4, 0, !dbg !7932
  br i1 %5, label %7, label %6, !dbg !7933

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7934
  br label %7, !dbg !7940

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7941
  %9 = and i32 %8, 2048, !dbg !7943
  %10 = icmp eq i32 %9, 0, !dbg !7943
  br i1 %10, label %12, label %11, !dbg !7944

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7945
  br label %12, !dbg !7951

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7952
  %14 = and i32 %13, 512, !dbg !7953
  %15 = icmp eq i32 %14, 0, !dbg !7953
  br i1 %15, label %26, label %16, !dbg !7954

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7955
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %17, metadata !7921, metadata !DIExpression()), !dbg !7961
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7962
  %19 = and i32 %18, 32768, !dbg !7964
  %20 = icmp eq i32 %19, 0, !dbg !7965
  br i1 %20, label %26, label %21, !dbg !7966

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7967
  %22 = icmp eq i32 %0, 0, !dbg !7973
  br i1 %22, label %26, label %23, !dbg !7975

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7976
  %25 = and i32 %24, -32769, !dbg !7976
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7976
  br label %26, !dbg !7978

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7979
  %28 = and i32 %27, 1024, !dbg !7981
  %29 = icmp eq i32 %28, 0, !dbg !7981
  br i1 %29, label %31, label %30, !dbg !7982

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.97, i32 0, i32 0), i32 noundef 69) #25, !dbg !7983
  br label %31, !dbg !7989

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7990
  %33 = and i32 %32, 256, !dbg !7992
  %34 = icmp eq i32 %33, 0, !dbg !7993
  br i1 %34, label %36, label %35, !dbg !7994

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7995
  br label %36, !dbg !8001

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8002
  %38 = or i32 %37, 65280, !dbg !8002
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8002
  store i8 0, i8* %1, align 1, !dbg !8003
  ret void, !dbg !8004
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8005 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8011, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 0, metadata !8012, metadata !DIExpression()), !dbg !8013
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #25, !dbg !8014
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8019
  %2 = and i32 %1, 33554432, !dbg !8021
  %3 = icmp eq i32 %2, 0, !dbg !8022
  br i1 %3, label %5, label %4, !dbg !8023

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !8024
  br label %5, !dbg !8030

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8031
  %7 = and i32 %6, 16777216, !dbg !8033
  %8 = icmp eq i32 %7, 0, !dbg !8034
  br i1 %8, label %10, label %9, !dbg !8035

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !8036
  br label %10, !dbg !8042

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8043
  %12 = and i32 %11, 524288, !dbg !8045
  %13 = icmp eq i32 %12, 0, !dbg !8046
  br i1 %13, label %15, label %14, !dbg !8047

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !8048
  br label %15, !dbg !8054

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8055
  %17 = and i32 %16, 262144, !dbg !8057
  %18 = icmp eq i32 %17, 0, !dbg !8058
  br i1 %18, label %20, label %19, !dbg !8059

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !8060
  br label %20, !dbg !8066

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8067
  %22 = and i32 %21, 131072, !dbg !8069
  %23 = icmp eq i32 %22, 0, !dbg !8070
  br i1 %23, label %25, label %24, !dbg !8071

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !8072
  br label %25, !dbg !8078

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8079
  %27 = and i32 %26, 65536, !dbg !8081
  %28 = icmp eq i32 %27, 0, !dbg !8082
  br i1 %28, label %30, label %29, !dbg !8083

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !8084
  br label %30, !dbg !8090

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8091
  %32 = or i32 %31, -65536, !dbg !8091
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8091
  ret void, !dbg !8092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8093 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8097, metadata !DIExpression()), !dbg !8099
  call void @llvm.dbg.value(metadata i8* %0, metadata !8098, metadata !DIExpression()), !dbg !8099
  store i8 0, i8* %0, align 1, !dbg !8100
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !8101
  ret void, !dbg !8106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8107 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8111, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %0, metadata !8112, metadata !DIExpression()), !dbg !8113
  %2 = icmp slt i32 %0, 16, !dbg !8114
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !8114
  %4 = add nsw i32 %0, -16, !dbg !8114
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !8114
  ret void, !dbg !8119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8120 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8124, metadata !DIExpression()), !dbg !8127
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8128
  %3 = load i32, i32* %2, align 4, !dbg !8128
  %4 = inttoptr i32 %3 to i16*, !dbg !8129
  call void @llvm.dbg.value(metadata i16* %4, metadata !8125, metadata !DIExpression()), !dbg !8127
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8130
  %6 = or i32 %5, 256, !dbg !8130
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8130
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !8131, !srcloc !8134
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !8135, !srcloc !8138
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8139
  %8 = load i16, i16* %7, align 2, !dbg !8140
  call void @llvm.dbg.value(metadata i16 %8, metadata !8126, metadata !DIExpression()), !dbg !8127
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8141
  %10 = and i32 %9, -257, !dbg !8141
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8141
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !8142, !srcloc !8134
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !8144, !srcloc !8138
  %11 = icmp eq i16 %8, -8446, !dbg !8146
  ret i1 %11, !dbg !8148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8149 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8150
  %2 = or i32 %1, 16, !dbg !8150
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8150
  ret void, !dbg !8151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8152 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8155, metadata !DIExpression()), !dbg !8156
  br label %1, !dbg !8157

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8155, metadata !DIExpression()), !dbg !8156
  tail call fastcc void @__NVIC_SetPriority.111(i32 noundef %2) #26, !dbg !8159
  %3 = add nuw nsw i32 %2, 1, !dbg !8162
  call void @llvm.dbg.value(metadata i32 %3, metadata !8155, metadata !DIExpression()), !dbg !8156
  %4 = icmp eq i32 %3, 45, !dbg !8163
  br i1 %4, label %5, label %1, !dbg !8157, !llvm.loop !8164

5:                                                ; preds = %1
  ret void, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.111(i32 noundef %0) unnamed_addr #18 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8169, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.value(metadata i32 1, metadata !8170, metadata !DIExpression()), !dbg !8171
  %2 = and i32 %0, 15, !dbg !8172
  %3 = add nsw i32 %2, -4, !dbg !8172
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8172
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8172
  %6 = icmp slt i32 %0, 0, !dbg !8172
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8172
  store volatile i8 16, i8* %7, align 1, !dbg !8173
  ret void, !dbg !8175
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8284, metadata !DIExpression()), !dbg !8285
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8286
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8288
  br i1 %3, label %4, label %12, !dbg !8289

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !8290, !srcloc !8302
  call void @llvm.dbg.value(metadata i32 %5, metadata !8293, metadata !DIExpression()) #24, !dbg !8303
  %6 = icmp eq i32 %5, 0, !dbg !8304
  br i1 %6, label %12, label %7, !dbg !8305

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8306
  %9 = or i32 %8, 268435456, !dbg !8306
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8306
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8308
  %11 = and i32 %10, -32769, !dbg !8308
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8308
  br label %12, !dbg !8309

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8310
  ret void, !dbg !8311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8312 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !8313
  ret void, !dbg !8314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !664, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i8 0, metadata !665, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 64, metadata !667, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 undef, metadata !666, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8315
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8316
  %3 = load i32, i32* %2, align 4, !dbg !8316
  call void @llvm.dbg.value(metadata i32 %3, metadata !666, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8315
  %4 = add i32 %3, -64, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %4, metadata !666, metadata !DIExpression()), !dbg !8315
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8319
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8320
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8321
  call void @llvm.dbg.value(metadata i8 1, metadata !665, metadata !DIExpression()), !dbg !8315
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !8322
  ret void, !dbg !8323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8324 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8325
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !8326, !srcloc !8329
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !8330, !srcloc !8333
  ret void, !dbg !8334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8335 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !8336, !srcloc !8339
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8340
  ret void, !dbg !8341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8342 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8358, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.value(metadata i8 %1, metadata !8359, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.value(metadata i32 %2, metadata !8360, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.value(metadata i32 %3, metadata !8361, metadata !DIExpression()), !dbg !8362
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8363
  %6 = icmp eq i32 %5, -22, !dbg !8365
  br i1 %6, label %7, label %9, !dbg !8366

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 283) #25, !dbg !8367
  %8 = zext i8 %1 to i32, !dbg !8367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.123, i32 0, i32 0), i32 noundef %8) #25, !dbg !8367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 283) #25, !dbg !8367
  unreachable, !dbg !8367

9:                                                ; preds = %4
  ret void, !dbg !8372
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8373 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8378, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i8 %1, metadata !8379, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 undef, metadata !8380, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 undef, metadata !8381, metadata !DIExpression()), !dbg !8383
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8384
  call void @llvm.dbg.value(metadata i8 %3, metadata !8382, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8383
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !8385
  call void @llvm.dbg.value(metadata i32 %4, metadata !8382, metadata !DIExpression()), !dbg !8383
  %5 = trunc i32 %4 to i8, !dbg !8386
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8387
  ret i32 %4, !dbg !8388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8389 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8393, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i8 %1, metadata !8394, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i8 %2, metadata !8395, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i1 %3, metadata !8396, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8399
  %5 = zext i8 %2 to i32, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %5, metadata !8398, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 0, metadata !8397, metadata !DIExpression()), !dbg !8399
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8398, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 0, metadata !8397, metadata !DIExpression()), !dbg !8399
  %7 = icmp eq i8 %1, 0, !dbg !8401
  br i1 %7, label %30, label %8, !dbg !8404

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8398, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %10, metadata !8397, metadata !DIExpression()), !dbg !8399
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8405
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8408
  %13 = load i32, i32* %12, align 4, !dbg !8408
  %14 = icmp eq i32 %13, 0, !dbg !8409
  br i1 %14, label %26, label %15, !dbg !8410

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8411

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8413
  %18 = icmp eq i32 %17, 0, !dbg !8413
  br i1 %18, label %19, label %20, !dbg !8414

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.124, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !8415
  br label %30, !dbg !8421

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8422
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !8423
  call void @llvm.dbg.value(metadata i32 %22, metadata !8398, metadata !DIExpression()), !dbg !8399
  %23 = icmp eq i32 %22, -22, !dbg !8424
  br i1 %23, label %30, label %24, !dbg !8426

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8427
  call void @llvm.dbg.value(metadata i32 %25, metadata !8398, metadata !DIExpression()), !dbg !8399
  br label %26, !dbg !8428

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8399
  call void @llvm.dbg.value(metadata i32 %27, metadata !8398, metadata !DIExpression()), !dbg !8399
  %28 = add nuw nsw i32 %10, 1, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %28, metadata !8397, metadata !DIExpression()), !dbg !8399
  %29 = icmp eq i32 %28, %6, !dbg !8401
  br i1 %29, label %30, label %8, !dbg !8404, !llvm.loop !8430

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8399
  ret i32 %31, !dbg !8432
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8433 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8437, metadata !DIExpression()), !dbg !8439
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8440
  %3 = load i32, i32* %2, align 4, !dbg !8440
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8441, !range !4666
  %5 = icmp ult i32 %4, 2, !dbg !8441
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8442
  br i1 %7, label %8, label %15, !dbg !8442

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8443
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8444
  %11 = load i32, i32* %10, align 4, !dbg !8444
  %12 = and i32 %11, %9, !dbg !8445
  %13 = icmp eq i32 %12, 0, !dbg !8446
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8438, metadata !DIExpression()), !dbg !8439
  ret i32 %16, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8448 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8452, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8453, metadata !DIExpression()), !dbg !8455
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8456
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !8456
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8454, metadata !DIExpression()), !dbg !8457
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8458
  %6 = load i32, i32* %5, align 4, !dbg !8458
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8459
  store i32 %6, i32* %7, align 4, !dbg !8460
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8461
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8462
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8463
  %11 = load i32, i32* %10, align 4, !dbg !8463
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #26, !dbg !8464
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !8465
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !8466
  ret i32 %12, !dbg !8467
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !8468 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !8475, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !8476, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 undef, metadata !8477, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i32 %2, metadata !8478, metadata !DIExpression()), !dbg !8479
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !8480
  %5 = load i32, i32* %4, align 4, !dbg !8480
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !8481
  %7 = or i32 %6, %5, !dbg !8482
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !8483
  store i32 %7, i32* %8, align 4, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8486 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8490, metadata !DIExpression()), !dbg !8492
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8491, metadata !DIExpression()), !dbg !8492
  %3 = zext i8 %0 to i32, !dbg !8493
  %4 = icmp ugt i8 %0, 7, !dbg !8495
  br i1 %4, label %5, label %6, !dbg !8496

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.125, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !8497
  br label %7, !dbg !8503

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !8504
  br label %7, !dbg !8505

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8492
  ret i32 %8, !dbg !8506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #18 !dbg !8507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8511, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !8514
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !8515
  %4 = load i32, i32* %3, align 4, !dbg !8515
  %5 = and i32 %4, -32, !dbg !8516
  %6 = or i32 %5, %0, !dbg !8517
  %7 = or i32 %6, 16, !dbg !8517
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !8518
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !8519
  %9 = load i32, i32* %8, align 4, !dbg !8519
  %10 = or i32 %9, 1, !dbg !8520
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #18 !dbg !8523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8526, metadata !DIExpression()), !dbg !8527
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !8530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8532, metadata !DIExpression()), !dbg !8533
  %2 = icmp ult i32 %0, 33, !dbg !8534
  br i1 %2, label %11, label %3, !dbg !8536

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !8537
  br i1 %4, label %11, label %5, !dbg !8539

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !8540
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !8541, !range !4666
  %8 = mul nsw i32 %7, -2, !dbg !8542
  %9 = add nsw i32 %8, 62, !dbg !8542
  %10 = and i32 %9, 62, !dbg !8543
  br label %11, !dbg !8544

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !8533
  ret i32 %12, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !8546 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8550, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8 %1, metadata !8551, metadata !DIExpression()), !dbg !8552
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !8553
  %4 = icmp eq i32 %3, -22, !dbg !8555
  br i1 %4, label %5, label %7, !dbg !8556

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 314) #25, !dbg !8557
  %6 = zext i8 %1 to i32, !dbg !8557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.128, i32 0, i32 0), i32 noundef %6) #25, !dbg !8557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 314) #25, !dbg !8557
  unreachable, !dbg !8557

7:                                                ; preds = %2
  ret void, !dbg !8562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8567, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.value(metadata i8 %1, metadata !8568, metadata !DIExpression()), !dbg !8574
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8575
  call void @llvm.dbg.value(metadata i8 %3, metadata !8569, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8574
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !8576
  call void @llvm.dbg.value(metadata i32 %4, metadata !8569, metadata !DIExpression()), !dbg !8574
  %5 = icmp ne i32 %4, -22, !dbg !8577
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !8578
  call void @llvm.dbg.value(metadata i32 %4, metadata !8570, metadata !DIExpression()), !dbg !8579
  br i1 %7, label %8, label %12, !dbg !8578

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8570, metadata !DIExpression()), !dbg !8579
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !8580
  %10 = add i32 %9, 1, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %10, metadata !8570, metadata !DIExpression()), !dbg !8579
  %11 = icmp eq i32 %10, 8, !dbg !8584
  br i1 %11, label %12, label %8, !dbg !8585, !llvm.loop !8586

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !8588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #18 !dbg !8589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8592, metadata !DIExpression()), !dbg !8593
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !8594
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !8595
  ret void, !dbg !8596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !8597 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !8602
  %2 = icmp ugt i32 %1, 8, !dbg !8604
  br i1 %2, label %3, label %4, !dbg !8605

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 341) #25, !dbg !8606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.129, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !8606
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 341) #25, !dbg !8606
  unreachable, !dbg !8606

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !8611
  call void @llvm.dbg.value(metadata i32 0, metadata !8601, metadata !DIExpression()), !dbg !8612
  %5 = icmp eq i32 %1, 0, !dbg !8613
  br i1 %5, label %13, label %6, !dbg !8616

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !8616

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8601, metadata !DIExpression()), !dbg !8612
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !8617
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #26, !dbg !8619
  %11 = add nuw i32 %9, 1, !dbg !8620
  call void @llvm.dbg.value(metadata i32 %11, metadata !8601, metadata !DIExpression()), !dbg !8612
  %12 = icmp eq i32 %11, %1, !dbg !8613
  br i1 %12, label %13, label %8, !dbg !8616, !llvm.loop !8621

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !8623
  store i8 %14, i8* @static_regions_num, align 1, !dbg !8624
  tail call void @arm_core_mpu_enable() #26, !dbg !8625
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !8626
  %16 = and i32 %15, 65280, !dbg !8626
  %17 = icmp eq i32 %16, 2048, !dbg !8626
  br i1 %17, label %19, label %18, !dbg !8629

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 435) #25, !dbg !8630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.131, i32 0, i32 0)) #25, !dbg !8630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.122, i32 0, i32 0), i32 noundef 435) #25, !dbg !8630
  unreachable, !dbg !8630

19:                                               ; preds = %13
  ret i32 0, !dbg !8632
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !8633 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %1, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %0, metadata !8642, metadata !DIExpression()), !dbg !8643
  %3 = load i8, i8* %1, align 1, !dbg !8644
  %4 = icmp eq i8 %3, 0, !dbg !8645
  br i1 %4, label %13, label %5, !dbg !8646

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %8, metadata !8641, metadata !DIExpression()), !dbg !8643
  store i8 %6, i8* %7, align 1, !dbg !8647
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8649
  call void @llvm.dbg.value(metadata i8* %9, metadata !8640, metadata !DIExpression()), !dbg !8643
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8650
  call void @llvm.dbg.value(metadata i8* %10, metadata !8641, metadata !DIExpression()), !dbg !8643
  %11 = load i8, i8* %10, align 1, !dbg !8644
  %12 = icmp eq i8 %11, 0, !dbg !8645
  br i1 %12, label %13, label %5, !dbg !8646, !llvm.loop !8651

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8653
  ret i8* %0, !dbg !8654
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8659, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i8* %1, metadata !8660, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 %2, metadata !8661, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i8* %0, metadata !8662, metadata !DIExpression()), !dbg !8663
  %4 = icmp eq i32 %2, 0, !dbg !8664
  br i1 %4, label %22, label %5, !dbg !8665

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8659, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 %7, metadata !8661, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i8* %8, metadata !8660, metadata !DIExpression()), !dbg !8663
  %9 = load i8, i8* %8, align 1, !dbg !8666
  %10 = icmp eq i8 %9, 0, !dbg !8667
  br i1 %10, label %16, label %11, !dbg !8668

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8669
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8671
  call void @llvm.dbg.value(metadata i8* %12, metadata !8660, metadata !DIExpression()), !dbg !8663
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8672
  call void @llvm.dbg.value(metadata i8* %13, metadata !8659, metadata !DIExpression()), !dbg !8663
  %14 = add i32 %7, -1, !dbg !8673
  call void @llvm.dbg.value(metadata i32 %14, metadata !8661, metadata !DIExpression()), !dbg !8663
  %15 = icmp eq i32 %14, 0, !dbg !8664
  br i1 %15, label %22, label %5, !dbg !8665, !llvm.loop !8674

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8659, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 %18, metadata !8661, metadata !DIExpression()), !dbg !8663
  store i8 0, i8* %17, align 1, !dbg !8676
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8678
  call void @llvm.dbg.value(metadata i8* %19, metadata !8659, metadata !DIExpression()), !dbg !8663
  %20 = add i32 %18, -1, !dbg !8679
  call void @llvm.dbg.value(metadata i32 %20, metadata !8661, metadata !DIExpression()), !dbg !8663
  %21 = icmp eq i32 %20, 0, !dbg !8680
  br i1 %21, label %22, label %16, !dbg !8681, !llvm.loop !8682

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8684
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8685 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8689, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i32 %1, metadata !8690, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i32 %1, metadata !8691, metadata !DIExpression()), !dbg !8692
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8693

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8689, metadata !DIExpression()), !dbg !8692
  %6 = load i8, i8* %5, align 1, !dbg !8694
  %7 = icmp eq i8 %6, %3, !dbg !8695
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8696
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8697
  call void @llvm.dbg.value(metadata i8* %10, metadata !8689, metadata !DIExpression()), !dbg !8692
  br i1 %9, label %11, label %4, !dbg !8696, !llvm.loop !8699

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8701
  ret i8* %12, !dbg !8702
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8703 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8705, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i32 %1, metadata !8706, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* null, metadata !8707, metadata !DIExpression()), !dbg !8708
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8709

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8708
  call void @llvm.dbg.value(metadata i8* %6, metadata !8707, metadata !DIExpression()), !dbg !8708
  call void @llvm.dbg.value(metadata i8* %5, metadata !8705, metadata !DIExpression()), !dbg !8708
  %7 = load i8, i8* %5, align 1, !dbg !8710
  %8 = icmp eq i8 %7, %3, !dbg !8713
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8714
  call void @llvm.dbg.value(metadata i8* %9, metadata !8707, metadata !DIExpression()), !dbg !8708
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8715
  call void @llvm.dbg.value(metadata i8* %10, metadata !8705, metadata !DIExpression()), !dbg !8708
  %11 = icmp eq i8 %7, 0, !dbg !8716
  br i1 %11, label %12, label %4, !dbg !8716, !llvm.loop !8717

12:                                               ; preds = %4
  ret i8* %9, !dbg !8719
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8720 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8724, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata i32 0, metadata !8725, metadata !DIExpression()), !dbg !8726
  %2 = load i8, i8* %0, align 1, !dbg !8727
  %3 = icmp eq i8 %2, 0, !dbg !8728
  br i1 %3, label %11, label %4, !dbg !8729

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8725, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.value(metadata i8* %6, metadata !8724, metadata !DIExpression()), !dbg !8726
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8730
  call void @llvm.dbg.value(metadata i8* %7, metadata !8724, metadata !DIExpression()), !dbg !8726
  %8 = add i32 %5, 1, !dbg !8732
  call void @llvm.dbg.value(metadata i32 %8, metadata !8725, metadata !DIExpression()), !dbg !8726
  %9 = load i8, i8* %7, align 1, !dbg !8727
  %10 = icmp eq i8 %9, 0, !dbg !8728
  br i1 %10, label %11, label %4, !dbg !8729, !llvm.loop !8733

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8726
  ret i32 %12, !dbg !8735
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8736 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8740, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 %1, metadata !8741, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i32 0, metadata !8742, metadata !DIExpression()), !dbg !8743
  %3 = load i8, i8* %0, align 1, !dbg !8744
  %4 = icmp ne i8 %3, 0, !dbg !8745
  %5 = icmp ne i32 %1, 0, !dbg !8746
  %6 = and i1 %4, %5, !dbg !8746
  br i1 %6, label %7, label %16, !dbg !8747

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8742, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata i8* %9, metadata !8740, metadata !DIExpression()), !dbg !8743
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8748
  call void @llvm.dbg.value(metadata i8* %10, metadata !8740, metadata !DIExpression()), !dbg !8743
  %11 = add nuw i32 %8, 1, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %11, metadata !8742, metadata !DIExpression()), !dbg !8743
  %12 = load i8, i8* %10, align 1, !dbg !8744
  %13 = icmp ne i8 %12, 0, !dbg !8745
  %14 = icmp ult i32 %11, %1, !dbg !8746
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8746
  br i1 %15, label %7, label %16, !dbg !8747, !llvm.loop !8751

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8743
  ret i32 %17, !dbg !8753
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !8754 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8758, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.value(metadata i8* %1, metadata !8759, metadata !DIExpression()), !dbg !8760
  %3 = load i8, i8* %0, align 1, !dbg !8761
  %4 = load i8, i8* %1, align 1, !dbg !8762
  %5 = icmp ne i8 %3, %4, !dbg !8763
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8764
  br i1 %7, label %18, label %8, !dbg !8764

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8759, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.value(metadata i8* %10, metadata !8758, metadata !DIExpression()), !dbg !8760
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8765
  call void @llvm.dbg.value(metadata i8* %11, metadata !8758, metadata !DIExpression()), !dbg !8760
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8767
  call void @llvm.dbg.value(metadata i8* %12, metadata !8759, metadata !DIExpression()), !dbg !8760
  %13 = load i8, i8* %11, align 1, !dbg !8761
  %14 = load i8, i8* %12, align 1, !dbg !8762
  %15 = icmp ne i8 %13, %14, !dbg !8763
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8764
  br i1 %17, label %18, label %8, !dbg !8764, !llvm.loop !8768

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8761
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8762
  %21 = zext i8 %19 to i32, !dbg !8771
  %22 = zext i8 %20 to i32, !dbg !8772
  %23 = sub nsw i32 %21, %22, !dbg !8773
  ret i32 %23, !dbg !8774
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8775 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8779, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %1, metadata !8780, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i32 %2, metadata !8781, metadata !DIExpression()), !dbg !8782
  %4 = icmp eq i32 %2, 0, !dbg !8783
  br i1 %4, label %23, label %5, !dbg !8783

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %7, metadata !8780, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.value(metadata i8* %8, metadata !8779, metadata !DIExpression()), !dbg !8782
  %9 = load i8, i8* %8, align 1, !dbg !8784
  %10 = load i8, i8* %7, align 1, !dbg !8785
  %11 = icmp ne i8 %9, %10, !dbg !8786
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8787
  br i1 %13, label %19, label %14, !dbg !8787

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %15, metadata !8779, metadata !DIExpression()), !dbg !8782
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8790
  call void @llvm.dbg.value(metadata i8* %16, metadata !8780, metadata !DIExpression()), !dbg !8782
  %17 = add i32 %6, -1, !dbg !8791
  call void @llvm.dbg.value(metadata i32 %17, metadata !8781, metadata !DIExpression()), !dbg !8782
  %18 = icmp eq i32 %17, 0, !dbg !8783
  br i1 %18, label %23, label %5, !dbg !8783, !llvm.loop !8792

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8795
  %21 = zext i8 %10 to i32, !dbg !8796
  %22 = sub nsw i32 %20, %21, !dbg !8797
  br label %23, !dbg !8798

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8798
  ret i32 %24, !dbg !8799
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !8800 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8804, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.value(metadata i8* %1, metadata !8805, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.value(metadata i8** %2, metadata !8806, metadata !DIExpression()), !dbg !8809
  %4 = icmp eq i8* %0, null, !dbg !8810
  br i1 %4, label %5, label %7, !dbg !8810

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8811
  br label %7, !dbg !8810

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8810
  call void @llvm.dbg.value(metadata i8* %8, metadata !8807, metadata !DIExpression()), !dbg !8809
  %9 = load i8, i8* %8, align 1, !dbg !8812
  %10 = icmp eq i8 %9, 0, !dbg !8812
  br i1 %10, label %33, label %11, !dbg !8813

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8807, metadata !DIExpression()), !dbg !8809
  %14 = zext i8 %12 to i32, !dbg !8812
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8814
  %16 = icmp eq i8* %15, null, !dbg !8813
  br i1 %16, label %21, label %17, !dbg !8815

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8816
  call void @llvm.dbg.value(metadata i8* %18, metadata !8807, metadata !DIExpression()), !dbg !8809
  %19 = load i8, i8* %18, align 1, !dbg !8812
  %20 = icmp eq i8 %19, 0, !dbg !8812
  br i1 %20, label %33, label %11, !dbg !8813, !llvm.loop !8818

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8808, metadata !DIExpression()), !dbg !8809
  %24 = zext i8 %22 to i32, !dbg !8820
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8821
  %26 = icmp eq i8* %25, null, !dbg !8822
  br i1 %26, label %27, label %31, !dbg !8823

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8824
  call void @llvm.dbg.value(metadata i8* %28, metadata !8808, metadata !DIExpression()), !dbg !8809
  %29 = load i8, i8* %28, align 1, !dbg !8820
  %30 = icmp eq i8 %29, 0, !dbg !8820
  br i1 %30, label %33, label %21, !dbg !8826, !llvm.loop !8827

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8829
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8832
  br label %33, !dbg !8833

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8809
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8809
  store i8* %34, i8** %2, align 4, !dbg !8809
  ret i8* %35, !dbg !8834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !8835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8837, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata i8* %1, metadata !8838, metadata !DIExpression()), !dbg !8839
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8840
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8841
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8842
  ret i8* %0, !dbg !8843
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8844 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8846, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %1, metadata !8847, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %2, metadata !8848, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %0, metadata !8849, metadata !DIExpression()), !dbg !8851
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8852
  call void @llvm.dbg.value(metadata i32 %4, metadata !8850, metadata !DIExpression()), !dbg !8851
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8853
  call void @llvm.dbg.value(metadata i8* %5, metadata !8846, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %1, metadata !8847, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %2, metadata !8848, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %2, metadata !8848, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8851
  %6 = icmp eq i32 %2, 0, !dbg !8854
  br i1 %6, label %18, label %7, !dbg !8855

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8856
  call void @llvm.dbg.value(metadata i8* %9, metadata !8846, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %10, metadata !8847, metadata !DIExpression()), !dbg !8851
  %12 = load i8, i8* %10, align 1, !dbg !8857
  %13 = icmp eq i8 %12, 0, !dbg !8858
  br i1 %13, label %18, label %14, !dbg !8859

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8860
  call void @llvm.dbg.value(metadata i8* %15, metadata !8847, metadata !DIExpression()), !dbg !8851
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8862
  call void @llvm.dbg.value(metadata i8* %16, metadata !8846, metadata !DIExpression()), !dbg !8851
  store i8 %12, i8* %9, align 1, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %11, metadata !8848, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i32 %11, metadata !8848, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8851
  %17 = icmp eq i32 %11, 0, !dbg !8854
  br i1 %17, label %18, label %7, !dbg !8855, !llvm.loop !8864

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8851
  store i8 0, i8* %19, align 1, !dbg !8866
  ret i8* %0, !dbg !8867
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8868 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8872, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i8* %1, metadata !8873, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i32 %2, metadata !8874, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i8* %0, metadata !8875, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i8* %1, metadata !8876, metadata !DIExpression()), !dbg !8877
  %4 = icmp eq i32 %2, 0, !dbg !8878
  br i1 %4, label %31, label %5, !dbg !8880

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i8* %0, metadata !8875, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i32 %2, metadata !8874, metadata !DIExpression()), !dbg !8877
  %6 = add i32 %2, -1, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %6, metadata !8874, metadata !DIExpression()), !dbg !8877
  %7 = icmp eq i32 %6, 0, !dbg !8882
  br i1 %7, label %23, label %8, !dbg !8883

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8884
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8884
  br label %11, !dbg !8884

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i8* %14, metadata !8875, metadata !DIExpression()), !dbg !8877
  %15 = load i8, i8* %14, align 1, !dbg !8885
  %16 = load i8, i8* %13, align 1, !dbg !8886
  %17 = icmp eq i8 %15, %16, !dbg !8887
  br i1 %17, label %18, label %23, !dbg !8884

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8888
  call void @llvm.dbg.value(metadata i8* %19, metadata !8875, metadata !DIExpression()), !dbg !8877
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8890
  call void @llvm.dbg.value(metadata i8* %20, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.value(metadata i32 %12, metadata !8874, metadata !DIExpression()), !dbg !8877
  %21 = add i32 %12, -1, !dbg !8881
  call void @llvm.dbg.value(metadata i32 %21, metadata !8874, metadata !DIExpression()), !dbg !8877
  %22 = icmp eq i32 %21, 0, !dbg !8882
  br i1 %22, label %23, label %11, !dbg !8883, !llvm.loop !8891

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8877
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8877
  %26 = load i8, i8* %24, align 1, !dbg !8893
  %27 = zext i8 %26 to i32, !dbg !8893
  %28 = load i8, i8* %25, align 1, !dbg !8894
  %29 = zext i8 %28 to i32, !dbg !8894
  %30 = sub nsw i32 %27, %29, !dbg !8895
  br label %31, !dbg !8896

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8877
  ret i32 %32, !dbg !8897
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8898 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8902, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %1, metadata !8903, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 %2, metadata !8904, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %0, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %1, metadata !8906, metadata !DIExpression()), !dbg !8907
  %4 = ptrtoint i8* %0 to i32, !dbg !8908
  %5 = ptrtoint i8* %1 to i32, !dbg !8908
  %6 = sub i32 %4, %5, !dbg !8908
  %7 = icmp ult i32 %6, %2, !dbg !8910
  br i1 %7, label %10, label %8, !dbg !8911

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8906, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %0, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 %2, metadata !8904, metadata !DIExpression()), !dbg !8907
  %9 = icmp eq i32 %2, 0, !dbg !8912
  br i1 %9, label %26, label %17, !dbg !8914

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8904, metadata !DIExpression()), !dbg !8907
  %12 = add i32 %11, -1, !dbg !8915
  call void @llvm.dbg.value(metadata i32 %12, metadata !8904, metadata !DIExpression()), !dbg !8907
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8918
  %14 = load i8, i8* %13, align 1, !dbg !8918
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8919
  store i8 %14, i8* %15, align 1, !dbg !8920
  %16 = icmp eq i32 %12, 0, !dbg !8921
  br i1 %16, label %26, label %10, !dbg !8922, !llvm.loop !8923

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8906, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i8* %19, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata i32 %20, metadata !8904, metadata !DIExpression()), !dbg !8907
  %21 = load i8, i8* %18, align 1, !dbg !8925
  store i8 %21, i8* %19, align 1, !dbg !8927
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8928
  call void @llvm.dbg.value(metadata i8* %22, metadata !8905, metadata !DIExpression()), !dbg !8907
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8929
  call void @llvm.dbg.value(metadata i8* %23, metadata !8906, metadata !DIExpression()), !dbg !8907
  %24 = add i32 %20, -1, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %24, metadata !8904, metadata !DIExpression()), !dbg !8907
  %25 = icmp eq i32 %24, 0, !dbg !8912
  br i1 %25, label %26, label %17, !dbg !8914, !llvm.loop !8931

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8940, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i8* %1, metadata !8941, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %2, metadata !8942, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i8* %0, metadata !8943, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i8* %1, metadata !8944, metadata !DIExpression()), !dbg !8945
  %4 = icmp eq i32 %2, 0, !dbg !8946
  br i1 %4, label %14, label %5, !dbg !8947

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8944, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i8* %7, metadata !8943, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %8, metadata !8942, metadata !DIExpression()), !dbg !8945
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8948
  call void @llvm.dbg.value(metadata i8* %9, metadata !8944, metadata !DIExpression()), !dbg !8945
  %10 = load i8, i8* %6, align 1, !dbg !8950
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8951
  call void @llvm.dbg.value(metadata i8* %11, metadata !8943, metadata !DIExpression()), !dbg !8945
  store i8 %10, i8* %7, align 1, !dbg !8952
  %12 = add i32 %8, -1, !dbg !8953
  call void @llvm.dbg.value(metadata i32 %12, metadata !8942, metadata !DIExpression()), !dbg !8945
  %13 = icmp eq i32 %12, 0, !dbg !8946
  br i1 %13, label %14, label %5, !dbg !8947, !llvm.loop !8954

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8956
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8961, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %1, metadata !8962, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8963, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i8* %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  %4 = trunc i32 %1 to i8, !dbg !8967
  call void @llvm.dbg.value(metadata i8 %4, metadata !8965, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8963, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i8* %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  %5 = icmp eq i32 %2, 0, !dbg !8968
  br i1 %5, label %12, label %6, !dbg !8969

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8963, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i8* %8, metadata !8964, metadata !DIExpression()), !dbg !8966
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8970
  call void @llvm.dbg.value(metadata i8* %9, metadata !8964, metadata !DIExpression()), !dbg !8966
  store i8 %4, i8* %8, align 1, !dbg !8972
  %10 = add i32 %7, -1, !dbg !8973
  call void @llvm.dbg.value(metadata i32 %10, metadata !8963, metadata !DIExpression()), !dbg !8966
  %11 = icmp eq i32 %10, 0, !dbg !8968
  br i1 %11, label %12, label %6, !dbg !8969, !llvm.loop !8974

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8976
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8977 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8981, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %1, metadata !8982, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %2, metadata !8983, metadata !DIExpression()), !dbg !8987
  %4 = icmp eq i32 %2, 0, !dbg !8988
  br i1 %4, label %17, label %5, !dbg !8989

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8990

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8991
  call void @llvm.dbg.value(metadata i8* %9, metadata !8984, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %8, metadata !8983, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i8* %9, metadata !8984, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8991
  %10 = load i8, i8* %9, align 1, !dbg !8992
  %11 = icmp eq i8 %10, %6, !dbg !8995
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8996
  call void @llvm.dbg.value(metadata i8* %12, metadata !8984, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.value(metadata i32 %13, metadata !8983, metadata !DIExpression()), !dbg !8987
  br i1 %15, label %16, label %7, !dbg !8996, !llvm.loop !8997

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8999

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8987
  ret i8* %19, !dbg !9000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9001 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9003, metadata !DIExpression()), !dbg !9004
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9005
  ret void, !dbg !9006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9009, metadata !DIExpression()), !dbg !9010
  ret i32 -1, !dbg !9011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9012 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9016, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.value(metadata i32* %1, metadata !9017, metadata !DIExpression()), !dbg !9018
  %3 = ptrtoint i32* %1 to i32, !dbg !9019
  %4 = and i32 %3, -2, !dbg !9019
  %5 = icmp eq i32 %4, 2, !dbg !9019
  br i1 %5, label %6, label %9, !dbg !9019

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9020
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !9020
  br label %9, !dbg !9021

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9021
  ret i32 %10, !dbg !9022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9025, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32* %1, metadata !9026, metadata !DIExpression()), !dbg !9027
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9028
  ret i32 %3, !dbg !9029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9033, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32* %1, metadata !9034, metadata !DIExpression()), !dbg !9035
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9036, !srcloc !9038
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !9039
  ret i32 %3, !dbg !9040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9041 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9046, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32* %1, metadata !9047, metadata !DIExpression()), !dbg !9050
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %3, metadata !9048, metadata !DIExpression()), !dbg !9050
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %4, metadata !9049, metadata !DIExpression()), !dbg !9050
  %5 = icmp ne i32 %3, %4, !dbg !9053
  %6 = sext i1 %5 to i32, !dbg !9054
  ret i32 %6, !dbg !9055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9056 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9060, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %1, metadata !9061, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32 %2, metadata !9062, metadata !DIExpression()), !dbg !9064
  call void @llvm.dbg.value(metadata i32* %3, metadata !9063, metadata !DIExpression()), !dbg !9064
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9065
  ret i32 %5, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9067 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9069, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 %1, metadata !9070, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 %2, metadata !9071, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32* %3, metadata !9072, metadata !DIExpression()), !dbg !9073
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9074, !srcloc !9076
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !9077
  ret i32 %5, !dbg !9078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9081, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %1, metadata !9082, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %2, metadata !9083, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32* %3, metadata !9084, metadata !DIExpression()), !dbg !9089
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9090
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9092
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9092
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9092
  br i1 %11, label %33, label %12, !dbg !9092

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9089
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9089
  call void @llvm.dbg.value(metadata i8* %14, metadata !9087, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %13, metadata !9085, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %1, metadata !9086, metadata !DIExpression()), !dbg !9089
  br label %15, !dbg !9093

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9095
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9089
  call void @llvm.dbg.value(metadata i8* %17, metadata !9087, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %16, metadata !9086, metadata !DIExpression()), !dbg !9089
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9096
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9099
  call void @llvm.dbg.value(metadata i8* %19, metadata !9087, metadata !DIExpression()), !dbg !9089
  %20 = load i8, i8* %17, align 1, !dbg !9100
  %21 = zext i8 %20 to i32, !dbg !9101
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !9096
  %23 = icmp eq i32 %22, -1, !dbg !9102
  br i1 %23, label %30, label %24, !dbg !9103

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9104
  call void @llvm.dbg.value(metadata i32 %25, metadata !9086, metadata !DIExpression()), !dbg !9089
  %26 = icmp eq i32 %25, 0, !dbg !9105
  br i1 %26, label %27, label %15, !dbg !9106, !llvm.loop !9107

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %28, metadata !9085, metadata !DIExpression()), !dbg !9089
  %29 = icmp eq i32 %28, 0, !dbg !9110
  br i1 %29, label %30, label %12, !dbg !9111, !llvm.loop !9112

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9089
  call void @llvm.dbg.value(metadata i32 %31, metadata !9085, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.label(metadata !9088), !dbg !9115
  %32 = sub i32 %2, %31, !dbg !9116
  br label %33, !dbg !9117

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9089
  ret i32 %34, !dbg !9118
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9119 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9123, metadata !DIExpression()), !dbg !9124
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9125
  %3 = icmp eq i32 %2, -1, !dbg !9127
  br i1 %3, label %8, label %4, !dbg !9128

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9129
  %6 = icmp eq i32 %5, -1, !dbg !9130
  %7 = sext i1 %6 to i32, !dbg !9129
  br label %8, !dbg !9131

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9124
  ret i32 %9, !dbg !9132
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9135, metadata !DIExpression()), !dbg !9136
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !9137
  br i1 %2, label %3, label %4, !dbg !9139

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9140
  br label %4, !dbg !9141

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9136
  ret i32 %5, !dbg !9142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9143 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !9148, metadata !DIExpression()), !dbg !9149
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9150, !srcloc !9152
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !9153
  ret i1 %1, !dbg !9154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9155 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9156
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9157
  ret void, !dbg !9158
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9161, metadata !DIExpression()), !dbg !9162
  %2 = icmp eq i32 %0, 10, !dbg !9163
  br i1 %2, label %3, label %4, !dbg !9165

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !9166
  br label %4, !dbg !9168

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9169
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !9170
  ret i32 %0, !dbg !9171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9172 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !9175, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.value(metadata i8 %0, metadata !9176, metadata !DIExpression()), !dbg !9177
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9178, !srcloc !9180
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !9181
  ret void, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9183 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !9185, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.value(metadata i8 %0, metadata !9186, metadata !DIExpression()), !dbg !9188
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9189
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9187, metadata !DIExpression()), !dbg !9188
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9190
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9190
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_21, i8 noundef zeroext %0) #25, !dbg !9191
  ret void, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9193 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !9195, metadata !DIExpression()), !dbg !9196
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !9197
  ret i1 %1, !dbg !9198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !9199 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9248, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9249, metadata !DIExpression()), !dbg !9251
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9250, metadata !DIExpression()), !dbg !9251
  ret void, !dbg !9252
}

; Function Attrs: noinline nounwind optsize
define internal i32 @wdt_sam_setup(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9253 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9255, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8 %1, metadata !9256, metadata !DIExpression()), !dbg !9263
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9264
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_cfg**, !dbg !9264
  %5 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %4, align 4, !dbg !9264
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %5, metadata !9257, metadata !DIExpression()), !dbg !9263
  %6 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %5, i32 0, i32 0, !dbg !9265
  %7 = load %struct._thread_stack_info*, %struct._thread_stack_info** %6, align 4, !dbg !9265
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %7, metadata !9259, metadata !DIExpression()), !dbg !9263
  %8 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9266
  %9 = bitcast i8** %8 to %struct.wdt_sam_dev_data**, !dbg !9266
  %10 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %9, align 4, !dbg !9266
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %10, metadata !9261, metadata !DIExpression()), !dbg !9263
  %11 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 2, !dbg !9267
  %12 = load i8, i8* %11, align 4, !dbg !9267, !range !7623
  %13 = icmp eq i8 %12, 0, !dbg !9267
  br i1 %13, label %14, label %15, !dbg !9269

14:                                               ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3.149, i32 0, i32 0), i32 noundef 69) #25, !dbg !9270
  br label %37, !dbg !9276

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 3, !dbg !9277
  %17 = load i8, i8* %16, align 1, !dbg !9277, !range !7623
  %18 = icmp eq i8 %17, 0, !dbg !9277
  br i1 %18, label %19, label %37, !dbg !9279

19:                                               ; preds = %15
  %20 = zext i8 %1 to i32, !dbg !9280
  %21 = and i32 %20, 1, !dbg !9282
  %22 = icmp eq i32 %21, 0, !dbg !9283
  br i1 %22, label %27, label %23, !dbg !9284

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 1, !dbg !9285
  %25 = load i32, i32* %24, align 4, !dbg !9287
  %26 = or i32 %25, 536870912, !dbg !9287
  store i32 %26, i32* %24, align 4, !dbg !9287
  br label %27, !dbg !9288

27:                                               ; preds = %23, %19
  %28 = and i32 %20, 2, !dbg !9289
  %29 = icmp eq i32 %28, 0, !dbg !9291
  %30 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 1
  %31 = load i32, i32* %30, align 4, !dbg !9263
  br i1 %29, label %34, label %32, !dbg !9292

32:                                               ; preds = %27
  %33 = or i32 %31, 268435456, !dbg !9293
  store i32 %33, i32* %30, align 4, !dbg !9293
  br label %34, !dbg !9295

34:                                               ; preds = %27, %32
  %35 = phi i32 [ %33, %32 ], [ %31, %27 ], !dbg !9296
  %36 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %7, i32 0, i32 1, !dbg !9297
  store volatile i32 %35, i32* %36, align 4, !dbg !9298
  store i8 1, i8* %16, align 1, !dbg !9299
  br label %37, !dbg !9300

37:                                               ; preds = %15, %34, %14
  %38 = phi i32 [ 0, %34 ], [ -22, %14 ], [ -1, %15 ], !dbg !9263
  ret i32 %38, !dbg !9301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_disable(%struct.device* nocapture noundef readonly %0) #18 !dbg !9302 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9304, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* undef, metadata !9305, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* undef, metadata !9306, metadata !DIExpression()), !dbg !9308
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9309
  %3 = bitcast i8** %2 to %struct.wdt_sam_dev_data**, !dbg !9309
  %4 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %3, align 4, !dbg !9309
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %4, metadata !9307, metadata !DIExpression()), !dbg !9308
  %5 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %4, i32 0, i32 3, !dbg !9310
  %6 = load i8, i8* %5, align 1, !dbg !9310, !range !7623
  %7 = icmp eq i8 %6, 0, !dbg !9310
  br i1 %7, label %8, label %17, !dbg !9312

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9313
  %10 = bitcast i8** %9 to %struct.wdt_sam_dev_cfg**, !dbg !9313
  %11 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %10, align 4, !dbg !9313
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %11, metadata !9305, metadata !DIExpression()), !dbg !9308
  %12 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %11, i32 0, i32 0, !dbg !9314
  %13 = load %struct._thread_stack_info*, %struct._thread_stack_info** %12, align 4, !dbg !9314
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %13, metadata !9306, metadata !DIExpression()), !dbg !9308
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %13, i32 0, i32 1, !dbg !9315
  %15 = load volatile i32, i32* %14, align 4, !dbg !9316
  %16 = or i32 %15, 32768, !dbg !9316
  store volatile i32 %16, i32* %14, align 4, !dbg !9316
  store i8 1, i8* %5, align 1, !dbg !9317
  br label %17, !dbg !9318

17:                                               ; preds = %1, %8
  %18 = phi i32 [ 0, %8 ], [ -1, %1 ], !dbg !9308
  ret i32 %18, !dbg !9319
}

; Function Attrs: noinline nounwind optsize
define internal i32 @wdt_sam_install_timeout(%struct.device* nocapture noundef readonly %0, %struct.wdt_timeout_cfg* nocapture noundef readonly %1) #1 !dbg !9320 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9322, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata %struct.wdt_timeout_cfg* %1, metadata !9323, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata i32 0, metadata !9324, metadata !DIExpression()), !dbg !9327
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9328
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_data**, !dbg !9328
  %5 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %4, align 4, !dbg !9328
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %5, metadata !9326, metadata !DIExpression()), !dbg !9327
  %6 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 2, !dbg !9329
  %7 = load i8, i8* %6, align 4, !dbg !9329, !range !7623
  %8 = icmp eq i8 %7, 0, !dbg !9329
  br i1 %8, label %10, label %9, !dbg !9331

9:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.145, i32 0, i32 0), i32 noundef 69) #25, !dbg !9332
  br label %39, !dbg !9338

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 0, i32 0, !dbg !9339
  %12 = load i32, i32* %11, align 4, !dbg !9339
  %13 = icmp eq i32 %12, 0, !dbg !9341
  br i1 %13, label %14, label %39, !dbg !9342

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 0, i32 1, !dbg !9343
  %16 = load i32, i32* %15, align 4, !dbg !9343
  %17 = tail call i32 @wdt_sam_convert_timeout(i32 noundef %16, i32 noundef 32768) #26, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %17, metadata !9325, metadata !DIExpression()), !dbg !9327
  %18 = icmp slt i32 %17, 0, !dbg !9345
  br i1 %18, label %39, label %19, !dbg !9347

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 2, !dbg !9348
  %21 = load i8, i8* %20, align 4, !dbg !9348
  switch i8 %21, label %30 [
    i8 2, label %31
    i8 0, label %22
    i8 1, label %29
  ], !dbg !9349

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 1, !dbg !9350
  %24 = load void (%struct.device*, i32)*, void (%struct.device*, i32)** %23, align 4, !dbg !9350
  %25 = icmp eq void (%struct.device*, i32)* %24, null, !dbg !9353
  br i1 %25, label %28, label %26, !dbg !9354

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 4096, metadata !9324, metadata !DIExpression()), !dbg !9327
  %27 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 0, !dbg !9355
  store void (%struct.device*, i32)* %24, void (%struct.device*, i32)** %27, align 4, !dbg !9357
  br label %31, !dbg !9358

28:                                               ; preds = %22
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.146, i32 0, i32 0), i32 noundef 69) #25, !dbg !9359
  br label %39, !dbg !9365

29:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 24576, metadata !9324, metadata !DIExpression()), !dbg !9327
  br label %31, !dbg !9366

30:                                               ; preds = %19
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6.147, i32 0, i32 0), i32 noundef 69) #25, !dbg !9367
  br label %39, !dbg !9372

31:                                               ; preds = %19, %29, %26
  %32 = phi i32 [ 24576, %29 ], [ 4096, %26 ], [ 8192, %19 ], !dbg !9373
  call void @llvm.dbg.value(metadata i32 %32, metadata !9324, metadata !DIExpression()), !dbg !9327
  %33 = and i32 %17, 4095, !dbg !9374
  %34 = shl i32 %17, 16, !dbg !9375
  %35 = and i32 %34, 268369920, !dbg !9375
  %36 = or i32 %35, %33, !dbg !9376
  %37 = or i32 %36, %32, !dbg !9377
  %38 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 1, !dbg !9378
  store i32 %37, i32* %38, align 4, !dbg !9379
  store i8 1, i8* %6, align 4, !dbg !9380
  br label %39, !dbg !9381

39:                                               ; preds = %14, %10, %31, %30, %28, %9
  %40 = phi i32 [ -12, %9 ], [ -134, %30 ], [ 0, %31 ], [ -22, %28 ], [ -22, %10 ], [ -22, %14 ], !dbg !9327
  ret i32 %40, !dbg !9382
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_feed(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !9383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9385, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.value(metadata i32 %1, metadata !9386, metadata !DIExpression()), !dbg !9389
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9390
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_cfg**, !dbg !9390
  %5 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %4, align 4, !dbg !9390
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %5, metadata !9387, metadata !DIExpression()), !dbg !9389
  %6 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %5, i32 0, i32 0, !dbg !9391
  %7 = load %struct._thread_stack_info*, %struct._thread_stack_info** %6, align 4, !dbg !9391
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %7, metadata !9388, metadata !DIExpression()), !dbg !9389
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %7, i32 0, i32 0, !dbg !9392
  %9 = load volatile i32, i32* %8, align 4, !dbg !9393
  %10 = or i32 %9, -1526726655, !dbg !9393
  store volatile i32 %10, i32* %8, align 4, !dbg !9393
  ret i32 0, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @wdt_sam_convert_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9399, metadata !DIExpression()), !dbg !9403
  call void @llvm.dbg.value(metadata i32 %1, metadata !9400, metadata !DIExpression()), !dbg !9403
  %3 = mul i32 %0, 1000, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %3, metadata !9399, metadata !DIExpression()), !dbg !9403
  %4 = udiv i32 128000000, %1, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %4, metadata !9402, metadata !DIExpression()), !dbg !9403
  %5 = mul i32 %4, 4095, !dbg !9406
  call void @llvm.dbg.value(metadata i32 %5, metadata !9401, metadata !DIExpression()), !dbg !9403
  %6 = icmp ult i32 %3, %4, !dbg !9407
  %7 = icmp ugt i32 %3, %5
  %8 = or i1 %6, %7, !dbg !9409
  br i1 %8, label %9, label %12, !dbg !9409

9:                                                ; preds = %2
  %10 = udiv i32 %4, 1000, !dbg !9410
  %11 = udiv i32 %5, 1000, !dbg !9410
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.148, i32 0, i32 0), i32 noundef 69, i32 noundef %10, i32 noundef %11) #25, !dbg !9410
  br label %15, !dbg !9416

12:                                               ; preds = %2
  %13 = udiv i32 %3, %4, !dbg !9417
  %14 = and i32 %13, 4095, !dbg !9417
  br label %15, !dbg !9418

15:                                               ; preds = %12, %9
  %16 = phi i32 [ -22, %9 ], [ %14, %12 ], !dbg !9403
  ret i32 %16, !dbg !9419
}

; Function Attrs: noinline nounwind optsize
define internal void @wdt_sam_isr(%struct.device* noundef %0) #1 !dbg !9420 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9424, metadata !DIExpression()), !dbg !9429
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9430
  %3 = bitcast i8** %2 to %struct.wdt_sam_dev_cfg**, !dbg !9430
  %4 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %3, align 4, !dbg !9430
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %4, metadata !9425, metadata !DIExpression()), !dbg !9429
  %5 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %4, i32 0, i32 0, !dbg !9431
  %6 = load %struct._thread_stack_info*, %struct._thread_stack_info** %5, align 4, !dbg !9431
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %6, metadata !9427, metadata !DIExpression()), !dbg !9429
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9432
  %8 = bitcast i8** %7 to %struct.wdt_sam_dev_data**, !dbg !9432
  %9 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %8, align 4, !dbg !9432
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %9, metadata !9428, metadata !DIExpression()), !dbg !9429
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %6, i32 0, i32 2, !dbg !9433
  %11 = load volatile i32, i32* %10, align 4, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %11, metadata !9426, metadata !DIExpression()), !dbg !9429
  %12 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %9, i32 0, i32 0, !dbg !9434
  %13 = load void (%struct.device*, i32)*, void (%struct.device*, i32)** %12, align 4, !dbg !9434
  tail call void %13(%struct.device* noundef %0, i32 noundef 0) #25, !dbg !9435
  ret void, !dbg !9436
}

; Function Attrs: noinline nounwind optsize
define internal i32 @wdt_sam_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9437 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9439, metadata !DIExpression()), !dbg !9440
  %2 = tail call i32 @wdt_sam_disable(%struct.device* noundef %0) #26, !dbg !9441
  tail call fastcc void @wdt_sam_irq_config() #26, !dbg !9442
  ret i32 0, !dbg !9443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @wdt_sam_irq_config() unnamed_addr #1 !dbg !927 {
  tail call void @z_arm_irq_priority_set(i32 noundef 4, i32 noundef 0, i32 noundef 0) #25, !dbg !9444
  tail call void @arch_irq_enable(i32 noundef 4) #25, !dbg !9446
  ret void, !dbg !9447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #7 !dbg !9448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9450, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata i8* %1, metadata !9451, metadata !DIExpression()), !dbg !9457
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9458
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !9458
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !9458
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !9452, metadata !DIExpression()), !dbg !9457
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !9459
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !9459
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !9455, metadata !DIExpression()), !dbg !9457
  %8 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 5, !dbg !9460
  %9 = load volatile i32, i32* %8, align 4, !dbg !9460
  %10 = and i32 %9, 1, !dbg !9462
  %11 = icmp eq i32 %10, 0, !dbg !9462
  br i1 %11, label %16, label %12, !dbg !9463

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 6, !dbg !9464
  %14 = load volatile i32, i32* %13, align 4, !dbg !9464
  %15 = trunc i32 %14 to i8, !dbg !9465
  store i8 %15, i8* %1, align 1, !dbg !9466
  br label %16, !dbg !9467

16:                                               ; preds = %2, %12
  %17 = phi i32 [ 0, %12 ], [ -16, %2 ], !dbg !9457
  ret i32 %17, !dbg !9468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #18 !dbg !9469 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9471, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.value(metadata i8 %1, metadata !9472, metadata !DIExpression()), !dbg !9475
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9476
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !9476
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !9476
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !9473, metadata !DIExpression()), !dbg !9475
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !9477
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !9477
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !9474, metadata !DIExpression()), !dbg !9475
  %8 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 5
  br label %9, !dbg !9478

9:                                                ; preds = %9, %2
  %10 = load volatile i32, i32* %8, align 4, !dbg !9479
  %11 = and i32 %10, 2, !dbg !9480
  %12 = icmp eq i32 %11, 0, !dbg !9481
  br i1 %12, label %9, label %13, !dbg !9478, !llvm.loop !9482

13:                                               ; preds = %9
  %14 = zext i8 %1 to i32, !dbg !9484
  %15 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 7, !dbg !9485
  store volatile i32 %14, i32* %15, align 4, !dbg !9486
  ret void, !dbg !9487
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_err_check(%struct.device* nocapture noundef readonly %0) #7 !dbg !9488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9490, metadata !DIExpression()), !dbg !9497
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9498
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !9498
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !9498
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !9491, metadata !DIExpression()), !dbg !9497
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !9499
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !9499
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !9492, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.value(metadata i32 0, metadata !9496, metadata !DIExpression()), !dbg !9497
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !9500
  %8 = load volatile i32, i32* %7, align 4, !dbg !9500
  %9 = lshr i32 %8, 5, !dbg !9502
  %10 = and i32 %9, 1, !dbg !9502
  call void @llvm.dbg.value(metadata i32 %10, metadata !9496, metadata !DIExpression()), !dbg !9497
  %11 = load volatile i32, i32* %7, align 4, !dbg !9503
  %12 = lshr i32 %11, 6, !dbg !9505
  %13 = and i32 %12, 2, !dbg !9505
  %14 = or i32 %13, %10, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %14, metadata !9496, metadata !DIExpression()), !dbg !9497
  %15 = load volatile i32, i32* %7, align 4, !dbg !9506
  %16 = lshr i32 %15, 4, !dbg !9508
  %17 = and i32 %16, 4, !dbg !9508
  %18 = or i32 %14, %17, !dbg !9508
  call void @llvm.dbg.value(metadata i32 %18, metadata !9496, metadata !DIExpression()), !dbg !9497
  ret i32 %18, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9512, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9513, metadata !DIExpression()), !dbg !9517
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9518
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !9518
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !9518
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !9515, metadata !DIExpression()), !dbg !9517
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !9519
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !9519
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !9516, metadata !DIExpression()), !dbg !9517
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9520
  %9 = load i8, i8* %8, align 1, !dbg !9520
  %10 = icmp eq i8 %9, 1, !dbg !9522
  br i1 %10, label %11, label %30, !dbg !9523

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9524
  %13 = load i8, i8* %12, align 2, !dbg !9524
  %14 = icmp eq i8 %13, 3, !dbg !9525
  br i1 %14, label %15, label %30, !dbg !9526

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9527
  %17 = load i8, i8* %16, align 1, !dbg !9527
  %18 = icmp eq i8 %17, 0, !dbg !9528
  br i1 %18, label %19, label %30, !dbg !9529

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 0, !dbg !9530
  store volatile i32 428, i32* %20, align 4, !dbg !9531
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9532
  %22 = load i8, i8* %21, align 4, !dbg !9532
  %23 = tail call fastcc i32 @uart_sam_cfg2sam_parity(i8 noundef zeroext %22) #26, !dbg !9533
  %24 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 1, !dbg !9534
  store volatile i32 %23, i32* %24, align 4, !dbg !9535
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9536
  %26 = load i32, i32* %25, align 4, !dbg !9536
  %27 = tail call fastcc i32 @uart_sam_baudrate_set(%struct.device* noundef nonnull %0, i32 noundef %26) #26, !dbg !9537
  call void @llvm.dbg.value(metadata i32 %27, metadata !9514, metadata !DIExpression()), !dbg !9517
  %28 = icmp eq i32 %27, 0, !dbg !9538
  br i1 %28, label %29, label %30, !dbg !9540

29:                                               ; preds = %19
  store volatile i32 80, i32* %20, align 4, !dbg !9541
  br label %30, !dbg !9542

30:                                               ; preds = %19, %2, %11, %15, %29
  %31 = phi i32 [ 0, %29 ], [ -134, %15 ], [ -134, %11 ], [ -134, %2 ], [ %27, %19 ], !dbg !9517
  ret i32 %31, !dbg !9543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #7 !dbg !9544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9546, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9547, metadata !DIExpression()), !dbg !9551
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9552
  %4 = bitcast i8** %3 to %struct.k_spinlock**, !dbg !9552
  %5 = load %struct.k_spinlock*, %struct.k_spinlock** %4, align 4, !dbg !9552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %5, metadata !9548, metadata !DIExpression()), !dbg !9551
  %6 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %5, i32 0, i32 0, !dbg !9553
  %7 = load i32, i32* %6, align 4, !dbg !9553
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9554
  store i32 %7, i32* %8, align 4, !dbg !9555
  %9 = tail call fastcc zeroext i8 @uart_sam_get_parity(%struct.device* noundef %0) #26, !dbg !9556
  %10 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9557
  store i8 %9, i8* %10, align 4, !dbg !9558
  %11 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9559
  store i8 1, i8* %11, align 1, !dbg !9560
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9561
  store i8 3, i8* %12, align 2, !dbg !9562
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9563
  store i8 0, i8* %13, align 1, !dbg !9564
  ret i32 0, !dbg !9565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @uart_sam_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !9566 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9570, metadata !DIExpression()), !dbg !9573
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9574
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !9574
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !9574
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !9571, metadata !DIExpression()), !dbg !9573
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !9575
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !9575
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !9572, metadata !DIExpression()), !dbg !9573
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 1, !dbg !9576
  %8 = load volatile i32, i32* %7, align 4, !dbg !9576
  %9 = lshr i32 %8, 9, !dbg !9577
  %10 = and i32 %9, 7, !dbg !9577
  %11 = icmp ult i32 %10, 4, !dbg !9577
  %12 = shl nuw nsw i32 %10, 3, !dbg !9577
  %13 = lshr i32 50594050, %12, !dbg !9577
  %14 = trunc i32 %13 to i8, !dbg !9577
  %15 = select i1 %11, i8 %14, i8 0, !dbg !9577
  ret i8 %15, !dbg !9578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_sam_cfg2sam_parity(i8 noundef zeroext %0) unnamed_addr #5 !dbg !9579 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9583, metadata !DIExpression()), !dbg !9584
  %2 = add i8 %0, -1, !dbg !9585
  %3 = icmp ult i8 %2, 4, !dbg !9585
  br i1 %3, label %4, label %8, !dbg !9585

4:                                                ; preds = %1
  %5 = sext i8 %2 to i32, !dbg !9585
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_sam_cfg2sam_parity, i32 0, i32 %5, !dbg !9585
  %7 = load i32, i32* %6, align 4, !dbg !9585
  br label %8, !dbg !9585

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 2048, %1 ], !dbg !9586
  ret i32 %9, !dbg !9588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_sam_baudrate_set(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9593, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.value(metadata i32 %1, metadata !9594, metadata !DIExpression()), !dbg !9599
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9600
  %4 = bitcast i8** %3 to %struct.k_spinlock**, !dbg !9600
  %5 = load %struct.k_spinlock*, %struct.k_spinlock** %4, align 4, !dbg !9600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %5, metadata !9595, metadata !DIExpression()), !dbg !9599
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9601
  %7 = bitcast i8** %6 to %struct.uart_sam_dev_cfg**, !dbg !9601
  %8 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %7, align 4, !dbg !9601
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %8, metadata !9596, metadata !DIExpression()), !dbg !9599
  %9 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %8, i32 0, i32 0, !dbg !9602
  %10 = load %struct.Uart*, %struct.Uart** %9, align 4, !dbg !9602
  call void @llvm.dbg.value(metadata %struct.Uart* %10, metadata !9597, metadata !DIExpression()), !dbg !9599
  %11 = icmp eq i32 %1, 0, !dbg !9603
  br i1 %11, label %12, label %13, !dbg !9606

12:                                               ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.156, i32 0, i32 0), i32 noundef 110) #25, !dbg !9607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.157, i32 0, i32 0)) #25, !dbg !9607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.156, i32 0, i32 0), i32 noundef 110) #25, !dbg !9607
  unreachable, !dbg !9607

13:                                               ; preds = %2
  %14 = icmp ult i32 %1, 5250001, !dbg !9609
  br i1 %14, label %16, label %15, !dbg !9612

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.156, i32 0, i32 0), i32 noundef 112) #25, !dbg !9613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6.159, i32 0, i32 0)) #25, !dbg !9613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.156, i32 0, i32 0), i32 noundef 112) #25, !dbg !9613
  unreachable, !dbg !9613

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 undef, metadata !9598, metadata !DIExpression()), !dbg !9599
  %17 = icmp ult i32 %1, 81, !dbg !9615
  br i1 %17, label %22, label %18, !dbg !9617

18:                                               ; preds = %16
  %19 = udiv i32 5250000, %1, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %19, metadata !9598, metadata !DIExpression()), !dbg !9599
  %20 = getelementptr inbounds %struct.Uart, %struct.Uart* %10, i32 0, i32 8, !dbg !9619
  store volatile i32 %19, i32* %20, align 4, !dbg !9620
  %21 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %5, i32 0, i32 0, !dbg !9621
  store i32 %1, i32* %21, align 4, !dbg !9622
  br label %22, !dbg !9623

22:                                               ; preds = %16, %18
  %23 = phi i32 [ 0, %18 ], [ -22, %16 ], !dbg !9599
  ret i32 %23, !dbg !9624
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9625 {
  %2 = alloca %struct.uart_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9627, metadata !DIExpression()), !dbg !9633
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9634
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !9634
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !9634
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !9629, metadata !DIExpression()), !dbg !9633
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9635
  %7 = bitcast i8** %6 to %struct.k_spinlock**, !dbg !9635
  %8 = load %struct.k_spinlock*, %struct.k_spinlock** %7, align 4, !dbg !9635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %8, metadata !9630, metadata !DIExpression()), !dbg !9633
  %9 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !9636
  %10 = load %struct.Uart*, %struct.Uart** %9, align 4, !dbg !9636
  call void @llvm.dbg.value(metadata %struct.Uart* %10, metadata !9631, metadata !DIExpression()), !dbg !9633
  %11 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 1, !dbg !9637
  %12 = load i32, i32* %11, align 4, !dbg !9637
  tail call void @soc_pmc_peripheral_enable(i32 noundef %12) #25, !dbg !9638
  %13 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 2, !dbg !9639
  %14 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %13, align 4, !dbg !9639
  %15 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %14) #26, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %15, metadata !9628, metadata !DIExpression()), !dbg !9633
  %16 = icmp slt i32 %15, 0, !dbg !9641
  br i1 %16, label %28, label %17, !dbg !9643

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.Uart, %struct.Uart* %10, i32 0, i32 3, !dbg !9644
  store volatile i32 -1, i32* %18, align 4, !dbg !9645
  %19 = bitcast %struct.uart_config* %2 to i8*, !dbg !9646
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #24, !dbg !9646
  call void @llvm.dbg.declare(metadata %struct.uart_config* %2, metadata !9632, metadata !DIExpression()), !dbg !9647
  %20 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 0, !dbg !9648
  %21 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %8, i32 0, i32 0, !dbg !9649
  %22 = load i32, i32* %21, align 4, !dbg !9649
  store i32 %22, i32* %20, align 4, !dbg !9648
  %23 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 1, !dbg !9648
  store i8 0, i8* %23, align 4, !dbg !9648
  %24 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 2, !dbg !9648
  store i8 1, i8* %24, align 1, !dbg !9648
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 3, !dbg !9648
  store i8 3, i8* %25, align 2, !dbg !9648
  %26 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 4, !dbg !9648
  store i8 0, i8* %26, align 1, !dbg !9648
  %27 = call i32 @uart_sam_configure(%struct.device* noundef nonnull %0, %struct.uart_config* noundef nonnull %2) #26, !dbg !9650
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #24, !dbg !9651
  br label %28

28:                                               ; preds = %1, %17
  %29 = phi i32 [ %27, %17 ], [ %15, %1 ], !dbg !9633
  ret i32 %29, !dbg !9651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9652 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9656, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.value(metadata i8 0, metadata !9657, metadata !DIExpression()), !dbg !9660
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9661
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !9661
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9659, metadata !DIExpression(DW_OP_deref)), !dbg !9660
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %4, metadata !9658, metadata !DIExpression()), !dbg !9660
  %5 = icmp slt i32 %4, 0, !dbg !9663
  br i1 %5, label %9, label %6, !dbg !9665

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9666
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9659, metadata !DIExpression()), !dbg !9660
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !9667
  br label %9, !dbg !9668

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9660
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !9669
  ret i32 %10, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9674, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 0, metadata !9676, metadata !DIExpression()), !dbg !9677
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9678
  %3 = load i32*, i32** %2, align 4, !dbg !9678
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9679
  %5 = load i8, i8* %4, align 4, !dbg !9679
  %6 = tail call i32 @pinctrl_configure_pins(i32* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !9680
  ret i32 %6, !dbg !9681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !9682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9684, metadata !DIExpression()), !dbg !9685
  tail call fastcc void @__NVIC_SetPriority.162() #26, !dbg !9686
  store i32 8399, i32* @last_load, align 4, !dbg !9687
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9688
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9689
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9690
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9691
  %3 = or i32 %2, 7, !dbg !9691
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9691
  ret i32 0, !dbg !9692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.162() unnamed_addr #18 !dbg !9693 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9695, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 1, metadata !9696, metadata !DIExpression()), !dbg !9697
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9698
  ret void, !dbg !9701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9702 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9704, metadata !DIExpression()), !dbg !9706
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !9707
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9708
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9709
  %5 = add i32 %4, %3, !dbg !9709
  store i32 %5, i32* @cycle_count, align 4, !dbg !9709
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9710
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9711
  %7 = sub i32 %5, %6, !dbg !9714
  %8 = udiv i32 %7, 8400, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %8, metadata !9705, metadata !DIExpression()), !dbg !9706
  %9 = mul nuw i32 %8, 8400, !dbg !9716
  %10 = add i32 %9, %6, !dbg !9717
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9717
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !9718
  tail call void @z_arm_int_exit() #25, !dbg !9719
  ret void, !dbg !9720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !9721 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %1, metadata !9723, metadata !DIExpression()), !dbg !9727
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %2, metadata !9724, metadata !DIExpression()), !dbg !9727
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %3, metadata !9725, metadata !DIExpression()), !dbg !9727
  %4 = and i32 %2, 65536, !dbg !9730
  %5 = icmp ne i32 %4, 0, !dbg !9730
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9732
  %8 = load i32, i32* @last_load, align 4, !dbg !9727
  br i1 %7, label %9, label %13, !dbg !9732

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9733
  %11 = add i32 %10, %8, !dbg !9733
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9733
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9735
  br label %13, !dbg !9736

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9737
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9738
  %16 = add i32 %14, %15, !dbg !9739
  ret i32 %16, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9745, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i1 %1, metadata !9746, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9758
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9759
  br i1 %4, label %5, label %8, !dbg !9759

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9761
  %7 = and i32 %6, -2, !dbg !9761
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9761
  store i32 -16777216, i32* @last_load, align 4, !dbg !9763
  br label %60, !dbg !9764

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %9, metadata !9750, metadata !DIExpression()), !dbg !9758
  br i1 %3, label %18, label %10, !dbg !9766

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9766
  call void @llvm.dbg.value(metadata i32 undef, metadata !9745, metadata !DIExpression()), !dbg !9758
  %12 = icmp slt i32 %11, 1, !dbg !9767
  br i1 %12, label %18, label %13, !dbg !9767

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !9767
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !9767
  %16 = mul nuw nsw i32 %15, 8400, !dbg !9767
  %17 = add nuw nsw i32 %16, 8399, !dbg !9767
  br label %18, !dbg !9767

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9745, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9768, metadata !DIExpression()) #24, !dbg !9775
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9777, !srcloc !9783
  call void @llvm.dbg.value(metadata i32 undef, metadata !9780, metadata !DIExpression()) #24, !dbg !9784
  call void @llvm.dbg.value(metadata i32 undef, metadata !9781, metadata !DIExpression()) #24, !dbg !9784
  call void @llvm.dbg.value(metadata i32 undef, metadata !9774, metadata !DIExpression()) #24, !dbg !9775
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9785
  br i1 %21, label %23, label %22, !dbg !9788

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #25, !dbg !9789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.166, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #25, !dbg !9789
  unreachable, !dbg !9789

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %24, metadata !9780, metadata !DIExpression()) #24, !dbg !9784
  call void @llvm.dbg.value(metadata i32 %24, metadata !9774, metadata !DIExpression()) #24, !dbg !9775
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9791
  call void @llvm.dbg.value(metadata i32 %24, metadata !9751, metadata !DIExpression()), !dbg !9758
  %25 = tail call fastcc i32 @elapsed() #26, !dbg !9792
  call void @llvm.dbg.value(metadata i32 %25, metadata !9756, metadata !DIExpression()), !dbg !9758
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %26, metadata !9748, metadata !DIExpression()), !dbg !9758
  %27 = load i32, i32* @cycle_count, align 4, !dbg !9794
  %28 = add i32 %27, %25, !dbg !9794
  store i32 %28, i32* @cycle_count, align 4, !dbg !9794
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9795
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !9796
  %30 = sub i32 %28, %29, !dbg !9797
  call void @llvm.dbg.value(metadata i32 %30, metadata !9757, metadata !DIExpression()), !dbg !9758
  %31 = icmp slt i32 %30, 0, !dbg !9798
  br i1 %31, label %41, label %32, !dbg !9800

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !9747, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 undef, metadata !9747, metadata !DIExpression()), !dbg !9758
  %33 = add nuw i32 %19, %30, !dbg !9801
  %34 = urem i32 %33, 8400, !dbg !9803
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !9747, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9758
  %35 = sub nuw nsw i32 %19, %34, !dbg !9804
  call void @llvm.dbg.value(metadata i32 %35, metadata !9747, metadata !DIExpression()), !dbg !9758
  %36 = icmp ugt i32 %35, 1024, !dbg !9805
  br i1 %36, label %37, label %39, !dbg !9805

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !9747, metadata !DIExpression()), !dbg !9758
  %38 = icmp ugt i32 %35, 16766400, !dbg !9806
  br i1 %38, label %41, label %39, !dbg !9808

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !9809
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9810
  call void @llvm.dbg.value(metadata i32 %43, metadata !9749, metadata !DIExpression()), !dbg !9758
  %44 = add nsw i32 %42, -1, !dbg !9811
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9812
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9813
  %45 = icmp ult i32 %26, %43, !dbg !9814
  br i1 %45, label %46, label %51, !dbg !9816

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !9817
  %48 = add i32 %26, %9, !dbg !9819
  %49 = sub i32 %48, %43, !dbg !9820
  %50 = add i32 %49, %47, !dbg !9817
  br label %55, !dbg !9821

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !9822
  %53 = load i32, i32* @cycle_count, align 4, !dbg !9824
  %54 = add i32 %52, %53, !dbg !9824
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !9825
  store i32 %56, i32* @cycle_count, align 4, !dbg !9825
  call void @llvm.dbg.value(metadata i32 undef, metadata !9826, metadata !DIExpression()) #24, !dbg !9832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9831, metadata !DIExpression()) #24, !dbg !9832
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9834
  br i1 %57, label %59, label %58, !dbg !9837

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 194) #25, !dbg !9838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.168, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 194) #25, !dbg !9838
  unreachable, !dbg !9838

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !9826, metadata !DIExpression()) #24, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %24, metadata !9840, metadata !DIExpression()) #24, !dbg !9843
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #24, !dbg !9845, !srcloc !9846
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !9847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9768, metadata !DIExpression()) #24, !dbg !9852
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9854, !srcloc !9783
  call void @llvm.dbg.value(metadata i32 undef, metadata !9780, metadata !DIExpression()) #24, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9781, metadata !DIExpression()) #24, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9774, metadata !DIExpression()) #24, !dbg !9852
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9857
  br i1 %2, label %4, label %3, !dbg !9858

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #25, !dbg !9859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.166, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #25, !dbg !9859
  unreachable, !dbg !9859

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !9780, metadata !DIExpression()) #24, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9774, metadata !DIExpression()) #24, !dbg !9852
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9860
  call void @llvm.dbg.value(metadata i32 undef, metadata !9850, metadata !DIExpression()), !dbg !9861
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !9862
  %6 = load i32, i32* @cycle_count, align 4, !dbg !9863
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !9851, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9861
  call void @llvm.dbg.value(metadata i32 undef, metadata !9826, metadata !DIExpression()) #24, !dbg !9865
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9831, metadata !DIExpression()) #24, !dbg !9865
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9867
  br i1 %8, label %10, label %9, !dbg !9868

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 194) #25, !dbg !9869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.168, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 194) #25, !dbg !9869
  unreachable, !dbg !9869

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !9870
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !9851, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9861
  %12 = sub i32 %11, %7, !dbg !9871
  call void @llvm.dbg.value(metadata i32 %12, metadata !9851, metadata !DIExpression()), !dbg !9861
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %13, metadata !9780, metadata !DIExpression()) #24, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %13, metadata !9774, metadata !DIExpression()) #24, !dbg !9852
  call void @llvm.dbg.value(metadata i32 %13, metadata !9850, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 undef, metadata !9826, metadata !DIExpression()) #24, !dbg !9865
  call void @llvm.dbg.value(metadata i32 undef, metadata !9840, metadata !DIExpression()) #24, !dbg !9872
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !9874, !srcloc !9846
  %14 = udiv i32 %12, 8400, !dbg !9875
  ret i32 %14, !dbg !9876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9768, metadata !DIExpression()) #24, !dbg !9881
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9883, !srcloc !9783
  call void @llvm.dbg.value(metadata i32 undef, metadata !9780, metadata !DIExpression()) #24, !dbg !9885
  call void @llvm.dbg.value(metadata i32 undef, metadata !9781, metadata !DIExpression()) #24, !dbg !9885
  call void @llvm.dbg.value(metadata i32 undef, metadata !9774, metadata !DIExpression()) #24, !dbg !9881
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9886
  br i1 %2, label %4, label %3, !dbg !9887

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #25, !dbg !9888
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.166, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 148) #25, !dbg !9888
  unreachable, !dbg !9888

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !9780, metadata !DIExpression()) #24, !dbg !9885
  call void @llvm.dbg.value(metadata i32 undef, metadata !9774, metadata !DIExpression()) #24, !dbg !9881
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9889
  call void @llvm.dbg.value(metadata i32 undef, metadata !9879, metadata !DIExpression()), !dbg !9890
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !9891
  %6 = load i32, i32* @cycle_count, align 4, !dbg !9892
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !9880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !9890
  call void @llvm.dbg.value(metadata i32 undef, metadata !9826, metadata !DIExpression()) #24, !dbg !9893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9831, metadata !DIExpression()) #24, !dbg !9893
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9895
  br i1 %7, label %9, label %8, !dbg !9896

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 194) #25, !dbg !9897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.168, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !9897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.165, i32 0, i32 0), i32 noundef 194) #25, !dbg !9897
  unreachable, !dbg !9897

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %10, metadata !9880, metadata !DIExpression()), !dbg !9890
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %11, metadata !9780, metadata !DIExpression()) #24, !dbg !9885
  call void @llvm.dbg.value(metadata i32 %11, metadata !9774, metadata !DIExpression()) #24, !dbg !9881
  call void @llvm.dbg.value(metadata i32 %11, metadata !9879, metadata !DIExpression()), !dbg !9890
  call void @llvm.dbg.value(metadata i32 undef, metadata !9826, metadata !DIExpression()) #24, !dbg !9893
  call void @llvm.dbg.value(metadata i32 undef, metadata !9840, metadata !DIExpression()) #24, !dbg !9899
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #24, !dbg !9901, !srcloc !9846
  ret i32 %10, !dbg !9902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !9903 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9904
  %2 = icmp eq i32 %1, -16777216, !dbg !9906
  br i1 %2, label %3, label %6, !dbg !9907

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9908
  %5 = or i32 %4, 1, !dbg !9908
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9908
  br label %6, !dbg !9910

6:                                                ; preds = %3, %0
  ret void, !dbg !9911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !9912 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9913
  %2 = and i32 %1, -2, !dbg !9913
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9913
  ret void, !dbg !9914
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !9915 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9934, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i8 %1, metadata !9935, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9936, metadata !DIExpression()), !dbg !9937
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9938
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9938
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9937
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9939
  %8 = load i8, i8* %6, align 4, !dbg !9940
  %9 = zext i8 %8 to i32, !dbg !9941
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9941
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9942
  br i1 %11, label %18, label %24, !dbg !9943

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9937
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9939
  %14 = load i8, i8* %6, align 4, !dbg !9940
  %15 = zext i8 %14 to i32, !dbg !9941
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9941
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9942
  br i1 %17, label %18, label %24, !dbg !9943, !llvm.loop !9944

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9946
  %21 = load i8, i8* %20, align 1, !dbg !9946
  %22 = icmp eq i8 %21, %1, !dbg !9949
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9950
  br i1 %22, label %24, label %12, !dbg !9951

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9937
  ret i32 %25, !dbg !9952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(i32* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9953 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !9957, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.value(metadata i8 %1, metadata !9958, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.value(metadata i32 %2, metadata !9959, metadata !DIExpression()), !dbg !9962
  call void @llvm.dbg.value(metadata i8 0, metadata !9960, metadata !DIExpression()), !dbg !9963
  %4 = icmp eq i8 %1, 0, !dbg !9964
  br i1 %4, label %5, label %6, !dbg !9966

5:                                                ; preds = %6, %3
  ret i32 0, !dbg !9967

6:                                                ; preds = %3, %6
  %7 = phi i8 [ %11, %6 ], [ 0, %3 ]
  %8 = phi i32* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9960, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata i32* %8, metadata !9957, metadata !DIExpression()), !dbg !9962
  %9 = getelementptr inbounds i32, i32* %8, i32 1, !dbg !9968
  call void @llvm.dbg.value(metadata i32* %9, metadata !9957, metadata !DIExpression()), !dbg !9962
  %10 = load i32, i32* %8, align 4, !dbg !9970
  tail call fastcc void @pinctrl_configure_pin(i32 noundef %10) #26, !dbg !9971
  %11 = add nuw i8 %7, 1, !dbg !9972
  call void @llvm.dbg.value(metadata i8 %11, metadata !9960, metadata !DIExpression()), !dbg !9963
  %12 = icmp ult i8 %11, %1, !dbg !9964
  br i1 %12, label %6, label %5, !dbg !9966, !llvm.loop !9973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pinctrl_configure_pin(i32 noundef %0) unnamed_addr #1 !dbg !9975 {
  %2 = alloca %struct.soc_gpio_pin, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9979, metadata !DIExpression()), !dbg !9989
  %3 = bitcast %struct.soc_gpio_pin* %2 to i8*, !dbg !9990
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !9990
  call void @llvm.dbg.declare(metadata %struct.soc_gpio_pin* %2, metadata !9980, metadata !DIExpression()), !dbg !9991
  %4 = lshr i32 %0, 16, !dbg !9992
  %5 = and i32 %4, 15, !dbg !9992
  call void @llvm.dbg.value(metadata i32 %5, metadata !9987, metadata !DIExpression()), !dbg !9989
  %6 = icmp ult i32 %5, 5, !dbg !9993
  br i1 %6, label %8, label %7, !dbg !9996

7:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([210 x i8], [210 x i8]* @.str.1.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.177, i32 0, i32 0), i32 noundef 58) #25, !dbg !9997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.177, i32 0, i32 0), i32 noundef 58) #25, !dbg !9997
  unreachable, !dbg !9997

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9988, metadata !DIExpression(DW_OP_constu, 25, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !9989
  %9 = getelementptr inbounds [5 x i32], [5 x i32]* @sam_port_addrs, i32 0, i32 %5, !dbg !9999
  %10 = load i32, i32* %9, align 4, !dbg !9999
  %11 = inttoptr i32 %10 to %struct.Pio*, !dbg !10000
  %12 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 1, !dbg !10001
  store %struct.Pio* %11, %struct.Pio** %12, align 4, !dbg !10002
  %13 = getelementptr inbounds [5 x i32], [5 x i32]* @sam_port_periph_id, i32 0, i32 %5, !dbg !10003
  %14 = load i32, i32* %13, align 4, !dbg !10003
  %15 = trunc i32 %14 to i8, !dbg !10003
  %16 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 2, !dbg !10004
  store i8 %15, i8* %16, align 4, !dbg !10005
  %17 = lshr i32 %0, 20, !dbg !10006
  %18 = and i32 %17, 31, !dbg !10006
  %19 = shl nuw i32 1, %18, !dbg !10007
  %20 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 0, !dbg !10008
  store i32 %19, i32* %20, align 4, !dbg !10009
  %21 = and i32 %0, 63, !dbg !10010
  %22 = and i32 %0, 234881024, !dbg !10011
  %23 = icmp eq i32 %22, 33554432, !dbg !10011
  %24 = lshr i32 %0, 12, !dbg !10013
  %25 = and i32 %24, 983040, !dbg !10013
  %26 = select i1 %23, i32 %25, i32 0, !dbg !10013
  %27 = or i32 %26, %21, !dbg !10013
  %28 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 3, !dbg !10014
  store i32 %27, i32* %28, align 4, !dbg !9989
  call void @soc_gpio_configure(%struct.soc_gpio_pin* noundef nonnull %2) #25, !dbg !10015
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !10016
  ret void, !dbg !10016
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10020, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i32 undef, metadata !10020, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i32 undef, metadata !10020, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10036
  ret void, !dbg !10037
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10038 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10042, metadata !DIExpression()), !dbg !10044
  %2 = icmp eq i8* %0, null, !dbg !10045
  br i1 %2, label %29, label %3, !dbg !10047

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10048
  %5 = icmp eq i8 %4, 0, !dbg !10049
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10050
  br i1 %6, label %29, label %8, !dbg !10050

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10043, metadata !DIExpression()), !dbg !10044
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10051

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10043, metadata !DIExpression()), !dbg !10044
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !10053
  br i1 %10, label %11, label %15, !dbg !10058

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10059
  %13 = load i8*, i8** %12, align 4, !dbg !10059
  %14 = icmp eq i8* %13, %0, !dbg !10060
  br i1 %14, label %29, label %15, !dbg !10061

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10062
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10043, metadata !DIExpression()), !dbg !10044
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10063
  br i1 %17, label %7, label %8, !dbg !10064, !llvm.loop !10065

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10043, metadata !DIExpression()), !dbg !10044
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !10067
  br i1 %20, label %21, label %26, !dbg !10071

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10072
  %23 = load i8*, i8** %22, align 4, !dbg !10072
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !10073
  %25 = icmp eq i32 %24, 0, !dbg !10074
  br i1 %25, label %29, label %26, !dbg !10075

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10076
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10043, metadata !DIExpression()), !dbg !10044
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10077
  br i1 %28, label %29, label %18, !dbg !10051, !llvm.loop !10078

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10044
  ret %struct.device* %30, !dbg !10080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !10081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10085, metadata !DIExpression()), !dbg !10086
  %2 = icmp eq %struct.device* %0, null, !dbg !10087
  br i1 %2, label %14, label %3, !dbg !10089

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10090
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10090
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10091
  %7 = load i8, i8* %6, align 1, !dbg !10091
  %8 = and i8 %7, 1, !dbg !10091
  %9 = icmp eq i8 %8, 0, !dbg !10091
  br i1 %9, label %14, label %10, !dbg !10092

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10093
  %12 = load i8, i8* %11, align 1, !dbg !10093
  %13 = icmp eq i8 %12, 0, !dbg !10094
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10086
  ret i1 %15, !dbg !10095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !10096 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10101, metadata !DIExpression()), !dbg !10102
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10103
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10105 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10113, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10114, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i8* %2, metadata !10115, metadata !DIExpression()), !dbg !10118
  %5 = bitcast i32* %4 to i8*, !dbg !10119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !10119
  call void @llvm.dbg.value(metadata i32 0, metadata !10116, metadata !DIExpression()), !dbg !10118
  store i32 0, i32* %4, align 4, !dbg !10120
  call void @llvm.dbg.value(metadata i32* %4, metadata !10116, metadata !DIExpression(DW_OP_deref)), !dbg !10118
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !10121
  call void @llvm.dbg.value(metadata i16* %6, metadata !10117, metadata !DIExpression()), !dbg !10118
  %7 = load i32, i32* %4, align 4, !dbg !10122
  call void @llvm.dbg.value(metadata i32 %7, metadata !10116, metadata !DIExpression()), !dbg !10118
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !10123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !10124
  ret i32 %8, !dbg !10125
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !10126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10130, metadata !DIExpression()), !dbg !10136
  call void @llvm.dbg.value(metadata i32* %1, metadata !10131, metadata !DIExpression()), !dbg !10136
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10137
  %4 = load i16*, i16** %3, align 4, !dbg !10137
  call void @llvm.dbg.value(metadata i16* %4, metadata !10132, metadata !DIExpression()), !dbg !10136
  %5 = icmp eq i16* %4, null, !dbg !10138
  br i1 %5, label %14, label %6, !dbg !10139

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10140
  call void @llvm.dbg.value(metadata i32 %7, metadata !10133, metadata !DIExpression()), !dbg !10140
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10141
  %9 = load i16, i16* %8, align 2, !dbg !10141
  %10 = add i16 %9, -32767, !dbg !10142
  %11 = icmp ult i16 %10, 2, !dbg !10142
  %12 = add i32 %7, 1, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %12, metadata !10133, metadata !DIExpression()), !dbg !10140
  br i1 %11, label %13, label %6, !dbg !10142, !llvm.loop !10145

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10148
  br label %14, !dbg !10149

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10151 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10155, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i32 %1, metadata !10156, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10157, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i8* %3, metadata !10158, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.value(metadata i32 0, metadata !10159, metadata !DIExpression()), !dbg !10167
  %5 = icmp eq i32 %1, 0, !dbg !10168
  br i1 %5, label %16, label %8, !dbg !10169

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10159, metadata !DIExpression()), !dbg !10167
  %7 = icmp eq i32 %15, %1, !dbg !10168
  br i1 %7, label %16, label %8, !dbg !10169, !llvm.loop !10170

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10159, metadata !DIExpression()), !dbg !10167
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10172
  %11 = load i16, i16* %10, align 2, !dbg !10172
  call void @llvm.dbg.value(metadata i16 %11, metadata !10161, metadata !DIExpression()), !dbg !10173
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !10174
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10164, metadata !DIExpression()), !dbg !10173
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %13, metadata !10165, metadata !DIExpression()), !dbg !10173
  %14 = icmp slt i32 %13, 0, !dbg !10176
  %15 = add nuw i32 %9, 1, !dbg !10178
  call void @llvm.dbg.value(metadata i32 %15, metadata !10159, metadata !DIExpression()), !dbg !10167
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !10180 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10184, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10186, metadata !DIExpression()), !dbg !10187
  %2 = sext i16 %0 to i32, !dbg !10188
  %3 = icmp slt i16 %0, 1, !dbg !10190
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10191
  %6 = add nsw i32 %2, -1, !dbg !10191
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10191
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10191
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10185, metadata !DIExpression()), !dbg !10187
  ret %struct.device* %8, !dbg !10192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10193 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10195, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10196, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i8* %2, metadata !10197, metadata !DIExpression()), !dbg !10200
  %5 = bitcast i32* %4 to i8*, !dbg !10201
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !10201
  call void @llvm.dbg.value(metadata i32 0, metadata !10198, metadata !DIExpression()), !dbg !10200
  store i32 0, i32* %4, align 4, !dbg !10202
  call void @llvm.dbg.value(metadata i32* %4, metadata !10198, metadata !DIExpression(DW_OP_deref)), !dbg !10200
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !10203
  call void @llvm.dbg.value(metadata i16* %6, metadata !10199, metadata !DIExpression()), !dbg !10200
  %7 = load i32, i32* %4, align 4, !dbg !10204
  call void @llvm.dbg.value(metadata i32 %7, metadata !10198, metadata !DIExpression()), !dbg !10200
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !10205
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !10206
  ret i32 %8, !dbg !10207
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !10208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10210, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32* %1, metadata !10211, metadata !DIExpression()), !dbg !10215
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10216
  %4 = load i16*, i16** %3, align 4, !dbg !10216
  call void @llvm.dbg.value(metadata i16* %4, metadata !10212, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 0, metadata !10213, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 0, metadata !10214, metadata !DIExpression()), !dbg !10215
  %5 = icmp eq i16* %4, null, !dbg !10217
  br i1 %5, label %22, label %6, !dbg !10219

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10213, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i16* %8, metadata !10212, metadata !DIExpression()), !dbg !10215
  %9 = load i16, i16* %8, align 2, !dbg !10220
  %10 = icmp eq i16 %9, -32768, !dbg !10224
  call void @llvm.dbg.value(metadata i32 undef, metadata !10213, metadata !DIExpression()), !dbg !10215
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10225
  call void @llvm.dbg.value(metadata i16* %11, metadata !10212, metadata !DIExpression()), !dbg !10215
  %12 = zext i1 %10 to i32, !dbg !10226
  %13 = add i32 %7, %12, !dbg !10226
  call void @llvm.dbg.value(metadata i32 %13, metadata !10213, metadata !DIExpression()), !dbg !10215
  %14 = icmp eq i32 %13, 2, !dbg !10227
  br i1 %14, label %15, label %6, !dbg !10228

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10215
  call void @llvm.dbg.value(metadata i32 %16, metadata !10214, metadata !DIExpression()), !dbg !10215
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10229
  %18 = load i16, i16* %17, align 2, !dbg !10229
  %19 = icmp eq i16 %18, 32767, !dbg !10230
  %20 = add i32 %16, 1, !dbg !10231
  call void @llvm.dbg.value(metadata i32 %20, metadata !10214, metadata !DIExpression()), !dbg !10215
  br i1 %19, label %21, label %15, !dbg !10233, !llvm.loop !10234

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10236
  br label %22, !dbg !10237

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10238
  call void @llvm.dbg.value(metadata i16* %23, metadata !10212, metadata !DIExpression()), !dbg !10215
  ret i16* %23, !dbg !10239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !10240 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10243
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10244
  ret i32* %2, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !10246 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10396, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10397, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10398, metadata !DIExpression()), !dbg !10399
  ret void, !dbg !10400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !10401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10405, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.value(metadata i32 %1, metadata !10406, metadata !DIExpression()), !dbg !10407
  ret void, !dbg !10408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !10409 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10413, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata i32 %1, metadata !10414, metadata !DIExpression()), !dbg !10415
  ret void, !dbg !10416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !10417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10421, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.value(metadata i8* %1, metadata !10422, metadata !DIExpression()), !dbg !10423
  ret i32 -134, !dbg !10424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !10425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.value(metadata i8* %1, metadata !10430, metadata !DIExpression()), !dbg !10431
  ret i32 -134, !dbg !10432
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10436, metadata !DIExpression()), !dbg !10437
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10438, !srcloc !10444
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #24, !dbg !10445
  call void @llvm.dbg.value(metadata i32 undef, metadata !10442, metadata !DIExpression()) #24, !dbg !10445
  br label %3, !dbg !10446

3:                                                ; preds = %3, %1
  br label %3, !dbg !10447, !llvm.loop !10450
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10457, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10458, metadata !DIExpression()), !dbg !10459
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i32 0, i32 0), i32 noundef 69) #25, !dbg !10460
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10465
  unreachable, !dbg !10465
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10468, metadata !DIExpression()), !dbg !10469
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10470
  unreachable, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10473, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10474, metadata !DIExpression()), !dbg !10477
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10478, !srcloc !10444
  call void @llvm.dbg.value(metadata i32 undef, metadata !10441, metadata !DIExpression()) #24, !dbg !10480
  call void @llvm.dbg.value(metadata i32 undef, metadata !10442, metadata !DIExpression()) #24, !dbg !10480
  call void @llvm.dbg.value(metadata i32 undef, metadata !10475, metadata !DIExpression()), !dbg !10477
  %4 = tail call fastcc %struct.k_thread* @k_current_get.185() #27, !dbg !10481
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10476, metadata !DIExpression()), !dbg !10477
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !10482
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.186, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !10482
  %6 = icmp eq %struct.__esf* %1, null, !dbg !10487
  br i1 %6, label %13, label %7, !dbg !10489

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10490, metadata !DIExpression()), !dbg !10495
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !10497
  %9 = load i32, i32* %8, align 4, !dbg !10497
  %10 = and i32 %9, 511, !dbg !10498
  %11 = icmp eq i32 %10, 0, !dbg !10499
  br i1 %11, label %13, label %12, !dbg !10500

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.187, i32 0, i32 0), i32 noundef 69) #25, !dbg !10501
  br label %13, !dbg !10507

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !10508
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.188, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !10508
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !10513
  %15 = icmp eq i32 %0, 4, !dbg !10514
  br i1 %15, label %16, label %17, !dbg !10519

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.191, i32 0, i32 0), i32 noundef 148) #25, !dbg !10520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.192, i32 0, i32 0)) #25, !dbg !10520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.191, i32 0, i32 0), i32 noundef 148) #25, !dbg !10520
  unreachable, !dbg !10520

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %18, metadata !10441, metadata !DIExpression()) #24, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %18, metadata !10475, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 undef, metadata !10522, metadata !DIExpression()) #24, !dbg !10525
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !10527, !srcloc !10528
  tail call fastcc void @k_thread_abort.193(%struct.k_thread* noundef %4) #26, !dbg !10529
  ret void, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.185() unnamed_addr #6 !dbg !10533 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.201() #27, !dbg !10537
  ret %struct.k_thread* %1, !dbg !10538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !10539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10543, metadata !DIExpression()), !dbg !10544
  %2 = icmp ult i32 %0, 5, !dbg !10545
  br i1 %2, label %3, label %6, !dbg !10545

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !10545
  %5 = load i8*, i8** %4, align 4, !dbg !10545
  br label %6, !dbg !10545

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.195, i32 0, i32 0), %1 ], !dbg !10546
  ret i8* %7, !dbg !10548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10553, metadata !DIExpression()), !dbg !10555
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !10556
  br i1 %2, label %9, label %3, !dbg !10557

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !10558
  call void @llvm.dbg.value(metadata i8* %4, metadata !10554, metadata !DIExpression()), !dbg !10555
  %5 = icmp eq i8* %4, null, !dbg !10559
  br i1 %5, label %9, label %6, !dbg !10561

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !10562
  %8 = icmp eq i8 %7, 0, !dbg !10563
  br i1 %8, label %9, label %10, !dbg !10564

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.194, i32 0, i32 0), metadata !10554, metadata !DIExpression()), !dbg !10555
  br label %10, !dbg !10565

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.194, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !10555
  call void @llvm.dbg.value(metadata i8* %11, metadata !10554, metadata !DIExpression()), !dbg !10555
  ret i8* %11, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.193(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10572, metadata !DIExpression()), !dbg !10573
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10574, !srcloc !10576
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !10577
  ret void, !dbg !10578
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.201() unnamed_addr #6 !dbg !10579 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10580, !srcloc !10582
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !10583
  ret %struct.k_thread* %1, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10589, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %1, metadata !10590, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %2, metadata !10591, metadata !DIExpression()), !dbg !10592
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !10593
  ret void, !dbg !10594
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10595 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10599, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i8* %1, metadata !10600, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i32 %2, metadata !10601, metadata !DIExpression()), !dbg !10602
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10605 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !10606
  ret void, !dbg !10607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10612, metadata !DIExpression()), !dbg !10613
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !10614
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10615
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10616
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10617
  %4 = trunc i32 %0 to i8, !dbg !10618
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !10619
  store i8 %4, i8* %5, align 4, !dbg !10620
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10621
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !10622
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10623
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10624
  store i8* %8, i8** %9, align 4, !dbg !10625
  ret void, !dbg !10626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10629, metadata !DIExpression()), !dbg !10635
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10636
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10630, metadata !DIExpression()), !dbg !10635
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10637
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10631, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i8* null, metadata !10634, metadata !DIExpression()), !dbg !10635
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10638
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10639
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !10640
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !10641
  ret void, !dbg !10642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10647, metadata !DIExpression()), !dbg !10648
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !10649
  ret i8* %2, !dbg !10650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10656, metadata !DIExpression()), !dbg !10657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10658
  %3 = load i8, i8* %2, align 1, !dbg !10659
  %4 = and i8 %3, -5, !dbg !10659
  store i8 %4, i8* %2, align 1, !dbg !10659
  ret void, !dbg !10660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10663, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.value(metadata i32 %1, metadata !10664, metadata !DIExpression()), !dbg !10665
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #26, !dbg !10666
  ret void, !dbg !10667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10668 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10673, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.value(metadata i32 %1, metadata !10674, metadata !DIExpression()), !dbg !10675
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10676, !srcloc !10678
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #25, !dbg !10679
  ret void, !dbg !10680
}

; Function Attrs: optsize
declare !dbg !10681 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !10682 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !10685
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !10686
  %3 = ptrtoint i8* %2 to i32, !dbg !10695
  %4 = add i32 %3, 2048, !dbg !10696
  call void @llvm.dbg.value(metadata i32 %4, metadata !10690, metadata !DIExpression()) #24, !dbg !10697
  call void @llvm.dbg.value(metadata i32 %4, metadata !10698, metadata !DIExpression()) #24, !dbg !10701
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !10703, !srcloc !10704
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10705
  %6 = or i32 %5, 512, !dbg !10705
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10705
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -2, i32 noundef 255) #25, !dbg !10706
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -5, i32 noundef 0) #25, !dbg !10709
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -12, i32 noundef 0) #25, !dbg !10710
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -11, i32 noundef 0) #25, !dbg !10711
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -10, i32 noundef 0) #25, !dbg !10712
  tail call fastcc void @__NVIC_SetPriority.210(i32 noundef -4, i32 noundef 0) #25, !dbg !10713
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10714
  %8 = or i32 %7, 458752, !dbg !10714
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10714
  tail call void @z_arm_fault_init() #25, !dbg !10715
  tail call void @z_arm_cpu_idle_init() #25, !dbg !10716
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10717
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10720
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !10721
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !10722
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10723
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !10723
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10684, metadata !DIExpression()), !dbg !10724
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !10725
  call void @z_device_state_init() #25, !dbg !10726
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !10727
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !10728
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !10729
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10730
  unreachable, !dbg !10730
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1605 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1609, metadata !DIExpression()), !dbg !10731
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10732
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10732
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1610, metadata !DIExpression()), !dbg !10731
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1610, metadata !DIExpression()), !dbg !10731
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10733
  br i1 %7, label %8, label %35, !dbg !10734

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1610, metadata !DIExpression()), !dbg !10731
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10735
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10735
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1620, metadata !DIExpression()), !dbg !10736
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10737
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10737
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %14, metadata !1624, metadata !DIExpression()), !dbg !10736
  %15 = icmp eq %struct.device* %11, null, !dbg !10739
  br i1 %15, label %32, label %16, !dbg !10741

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10742
  br i1 %17, label %26, label %18, !dbg !10745

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10746
  call void @llvm.dbg.value(metadata i32 %19, metadata !1624, metadata !DIExpression()), !dbg !10736
  %20 = icmp ult i32 %19, 255, !dbg !10748
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10748
  call void @llvm.dbg.value(metadata i32 %21, metadata !1624, metadata !DIExpression()), !dbg !10736
  %22 = trunc i32 %21 to i8, !dbg !10749
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10750
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10750
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10751
  store i8 %22, i8* %25, align 1, !dbg !10752
  br label %26, !dbg !10753

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10754
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10754
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10755
  %30 = load i8, i8* %29, align 1, !dbg !10756
  %31 = or i8 %30, 1, !dbg !10756
  store i8 %31, i8* %29, align 1, !dbg !10756
  br label %32, !dbg !10757

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10758
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1610, metadata !DIExpression()), !dbg !10731
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10733
  br i1 %34, label %8, label %35, !dbg !10734, !llvm.loop !10759

35:                                               ; preds = %32, %1
  ret void, !dbg !10761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.210(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10764, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.value(metadata i32 %1, metadata !10765, metadata !DIExpression()), !dbg !10766
  %3 = trunc i32 %1 to i8, !dbg !10767
  %4 = shl i8 %3, 4, !dbg !10767
  %5 = and i32 %0, 15, !dbg !10770
  %6 = add nsw i32 %5, -4, !dbg !10771
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10772
  store volatile i8 %4, i8* %7, align 1, !dbg !10773
  ret void, !dbg !10774
}

; Function Attrs: optsize
declare !dbg !10775 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !10776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10779, metadata !DIExpression()), !dbg !10780
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10781
  store i8 1, i8* %2, align 1, !dbg !10782
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10783
  store i8 1, i8* %3, align 4, !dbg !10784
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10785
  store i32 0, i32* %4, align 4, !dbg !10786
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10787
  store i32 0, i32* %5, align 4, !dbg !10788
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10789
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10790
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10791
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10793 {
  tail call void @z_sched_init() #25, !dbg !10798
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10799
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.211, i32 0, i32 0)) #25, !dbg !10800
  call void @llvm.dbg.value(metadata i8* %1, metadata !10797, metadata !DIExpression()), !dbg !10801
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !10802
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10803
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !10804
  ret i8* %1, !dbg !10805
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !10806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10810, metadata !DIExpression()), !dbg !10811
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !10812
  unreachable, !dbg !10813
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10816, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata i8* %1, metadata !10817, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata i8* %2, metadata !10818, metadata !DIExpression()), !dbg !10819
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10820
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !10821
  tail call void @boot_banner() #25, !dbg !10822
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !10823
  tail call void @z_init_static_threads() #25, !dbg !10824
  tail call void @main() #25, !dbg !10825
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10826
  %5 = and i8 %4, -2, !dbg !10826
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10826
  ret void, !dbg !10827
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !10828 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10838, metadata !DIExpression()), !dbg !10840
  call void @llvm.dbg.value(metadata i8* %1, metadata !10839, metadata !DIExpression()), !dbg !10840
  ret void, !dbg !10841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !10842 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10844, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.value(metadata i8* %1, metadata !10845, metadata !DIExpression()), !dbg !10846
  ret void, !dbg !10847
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10848 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !10849, !srcloc !10856
  call void @llvm.dbg.value(metadata i32 %1, metadata !10852, metadata !DIExpression()) #24, !dbg !10857
  %2 = icmp ne i32 %1, 0, !dbg !10858
  ret i1 %2, !dbg !10859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !10860 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10861
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10862
  %3 = load i8, i8* %2, align 4, !dbg !10863
  %4 = or i8 %3, 1, !dbg !10863
  store i8 %4, i8* %2, align 4, !dbg !10863
  ret void, !dbg !10864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !10865 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10866
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10867
  %3 = load i8, i8* %2, align 4, !dbg !10868
  %4 = and i8 %3, -2, !dbg !10868
  store i8 %4, i8* %2, align 4, !dbg !10868
  ret void, !dbg !10869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !10870 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10871
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10872
  %3 = load i8, i8* %2, align 4, !dbg !10872
  %4 = and i8 %3, 1, !dbg !10873
  %5 = icmp ne i8 %4, 0, !dbg !10874
  ret i1 %5, !dbg !10875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !10876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10880, metadata !DIExpression()), !dbg !10882
  call void @llvm.dbg.value(metadata i8* %1, metadata !10881, metadata !DIExpression()), !dbg !10882
  ret i32 -88, !dbg !10883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !10884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10888, metadata !DIExpression()), !dbg !10889
  ret i8* null, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !10891 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10895, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i8* %1, metadata !10896, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata i32 %2, metadata !10897, metadata !DIExpression()), !dbg !10898
  ret i32 -88, !dbg !10899
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1633 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1750, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i8* %1, metadata !1751, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %2, metadata !1752, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 0, metadata !1753, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i8 undef, metadata !1755, metadata !DIExpression()), !dbg !10900
  %4 = icmp eq i8* %1, null, !dbg !10901
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !10903
  br i1 %6, label %46, label %7, !dbg !10903

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10904
  %9 = load i8, i8* %8, align 1, !dbg !10904
  call void @llvm.dbg.value(metadata i8 %9, metadata !1755, metadata !DIExpression()), !dbg !10900
  %10 = add i32 %2, -1, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %10, metadata !1752, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i8 0, metadata !1756, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i8 %9, metadata !1755, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 0, metadata !1753, metadata !DIExpression()), !dbg !10900
  %11 = icmp eq i8 %9, 0, !dbg !10907
  br i1 %11, label %12, label %15, !dbg !10909

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !10910
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !10911
  store i8 0, i8* %14, align 1, !dbg !10912
  br label %46, !dbg !10913

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1756, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.value(metadata i8 %17, metadata !1755, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %18, metadata !1753, metadata !DIExpression()), !dbg !10900
  %19 = zext i8 %17 to i32, !dbg !10914
  %20 = zext i8 %16 to i32, !dbg !10915
  %21 = shl nuw i32 1, %20, !dbg !10915
  call void @llvm.dbg.value(metadata i32 %21, metadata !1754, metadata !DIExpression()), !dbg !10900
  %22 = and i32 %21, %19, !dbg !10917
  %23 = icmp eq i32 %22, 0, !dbg !10919
  br i1 %23, label %42, label %24, !dbg !10920

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !10921
  %26 = sub i32 %10, %18, !dbg !10922
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !10923
  %28 = load i8*, i8** %27, align 4, !dbg !10923
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !10924
  %30 = load i32, i32* %29, align 4, !dbg !10924
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !10925
  %32 = add i32 %31, %18, !dbg !10926
  call void @llvm.dbg.value(metadata i32 %32, metadata !1753, metadata !DIExpression()), !dbg !10900
  %33 = trunc i32 %21 to i8, !dbg !10927
  %34 = xor i8 %33, -1, !dbg !10927
  %35 = and i8 %17, %34, !dbg !10927
  call void @llvm.dbg.value(metadata i8 %35, metadata !1755, metadata !DIExpression()), !dbg !10900
  %36 = icmp eq i8 %35, 0, !dbg !10928
  br i1 %36, label %12, label %37, !dbg !10930

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !10931
  %39 = sub i32 %10, %32, !dbg !10933
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.214, i32 0, i32 0), i32 noundef 1) #26, !dbg !10934
  %41 = add i32 %40, %32, !dbg !10935
  call void @llvm.dbg.value(metadata i32 %41, metadata !1753, metadata !DIExpression()), !dbg !10900
  br label %42, !dbg !10936

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !10900
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !10900
  call void @llvm.dbg.value(metadata i8 %44, metadata !1755, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.value(metadata i32 %43, metadata !1753, metadata !DIExpression()), !dbg !10900
  %45 = add i8 %16, 1, !dbg !10937
  call void @llvm.dbg.value(metadata i8 %45, metadata !1756, metadata !DIExpression()), !dbg !10906
  br label %15, !dbg !10909

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.215, i32 0, i32 0), %3 ], !dbg !10900
  ret i8* %47, !dbg !10938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10943, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i32 %1, metadata !10944, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i8* %2, metadata !10945, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.value(metadata i32 %3, metadata !10946, metadata !DIExpression()), !dbg !10948
  %5 = icmp ult i32 %1, %3, !dbg !10949
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %6, metadata !10947, metadata !DIExpression()), !dbg !10948
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !10950
  ret i32 %6, !dbg !10951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10956, metadata !DIExpression()), !dbg !10957
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !10958
  ret void, !dbg !10959
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !10960 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10969, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !10970, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 %2, metadata !10971, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !10972, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8* %4, metadata !10973, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8* %5, metadata !10974, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8* %6, metadata !10975, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 %7, metadata !10976, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 %8, metadata !10977, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8* undef, metadata !10978, metadata !DIExpression()), !dbg !10980
  %11 = icmp eq i32 %7, 15, !dbg !10981
  br i1 %11, label %12, label %15, !dbg !10981

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !10981
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #26, !dbg !10981
  br i1 %14, label %19, label %18, !dbg !10981

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !10981
  %17 = icmp ult i32 %16, 31, !dbg !10981
  br i1 %17, label %19, label %18, !dbg !10981

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 536) #25, !dbg !10985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.228, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !10985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 536) #25, !dbg !10985
  unreachable, !dbg !10985

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !10987
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #26, !dbg !10988
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !10989
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !10990
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !10991
  call void @llvm.dbg.value(metadata i8* %22, metadata !10979, metadata !DIExpression()), !dbg !10980
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !10992
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !10993
  store i8* null, i8** %23, align 4, !dbg !10994
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10995
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !10995
  br i1 %25, label %29, label %26, !dbg !10997

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !10998
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !10998
  br label %29, !dbg !10999

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !10980
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11000
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !11002
  ret i8* %22, !dbg !11003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !11004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11008, metadata !DIExpression()), !dbg !11009
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !11010
  ret i1 %2, !dbg !11011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !11012 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11017, metadata !DIExpression()), !dbg !11018
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11019
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !11020
  ret void, !dbg !11021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !11022 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11027, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.value(metadata i32 %1, metadata !11028, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.value(metadata i32 %2, metadata !11029, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.value(metadata i32 %3, metadata !11030, metadata !DIExpression()), !dbg !11031
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11032
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11033
  %6 = trunc i32 %3 to i8, !dbg !11034
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11035
  store i8 %6, i8* %7, align 4, !dbg !11036
  %8 = trunc i32 %2 to i8, !dbg !11037
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11038
  store i8 %8, i8* %9, align 1, !dbg !11039
  %10 = trunc i32 %1 to i8, !dbg !11040
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11041
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11041
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11041
  store i8 %10, i8* %13, align 2, !dbg !11042
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11043
  store i8 0, i8* %14, align 1, !dbg !11044
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !11045
  ret void, !dbg !11046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !11047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11051, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11052, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 %2, metadata !11053, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 0, metadata !11058, metadata !DIExpression()), !dbg !11059
  %4 = add i32 %2, 7, !dbg !11060
  %5 = and i32 %4, -8, !dbg !11060
  %6 = add i32 %5, 64, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %6, metadata !11054, metadata !DIExpression()), !dbg !11059
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.229(%struct.z_thread_stack_element* noundef %1) #26, !dbg !11062
  call void @llvm.dbg.value(metadata i8* %7, metadata !11057, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 %5, metadata !11055, metadata !DIExpression()), !dbg !11059
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11063
  call void @llvm.dbg.value(metadata i8* %8, metadata !11056, metadata !DIExpression()), !dbg !11059
  call void @llvm.dbg.value(metadata i32 0, metadata !11058, metadata !DIExpression()), !dbg !11059
  %9 = ptrtoint i8* %7 to i32, !dbg !11064
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11065
  store i32 %9, i32* %10, align 4, !dbg !11066
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11067
  store i32 %5, i32* %11, align 4, !dbg !11068
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11069
  store i32 0, i32* %12, align 4, !dbg !11070
  call void @llvm.dbg.value(metadata i8* %8, metadata !11056, metadata !DIExpression()), !dbg !11059
  ret i8* %8, !dbg !11071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.229(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !11072 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11076, metadata !DIExpression()), !dbg !11077
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11078
  ret i8* %2, !dbg !11079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !11080 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11085, metadata !DIExpression()), !dbg !11086
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11087
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !11088
  ret void, !dbg !11089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !11090 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11092, metadata !DIExpression()), !dbg !11093
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11094
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !11097 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11101, metadata !DIExpression()), !dbg !11102
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11103
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11104
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11105
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11106
  ret void, !dbg !11107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !11108 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11113, metadata !DIExpression()), !dbg !11114
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11115
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11116
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11117
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11118
  ret void, !dbg !11119
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11120 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11137, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11128, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11129, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i32 %2, metadata !11130, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11131, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i8* %4, metadata !11132, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i8* %5, metadata !11133, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i8* %6, metadata !11134, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i32 %7, metadata !11135, metadata !DIExpression()), !dbg !11138
  call void @llvm.dbg.value(metadata i32 %8, metadata !11136, metadata !DIExpression()), !dbg !11138
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !11139, !srcloc !10856
  call void @llvm.dbg.value(metadata i32 %11, metadata !10852, metadata !DIExpression()) #24, !dbg !11144
  %12 = icmp eq i32 %11, 0, !dbg !11145
  br i1 %12, label %14, label %13, !dbg !11146

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 647) #25, !dbg !11147
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.233, i32 0, i32 0)) #25, !dbg !11147
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 647) #25, !dbg !11147
  unreachable, !dbg !11147

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !11137, metadata !DIExpression()), !dbg !11138
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !11149
  %17 = icmp eq i64 %15, -1, !dbg !11150
  br i1 %17, label %19, label %18, !dbg !11152

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !11153
  br label %19, !dbg !11155

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !11156
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11157 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11161, metadata !DIExpression()), !dbg !11163
  %4 = icmp eq i64 %3, 0, !dbg !11164
  br i1 %4, label %5, label %6, !dbg !11166

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !11167
  br label %7, !dbg !11169

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !11170
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11172
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11173 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11177, metadata !DIExpression()), !dbg !11178
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11179, !srcloc !11181
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !11182
  ret void, !dbg !11183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11184 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11187, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11186, metadata !DIExpression()), !dbg !11188
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11189
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !11190
  ret void, !dbg !11191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11192 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11194, metadata !DIExpression()), !dbg !11213
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !11214

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 750) #25, !dbg !11218
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #25, !dbg !11218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 750) #25, !dbg !11218
  unreachable, !dbg !11218

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11194, metadata !DIExpression()), !dbg !11213
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11221
  br i1 %4, label %6, label %5, !dbg !11222

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !11223
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11211, metadata !DIExpression()), !dbg !11224
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !11225

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11229
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !11229
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11231
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !11231
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11232
  %12 = load i32, i32* %11, align 4, !dbg !11232
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11233
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !11233
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11234
  %16 = load i8*, i8** %15, align 4, !dbg !11234
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11235
  %18 = load i8*, i8** %17, align 4, !dbg !11235
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11236
  %20 = load i8*, i8** %19, align 4, !dbg !11236
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11237
  %22 = load i32, i32* %21, align 4, !dbg !11237
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11238
  %24 = load i32, i32* %23, align 4, !dbg !11238
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #26, !dbg !11239
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !11240
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !11241
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !11242
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !11242
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11243
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !11194, metadata !DIExpression()), !dbg !11213
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11244
  br i1 %30, label %1, label %2, !dbg !11214, !llvm.loop !11245

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 781) #25, !dbg !11247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #25, !dbg !11247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.227, i32 0, i32 0), i32 noundef 781) #25, !dbg !11247
  unreachable, !dbg !11247

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !11211, metadata !DIExpression()), !dbg !11224
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11250
  br i1 %34, label %36, label %35, !dbg !11251

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #25, !dbg !11252
  ret void, !dbg !11253

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !11254
  %38 = load i32, i32* %37, align 4, !dbg !11254
  %39 = icmp eq i32 %38, -1, !dbg !11257
  br i1 %39, label %48, label %40, !dbg !11258

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !11259
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !11259
  %43 = icmp sgt i32 %38, 0, !dbg !11261
  %44 = select i1 %43, i32 %38, i32 0, !dbg !11261
  %45 = zext i32 %44 to i64, !dbg !11261
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #26, !dbg !11261
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !11262
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #26, !dbg !11262
  br label %48, !dbg !11263

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !11264
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !11211, metadata !DIExpression()), !dbg !11224
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11265
  br i1 %50, label %31, label %32, !dbg !11225, !llvm.loop !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !11268 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11273, metadata !DIExpression()), !dbg !11274
  call void @llvm.dbg.value(metadata i64 %0, metadata !11275, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 1000, metadata !11280, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 10000, metadata !11281, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i8 1, metadata !11282, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i8 0, metadata !11283, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i8 1, metadata !11284, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i8 0, metadata !11285, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i8 1, metadata !11286, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i8 0, metadata !11287, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i64 0, metadata !11288, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i64 0, metadata !11288, metadata !DIExpression()), !dbg !11292
  %2 = mul i64 %0, 10, !dbg !11294
  ret i64 %2, !dbg !11300
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !11301 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11303, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata i8* %1, metadata !11304, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata i8* %2, metadata !11305, metadata !DIExpression()), !dbg !11307
  call void @llvm.dbg.value(metadata i8* %3, metadata !11306, metadata !DIExpression()), !dbg !11307
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11308
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11309
  %7 = load i8, i8* %6, align 4, !dbg !11310
  %8 = or i8 %7, 4, !dbg !11310
  store i8 %8, i8* %6, align 4, !dbg !11310
  tail call void @z_thread_essential_clear() #26, !dbg !11311
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !11312
  unreachable, !dbg !11312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !11313 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11318, metadata !DIExpression()), !dbg !11320
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !11321
  %3 = load i32, i32* %2, align 4, !dbg !11321
  call void @llvm.dbg.value(metadata i32 %3, metadata !11319, metadata !DIExpression()), !dbg !11320
  %4 = icmp eq i32 %3, 0, !dbg !11322
  br i1 %4, label %10, label %5, !dbg !11324

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !11325
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !11328
  %8 = zext i8 %7 to i32, !dbg !11329
  %9 = icmp eq i32 %6, %8, !dbg !11330
  br i1 %9, label %11, label %10, !dbg !11331

10:                                               ; preds = %5, %1
  br label %11, !dbg !11332

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !11320
  ret i1 %12, !dbg !11333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !11334 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11336, metadata !DIExpression()), !dbg !11337
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !11338
  %3 = load i32, i32* %2, align 4, !dbg !11338
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !11340
  %5 = zext i8 %4 to i32, !dbg !11341
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11342
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !11343
  %8 = or i32 %7, %5, !dbg !11344
  %9 = icmp eq i32 %3, %8, !dbg !11345
  br i1 %9, label %10, label %11, !dbg !11346

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !11347
  br label %11, !dbg !11348

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !11349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !11350 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11354, metadata !DIExpression()), !dbg !11355
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !11356
  %3 = zext i8 %2 to i32, !dbg !11357
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11358
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !11359
  %6 = or i32 %5, %3, !dbg !11360
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !11361
  store i32 %6, i32* %7, align 4, !dbg !11362
  ret void, !dbg !11363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !11364 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11368, metadata !DIExpression()), !dbg !11369
  ret i32 -134, !dbg !11370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !11371 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11375, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.value(metadata i32 %1, metadata !11376, metadata !DIExpression()), !dbg !11377
  ret i32 -134, !dbg !11378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !11379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11386, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !11387, metadata !DIExpression()), !dbg !11388
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11389
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !11391
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11388
  ret i32 %6, !dbg !11392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !11393 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !11397, metadata !DIExpression()), !dbg !11398
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !11399
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11398
  ret i32 %3, !dbg !11401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11402 {
  tail call void @sys_clock_idle_exit() #25, !dbg !11404
  ret void, !dbg !11405
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !11406 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11408, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i8* %1, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i8* %2, metadata !11410, metadata !DIExpression()), !dbg !11411
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11412
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !11412
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !11412
  %7 = load i8, i8* %6, align 2, !dbg !11412
  %8 = icmp sgt i8 %7, -1, !dbg !11412
  br i1 %8, label %10, label %9, !dbg !11415

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #25, !dbg !11416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #25, !dbg !11416
  unreachable, !dbg !11416

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11418, !srcloc !11425
  call void @llvm.dbg.value(metadata i32 undef, metadata !11421, metadata !DIExpression()) #24, !dbg !11426
  call void @llvm.dbg.value(metadata i32 undef, metadata !11422, metadata !DIExpression()) #24, !dbg !11426
  tail call fastcc void @k_cpu_idle() #26, !dbg !11427
  br label %10, !dbg !11428, !llvm.loop !11429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11431 {
  tail call void @arch_cpu_idle() #25, !dbg !11432
  ret void, !dbg !11433
}

; Function Attrs: optsize
declare !dbg !11434 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !11435 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11453, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.value(metadata i8* %1, metadata !11454, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.value(metadata i32 %2, metadata !11455, metadata !DIExpression()), !dbg !11457
  call void @llvm.dbg.value(metadata i32 %3, metadata !11456, metadata !DIExpression()), !dbg !11457
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !11458
  store i32 %2, i32* %5, align 4, !dbg !11459
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !11460
  store i32 %3, i32* %6, align 4, !dbg !11461
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !11462
  store i8* %1, i8** %7, align 4, !dbg !11463
  %8 = mul i32 %3, %2, !dbg !11464
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !11465
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !11466
  store i8* %9, i8** %10, align 4, !dbg !11467
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !11468
  store i8* %1, i8** %11, align 4, !dbg !11469
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !11470
  store i8* %1, i8** %12, align 4, !dbg !11471
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !11472
  store i32 0, i32* %13, align 4, !dbg !11473
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !11474
  store i8 0, i8* %14, align 4, !dbg !11475
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !11476
  tail call fastcc void @z_waitq_init.251(%union.anon* noundef %15) #26, !dbg !11477
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !11478
  store i32 0, i32* %16, align 4, !dbg !11478
  ret void, !dbg !11479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.251(%union.anon* noundef %0) unnamed_addr #12 !dbg !11480 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11484, metadata !DIExpression()), !dbg !11485
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11486
  tail call fastcc void @sys_dlist_init.252(%struct._dnode* noundef %2) #26, !dbg !11487
  ret void, !dbg !11488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.252(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !11489 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11494, metadata !DIExpression()), !dbg !11495
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11496
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11497
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11498
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11499
  ret void, !dbg !11500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11501 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11505, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.value(metadata i32 %1, metadata !11506, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.value(metadata i32 %2, metadata !11507, metadata !DIExpression()), !dbg !11511
  %5 = bitcast i32* %4 to i8*, !dbg !11512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11512
  call void @llvm.dbg.value(metadata i32* %4, metadata !11510, metadata !DIExpression(DW_OP_deref)), !dbg !11511
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11513
  br i1 %6, label %13, label %7, !dbg !11515

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !11516
  call void @llvm.dbg.value(metadata i32 %8, metadata !11510, metadata !DIExpression()), !dbg !11511
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !11518
  call void @llvm.dbg.value(metadata i8* %9, metadata !11508, metadata !DIExpression()), !dbg !11511
  %10 = icmp eq i8* %9, null, !dbg !11519
  br i1 %10, label %13, label %11, !dbg !11521

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !11522
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !11524
  store i8 1, i8* %12, align 4, !dbg !11525
  call void @llvm.dbg.value(metadata i32 0, metadata !11509, metadata !DIExpression()), !dbg !11511
  br label %13, !dbg !11526

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !11527
  call void @llvm.dbg.value(metadata i32 %14, metadata !11509, metadata !DIExpression()), !dbg !11511
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11528
  ret i32 %14, !dbg !11529
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #22 !dbg !11530 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11535, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i32 %1, metadata !11536, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i32* %2, metadata !11537, metadata !DIExpression()), !dbg !11538
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !11539
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !11539
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !11539
  store i32 %6, i32* %2, align 4, !dbg !11539
  ret i1 %5, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !11541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11545, metadata !DIExpression()), !dbg !11546
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #25, !dbg !11547
  ret i8* %2, !dbg !11548
}

; Function Attrs: optsize
declare !dbg !11549 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11556, metadata !DIExpression()), !dbg !11557
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !11558
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #26, !dbg !11558
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !11558
  br i1 %4, label %5, label %15, !dbg !11560

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !11561
  %7 = load i8, i8* %6, align 4, !dbg !11561
  %8 = and i8 %7, 1, !dbg !11563
  %9 = icmp eq i8 %8, 0, !dbg !11564
  br i1 %9, label %15, label %10, !dbg !11565

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !11566
  %12 = load i8*, i8** %11, align 4, !dbg !11566
  tail call void @k_free(i8* noundef %12) #25, !dbg !11568
  %13 = load i8, i8* %6, align 4, !dbg !11569
  %14 = and i8 %13, -2, !dbg !11569
  store i8 %14, i8* %6, align 4, !dbg !11569
  br label %15, !dbg !11570

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !11557
  ret i32 %16, !dbg !11571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !11572 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11576, metadata !DIExpression()), !dbg !11577
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11578
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !11579
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !11580
  ret %struct.k_thread* %4, !dbg !11581
}

; Function Attrs: optsize
declare !dbg !11582 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11587, metadata !DIExpression()), !dbg !11588
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !11589
  br i1 %2, label %6, label %3, !dbg !11589

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11590
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11590
  br label %6, !dbg !11589

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11589
  ret %struct._dnode* %7, !dbg !11591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !11592 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11596, metadata !DIExpression()), !dbg !11597
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11598
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11598
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11599
  ret i1 %4, !dbg !11600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11601 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !11611, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11609, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i8* %1, metadata !11610, metadata !DIExpression()), !dbg !11619
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !11620, !srcloc !11629
  call void @llvm.dbg.value(metadata i32 %5, metadata !11623, metadata !DIExpression()) #24, !dbg !11630
  %6 = icmp eq i32 %5, 0, !dbg !11631
  %7 = icmp eq i64 %4, 0, !dbg !11632
  %8 = select i1 %6, i1 true, i1 %7, !dbg !11632
  br i1 %8, label %10, label %9, !dbg !11632

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 118) #25, !dbg !11633
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.258, i32 0, i32 0)) #25, !dbg !11633
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 118) #25, !dbg !11633
  unreachable, !dbg !11633

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !11635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !11636, metadata !DIExpression()) #24, !dbg !11643
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11645, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #24, !dbg !11652
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #24, !dbg !11652
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #24, !dbg !11643
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !11653
  br i1 %13, label %15, label %14, !dbg !11656

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !11657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11657
  unreachable, !dbg !11657

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %16, metadata !11648, metadata !DIExpression()) #24, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %16, metadata !11642, metadata !DIExpression()) #24, !dbg !11643
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %16, metadata !11613, metadata !DIExpression()), !dbg !11619
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !11660
  %18 = load i32, i32* %17, align 4, !dbg !11660
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !11662
  %20 = load i32, i32* %19, align 4, !dbg !11662
  %21 = icmp ult i32 %18, %20, !dbg !11663
  br i1 %21, label %22, label %52, !dbg !11664

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !11665
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #25, !dbg !11667
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !11612, metadata !DIExpression()), !dbg !11619
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !11668
  br i1 %25, label %34, label %26, !dbg !11670

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !11671
  %28 = load i8*, i8** %27, align 4, !dbg !11671
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !11673
  %30 = load i32, i32* %29, align 4, !dbg !11673
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #25, !dbg !11674
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !11675, metadata !DIExpression()), !dbg !11681
  call void @llvm.dbg.value(metadata i32 0, metadata !11680, metadata !DIExpression()), !dbg !11681
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !11683
  store i32 0, i32* %32, align 4, !dbg !11684
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #25, !dbg !11685
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !11686
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #25, !dbg !11686
  br label %64, !dbg !11687

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !11688
  %36 = load i8*, i8** %35, align 4, !dbg !11688
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !11690
  %38 = load i32, i32* %37, align 4, !dbg !11690
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #25, !dbg !11691
  %40 = load i32, i32* %37, align 4, !dbg !11692
  %41 = load i8*, i8** %35, align 4, !dbg !11693
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !11693
  store i8* %42, i8** %35, align 4, !dbg !11693
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !11694
  %44 = load i8*, i8** %43, align 4, !dbg !11694
  %45 = icmp eq i8* %42, %44, !dbg !11696
  br i1 %45, label %46, label %49, !dbg !11697

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !11698
  %48 = load i8*, i8** %47, align 4, !dbg !11698
  store i8* %48, i8** %35, align 4, !dbg !11700
  br label %49, !dbg !11701

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !11702
  %51 = add i32 %50, 1, !dbg !11702
  store i32 %51, i32* %17, align 4, !dbg !11702
  call void @llvm.dbg.value(metadata i32 0, metadata !11618, metadata !DIExpression()), !dbg !11619
  br label %59, !dbg !11703

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !11704

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11705
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !11708
  store i8* %1, i8** %55, align 4, !dbg !11709
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !11710
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !11711
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #25, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %58, metadata !11618, metadata !DIExpression()), !dbg !11619
  br label %64, !dbg !11712

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !11713
  call void @llvm.dbg.value(metadata i32 %60, metadata !11618, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11714, metadata !DIExpression()) #24, !dbg !11720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !11719, metadata !DIExpression()) #24, !dbg !11720
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !11722
  br i1 %61, label %63, label %62, !dbg !11725

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !11726
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !11726
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !11726
  unreachable, !dbg !11726

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !11714, metadata !DIExpression()) #24, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %16, metadata !11728, metadata !DIExpression()) #24, !dbg !11731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !11733, !srcloc !11734
  br label %64, !dbg !11735

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !11619
  ret i32 %65, !dbg !11736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !11737 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11747, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11748, metadata !DIExpression()), !dbg !11749
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !11750
  %4 = load i32, i32* %3, align 4, !dbg !11750
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11751
  store i32 %4, i32* %5, align 4, !dbg !11752
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !11753
  %7 = load i32, i32* %6, align 4, !dbg !11753
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11754
  store i32 %7, i32* %8, align 4, !dbg !11755
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !11756
  %10 = load i32, i32* %9, align 4, !dbg !11756
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11757
  store i32 %10, i32* %11, align 4, !dbg !11758
  ret void, !dbg !11759
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11760 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !11766, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11764, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata i8* %1, metadata !11765, metadata !DIExpression()), !dbg !11770
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !11771, !srcloc !11629
  call void @llvm.dbg.value(metadata i32 %5, metadata !11623, metadata !DIExpression()) #24, !dbg !11776
  %6 = icmp eq i32 %5, 0, !dbg !11777
  %7 = icmp eq i64 %4, 0, !dbg !11778
  %8 = select i1 %6, i1 true, i1 %7, !dbg !11778
  br i1 %8, label %10, label %9, !dbg !11778

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 208) #25, !dbg !11779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.258, i32 0, i32 0)) #25, !dbg !11779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 208) #25, !dbg !11779
  unreachable, !dbg !11779

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !11781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !11636, metadata !DIExpression()) #24, !dbg !11782
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11784, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #24, !dbg !11786
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #24, !dbg !11786
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #24, !dbg !11782
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !11787
  br i1 %13, label %15, label %14, !dbg !11788

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !11789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11789
  unreachable, !dbg !11789

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %16, metadata !11648, metadata !DIExpression()) #24, !dbg !11786
  call void @llvm.dbg.value(metadata i32 %16, metadata !11642, metadata !DIExpression()) #24, !dbg !11782
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !11790
  call void @llvm.dbg.value(metadata i32 %16, metadata !11767, metadata !DIExpression()), !dbg !11770
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !11791
  %18 = load i32, i32* %17, align 4, !dbg !11791
  %19 = icmp eq i32 %18, 0, !dbg !11793
  br i1 %19, label %61, label %20, !dbg !11794

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !11795
  %22 = load i8*, i8** %21, align 4, !dbg !11795
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !11797
  %24 = load i32, i32* %23, align 4, !dbg !11797
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #25, !dbg !11798
  %26 = load i32, i32* %23, align 4, !dbg !11799
  %27 = load i8*, i8** %21, align 4, !dbg !11800
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !11800
  store i8* %28, i8** %21, align 4, !dbg !11800
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !11801
  %30 = load i8*, i8** %29, align 4, !dbg !11801
  %31 = icmp eq i8* %28, %30, !dbg !11803
  br i1 %31, label %32, label %35, !dbg !11804

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !11805
  %34 = load i8*, i8** %33, align 4, !dbg !11805
  store i8* %34, i8** %21, align 4, !dbg !11807
  br label %35, !dbg !11808

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !11809
  %37 = add i32 %36, -1, !dbg !11809
  store i32 %37, i32* %17, align 4, !dbg !11809
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !11810
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #25, !dbg !11811
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !11768, metadata !DIExpression()), !dbg !11770
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !11812
  br i1 %40, label %68, label %41, !dbg !11814

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !11815
  %43 = load i8*, i8** %42, align 4, !dbg !11815
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !11817
  %45 = load i8*, i8** %44, align 4, !dbg !11817
  %46 = load i32, i32* %23, align 4, !dbg !11818
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #25, !dbg !11819
  %48 = load i32, i32* %23, align 4, !dbg !11820
  %49 = load i8*, i8** %42, align 4, !dbg !11821
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !11821
  store i8* %50, i8** %42, align 4, !dbg !11821
  %51 = load i8*, i8** %29, align 4, !dbg !11822
  %52 = icmp eq i8* %50, %51, !dbg !11824
  br i1 %52, label %53, label %56, !dbg !11825

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !11826
  %55 = load i8*, i8** %54, align 4, !dbg !11826
  store i8* %55, i8** %42, align 4, !dbg !11828
  br label %56, !dbg !11829

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !11830
  %58 = add i32 %57, 1, !dbg !11830
  store i32 %58, i32* %17, align 4, !dbg !11830
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !11675, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 0, metadata !11680, metadata !DIExpression()), !dbg !11831
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !11833
  store i32 0, i32* %59, align 4, !dbg !11834
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #25, !dbg !11835
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !11836
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #25, !dbg !11836
  br label %73, !dbg !11837

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !11838

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11839
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !11842
  store i8* %1, i8** %64, align 4, !dbg !11843
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !11844
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !11845
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #25, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %67, metadata !11769, metadata !DIExpression()), !dbg !11770
  br label %73, !dbg !11846

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !11847
  call void @llvm.dbg.value(metadata i32 %69, metadata !11769, metadata !DIExpression()), !dbg !11770
  call void @llvm.dbg.value(metadata i32 undef, metadata !11714, metadata !DIExpression()) #24, !dbg !11848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !11719, metadata !DIExpression()) #24, !dbg !11848
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !11850
  br i1 %70, label %72, label %71, !dbg !11851

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !11852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !11852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !11852
  unreachable, !dbg !11852

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !11714, metadata !DIExpression()) #24, !dbg !11848
  call void @llvm.dbg.value(metadata i32 %16, metadata !11728, metadata !DIExpression()) #24, !dbg !11853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !11855, !srcloc !11734
  br label %73, !dbg !11856

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !11770
  ret i32 %74, !dbg !11857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11858 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11862, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i8* %1, metadata !11863, metadata !DIExpression()), !dbg !11866
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !11867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !11636, metadata !DIExpression()) #24, !dbg !11868
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11870, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #24, !dbg !11872
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #24, !dbg !11872
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #24, !dbg !11868
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !11873
  br i1 %5, label %7, label %6, !dbg !11874

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !11875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11875
  unreachable, !dbg !11875

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #24, !dbg !11872
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #24, !dbg !11868
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !11876
  call void @llvm.dbg.value(metadata i32 undef, metadata !11864, metadata !DIExpression()), !dbg !11866
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !11877
  %9 = load i32, i32* %8, align 4, !dbg !11877
  %10 = icmp eq i32 %9, 0, !dbg !11879
  br i1 %10, label %17, label %11, !dbg !11880

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !11881
  %13 = load i8*, i8** %12, align 4, !dbg !11881
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !11883
  %15 = load i32, i32* %14, align 4, !dbg !11883
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #25, !dbg !11884
  call void @llvm.dbg.value(metadata i32 0, metadata !11865, metadata !DIExpression()), !dbg !11866
  br label %17, !dbg !11885

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !11886
  call void @llvm.dbg.value(metadata i32 %18, metadata !11865, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i32 undef, metadata !11714, metadata !DIExpression()) #24, !dbg !11887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !11719, metadata !DIExpression()) #24, !dbg !11887
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !11889
  br i1 %19, label %21, label %20, !dbg !11890

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !11891
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !11891
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !11891
  unreachable, !dbg !11891

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %22, metadata !11648, metadata !DIExpression()) #24, !dbg !11872
  call void @llvm.dbg.value(metadata i32 %22, metadata !11642, metadata !DIExpression()) #24, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %22, metadata !11864, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i32 undef, metadata !11714, metadata !DIExpression()) #24, !dbg !11887
  call void @llvm.dbg.value(metadata i32 undef, metadata !11728, metadata !DIExpression()) #24, !dbg !11892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #24, !dbg !11894, !srcloc !11734
  ret i32 %18, !dbg !11895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !11896 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !11900, metadata !DIExpression()), !dbg !11903
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !11904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !11636, metadata !DIExpression()) #24, !dbg !11905
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11907, !srcloc !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #24, !dbg !11909
  call void @llvm.dbg.value(metadata i32 undef, metadata !11649, metadata !DIExpression()) #24, !dbg !11909
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #24, !dbg !11905
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #25, !dbg !11910
  br i1 %4, label %6, label %5, !dbg !11911

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11912
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #25, !dbg !11912
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !11912
  unreachable, !dbg !11912

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11648, metadata !DIExpression()) #24, !dbg !11909
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #24, !dbg !11905
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #25, !dbg !11913
  call void @llvm.dbg.value(metadata i32 undef, metadata !11901, metadata !DIExpression()), !dbg !11903
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #25, !dbg !11914
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !11902, metadata !DIExpression()), !dbg !11903
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !11915
  br i1 %9, label %15, label %10, !dbg !11916

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11675, metadata !DIExpression()), !dbg !11917
  call void @llvm.dbg.value(metadata i32 -35, metadata !11680, metadata !DIExpression()), !dbg !11917
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !11920
  store i32 -35, i32* %12, align 4, !dbg !11921
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #25, !dbg !11922
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #25, !dbg !11914
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11902, metadata !DIExpression()), !dbg !11903
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !11915
  br i1 %14, label %15, label %10, !dbg !11916, !llvm.loop !11923

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !11907
  call void @llvm.dbg.value(metadata i32 %16, metadata !11648, metadata !DIExpression()) #24, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %16, metadata !11642, metadata !DIExpression()) #24, !dbg !11905
  call void @llvm.dbg.value(metadata i32 %16, metadata !11901, metadata !DIExpression()), !dbg !11903
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !11925
  store i32 0, i32* %17, align 4, !dbg !11926
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !11927
  %19 = load i8*, i8** %18, align 4, !dbg !11927
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !11928
  store i8* %19, i8** %20, align 4, !dbg !11929
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !11930
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #25, !dbg !11930
  ret void, !dbg !11931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11932 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !11947, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 %1, metadata !11948, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i32 %2, metadata !11949, metadata !DIExpression()), !dbg !11950
  %4 = icmp eq i32 %2, 0, !dbg !11951
  %5 = icmp ugt i32 %1, %2, !dbg !11951
  %6 = or i1 %4, %5, !dbg !11951
  br i1 %6, label %11, label %7, !dbg !11951

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !11953
  store i32 %1, i32* %8, align 4, !dbg !11954
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !11955
  store i32 %2, i32* %9, align 4, !dbg !11956
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !11957
  tail call fastcc void @z_waitq_init.266(%union.anon* noundef %10) #26, !dbg !11958
  br label %11, !dbg !11959

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !11950
  ret i32 %12, !dbg !11960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.266(%union.anon* noundef %0) unnamed_addr #12 !dbg !11961 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11966, metadata !DIExpression()), !dbg !11967
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11968
  tail call fastcc void @sys_dlist_init.267(%struct._dnode* noundef %2) #26, !dbg !11969
  ret void, !dbg !11970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.267(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !11971 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11976, metadata !DIExpression()), !dbg !11977
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11978
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11979
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11980
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11981
  ret void, !dbg !11982
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !11983 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !11987, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !12074, metadata !DIExpression()) #24, !dbg !12081
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12083, !srcloc !12089
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12087, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #24, !dbg !12081
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12091
  br i1 %3, label %5, label %4, !dbg !12094

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !12095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !12095
  unreachable, !dbg !12095

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #24, !dbg !12081
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12097
  call void @llvm.dbg.value(metadata i32 undef, metadata !11988, metadata !DIExpression()), !dbg !12073
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12098
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #25, !dbg !12099
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !11993, metadata !DIExpression()), !dbg !12073
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !12100
  br i1 %8, label %11, label %9, !dbg !12102

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12103, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.value(metadata i32 0, metadata !12108, metadata !DIExpression()), !dbg !12109
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !12112
  store i32 0, i32* %10, align 4, !dbg !12113
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !12114
  br label %19, !dbg !12115

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12116
  %13 = load i32, i32* %12, align 4, !dbg !12116
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !12118
  %15 = load i32, i32* %14, align 4, !dbg !12118
  %16 = icmp ne i32 %13, %15, !dbg !12119
  %17 = zext i1 %16 to i32, !dbg !12120
  %18 = add i32 %13, %17, !dbg !12121
  store i32 %18, i32* %12, align 4, !dbg !12121
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !12083
  call void @llvm.dbg.value(metadata i32 %20, metadata !12086, metadata !DIExpression()) #24, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %20, metadata !12080, metadata !DIExpression()) #24, !dbg !12081
  call void @llvm.dbg.value(metadata i32 %20, metadata !11988, metadata !DIExpression()), !dbg !12073
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !12122
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %21) #25, !dbg !12122
  ret void, !dbg !12123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !12124 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12133, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12132, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.value(metadata i32 0, metadata !12134, metadata !DIExpression()), !dbg !12137
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12138, !srcloc !12147
  call void @llvm.dbg.value(metadata i32 %4, metadata !12141, metadata !DIExpression()) #24, !dbg !12148
  %5 = icmp eq i32 %4, 0, !dbg !12149
  %6 = icmp eq i64 %3, 0, !dbg !12150
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12150
  br i1 %7, label %9, label %8, !dbg !12150

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 122) #25, !dbg !12151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.277, i32 0, i32 0)) #25, !dbg !12151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 122) #25, !dbg !12151
  unreachable, !dbg !12151

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !12074, metadata !DIExpression()) #24, !dbg !12153
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12155, !srcloc !12089
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()) #24, !dbg !12157
  call void @llvm.dbg.value(metadata i32 undef, metadata !12087, metadata !DIExpression()) #24, !dbg !12157
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #24, !dbg !12153
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12158
  br i1 %11, label %13, label %12, !dbg !12159

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !12160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !12160
  unreachable, !dbg !12160

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %14, metadata !12086, metadata !DIExpression()) #24, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %14, metadata !12080, metadata !DIExpression()) #24, !dbg !12153
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12161
  call void @llvm.dbg.value(metadata i32 %14, metadata !12135, metadata !DIExpression()), !dbg !12137
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12162
  %16 = load i32, i32* %15, align 4, !dbg !12162
  %17 = icmp eq i32 %16, 0, !dbg !12162
  br i1 %17, label %23, label %18, !dbg !12164, !prof !12165

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !12166
  store i32 %19, i32* %15, align 4, !dbg !12166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12168, metadata !DIExpression()) #24, !dbg !12174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !12173, metadata !DIExpression()) #24, !dbg !12174
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12176
  br i1 %20, label %22, label %21, !dbg !12179

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !12180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !12180
  unreachable, !dbg !12180

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !12168, metadata !DIExpression()) #24, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %14, metadata !12182, metadata !DIExpression()) #24, !dbg !12185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !12187, !srcloc !12188
  call void @llvm.dbg.value(metadata i32 0, metadata !12134, metadata !DIExpression()), !dbg !12137
  br label %32, !dbg !12189

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !12190

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12168, metadata !DIExpression()) #24, !dbg !12191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !12173, metadata !DIExpression()) #24, !dbg !12191
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12195
  br i1 %25, label %27, label %26, !dbg !12196

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !12197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !12197
  unreachable, !dbg !12197

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !12168, metadata !DIExpression()) #24, !dbg !12191
  call void @llvm.dbg.value(metadata i32 %14, metadata !12182, metadata !DIExpression()) #24, !dbg !12198
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !12200, !srcloc !12188
  call void @llvm.dbg.value(metadata i32 -16, metadata !12134, metadata !DIExpression()), !dbg !12137
  br label %32, !dbg !12201

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !12202
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !12203
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #25, !dbg !12203
  call void @llvm.dbg.value(metadata i32 %31, metadata !12134, metadata !DIExpression()), !dbg !12137
  br label %32, !dbg !12204

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !12137
  call void @llvm.dbg.value(metadata i32 %33, metadata !12134, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.label(metadata !12136), !dbg !12205
  ret i32 %33, !dbg !12206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !12207 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !12209, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !12074, metadata !DIExpression()) #24, !dbg !12213
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12215, !srcloc !12089
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()) #24, !dbg !12217
  call void @llvm.dbg.value(metadata i32 undef, metadata !12087, metadata !DIExpression()) #24, !dbg !12217
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #24, !dbg !12213
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12218
  br i1 %3, label %5, label %4, !dbg !12219

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !12220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !12220
  unreachable, !dbg !12220

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12086, metadata !DIExpression()) #24, !dbg !12217
  call void @llvm.dbg.value(metadata i32 undef, metadata !12080, metadata !DIExpression()) #24, !dbg !12213
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !12221
  call void @llvm.dbg.value(metadata i32 undef, metadata !12211, metadata !DIExpression()), !dbg !12212
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #25, !dbg !12222
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !12210, metadata !DIExpression()), !dbg !12212
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !12224
  br i1 %8, label %14, label %9, !dbg !12226

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12103, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.value(metadata i32 -11, metadata !12108, metadata !DIExpression()), !dbg !12227
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !12229
  store i32 -11, i32* %11, align 4, !dbg !12230
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !12231
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #25, !dbg !12222
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !12210, metadata !DIExpression()), !dbg !12212
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !12224
  br i1 %13, label %14, label %9, !dbg !12226, !llvm.loop !12232

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %15, metadata !12086, metadata !DIExpression()) #24, !dbg !12217
  call void @llvm.dbg.value(metadata i32 %15, metadata !12080, metadata !DIExpression()) #24, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %15, metadata !12211, metadata !DIExpression()), !dbg !12212
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !12235
  store i32 0, i32* %16, align 4, !dbg !12236
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !12237
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %17) #25, !dbg !12237
  ret void, !dbg !12238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !12239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12243, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12244, metadata !DIExpression()), !dbg !12247
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12248
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12248
  %5 = load i8, i8* %4, align 2, !dbg !12248
  call void @llvm.dbg.value(metadata i8 %5, metadata !12245, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12247
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12249
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12249
  %8 = load i8, i8* %7, align 2, !dbg !12249
  call void @llvm.dbg.value(metadata i8 %8, metadata !12246, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12247
  %9 = icmp eq i8 %8, %5, !dbg !12250
  %10 = sext i8 %5 to i32, !dbg !12252
  %11 = sext i8 %8 to i32, !dbg !12252
  %12 = sub nsw i32 %11, %10, !dbg !12252
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12252
  ret i32 %13, !dbg !12253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12254 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12258, metadata !DIExpression()), !dbg !12259
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !12260
  %3 = icmp eq i32 %2, 0, !dbg !12262
  br i1 %3, label %8, label %4, !dbg !12263

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !12264
  %6 = add i32 %5, %2, !dbg !12266
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12267
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !12268
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !12269
  br label %8, !dbg !12270

8:                                                ; preds = %4, %1
  ret void, !dbg !12271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !12272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12276, metadata !DIExpression()), !dbg !12278
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12279
  call void @llvm.dbg.value(metadata i32 %1, metadata !12277, metadata !DIExpression()), !dbg !12278
  ret i32 %1, !dbg !12280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12285, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 %1, metadata !12286, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 0, metadata !12287, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !12303
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12305, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12312
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !12312
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12303
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12313
  br i1 %4, label %6, label %5, !dbg !12316

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12317
  unreachable, !dbg !12317

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12312
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12303
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12319
  call void @llvm.dbg.value(metadata i32 undef, metadata !12293, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata i32 undef, metadata !12287, metadata !DIExpression()), !dbg !12295
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12320
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !12323
  %8 = icmp sgt i32 %0, 0, !dbg !12324
  %9 = icmp sgt i32 %7, 2, !dbg !12326
  %10 = select i1 %9, i32 %7, i32 2, !dbg !12326
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !12326
  store i32 %11, i32* @slice_ticks, align 4, !dbg !12327
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12328
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12329
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !12336
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12338
  br i1 %12, label %14, label %13, !dbg !12341

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12342
  unreachable, !dbg !12342

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %15, metadata !12308, metadata !DIExpression()) #24, !dbg !12312
  call void @llvm.dbg.value(metadata i32 %15, metadata !12302, metadata !DIExpression()) #24, !dbg !12303
  call void @llvm.dbg.value(metadata i32 %15, metadata !12293, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12336
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !12347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #24, !dbg !12349, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !12287, metadata !DIExpression()), !dbg !12295
  call void @llvm.dbg.value(metadata i32 undef, metadata !12287, metadata !DIExpression()), !dbg !12295
  ret void, !dbg !12351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !12352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12354, metadata !DIExpression()), !dbg !12355
  call void @llvm.dbg.value(metadata i32 %0, metadata !12356, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12371
  call void @llvm.dbg.value(metadata i32 1000, metadata !12359, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i32 10000, metadata !12360, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i8 1, metadata !12361, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i1 true, metadata !12362, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12371
  call void @llvm.dbg.value(metadata i1 true, metadata !12363, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12371
  call void @llvm.dbg.value(metadata i8 0, metadata !12364, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i1 true, metadata !12365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12371
  call void @llvm.dbg.value(metadata i1 false, metadata !12366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12371
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !12371
  %2 = mul i32 %0, 10, !dbg !12373
  ret i32 %2, !dbg !12379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12382, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !12385
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12387, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12389
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !12389
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12385
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12390
  br i1 %3, label %5, label %4, !dbg !12391

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12392
  unreachable, !dbg !12392

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12387
  call void @llvm.dbg.value(metadata i32 %6, metadata !12308, metadata !DIExpression()) #24, !dbg !12389
  call void @llvm.dbg.value(metadata i32 %6, metadata !12302, metadata !DIExpression()) #24, !dbg !12385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %6, metadata !12383, metadata !DIExpression()), !dbg !12384
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12394
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12396
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !12397
  br i1 %9, label %10, label %14, !dbg !12398

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12399
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12401
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !12401
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12403
  br i1 %11, label %13, label %12, !dbg !12404

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12405
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12405
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12405
  unreachable, !dbg !12405

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()) #24, !dbg !12401
  call void @llvm.dbg.value(metadata i32 %6, metadata !12344, metadata !DIExpression()) #24, !dbg !12406
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !12408, !srcloc !12350
  br label %33, !dbg !12409

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12410
  %15 = tail call fastcc i32 @slice_time() #26, !dbg !12411
  %16 = icmp eq i32 %15, 0, !dbg !12411
  br i1 %16, label %27, label %17, !dbg !12413

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #26, !dbg !12414
  br i1 %18, label %19, label %27, !dbg !12415

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12416
  %21 = icmp sgt i32 %20, %0, !dbg !12419
  br i1 %21, label %25, label %22, !dbg !12420

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12421
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #26, !dbg !12421
  call void @llvm.dbg.value(metadata i32 %24, metadata !12383, metadata !DIExpression()), !dbg !12384
  br label %28, !dbg !12423

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !12424
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12424
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12426
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !12384
  call void @llvm.dbg.value(metadata i32 %29, metadata !12383, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !12428
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12430
  br i1 %30, label %32, label %31, !dbg !12431

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12432
  unreachable, !dbg !12432

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !12330, metadata !DIExpression()) #24, !dbg !12428
  call void @llvm.dbg.value(metadata i32 %29, metadata !12344, metadata !DIExpression()) #24, !dbg !12433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #24, !dbg !12435, !srcloc !12350
  br label %33, !dbg !12436

33:                                               ; preds = %32, %13
  ret void, !dbg !12436
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !12437 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12441, metadata !DIExpression()), !dbg !12443
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !12444
  %3 = icmp eq i32 %2, 0, !dbg !12444
  br i1 %3, label %16, label %4, !dbg !12445

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !12446
  br i1 %5, label %16, label %6, !dbg !12447

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12448
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12448
  %9 = load i8, i8* %8, align 2, !dbg !12448
  %10 = sext i8 %9 to i32, !dbg !12449
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12450
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !12451
  br i1 %12, label %16, label %13, !dbg !12452

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !12453
  %15 = xor i1 %14, true, !dbg !12454
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12443
  call void @llvm.dbg.value(metadata i1 %17, metadata !12442, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12443
  ret i1 %17, !dbg !12455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12456 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12460, metadata !DIExpression()), !dbg !12462
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12463
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12461, metadata !DIExpression()), !dbg !12462
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !12464
  br i1 %3, label %5, label %4, !dbg !12466

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !12467
  br label %5, !dbg !12469

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12460, metadata !DIExpression()), !dbg !12462
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12470
  ret i32 %6, !dbg !12471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12472 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12474, metadata !DIExpression()), !dbg !12476
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12477
  %3 = load i8, i8* %2, align 1, !dbg !12477
  call void @llvm.dbg.value(metadata i8 %3, metadata !12475, metadata !DIExpression()), !dbg !12476
  %4 = and i8 %3, 31, !dbg !12478
  %5 = icmp ne i8 %4, 0, !dbg !12479
  ret i1 %5, !dbg !12480
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12481 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12483, metadata !DIExpression()), !dbg !12484
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !12485
  br i1 %2, label %3, label %7, !dbg !12487

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()) #24, !dbg !12491
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12494
  %5 = load i8, i8* %4, align 1, !dbg !12495
  %6 = and i8 %5, 127, !dbg !12495
  store i8 %6, i8* %4, align 1, !dbg !12495
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12496, metadata !DIExpression()) #24, !dbg !12499
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12503
  br label %7, !dbg !12504

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12505, metadata !DIExpression()) #24, !dbg !12508
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12510
  %9 = load i8, i8* %8, align 1, !dbg !12511
  %10 = or i8 %9, -128, !dbg !12511
  store i8 %10, i8* %8, align 1, !dbg !12511
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12512, metadata !DIExpression()) #24, !dbg !12515
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12519, metadata !DIExpression()) #24, !dbg !12527
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12525, metadata !DIExpression()) #24, !dbg !12527
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !12529
  br i1 %11, label %12, label %13, !dbg !12532

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !12533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !12533
  unreachable, !dbg !12533

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12535
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12526, metadata !DIExpression()) #24, !dbg !12527
  %15 = icmp eq %struct._dnode* %14, null, !dbg !12537
  br i1 %15, label %26, label %16, !dbg !12535

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12526, metadata !DIExpression()) #24, !dbg !12527
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !12539
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !12526, metadata !DIExpression()) #24, !dbg !12527
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !12540
  %20 = icmp sgt i32 %19, 0, !dbg !12543
  br i1 %20, label %21, label %23, !dbg !12544

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12545
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !12547
  br label %28, !dbg !12548

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !12537
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12526, metadata !DIExpression()) #24, !dbg !12527
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12537
  br i1 %25, label %26, label %16, !dbg !12535, !llvm.loop !12549

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12551
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !12552
  br label %28, !dbg !12553

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12554
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !12555
  %31 = zext i1 %30 to i32, !dbg !12555
  tail call fastcc void @update_cache(i32 noundef %31) #26, !dbg !12556
  ret void, !dbg !12557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12558 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12560, metadata !DIExpression()), !dbg !12561
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #26, !dbg !12562
  ret i1 %2, !dbg !12563
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12564 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12566, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12567, metadata !DIExpression()), !dbg !12568
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !12569
  br i1 %3, label %4, label %5, !dbg !12572

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1139) #25, !dbg !12573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1139) #25, !dbg !12573
  unreachable, !dbg !12573

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12575
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #26, !dbg !12576
  ret void, !dbg !12577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !12578 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12580, metadata !DIExpression()), !dbg !12581
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12582
  ret i1 %2, !dbg !12583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !12584 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12588, metadata !DIExpression()), !dbg !12589
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.291(%struct._dnode* noundef %0) #26, !dbg !12590
  br i1 %2, label %6, label %3, !dbg !12590

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12591
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12591
  br label %6, !dbg !12590

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12590
  ret %struct._dnode* %7, !dbg !12592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !12593 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12597, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12598, metadata !DIExpression()), !dbg !12601
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12602
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12602
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12599, metadata !DIExpression()), !dbg !12601
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12603
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12604
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12605
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12606
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12607
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12608
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12609
  ret void, !dbg !12610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !12611 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12615, metadata !DIExpression()), !dbg !12617
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12616, metadata !DIExpression()), !dbg !12617
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12618
  br i1 %3, label %6, label %4, !dbg !12619

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !12620
  br label %6, !dbg !12619

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12619
  ret %struct._dnode* %7, !dbg !12621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !12622 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12626, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12627, metadata !DIExpression()), !dbg !12629
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12630
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12630
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12628, metadata !DIExpression()), !dbg !12629
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12631
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12632
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12633
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12634
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12635
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12636
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12637
  ret void, !dbg !12638
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12641, metadata !DIExpression()), !dbg !12643
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12644
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12651, metadata !DIExpression()) #24, !dbg !12654
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12655
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12652, metadata !DIExpression()) #24, !dbg !12654
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !12656
  br i1 %4, label %13, label %5, !dbg !12658

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !12659
  br i1 %6, label %10, label %7, !dbg !12660

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #25, !dbg !12661
  %9 = icmp eq i32 %8, 0, !dbg !12661
  br i1 %9, label %10, label %13, !dbg !12662

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #25, !dbg !12663
  br i1 %11, label %12, label %13, !dbg !12666

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12667
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !12654
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12651, metadata !DIExpression()) #24, !dbg !12654
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !12669
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12670
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !12670
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !12642, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !12671, metadata !DIExpression()) #24, !dbg !12677
  call void @llvm.dbg.value(metadata i32 %0, metadata !12676, metadata !DIExpression()) #24, !dbg !12677
  %18 = icmp eq i32 %0, 0, !dbg !12680
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12682
  br i1 %18, label %20, label %33, !dbg !12683

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !12684
  br i1 %21, label %22, label %23, !dbg !12687

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 137) #25, !dbg !12688
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !12688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 137) #25, !dbg !12688
  unreachable, !dbg !12688

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #25, !dbg !12690
  br i1 %24, label %33, label %25, !dbg !12692

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #25, !dbg !12693
  br i1 %26, label %33, label %27, !dbg !12695

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #25, !dbg !12696
  %29 = icmp eq i32 %28, 0, !dbg !12696
  br i1 %29, label %30, label %33, !dbg !12698

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #25, !dbg !12699
  %32 = icmp eq i32 %31, 0, !dbg !12699
  br i1 %32, label %37, label %33, !dbg !12700

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !12701
  br i1 %34, label %36, label %35, !dbg !12704

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !12705
  br label %36, !dbg !12707

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #26, !dbg !12708
  br label %37, !dbg !12709

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !12682
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12682
  ret void, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !12711 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12715, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12716, metadata !DIExpression()), !dbg !12718
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %0) #26, !dbg !12719
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12717, metadata !DIExpression()), !dbg !12718
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12716, metadata !DIExpression()), !dbg !12718
  ret %struct.k_thread* %3, !dbg !12720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12723, metadata !DIExpression()), !dbg !12724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12725
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !12725
  %4 = load i8, i8* %3, align 2, !dbg !12725
  %5 = icmp slt i8 %4, -15, !dbg !12726
  %6 = zext i1 %5 to i32, !dbg !12726
  ret i32 %6, !dbg !12727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12730, metadata !DIExpression()), !dbg !12731
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12732
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12733
  %4 = xor i1 %3, true, !dbg !12734
  ret i1 %4, !dbg !12735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12738, metadata !DIExpression()), !dbg !12739
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12740
  %3 = load i16, i16* %2, align 2, !dbg !12740
  %4 = icmp ult i16 %3, 128, !dbg !12741
  %5 = zext i1 %4 to i32, !dbg !12741
  ret i32 %5, !dbg !12742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !12743 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12745, metadata !DIExpression()), !dbg !12746
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #26, !dbg !12747
  %3 = icmp eq i32 %2, 0, !dbg !12747
  br i1 %3, label %11, label %4, !dbg !12749

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12750
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #26, !dbg !12751
  %7 = icmp eq i32 %6, 0, !dbg !12751
  br i1 %7, label %8, label %15, !dbg !12752

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #26, !dbg !12753
  %10 = icmp eq i32 %9, 0, !dbg !12753
  br i1 %10, label %13, label %15, !dbg !12754

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !12755
  br i1 %12, label %15, label %13, !dbg !12757

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12758
  br label %15, !dbg !12759

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !12759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12760 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12766, metadata !DIExpression()), !dbg !12767
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12768
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !12769
  %4 = xor i1 %3, true, !dbg !12770
  ret i1 %4, !dbg !12771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12772 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12778, metadata !DIExpression()), !dbg !12779
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12780
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12780
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12781
  ret i1 %4, !dbg !12782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !12783 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12785, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12786, metadata !DIExpression()), !dbg !12787
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12788
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12788
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12789
  br i1 %5, label %9, label %6, !dbg !12790

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12791
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12791
  br label %9, !dbg !12790

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12790
  ret %struct._dnode* %10, !dbg !12792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.291(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !12793 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12797, metadata !DIExpression()), !dbg !12798
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12799
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12799
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12800
  ret i1 %4, !dbg !12801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !12802 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12806, metadata !DIExpression()), !dbg !12809
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12810
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12810
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12807, metadata !DIExpression()), !dbg !12809
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12811
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12811
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12808, metadata !DIExpression()), !dbg !12809
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12812
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12813
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12814
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12815
  tail call fastcc void @sys_dnode_init.292(%struct._dnode* noundef %0) #26, !dbg !12816
  ret void, !dbg !12817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.292(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !12818 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12820, metadata !DIExpression()), !dbg !12821
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12822
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12823
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12824
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12825
  ret void, !dbg !12826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !12827 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12831, metadata !DIExpression()), !dbg !12833
  call void @llvm.dbg.value(metadata i32 %1, metadata !12832, metadata !DIExpression()), !dbg !12833
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12834
  %4 = load i8, i8* %3, align 1, !dbg !12834
  %5 = zext i8 %4 to i32, !dbg !12835
  %6 = and i32 %5, %1, !dbg !12836
  %7 = icmp ne i32 %6, 0, !dbg !12837
  ret i1 %7, !dbg !12838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !12839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12843, metadata !DIExpression()), !dbg !12845
  call void @llvm.dbg.value(metadata i32 %1, metadata !12844, metadata !DIExpression()), !dbg !12845
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !12846
  ret i1 %3, !dbg !12847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !12848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12850, metadata !DIExpression()), !dbg !12852
  call void @llvm.dbg.value(metadata i32 %1, metadata !12851, metadata !DIExpression()), !dbg !12852
  %3 = icmp slt i32 %0, %1, !dbg !12853
  ret i1 %3, !dbg !12854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12855 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12857, metadata !DIExpression()), !dbg !12861
  call void @llvm.dbg.value(metadata i32 0, metadata !12858, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !12863
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12865, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12863
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12868
  br i1 %3, label %5, label %4, !dbg !12869

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12870
  unreachable, !dbg !12870

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12863
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12871
  call void @llvm.dbg.value(metadata i32 undef, metadata !12860, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12858, metadata !DIExpression()), !dbg !12862
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !12872
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !12877
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12879
  br i1 %6, label %8, label %7, !dbg !12880

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12881
  unreachable, !dbg !12881

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %9, metadata !12308, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 %9, metadata !12302, metadata !DIExpression()) #24, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %9, metadata !12860, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12877
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !12882
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !12884, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !12858, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata i32 undef, metadata !12858, metadata !DIExpression()), !dbg !12862
  ret void, !dbg !12885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !12890
  br i1 %2, label %27, label %3, !dbg !12892

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !12893
  br i1 %4, label %5, label %27, !dbg !12894

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12505, metadata !DIExpression()) #24, !dbg !12895
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12898
  %7 = load i8, i8* %6, align 1, !dbg !12899
  %8 = or i8 %7, -128, !dbg !12899
  store i8 %8, i8* %6, align 1, !dbg !12899
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12512, metadata !DIExpression()) #24, !dbg !12900
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12519, metadata !DIExpression()) #24, !dbg !12902
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12525, metadata !DIExpression()) #24, !dbg !12902
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !12904
  br i1 %9, label %10, label %11, !dbg !12905

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !12906
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !12906
  unreachable, !dbg !12906

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12907
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12526, metadata !DIExpression()) #24, !dbg !12902
  %13 = icmp eq %struct._dnode* %12, null, !dbg !12908
  br i1 %13, label %24, label %14, !dbg !12907

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12526, metadata !DIExpression()) #24, !dbg !12902
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !12909
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !12526, metadata !DIExpression()) #24, !dbg !12902
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !12910
  %18 = icmp sgt i32 %17, 0, !dbg !12911
  br i1 %18, label %19, label %21, !dbg !12912

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12913
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !12914
  br label %26, !dbg !12915

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !12908
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !12526, metadata !DIExpression()) #24, !dbg !12902
  %23 = icmp eq %struct._dnode* %22, null, !dbg !12908
  br i1 %23, label %24, label %14, !dbg !12907, !llvm.loop !12916

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12918
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !12919
  br label %26, !dbg !12920

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !12921
  br label %27, !dbg !12922

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !12923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12926, metadata !DIExpression()), !dbg !12927
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !12928
  br i1 %2, label %6, label %3, !dbg !12929

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !12930
  %5 = xor i1 %4, true, !dbg !12929
  br label %6, !dbg !12929

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12934, metadata !DIExpression()), !dbg !12938
  call void @llvm.dbg.value(metadata i32 0, metadata !12935, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !12940
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12942, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12940
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12945
  br i1 %3, label %5, label %4, !dbg !12946

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12947
  unreachable, !dbg !12947

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12940
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12948
  call void @llvm.dbg.value(metadata i32 undef, metadata !12937, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata i32 undef, metadata !12935, metadata !DIExpression()), !dbg !12939
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !12949
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !12952
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12954
  br i1 %6, label %8, label %7, !dbg !12955

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12956
  unreachable, !dbg !12956

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12942
  call void @llvm.dbg.value(metadata i32 %9, metadata !12308, metadata !DIExpression()) #24, !dbg !12944
  call void @llvm.dbg.value(metadata i32 %9, metadata !12302, metadata !DIExpression()) #24, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %9, metadata !12937, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12952
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !12957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !12959, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !12935, metadata !DIExpression()), !dbg !12939
  call void @llvm.dbg.value(metadata i32 undef, metadata !12935, metadata !DIExpression()), !dbg !12939
  ret void, !dbg !12960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12963, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !12966
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12968, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !12970
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !12970
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !12966
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12971
  br i1 %3, label %5, label %4, !dbg !12972

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12973
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12973
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !12973
  unreachable, !dbg !12973

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12968
  call void @llvm.dbg.value(metadata i32 %6, metadata !12308, metadata !DIExpression()) #24, !dbg !12970
  call void @llvm.dbg.value(metadata i32 %6, metadata !12302, metadata !DIExpression()) #24, !dbg !12966
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12974
  call void @llvm.dbg.value(metadata i32 %6, metadata !12964, metadata !DIExpression()), !dbg !12965
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !12975
  br i1 %7, label %8, label %12, !dbg !12977

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !12978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !12978
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12981
  br i1 %9, label %11, label %10, !dbg !12982

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12983
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !12983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !12983
  unreachable, !dbg !12983

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()) #24, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %6, metadata !12344, metadata !DIExpression()) #24, !dbg !12984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !12986, !srcloc !12350
  br label %14, !dbg !12987

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.297(%struct.k_thread* noundef %0) #26, !dbg !12988
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !12989
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12990
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !12990
  br label %14, !dbg !12991

14:                                               ; preds = %12, %11
  ret void, !dbg !12991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !12992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12994, metadata !DIExpression()), !dbg !12995
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12996
  %3 = load i8, i8* %2, align 1, !dbg !12996
  %4 = and i8 %3, 4, !dbg !12997
  %5 = icmp eq i8 %4, 0, !dbg !12998
  ret i1 %5, !dbg !12999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.297(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !13000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13002, metadata !DIExpression()), !dbg !13003
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13004
  %3 = load i8, i8* %2, align 1, !dbg !13005
  %4 = and i8 %3, -5, !dbg !13005
  store i8 %4, i8* %2, align 1, !dbg !13005
  ret void, !dbg !13006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13007 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13010, metadata !DIExpression()), !dbg !13011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13009, metadata !DIExpression()), !dbg !13011
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !13012
  br i1 %4, label %5, label %12, !dbg !13014

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !13015
  br i1 %6, label %7, label %12, !dbg !13016

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !13023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13022, metadata !DIExpression()) #24, !dbg !13023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13026, metadata !DIExpression()) #24, !dbg !13031
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !13033
  br i1 %8, label %10, label %9, !dbg !13036

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !13037
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !13037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !13037
  unreachable, !dbg !13037

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !13017, metadata !DIExpression()) #24, !dbg !13023
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !13039
  br label %16, !dbg !13040

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12335, metadata !DIExpression()) #24, !dbg !13041
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !13044
  br i1 %13, label %15, label %14, !dbg !13045

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !13046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13046
  unreachable, !dbg !13046

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !12330, metadata !DIExpression()) #24, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %3, metadata !12344, metadata !DIExpression()) #24, !dbg !13047
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13049, !srcloc !12350
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13055, metadata !DIExpression()), !dbg !13056
  call void @llvm.dbg.value(metadata i32 %0, metadata !13057, metadata !DIExpression()), !dbg !13062
  %2 = icmp eq i32 %0, 0, !dbg !13064
  br i1 %2, label %3, label %6, !dbg !13065

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13066, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %4, metadata !13069, metadata !DIExpression()) #24, !dbg !13074
  %5 = icmp eq i32 %4, 0, !dbg !13075
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13056
  ret i1 %7, !dbg !13076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !13077 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13080
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13079, metadata !DIExpression()), !dbg !13081
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13082
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13083
  ret i1 %3, !dbg !13084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13087, metadata !DIExpression()), !dbg !13089
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !13090
  call void @llvm.dbg.value(metadata i32 %2, metadata !13088, metadata !DIExpression()), !dbg !13089
  ret i32 %2, !dbg !13091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13094, metadata !DIExpression()), !dbg !13098
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13099
  call void @llvm.dbg.value(metadata i32 0, metadata !13095, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13101
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13103, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13105
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13101
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13106
  br i1 %4, label %6, label %5, !dbg !13107

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13108
  unreachable, !dbg !13108

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !13103
  call void @llvm.dbg.value(metadata i32 %7, metadata !12308, metadata !DIExpression()) #24, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %7, metadata !12302, metadata !DIExpression()) #24, !dbg !13101
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %7, metadata !13097, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.value(metadata i32 undef, metadata !13095, metadata !DIExpression()), !dbg !13100
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13110
  br i1 %8, label %9, label %13, !dbg !13114

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()) #24, !dbg !13115
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13118
  %11 = load i8, i8* %10, align 1, !dbg !13119
  %12 = and i8 %11, 127, !dbg !13119
  store i8 %12, i8* %10, align 1, !dbg !13119
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12496, metadata !DIExpression()) #24, !dbg !13120
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13122
  br label %13, !dbg !13123

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !13124
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13125
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13126
  %16 = zext i1 %15 to i32, !dbg !13126
  tail call fastcc void @update_cache(i32 noundef %16) #26, !dbg !13127
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13128
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13128
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13130
  br i1 %17, label %19, label %18, !dbg !13131

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13132
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13132
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13132
  unreachable, !dbg !13132

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !12330, metadata !DIExpression()) #24, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %7, metadata !12344, metadata !DIExpression()) #24, !dbg !13133
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #24, !dbg !13135, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13095, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.value(metadata i32 undef, metadata !13095, metadata !DIExpression()), !dbg !13100
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13136
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !13138
  br i1 %21, label %22, label %23, !dbg !13139

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13140
  br label %23, !dbg !13142

23:                                               ; preds = %22, %19
  ret void, !dbg !13143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13144 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13146, metadata !DIExpression()), !dbg !13147
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13148
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13149
  ret i32 %3, !dbg !13150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !13151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13153, metadata !DIExpression()), !dbg !13154
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13155
  %3 = load i8, i8* %2, align 1, !dbg !13156
  %4 = or i8 %3, 16, !dbg !13156
  store i8 %4, i8* %2, align 1, !dbg !13156
  ret void, !dbg !13157
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13158 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13159, !srcloc !12311
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13159
  call void @llvm.dbg.value(metadata i32 %2, metadata !12308, metadata !DIExpression()) #24, !dbg !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13161
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !13162
  ret void, !dbg !13163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13166, metadata !DIExpression()), !dbg !13167
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !13168
  br i1 %2, label %3, label %5, !dbg !13170

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13171
  br label %6, !dbg !13173

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12344, metadata !DIExpression()) #24, !dbg !13174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !13177, !srcloc !12350
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13181, metadata !DIExpression()), !dbg !13183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13184
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13186, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13184
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13189
  br i1 %3, label %5, label %4, !dbg !13190

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13191
  unreachable, !dbg !13191

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13186
  call void @llvm.dbg.value(metadata i32 %6, metadata !12308, metadata !DIExpression()) #24, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %6, metadata !12302, metadata !DIExpression()) #24, !dbg !13184
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13192
  call void @llvm.dbg.value(metadata i32 %6, metadata !13182, metadata !DIExpression()), !dbg !13183
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !13193
  br i1 %7, label %12, label %8, !dbg !13195

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13196
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13199
  br i1 %9, label %11, label %10, !dbg !13200

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13201
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13201
  unreachable, !dbg !13201

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()) #24, !dbg !13196
  call void @llvm.dbg.value(metadata i32 %6, metadata !12344, metadata !DIExpression()) #24, !dbg !13202
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !13204, !srcloc !12350
  br label %14, !dbg !13205

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !13206
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !13207
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13208
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !13208
  br label %14, !dbg !13209

14:                                               ; preds = %12, %11
  ret void, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !13210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13212, metadata !DIExpression()), !dbg !13213
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13214
  %3 = load i8, i8* %2, align 1, !dbg !13214
  %4 = and i8 %3, 16, !dbg !13215
  %5 = icmp ne i8 %4, 0, !dbg !13216
  ret i1 %5, !dbg !13217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !13218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13220, metadata !DIExpression()), !dbg !13221
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13222
  %3 = load i8, i8* %2, align 1, !dbg !13223
  %4 = and i8 %3, -17, !dbg !13223
  store i8 %4, i8* %2, align 1, !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13225 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13235, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13233, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13234, metadata !DIExpression()), !dbg !13239
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13240
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !13240
  br i1 %5, label %9, label %6, !dbg !13240

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #26, !dbg !13240
  br i1 %7, label %9, label %8, !dbg !13243

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 773) #25, !dbg !13244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 773) #25, !dbg !13244
  unreachable, !dbg !13244

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !13236, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13247
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13249, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13247
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13252
  br i1 %11, label %13, label %12, !dbg !13253

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13254
  unreachable, !dbg !13254

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13251
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13247
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13255
  call void @llvm.dbg.value(metadata i32 undef, metadata !13238, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata i32 undef, metadata !13236, metadata !DIExpression()), !dbg !13246
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13256
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13259
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13261
  br i1 %14, label %16, label %15, !dbg !13262

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13263
  unreachable, !dbg !13263

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !13249
  call void @llvm.dbg.value(metadata i32 %17, metadata !12308, metadata !DIExpression()) #24, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %17, metadata !12302, metadata !DIExpression()) #24, !dbg !13247
  call void @llvm.dbg.value(metadata i32 %17, metadata !13238, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13259
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13264
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #24, !dbg !13266, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13236, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.value(metadata i32 undef, metadata !13236, metadata !DIExpression()), !dbg !13246
  ret void, !dbg !13267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !13268 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13270, metadata !DIExpression()), !dbg !13271
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13272
  %3 = load i8, i8* %2, align 1, !dbg !13272
  %4 = and i8 %3, 1, !dbg !13273
  %5 = icmp ne i8 %4, 0, !dbg !13274
  ret i1 %5, !dbg !13275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13276 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13280, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13278, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13279, metadata !DIExpression()), !dbg !13281
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !13282
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !13283
  ret void, !dbg !13284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13289, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13290, metadata !DIExpression()), !dbg !13291
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !13292
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !13293
  %3 = icmp eq %union.anon* %1, null, !dbg !13294
  br i1 %3, label %24, label %4, !dbg !13296

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13297
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13299
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13300
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12519, metadata !DIExpression()) #24, !dbg !13301
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12525, metadata !DIExpression()) #24, !dbg !13301
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !13303
  br i1 %7, label %8, label %9, !dbg !13304

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !13305
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !13305
  unreachable, !dbg !13305

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef nonnull %6) #25, !dbg !13306
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12526, metadata !DIExpression()) #24, !dbg !13301
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13307
  br i1 %11, label %22, label %12, !dbg !13306

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12526, metadata !DIExpression()) #24, !dbg !13301
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13308
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12526, metadata !DIExpression()) #24, !dbg !13301
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !13309
  %16 = icmp sgt i32 %15, 0, !dbg !13310
  br i1 %16, label %17, label %19, !dbg !13311

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13312
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !13313
  br label %24, !dbg !13314

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !13307
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12526, metadata !DIExpression()) #24, !dbg !13301
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13307
  br i1 %21, label %22, label %12, !dbg !13306, !llvm.loop !13315

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13317
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !13318
  br label %24, !dbg !13319

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !13320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13321 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13326, metadata !DIExpression()), !dbg !13327
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13325, metadata !DIExpression()), !dbg !13327
  %4 = icmp eq i64 %3, -1, !dbg !13328
  br i1 %4, label %6, label %5, !dbg !13330

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13331
  br label %6, !dbg !13333

6:                                                ; preds = %5, %2
  ret void, !dbg !13334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13335 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13338, metadata !DIExpression()), !dbg !13339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13337, metadata !DIExpression()), !dbg !13339
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13340
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13341
  ret void, !dbg !13342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13343 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13345, metadata !DIExpression()), !dbg !13353
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13354
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13354
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13346, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.value(metadata i32 0, metadata !13347, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13356
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13358, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13360
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13360
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13356
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13361
  br i1 %5, label %7, label %6, !dbg !13362

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13363
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13363
  unreachable, !dbg !13363

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13360
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13356
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13364
  call void @llvm.dbg.value(metadata i32 undef, metadata !13349, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()), !dbg !13355
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13365
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !13366
  %10 = load i8, i8* %9, align 1, !dbg !13366
  %11 = and i8 %10, 40, !dbg !13367
  %12 = icmp eq i8 %11, 0, !dbg !13367
  call void @llvm.dbg.value(metadata i1 %12, metadata !13350, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13368
  br i1 %12, label %13, label %20, !dbg !13369

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13370
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !13370
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !13370
  %17 = icmp eq %union.anon* %16, null, !dbg !13374
  br i1 %17, label %19, label %18, !dbg !13375

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !13376
  br label %19, !dbg !13378

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.297(%struct.k_thread* noundef nonnull %3) #26, !dbg !13379
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !13380
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !13381
  br label %20, !dbg !13382

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13383
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13385
  br i1 %21, label %23, label %22, !dbg !13386

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13387
  unreachable, !dbg !13387

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !13358
  call void @llvm.dbg.value(metadata i32 %24, metadata !12308, metadata !DIExpression()) #24, !dbg !13360
  call void @llvm.dbg.value(metadata i32 %24, metadata !12302, metadata !DIExpression()) #24, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %24, metadata !13349, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13383
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13388
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #24, !dbg !13390, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13347, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.value(metadata i32 undef, metadata !13347, metadata !DIExpression()), !dbg !13355
  ret void, !dbg !13391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13394, metadata !DIExpression()), !dbg !13395
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #26, !dbg !13396
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !13397
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !13398
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13399
  store %union.anon* null, %union.anon** %3, align 8, !dbg !13400
  ret void, !dbg !13401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13406, metadata !DIExpression()), !dbg !13407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13408
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !13408
  %4 = icmp eq %union.anon* %3, null, !dbg !13408
  br i1 %4, label %5, label %6, !dbg !13411

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 726) #25, !dbg !13412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 726) #25, !dbg !13412
  unreachable, !dbg !13412

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !13414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !13415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13417, metadata !DIExpression()), !dbg !13418
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13419
  %3 = load i8, i8* %2, align 1, !dbg !13420
  %4 = and i8 %3, -3, !dbg !13420
  store i8 %4, i8* %2, align 1, !dbg !13420
  ret void, !dbg !13421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13422 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13424, metadata !DIExpression()), !dbg !13425
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13426
  br i1 %2, label %3, label %7, !dbg !13428

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()) #24, !dbg !13429
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13432
  %5 = load i8, i8* %4, align 1, !dbg !13433
  %6 = and i8 %5, 127, !dbg !13433
  store i8 %6, i8* %4, align 1, !dbg !13433
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12496, metadata !DIExpression()) #24, !dbg !13434
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13436
  br label %7, !dbg !13437

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13438
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13439
  %10 = zext i1 %9 to i32, !dbg !13439
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !13440
  ret void, !dbg !13441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !13442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13444, metadata !DIExpression()), !dbg !13445
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13446
  %3 = load i8, i8* %2, align 1, !dbg !13447
  %4 = or i8 %3, 2, !dbg !13447
  store i8 %4, i8* %2, align 1, !dbg !13447
  ret void, !dbg !13448
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #23 !dbg !13449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13451, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata i32 0, metadata !13452, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13457
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13459, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13457
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13462
  br i1 %3, label %5, label %4, !dbg !13463

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13464
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13464
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13464
  unreachable, !dbg !13464

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13461
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13457
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13465
  call void @llvm.dbg.value(metadata i32 undef, metadata !13454, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i32 undef, metadata !13452, metadata !DIExpression()), !dbg !13456
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !13466
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13469
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13471
  br i1 %6, label %8, label %7, !dbg !13472

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13473
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13473
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13473
  unreachable, !dbg !13473

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13459
  call void @llvm.dbg.value(metadata i32 %9, metadata !12308, metadata !DIExpression()) #24, !dbg !13461
  call void @llvm.dbg.value(metadata i32 %9, metadata !12302, metadata !DIExpression()) #24, !dbg !13457
  call void @llvm.dbg.value(metadata i32 %9, metadata !13454, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13469
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !13476, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13452, metadata !DIExpression()), !dbg !13456
  call void @llvm.dbg.value(metadata i32 undef, metadata !13452, metadata !DIExpression()), !dbg !13456
  ret void, !dbg !13477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13478 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13484, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 %0, metadata !13482, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13483, metadata !DIExpression()), !dbg !13489
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13490
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !13491
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13492
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13493
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %6, metadata !13485, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.value(metadata i32 0, metadata !13486, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13496
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13498, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13500
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13500
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13496
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13501
  br i1 %8, label %10, label %9, !dbg !13502

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13503
  unreachable, !dbg !13503

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13500
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13496
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13504
  call void @llvm.dbg.value(metadata i32 undef, metadata !13488, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i32 undef, metadata !13486, metadata !DIExpression()), !dbg !13495
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13505
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13509
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13510
  br i1 %13, label %14, label %15, !dbg !13511

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13512
  br label %15, !dbg !13514

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13515
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13515
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13517
  br i1 %16, label %18, label %17, !dbg !13518

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13519
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13519
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13519
  unreachable, !dbg !13519

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !13498
  call void @llvm.dbg.value(metadata i32 %19, metadata !12308, metadata !DIExpression()) #24, !dbg !13500
  call void @llvm.dbg.value(metadata i32 %19, metadata !12302, metadata !DIExpression()) #24, !dbg !13496
  call void @llvm.dbg.value(metadata i32 %19, metadata !13488, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13515
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #24, !dbg !13522, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13486, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i32 undef, metadata !13486, metadata !DIExpression()), !dbg !13495
  ret i32 %6, !dbg !13523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13524 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13529, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata i64 undef, metadata !13531, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13528, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13530, metadata !DIExpression()), !dbg !13532
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13533
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13534
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !13535
  br i1 %6, label %7, label %8, !dbg !13538

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 846) #25, !dbg !13539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 846) #25, !dbg !13539
  unreachable, !dbg !13539

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13541
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13543, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13545
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13545
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13541
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13546
  br i1 %10, label %12, label %11, !dbg !13547

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13548
  unreachable, !dbg !13548

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13545
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13541
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13549
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13550
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !13551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13026, metadata !DIExpression()) #24, !dbg !13552
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !13554
  br i1 %14, label %16, label %15, !dbg !13555

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !13556
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !13556
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !13556
  unreachable, !dbg !13556

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !13557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13022, metadata !DIExpression()) #24, !dbg !13557
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13026, metadata !DIExpression()) #24, !dbg !13559
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13561
  br i1 %17, label %19, label %18, !dbg !13562

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !13563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !13563
  unreachable, !dbg !13563

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !13017, metadata !DIExpression()) #24, !dbg !13557
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !13564
  ret i32 %21, !dbg !13565
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13566 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13570, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13571, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.value(metadata i32 0, metadata !13572, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13577
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13579, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13581
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13581
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13577
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13582
  br i1 %3, label %5, label %4, !dbg !13583

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13584
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13584
  unreachable, !dbg !13584

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13581
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13577
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13585
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13571, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()), !dbg !13576
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !13586
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13571, metadata !DIExpression()), !dbg !13575
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13589
  br i1 %8, label %10, label %9, !dbg !13591

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !13592
  br label %10, !dbg !13594

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13595
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13597
  br i1 %11, label %13, label %12, !dbg !13598

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13599
  unreachable, !dbg !13599

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !13579
  call void @llvm.dbg.value(metadata i32 %14, metadata !12308, metadata !DIExpression()) #24, !dbg !13581
  call void @llvm.dbg.value(metadata i32 %14, metadata !12302, metadata !DIExpression()) #24, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %14, metadata !13574, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13595
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !13602, !srcloc !12350
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13571, metadata !DIExpression()), !dbg !13575
  call void @llvm.dbg.value(metadata i32 undef, metadata !13572, metadata !DIExpression()), !dbg !13576
  ret %struct.k_thread* %7, !dbg !13603
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13604 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13606, metadata !DIExpression()), !dbg !13611
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13607, metadata !DIExpression()), !dbg !13611
  call void @llvm.dbg.value(metadata i32 0, metadata !13608, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13613
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13615, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13613
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13618
  br i1 %3, label %5, label %4, !dbg !13619

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13620
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13620
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13620
  unreachable, !dbg !13620

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13613
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13621
  call void @llvm.dbg.value(metadata i32 undef, metadata !13610, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13607, metadata !DIExpression()), !dbg !13611
  call void @llvm.dbg.value(metadata i32 undef, metadata !13608, metadata !DIExpression()), !dbg !13612
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !13622
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13607, metadata !DIExpression()), !dbg !13611
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13625
  br i1 %8, label %11, label %9, !dbg !13627

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !13628
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !13630
  br label %11, !dbg !13631

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13632
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13634
  br i1 %12, label %14, label %13, !dbg !13635

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13636
  unreachable, !dbg !13636

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !13615
  call void @llvm.dbg.value(metadata i32 %15, metadata !12308, metadata !DIExpression()) #24, !dbg !13617
  call void @llvm.dbg.value(metadata i32 %15, metadata !12302, metadata !DIExpression()) #24, !dbg !13613
  call void @llvm.dbg.value(metadata i32 %15, metadata !13610, metadata !DIExpression()), !dbg !13612
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13632
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #24, !dbg !13639, !srcloc !12350
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13607, metadata !DIExpression()), !dbg !13611
  call void @llvm.dbg.value(metadata i32 undef, metadata !13608, metadata !DIExpression()), !dbg !13612
  ret %struct.k_thread* %7, !dbg !13640
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13643, metadata !DIExpression()), !dbg !13644
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13451, metadata !DIExpression()) #24, !dbg !13645
  call void @llvm.dbg.value(metadata i32 0, metadata !13452, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13648
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13650, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13648
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13653
  br i1 %3, label %5, label %4, !dbg !13654

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13655
  unreachable, !dbg !13655

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13648
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13656
  call void @llvm.dbg.value(metadata i32 undef, metadata !13454, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13452, metadata !DIExpression()) #24, !dbg !13647
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !13657
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13658
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13660
  br i1 %6, label %8, label %7, !dbg !13661

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13662
  unreachable, !dbg !13662

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13650
  call void @llvm.dbg.value(metadata i32 %9, metadata !12308, metadata !DIExpression()) #24, !dbg !13652
  call void @llvm.dbg.value(metadata i32 %9, metadata !12302, metadata !DIExpression()) #24, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %9, metadata !13454, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13658
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !13665, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13452, metadata !DIExpression()) #24, !dbg !13647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13452, metadata !DIExpression()) #24, !dbg !13647
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !13666
  ret void, !dbg !13667
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13670, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i32 %1, metadata !13671, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i8 0, metadata !13672, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i32 0, metadata !13673, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13678
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13680, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13678
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13683
  br i1 %4, label %6, label %5, !dbg !13684

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13685
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13685
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13685
  unreachable, !dbg !13685

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13678
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13686
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i8 poison, metadata !13672, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13677
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !13687
  call void @llvm.dbg.value(metadata i1 %9, metadata !13672, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13676
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !13690

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()) #24, !dbg !13691
  %14 = load i8, i8* %7, align 1, !dbg !13697
  %15 = and i8 %14, 127, !dbg !13697
  store i8 %15, i8* %7, align 1, !dbg !13697
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12496, metadata !DIExpression()) #24, !dbg !13698
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !13700
  store i8 %12, i8* %11, align 2, !dbg !13701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12505, metadata !DIExpression()) #24, !dbg !13702
  %16 = load i8, i8* %7, align 1, !dbg !13704
  %17 = or i8 %16, -128, !dbg !13704
  store i8 %17, i8* %7, align 1, !dbg !13704
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12512, metadata !DIExpression()) #24, !dbg !13705
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12519, metadata !DIExpression()) #24, !dbg !13707
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12525, metadata !DIExpression()) #24, !dbg !13707
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !13709
  br i1 %18, label %19, label %20, !dbg !13710

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !13711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !13711
  unreachable, !dbg !13711

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !13712
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12526, metadata !DIExpression()) #24, !dbg !13707
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13713
  br i1 %22, label %32, label %23, !dbg !13712

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12526, metadata !DIExpression()) #24, !dbg !13707
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !12526, metadata !DIExpression()) #24, !dbg !13707
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !13715
  %27 = icmp sgt i32 %26, 0, !dbg !13716
  br i1 %27, label %28, label %29, !dbg !13717

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !13718
  br label %33, !dbg !13719

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !13713
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12526, metadata !DIExpression()) #24, !dbg !13707
  %31 = icmp eq %struct._dnode* %30, null, !dbg !13713
  br i1 %31, label %32, label %23, !dbg !13712, !llvm.loop !13720

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !13722
  br label %33, !dbg !13723

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !13724
  br label %35, !dbg !13725

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !13726
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13728
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13730
  br i1 %36, label %38, label %37, !dbg !13731

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13732
  unreachable, !dbg !13732

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !13680
  call void @llvm.dbg.value(metadata i32 %39, metadata !12308, metadata !DIExpression()) #24, !dbg !13682
  call void @llvm.dbg.value(metadata i32 %39, metadata !12302, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %39, metadata !13675, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13728
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13733
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #24, !dbg !13735, !srcloc !12350
  call void @llvm.dbg.value(metadata i8 poison, metadata !13672, metadata !DIExpression()), !dbg !13676
  call void @llvm.dbg.value(metadata i32 undef, metadata !13673, metadata !DIExpression()), !dbg !13677
  ret i1 %9, !dbg !13736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13737 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13741, metadata !DIExpression()), !dbg !13744
  call void @llvm.dbg.value(metadata i32 %1, metadata !13742, metadata !DIExpression()), !dbg !13744
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !13745
  call void @llvm.dbg.value(metadata i1 %3, metadata !13743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13744
  br i1 %3, label %4, label %12, !dbg !13746

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13748
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13749
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13749
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13749
  %9 = load i8, i8* %8, align 1, !dbg !13749
  %10 = icmp eq i8 %9, 0, !dbg !13750
  br i1 %10, label %11, label %12, !dbg !13751

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13752
  br label %12, !dbg !13754

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13756 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13758, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13762
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13764, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13762
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13767
  br i1 %2, label %4, label %3, !dbg !13768

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13769
  unreachable, !dbg !13769

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13762
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13770
  call void @llvm.dbg.value(metadata i32 undef, metadata !13760, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 undef, metadata !13758, metadata !DIExpression()), !dbg !13761
  tail call fastcc void @z_sched_lock() #26, !dbg !13771
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13774
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13776
  br i1 %5, label %7, label %6, !dbg !13777

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13778
  unreachable, !dbg !13778

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %8, metadata !12308, metadata !DIExpression()) #24, !dbg !13766
  call void @llvm.dbg.value(metadata i32 %8, metadata !12302, metadata !DIExpression()) #24, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %8, metadata !13760, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13774
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13779
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13781, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13758, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.value(metadata i32 undef, metadata !13758, metadata !DIExpression()), !dbg !13761
  ret void, !dbg !13782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13783 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13784, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %1, metadata !13069, metadata !DIExpression()) #24, !dbg !13789
  %2 = icmp eq i32 %1, 0, !dbg !13790
  br i1 %2, label %4, label %3, !dbg !13791

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 253) #25, !dbg !13792
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !13792
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 253) #25, !dbg !13792
  unreachable, !dbg !13792

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13794
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13794
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13794
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13794
  %9 = load i8, i8* %8, align 1, !dbg !13794
  %10 = icmp eq i8 %9, 1, !dbg !13794
  br i1 %10, label %11, label %12, !dbg !13797

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 254) #25, !dbg !13798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !13798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 254) #25, !dbg !13798
  unreachable, !dbg !13798

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !13800
  store i8 %13, i8* %8, align 1, !dbg !13800
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13801, !srcloc !13803
  ret void, !dbg !13804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13805 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13807, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !13811
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13813, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13811
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13816
  br i1 %2, label %4, label %3, !dbg !13817

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13818
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13818
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13818
  unreachable, !dbg !13818

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !13811
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13819
  call void @llvm.dbg.value(metadata i32 undef, metadata !13809, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !13807, metadata !DIExpression()), !dbg !13810
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13820
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13820
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13820
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13820
  %9 = load i8, i8* %8, align 1, !dbg !13820
  %10 = icmp eq i8 %9, 0, !dbg !13820
  br i1 %10, label %11, label %12, !dbg !13825

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 999) #25, !dbg !13826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !13826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 999) #25, !dbg !13826
  unreachable, !dbg !13826

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13828, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %13, metadata !13069, metadata !DIExpression()) #24, !dbg !13833
  %14 = icmp eq i32 %13, 0, !dbg !13834
  br i1 %14, label %16, label %15, !dbg !13835

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1000) #25, !dbg !13836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !13836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1000) #25, !dbg !13836
  unreachable, !dbg !13836

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13838
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !13839
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !13839
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !13839
  %21 = load i8, i8* %20, align 1, !dbg !13840
  %22 = add i8 %21, 1, !dbg !13840
  store i8 %22, i8* %20, align 1, !dbg !13840
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !13841
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !13842
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13844
  br i1 %23, label %25, label %24, !dbg !13845

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13846
  unreachable, !dbg !13846

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %26, metadata !12308, metadata !DIExpression()) #24, !dbg !13815
  call void @llvm.dbg.value(metadata i32 %26, metadata !12302, metadata !DIExpression()) #24, !dbg !13811
  call void @llvm.dbg.value(metadata i32 %26, metadata !13809, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !13842
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !13847
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #24, !dbg !13849, !srcloc !12350
  call void @llvm.dbg.value(metadata i32 1, metadata !13807, metadata !DIExpression()), !dbg !13810
  call void @llvm.dbg.value(metadata i32 undef, metadata !13807, metadata !DIExpression()), !dbg !13810
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !13850
  ret void, !dbg !13851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !13852 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13853
  ret %struct.k_thread* %1, !dbg !13854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !13855 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13859, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13860, metadata !DIExpression()), !dbg !13864
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13865
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13861, metadata !DIExpression()), !dbg !13864
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13866
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13862, metadata !DIExpression()), !dbg !13864
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !13867
  call void @llvm.dbg.value(metadata i32 %5, metadata !13863, metadata !DIExpression()), !dbg !13864
  %6 = icmp sgt i32 %5, 0, !dbg !13868
  br i1 %6, label %17, label %7, !dbg !13870

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !13871
  br i1 %8, label %17, label %9, !dbg !13873

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !13874
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !13874
  %12 = load i32, i32* %11, align 8, !dbg !13874
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !13876
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !13876
  %15 = load i32, i32* %14, align 8, !dbg !13876
  %16 = icmp ult i32 %12, %15, !dbg !13877
  br label %17, !dbg !13878

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !13879
  ret i1 %18, !dbg !13880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13881 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13898, metadata !DIExpression()), !dbg !13913
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13899, metadata !DIExpression()), !dbg !13913
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !13914
  br i1 %4, label %5, label %6, !dbg !13917

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1179) #25, !dbg !13918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1179) #25, !dbg !13918
  unreachable, !dbg !13918

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13920
  %8 = load i32, i32* %7, align 4, !dbg !13921
  %9 = add nsw i32 %8, 1, !dbg !13921
  store i32 %9, i32* %7, align 4, !dbg !13921
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !13922
  store i32 %8, i32* %10, align 8, !dbg !13923
  %11 = load i32, i32* %7, align 4, !dbg !13924
  %12 = icmp eq i32 %11, 0, !dbg !13925
  br i1 %12, label %13, label %35, !dbg !13926

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !13927
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #24, !dbg !13927
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !13901, metadata !DIExpression()), !dbg !13927
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13927
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !13927
  %17 = load i32, i32* %16, align 4, !dbg !13927
  %18 = shl i32 %17, 2, !dbg !13927
  %19 = alloca i8, i32 %18, align 8, !dbg !13927
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !13927
  store i8* %19, i8** %20, align 4, !dbg !13927
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !13927
  %22 = alloca i8, i32 %17, align 8, !dbg !13927
  store i8* %22, i8** %21, align 4, !dbg !13927
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !13927
  store i32 -1, i32* %23, align 4, !dbg !13927
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13928
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13910, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !13900, metadata !DIExpression()), !dbg !13913
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !13930
  br i1 %25, label %26, label %27, !dbg !13927

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #24, !dbg !13930
  br label %35, !dbg !13931

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !13900, metadata !DIExpression()), !dbg !13913
  %29 = load i32, i32* %7, align 4, !dbg !13932
  %30 = add nsw i32 %29, 1, !dbg !13932
  store i32 %30, i32* %7, align 4, !dbg !13932
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !13934
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !13934
  store i32 %29, i32* %32, align 8, !dbg !13935
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !13928
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13910, metadata !DIExpression()), !dbg !13929
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !13900, metadata !DIExpression()), !dbg !13913
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !13930
  br i1 %34, label %26, label %27, !dbg !13927, !llvm.loop !13936

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13938
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13939
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !13940
  ret void, !dbg !13941
}

; Function Attrs: optsize
declare !dbg !13942 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13947 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !13950 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13952, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13953, metadata !DIExpression()), !dbg !13954
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !13955
  br i1 %3, label %4, label %5, !dbg !13958

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1200) #25, !dbg !13959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1200) #25, !dbg !13959
  unreachable, !dbg !13959

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13961
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !13962
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !13963
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !13964
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !13964
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !13966
  br i1 %10, label %11, label %13, !dbg !13967

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !13968
  store i32 0, i32* %12, align 4, !dbg !13970
  br label %13, !dbg !13971

13:                                               ; preds = %11, %5
  ret void, !dbg !13972
}

; Function Attrs: optsize
declare !dbg !13973 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !13974 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !13978, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13979, metadata !DIExpression()), !dbg !13981
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !13982
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !13983
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !13980, metadata !DIExpression()), !dbg !13981
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13979, metadata !DIExpression()), !dbg !13981
  ret %struct.k_thread* %4, !dbg !13984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !13985 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !13989, metadata !DIExpression()), !dbg !13990
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !13991
  ret %struct.rbnode* %2, !dbg !13992
}

; Function Attrs: optsize
declare !dbg !13993 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !13996 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14008, metadata !DIExpression()), !dbg !14012
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14013
  %3 = load i32, i32* %2, align 4, !dbg !14013
  %4 = icmp eq i32 %3, 0, !dbg !14015
  br i1 %4, label %10, label %5, !dbg !14016

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14009, metadata !DIExpression()), !dbg !14012
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14017, !range !4666
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14018
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14010, metadata !DIExpression()), !dbg !14012
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %7) #26, !dbg !14019
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14011, metadata !DIExpression()), !dbg !14012
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14009, metadata !DIExpression()), !dbg !14012
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14012
  ret %struct.k_thread* %11, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14021 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14025, metadata !DIExpression()), !dbg !14028
  call void @llvm.dbg.value(metadata i32 0, metadata !14026, metadata !DIExpression()), !dbg !14028
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14027, metadata !DIExpression()), !dbg !14028
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14030
  br i1 %3, label %8, label %4, !dbg !14031

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14032
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14034
  call void @llvm.dbg.value(metadata i32 1, metadata !14026, metadata !DIExpression()), !dbg !14028
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !14029
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14027, metadata !DIExpression()), !dbg !14028
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14030
  br i1 %7, label %8, label %4, !dbg !14031, !llvm.loop !14035

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14028
  ret i32 %9, !dbg !14037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !14038 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14040, metadata !DIExpression()), !dbg !14041
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14042
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %2) #26, !dbg !14043
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14044
  ret %struct.k_thread* %4, !dbg !14045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !14046 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14055, metadata !DIExpression()), !dbg !14056
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14057
  tail call fastcc void @sys_dlist_init.319(%struct._dnode* noundef nonnull %2) #26, !dbg !14058
  ret void, !dbg !14059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.319(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14060 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14064, metadata !DIExpression()), !dbg !14065
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14066
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14067
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14068
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14069
  ret void, !dbg !14070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14071 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !14072
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !14073
  ret void, !dbg !14074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !14075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14080, metadata !DIExpression()), !dbg !14081
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14082
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14082
  %4 = load i8, i8* %3, align 2, !dbg !14082
  %5 = sext i8 %4 to i32, !dbg !14083
  ret i32 %5, !dbg !14084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14085 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14089, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i32 %1, metadata !14090, metadata !DIExpression()), !dbg !14092
  %3 = add i32 %1, 16, !dbg !14093
  %4 = icmp ult i32 %3, 31, !dbg !14093
  br i1 %4, label %6, label %5, !dbg !14093

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1331) #25, !dbg !14097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.325, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !14097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1331) #25, !dbg !14097
  unreachable, !dbg !14097

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14099, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %7, metadata !13069, metadata !DIExpression()) #24, !dbg !14104
  %8 = icmp eq i32 %7, 0, !dbg !14105
  br i1 %8, label %10, label %9, !dbg !14106

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1332) #25, !dbg !14107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1332) #25, !dbg !14107
  unreachable, !dbg !14107

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14091, metadata !DIExpression()), !dbg !14092
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14109
  ret void, !dbg !14110
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14111 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !14112
  br i1 %1, label %8, label %2, !dbg !14113

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !14114
  br i1 %3, label %8, label %4, !dbg !14115

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14116
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !14117
  %7 = xor i1 %6, true, !dbg !14115
  br label %8, !dbg !14115

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !14119 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14120, !range !7623
  %2 = icmp eq i8 %1, 0, !dbg !14120
  ret i1 %2, !dbg !14121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14122 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14125, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %1, metadata !13069, metadata !DIExpression()) #24, !dbg !14130
  %2 = icmp eq i32 %1, 0, !dbg !14131
  br i1 %2, label %4, label %3, !dbg !14132

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1392) #25, !dbg !14133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1392) #25, !dbg !14133
  unreachable, !dbg !14133

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !14135
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14137, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14135
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14140
  br i1 %6, label %8, label %7, !dbg !14141

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14142
  unreachable, !dbg !14142

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14135
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14143
  call void @llvm.dbg.value(metadata i32 undef, metadata !14124, metadata !DIExpression()), !dbg !14144
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14145
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12488, metadata !DIExpression()) #24, !dbg !14148
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !14150
  %11 = load i8, i8* %10, align 1, !dbg !14151
  %12 = and i8 %11, 127, !dbg !14151
  store i8 %12, i8* %10, align 1, !dbg !14151
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12496, metadata !DIExpression()) #24, !dbg !14152
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !14154
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14155
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12505, metadata !DIExpression()) #24, !dbg !14156
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !14158
  %15 = load i8, i8* %14, align 1, !dbg !14159
  %16 = or i8 %15, -128, !dbg !14159
  store i8 %16, i8* %14, align 1, !dbg !14159
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12512, metadata !DIExpression()) #24, !dbg !14160
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12519, metadata !DIExpression()) #24, !dbg !14162
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12525, metadata !DIExpression()) #24, !dbg !14162
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !14164
  br i1 %17, label %18, label %19, !dbg !14165

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14166
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14166
  unreachable, !dbg !14166

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14167
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12526, metadata !DIExpression()) #24, !dbg !14162
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14168
  br i1 %21, label %32, label %22, !dbg !14167

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !12526, metadata !DIExpression()) #24, !dbg !14162
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !14169
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12526, metadata !DIExpression()) #24, !dbg !14162
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !14170
  %26 = icmp sgt i32 %25, 0, !dbg !14171
  br i1 %26, label %27, label %29, !dbg !14172

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !14173
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !14174
  br label %34, !dbg !14175

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !14168
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12526, metadata !DIExpression()) #24, !dbg !14162
  %31 = icmp eq %struct._dnode* %30, null, !dbg !14168
  br i1 %31, label %32, label %22, !dbg !14167, !llvm.loop !14176

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !14178
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !14179
  br label %34, !dbg !14180

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14181
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13022, metadata !DIExpression()) #24, !dbg !14182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13026, metadata !DIExpression()) #24, !dbg !14184
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14186
  br i1 %35, label %37, label %36, !dbg !14187

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14188
  unreachable, !dbg !14188

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !14137
  call void @llvm.dbg.value(metadata i32 %38, metadata !12308, metadata !DIExpression()) #24, !dbg !14139
  call void @llvm.dbg.value(metadata i32 %38, metadata !12302, metadata !DIExpression()) #24, !dbg !14135
  call void @llvm.dbg.value(metadata i32 %38, metadata !14124, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !14182
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !14189
  ret void, !dbg !14190
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14191 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14195, metadata !DIExpression()), !dbg !14198
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14199, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %3, metadata !13069, metadata !DIExpression()) #24, !dbg !14204
  %4 = icmp eq i32 %3, 0, !dbg !14205
  br i1 %4, label %6, label %5, !dbg !14206

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1463) #25, !dbg !14207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1463) #25, !dbg !14207
  unreachable, !dbg !14207

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !14209
  br i1 %7, label %8, label %10, !dbg !14211

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14212
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #26, !dbg !14214
  br label %15, !dbg !14215

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !14196, metadata !DIExpression()), !dbg !14198
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !14216
  %12 = sext i32 %11 to i64, !dbg !14216
  call void @llvm.dbg.value(metadata i64 %12, metadata !14196, metadata !DIExpression()), !dbg !14198
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #26, !dbg !14217
  %14 = trunc i64 %13 to i32, !dbg !14217
  call void @llvm.dbg.value(metadata i32 %14, metadata !14197, metadata !DIExpression()), !dbg !14198
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !14198
  ret i32 %16, !dbg !14218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14223, metadata !DIExpression()), !dbg !14224
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14225, !srcloc !14227
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !14228
  ret void, !dbg !14229
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14230 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14234, metadata !DIExpression()), !dbg !14238
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14239, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %2, metadata !13069, metadata !DIExpression()) #24, !dbg !14244
  %3 = icmp eq i32 %2, 0, !dbg !14245
  br i1 %3, label %5, label %4, !dbg !14246

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1420) #25, !dbg !14247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1420) #25, !dbg !14247
  unreachable, !dbg !14247

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !14249
  br i1 %6, label %7, label %8, !dbg !14251

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #26, !dbg !14252
  br label %43, !dbg !14254

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !14236, metadata !DIExpression()), !dbg !14238
  %9 = icmp sgt i64 %0, -3, !dbg !14255
  br i1 %9, label %10, label %14, !dbg !14257

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14258
  %12 = trunc i64 %0 to i32, !dbg !14260
  %13 = add i32 %11, %12, !dbg !14260
  call void @llvm.dbg.value(metadata i32 %13, metadata !14235, metadata !DIExpression()), !dbg !14238
  br label %17, !dbg !14261

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !14262
  %16 = sub i32 -2, %15, !dbg !14262
  call void @llvm.dbg.value(metadata i32 %16, metadata !14235, metadata !DIExpression()), !dbg !14238
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !14264
  call void @llvm.dbg.value(metadata i32 %18, metadata !14235, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !14265
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14267, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14265
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14270
  br i1 %20, label %22, label %21, !dbg !14271

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14272
  unreachable, !dbg !14272

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14265
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14237, metadata !DIExpression()), !dbg !14238
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14274
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !14275
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #26, !dbg !14276
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14277
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14278
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %24, [1 x i64] %25) #26, !dbg !14278
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14279
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #26, !dbg !14280
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13022, metadata !DIExpression()) #24, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13026, metadata !DIExpression()) #24, !dbg !14283
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14285
  br i1 %27, label %29, label %28, !dbg !14286

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14287
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14287
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14287
  unreachable, !dbg !14287

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %30, metadata !12308, metadata !DIExpression()) #24, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %30, metadata !12302, metadata !DIExpression()) #24, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %30, metadata !14237, metadata !DIExpression()), !dbg !14238
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !14281
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !14288
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14289
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #26, !dbg !14289
  br i1 %33, label %34, label %35, !dbg !14292

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1448) #25, !dbg !14293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1448) #25, !dbg !14293
  unreachable, !dbg !14293

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !14295
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !14296
  %38 = zext i32 %37 to i64, !dbg !14296
  %39 = sub nsw i64 %36, %38, !dbg !14297
  call void @llvm.dbg.value(metadata i64 %39, metadata !14234, metadata !DIExpression()), !dbg !14238
  %40 = icmp sgt i64 %39, 0, !dbg !14298
  %41 = select i1 %40, i64 %39, i64 0, !dbg !14298
  %42 = trunc i64 %41 to i32, !dbg !14298
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !14238
  ret i32 %44, !dbg !14299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !14300 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14302, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.value(metadata i64 %0, metadata !12356, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i32 10000, metadata !12359, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i32 1000, metadata !12360, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i8 1, metadata !12361, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i1 false, metadata !12362, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14304
  call void @llvm.dbg.value(metadata i1 false, metadata !12363, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14304
  call void @llvm.dbg.value(metadata i8 0, metadata !12364, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i1 false, metadata !12365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14304
  call void @llvm.dbg.value(metadata i1 true, metadata !12366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14304
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !14304
  call void @llvm.dbg.value(metadata i64 %0, metadata !12356, metadata !DIExpression()), !dbg !14304
  %2 = udiv i64 %0, 10, !dbg !14306
  ret i64 %2, !dbg !14310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14311 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14312, !srcloc !14314
  tail call void @z_impl_k_yield() #26, !dbg !14315
  ret void, !dbg !14316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14321, metadata !DIExpression()), !dbg !14323
  %2 = sext i32 %0 to i64, !dbg !14324
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !14325
  call void @llvm.dbg.value(metadata i64 %3, metadata !14322, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14323
  %4 = shl i64 %3, 32, !dbg !14326
  %5 = ashr exact i64 %4, 32, !dbg !14326
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !14327
  call void @llvm.dbg.value(metadata i32 %6, metadata !14322, metadata !DIExpression()), !dbg !14323
  %7 = sext i32 %6 to i64, !dbg !14328
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !14329
  %9 = trunc i64 %8 to i32, !dbg !14329
  ret i32 %9, !dbg !14330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !14331 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14333, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.value(metadata i64 %0, metadata !12356, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12359, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i32 10000, metadata !12360, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i8 1, metadata !12361, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i1 false, metadata !12362, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14335
  call void @llvm.dbg.value(metadata i1 true, metadata !12363, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14335
  call void @llvm.dbg.value(metadata i8 0, metadata !12364, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i1 false, metadata !12365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14335
  call void @llvm.dbg.value(metadata i1 true, metadata !12366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14335
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !14335
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !14335
  %2 = add i64 %0, 99, !dbg !14337
  call void @llvm.dbg.value(metadata i64 %2, metadata !12356, metadata !DIExpression()), !dbg !14335
  %3 = udiv i64 %2, 100, !dbg !14338
  ret i64 %3, !dbg !14339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !14340 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14342, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i64 %0, metadata !12356, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 10000, metadata !12359, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12360, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i8 1, metadata !12361, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i1 false, metadata !12362, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14344
  call void @llvm.dbg.value(metadata i1 false, metadata !12363, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14344
  call void @llvm.dbg.value(metadata i8 0, metadata !12364, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i1 true, metadata !12365, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14344
  call void @llvm.dbg.value(metadata i1 false, metadata !12366, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14344
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.value(metadata i64 0, metadata !12367, metadata !DIExpression()), !dbg !14344
  %2 = mul i64 %0, 100, !dbg !14346
  ret i64 %2, !dbg !14348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14351, metadata !DIExpression()), !dbg !14352
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !14353
  br i1 %2, label %14, label %3, !dbg !14355

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14356
  %5 = icmp slt i32 %4, 0, !dbg !14358
  br i1 %5, label %6, label %10, !dbg !14359

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14360
  %8 = load i8, i8* %7, align 1, !dbg !14360
  %9 = icmp eq i8 %8, 16, !dbg !14363
  br i1 %9, label %10, label %14, !dbg !14364

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14365
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14366
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14367, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %11, metadata !13069, metadata !DIExpression()) #24, !dbg !14371
  %12 = icmp eq i32 %11, 0, !dbg !14372
  br i1 %12, label %13, label %14, !dbg !14373

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14374
  br label %14, !dbg !14376

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14378 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14380, metadata !DIExpression()), !dbg !14381
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14382
  %3 = load i8, i8* %2, align 1, !dbg !14382
  %4 = and i8 %3, 2, !dbg !14383
  %5 = icmp ne i8 %4, 0, !dbg !14384
  ret i1 %5, !dbg !14385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !14386 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14391
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14390, metadata !DIExpression()), !dbg !14392
  ret %struct.k_thread* %1, !dbg !14393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14394 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14395, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %1, metadata !13069, metadata !DIExpression()) #24, !dbg !14398
  %2 = icmp eq i32 %1, 0, !dbg !14399
  br i1 %2, label %3, label %8, !dbg !14400

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14401
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !14402
  %6 = icmp ne i32 %5, 0, !dbg !14400
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14404 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()), !dbg !14408
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !14409
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14411, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14413
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !14413
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14409
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14414
  br i1 %3, label %5, label %4, !dbg !14415

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14416
  unreachable, !dbg !14416

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14411
  call void @llvm.dbg.value(metadata i32 %6, metadata !12308, metadata !DIExpression()) #24, !dbg !14413
  call void @llvm.dbg.value(metadata i32 %6, metadata !12302, metadata !DIExpression()) #24, !dbg !14409
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14417
  call void @llvm.dbg.value(metadata i32 %6, metadata !14407, metadata !DIExpression()), !dbg !14408
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14418
  %8 = load i8, i8* %7, align 4, !dbg !14418
  %9 = and i8 %8, 1, !dbg !14420
  %10 = icmp eq i8 %9, 0, !dbg !14421
  br i1 %10, label %15, label %11, !dbg !14422

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !14423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !14423
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14426
  br i1 %12, label %14, label %13, !dbg !14427

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14428
  unreachable, !dbg !14428

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()) #24, !dbg !14423
  call void @llvm.dbg.value(metadata i32 %6, metadata !12344, metadata !DIExpression()) #24, !dbg !14429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !14431, !srcloc !12350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1731) #25, !dbg !14432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.334, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !14432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1731) #25, !dbg !14432
  unreachable, !dbg !14432

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14436
  %17 = load i8, i8* %16, align 1, !dbg !14436
  %18 = and i8 %17, 8, !dbg !14438
  %19 = icmp eq i8 %18, 0, !dbg !14439
  br i1 %19, label %24, label %20, !dbg !14440

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !14441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !14441
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14444
  br i1 %21, label %23, label %22, !dbg !14445

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14446
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14446
  unreachable, !dbg !14446

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()) #24, !dbg !14441
  call void @llvm.dbg.value(metadata i32 %6, metadata !12344, metadata !DIExpression()) #24, !dbg !14447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !14449, !srcloc !12350
  br label %39, !dbg !14450

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !14451
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14452
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !14454
  br i1 %26, label %27, label %35, !dbg !14455

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14456, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %28, metadata !13069, metadata !DIExpression()) #24, !dbg !14459
  %29 = icmp eq i32 %28, 0, !dbg !14460
  br i1 %29, label %30, label %35, !dbg !14461

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !14462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13022, metadata !DIExpression()) #24, !dbg !14462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13026, metadata !DIExpression()) #24, !dbg !14465
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14467
  br i1 %31, label %33, label %32, !dbg !14468

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14469
  unreachable, !dbg !14469

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !13017, metadata !DIExpression()) #24, !dbg !14462
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !14470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1778) #25, !dbg !14471
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.335, i32 0, i32 0)) #25, !dbg !14471
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1778) #25, !dbg !14471
  unreachable, !dbg !14471

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !14475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !14475
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14477
  br i1 %36, label %38, label %37, !dbg !14478

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14479
  unreachable, !dbg !14479

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !12330, metadata !DIExpression()) #24, !dbg !14475
  call void @llvm.dbg.value(metadata i32 %6, metadata !12344, metadata !DIExpression()) #24, !dbg !14480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !14482, !srcloc !12350
  br label %39, !dbg !14483

39:                                               ; preds = %38, %23
  ret void, !dbg !14483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14484 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14486, metadata !DIExpression()), !dbg !14487
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14488
  %3 = load i8, i8* %2, align 1, !dbg !14488
  %4 = and i8 %3, 8, !dbg !14490
  %5 = icmp eq i8 %4, 0, !dbg !14491
  br i1 %5, label %6, label %20, !dbg !14492

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14493
  %8 = or i8 %7, 8, !dbg !14493
  store i8 %8, i8* %2, align 1, !dbg !14493
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !14495
  br i1 %9, label %10, label %12, !dbg !14497

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()) #24, !dbg !14498
  %11 = and i8 %8, 95, !dbg !14501
  store i8 %11, i8* %2, align 1, !dbg !14501
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12496, metadata !DIExpression()) #24, !dbg !14502
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !14504
  br label %12, !dbg !14505

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14506
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14506
  %15 = icmp eq %union.anon* %14, null, !dbg !14508
  br i1 %15, label %17, label %16, !dbg !14509

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14510
  br label %17, !dbg !14512

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !14513
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14514
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !14515
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14516
  br label %20, !dbg !14517

20:                                               ; preds = %17, %1
  ret void, !dbg !14518
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14519 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14523, metadata !DIExpression()), !dbg !14525
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !14526
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14524, metadata !DIExpression()), !dbg !14525
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14527
  br i1 %3, label %10, label %4, !dbg !14528

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14529
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !14531
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14532, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.value(metadata i32 0, metadata !14537, metadata !DIExpression()), !dbg !14538
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14540
  store i32 0, i32* %7, align 4, !dbg !14541
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14542
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !14526
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14524, metadata !DIExpression()), !dbg !14525
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14527
  br i1 %9, label %10, label %4, !dbg !14528, !llvm.loop !14543

10:                                               ; preds = %4, %1
  ret void, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14546 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14551, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14550, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !14555
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14557, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14555
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14560
  br i1 %4, label %6, label %5, !dbg !14561

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14562
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14562
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14562
  unreachable, !dbg !14562

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14557
  call void @llvm.dbg.value(metadata i32 %7, metadata !12308, metadata !DIExpression()) #24, !dbg !14559
  call void @llvm.dbg.value(metadata i32 %7, metadata !12302, metadata !DIExpression()) #24, !dbg !14555
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14563
  call void @llvm.dbg.value(metadata i32 %7, metadata !14552, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.value(metadata i32 0, metadata !14553, metadata !DIExpression()), !dbg !14554
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14564
  %9 = load i8, i8* %8, align 1, !dbg !14564
  %10 = and i8 %9, 8, !dbg !14566
  %11 = icmp eq i8 %10, 0, !dbg !14567
  br i1 %11, label %12, label %35, !dbg !14568

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !14551, metadata !DIExpression()), !dbg !14554
  %14 = icmp eq i64 %13, 0, !dbg !14569
  br i1 %14, label %35, label %15, !dbg !14571

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14572
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14574
  br i1 %17, label %35, label %18, !dbg !14575

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14576
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !14576
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !14577
  %22 = icmp eq %union.anon* %20, %21, !dbg !14578
  br i1 %22, label %35, label %23, !dbg !14579

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14580, !srcloc !13073
  call void @llvm.dbg.value(metadata i32 %24, metadata !13069, metadata !DIExpression()) #24, !dbg !14586
  %25 = icmp eq i32 %24, 0, !dbg !14587
  br i1 %25, label %27, label %26, !dbg !14588

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1809) #25, !dbg !14589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.336, i32 0, i32 0)) #25, !dbg !14589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1809) #25, !dbg !14589
  unreachable, !dbg !14589

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14591
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14592
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #26, !dbg !14593
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14594
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #26, !dbg !14595
  call void @llvm.dbg.value(metadata i32 undef, metadata !13017, metadata !DIExpression()) #24, !dbg !14596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13022, metadata !DIExpression()) #24, !dbg !14596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13026, metadata !DIExpression()) #24, !dbg !14598
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14600
  br i1 %31, label %33, label %32, !dbg !14601

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14602
  unreachable, !dbg !14602

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !13017, metadata !DIExpression()) #24, !dbg !14596
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !14603
  call void @llvm.dbg.value(metadata i32 %34, metadata !14553, metadata !DIExpression()), !dbg !14554
  br label %40, !dbg !14604

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !14605
  call void @llvm.dbg.value(metadata i32 %36, metadata !14553, metadata !DIExpression()), !dbg !14554
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !14606
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14608
  br i1 %37, label %39, label %38, !dbg !14609

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14610
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14610
  unreachable, !dbg !14610

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !12330, metadata !DIExpression()) #24, !dbg !14606
  call void @llvm.dbg.value(metadata i32 %7, metadata !12344, metadata !DIExpression()) #24, !dbg !14611
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #24, !dbg !14613, !srcloc !12350
  br label %40, !dbg !14614

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !14554
  ret i32 %41, !dbg !14615
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14616 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14620, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 %1, metadata !14621, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i8* %2, metadata !14622, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i8 0, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 0, metadata !14625, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12296, metadata !DIExpression()) #24, !dbg !14630
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14632, !srcloc !12311
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()) #24, !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14630
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14635
  br i1 %5, label %7, label %6, !dbg !14636

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14637
  unreachable, !dbg !14637

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12308, metadata !DIExpression()) #24, !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !12302, metadata !DIExpression()) #24, !dbg !14630
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata i8 poison, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !14625, metadata !DIExpression()), !dbg !14629
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #26, !dbg !14639
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14623, metadata !DIExpression()), !dbg !14628
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14642
  br i1 %10, label %15, label %11, !dbg !14644

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14645, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.value(metadata i32 %1, metadata !14650, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.value(metadata i8* %2, metadata !14651, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14532, metadata !DIExpression()), !dbg !14655
  call void @llvm.dbg.value(metadata i32 %1, metadata !14537, metadata !DIExpression()), !dbg !14655
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !14657
  store i32 %1, i32* %12, align 4, !dbg !14658
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14659
  store i8* %2, i8** %13, align 4, !dbg !14660
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !14661
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !14662
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #26, !dbg !14663
  call void @llvm.dbg.value(metadata i8 1, metadata !14624, metadata !DIExpression()), !dbg !14628
  br label %15, !dbg !14664

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !14665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12335, metadata !DIExpression()) #24, !dbg !14665
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14667
  br i1 %16, label %18, label %17, !dbg !14668

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14669
  unreachable, !dbg !14669

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !14628
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %20, metadata !12308, metadata !DIExpression()) #24, !dbg !14634
  call void @llvm.dbg.value(metadata i32 %20, metadata !12302, metadata !DIExpression()) #24, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %20, metadata !14627, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !12330, metadata !DIExpression()) #24, !dbg !14665
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #24, !dbg !14670
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !14672, !srcloc !12350
  call void @llvm.dbg.value(metadata i8 poison, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !14625, metadata !DIExpression()), !dbg !14629
  ret i1 %19, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14674 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14680, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i64 undef, metadata !14682, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14679, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14681, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i8** %4, metadata !14683, metadata !DIExpression()), !dbg !14685
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !14686
  call void @llvm.dbg.value(metadata i32 %6, metadata !14684, metadata !DIExpression()), !dbg !14685
  %7 = icmp eq i8** %4, null, !dbg !14687
  br i1 %7, label %12, label %8, !dbg !14689

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14690
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14692
  %11 = load i8*, i8** %10, align 4, !dbg !14692
  store i8* %11, i8** %4, align 4, !dbg !14693
  br label %12, !dbg !14694

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14696 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !14698
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14701 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14711, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14709, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14710, metadata !DIExpression()), !dbg !14728
  %5 = icmp eq i64 %4, -1, !dbg !14729
  br i1 %5, label %63, label %6, !dbg !14731

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14732
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %7) #26, !dbg !14732
  br i1 %8, label %9, label %10, !dbg !14735

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.343, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !14736
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.345, i32 0, i32 0)) #25, !dbg !14736
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !14736
  unreachable, !dbg !14736

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14738
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !14739
  call void @llvm.dbg.value(metadata i32 0, metadata !14712, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !14748
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14750, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !14748
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14758
  br i1 %13, label %15, label %14, !dbg !14761

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !14762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !14762
  unreachable, !dbg !14762

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14750
  call void @llvm.dbg.value(metadata i32 %16, metadata !14753, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %16, metadata !14747, metadata !DIExpression()) #24, !dbg !14748
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14764
  call void @llvm.dbg.value(metadata i32 %16, metadata !14718, metadata !DIExpression()), !dbg !14740
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()), !dbg !14740
  %17 = icmp slt i64 %4, -1, !dbg !14765
  br i1 %17, label %18, label %24, !dbg !14766

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !14767
  %20 = add i64 %4, %19, !dbg !14768
  %21 = sub i64 -2, %20, !dbg !14768
  call void @llvm.dbg.value(metadata i64 %21, metadata !14722, metadata !DIExpression()), !dbg !14769
  %22 = icmp sgt i64 %21, 1, !dbg !14770
  %23 = select i1 %22, i64 %21, i64 1, !dbg !14770
  br label %29, !dbg !14771

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !14772
  %26 = tail call fastcc i32 @elapsed.349() #26, !dbg !14774
  %27 = sext i32 %26 to i64, !dbg !14774
  %28 = add nsw i64 %25, %27, !dbg !14775
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !14776
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14777
  store i64 %30, i64* %31, align 8, !dbg !14778
  %32 = tail call fastcc %struct._timeout* @first() #26, !dbg !14779
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !14719, metadata !DIExpression()), !dbg !14781
  %33 = icmp eq %struct._timeout* %32, null, !dbg !14782
  br i1 %33, label %48, label %34, !dbg !14782

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !14783
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !14719, metadata !DIExpression()), !dbg !14781
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14787
  %38 = load i64, i64* %37, align 8, !dbg !14787
  %39 = icmp slt i64 %35, %38, !dbg !14788
  br i1 %39, label %40, label %44, !dbg !14789

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14787
  %42 = sub nsw i64 %38, %35, !dbg !14790
  store i64 %42, i64* %41, align 8, !dbg !14790
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !14792
  tail call fastcc void @sys_dlist_insert.350(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #26, !dbg !14793
  br label %49, !dbg !14794

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !14795
  store i64 %45, i64* %31, align 8, !dbg !14795
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #26, !dbg !14796
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !14719, metadata !DIExpression()), !dbg !14781
  %47 = icmp eq %struct._timeout* %46, null, !dbg !14782
  br i1 %47, label %48, label %34, !dbg !14782, !llvm.loop !14797

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.351(%struct._dnode* noundef nonnull %7) #26, !dbg !14799
  br label %49, !dbg !14802

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #26, !dbg !14803
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !14804
  br i1 %51, label %52, label %59, !dbg !14805

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #26, !dbg !14806
  call void @llvm.dbg.value(metadata i32 %53, metadata !14725, metadata !DIExpression()), !dbg !14807
  %54 = icmp ne i32 %53, 0, !dbg !14808
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !14810
  br i1 %57, label %59, label %58, !dbg !14810

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !14811
  br label %59, !dbg !14813

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !14820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !14820
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14822
  br i1 %60, label %62, label %61, !dbg !14825

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !14826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !14826
  unreachable, !dbg !14826

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !14814, metadata !DIExpression()) #24, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %16, metadata !14828, metadata !DIExpression()) #24, !dbg !14831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !14833, !srcloc !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !14712, metadata !DIExpression()), !dbg !14740
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !14835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14836 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14842, metadata !DIExpression()), !dbg !14843
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14844
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14844
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14845
  ret i1 %4, !dbg !14846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.349() unnamed_addr #1 !dbg !14847 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14850
  %2 = icmp eq i32 %1, 0, !dbg !14851
  br i1 %2, label %3, label %5, !dbg !14850

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !14852
  br label %5, !dbg !14850

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14850
  ret i32 %6, !dbg !14853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !14854 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356() #26, !dbg !14860
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14858, metadata !DIExpression()), !dbg !14861
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14862
  ret %struct._timeout* %2, !dbg !14863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.350(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !14864 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14868, metadata !DIExpression()), !dbg !14872
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14869, metadata !DIExpression()), !dbg !14872
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14873
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14873
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14870, metadata !DIExpression()), !dbg !14872
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14874
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14875
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14876
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14877
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14878
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14879
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14880
  ret void, !dbg !14881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !14882 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14886, metadata !DIExpression()), !dbg !14888
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14889
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef %2) #26, !dbg !14890
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14887, metadata !DIExpression()), !dbg !14888
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !14891
  ret %struct._timeout* %4, !dbg !14892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.351(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !14893 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14898, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14899, metadata !DIExpression()), !dbg !14901
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14902
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14900, metadata !DIExpression()), !dbg !14901
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14903
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !14904
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14905
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !14906
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !14907
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14908
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14909
  ret void, !dbg !14910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !14911 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !14916
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !14913, metadata !DIExpression()), !dbg !14917
  %2 = tail call fastcc i32 @elapsed.349() #26, !dbg !14918
  call void @llvm.dbg.value(metadata i32 %2, metadata !14914, metadata !DIExpression()), !dbg !14917
  %3 = icmp eq %struct._timeout* %1, null, !dbg !14919
  br i1 %3, label %14, label %4, !dbg !14921

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !14922
  %6 = load i64, i64* %5, align 8, !dbg !14922
  %7 = sext i32 %2 to i64, !dbg !14923
  %8 = sub nsw i64 %6, %7, !dbg !14924
  %9 = icmp sgt i64 %8, 2147483647, !dbg !14925
  br i1 %9, label %14, label %10, !dbg !14926

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !14927
  %12 = select i1 %11, i64 %8, i64 0, !dbg !14927
  %13 = trunc i64 %12 to i32, !dbg !14927
  call void @llvm.dbg.value(metadata i32 %13, metadata !14915, metadata !DIExpression()), !dbg !14917
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !14929
  call void @llvm.dbg.value(metadata i32 %15, metadata !14915, metadata !DIExpression()), !dbg !14917
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14930
  %17 = icmp ne i32 %16, 0, !dbg !14932
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !14933
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !14933
  call void @llvm.dbg.value(metadata i32 %20, metadata !14915, metadata !DIExpression()), !dbg !14917
  ret i32 %20, !dbg !14934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !14935 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14939, metadata !DIExpression()), !dbg !14941
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14940, metadata !DIExpression()), !dbg !14941
  %2 = icmp eq %struct._dnode* %0, null, !dbg !14942
  br i1 %2, label %5, label %3, !dbg !14943

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef nonnull %0) #26, !dbg !14944
  br label %5, !dbg !14943

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !14943
  ret %struct._dnode* %6, !dbg !14945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !14946 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14948, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14949, metadata !DIExpression()), !dbg !14950
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !14951
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !14952
  br i1 %3, label %7, label %4, !dbg !14953

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14954
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !14954
  br label %7, !dbg !14953

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !14953
  ret %struct._dnode* %8, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.356() unnamed_addr #13 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14960, metadata !DIExpression()), !dbg !14961
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.357() #26, !dbg !14962
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !14962
  ret %struct._dnode* %3, !dbg !14963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.357() unnamed_addr #13 !dbg !14964 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !14968, metadata !DIExpression()), !dbg !14969
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !14970
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !14971
  ret i1 %2, !dbg !14972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !14973 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14977, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 -22, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 0, metadata !14979, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !14984
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14986, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !14984
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14989
  br i1 %3, label %5, label %4, !dbg !14990

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !14991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !14991
  unreachable, !dbg !14991

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !14988
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !14984
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !14992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14981, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 -22, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14979, metadata !DIExpression()), !dbg !14983
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !14978, metadata !DIExpression()), !dbg !14982
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %6) #26, !dbg !14993
  br i1 %7, label %8, label %9, !dbg !14997

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !14998
  call void @llvm.dbg.value(metadata i32 0, metadata !14978, metadata !DIExpression()), !dbg !14982
  br label %9, !dbg !15000

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !14982
  call void @llvm.dbg.value(metadata i32 %10, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15001
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15003
  br i1 %11, label %13, label %12, !dbg !15004

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15005
  unreachable, !dbg !15005

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !14986
  call void @llvm.dbg.value(metadata i32 %14, metadata !14753, metadata !DIExpression()) #24, !dbg !14988
  call void @llvm.dbg.value(metadata i32 %14, metadata !14747, metadata !DIExpression()) #24, !dbg !14984
  call void @llvm.dbg.value(metadata i32 %14, metadata !14981, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15001
  call void @llvm.dbg.value(metadata i32 undef, metadata !14828, metadata !DIExpression()) #24, !dbg !15006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15008, !srcloc !14834
  call void @llvm.dbg.value(metadata i32 %10, metadata !14978, metadata !DIExpression()), !dbg !14982
  call void @llvm.dbg.value(metadata i32 undef, metadata !14979, metadata !DIExpression()), !dbg !14983
  ret i32 %10, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15012, metadata !DIExpression()), !dbg !15013
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15014
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15016
  br i1 %3, label %10, label %4, !dbg !15017

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15018
  %6 = load i64, i64* %5, align 8, !dbg !15018
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15020
  %8 = load i64, i64* %7, align 8, !dbg !15021
  %9 = add nsw i64 %8, %6, !dbg !15021
  store i64 %9, i64* %7, align 8, !dbg !15021
  br label %10, !dbg !15022

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15023
  tail call fastcc void @sys_dlist_remove.360(%struct._dnode* noundef %11) #26, !dbg !15024
  ret void, !dbg !15025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.360(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !15026 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15030, metadata !DIExpression()), !dbg !15033
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15034
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15034
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15031, metadata !DIExpression()), !dbg !15033
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15035
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15035
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15032, metadata !DIExpression()), !dbg !15033
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15036
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15037
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15038
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15039
  tail call fastcc void @sys_dnode_init.361(%struct._dnode* noundef %0) #26, !dbg !15040
  ret void, !dbg !15041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.361(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !15042 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15046
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15047
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15048
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15049
  ret void, !dbg !15050
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15051 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15057, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i64 0, metadata !15058, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i32 0, metadata !15059, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15064
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15066, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15068
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15068
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15064
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15069
  br i1 %3, label %5, label %4, !dbg !15070

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15071
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15071
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15071
  unreachable, !dbg !15071

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15068
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15064
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15072
  call void @llvm.dbg.value(metadata i32 undef, metadata !15061, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata i64 0, metadata !15058, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i32 undef, metadata !15059, metadata !DIExpression()), !dbg !15063
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15073
  call void @llvm.dbg.value(metadata i64 %6, metadata !15058, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15076
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15078
  br i1 %7, label %9, label %8, !dbg !15079

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15080
  unreachable, !dbg !15080

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !15066
  call void @llvm.dbg.value(metadata i32 %10, metadata !14753, metadata !DIExpression()) #24, !dbg !15068
  call void @llvm.dbg.value(metadata i32 %10, metadata !14747, metadata !DIExpression()) #24, !dbg !15064
  call void @llvm.dbg.value(metadata i32 %10, metadata !15061, metadata !DIExpression()), !dbg !15063
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15076
  call void @llvm.dbg.value(metadata i32 undef, metadata !14828, metadata !DIExpression()) #24, !dbg !15081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #24, !dbg !15083, !srcloc !14834
  call void @llvm.dbg.value(metadata i64 %6, metadata !15058, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata i32 undef, metadata !15059, metadata !DIExpression()), !dbg !15063
  ret i64 %6, !dbg !15084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15085 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15087, metadata !DIExpression()), !dbg !15091
  call void @llvm.dbg.value(metadata i64 0, metadata !15088, metadata !DIExpression()), !dbg !15091
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* noundef %0) #26, !dbg !15092
  br i1 %2, label %21, label %3, !dbg !15094

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15095
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15089, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.value(metadata i64 0, metadata !15088, metadata !DIExpression()), !dbg !15091
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15097
  br i1 %5, label %16, label %6, !dbg !15099

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15089, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.value(metadata i64 %8, metadata !15088, metadata !DIExpression()), !dbg !15091
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15100
  %10 = load i64, i64* %9, align 8, !dbg !15100
  %11 = add nsw i64 %10, %8, !dbg !15102
  call void @llvm.dbg.value(metadata i64 %11, metadata !15088, metadata !DIExpression()), !dbg !15091
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15103
  br i1 %12, label %16, label %13, !dbg !15105

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15106
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15089, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.value(metadata i64 %11, metadata !15088, metadata !DIExpression()), !dbg !15091
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15097
  br i1 %15, label %16, label %6, !dbg !15099, !llvm.loop !15107

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15091
  call void @llvm.dbg.value(metadata i64 %17, metadata !15088, metadata !DIExpression()), !dbg !15091
  %18 = tail call fastcc i32 @elapsed.349() #26, !dbg !15109
  %19 = sext i32 %18 to i64, !dbg !15109
  %20 = sub nsw i64 %17, %19, !dbg !15110
  br label %21, !dbg !15111

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15091
  ret i64 %22, !dbg !15112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !15113 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15117, metadata !DIExpression()), !dbg !15118
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15119
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %2) #26, !dbg !15120
  %4 = xor i1 %3, true, !dbg !15121
  ret i1 %4, !dbg !15122
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15123 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15125, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i64 0, metadata !15126, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i32 0, metadata !15127, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15132
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15134, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15136
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15136
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15132
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15137
  br i1 %3, label %5, label %4, !dbg !15138

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15139
  unreachable, !dbg !15139

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15136
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15132
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15140
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i64 0, metadata !15126, metadata !DIExpression()), !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !15127, metadata !DIExpression()), !dbg !15131
  %6 = load i64, i64* @curr_tick, align 8, !dbg !15141
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15144
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !15126, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15145
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15147
  br i1 %8, label %10, label %9, !dbg !15148

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15149
  unreachable, !dbg !15149

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !15134
  call void @llvm.dbg.value(metadata i32 %11, metadata !14753, metadata !DIExpression()) #24, !dbg !15136
  call void @llvm.dbg.value(metadata i32 %11, metadata !14747, metadata !DIExpression()) #24, !dbg !15132
  call void @llvm.dbg.value(metadata i32 %11, metadata !15129, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !15126, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15130
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15145
  call void @llvm.dbg.value(metadata i32 undef, metadata !14828, metadata !DIExpression()) #24, !dbg !15150
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #24, !dbg !15152, !srcloc !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15127, metadata !DIExpression()), !dbg !15131
  %12 = add i64 %7, %6, !dbg !15153
  ret i64 %12, !dbg !15154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15155 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15157, metadata !DIExpression()), !dbg !15161
  call void @llvm.dbg.value(metadata i32 0, metadata !15158, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15163
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15165, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15167
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15167
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15163
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15168
  br i1 %2, label %4, label %3, !dbg !15169

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15170
  unreachable, !dbg !15170

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15167
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15163
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 undef, metadata !15160, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata i32 -1, metadata !15157, metadata !DIExpression()), !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()), !dbg !15162
  %5 = tail call fastcc i32 @next_timeout() #26, !dbg !15172
  call void @llvm.dbg.value(metadata i32 %5, metadata !15157, metadata !DIExpression()), !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15175
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15175
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15177
  br i1 %6, label %8, label %7, !dbg !15178

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15179
  unreachable, !dbg !15179

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !15165
  call void @llvm.dbg.value(metadata i32 %9, metadata !14753, metadata !DIExpression()) #24, !dbg !15167
  call void @llvm.dbg.value(metadata i32 %9, metadata !14747, metadata !DIExpression()) #24, !dbg !15163
  call void @llvm.dbg.value(metadata i32 %9, metadata !15160, metadata !DIExpression()), !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15175
  call void @llvm.dbg.value(metadata i32 undef, metadata !14828, metadata !DIExpression()) #24, !dbg !15180
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15182, !srcloc !14834
  call void @llvm.dbg.value(metadata i32 %5, metadata !15157, metadata !DIExpression()), !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()), !dbg !15162
  ret i32 %5, !dbg !15183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15186, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i1 %1, metadata !15187, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15196
  call void @llvm.dbg.value(metadata i32 0, metadata !15188, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15198
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15200, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15198
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15203
  br i1 %4, label %6, label %5, !dbg !15204

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15205
  unreachable, !dbg !15205

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15202
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15198
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15206
  call void @llvm.dbg.value(metadata i32 undef, metadata !15190, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15188, metadata !DIExpression()), !dbg !15197
  %7 = tail call fastcc i32 @next_timeout() #26, !dbg !15207
  call void @llvm.dbg.value(metadata i32 %7, metadata !15191, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.value(metadata i1 undef, metadata !15194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15208
  %8 = icmp slt i32 %7, 2, !dbg !15209
  call void @llvm.dbg.value(metadata i1 %8, metadata !15195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15208
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !15210
  call void @llvm.dbg.value(metadata i1 %9, metadata !15194, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15208
  br i1 %10, label %14, label %11, !dbg !15210

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !15212
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !15212
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !15214
  br label %14, !dbg !15215

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15216
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15218
  br i1 %15, label %17, label %16, !dbg !15219

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15220
  unreachable, !dbg !15220

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15200
  call void @llvm.dbg.value(metadata i32 %18, metadata !14753, metadata !DIExpression()) #24, !dbg !15202
  call void @llvm.dbg.value(metadata i32 %18, metadata !14747, metadata !DIExpression()) #24, !dbg !15198
  call void @llvm.dbg.value(metadata i32 %18, metadata !15190, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14828, metadata !DIExpression()) #24, !dbg !15221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15223, !srcloc !14834
  call void @llvm.dbg.value(metadata i32 1, metadata !15188, metadata !DIExpression()), !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15188, metadata !DIExpression()), !dbg !15197
  ret void, !dbg !15224
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15229, metadata !DIExpression()), !dbg !15234
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !15235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15236
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15238, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15236
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15241
  br i1 %3, label %5, label %4, !dbg !15242

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15243
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15243
  unreachable, !dbg !15243

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15236
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15244
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15234
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15234
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15234
  %6 = tail call fastcc %struct._timeout* @first() #26, !dbg !15245
  %7 = icmp eq %struct._timeout* %6, null, !dbg !15246
  br i1 %7, label %37, label %8, !dbg !15247

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !15234
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !15248
  %14 = load i64, i64* %13, align 8, !dbg !15248
  %15 = sext i32 %11 to i64, !dbg !15249
  %16 = icmp sgt i64 %14, %15, !dbg !15250
  br i1 %16, label %35, label %17, !dbg !15251

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !15231, metadata !DIExpression()), !dbg !15252
  %18 = trunc i64 %14 to i32, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %18, metadata !15233, metadata !DIExpression()), !dbg !15252
  %19 = sext i32 %18 to i64, !dbg !15254
  %20 = load i64, i64* @curr_tick, align 8, !dbg !15255
  %21 = add i64 %20, %19, !dbg !15255
  store i64 %21, i64* @curr_tick, align 8, !dbg !15255
  store i64 0, i64* %13, align 8, !dbg !15256
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #26, !dbg !15257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15258
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15258
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15260
  br i1 %22, label %24, label %23, !dbg !15261

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15262
  unreachable, !dbg !15262

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !14814, metadata !DIExpression()) #24, !dbg !15258
  call void @llvm.dbg.value(metadata i32 %12, metadata !14828, metadata !DIExpression()) #24, !dbg !15263
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !15265, !srcloc !14834
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !15266
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !15266
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !15267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15268
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15270, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15268
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15273
  br i1 %28, label %30, label %29, !dbg !15274

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15275
  unreachable, !dbg !15275

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15234
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !15277
  %32 = sub nsw i32 %31, %18, !dbg !15277
  store i32 %32, i32* @announce_remaining, align 4, !dbg !15234
  call void @llvm.dbg.value(metadata i32 undef, metadata !15230, metadata !DIExpression()), !dbg !15234
  %33 = tail call fastcc %struct._timeout* @first() #26, !dbg !15245
  %34 = icmp eq %struct._timeout* %33, null, !dbg !15246
  br i1 %34, label %37, label %8, !dbg !15247, !llvm.loop !15278

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !15280
  store i64 %36, i64* %13, align 8, !dbg !15280
  br label %41, !dbg !15283

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !15234
  %40 = sext i32 %39 to i64, !dbg !15284
  br label %41, !dbg !15284

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !15284
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !15285
  %45 = add i64 %44, %42, !dbg !15285
  store i64 %45, i64* @curr_tick, align 8, !dbg !15285
  store i32 0, i32* @announce_remaining, align 4, !dbg !15286
  %46 = tail call fastcc i32 @next_timeout() #26, !dbg !15287
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15289
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15291
  br i1 %47, label %49, label %48, !dbg !15292

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15293
  unreachable, !dbg !15293

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !15234
  call void @llvm.dbg.value(metadata i32 %50, metadata !14814, metadata !DIExpression()) #24, !dbg !15289
  call void @llvm.dbg.value(metadata i32 %50, metadata !14828, metadata !DIExpression()) #24, !dbg !15294
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #24, !dbg !15296, !srcloc !14834
  ret void, !dbg !15297
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15298 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 0, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14741, metadata !DIExpression()) #24, !dbg !15308
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15310, !srcloc !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14754, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15308
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15313
  br i1 %2, label %4, label %3, !dbg !15314

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15315
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15315
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !15315
  unreachable, !dbg !15315

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14753, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()) #24, !dbg !15308
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !15305, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i64 0, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15307
  %5 = load i64, i64* @curr_tick, align 8, !dbg !15317
  %6 = tail call fastcc i32 @elapsed.349() #26, !dbg !15320
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15302, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14819, metadata !DIExpression()) #24, !dbg !15321
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15323
  br i1 %7, label %9, label %8, !dbg !15324

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15325
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !15325
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !15325
  unreachable, !dbg !15325

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %10, metadata !14753, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %10, metadata !14747, metadata !DIExpression()) #24, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %10, metadata !15305, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15302, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15306
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !15302, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15306
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()) #24, !dbg !15321
  call void @llvm.dbg.value(metadata i32 undef, metadata !14828, metadata !DIExpression()) #24, !dbg !15326
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #24, !dbg !15328, !srcloc !14834
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15307
  %11 = sext i32 %6 to i64, !dbg !15320
  %12 = add i64 %5, %11, !dbg !15329
  ret i64 %12, !dbg !15330
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15331 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15332
  %2 = trunc i64 %1 to i32, !dbg !15333
  ret i32 %2, !dbg !15334
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15335 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !15336
  ret i64 %1, !dbg !15337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15340, metadata !DIExpression()), !dbg !15347
  %2 = icmp eq i32 %0, 0, !dbg !15348
  br i1 %2, label %10, label %3, !dbg !15350

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.369() #26, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %4, metadata !15341, metadata !DIExpression()), !dbg !15347
  %5 = mul i32 %0, 84, !dbg !15352
  call void @llvm.dbg.value(metadata i32 %5, metadata !15342, metadata !DIExpression()), !dbg !15347
  br label %6, !dbg !15353

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.369() #26, !dbg !15354
  call void @llvm.dbg.value(metadata i32 %7, metadata !15343, metadata !DIExpression()), !dbg !15355
  %8 = sub i32 %7, %4, !dbg !15356
  %9 = icmp ult i32 %8, %5, !dbg !15358
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.369() unnamed_addr #1 !dbg !15360 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.370() #26, !dbg !15361
  ret i32 %1, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.370() unnamed_addr #1 !dbg !15363 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !15364
  ret i32 %1, !dbg !15365
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15366 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15370, metadata !DIExpression()), !dbg !15372
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15373

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !15374
  br label %14, !dbg !15378

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15371, metadata !DIExpression()), !dbg !15372
  %6 = icmp slt i64 %2, -1, !dbg !15379
  br i1 %6, label %7, label %9, !dbg !15382

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15383
  br label %14, !dbg !15384

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !15386
  %11 = icmp ugt i64 %2, 1, !dbg !15387
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15387
  %13 = add nsw i64 %10, %12, !dbg !15388
  br label %14, !dbg !15389

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15390
  ret i64 %15, !dbg !15391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15392 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.373, i32 0, i32 0)) #25, !dbg !15394
  ret void, !dbg !15395
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !15396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !15398, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !15399, metadata !DIExpression()), !dbg !15421
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !15422

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 24) #25, !dbg !15426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.378, i32 0, i32 0)) #25, !dbg !15426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 24) #25, !dbg !15426
  unreachable, !dbg !15426

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !15399, metadata !DIExpression()), !dbg !15421
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !15429
  br i1 %5, label %7, label %6, !dbg !15430

6:                                                ; preds = %3
  ret i32 0, !dbg !15431

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !15432
  %9 = load i8*, i8** %8, align 4, !dbg !15432
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !15435
  %11 = load i32, i32* %10, align 4, !dbg !15435
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #26, !dbg !15436
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !15437
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !15399, metadata !DIExpression()), !dbg !15421
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !15438
  br i1 %13, label %2, label %3, !dbg !15422, !llvm.loop !15439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15441 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15445, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i8* %1, metadata !15446, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.value(metadata i32 %2, metadata !15447, metadata !DIExpression()), !dbg !15448
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !15449
  tail call fastcc void @z_waitq_init.379(%union.anon* noundef nonnull %4) #26, !dbg !15450
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !15451
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !15452
  ret void, !dbg !15453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.379(%union.anon* noundef %0) unnamed_addr #12 !dbg !15454 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15459, metadata !DIExpression()), !dbg !15460
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15461
  tail call fastcc void @sys_dlist_init.380(%struct._dnode* noundef %2) #26, !dbg !15462
  ret void, !dbg !15463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.380(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15464 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15469, metadata !DIExpression()), !dbg !15470
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15471
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15472
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15473
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15474
  ret void, !dbg !15475
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15476 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !15487, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15484, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 %1, metadata !15485, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 %2, metadata !15486, metadata !DIExpression()), !dbg !15497
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !15498
  call void @llvm.dbg.value(metadata i64 %6, metadata !15489, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i8* null, metadata !15490, metadata !DIExpression()), !dbg !15497
  %7 = icmp eq i64 %5, -1, !dbg !15499
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !15499
  call void @llvm.dbg.value(metadata i64 %8, metadata !15489, metadata !DIExpression()), !dbg !15497
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !15500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !15501, metadata !DIExpression()) #24, !dbg !15508
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15510, !srcloc !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()) #24, !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15514, metadata !DIExpression()) #24, !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()) #24, !dbg !15508
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !15518
  br i1 %11, label %13, label %12, !dbg !15521

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.381, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !15522
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.383, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #25, !dbg !15522
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !15522
  unreachable, !dbg !15522

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()) #24, !dbg !15517
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()) #24, !dbg !15508
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !15524
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15497
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15525, !srcloc !15534
  call void @llvm.dbg.value(metadata i32 %14, metadata !15528, metadata !DIExpression()) #24, !dbg !15535
  %15 = icmp eq i32 %14, 0, !dbg !15536
  %16 = icmp eq i64 %5, 0, !dbg !15537
  %17 = select i1 %15, i1 true, i1 %16, !dbg !15537
  br i1 %17, label %18, label %25, !dbg !15537

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !15490, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i8 0, metadata !15496, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15497
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #25, !dbg !15538
  call void @llvm.dbg.value(metadata i8* %20, metadata !15490, metadata !DIExpression()), !dbg !15497
  %21 = tail call i64 @sys_clock_tick_get() #25, !dbg !15540
  call void @llvm.dbg.value(metadata i64 %21, metadata !15488, metadata !DIExpression()), !dbg !15497
  %22 = icmp eq i8* %20, null, !dbg !15541
  br i1 %22, label %23, label %43, !dbg !15543

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15497
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !15543

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 76) #25, !dbg !15544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.385, i32 0, i32 0)) #25, !dbg !15544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 76) #25, !dbg !15544
  unreachable, !dbg !15544

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !15496, metadata !DIExpression()), !dbg !15497
  %29 = sub nsw i64 %8, %27, !dbg !15546
  %30 = icmp slt i64 %29, 1, !dbg !15547
  br i1 %30, label %43, label %31, !dbg !15548

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !15497
  call void @llvm.dbg.value(metadata i8 undef, metadata !15496, metadata !DIExpression()), !dbg !15497
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !15549
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !15549
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #25, !dbg !15549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !15501, metadata !DIExpression()) #24, !dbg !15550
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15552, !srcloc !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()) #24, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15514, metadata !DIExpression()) #24, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()) #24, !dbg !15550
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !15555
  br i1 %37, label %39, label %38, !dbg !15556

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.381, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !15557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.383, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #25, !dbg !15557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !15557
  unreachable, !dbg !15557

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !15496, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()) #24, !dbg !15554
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()) #24, !dbg !15550
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !15558
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i8* null, metadata !15490, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15491, metadata !DIExpression()), !dbg !15497
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #25, !dbg !15538
  call void @llvm.dbg.value(metadata i8* %40, metadata !15490, metadata !DIExpression()), !dbg !15497
  %41 = tail call i64 @sys_clock_tick_get() #25, !dbg !15540
  call void @llvm.dbg.value(metadata i64 %41, metadata !15488, metadata !DIExpression()), !dbg !15497
  %42 = icmp eq i8* %40, null, !dbg !15541
  br i1 %42, label %26, label %43, !dbg !15543, !llvm.loop !15559

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !15538
  call void @llvm.dbg.value(metadata i8* %45, metadata !15490, metadata !DIExpression()), !dbg !15497
  call void @llvm.dbg.value(metadata i32 undef, metadata !15562, metadata !DIExpression()) #24, !dbg !15568
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !15567, metadata !DIExpression()) #24, !dbg !15568
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !15570
  br i1 %46, label %48, label %47, !dbg !15573

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !15574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.387, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #25, !dbg !15574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !15574
  unreachable, !dbg !15574

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !15497
  call void @llvm.dbg.value(metadata i32 %49, metadata !15562, metadata !DIExpression()) #24, !dbg !15568
  call void @llvm.dbg.value(metadata i32 %49, metadata !15576, metadata !DIExpression()) #24, !dbg !15579
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #24, !dbg !15581, !srcloc !15582
  ret i8* %45, !dbg !15583
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15584 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15590, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15588, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata i32 %1, metadata !15589, metadata !DIExpression()), !dbg !15592
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !15593
  call void @llvm.dbg.value(metadata i8* %4, metadata !15591, metadata !DIExpression()), !dbg !15592
  ret i8* %4, !dbg !15594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15595 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !15599, metadata !DIExpression()), !dbg !15602
  call void @llvm.dbg.value(metadata i8* %1, metadata !15600, metadata !DIExpression()), !dbg !15602
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !15603
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15501, metadata !DIExpression()) #24, !dbg !15604
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15606, !srcloc !15516
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()) #24, !dbg !15608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15514, metadata !DIExpression()) #24, !dbg !15608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15507, metadata !DIExpression()) #24, !dbg !15604
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !15609
  br i1 %5, label %7, label %6, !dbg !15610

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.381, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !15611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.383, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !15611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !15611
  unreachable, !dbg !15611

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !15606
  call void @llvm.dbg.value(metadata i32 %8, metadata !15513, metadata !DIExpression()) #24, !dbg !15608
  call void @llvm.dbg.value(metadata i32 %8, metadata !15507, metadata !DIExpression()) #24, !dbg !15604
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !15612
  call void @llvm.dbg.value(metadata i32 %8, metadata !15601, metadata !DIExpression()), !dbg !15602
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !15613
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #25, !dbg !15614
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !15615
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #25, !dbg !15617
  %12 = icmp eq i32 %11, 0, !dbg !15618
  br i1 %12, label %15, label %13, !dbg !15619

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !15620
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #25, !dbg !15620
  br label %19, !dbg !15622

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15562, metadata !DIExpression()) #24, !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15567, metadata !DIExpression()) #24, !dbg !15623
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !15626
  br i1 %16, label %18, label %17, !dbg !15627

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !15628
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.387, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !15628
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !15628
  unreachable, !dbg !15628

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !15562, metadata !DIExpression()) #24, !dbg !15623
  call void @llvm.dbg.value(metadata i32 %8, metadata !15576, metadata !DIExpression()) #24, !dbg !15629
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15631, !srcloc !15582
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !15632
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!941, !2, !1975, !27, !354, !420, !442, !1977, !1979, !2013, !2047, !2049, !452, !2051, !2091, !2093, !2096, !2107, !2154, !2156, !2184, !2212, !2255, !2326, !2371, !551, !691, !2399, !726, !736, !761, !827, !950, !1122, !2404, !1291, !2406, !1362, !2409, !1369, !1740, !2427, !2429, !1761, !1786, !2535, !1903, !2538, !1944}
!llvm.ident = !{!2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540, !2540}
!llvm.module.flags = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_atmel_sam3x_init", scope: !452, file: !517, line: 235, type: !518, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !454, globals: !516, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/sam3x/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!454 = !{!104, !105, !455, !466}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "Efc", file: !457, line: 46, baseType: !458)
!457 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/efc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 41, size: 128, elements: !459)
!459 = !{!460, !462, !463, !465}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FMR", scope: !458, file: !457, line: 42, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FCR", scope: !458, file: !457, line: 43, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FSR", scope: !458, file: !457, line: 44, baseType: !464, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FRR", scope: !458, file: !457, line: 45, baseType: !464, size: 32, offset: 96)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pmc", file: !468, line: 75, baseType: !469)
!468 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/pmc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !468, line: 41, size: 2176, elements: !470)
!470 = !{!471, !472, !473, !474, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !494, !498, !499, !500, !501, !502, !503, !504, !505, !509, !510, !511, !512, !513, !514, !515}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCER", scope: !469, file: !468, line: 42, baseType: !461, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCDR", scope: !469, file: !468, line: 43, baseType: !461, size: 32, offset: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCSR", scope: !469, file: !468, line: 44, baseType: !464, size: 32, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !469, file: !468, line: 45, baseType: !475, size: 32, offset: 96)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 32, elements: !476)
!476 = !{!477}
!477 = !DISubrange(count: 1)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER0", scope: !469, file: !468, line: 46, baseType: !461, size: 32, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR0", scope: !469, file: !468, line: 47, baseType: !461, size: 32, offset: 160)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR0", scope: !469, file: !468, line: 48, baseType: !464, size: 32, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_UCKR", scope: !469, file: !468, line: 49, baseType: !461, size: 32, offset: 224)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MOR", scope: !469, file: !468, line: 50, baseType: !461, size: 32, offset: 256)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MCFR", scope: !469, file: !468, line: 51, baseType: !464, size: 32, offset: 288)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_PLLAR", scope: !469, file: !468, line: 52, baseType: !461, size: 32, offset: 320)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !469, file: !468, line: 53, baseType: !475, size: 32, offset: 352)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_MCKR", scope: !469, file: !468, line: 54, baseType: !461, size: 32, offset: 384)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !469, file: !468, line: 55, baseType: !475, size: 32, offset: 416)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_USB", scope: !469, file: !468, line: 56, baseType: !461, size: 32, offset: 448)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !469, file: !468, line: 57, baseType: !475, size: 32, offset: 480)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCK", scope: !469, file: !468, line: 58, baseType: !491, size: 96, offset: 512)
!491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 96, elements: !492)
!492 = !{!493}
!493 = !DISubrange(count: 3)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !469, file: !468, line: 59, baseType: !495, size: 160, offset: 608)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 160, elements: !496)
!496 = !{!497}
!497 = !DISubrange(count: 5)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IER", scope: !469, file: !468, line: 60, baseType: !461, size: 32, offset: 768)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IDR", scope: !469, file: !468, line: 61, baseType: !461, size: 32, offset: 800)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SR", scope: !469, file: !468, line: 62, baseType: !464, size: 32, offset: 832)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IMR", scope: !469, file: !468, line: 63, baseType: !464, size: 32, offset: 864)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSMR", scope: !469, file: !468, line: 64, baseType: !461, size: 32, offset: 896)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSPR", scope: !469, file: !468, line: 65, baseType: !461, size: 32, offset: 928)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FOCR", scope: !469, file: !468, line: 66, baseType: !461, size: 32, offset: 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !469, file: !468, line: 67, baseType: !506, size: 832, offset: 992)
!506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 832, elements: !507)
!507 = !{!508}
!508 = !DISubrange(count: 26)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPMR", scope: !469, file: !468, line: 68, baseType: !461, size: 32, offset: 1824)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPSR", scope: !469, file: !468, line: 69, baseType: !464, size: 32, offset: 1856)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !469, file: !468, line: 70, baseType: !495, size: 160, offset: 1888)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER1", scope: !469, file: !468, line: 71, baseType: !461, size: 32, offset: 2048)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR1", scope: !469, file: !468, line: 72, baseType: !461, size: 32, offset: 2080)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR1", scope: !469, file: !468, line: 73, baseType: !464, size: 32, offset: 2112)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCR", scope: !469, file: !468, line: 74, baseType: !461, size: 32, offset: 2144)
!516 = !{!450}
!517 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/sam3x/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !521)
!520 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!521 = !{!522, !548}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !519, file: !520, line: 60, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 32)
!524 = !DISubroutineType(types: !525)
!525 = !{!105, !526}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !528)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !530)
!529 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!530 = !{!531, !532, !533, !534, !541, !542}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !528, file: !529, line: 380, baseType: !269, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !528, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !528, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !528, file: !529, line: 386, baseType: !535, size: 32, offset: 96)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 32)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !537)
!537 = !{!538, !539}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !536, file: !529, line: 359, baseType: !169, size: 8)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !536, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!540 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !528, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !528, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !529, line: 43, baseType: !546)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !547)
!547 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !519, file: !520, line: 65, baseType: !526, size: 32, offset: 32)
!549 = !DIGlobalVariableExpression(var: !550, expr: !DIExpression())
!550 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !551, file: !558, line: 17, type: !684, isLocal: false, isDefinition: true)
!551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !553, globals: !554, splitDebugInlining: false, nameTableKind: None)
!552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!553 = !{!111, !105, !113, !104}
!554 = !{!549, !555, !680}
!555 = !DIGlobalVariableExpression(var: !556, expr: !DIExpression())
!556 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !557, file: !558, line: 198, type: !668, isLocal: true, isDefinition: true)
!557 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !558, file: !558, line: 175, type: !559, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !663)
!558 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!559 = !DISubroutineType(types: !560)
!560 = !{null, !561}
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !563)
!563 = !{!564, !622, !634, !635, !636, !637, !643, !658}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !562, file: !127, line: 247, baseType: !565, size: 384)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !566)
!566 = !{!567, !591, !598, !599, !600, !609, !610, !611}
!567 = !DIDerivedType(tag: DW_TAG_member, scope: !565, file: !127, line: 60, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !565, file: !127, line: 60, size: 64, elements: !569)
!569 = !{!570, !585}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !568, file: !127, line: 61, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !573)
!573 = !{!574, !580}
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !572, file: !137, line: 38, baseType: !575, size: 32)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !572, file: !137, line: 38, size: 32, elements: !576)
!576 = !{!577, !579}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !575, file: !137, line: 39, baseType: !578, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !575, file: !137, line: 40, baseType: !578, size: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, scope: !572, file: !137, line: 42, baseType: !581, size: 32, offset: 32)
!581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !572, file: !137, line: 42, size: 32, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !581, file: !137, line: 43, baseType: !578, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !581, file: !137, line: 44, baseType: !578, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !568, file: !127, line: 62, baseType: !586, size: 64)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !587)
!587 = !{!588}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !586, file: !153, line: 50, baseType: !589, size: 64)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 64, elements: !158)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !565, file: !127, line: 68, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !594)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !595)
!595 = !{!596}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !594, file: !163, line: 232, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !572)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !565, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !565, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!600 = !DIDerivedType(tag: DW_TAG_member, scope: !565, file: !127, line: 90, baseType: !601, size: 16, offset: 112)
!601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !565, file: !127, line: 90, size: 16, elements: !602)
!602 = !{!603, !608}
!603 = !DIDerivedType(tag: DW_TAG_member, scope: !601, file: !127, line: 91, baseType: !604, size: 16)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !601, file: !127, line: 91, size: 16, elements: !605)
!605 = !{!606, !607}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !604, file: !127, line: 96, baseType: !179, size: 8)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !604, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !601, file: !127, line: 100, baseType: !183, size: 16)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !565, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !565, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !565, file: !127, line: 131, baseType: !612, size: 192, offset: 192)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !613)
!613 = !{!614, !615, !621}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !612, file: !163, line: 245, baseType: !571, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !612, file: !163, line: 246, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !617)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DISubroutineType(types: !619)
!619 = !{null, !620}
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !612, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !562, file: !127, line: 250, baseType: !623, size: 288, offset: 384)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !624)
!624 = !{!625, !626, !627, !628, !629, !630, !631, !632, !633}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !623, file: !200, line: 26, baseType: !113, size: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !623, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !623, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !623, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !623, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !623, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !623, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !623, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !623, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !562, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !562, file: !127, line: 256, baseType: !593, size: 64, offset: 704)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !562, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !562, file: !127, line: 300, baseType: !638, size: 96, offset: 800)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !639)
!639 = !{!640, !641, !642}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !638, file: !127, line: 153, baseType: !22, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !638, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !638, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !562, file: !127, line: 325, baseType: !644, size: 32, offset: 896)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !646)
!646 = !{!647, !653, !654}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !645, file: !122, line: 5074, baseType: !648, size: 96)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !649)
!649 = !{!650, !651, !652}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !648, file: !226, line: 57, baseType: !229, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !648, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !648, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !645, file: !122, line: 5075, baseType: !593, size: 64, offset: 96)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !645, file: !122, line: 5076, baseType: !655, size: 32, offset: 160)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !656)
!656 = !{!657}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !655, file: !236, line: 52, baseType: !22, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !562, file: !127, line: 343, baseType: !659, size: 64, offset: 928)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !659, file: !200, line: 63, baseType: !113, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !659, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!663 = !{!664, !665, !666, !667}
!664 = !DILocalVariable(name: "thread", arg: 1, scope: !557, file: !558, line: 175, type: !561)
!665 = !DILocalVariable(name: "region_num", scope: !557, file: !558, line: 200, type: !169)
!666 = !DILocalVariable(name: "guard_start", scope: !557, file: !558, line: 265, type: !22)
!667 = !DILocalVariable(name: "guard_size", scope: !557, file: !558, line: 266, type: !111)
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, size: 96, elements: !476)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !670, line: 52, size: 96, elements: !671)
!670 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!671 = !{!672, !673, !674}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !669, file: !670, line: 53, baseType: !22, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !669, file: !670, line: 54, baseType: !111, size: 32, offset: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !669, file: !670, line: 55, baseType: !675, size: 32, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !676, line: 151, baseType: !677)
!676 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !676, line: 149, size: 32, elements: !678)
!678 = !{!679}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !677, file: !676, line: 150, baseType: !113, size: 32)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "static_regions", scope: !551, file: !558, line: 62, type: !682, isLocal: true, isDefinition: true)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 96, elements: !476)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !686)
!686 = !{!687, !688}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !685, file: !348, line: 17, baseType: !269, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !685, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !691, file: !723, line: 39, type: !169, isLocal: true, isDefinition: true)
!691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !693, globals: !722, splitDebugInlining: false, nameTableKind: None)
!692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!693 = !{!694, !104, !105, !710, !169}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !696, line: 1168, baseType: !697)
!696 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 1155, size: 352, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !697, file: !696, line: 1157, baseType: !464, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !697, file: !696, line: 1158, baseType: !461, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !697, file: !696, line: 1159, baseType: !461, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !697, file: !696, line: 1160, baseType: !461, size: 32, offset: 96)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !697, file: !696, line: 1161, baseType: !461, size: 32, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !697, file: !696, line: 1162, baseType: !461, size: 32, offset: 160)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !697, file: !696, line: 1163, baseType: !461, size: 32, offset: 192)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !697, file: !696, line: 1164, baseType: !461, size: 32, offset: 224)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !697, file: !696, line: 1165, baseType: !461, size: 32, offset: 256)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !697, file: !696, line: 1166, baseType: !461, size: 32, offset: 288)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !697, file: !696, line: 1167, baseType: !461, size: 32, offset: 320)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !713, line: 27, size: 96, elements: !714)
!713 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!714 = !{!715, !716, !717}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !712, file: !713, line: 29, baseType: !113, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !712, file: !713, line: 31, baseType: !269, size: 32, offset: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !712, file: !713, line: 37, baseType: !718, size: 32, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !676, line: 146, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !676, line: 141, size: 32, elements: !720)
!720 = !{!721}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !719, file: !676, line: 143, baseType: !113, size: 32)
!722 = !{!689}
!723 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !726, file: !733, line: 21, type: !447, isLocal: true, isDefinition: true)
!726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !728, globals: !732, splitDebugInlining: false, nameTableKind: None)
!727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!728 = !{!729, !105, !104}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !731, line: 22, baseType: !105)
!731 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!732 = !{!724}
!733 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !736, file: !741, line: 13, type: !758, isLocal: true, isDefinition: true)
!736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !738, splitDebugInlining: false, nameTableKind: None)
!737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!738 = !{!739, !734}
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "mpu_config", scope: !736, file: !741, line: 37, type: !742, isLocal: false, isDefinition: true)
!741 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !713, line: 41, size: 64, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !743, file: !713, line: 43, baseType: !113, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !743, file: !713, line: 45, baseType: !747, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !713, line: 27, size: 96, elements: !750)
!750 = !{!751, !752, !753}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !749, file: !713, line: 29, baseType: !113, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !749, file: !713, line: 31, baseType: !269, size: 32, offset: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !749, file: !713, line: 37, baseType: !754, size: 32, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !676, line: 146, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !676, line: 141, size: 32, elements: !756)
!756 = !{!757}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !755, file: !676, line: 143, baseType: !113, size: 32)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !748, size: 192, elements: !158)
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !761, file: !818, line: 603, type: !820, isLocal: true, isDefinition: true, align: 32)
!761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !762, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !763, globals: !815, splitDebugInlining: false, nameTableKind: None)
!762 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!763 = !{!104, !105, !764}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !767, line: 336, size: 160, elements: !768)
!767 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!768 = !{!769, !789, !793, !797, !810}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !766, file: !767, line: 365, baseType: !770, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 32)
!771 = !DISubroutineType(types: !772)
!772 = !{!105, !773, !788}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !776)
!776 = !{!777, !778, !779, !780, !786, !787}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !775, file: !529, line: 380, baseType: !269, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !775, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !775, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !775, file: !529, line: 386, baseType: !781, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !783)
!783 = !{!784, !785}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !782, file: !529, line: 359, baseType: !169, size: 8)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !782, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !775, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !775, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !766, file: !767, line: 366, baseType: !790, size: 32, offset: 32)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = !DISubroutineType(types: !792)
!792 = !{null, !773, !170}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !766, file: !767, line: 374, baseType: !794, size: 32, offset: 64)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DISubroutineType(types: !796)
!796 = !{!105, !773}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !766, file: !767, line: 377, baseType: !798, size: 32, offset: 96)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!105, !773, !801}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !767, line: 122, size: 64, elements: !804)
!804 = !{!805, !806, !807, !808, !809}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !803, file: !767, line: 123, baseType: !113, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !803, file: !767, line: 124, baseType: !169, size: 8, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !803, file: !767, line: 125, baseType: !169, size: 8, offset: 40)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !803, file: !767, line: 126, baseType: !169, size: 8, offset: 48)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !803, file: !767, line: 127, baseType: !169, size: 8, offset: 56)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !766, file: !767, line: 379, baseType: !811, size: 32, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DISubroutineType(types: !813)
!813 = !{!105, !773, !814}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!815 = !{!759, !816}
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !761, file: !818, line: 38, type: !819, isLocal: true, isDefinition: true)
!818 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !822)
!822 = !{!823, !824}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !821, file: !520, line: 60, baseType: !794, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !821, file: !520, line: 65, baseType: !773, size: 32, offset: 32)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "log_const_wdt_sam", scope: !827, file: !888, line: 28, type: !934, isLocal: false, isDefinition: true)
!827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !829, globals: !885, splitDebugInlining: false, nameTableKind: None)
!828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/watchdog/wdt_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!829 = !{!830, !113}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_driver_api", file: !833, line: 134, size: 128, elements: !834)
!833 = !DIFile(filename: "zephyr/include/zephyr/drivers/watchdog.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!834 = !{!835, !855, !860, !880}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !832, file: !833, line: 135, baseType: !836, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_setup", file: !833, line: 113, baseType: !837)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = !DISubroutineType(types: !839)
!839 = !{!105, !840, !169}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !843)
!843 = !{!844, !845, !846, !847, !853, !854}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !529, line: 380, baseType: !269, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !842, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !842, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !842, file: !529, line: 386, baseType: !848, size: 32, offset: 96)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !849, file: !529, line: 359, baseType: !169, size: 8)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !849, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !842, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !842, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !832, file: !833, line: 136, baseType: !856, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_disable", file: !833, line: 119, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DISubroutineType(types: !859)
!859 = !{!105, !840}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "install_timeout", scope: !832, file: !833, line: 137, baseType: !861, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_install_timeout", file: !833, line: 125, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 32)
!863 = !DISubroutineType(types: !864)
!864 = !{!105, !840, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_timeout_cfg", file: !833, line: 88, size: 128, elements: !868)
!868 = !{!869, !874, !879}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !867, file: !833, line: 90, baseType: !870, size: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_window", file: !833, line: 72, size: 64, elements: !871)
!871 = !{!872, !873}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !870, file: !833, line: 74, baseType: !113, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !870, file: !833, line: 76, baseType: !113, size: 32, offset: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !867, file: !833, line: 92, baseType: !875, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_callback_t", file: !833, line: 85, baseType: !876)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{null, !840, !105}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !867, file: !833, line: 104, baseType: !169, size: 8, offset: 96)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "feed", scope: !832, file: !833, line: 138, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_feed", file: !833, line: 132, baseType: !882)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = !DISubroutineType(types: !884)
!884 = !{!105, !840, !105}
!885 = !{!825, !886, !890, !892, !899, !901, !915, !917, !925}
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !827, file: !888, line: 256, type: !889, isLocal: false, isDefinition: true, align: 16)
!888 = !DIFile(filename: "zephyr/drivers/watchdog/wdt_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 80, elements: !496)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__device_dts_ord_26", scope: !827, file: !888, line: 256, type: !841, isLocal: false, isDefinition: true, align: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_26", scope: !827, file: !888, line: 256, type: !894, isLocal: true, isDefinition: true, align: 32)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !896)
!896 = !{!897, !898}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !895, file: !520, line: 60, baseType: !857, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !895, file: !520, line: 65, baseType: !840, size: 32, offset: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_26", scope: !827, file: !888, line: 256, type: !849, isLocal: true, isDefinition: true, align: 8)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "wdt_sam_cfg", scope: !827, file: !888, line: 234, type: !903, isLocal: true, isDefinition: true)
!903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_sam_dev_cfg", file: !888, line: 34, size: 32, elements: !905)
!905 = !{!906}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !904, file: !888, line: 35, baseType: !907, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "Wdt", file: !909, line: 45, baseType: !910)
!909 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/wdt.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !909, line: 41, size: 96, elements: !911)
!911 = !{!912, !913, !914}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_CR", scope: !910, file: !909, line: 42, baseType: !461, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_MR", scope: !910, file: !909, line: 43, baseType: !461, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_SR", scope: !910, file: !909, line: 44, baseType: !464, size: 32, offset: 64)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "wdt_sam_api", scope: !827, file: !888, line: 227, type: !831, isLocal: true, isDefinition: true)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "wdt_sam_data", scope: !827, file: !888, line: 45, type: !919, isLocal: true, isDefinition: true)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_sam_dev_data", file: !888, line: 38, size: 96, elements: !920)
!920 = !{!921, !922, !923, !924}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !919, file: !888, line: 39, baseType: !875, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !919, file: !888, line: 40, baseType: !113, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_valid", scope: !919, file: !888, line: 41, baseType: !540, size: 8, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !919, file: !888, line: 42, baseType: !540, size: 8, offset: 72)
!925 = !DIGlobalVariableExpression(var: !926, expr: !DIExpression())
!926 = distinct !DIGlobalVariable(name: "__isr_wdt_sam_isr_irq_0", scope: !927, file: !888, line: 240, type: !928, isLocal: true, isDefinition: true, align: 32)
!927 = distinct !DISubprogram(name: "wdt_sam_irq_config", scope: !888, file: !888, line: 238, type: !266, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !397)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !929)
!929 = !{!930, !931, !932, !933}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !928, file: !10, line: 55, baseType: !116, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !928, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !928, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !928, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !936)
!936 = !{!937, !938}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !935, file: !348, line: 17, baseType: !269, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !935, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!939 = !DIGlobalVariableExpression(var: !940, expr: !DIExpression())
!940 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !941, file: !946, line: 7, type: !947, isLocal: false, isDefinition: true, align: 16)
!941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !943, splitDebugInlining: false, nameTableKind: None)
!942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!943 = !{!939, !944}
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !941, file: !946, line: 12, type: !947, isLocal: false, isDefinition: true, align: 16)
!946 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 48, elements: !492)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "uart0_sam_config", scope: !950, file: !1038, line: 494, type: !1085, isLocal: true, isDefinition: true)
!950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !952, retainedTypes: !985, globals: !1035, splitDebugInlining: false, nameTableKind: None)
!951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!952 = !{!953, !960, !966, !973, !978}
!953 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !767, line: 47, baseType: !32, size: 32, elements: !954)
!954 = !{!955, !956, !957, !958, !959}
!955 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!956 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!957 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!958 = !DIEnumerator(name: "UART_BREAK", value: 8)
!959 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!960 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !767, line: 84, baseType: !32, size: 32, elements: !961)
!961 = !{!962, !963, !964, !965}
!962 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!963 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!964 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!965 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!966 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !767, line: 92, baseType: !32, size: 32, elements: !967)
!967 = !{!968, !969, !970, !971, !972}
!968 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!969 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!970 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!971 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!972 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !767, line: 107, baseType: !32, size: 32, elements: !974)
!974 = !{!975, !976, !977}
!975 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!976 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!977 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !767, line: 75, baseType: !32, size: 32, elements: !979)
!979 = !{!980, !981, !982, !983, !984}
!980 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!981 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!982 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!983 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!984 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!985 = !{!986, !104, !170, !113}
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !767, line: 336, size: 160, elements: !989)
!989 = !{!990, !1009, !1013, !1017, !1030}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !988, file: !767, line: 365, baseType: !991, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{!105, !994, !788}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1007, !1008}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !996, file: !529, line: 380, baseType: !269, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !996, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !996, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !996, file: !529, line: 386, baseType: !1002, size: 32, offset: 96)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !1004)
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1003, file: !529, line: 359, baseType: !169, size: 8)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1003, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !996, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !996, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !988, file: !767, line: 366, baseType: !1010, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{null, !994, !170}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !988, file: !767, line: 374, baseType: !1014, size: 32, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!105, !994}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !988, file: !767, line: 377, baseType: !1018, size: 32, offset: 96)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!105, !994, !1021}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !767, line: 122, size: 64, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1023, file: !767, line: 123, baseType: !113, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1023, file: !767, line: 124, baseType: !169, size: 8, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1023, file: !767, line: 125, baseType: !169, size: 8, offset: 40)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1023, file: !767, line: 126, baseType: !169, size: 8, offset: 48)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1023, file: !767, line: 127, baseType: !169, size: 8, offset: 56)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !988, file: !767, line: 379, baseType: !1031, size: 32, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!105, !994, !1034}
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1035 = !{!1036, !1042, !1044, !1051, !1053, !1055, !948, !1060, !1079, !1082}
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !950, file: !1038, line: 494, type: !1039, isLocal: false, isDefinition: true, align: 16)
!1038 = !DIFile(filename: "zephyr/drivers/serial/uart_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 96, elements: !1040)
!1040 = !{!1041}
!1041 = !DISubrange(count: 6)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !950, file: !1038, line: 494, type: !995, isLocal: false, isDefinition: true, align: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !950, file: !1038, line: 494, type: !1046, isLocal: true, isDefinition: true, align: 32)
!1046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1047, file: !520, line: 60, baseType: !1014, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1047, file: !520, line: 65, baseType: !994, size: 32, offset: 32)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !950, file: !1038, line: 494, type: !1003, isLocal: true, isDefinition: true, align: 8)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "uart_sam_driver_api", scope: !950, file: !1038, line: 419, type: !987, isLocal: true, isDefinition: true)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "uart0_sam_data", scope: !950, file: !1038, line: 494, type: !1057, isLocal: true, isDefinition: true)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam_dev_data", file: !1038, line: 38, size: 32, elements: !1058)
!1058 = !{!1059}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1057, file: !1038, line: 39, baseType: !113, size: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_21", scope: !950, file: !1038, line: 494, type: !1062, isLocal: true, isDefinition: true)
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1064, line: 60, size: 64, elements: !1065)
!1064 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1065 = !{!1066, !1078}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1063, file: !1064, line: 69, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1064, line: 50, size: 64, elements: !1070)
!1070 = !{!1071, !1076, !1077}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1069, file: !1064, line: 52, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1075, line: 32, baseType: !113)
!1075 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1069, file: !1064, line: 54, baseType: !169, size: 8, offset: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1069, file: !1064, line: 56, baseType: !169, size: 8, offset: 40)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1063, file: !1064, line: 71, baseType: !169, size: 8, offset: 32)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_21", scope: !950, file: !1038, line: 494, type: !1081, isLocal: true, isDefinition: true)
!1081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 64, elements: !476)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_21", scope: !950, file: !1038, line: 494, type: !1084, isLocal: true, isDefinition: true)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1073, size: 64, elements: !158)
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam_dev_cfg", file: !1038, line: 27, size: 96, elements: !1087)
!1087 = !{!1088, !1117, !1118}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1086, file: !1038, line: 28, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uart", file: !1091, line: 62, baseType: !1092)
!1091 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1091, line: 41, size: 2368, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "UART_CR", scope: !1092, file: !1091, line: 42, baseType: !461, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "UART_MR", scope: !1092, file: !1091, line: 43, baseType: !461, size: 32, offset: 32)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IER", scope: !1092, file: !1091, line: 44, baseType: !461, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IDR", scope: !1092, file: !1091, line: 45, baseType: !461, size: 32, offset: 96)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IMR", scope: !1092, file: !1091, line: 46, baseType: !464, size: 32, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "UART_SR", scope: !1092, file: !1091, line: 47, baseType: !464, size: 32, offset: 160)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RHR", scope: !1092, file: !1091, line: 48, baseType: !464, size: 32, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "UART_THR", scope: !1092, file: !1091, line: 49, baseType: !461, size: 32, offset: 224)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "UART_BRGR", scope: !1092, file: !1091, line: 50, baseType: !461, size: 32, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1092, file: !1091, line: 51, baseType: !1104, size: 1760, offset: 288)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 1760, elements: !1105)
!1105 = !{!1106}
!1106 = !DISubrange(count: 55)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RPR", scope: !1092, file: !1091, line: 52, baseType: !461, size: 32, offset: 2048)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RCR", scope: !1092, file: !1091, line: 53, baseType: !461, size: 32, offset: 2080)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TPR", scope: !1092, file: !1091, line: 54, baseType: !461, size: 32, offset: 2112)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TCR", scope: !1092, file: !1091, line: 55, baseType: !461, size: 32, offset: 2144)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RNPR", scope: !1092, file: !1091, line: 56, baseType: !461, size: 32, offset: 2176)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RNCR", scope: !1092, file: !1091, line: 57, baseType: !461, size: 32, offset: 2208)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TNPR", scope: !1092, file: !1091, line: 58, baseType: !461, size: 32, offset: 2240)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TNCR", scope: !1092, file: !1091, line: 59, baseType: !461, size: 32, offset: 2272)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "UART_PTCR", scope: !1092, file: !1091, line: 60, baseType: !461, size: 32, offset: 2304)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "UART_PTSR", scope: !1092, file: !1091, line: 61, baseType: !464, size: 32, offset: 2336)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !1086, file: !1038, line: 29, baseType: !113, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1086, file: !1038, line: 30, baseType: !1119, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1122, file: !1254, line: 65, type: !461, isLocal: true, isDefinition: true)
!1122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1124, retainedTypes: !1178, globals: !1251, splitDebugInlining: false, nameTableKind: None)
!1123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1124 = !{!1125}
!1125 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !1126, line: 57, baseType: !105, size: 32, elements: !1127)
!1126 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/sam3x8e.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1127 = !{!1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177}
!1128 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1129 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1130 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1131 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1132 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1133 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1134 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1135 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1136 = !DIEnumerator(name: "SUPC_IRQn", value: 0)
!1137 = !DIEnumerator(name: "RSTC_IRQn", value: 1)
!1138 = !DIEnumerator(name: "RTC_IRQn", value: 2)
!1139 = !DIEnumerator(name: "RTT_IRQn", value: 3)
!1140 = !DIEnumerator(name: "WDT_IRQn", value: 4)
!1141 = !DIEnumerator(name: "PMC_IRQn", value: 5)
!1142 = !DIEnumerator(name: "EFC0_IRQn", value: 6)
!1143 = !DIEnumerator(name: "EFC1_IRQn", value: 7)
!1144 = !DIEnumerator(name: "UART_IRQn", value: 8)
!1145 = !DIEnumerator(name: "SMC_IRQn", value: 9)
!1146 = !DIEnumerator(name: "PIOA_IRQn", value: 11)
!1147 = !DIEnumerator(name: "PIOB_IRQn", value: 12)
!1148 = !DIEnumerator(name: "PIOC_IRQn", value: 13)
!1149 = !DIEnumerator(name: "PIOD_IRQn", value: 14)
!1150 = !DIEnumerator(name: "USART0_IRQn", value: 17)
!1151 = !DIEnumerator(name: "USART1_IRQn", value: 18)
!1152 = !DIEnumerator(name: "USART2_IRQn", value: 19)
!1153 = !DIEnumerator(name: "USART3_IRQn", value: 20)
!1154 = !DIEnumerator(name: "HSMCI_IRQn", value: 21)
!1155 = !DIEnumerator(name: "TWI0_IRQn", value: 22)
!1156 = !DIEnumerator(name: "TWI1_IRQn", value: 23)
!1157 = !DIEnumerator(name: "SPI0_IRQn", value: 24)
!1158 = !DIEnumerator(name: "SSC_IRQn", value: 26)
!1159 = !DIEnumerator(name: "TC0_IRQn", value: 27)
!1160 = !DIEnumerator(name: "TC1_IRQn", value: 28)
!1161 = !DIEnumerator(name: "TC2_IRQn", value: 29)
!1162 = !DIEnumerator(name: "TC3_IRQn", value: 30)
!1163 = !DIEnumerator(name: "TC4_IRQn", value: 31)
!1164 = !DIEnumerator(name: "TC5_IRQn", value: 32)
!1165 = !DIEnumerator(name: "TC6_IRQn", value: 33)
!1166 = !DIEnumerator(name: "TC7_IRQn", value: 34)
!1167 = !DIEnumerator(name: "TC8_IRQn", value: 35)
!1168 = !DIEnumerator(name: "PWM_IRQn", value: 36)
!1169 = !DIEnumerator(name: "ADC_IRQn", value: 37)
!1170 = !DIEnumerator(name: "DACC_IRQn", value: 38)
!1171 = !DIEnumerator(name: "DMAC_IRQn", value: 39)
!1172 = !DIEnumerator(name: "UOTGHS_IRQn", value: 40)
!1173 = !DIEnumerator(name: "TRNG_IRQn", value: 41)
!1174 = !DIEnumerator(name: "EMAC_IRQn", value: 42)
!1175 = !DIEnumerator(name: "CAN0_IRQn", value: 43)
!1176 = !DIEnumerator(name: "CAN1_IRQn", value: 44)
!1177 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 45)
!1178 = !{!107, !1179, !116, !169, !113, !1187, !1220}
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !696, line: 712, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 706, size: 128, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1181, file: !696, line: 708, baseType: !461, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1181, file: !696, line: 709, baseType: !461, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1181, file: !696, line: 710, baseType: !461, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1181, file: !696, line: 711, baseType: !464, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !696, line: 360, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 345, size: 28704, elements: !1190)
!1190 = !{!1191, !1195, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1210, !1215, !1219}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1189, file: !696, line: 347, baseType: !1192, size: 256)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1193)
!1193 = !{!1194}
!1194 = !DISubrange(count: 8)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1189, file: !696, line: 348, baseType: !1196, size: 768, offset: 256)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 24)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1189, file: !696, line: 349, baseType: !1192, size: 256, offset: 1024)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1189, file: !696, line: 350, baseType: !1196, size: 768, offset: 1280)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1189, file: !696, line: 351, baseType: !1192, size: 256, offset: 2048)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1189, file: !696, line: 352, baseType: !1196, size: 768, offset: 2304)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1189, file: !696, line: 353, baseType: !1192, size: 256, offset: 3072)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1189, file: !696, line: 354, baseType: !1196, size: 768, offset: 3328)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1189, file: !696, line: 355, baseType: !1192, size: 256, offset: 4096)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1189, file: !696, line: 356, baseType: !1207, size: 1792, offset: 4352)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1208)
!1208 = !{!1209}
!1209 = !DISubrange(count: 56)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1189, file: !696, line: 357, baseType: !1211, size: 1920, offset: 6144)
!1211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, size: 1920, elements: !1213)
!1212 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1213 = !{!1214}
!1214 = !DISubrange(count: 240)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1189, file: !696, line: 358, baseType: !1216, size: 20608, offset: 8064)
!1216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1217)
!1217 = !{!1218}
!1218 = !DISubrange(count: 644)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1189, file: !696, line: 359, baseType: !461, size: 32, offset: 28672)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1243, !1244, !1245, !1247, !1248, !1250}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1222, file: !696, line: 381, baseType: !464, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1222, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1222, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1222, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1222, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1222, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1222, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!1231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1212, size: 96, elements: !1232)
!1232 = !{!1233}
!1233 = !DISubrange(count: 12)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1222, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1222, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1222, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1222, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1222, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1222, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1222, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1222, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 64, elements: !158)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1222, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1222, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1222, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!1246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 128, elements: !313)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1222, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1222, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!1249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !496)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1222, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!1251 = !{!1252, !1278, !1283, !1285, !1287, !1120}
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1122, file: !1254, line: 285, type: !1255, isLocal: true, isDefinition: true, align: 32)
!1254 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !1257)
!1257 = !{!1258, !1277}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1256, file: !520, line: 60, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!105, !1262}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1275, !1276}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1264, file: !529, line: 380, baseType: !269, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1264, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1264, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1264, file: !529, line: 386, baseType: !1270, size: 32, offset: 96)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1271, file: !529, line: 359, baseType: !169, size: 8)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1271, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1264, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1264, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1256, file: !520, line: 65, baseType: !1262, size: 32, offset: 32)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "lock", scope: !1122, file: !1254, line: 34, type: !1280, isLocal: true, isDefinition: true)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1281)
!1281 = !{!1282}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1280, file: !236, line: 52, baseType: !22, size: 32)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "last_load", scope: !1122, file: !1254, line: 36, type: !113, isLocal: true, isDefinition: true)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1122, file: !1254, line: 48, type: !113, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1122, file: !1254, line: 54, type: !113, isLocal: true, isDefinition: true)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !1291, file: !1357, line: 21, type: !1358, isLocal: true, isDefinition: true)
!1291 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1292, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1293, globals: !1354, splitDebugInlining: false, nameTableKind: None)
!1292 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1293 = !{!111, !105, !1294}
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pio", file: !1296, line: 96, baseType: !1297)
!1296 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/pio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1296, line: 41, size: 1888, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PER", scope: !1297, file: !1296, line: 42, baseType: !461, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDR", scope: !1297, file: !1296, line: 43, baseType: !461, size: 32, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PSR", scope: !1297, file: !1296, line: 44, baseType: !464, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1297, file: !1296, line: 45, baseType: !475, size: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OER", scope: !1297, file: !1296, line: 46, baseType: !461, size: 32, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODR", scope: !1297, file: !1296, line: 47, baseType: !461, size: 32, offset: 160)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OSR", scope: !1297, file: !1296, line: 48, baseType: !464, size: 32, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1297, file: !1296, line: 49, baseType: !475, size: 32, offset: 224)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFER", scope: !1297, file: !1296, line: 50, baseType: !461, size: 32, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDR", scope: !1297, file: !1296, line: 51, baseType: !461, size: 32, offset: 288)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFSR", scope: !1297, file: !1296, line: 52, baseType: !464, size: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1297, file: !1296, line: 53, baseType: !475, size: 32, offset: 352)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SODR", scope: !1297, file: !1296, line: 54, baseType: !461, size: 32, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_CODR", scope: !1297, file: !1296, line: 55, baseType: !461, size: 32, offset: 416)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODSR", scope: !1297, file: !1296, line: 56, baseType: !461, size: 32, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDSR", scope: !1297, file: !1296, line: 57, baseType: !464, size: 32, offset: 480)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IER", scope: !1297, file: !1296, line: 58, baseType: !461, size: 32, offset: 512)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IDR", scope: !1297, file: !1296, line: 59, baseType: !461, size: 32, offset: 544)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IMR", scope: !1297, file: !1296, line: 60, baseType: !464, size: 32, offset: 576)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ISR", scope: !1297, file: !1296, line: 61, baseType: !464, size: 32, offset: 608)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDER", scope: !1297, file: !1296, line: 62, baseType: !461, size: 32, offset: 640)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDDR", scope: !1297, file: !1296, line: 63, baseType: !461, size: 32, offset: 672)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDSR", scope: !1297, file: !1296, line: 64, baseType: !464, size: 32, offset: 704)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1297, file: !1296, line: 65, baseType: !475, size: 32, offset: 736)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUDR", scope: !1297, file: !1296, line: 66, baseType: !461, size: 32, offset: 768)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUER", scope: !1297, file: !1296, line: 67, baseType: !461, size: 32, offset: 800)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUSR", scope: !1297, file: !1296, line: 68, baseType: !464, size: 32, offset: 832)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !1297, file: !1296, line: 69, baseType: !475, size: 32, offset: 864)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ABSR", scope: !1297, file: !1296, line: 70, baseType: !461, size: 32, offset: 896)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !1297, file: !1296, line: 71, baseType: !1329, size: 96, offset: 928)
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !464, size: 96, elements: !492)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCIFSR", scope: !1297, file: !1296, line: 72, baseType: !461, size: 32, offset: 1024)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_DIFSR", scope: !1297, file: !1296, line: 73, baseType: !461, size: 32, offset: 1056)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDGSR", scope: !1297, file: !1296, line: 74, baseType: !464, size: 32, offset: 1088)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCDR", scope: !1297, file: !1296, line: 75, baseType: !461, size: 32, offset: 1120)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !1297, file: !1296, line: 76, baseType: !1246, size: 128, offset: 1152)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWER", scope: !1297, file: !1296, line: 77, baseType: !461, size: 32, offset: 1280)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWDR", scope: !1297, file: !1296, line: 78, baseType: !461, size: 32, offset: 1312)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWSR", scope: !1297, file: !1296, line: 79, baseType: !464, size: 32, offset: 1344)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !1297, file: !1296, line: 80, baseType: !475, size: 32, offset: 1376)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMER", scope: !1297, file: !1296, line: 81, baseType: !461, size: 32, offset: 1408)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMDR", scope: !1297, file: !1296, line: 82, baseType: !461, size: 32, offset: 1440)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMMR", scope: !1297, file: !1296, line: 83, baseType: !464, size: 32, offset: 1472)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved9", scope: !1297, file: !1296, line: 84, baseType: !475, size: 32, offset: 1504)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ESR", scope: !1297, file: !1296, line: 85, baseType: !461, size: 32, offset: 1536)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LSR", scope: !1297, file: !1296, line: 86, baseType: !461, size: 32, offset: 1568)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ELSR", scope: !1297, file: !1296, line: 87, baseType: !464, size: 32, offset: 1600)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved10", scope: !1297, file: !1296, line: 88, baseType: !475, size: 32, offset: 1632)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FELLSR", scope: !1297, file: !1296, line: 89, baseType: !461, size: 32, offset: 1664)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_REHLSR", scope: !1297, file: !1296, line: 90, baseType: !461, size: 32, offset: 1696)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FRLHSR", scope: !1297, file: !1296, line: 91, baseType: !464, size: 32, offset: 1728)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved11", scope: !1297, file: !1296, line: 92, baseType: !475, size: 32, offset: 1760)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LOCKSR", scope: !1297, file: !1296, line: 93, baseType: !464, size: 32, offset: 1792)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPMR", scope: !1297, file: !1296, line: 94, baseType: !461, size: 32, offset: 1824)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPSR", scope: !1297, file: !1296, line: 95, baseType: !464, size: 32, offset: 1856)
!1354 = !{!1289, !1355}
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "sam_port_periph_id", scope: !1291, file: !1357, line: 37, type: !1358, isLocal: true, isDefinition: true)
!1357 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 160, elements: !496)
!1359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1362, file: !1365, line: 23, type: !1366, isLocal: false, isDefinition: true)
!1362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !1364, splitDebugInlining: false, nameTableKind: None)
!1363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1364 = !{!1360}
!1365 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1369, file: !1373, line: 37, type: !1626, isLocal: false, isDefinition: true)
!1369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1370, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1371, retainedTypes: !1380, globals: !1453, splitDebugInlining: false, nameTableKind: None)
!1370 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1371 = !{!1372, !30, !1125}
!1372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1373, line: 63, baseType: !32, size: 32, elements: !1374)
!1373 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1374 = !{!1375, !1376, !1377, !1378, !1379}
!1375 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1376 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1377 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1378 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1379 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1380 = !{!111, !104, !105, !1381, !102, !113, !1411, !116, !169, !1436}
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1384, line: 51, size: 64, elements: !1385)
!1384 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1385 = !{!1386, !1406}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1383, file: !1384, line: 52, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1384, line: 38, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!105, !1391, !432, !183}
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1404, !1405}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1393, file: !529, line: 380, baseType: !269, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1393, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1393, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1393, file: !529, line: 386, baseType: !1399, size: 32, offset: 96)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !1401)
!1401 = !{!1402, !1403}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1400, file: !529, line: 359, baseType: !169, size: 8)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1400, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1393, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1393, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1383, file: !1384, line: 53, baseType: !1407, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1384, line: 47, baseType: !1408)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1409 = !DISubroutineType(types: !1410)
!1410 = !{!105, !1391, !432, !183, !113}
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1413, file: !696, line: 381, baseType: !464, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1413, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1413, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1413, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1413, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1413, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1413, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1413, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1413, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1413, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1413, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1413, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1413, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1413, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1413, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1413, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1413, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1413, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1413, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1413, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1413, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !696, line: 360, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 345, size: 28704, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1438, file: !696, line: 347, baseType: !1192, size: 256)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1438, file: !696, line: 348, baseType: !1196, size: 768, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1438, file: !696, line: 349, baseType: !1192, size: 256, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1438, file: !696, line: 350, baseType: !1196, size: 768, offset: 1280)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1438, file: !696, line: 351, baseType: !1192, size: 256, offset: 2048)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1438, file: !696, line: 352, baseType: !1196, size: 768, offset: 2304)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1438, file: !696, line: 353, baseType: !1192, size: 256, offset: 3072)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1438, file: !696, line: 354, baseType: !1196, size: 768, offset: 3328)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1438, file: !696, line: 355, baseType: !1192, size: 256, offset: 4096)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1438, file: !696, line: 356, baseType: !1207, size: 1792, offset: 4352)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1438, file: !696, line: 357, baseType: !1211, size: 1920, offset: 6144)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1438, file: !696, line: 358, baseType: !1216, size: 20608, offset: 8064)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1438, file: !696, line: 359, baseType: !461, size: 32, offset: 28672)
!1453 = !{!1367, !1454, !1579, !1587, !1589, !1592, !1596, !1598, !1603}
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "_kernel", scope: !1369, file: !1373, line: 40, type: !1456, isLocal: false, isDefinition: true)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !1457)
!1457 = !{!1458, !1574}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1456, file: !163, line: 159, baseType: !1459, size: 224)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1460, size: 224, elements: !476)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1567, !1568, !1569, !1570, !1571}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1460, file: !163, line: 102, baseType: !113, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1460, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1460, file: !163, line: 108, baseType: !1465, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !1467)
!1467 = !{!1468, !1526, !1538, !1539, !1540, !1541, !1547, !1562}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1466, file: !127, line: 247, baseType: !1469, size: 384)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !1470)
!1470 = !{!1471, !1495, !1502, !1503, !1504, !1513, !1514, !1515}
!1471 = !DIDerivedType(tag: DW_TAG_member, scope: !1469, file: !127, line: 60, baseType: !1472, size: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1469, file: !127, line: 60, size: 64, elements: !1473)
!1473 = !{!1474, !1489}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1472, file: !127, line: 61, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1476)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1477)
!1477 = !{!1478, !1484}
!1478 = !DIDerivedType(tag: DW_TAG_member, scope: !1476, file: !137, line: 38, baseType: !1479, size: 32)
!1479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1476, file: !137, line: 38, size: 32, elements: !1480)
!1480 = !{!1481, !1483}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1479, file: !137, line: 39, baseType: !1482, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1479, file: !137, line: 40, baseType: !1482, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, scope: !1476, file: !137, line: 42, baseType: !1485, size: 32, offset: 32)
!1485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1476, file: !137, line: 42, size: 32, elements: !1486)
!1486 = !{!1487, !1488}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1485, file: !137, line: 43, baseType: !1482, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1485, file: !137, line: 44, baseType: !1482, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1472, file: !127, line: 62, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !1491)
!1491 = !{!1492}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1490, file: !153, line: 50, baseType: !1493, size: 64)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 64, elements: !158)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1469, file: !127, line: 68, baseType: !1496, size: 32, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !1499)
!1499 = !{!1500}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1498, file: !163, line: 232, baseType: !1501, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1476)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1469, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1469, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!1504 = !DIDerivedType(tag: DW_TAG_member, scope: !1469, file: !127, line: 90, baseType: !1505, size: 16, offset: 112)
!1505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1469, file: !127, line: 90, size: 16, elements: !1506)
!1506 = !{!1507, !1512}
!1507 = !DIDerivedType(tag: DW_TAG_member, scope: !1505, file: !127, line: 91, baseType: !1508, size: 16)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1505, file: !127, line: 91, size: 16, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1508, file: !127, line: 96, baseType: !179, size: 8)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1508, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1505, file: !127, line: 100, baseType: !183, size: 16)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1469, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1469, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1469, file: !127, line: 131, baseType: !1516, size: 192, offset: 192)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !1517)
!1517 = !{!1518, !1519, !1525}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1516, file: !163, line: 245, baseType: !1475, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1516, file: !163, line: 246, baseType: !1520, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !1521)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{null, !1524}
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1516, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1466, file: !127, line: 250, baseType: !1527, size: 288, offset: 384)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1527, file: !200, line: 26, baseType: !113, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1527, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1527, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1527, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1527, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1527, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1527, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1527, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1527, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1466, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1466, file: !127, line: 256, baseType: !1497, size: 64, offset: 704)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1466, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1466, file: !127, line: 300, baseType: !1542, size: 96, offset: 800)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !1543)
!1543 = !{!1544, !1545, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1542, file: !127, line: 153, baseType: !22, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1542, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1542, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1466, file: !127, line: 325, baseType: !1548, size: 32, offset: 896)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !1550)
!1550 = !{!1551, !1557, !1558}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1549, file: !122, line: 5074, baseType: !1552, size: 96)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !1553)
!1553 = !{!1554, !1555, !1556}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1552, file: !226, line: 57, baseType: !229, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1552, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1552, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1549, file: !122, line: 5075, baseType: !1497, size: 64, offset: 96)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1549, file: !122, line: 5076, baseType: !1559, size: 32, offset: 160)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1560)
!1560 = !{!1561}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1559, file: !236, line: 52, baseType: !22, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1466, file: !127, line: 343, baseType: !1563, size: 64, offset: 928)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !1564)
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1563, file: !200, line: 63, baseType: !113, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1563, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1460, file: !163, line: 111, baseType: !1465, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !1460, file: !163, line: 119, baseType: !1465, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1460, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1460, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1460, file: !163, line: 153, baseType: !1572, offset: 200)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1573, line: 33, elements: !397)
!1573 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1456, file: !163, line: 170, baseType: !1575, size: 96, offset: 224)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1575, file: !163, line: 86, baseType: !1465, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1575, file: !163, line: 90, baseType: !1501, size: 64, offset: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1369, file: !1373, line: 43, type: !1581, isLocal: false, isDefinition: true, align: 512)
!1581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1582, size: 8704, elements: !1585)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !1583)
!1583 = !{!1584}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1582, file: !249, line: 48, baseType: !103, size: 8)
!1585 = !{!1586}
!1586 = !DISubrange(count: 1088)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1369, file: !1373, line: 44, type: !1466, isLocal: false, isDefinition: true)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1369, file: !1373, line: 48, type: !1591, isLocal: false, isDefinition: true)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1466, size: 1024, elements: !476)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1369, file: !1373, line: 86, type: !1594, isLocal: false, isDefinition: true, align: 512)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1582, size: 16896, elements: !1595)
!1595 = !{!477, !319}
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1369, file: !1373, line: 217, type: !540, isLocal: false, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1369, file: !1373, line: 50, type: !1600, isLocal: true, isDefinition: true, align: 512)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1582, size: 2560, elements: !1601)
!1601 = !{!477, !1602}
!1602 = !DISubrange(count: 320)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "levels", scope: !1605, file: !1373, line: 232, type: !1625, isLocal: true, isDefinition: true)
!1605 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1373, file: !1373, line: 230, type: !1606, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !1608)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{null, !1372}
!1608 = !{!1609, !1610, !1620, !1624}
!1609 = !DILocalVariable(name: "level", arg: 1, scope: !1605, file: !1373, line: 230, type: !1372)
!1610 = !DILocalVariable(name: "entry", scope: !1605, file: !1373, line: 244, type: !1611)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !1614)
!1614 = !{!1615, !1619}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1613, file: !520, line: 60, baseType: !1616, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!105, !1391}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1613, file: !520, line: 65, baseType: !1391, size: 32, offset: 32)
!1620 = !DILocalVariable(name: "dev", scope: !1621, file: !1373, line: 247, type: !1391)
!1621 = distinct !DILexicalBlock(scope: !1622, file: !1373, line: 246, column: 64)
!1622 = distinct !DILexicalBlock(scope: !1623, file: !1373, line: 246, column: 2)
!1623 = distinct !DILexicalBlock(scope: !1605, file: !1373, line: 246, column: 2)
!1624 = !DILocalVariable(name: "rc", scope: !1621, file: !1373, line: 248, type: !105)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1611, size: 192, elements: !1040)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1627, file: !348, line: 17, baseType: !269, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1627, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "states_str", scope: !1633, file: !1634, line: 276, type: !1758, isLocal: true, isDefinition: true)
!1633 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1634, file: !1634, line: 271, type: !1635, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !1749)
!1634 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1635 = !DISubroutineType(types: !1636)
!1636 = !{!269, !1637, !102, !111}
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !1638)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !1640)
!1640 = !{!1641, !1699, !1711, !1712, !1713, !1714, !1720, !1735}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1639, file: !127, line: 247, baseType: !1642, size: 384)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !1643)
!1643 = !{!1644, !1668, !1675, !1676, !1677, !1686, !1687, !1688}
!1644 = !DIDerivedType(tag: DW_TAG_member, scope: !1642, file: !127, line: 60, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1642, file: !127, line: 60, size: 64, elements: !1646)
!1646 = !{!1647, !1662}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1645, file: !127, line: 61, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1650)
!1650 = !{!1651, !1657}
!1651 = !DIDerivedType(tag: DW_TAG_member, scope: !1649, file: !137, line: 38, baseType: !1652, size: 32)
!1652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1649, file: !137, line: 38, size: 32, elements: !1653)
!1653 = !{!1654, !1656}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1652, file: !137, line: 39, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1652, file: !137, line: 40, baseType: !1655, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, scope: !1649, file: !137, line: 42, baseType: !1658, size: 32, offset: 32)
!1658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1649, file: !137, line: 42, size: 32, elements: !1659)
!1659 = !{!1660, !1661}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1658, file: !137, line: 43, baseType: !1655, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1658, file: !137, line: 44, baseType: !1655, size: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1645, file: !127, line: 62, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !1664)
!1664 = !{!1665}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1663, file: !153, line: 50, baseType: !1666, size: 64)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1667, size: 64, elements: !158)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1642, file: !127, line: 68, baseType: !1669, size: 32, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !1672)
!1672 = !{!1673}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1671, file: !163, line: 232, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1649)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1642, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1642, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!1677 = !DIDerivedType(tag: DW_TAG_member, scope: !1642, file: !127, line: 90, baseType: !1678, size: 16, offset: 112)
!1678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1642, file: !127, line: 90, size: 16, elements: !1679)
!1679 = !{!1680, !1685}
!1680 = !DIDerivedType(tag: DW_TAG_member, scope: !1678, file: !127, line: 91, baseType: !1681, size: 16)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1678, file: !127, line: 91, size: 16, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1681, file: !127, line: 96, baseType: !179, size: 8)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1681, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1678, file: !127, line: 100, baseType: !183, size: 16)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1642, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1642, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1642, file: !127, line: 131, baseType: !1689, size: 192, offset: 192)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !1690)
!1690 = !{!1691, !1692, !1698}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1689, file: !163, line: 245, baseType: !1648, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1689, file: !163, line: 246, baseType: !1693, size: 32, offset: 64)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{null, !1697}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1689, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1639, file: !127, line: 250, baseType: !1700, size: 288, offset: 384)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1700, file: !200, line: 26, baseType: !113, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1700, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1700, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1700, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1700, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1700, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1700, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1700, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1700, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1639, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1639, file: !127, line: 256, baseType: !1670, size: 64, offset: 704)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1639, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1639, file: !127, line: 300, baseType: !1715, size: 96, offset: 800)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !1716)
!1716 = !{!1717, !1718, !1719}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1715, file: !127, line: 153, baseType: !22, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1715, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1715, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1639, file: !127, line: 325, baseType: !1721, size: 32, offset: 896)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !1723)
!1723 = !{!1724, !1730, !1731}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1722, file: !122, line: 5074, baseType: !1725, size: 96)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !1726)
!1726 = !{!1727, !1728, !1729}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1725, file: !226, line: 57, baseType: !229, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1725, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1725, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1722, file: !122, line: 5075, baseType: !1670, size: 64, offset: 96)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1722, file: !122, line: 5076, baseType: !1732, size: 32, offset: 160)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1733)
!1733 = !{!1734}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1732, file: !236, line: 52, baseType: !22, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1639, file: !127, line: 343, baseType: !1736, size: 64, offset: 928)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1736, file: !200, line: 63, baseType: !113, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1736, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!1740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1741, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1742, globals: !1744, splitDebugInlining: false, nameTableKind: None)
!1741 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1742 = !{!104, !269, !107, !169, !22, !105, !1743, !24, !111, !102, !113, !114}
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1744 = !{!1631, !1745}
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(name: "states_sz", scope: !1633, file: !1634, line: 279, type: !1747, isLocal: true, isDefinition: true)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1748, size: 256, elements: !1193)
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1750 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1633, file: !1634, line: 271, type: !1637)
!1751 = !DILocalVariable(name: "buf", arg: 2, scope: !1633, file: !1634, line: 271, type: !102)
!1752 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1633, file: !1634, line: 271, type: !111)
!1753 = !DILocalVariable(name: "off", scope: !1633, file: !1634, line: 273, type: !111)
!1754 = !DILocalVariable(name: "bit", scope: !1633, file: !1634, line: 274, type: !169)
!1755 = !DILocalVariable(name: "thread_state", scope: !1633, file: !1634, line: 275, type: !169)
!1756 = !DILocalVariable(name: "index", scope: !1757, file: !1634, line: 293, type: !169)
!1757 = distinct !DILexicalBlock(scope: !1633, file: !1634, line: 293, column: 2)
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1193)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "lock", scope: !1761, file: !1780, line: 39, type: !1781, isLocal: true, isDefinition: true)
!1761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1762, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1763, globals: !1779, splitDebugInlining: false, nameTableKind: None)
!1762 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1763 = !{!104, !540, !105, !1764}
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1766)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1767)
!1767 = !{!1768, !1774}
!1768 = !DIDerivedType(tag: DW_TAG_member, scope: !1766, file: !137, line: 38, baseType: !1769, size: 32)
!1769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1766, file: !137, line: 38, size: 32, elements: !1770)
!1770 = !{!1771, !1773}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1769, file: !137, line: 39, baseType: !1772, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1769, file: !137, line: 40, baseType: !1772, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, scope: !1766, file: !137, line: 42, baseType: !1775, size: 32, offset: 32)
!1775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1766, file: !137, line: 42, size: 32, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1775, file: !137, line: 43, baseType: !1772, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1775, file: !137, line: 44, baseType: !1772, size: 32)
!1779 = !{!1759}
!1780 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1782)
!1782 = !{!1783}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1781, file: !236, line: 52, baseType: !22, size: 32)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !1786, file: !1896, line: 56, type: !1883, isLocal: false, isDefinition: true)
!1786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1788, globals: !1893, splitDebugInlining: false, nameTableKind: None)
!1787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1788 = !{!1789, !102, !104, !1891, !432, !107, !116, !105, !113, !114, !1892}
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !1791)
!1791 = !{!1792, !1850, !1862, !1863, !1864, !1865, !1871, !1886}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1790, file: !127, line: 247, baseType: !1793, size: 384)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !1794)
!1794 = !{!1795, !1819, !1826, !1827, !1828, !1837, !1838, !1839}
!1795 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !127, line: 60, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !127, line: 60, size: 64, elements: !1797)
!1797 = !{!1798, !1813}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1796, file: !127, line: 61, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1801)
!1801 = !{!1802, !1808}
!1802 = !DIDerivedType(tag: DW_TAG_member, scope: !1800, file: !137, line: 38, baseType: !1803, size: 32)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1800, file: !137, line: 38, size: 32, elements: !1804)
!1804 = !{!1805, !1807}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1803, file: !137, line: 39, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1803, file: !137, line: 40, baseType: !1806, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, scope: !1800, file: !137, line: 42, baseType: !1809, size: 32, offset: 32)
!1809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1800, file: !137, line: 42, size: 32, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1809, file: !137, line: 43, baseType: !1806, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1809, file: !137, line: 44, baseType: !1806, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1796, file: !127, line: 62, baseType: !1814, size: 64)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !1815)
!1815 = !{!1816}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1814, file: !153, line: 50, baseType: !1817, size: 64)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1818, size: 64, elements: !158)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1793, file: !127, line: 68, baseType: !1820, size: 32, offset: 64)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !1823)
!1823 = !{!1824}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1822, file: !163, line: 232, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1800)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1793, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1793, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!1828 = !DIDerivedType(tag: DW_TAG_member, scope: !1793, file: !127, line: 90, baseType: !1829, size: 16, offset: 112)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1793, file: !127, line: 90, size: 16, elements: !1830)
!1830 = !{!1831, !1836}
!1831 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !127, line: 91, baseType: !1832, size: 16)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1829, file: !127, line: 91, size: 16, elements: !1833)
!1833 = !{!1834, !1835}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1832, file: !127, line: 96, baseType: !179, size: 8)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1832, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1829, file: !127, line: 100, baseType: !183, size: 16)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1793, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1793, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1793, file: !127, line: 131, baseType: !1840, size: 192, offset: 192)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !1841)
!1841 = !{!1842, !1843, !1849}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1840, file: !163, line: 245, baseType: !1799, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1840, file: !163, line: 246, baseType: !1844, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !1845)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!1846 = !DISubroutineType(types: !1847)
!1847 = !{null, !1848}
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1840, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1790, file: !127, line: 250, baseType: !1851, size: 288, offset: 384)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1851, file: !200, line: 26, baseType: !113, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1851, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1851, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1851, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1851, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1851, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1851, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1851, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1851, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1790, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1790, file: !127, line: 256, baseType: !1821, size: 64, offset: 704)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1790, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1790, file: !127, line: 300, baseType: !1866, size: 96, offset: 800)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !1867)
!1867 = !{!1868, !1869, !1870}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1866, file: !127, line: 153, baseType: !22, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1866, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1866, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1790, file: !127, line: 325, baseType: !1872, size: 32, offset: 896)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !1874)
!1874 = !{!1875, !1881, !1882}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1873, file: !122, line: 5074, baseType: !1876, size: 96)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !1877)
!1877 = !{!1878, !1879, !1880}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1876, file: !226, line: 57, baseType: !229, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1876, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1876, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1873, file: !122, line: 5075, baseType: !1821, size: 64, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1873, file: !122, line: 5076, baseType: !1883, size: 32, offset: 160)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1884)
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1883, file: !236, line: 52, baseType: !22, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1790, file: !127, line: 343, baseType: !1887, size: 64, offset: 928)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !1888)
!1888 = !{!1889, !1890}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1887, file: !200, line: 63, baseType: !113, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1887, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1893 = !{!1784, !1894, !1897, !1899}
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !1786, file: !1896, line: 404, type: !105, isLocal: true, isDefinition: true)
!1896 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !1786, file: !1896, line: 405, type: !105, isLocal: true, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "pending_current", scope: !1786, file: !1896, line: 425, type: !1789, isLocal: true, isDefinition: true)
!1901 = !DIGlobalVariableExpression(var: !1902, expr: !DIExpression())
!1902 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !1903, file: !1933, line: 19, type: !1939, isLocal: true, isDefinition: true)
!1903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1905, globals: !1930, splitDebugInlining: false, nameTableKind: None)
!1904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1905 = !{!107, !104, !116, !113, !114, !105, !1906, !102, !109}
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 32)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !1908)
!1908 = !{!1909, !1924, !1929}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1907, file: !163, line: 245, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1912)
!1912 = !{!1913, !1919}
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !137, line: 38, baseType: !1914, size: 32)
!1914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1911, file: !137, line: 38, size: 32, elements: !1915)
!1915 = !{!1916, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1914, file: !137, line: 39, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1914, file: !137, line: 40, baseType: !1917, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1911, file: !137, line: 42, baseType: !1920, size: 32, offset: 32)
!1920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1911, file: !137, line: 42, size: 32, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1920, file: !137, line: 43, baseType: !1917, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1920, file: !137, line: 44, baseType: !1917, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1907, file: !163, line: 246, baseType: !1925, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{null, !1906}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1907, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!1930 = !{!1931, !1901, !1934, !1936}
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "curr_tick", scope: !1903, file: !1933, line: 15, type: !114, isLocal: true, isDefinition: true)
!1933 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !1903, file: !1933, line: 25, type: !105, isLocal: true, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "timeout_list", scope: !1903, file: !1933, line: 17, type: !1938, isLocal: true, isDefinition: true)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1911)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1940)
!1940 = !{!1941}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1939, file: !236, line: 52, baseType: !22, size: 32)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !1944, file: !1963, line: 55, type: !1964, isLocal: true, isDefinition: true, align: 32)
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1946, globals: !1962, splitDebugInlining: false, nameTableKind: None)
!1945 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1946 = !{!104, !107, !105, !1947}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1950)
!1950 = !{!1951, !1957}
!1951 = !DIDerivedType(tag: DW_TAG_member, scope: !1949, file: !137, line: 38, baseType: !1952, size: 32)
!1952 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1949, file: !137, line: 38, size: 32, elements: !1953)
!1953 = !{!1954, !1956}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1952, file: !137, line: 39, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1952, file: !137, line: 40, baseType: !1955, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, scope: !1949, file: !137, line: 42, baseType: !1958, size: 32, offset: 32)
!1958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1949, file: !137, line: 42, size: 32, elements: !1959)
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1958, file: !137, line: 43, baseType: !1955, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1958, file: !137, line: 44, baseType: !1955, size: 32)
!1962 = !{!1942}
!1963 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !520, line: 51, size: 64, elements: !1966)
!1966 = !{!1967, !1974}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1965, file: !520, line: 60, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!105, !1971}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1973)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !520, line: 48, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1965, file: !520, line: 65, baseType: !1971, size: 32, offset: 32)
!1975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!1976 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1977 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1978, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!1978 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1979 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1980, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1981, retainedTypes: !1989, splitDebugInlining: false, nameTableKind: None)
!1980 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!1981 = !{!30, !1982}
!1982 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !1983, line: 54, baseType: !32, size: 32, elements: !1984)
!1983 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1984 = !{!1985, !1986, !1987, !1988}
!1985 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!1986 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!1987 = !DIEnumerator(name: "FREE_PREV", value: 2)
!1988 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!1989 = !{!104, !111, !432, !24, !1990, !22, !1996, !105, !2011, !2012}
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !1983, line: 58, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1983, line: 58, size: 64, elements: !1993)
!1993 = !{!1994}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1992, file: !1983, line: 58, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1193)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !1983, line: 68, size: 128, elements: !1998)
!1998 = !{!1999, !2002, !2003, !2004}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !1997, file: !1983, line: 69, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2001, size: 64, elements: !158)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !1983, line: 61, baseType: !113)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !1997, file: !1983, line: 70, baseType: !2001, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !1997, file: !1983, line: 71, baseType: !113, size: 32, offset: 96)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !1997, file: !1983, line: 77, baseType: !2005, offset: 128)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2006, elements: !2009)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !1983, line: 64, size: 32, elements: !2007)
!2007 = !{!2008}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2006, file: !1983, line: 65, baseType: !2001, size: 32)
!2009 = !{!2010}
!2010 = !DISubrange(count: 0)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2013 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2014, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2015, retainedTypes: !2035, splitDebugInlining: false, nameTableKind: None)
!2014 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2015 = !{!2016, !2024}
!2016 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2017, line: 69, baseType: !32, size: 32, elements: !2018)
!2017 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2018 = !{!2019, !2020, !2021, !2022, !2023}
!2019 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2020 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2021 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2022 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2023 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2024 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2017, line: 56, baseType: !32, size: 32, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034}
!2026 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2027 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2028 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2029 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2030 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2031 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2032 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2033 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2034 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2035 = !{!105, !2016, !2024, !2036, !180, !547, !2038, !2039, !170, !184, !269, !111, !104, !22, !32, !428, !2041, !2042, !106, !429, !110, !430, !2037, !2043, !2044, !2045, !2046}
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2017, line: 31, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2017, line: 32, baseType: !2040)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2051 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2052, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2053, splitDebugInlining: false, nameTableKind: None)
!2052 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/common/./soc_pmc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2053 = !{!2054}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pmc", file: !468, line: 75, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !468, line: 41, size: 2176, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCER", scope: !2056, file: !468, line: 42, baseType: !461, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCDR", scope: !2056, file: !468, line: 43, baseType: !461, size: 32, offset: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCSR", scope: !2056, file: !468, line: 44, baseType: !464, size: 32, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2056, file: !468, line: 45, baseType: !475, size: 32, offset: 96)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER0", scope: !2056, file: !468, line: 46, baseType: !461, size: 32, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR0", scope: !2056, file: !468, line: 47, baseType: !461, size: 32, offset: 160)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR0", scope: !2056, file: !468, line: 48, baseType: !464, size: 32, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_UCKR", scope: !2056, file: !468, line: 49, baseType: !461, size: 32, offset: 224)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MOR", scope: !2056, file: !468, line: 50, baseType: !461, size: 32, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MCFR", scope: !2056, file: !468, line: 51, baseType: !464, size: 32, offset: 288)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_PLLAR", scope: !2056, file: !468, line: 52, baseType: !461, size: 32, offset: 320)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2056, file: !468, line: 53, baseType: !475, size: 32, offset: 352)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_MCKR", scope: !2056, file: !468, line: 54, baseType: !461, size: 32, offset: 384)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2056, file: !468, line: 55, baseType: !475, size: 32, offset: 416)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_USB", scope: !2056, file: !468, line: 56, baseType: !461, size: 32, offset: 448)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2056, file: !468, line: 57, baseType: !475, size: 32, offset: 480)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCK", scope: !2056, file: !468, line: 58, baseType: !491, size: 96, offset: 512)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !2056, file: !468, line: 59, baseType: !495, size: 160, offset: 608)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IER", scope: !2056, file: !468, line: 60, baseType: !461, size: 32, offset: 768)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IDR", scope: !2056, file: !468, line: 61, baseType: !461, size: 32, offset: 800)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SR", scope: !2056, file: !468, line: 62, baseType: !464, size: 32, offset: 832)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IMR", scope: !2056, file: !468, line: 63, baseType: !464, size: 32, offset: 864)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSMR", scope: !2056, file: !468, line: 64, baseType: !461, size: 32, offset: 896)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSPR", scope: !2056, file: !468, line: 65, baseType: !461, size: 32, offset: 928)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FOCR", scope: !2056, file: !468, line: 66, baseType: !461, size: 32, offset: 960)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !2056, file: !468, line: 67, baseType: !506, size: 832, offset: 992)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPMR", scope: !2056, file: !468, line: 68, baseType: !461, size: 32, offset: 1824)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPSR", scope: !2056, file: !468, line: 69, baseType: !464, size: 32, offset: 1856)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !2056, file: !468, line: 70, baseType: !495, size: 160, offset: 1888)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER1", scope: !2056, file: !468, line: 71, baseType: !461, size: 32, offset: 2048)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR1", scope: !2056, file: !468, line: 72, baseType: !461, size: 32, offset: 2080)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR1", scope: !2056, file: !468, line: 73, baseType: !464, size: 32, offset: 2112)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCR", scope: !2056, file: !468, line: 74, baseType: !461, size: 32, offset: 2144)
!2091 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2092, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2092 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/common/./soc_gpio.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2093 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2094, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2095, splitDebugInlining: false, nameTableKind: None)
!2094 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2095 = !{!269, !170, !105, !32}
!2096 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2097, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2098, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2097 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2098 = !{!2099, !30}
!2099 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2100, line: 27, baseType: !32, size: 32, elements: !2101)
!2100 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2101 = !{!2102, !2103, !2104, !2105, !2106}
!2102 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2103 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2104 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2105 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2106 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2109, retainedTypes: !2110, splitDebugInlining: false, nameTableKind: None)
!2108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2109 = !{!1125, !2099, !30}
!2110 = !{!2111, !2112, !104, !105, !116, !113, !169, !2129}
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !1126, line: 113, baseType: !1125)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !696, line: 360, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 345, size: 28704, elements: !2115)
!2115 = !{!2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2114, file: !696, line: 347, baseType: !1192, size: 256)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2114, file: !696, line: 348, baseType: !1196, size: 768, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2114, file: !696, line: 349, baseType: !1192, size: 256, offset: 1024)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2114, file: !696, line: 350, baseType: !1196, size: 768, offset: 1280)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2114, file: !696, line: 351, baseType: !1192, size: 256, offset: 2048)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2114, file: !696, line: 352, baseType: !1196, size: 768, offset: 2304)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2114, file: !696, line: 353, baseType: !1192, size: 256, offset: 3072)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2114, file: !696, line: 354, baseType: !1196, size: 768, offset: 3328)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2114, file: !696, line: 355, baseType: !1192, size: 256, offset: 4096)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2114, file: !696, line: 356, baseType: !1207, size: 1792, offset: 4352)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2114, file: !696, line: 357, baseType: !1211, size: 1920, offset: 6144)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2114, file: !696, line: 358, baseType: !1216, size: 20608, offset: 8064)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2114, file: !696, line: 359, baseType: !461, size: 32, offset: 28672)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !2131)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !2132)
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2131, file: !696, line: 381, baseType: !464, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2131, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2131, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2131, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2131, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2131, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2131, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2131, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2131, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2131, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2131, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2131, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2131, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2131, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2131, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2131, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2131, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2131, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2131, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2131, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2131, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!2154 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2155, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2155 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2158, splitDebugInlining: false, nameTableKind: None)
!2157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2158 = !{!104, !105, !22, !2159}
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !2161)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !2162)
!2162 = !{!2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2161, file: !696, line: 381, baseType: !464, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2161, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2161, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2161, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2161, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2161, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2161, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2161, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2161, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2161, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2161, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2161, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2161, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2161, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2161, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2161, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2161, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2161, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2161, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2161, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2161, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!2184 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2185, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2186, splitDebugInlining: false, nameTableKind: None)
!2185 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2186 = !{!2187, !104, !105}
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2189, file: !696, line: 381, baseType: !464, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2189, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2189, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2189, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2189, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2189, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2189, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2189, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2189, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2189, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2189, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2189, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2189, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2189, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2189, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2189, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2189, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2189, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2189, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2189, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2189, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!2212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2213, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2214, splitDebugInlining: false, nameTableKind: None)
!2213 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2214 = !{!2215, !113, !104, !105}
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2217, line: 98, size: 256, elements: !2218)
!2217 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2218 = !{!2219, !2224, !2229, !2234, !2239, !2244, !2249, !2254}
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 99, baseType: !2220, size: 32)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 99, size: 32, elements: !2221)
!2221 = !{!2222, !2223}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2220, file: !2217, line: 99, baseType: !113, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2220, file: !2217, line: 99, baseType: !113, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 100, baseType: !2225, size: 32, offset: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 100, size: 32, elements: !2226)
!2226 = !{!2227, !2228}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2225, file: !2217, line: 100, baseType: !113, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2225, file: !2217, line: 100, baseType: !113, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 101, baseType: !2230, size: 32, offset: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 101, size: 32, elements: !2231)
!2231 = !{!2232, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2230, file: !2217, line: 101, baseType: !113, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2230, file: !2217, line: 101, baseType: !113, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 102, baseType: !2235, size: 32, offset: 96)
!2235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 102, size: 32, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2235, file: !2217, line: 102, baseType: !113, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2235, file: !2217, line: 102, baseType: !113, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 103, baseType: !2240, size: 32, offset: 128)
!2240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 103, size: 32, elements: !2241)
!2241 = !{!2242, !2243}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2240, file: !2217, line: 103, baseType: !113, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2240, file: !2217, line: 103, baseType: !113, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 104, baseType: !2245, size: 32, offset: 160)
!2245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 104, size: 32, elements: !2246)
!2246 = !{!2247, !2248}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2245, file: !2217, line: 104, baseType: !113, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2245, file: !2217, line: 104, baseType: !113, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !2217, line: 105, baseType: !2250, size: 32, offset: 192)
!2250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !2217, line: 105, size: 32, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2250, file: !2217, line: 105, baseType: !113, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2250, file: !2217, line: 105, baseType: !113, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2216, file: !2217, line: 106, baseType: !113, size: 32, offset: 224)
!2255 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2256, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2098, retainedTypes: !2257, splitDebugInlining: false, nameTableKind: None)
!2256 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2257 = !{!2258, !104, !105, !2283, !2012, !113}
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !2261)
!2261 = !{!2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2260, file: !696, line: 381, baseType: !464, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2260, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2260, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2260, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2260, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2260, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2260, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2260, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2260, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2260, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2260, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2260, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2260, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2260, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2260, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2260, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2260, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2260, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2260, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2260, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2260, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2217, line: 141, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2217, line: 97, size: 256, elements: !2286)
!2286 = !{!2287}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2285, file: !2217, line: 107, baseType: !2288, size: 256)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2217, line: 98, size: 256, elements: !2289)
!2289 = !{!2290, !2295, !2300, !2305, !2310, !2315, !2320, !2325}
!2290 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 99, baseType: !2291, size: 32)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 99, size: 32, elements: !2292)
!2292 = !{!2293, !2294}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2291, file: !2217, line: 99, baseType: !113, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2291, file: !2217, line: 99, baseType: !113, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 100, baseType: !2296, size: 32, offset: 32)
!2296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 100, size: 32, elements: !2297)
!2297 = !{!2298, !2299}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2296, file: !2217, line: 100, baseType: !113, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2296, file: !2217, line: 100, baseType: !113, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 101, baseType: !2301, size: 32, offset: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 101, size: 32, elements: !2302)
!2302 = !{!2303, !2304}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2301, file: !2217, line: 101, baseType: !113, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2301, file: !2217, line: 101, baseType: !113, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 102, baseType: !2306, size: 32, offset: 96)
!2306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 102, size: 32, elements: !2307)
!2307 = !{!2308, !2309}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2306, file: !2217, line: 102, baseType: !113, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2306, file: !2217, line: 102, baseType: !113, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 103, baseType: !2311, size: 32, offset: 128)
!2311 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 103, size: 32, elements: !2312)
!2312 = !{!2313, !2314}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2311, file: !2217, line: 103, baseType: !113, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2311, file: !2217, line: 103, baseType: !113, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 104, baseType: !2316, size: 32, offset: 160)
!2316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 104, size: 32, elements: !2317)
!2317 = !{!2318, !2319}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2316, file: !2217, line: 104, baseType: !113, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2316, file: !2217, line: 104, baseType: !113, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, scope: !2288, file: !2217, line: 105, baseType: !2321, size: 32, offset: 192)
!2321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2288, file: !2217, line: 105, size: 32, elements: !2322)
!2322 = !{!2323, !2324}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2321, file: !2217, line: 105, baseType: !113, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2321, file: !2217, line: 105, baseType: !113, size: 32)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2288, file: !2217, line: 106, baseType: !113, size: 32, offset: 224)
!2326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1124, retainedTypes: !2328, splitDebugInlining: false, nameTableKind: None)
!2327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2328 = !{!2111, !116, !169, !113, !2329, !2346}
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !696, line: 360, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 345, size: 28704, elements: !2332)
!2332 = !{!2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2331, file: !696, line: 347, baseType: !1192, size: 256)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2331, file: !696, line: 348, baseType: !1196, size: 768, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2331, file: !696, line: 349, baseType: !1192, size: 256, offset: 1024)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2331, file: !696, line: 350, baseType: !1196, size: 768, offset: 1280)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2331, file: !696, line: 351, baseType: !1192, size: 256, offset: 2048)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2331, file: !696, line: 352, baseType: !1196, size: 768, offset: 2304)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2331, file: !696, line: 353, baseType: !1192, size: 256, offset: 3072)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2331, file: !696, line: 354, baseType: !1196, size: 768, offset: 3328)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2331, file: !696, line: 355, baseType: !1192, size: 256, offset: 4096)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2331, file: !696, line: 356, baseType: !1207, size: 1792, offset: 4352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2331, file: !696, line: 357, baseType: !1211, size: 1920, offset: 6144)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2331, file: !696, line: 358, baseType: !1216, size: 20608, offset: 8064)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2331, file: !696, line: 359, baseType: !461, size: 32, offset: 28672)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !2348)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !2349)
!2349 = !{!2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2348, file: !696, line: 381, baseType: !464, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2348, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2348, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2348, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2348, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2348, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2348, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2348, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2348, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2348, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2348, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2348, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2348, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2348, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2348, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2348, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2348, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2348, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2348, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2348, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2348, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!2371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2372, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2373, splitDebugInlining: false, nameTableKind: None)
!2372 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2373 = !{!2374, !104, !105}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !696, line: 402, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !696, line: 379, size: 1120, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2376, file: !696, line: 381, baseType: !464, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2376, file: !696, line: 382, baseType: !461, size: 32, offset: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2376, file: !696, line: 383, baseType: !461, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2376, file: !696, line: 384, baseType: !461, size: 32, offset: 96)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2376, file: !696, line: 385, baseType: !461, size: 32, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2376, file: !696, line: 386, baseType: !461, size: 32, offset: 160)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2376, file: !696, line: 387, baseType: !1231, size: 96, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2376, file: !696, line: 388, baseType: !461, size: 32, offset: 288)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2376, file: !696, line: 389, baseType: !461, size: 32, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2376, file: !696, line: 390, baseType: !461, size: 32, offset: 352)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2376, file: !696, line: 391, baseType: !461, size: 32, offset: 384)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2376, file: !696, line: 392, baseType: !461, size: 32, offset: 416)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2376, file: !696, line: 393, baseType: !461, size: 32, offset: 448)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2376, file: !696, line: 394, baseType: !461, size: 32, offset: 480)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2376, file: !696, line: 395, baseType: !1242, size: 64, offset: 512)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2376, file: !696, line: 396, baseType: !464, size: 32, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2376, file: !696, line: 397, baseType: !464, size: 32, offset: 608)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2376, file: !696, line: 398, baseType: !1246, size: 128, offset: 640)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2376, file: !696, line: 399, baseType: !495, size: 160, offset: 768)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2376, file: !696, line: 400, baseType: !1249, size: 160, offset: 928)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2376, file: !696, line: 401, baseType: !461, size: 32, offset: 1088)
!2399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2401, splitDebugInlining: false, nameTableKind: None)
!2400 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2401 = !{!103, !102, !111, !788, !2402, !170, !104}
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2404 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2405, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2405 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2407, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2408, splitDebugInlining: false, nameTableKind: None)
!2407 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2408 = !{!104, !111}
!2409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2410, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2411, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2410 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2411 = !{!2412, !2419, !2099, !30}
!2412 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2413, line: 14, baseType: !32, size: 32, elements: !2414)
!2413 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2414 = !{!2415, !2416, !2417, !2418}
!2415 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2416 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2417 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2418 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2419 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2413, line: 42, baseType: !32, size: 32, elements: !2420)
!2420 = !{!2421, !2422, !2423, !2424, !2425, !2426}
!2421 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2422 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2423 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2424 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2425 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2426 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2427 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2428, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2428 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2429 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2430, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2431, splitDebugInlining: false, nameTableKind: None)
!2430 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2431 = !{!104, !105, !2432, !2447}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2435)
!2435 = !{!2436, !2442}
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2434, file: !137, line: 38, baseType: !2437, size: 32)
!2437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2434, file: !137, line: 38, size: 32, elements: !2438)
!2438 = !{!2439, !2441}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2437, file: !137, line: 39, baseType: !2440, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2437, file: !137, line: 40, baseType: !2440, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2434, file: !137, line: 42, baseType: !2443, size: 32, offset: 32)
!2443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2434, file: !137, line: 42, size: 32, elements: !2444)
!2444 = !{!2445, !2446}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2443, file: !137, line: 43, baseType: !2440, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2443, file: !137, line: 44, baseType: !2440, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2449)
!2449 = !{!2450, !2494, !2506, !2507, !2508, !2509, !2515, !2530}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2448, file: !127, line: 247, baseType: !2451, size: 384)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2452)
!2452 = !{!2453, !2463, !2470, !2471, !2472, !2481, !2482, !2483}
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !127, line: 60, baseType: !2454, size: 64)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !127, line: 60, size: 64, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2454, file: !127, line: 61, baseType: !2433, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2454, file: !127, line: 62, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2459)
!2459 = !{!2460}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2458, file: !153, line: 50, baseType: !2461, size: 64)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2462, size: 64, elements: !158)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2451, file: !127, line: 68, baseType: !2464, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2467)
!2467 = !{!2468}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2466, file: !163, line: 232, baseType: !2469, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2434)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2451, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2451, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2472 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !127, line: 90, baseType: !2473, size: 16, offset: 112)
!2473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !127, line: 90, size: 16, elements: !2474)
!2474 = !{!2475, !2480}
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2473, file: !127, line: 91, baseType: !2476, size: 16)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2473, file: !127, line: 91, size: 16, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2476, file: !127, line: 96, baseType: !179, size: 8)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2476, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2473, file: !127, line: 100, baseType: !183, size: 16)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2451, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2451, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2451, file: !127, line: 131, baseType: !2484, size: 192, offset: 192)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2485)
!2485 = !{!2486, !2487, !2493}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2484, file: !163, line: 245, baseType: !2433, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2484, file: !163, line: 246, baseType: !2488, size: 32, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2489)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{null, !2492}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2484, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2448, file: !127, line: 250, baseType: !2495, size: 288, offset: 384)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2495, file: !200, line: 26, baseType: !113, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2495, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2495, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2495, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2495, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2495, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2495, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2495, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2495, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2448, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2448, file: !127, line: 256, baseType: !2465, size: 64, offset: 704)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2448, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2448, file: !127, line: 300, baseType: !2510, size: 96, offset: 800)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2511)
!2511 = !{!2512, !2513, !2514}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2510, file: !127, line: 153, baseType: !22, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2510, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2510, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2448, file: !127, line: 325, baseType: !2516, size: 32, offset: 896)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2518)
!2518 = !{!2519, !2525, !2526}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2517, file: !122, line: 5074, baseType: !2520, size: 96)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2521)
!2521 = !{!2522, !2523, !2524}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2520, file: !226, line: 57, baseType: !229, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2520, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2520, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2517, file: !122, line: 5075, baseType: !2465, size: 64, offset: 96)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2517, file: !122, line: 5076, baseType: !2527, size: 32, offset: 160)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2528)
!2528 = !{!2529}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2527, file: !236, line: 52, baseType: !22, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2448, file: !127, line: 343, baseType: !2531, size: 64, offset: 928)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2531, file: !200, line: 63, baseType: !113, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2531, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2537, splitDebugInlining: false, nameTableKind: None)
!2536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2537 = !{!22, !104, !105}
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2540 = !{!"Ubuntu clang version 14.0.6"}
!2541 = !{i32 7, !"Dwarf Version", i32 4}
!2542 = !{i32 2, !"Debug Info Version", i32 3}
!2543 = !{i32 1, !"wchar_size", i32 4}
!2544 = !{i32 1, !"min_enum_size", i32 4}
!2545 = !{i32 1, !"branch-target-enforcement", i32 0}
!2546 = !{i32 1, !"sign-return-address", i32 0}
!2547 = !{i32 1, !"sign-return-address-all", i32 0}
!2548 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2549 = !{i32 7, !"frame-pointer", i32 2}
!2550 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2551, file: !2551, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1975, retainedNodes: !397)
!2551 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2552 = !DILocation(line: 28, column: 1, scope: !2550)
!2553 = !{i64 2151366248, i64 2151366268, i64 2151366331}
!2554 = !DILocation(line: 29, column: 1, scope: !2550)
!2555 = !{i64 2151366663, i64 2151366683, i64 2151366746}
!2556 = !DILocation(line: 30, column: 1, scope: !2550)
!2557 = !{i64 2151367082, i64 2151367102, i64 2151367165}
!2558 = !DILocation(line: 31, column: 1, scope: !2550)
!2559 = !{i64 2151367501, i64 2151367521, i64 2151367584}
!2560 = !DILocation(line: 33, column: 1, scope: !2550)
!2561 = !{i64 2151367793, i64 2151367813, i64 2151367876}
!2562 = !DILocation(line: 35, column: 1, scope: !2550)
!2563 = !{i64 2151368118, i64 2151368138, i64 2151368201}
!2564 = !DILocation(line: 50, column: 1, scope: !2550)
!2565 = !{i64 2151368545, i64 2151368565, i64 2151368628}
!2566 = !DILocation(line: 54, column: 1, scope: !2550)
!2567 = !{i64 2151368984, i64 2151369004, i64 2151369067}
!2568 = !DILocation(line: 61, column: 1, scope: !2550)
!2569 = !{i64 2151369301, i64 2151369321, i64 2151369384}
!2570 = !DILocation(line: 63, column: 1, scope: !2550)
!2571 = !{i64 2151369681, i64 2151369701, i64 2151369764}
!2572 = !DILocation(line: 64, column: 1, scope: !2550)
!2573 = !{i64 2151370203, i64 2151370223, i64 2151370286}
!2574 = !DILocation(line: 65, column: 1, scope: !2550)
!2575 = !{i64 2151370701, i64 2151370721, i64 2151370784}
!2576 = !DILocation(line: 66, column: 1, scope: !2550)
!2577 = !{i64 2151371183, i64 2151371203, i64 2151371266}
!2578 = !DILocation(line: 67, column: 1, scope: !2550)
!2579 = !{i64 2151371690, i64 2151371710, i64 2151371773}
!2580 = !DILocation(line: 68, column: 1, scope: !2550)
!2581 = !{i64 2151372178, i64 2151372198, i64 2151372261}
!2582 = !DILocation(line: 70, column: 1, scope: !2550)
!2583 = !{i64 2151372646, i64 2151372666, i64 2151372729}
!2584 = !DILocation(line: 71, column: 1, scope: !2550)
!2585 = !{i64 2151373088, i64 2151373108, i64 2151373171}
!2586 = !DILocation(line: 72, column: 1, scope: !2550)
!2587 = !{i64 2151373546, i64 2151373566, i64 2151373629}
!2588 = !DILocation(line: 79, column: 1, scope: !2550)
!2589 = !{i64 2151374000, i64 2151374020, i64 2151374083}
!2590 = !DILocation(line: 80, column: 1, scope: !2550)
!2591 = !{i64 2151374511, i64 2151374531, i64 2151374594}
!2592 = !DILocation(line: 82, column: 1, scope: !2550)
!2593 = !{i64 2151379063, i64 2151379083, i64 2151379146}
!2594 = !DILocation(line: 97, column: 1, scope: !2550)
!2595 = !{i64 2151379400, i64 2151379420, i64 2151379483}
!2596 = !DILocation(line: 99, column: 1, scope: !2550)
!2597 = !{i64 2151379618, i64 2151379638, i64 2151379701}
!2598 = !DILocation(line: 102, column: 1, scope: !2550)
!2599 = !{i64 2151379875, i64 2151379895, i64 2151379958}
!2600 = !DILocation(line: 105, column: 1, scope: !2550)
!2601 = !{i64 2151380115, i64 2151380135, i64 2151380198}
!2602 = !DILocation(line: 115, column: 1, scope: !2550)
!2603 = !{i64 2151380454, i64 2151380474, i64 2151380537}
!2604 = !DILocation(line: 118, column: 1, scope: !2550)
!2605 = !{i64 2151380798, i64 2151380818, i64 2151380881}
!2606 = !DILocation(line: 32, column: 1, scope: !2607)
!2607 = !DILexicalBlockFile(scope: !2550, file: !2608, discriminator: 0)
!2608 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2609 = !{i64 2151381154, i64 2151381174, i64 2151381237}
!2610 = !DILocation(line: 33, column: 1, scope: !2607)
!2611 = !{i64 2151381666, i64 2151381686, i64 2151381749}
!2612 = !DILocation(line: 53, column: 1, scope: !2607)
!2613 = !{i64 2151382174, i64 2151382194, i64 2151382257}
!2614 = !DILocation(line: 54, column: 1, scope: !2607)
!2615 = !{i64 2151382592, i64 2151382612, i64 2151382675}
!2616 = !DILocation(line: 55, column: 1, scope: !2607)
!2617 = !{i64 2151383010, i64 2151383030, i64 2151383093}
!2618 = !DILocation(line: 56, column: 1, scope: !2607)
!2619 = !{i64 2151383428, i64 2151383448, i64 2151383511}
!2620 = !DILocation(line: 57, column: 1, scope: !2607)
!2621 = !{i64 2151383846, i64 2151383866, i64 2151383929}
!2622 = !DILocation(line: 58, column: 1, scope: !2607)
!2623 = !{i64 2151384264, i64 2151384284, i64 2151384347}
!2624 = !DILocation(line: 59, column: 1, scope: !2607)
!2625 = !{i64 2151384682, i64 2151384702, i64 2151384765}
!2626 = !DILocation(line: 60, column: 1, scope: !2607)
!2627 = !{i64 2151385106, i64 2151385126, i64 2151385189}
!2628 = !DILocation(line: 61, column: 1, scope: !2607)
!2629 = !{i64 2151385423, i64 2151385443, i64 2151385506}
!2630 = !DILocation(line: 70, column: 1, scope: !2607)
!2631 = !{i64 2151385652, i64 2151385672, i64 2151385735}
!2632 = !DILocation(line: 72, column: 1, scope: !2607)
!2633 = !{i64 2151385984, i64 2151386004, i64 2151386067}
!2634 = !DILocation(line: 73, column: 1, scope: !2607)
!2635 = !{i64 2151386434, i64 2151386454, i64 2151386517}
!2636 = !DILocation(line: 74, column: 1, scope: !2607)
!2637 = !{i64 2151386884, i64 2151386904, i64 2151386967}
!2638 = !DILocation(line: 75, column: 1, scope: !2607)
!2639 = !{i64 2151387334, i64 2151387354, i64 2151387417}
!2640 = !DILocation(line: 76, column: 1, scope: !2607)
!2641 = !{i64 2151387784, i64 2151387804, i64 2151387867}
!2642 = !DILocation(line: 77, column: 1, scope: !2607)
!2643 = !{i64 2151388234, i64 2151388254, i64 2151388317}
!2644 = !DILocation(line: 78, column: 1, scope: !2607)
!2645 = !{i64 2151388684, i64 2151388704, i64 2151388767}
!2646 = !DILocation(line: 79, column: 1, scope: !2607)
!2647 = !{i64 2151393195, i64 2151393215, i64 2151393278}
!2648 = !DILocation(line: 80, column: 1, scope: !2607)
!2649 = !{i64 2151393648, i64 2151393668, i64 2151393731}
!2650 = !DILocation(line: 84, column: 1, scope: !2607)
!2651 = !{i64 2151393980, i64 2151394000, i64 2151394063}
!2652 = !DILocation(line: 91, column: 1, scope: !2607)
!2653 = !{i64 2151394377, i64 2151394397, i64 2151394460}
!2654 = !DILocation(line: 93, column: 1, scope: !2607)
!2655 = !{i64 2151394744, i64 2151394764, i64 2151394827}
!2656 = !DILocation(line: 106, column: 1, scope: !2607)
!2657 = !{i64 2151395014, i64 2151395034, i64 2151395097}
!2658 = !DILocation(line: 11, column: 1, scope: !2659)
!2659 = !DILexicalBlockFile(scope: !2550, file: !2660, discriminator: 0)
!2660 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2661 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2668}
!2663 = !DILocalVariable(name: "p1", arg: 1, scope: !2661, file: !120, line: 48, type: !104)
!2664 = !DILocalVariable(name: "p2", arg: 2, scope: !2661, file: !120, line: 48, type: !104)
!2665 = !DILocalVariable(name: "p3", arg: 3, scope: !2661, file: !120, line: 48, type: !104)
!2666 = !DILocalVariable(name: "m", scope: !2667, file: !120, line: 59, type: !303)
!2667 = distinct !DILexicalBlock(scope: !2661, file: !120, line: 54, column: 15)
!2668 = !DILocalVariable(name: "ret", scope: !2667, file: !120, line: 64, type: !105)
!2669 = !DILocation(line: 0, scope: !2661)
!2670 = !DILocation(line: 54, column: 2, scope: !2661)
!2671 = !DILocation(line: 59, column: 3, scope: !2667)
!2672 = !DILocation(line: 59, column: 14, scope: !2667)
!2673 = !DILocation(line: 61, column: 3, scope: !2667)
!2674 = !DILocation(line: 62, column: 23, scope: !2667)
!2675 = !DILocation(line: 62, column: 44, scope: !2667)
!2676 = !DILocation(line: 62, column: 40, scope: !2667)
!2677 = !DILocation(line: 62, column: 21, scope: !2667)
!2678 = !DILocation(line: 64, column: 35, scope: !2667)
!2679 = !DILocation(line: 64, column: 43, scope: !2667)
!2680 = !DILocation(line: 64, column: 13, scope: !2667)
!2681 = !DILocation(line: 0, scope: !2667)
!2682 = !DILocation(line: 66, column: 7, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2667, file: !120, line: 66, column: 7)
!2684 = !DILocation(line: 66, column: 7, scope: !2667)
!2685 = !DILocation(line: 67, column: 4, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2687, file: !120, line: 67, column: 4)
!2687 = distinct !DILexicalBlock(scope: !2688, file: !120, line: 67, column: 4)
!2688 = distinct !DILexicalBlock(scope: !2689, file: !120, line: 67, column: 4)
!2689 = distinct !DILexicalBlock(scope: !2690, file: !120, line: 67, column: 4)
!2690 = distinct !DILexicalBlock(scope: !2683, file: !120, line: 66, column: 12)
!2691 = !DILocation(line: 69, column: 3, scope: !2690)
!2692 = !DILocation(line: 70, column: 2, scope: !2661)
!2693 = distinct !{!2693, !2670, !2692}
!2694 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!2695 = !DILocation(line: 1677, column: 9, scope: !2694)
!2696 = !DILocation(line: 1677, column: 2, scope: !2694)
!2697 = distinct !DISubprogram(name: "k_msgq_put", scope: !2698, file: !2698, line: 1129, type: !2699, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2706)
!2698 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!105, !2701, !13, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !2704)
!2704 = !{!2705}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2703, file: !108, line: 66, baseType: !107, size: 64)
!2706 = !{!2707, !2708, !2709}
!2707 = !DILocalVariable(name: "msgq", arg: 1, scope: !2697, file: !2698, line: 1129, type: !2701)
!2708 = !DILocalVariable(name: "data", arg: 2, scope: !2697, file: !2698, line: 1129, type: !13)
!2709 = !DILocalVariable(name: "timeout", arg: 3, scope: !2697, file: !2698, line: 1129, type: !2702)
!2710 = !DILocation(line: 0, scope: !2697)
!2711 = !DILocation(line: 1139, column: 2, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2697, file: !2698, line: 1139, column: 2)
!2713 = !{i64 2151103001}
!2714 = !DILocation(line: 1140, column: 9, scope: !2697)
!2715 = !DILocation(line: 1140, column: 2, scope: !2697)
!2716 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !2717, file: !2717, line: 175, type: !2718, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2720)
!2717 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!103, !105}
!2720 = !{!2721}
!2721 = !DILocalVariable(name: "level", arg: 1, scope: !2716, file: !2717, line: 175, type: !105)
!2722 = !DILocation(line: 0, scope: !2716)
!2723 = !DILocation(line: 177, column: 2, scope: !2716)
!2724 = !DILocation(line: 189, column: 1, scope: !2716)
!2725 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !2726, file: !2726, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!2726 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2727 = !DILocation(line: 26, column: 9, scope: !2725)
!2728 = !DILocation(line: 26, column: 2, scope: !2725)
!2729 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2730)
!2730 = !{!2731, !2733}
!2731 = !DILocalVariable(name: "i", scope: !2732, file: !120, line: 228, type: !106)
!2732 = distinct !DILexicalBlock(scope: !2729, file: !120, line: 228, column: 2)
!2733 = !DILocalVariable(name: "prio", scope: !2734, file: !120, line: 235, type: !105)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !120, line: 228, column: 41)
!2735 = distinct !DILexicalBlock(scope: !2732, file: !120, line: 228, column: 2)
!2736 = !DILocation(line: 0, scope: !2732)
!2737 = !DILocation(line: 228, column: 2, scope: !2732)
!2738 = !DILocation(line: 246, column: 2, scope: !2729)
!2739 = !DILocation(line: 247, column: 1, scope: !2729)
!2740 = !DILocation(line: 235, column: 31, scope: !2734)
!2741 = !DILocation(line: 0, scope: !2734)
!2742 = !DILocation(line: 237, column: 27, scope: !2734)
!2743 = !DILocation(line: 237, column: 41, scope: !2734)
!2744 = !DILocation(line: 237, column: 33, scope: !2734)
!2745 = !DILocation(line: 237, column: 3, scope: !2734)
!2746 = !DILocation(line: 240, column: 31, scope: !2734)
!2747 = !DILocation(line: 241, column: 5, scope: !2734)
!2748 = !DILocation(line: 242, column: 16, scope: !2734)
!2749 = !DILocation(line: 240, column: 3, scope: !2734)
!2750 = !DILocation(line: 228, column: 37, scope: !2735)
!2751 = !DILocation(line: 228, column: 21, scope: !2735)
!2752 = distinct !{!2752, !2737, !2753}
!2753 = !DILocation(line: 244, column: 2, scope: !2732)
!2754 = distinct !DISubprogram(name: "k_thread_create", scope: !2698, file: !2698, line: 24, type: !2755, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2757)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !2702}
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767}
!2758 = !DILocalVariable(name: "new_thread", arg: 1, scope: !2754, file: !2698, line: 24, type: !125)
!2759 = !DILocalVariable(name: "stack", arg: 2, scope: !2754, file: !2698, line: 24, type: !245)
!2760 = !DILocalVariable(name: "stack_size", arg: 3, scope: !2754, file: !2698, line: 24, type: !111)
!2761 = !DILocalVariable(name: "entry", arg: 4, scope: !2754, file: !2698, line: 24, type: !254)
!2762 = !DILocalVariable(name: "p1", arg: 5, scope: !2754, file: !2698, line: 24, type: !104)
!2763 = !DILocalVariable(name: "p2", arg: 6, scope: !2754, file: !2698, line: 24, type: !104)
!2764 = !DILocalVariable(name: "p3", arg: 7, scope: !2754, file: !2698, line: 24, type: !104)
!2765 = !DILocalVariable(name: "prio", arg: 8, scope: !2754, file: !2698, line: 24, type: !105)
!2766 = !DILocalVariable(name: "options", arg: 9, scope: !2754, file: !2698, line: 24, type: !113)
!2767 = !DILocalVariable(name: "delay", arg: 10, scope: !2754, file: !2698, line: 24, type: !2702)
!2768 = !DILocation(line: 0, scope: !2754)
!2769 = !DILocation(line: 49, column: 2, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2754, file: !2698, line: 49, column: 2)
!2771 = !{i64 2151098613}
!2772 = !DILocation(line: 50, column: 9, scope: !2754)
!2773 = !DILocation(line: 50, column: 2, scope: !2754)
!2774 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2775)
!2775 = !{!2776, !2777, !2778, !2779, !2780, !2781, !2783, !2784, !2788}
!2776 = !DILocalVariable(name: "p1", arg: 1, scope: !2774, file: !120, line: 177, type: !104)
!2777 = !DILocalVariable(name: "p2", arg: 2, scope: !2774, file: !120, line: 177, type: !104)
!2778 = !DILocalVariable(name: "p3", arg: 3, scope: !2774, file: !120, line: 177, type: !104)
!2779 = !DILocalVariable(name: "id", scope: !2774, file: !120, line: 181, type: !105)
!2780 = !DILocalVariable(name: "m", scope: !2774, file: !120, line: 182, type: !303)
!2781 = !DILocalVariable(name: "ret", scope: !2782, file: !120, line: 188, type: !105)
!2782 = distinct !DILexicalBlock(scope: !2774, file: !120, line: 187, column: 15)
!2783 = !DILocalVariable(name: "start", scope: !2782, file: !120, line: 189, type: !113)
!2784 = !DILocalVariable(name: "i", scope: !2785, file: !120, line: 202, type: !2787)
!2785 = distinct !DILexicalBlock(scope: !2786, file: !120, line: 202, column: 4)
!2786 = distinct !DILexicalBlock(scope: !2782, file: !120, line: 201, column: 49)
!2787 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!2788 = !DILocalVariable(name: "dur", scope: !2782, file: !120, line: 206, type: !113)
!2789 = !DILocation(line: 0, scope: !2774)
!2790 = !DILocation(line: 181, column: 11, scope: !2774)
!2791 = !DILocation(line: 182, column: 2, scope: !2774)
!2792 = !DILocation(line: 182, column: 13, scope: !2774)
!2793 = !DILocation(line: 184, column: 2, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2795, file: !120, line: 184, column: 2)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !120, line: 184, column: 2)
!2796 = distinct !DILexicalBlock(scope: !2797, file: !120, line: 184, column: 2)
!2797 = distinct !DILexicalBlock(scope: !2774, file: !120, line: 184, column: 2)
!2798 = !DILocation(line: 188, column: 13, scope: !2782)
!2799 = !DILocation(line: 0, scope: !2782)
!2800 = !DILocation(line: 189, column: 20, scope: !2782)
!2801 = !DILocation(line: 191, column: 3, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2803, file: !120, line: 191, column: 3)
!2803 = distinct !DILexicalBlock(scope: !2782, file: !120, line: 191, column: 3)
!2804 = !DILocation(line: 191, column: 3, scope: !2803)
!2805 = !DILocation(line: 201, column: 10, scope: !2782)
!2806 = !DILocation(line: 201, column: 27, scope: !2782)
!2807 = !DILocation(line: 201, column: 39, scope: !2782)
!2808 = !DILocation(line: 201, column: 35, scope: !2782)
!2809 = !DILocation(line: 201, column: 3, scope: !2782)
!2810 = !DILocation(line: 191, column: 3, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2802, file: !120, line: 191, column: 3)
!2812 = !DILocation(line: 202, column: 9, scope: !2785)
!2813 = !DILocation(line: 202, column: 22, scope: !2785)
!2814 = !DILocation(line: 202, column: 29, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2785, file: !120, line: 202, column: 4)
!2816 = !DILocation(line: 202, column: 31, scope: !2815)
!2817 = !DILocation(line: 202, column: 4, scope: !2785)
!2818 = !DILocation(line: 202, column: 4, scope: !2815)
!2819 = distinct !{!2819, !2809, !2820}
!2820 = !DILocation(line: 204, column: 3, scope: !2782)
!2821 = !DILocation(line: 202, column: 39, scope: !2815)
!2822 = distinct !{!2822, !2817, !2823}
!2823 = !DILocation(line: 203, column: 4, scope: !2785)
!2824 = !DILocation(line: 206, column: 18, scope: !2782)
!2825 = !DILocation(line: 206, column: 35, scope: !2782)
!2826 = !DILocation(line: 216, column: 3, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2828, file: !120, line: 216, column: 3)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !120, line: 216, column: 3)
!2829 = distinct !DILexicalBlock(scope: !2830, file: !120, line: 216, column: 3)
!2830 = distinct !DILexicalBlock(scope: !2782, file: !120, line: 216, column: 3)
!2831 = !DILocation(line: 222, column: 34, scope: !2782)
!2832 = !DILocation(line: 222, column: 30, scope: !2782)
!2833 = !DILocation(line: 222, column: 3, scope: !2782)
!2834 = distinct !{!2834, !2835, !2836}
!2835 = !DILocation(line: 187, column: 2, scope: !2774)
!2836 = !DILocation(line: 223, column: 2, scope: !2774)
!2837 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !2838, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!274}
!2840 = !DILocation(line: 535, column: 9, scope: !2837)
!2841 = !DILocation(line: 535, column: 2, scope: !2837)
!2842 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !2698, file: !2698, line: 258, type: !2843, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2845)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!105, !274}
!2845 = !{!2846}
!2846 = !DILocalVariable(name: "thread", arg: 1, scope: !2842, file: !2698, line: 258, type: !274)
!2847 = !DILocation(line: 0, scope: !2842)
!2848 = !DILocation(line: 266, column: 2, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2842, file: !2698, line: 266, column: 2)
!2850 = !{i64 2151099497}
!2851 = !DILocation(line: 267, column: 9, scope: !2842)
!2852 = !DILocation(line: 267, column: 2, scope: !2842)
!2853 = distinct !DISubprogram(name: "k_msgq_get", scope: !2698, file: !2698, line: 1147, type: !2854, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2856)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!105, !2701, !104, !2702}
!2856 = !{!2857, !2858, !2859}
!2857 = !DILocalVariable(name: "msgq", arg: 1, scope: !2853, file: !2698, line: 1147, type: !2701)
!2858 = !DILocalVariable(name: "data", arg: 2, scope: !2853, file: !2698, line: 1147, type: !104)
!2859 = !DILocalVariable(name: "timeout", arg: 3, scope: !2853, file: !2698, line: 1147, type: !2702)
!2860 = !DILocation(line: 0, scope: !2853)
!2861 = !DILocation(line: 1157, column: 2, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2853, file: !2698, line: 1157, column: 2)
!2863 = !{i64 2151103069}
!2864 = !DILocation(line: 1158, column: 9, scope: !2853)
!2865 = !DILocation(line: 1158, column: 2, scope: !2853)
!2866 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !2867, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2870)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{null, !2869, !113}
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!2870 = !{!2871, !2872, !2873, !2874, !2875, !2878, !2879, !2880, !2881, !2882}
!2871 = !DILocalVariable(name: "m", arg: 1, scope: !2866, file: !120, line: 111, type: !2869)
!2872 = !DILocalVariable(name: "latency", arg: 2, scope: !2866, file: !120, line: 111, type: !113)
!2873 = !DILocalVariable(name: "t", scope: !2866, file: !120, line: 129, type: !105)
!2874 = !DILocalVariable(name: "lidx", scope: !2866, file: !120, line: 130, type: !105)
!2875 = !DILocalVariable(name: "hi", scope: !2876, file: !120, line: 145, type: !113)
!2876 = distinct !DILexicalBlock(scope: !2877, file: !120, line: 144, column: 32)
!2877 = distinct !DILexicalBlock(scope: !2866, file: !120, line: 144, column: 6)
!2878 = !DILocalVariable(name: "lo", scope: !2876, file: !120, line: 145, type: !113)
!2879 = !DILocalVariable(name: "mean", scope: !2876, file: !120, line: 145, type: !113)
!2880 = !DILocalVariable(name: "stdev", scope: !2876, file: !120, line: 145, type: !113)
!2881 = !DILocalVariable(name: "ret", scope: !2876, file: !120, line: 145, type: !113)
!2882 = !DILocalVariable(name: "i", scope: !2883, file: !120, line: 159, type: !105)
!2883 = distinct !DILexicalBlock(scope: !2876, file: !120, line: 159, column: 3)
!2884 = !DILocation(line: 0, scope: !2866)
!2885 = !DILocation(line: 125, column: 9, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2866, file: !120, line: 125, column: 6)
!2887 = !DILocation(line: 125, column: 13, scope: !2886)
!2888 = !DILocation(line: 125, column: 6, scope: !2866)
!2889 = !DILocation(line: 129, column: 13, scope: !2866)
!2890 = !DILocation(line: 130, column: 30, scope: !2866)
!2891 = !DILocation(line: 130, column: 34, scope: !2866)
!2892 = !DILocation(line: 132, column: 11, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2866, file: !120, line: 132, column: 6)
!2894 = !DILocation(line: 132, column: 6, scope: !2866)
!2895 = !DILocation(line: 133, column: 3, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2893, file: !120, line: 132, column: 53)
!2897 = !DILocation(line: 133, column: 36, scope: !2896)
!2898 = !DILocation(line: 134, column: 2, scope: !2896)
!2899 = !DILocation(line: 136, column: 57, scope: !2866)
!2900 = !DILocation(line: 136, column: 23, scope: !2866)
!2901 = !DILocation(line: 136, column: 2, scope: !2866)
!2902 = !DILocation(line: 136, column: 52, scope: !2866)
!2903 = !DILocation(line: 144, column: 9, scope: !2877)
!2904 = !DILocation(line: 144, column: 13, scope: !2877)
!2905 = !DILocation(line: 144, column: 6, scope: !2866)
!2906 = !DILocation(line: 145, column: 3, scope: !2876)
!2907 = !DILocation(line: 147, column: 9, scope: !2876)
!2908 = !DILocation(line: 0, scope: !2876)
!2909 = !DILocation(line: 148, column: 3, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2911, file: !120, line: 148, column: 3)
!2911 = distinct !DILexicalBlock(scope: !2876, file: !120, line: 148, column: 3)
!2912 = !DILocation(line: 148, column: 3, scope: !2911)
!2913 = !DILocation(line: 148, column: 3, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2910, file: !120, line: 148, column: 3)
!2915 = !DILocation(line: 149, column: 3, scope: !2876)
!2916 = !DILocation(line: 151, column: 42, scope: !2876)
!2917 = !DILocation(line: 151, column: 3, scope: !2876)
!2918 = !DILocation(line: 154, column: 3, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2920, file: !120, line: 154, column: 3)
!2920 = distinct !DILexicalBlock(scope: !2921, file: !120, line: 154, column: 3)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !120, line: 154, column: 3)
!2922 = distinct !DILexicalBlock(scope: !2876, file: !120, line: 154, column: 3)
!2923 = !DILocation(line: 155, column: 3, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !120, line: 155, column: 3)
!2925 = distinct !DILexicalBlock(scope: !2926, file: !120, line: 155, column: 3)
!2926 = distinct !DILexicalBlock(scope: !2927, file: !120, line: 155, column: 3)
!2927 = distinct !DILexicalBlock(scope: !2876, file: !120, line: 155, column: 3)
!2928 = !DILocation(line: 156, column: 3, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2930, file: !120, line: 156, column: 3)
!2930 = distinct !DILexicalBlock(scope: !2931, file: !120, line: 156, column: 3)
!2931 = distinct !DILexicalBlock(scope: !2932, file: !120, line: 156, column: 3)
!2932 = distinct !DILexicalBlock(scope: !2876, file: !120, line: 156, column: 3)
!2933 = !DILocation(line: 0, scope: !2883)
!2934 = !DILocation(line: 159, column: 3, scope: !2883)
!2935 = !DILocation(line: 173, column: 3, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2937, file: !120, line: 173, column: 3)
!2937 = distinct !DILexicalBlock(scope: !2938, file: !120, line: 173, column: 3)
!2938 = distinct !DILexicalBlock(scope: !2939, file: !120, line: 173, column: 3)
!2939 = distinct !DILexicalBlock(scope: !2876, file: !120, line: 173, column: 3)
!2940 = !DILocation(line: 174, column: 2, scope: !2877)
!2941 = !DILocation(line: 174, column: 2, scope: !2876)
!2942 = !DILocation(line: 160, column: 25, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2944, file: !120, line: 160, column: 8)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !120, line: 159, column: 41)
!2945 = distinct !DILexicalBlock(scope: !2883, file: !120, line: 159, column: 3)
!2946 = !DILocation(line: 160, column: 30, scope: !2943)
!2947 = !DILocation(line: 160, column: 8, scope: !2944)
!2948 = !DILocation(line: 161, column: 5, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2950, file: !120, line: 161, column: 5)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !120, line: 161, column: 5)
!2951 = distinct !DILexicalBlock(scope: !2952, file: !120, line: 161, column: 5)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !120, line: 161, column: 5)
!2953 = distinct !DILexicalBlock(scope: !2943, file: !120, line: 160, column: 36)
!2954 = !DILocation(line: 162, column: 5, scope: !2953)
!2955 = !DILocation(line: 165, column: 15, scope: !2944)
!2956 = !DILocation(line: 165, column: 4, scope: !2944)
!2957 = !DILocation(line: 169, column: 4, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2959, file: !120, line: 169, column: 4)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !120, line: 169, column: 4)
!2960 = distinct !DILexicalBlock(scope: !2961, file: !120, line: 169, column: 4)
!2961 = distinct !DILexicalBlock(scope: !2944, file: !120, line: 169, column: 4)
!2962 = !DILocation(line: 171, column: 3, scope: !2944)
!2963 = !DILocation(line: 159, column: 37, scope: !2945)
!2964 = !DILocation(line: 159, column: 21, scope: !2945)
!2965 = distinct !{!2965, !2934, !2966}
!2966 = !DILocation(line: 171, column: 3, scope: !2883)
!2967 = !DILocation(line: 175, column: 1, scope: !2866)
!2968 = distinct !DISubprogram(name: "atomic_inc", scope: !2969, file: !2969, line: 123, type: !2970, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2974)
!2969 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!2972, !2973}
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!2974 = !{!2975}
!2975 = !DILocalVariable(name: "target", arg: 1, scope: !2968, file: !2969, line: 123, type: !2973)
!2976 = !DILocation(line: 0, scope: !2968)
!2977 = !DILocation(line: 125, column: 9, scope: !2968)
!2978 = !DILocation(line: 125, column: 2, scope: !2968)
!2979 = distinct !DISubprogram(name: "k_sem_take", scope: !2698, file: !2698, line: 1044, type: !2980, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2983)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!105, !2982, !2702}
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!2983 = !{!2984, !2985}
!2984 = !DILocalVariable(name: "sem", arg: 1, scope: !2979, file: !2698, line: 1044, type: !2982)
!2985 = !DILocalVariable(name: "timeout", arg: 2, scope: !2979, file: !2698, line: 1044, type: !2702)
!2986 = !DILocation(line: 0, scope: !2979)
!2987 = !DILocation(line: 1053, column: 2, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2979, file: !2698, line: 1053, column: 2)
!2989 = !{i64 2151102661}
!2990 = !DILocation(line: 1054, column: 9, scope: !2979)
!2991 = !DILocation(line: 1054, column: 2, scope: !2979)
!2992 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !2993, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2995)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!116, !116}
!2995 = !{!2996}
!2996 = !DILocalVariable(name: "ms", arg: 1, scope: !2992, file: !122, line: 439, type: !116)
!2997 = !DILocation(line: 0, scope: !2992)
!2998 = !DILocation(line: 441, column: 9, scope: !2992)
!2999 = !DILocation(line: 441, column: 2, scope: !2992)
!3000 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3001, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3004)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{null, !3003, !113, !2011, !2011, !2011, !2011}
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!3004 = !{!3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3015, !3017}
!3005 = !DILocalVariable(name: "array", arg: 1, scope: !3000, file: !120, line: 87, type: !3003)
!3006 = !DILocalVariable(name: "n", arg: 2, scope: !3000, file: !120, line: 87, type: !113)
!3007 = !DILocalVariable(name: "lo", arg: 3, scope: !3000, file: !120, line: 88, type: !2011)
!3008 = !DILocalVariable(name: "hi", arg: 4, scope: !3000, file: !120, line: 88, type: !2011)
!3009 = !DILocalVariable(name: "mean", arg: 5, scope: !3000, file: !120, line: 88, type: !2011)
!3010 = !DILocalVariable(name: "stdev", arg: 6, scope: !3000, file: !120, line: 88, type: !2011)
!3011 = !DILocalVariable(name: "tot", scope: !3000, file: !120, line: 90, type: !114)
!3012 = !DILocalVariable(name: "totsq", scope: !3000, file: !120, line: 90, type: !114)
!3013 = !DILocalVariable(name: "i", scope: !3014, file: !120, line: 94, type: !105)
!3014 = distinct !DILexicalBlock(scope: !3000, file: !120, line: 94, column: 2)
!3015 = !DILocalVariable(name: "i", scope: !3016, file: !120, line: 102, type: !105)
!3016 = distinct !DILexicalBlock(scope: !3000, file: !120, line: 102, column: 2)
!3017 = !DILocalVariable(name: "d", scope: !3018, file: !120, line: 103, type: !109)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !120, line: 102, column: 30)
!3019 = distinct !DILexicalBlock(scope: !3016, file: !120, line: 102, column: 2)
!3020 = !DILocation(line: 0, scope: !3000)
!3021 = !DILocation(line: 92, column: 6, scope: !3000)
!3022 = !DILocation(line: 93, column: 6, scope: !3000)
!3023 = !DILocation(line: 0, scope: !3014)
!3024 = !DILocation(line: 94, column: 20, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3014, file: !120, line: 94, column: 2)
!3026 = !DILocation(line: 94, column: 2, scope: !3014)
!3027 = !DILocation(line: 100, column: 31, scope: !3000)
!3028 = !DILocation(line: 100, column: 37, scope: !3000)
!3029 = !DILocation(line: 100, column: 10, scope: !3000)
!3030 = !DILocation(line: 100, column: 8, scope: !3000)
!3031 = !DILocation(line: 0, scope: !3016)
!3032 = !DILocation(line: 102, column: 2, scope: !3016)
!3033 = !DILocation(line: 100, column: 28, scope: !3000)
!3034 = !DILocation(line: 100, column: 26, scope: !3000)
!3035 = !DILocation(line: 100, column: 39, scope: !3000)
!3036 = !DILocation(line: 95, column: 9, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3025, file: !120, line: 94, column: 30)
!3038 = !DILocation(line: 95, column: 7, scope: !3037)
!3039 = !DILocation(line: 96, column: 9, scope: !3037)
!3040 = !DILocation(line: 96, column: 7, scope: !3037)
!3041 = !DILocation(line: 97, column: 10, scope: !3037)
!3042 = !DILocation(line: 97, column: 7, scope: !3037)
!3043 = !DILocation(line: 94, column: 26, scope: !3025)
!3044 = distinct !{!3044, !3026, !3045}
!3045 = !DILocation(line: 98, column: 2, scope: !3014)
!3046 = !DILocation(line: 108, column: 24, scope: !3000)
!3047 = !DILocation(line: 108, column: 35, scope: !3000)
!3048 = !DILocation(line: 108, column: 11, scope: !3000)
!3049 = !DILocation(line: 108, column: 9, scope: !3000)
!3050 = !DILocation(line: 109, column: 1, scope: !3000)
!3051 = !DILocation(line: 103, column: 26, scope: !3018)
!3052 = !DILocation(line: 103, column: 35, scope: !3018)
!3053 = !DILocation(line: 103, column: 15, scope: !3018)
!3054 = !DILocation(line: 0, scope: !3018)
!3055 = !DILocation(line: 105, column: 14, scope: !3018)
!3056 = !DILocation(line: 105, column: 9, scope: !3018)
!3057 = !DILocation(line: 102, column: 26, scope: !3019)
!3058 = !DILocation(line: 102, column: 20, scope: !3019)
!3059 = distinct !{!3059, !3032, !3060}
!3060 = !DILocation(line: 106, column: 2, scope: !3016)
!3061 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3062, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3064)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!113, !114}
!3064 = !{!3065, !3066, !3069}
!3065 = !DILocalVariable(name: "n", arg: 1, scope: !3061, file: !120, line: 76, type: !114)
!3066 = !DILocalVariable(name: "lo", scope: !3067, file: !120, line: 79, type: !114)
!3067 = distinct !DILexicalBlock(scope: !3068, file: !120, line: 78, column: 13)
!3068 = distinct !DILexicalBlock(scope: !3061, file: !120, line: 78, column: 6)
!3069 = !DILocalVariable(name: "hi", scope: !3067, file: !120, line: 80, type: !114)
!3070 = !DILocation(line: 0, scope: !3061)
!3071 = !DILocation(line: 78, column: 8, scope: !3068)
!3072 = !DILocation(line: 78, column: 6, scope: !3061)
!3073 = !DILocation(line: 85, column: 1, scope: !3061)
!3074 = !DILocation(line: 79, column: 25, scope: !3067)
!3075 = !DILocation(line: 79, column: 17, scope: !3067)
!3076 = !DILocation(line: 79, column: 31, scope: !3067)
!3077 = !DILocation(line: 0, scope: !3067)
!3078 = !DILocation(line: 80, column: 20, scope: !3067)
!3079 = !DILocation(line: 82, column: 26, scope: !3067)
!3080 = !DILocation(line: 82, column: 32, scope: !3067)
!3081 = !DILocation(line: 82, column: 21, scope: !3067)
!3082 = distinct !DISubprogram(name: "k_sleep", scope: !2698, file: !2698, line: 91, type: !3083, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3085)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{!116, !2702}
!3085 = !{!3086}
!3086 = !DILocalVariable(name: "timeout", arg: 1, scope: !3082, file: !2698, line: 91, type: !2702)
!3087 = !DILocation(line: 0, scope: !3082)
!3088 = !DILocation(line: 99, column: 2, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3082, file: !2698, line: 99, column: 2)
!3090 = !{i64 2151098817}
!3091 = !DILocation(line: 100, column: 9, scope: !3082)
!3092 = !DILocation(line: 100, column: 2, scope: !3082)
!3093 = distinct !DISubprogram(name: "atomic_add", scope: !2969, file: !2969, line: 86, type: !3094, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3096)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!2972, !2973, !2972}
!3096 = !{!3097, !3098}
!3097 = !DILocalVariable(name: "target", arg: 1, scope: !3093, file: !2969, line: 86, type: !2973)
!3098 = !DILocalVariable(name: "value", arg: 2, scope: !3093, file: !2969, line: 86, type: !2972)
!3099 = !DILocation(line: 0, scope: !3093)
!3100 = !DILocation(line: 88, column: 9, scope: !3093)
!3101 = !DILocation(line: 88, column: 2, scope: !3093)
!3102 = distinct !DISubprogram(name: "z_current_get", scope: !2698, file: !2698, line: 173, type: !2838, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3103 = !DILocation(line: 180, column: 2, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3102, file: !2698, line: 180, column: 2)
!3105 = !{i64 2151099157}
!3106 = !DILocation(line: 181, column: 9, scope: !3102)
!3107 = !DILocation(line: 181, column: 2, scope: !3102)
!3108 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3109)
!3109 = !{!3110, !3111, !3112}
!3110 = !DILocalVariable(name: "cyc_per_tick", scope: !3108, file: !360, line: 90, type: !114)
!3111 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3108, file: !360, line: 91, type: !114)
!3112 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3108, file: !360, line: 92, type: !114)
!3113 = !DILocation(line: 0, scope: !3108)
!3114 = !DILocation(line: 94, column: 15, scope: !3108)
!3115 = !DILocation(line: 96, column: 2, scope: !3108)
!3116 = !DILocation(line: 97, column: 1, scope: !3108)
!3117 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3118)
!3118 = !{!3119, !3120, !3121, !3129}
!3119 = !DILocalVariable(name: "t", arg: 1, scope: !3117, file: !360, line: 54, type: !383)
!3120 = !DILocalVariable(name: "timestamp", scope: !3117, file: !360, line: 57, type: !113)
!3121 = !DILocalVariable(name: "m", scope: !3117, file: !360, line: 58, type: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3127, !3128}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3122, file: !304, line: 46, baseType: !113, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3122, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3122, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3122, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3122, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3129 = !DILocalVariable(name: "ret", scope: !3117, file: !360, line: 65, type: !105)
!3130 = !DILocation(line: 0, scope: !3117)
!3131 = !DILocation(line: 56, column: 2, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !360, line: 56, column: 2)
!3133 = distinct !DILexicalBlock(scope: !3117, file: !360, line: 56, column: 2)
!3134 = !DILocation(line: 56, column: 2, scope: !3133)
!3135 = !DILocation(line: 56, column: 2, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3132, file: !360, line: 56, column: 2)
!3137 = !DILocation(line: 57, column: 23, scope: !3117)
!3138 = !DILocation(line: 58, column: 2, scope: !3117)
!3139 = !DILocation(line: 58, column: 13, scope: !3117)
!3140 = !DILocation(line: 60, column: 17, scope: !3117)
!3141 = !DILocation(line: 60, column: 4, scope: !3117)
!3142 = !DILocation(line: 60, column: 8, scope: !3117)
!3143 = !DILocation(line: 61, column: 4, scope: !3117)
!3144 = !DILocation(line: 61, column: 14, scope: !3117)
!3145 = !DILocation(line: 62, column: 13, scope: !3117)
!3146 = !DILocation(line: 62, column: 22, scope: !3117)
!3147 = !DILocation(line: 62, column: 4, scope: !3117)
!3148 = !DILocation(line: 62, column: 11, scope: !3117)
!3149 = !DILocation(line: 63, column: 15, scope: !3117)
!3150 = !DILocation(line: 63, column: 26, scope: !3117)
!3151 = !DILocation(line: 63, column: 24, scope: !3117)
!3152 = !DILocation(line: 63, column: 4, scope: !3117)
!3153 = !DILocation(line: 63, column: 13, scope: !3117)
!3154 = !DILocation(line: 65, column: 12, scope: !3117)
!3155 = !DILocation(line: 67, column: 10, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3117, file: !360, line: 67, column: 6)
!3157 = !DILocation(line: 67, column: 6, scope: !3117)
!3158 = !DILocation(line: 68, column: 3, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3156, file: !360, line: 67, column: 16)
!3160 = !DILocation(line: 69, column: 2, scope: !3159)
!3161 = !DILocation(line: 71, column: 8, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3117, file: !360, line: 71, column: 6)
!3163 = !DILocation(line: 71, column: 12, scope: !3162)
!3164 = !DILocation(line: 71, column: 6, scope: !3117)
!3165 = !DILocation(line: 72, column: 3, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !360, line: 71, column: 26)
!3167 = !DILocation(line: 73, column: 2, scope: !3166)
!3168 = !DILocation(line: 74, column: 1, scope: !3117)
!3169 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3170 = !DILocation(line: 1677, column: 9, scope: !3169)
!3171 = !DILocation(line: 1677, column: 2, scope: !3169)
!3172 = !DILocation(line: 40, column: 7, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3174 = !DILocation(line: 40, column: 6, scope: !394)
!3175 = !DILocation(line: 41, column: 22, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3173, file: !360, line: 40, column: 14)
!3177 = !DILocation(line: 41, column: 12, scope: !3176)
!3178 = !DILocation(line: 41, column: 40, scope: !3176)
!3179 = !DILocation(line: 42, column: 2, scope: !3176)
!3180 = !DILocation(line: 45, column: 10, scope: !394)
!3181 = !DILocation(line: 45, column: 16, scope: !394)
!3182 = !DILocation(line: 45, column: 41, scope: !394)
!3183 = !DILocation(line: 45, column: 8, scope: !394)
!3184 = !DILocation(line: 46, column: 26, scope: !394)
!3185 = !DILocation(line: 46, column: 9, scope: !394)
!3186 = !DILocation(line: 46, column: 2, scope: !394)
!3187 = distinct !DISubprogram(name: "k_msgq_put", scope: !2698, file: !2698, line: 1129, type: !3188, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3195)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!105, !3190, !13, !3191}
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3193)
!3193 = !{!3194}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3192, file: !108, line: 66, baseType: !107, size: 64)
!3195 = !{!3196, !3197, !3198}
!3196 = !DILocalVariable(name: "msgq", arg: 1, scope: !3187, file: !2698, line: 1129, type: !3190)
!3197 = !DILocalVariable(name: "data", arg: 2, scope: !3187, file: !2698, line: 1129, type: !13)
!3198 = !DILocalVariable(name: "timeout", arg: 3, scope: !3187, file: !2698, line: 1129, type: !3191)
!3199 = !DILocation(line: 0, scope: !3187)
!3200 = !DILocation(line: 1139, column: 2, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3187, file: !2698, line: 1139, column: 2)
!3202 = !{i64 2151101264}
!3203 = !DILocation(line: 1140, column: 9, scope: !3187)
!3204 = !DILocation(line: 1140, column: 2, scope: !3187)
!3205 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3206)
!3206 = !{!3207}
!3207 = !DILocalVariable(name: "ticks", scope: !3205, file: !360, line: 78, type: !113)
!3208 = !DILocation(line: 78, column: 19, scope: !3205)
!3209 = !DILocation(line: 78, column: 28, scope: !3205)
!3210 = !DILocation(line: 0, scope: !3205)
!3211 = !DILocation(line: 80, column: 45, scope: !3205)
!3212 = !DILocation(line: 80, column: 2, scope: !3205)
!3213 = !DILocation(line: 81, column: 1, scope: !3205)
!3214 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !2726, file: !2726, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3215 = !DILocation(line: 26, column: 9, scope: !3214)
!3216 = !DILocation(line: 26, column: 2, scope: !3214)
!3217 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !3218, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3221)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{null, !3220}
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 32)
!3221 = !{!3222, !3223}
!3222 = !DILocalVariable(name: "m", arg: 1, scope: !3217, file: !360, line: 99, type: !3220)
!3223 = !DILocalVariable(name: "ret", scope: !3217, file: !360, line: 101, type: !105)
!3224 = !DILocation(line: 0, scope: !3217)
!3225 = !DILocation(line: 101, column: 33, scope: !3217)
!3226 = !DILocation(line: 101, column: 12, scope: !3217)
!3227 = !DILocation(line: 103, column: 2, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !360, line: 103, column: 2)
!3229 = distinct !DILexicalBlock(scope: !3217, file: !360, line: 103, column: 2)
!3230 = !DILocation(line: 103, column: 2, scope: !3229)
!3231 = !DILocation(line: 103, column: 2, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3228, file: !360, line: 103, column: 2)
!3233 = !DILocation(line: 104, column: 1, scope: !3217)
!3234 = distinct !DISubprogram(name: "k_msgq_get", scope: !2698, file: !2698, line: 1147, type: !3235, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3237)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!105, !3190, !104, !3191}
!3237 = !{!3238, !3239, !3240}
!3238 = !DILocalVariable(name: "msgq", arg: 1, scope: !3234, file: !2698, line: 1147, type: !3190)
!3239 = !DILocalVariable(name: "data", arg: 2, scope: !3234, file: !2698, line: 1147, type: !104)
!3240 = !DILocalVariable(name: "timeout", arg: 3, scope: !3234, file: !2698, line: 1147, type: !3191)
!3241 = !DILocation(line: 0, scope: !3234)
!3242 = !DILocation(line: 1157, column: 2, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3234, file: !2698, line: 1157, column: 2)
!3244 = !{i64 2151101332}
!3245 = !DILocation(line: 1158, column: 9, scope: !3234)
!3246 = !DILocation(line: 1158, column: 2, scope: !3234)
!3247 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !3248, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3257)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!105, !104, !111, !113, !269, !3250}
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3251, line: 99, baseType: !3252)
!3251 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3251, line: 40, baseType: !3253)
!3253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !3254)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3255)
!3255 = !{!3256}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3254, file: !434, line: 18, baseType: !104, size: 32)
!3257 = !{!3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3293, !3302, !3305, !3306, !3309, !3312, !3315, !3318, !3324}
!3258 = !DILocalVariable(name: "packaged", arg: 1, scope: !3247, file: !434, line: 233, type: !104)
!3259 = !DILocalVariable(name: "len", arg: 2, scope: !3247, file: !434, line: 233, type: !111)
!3260 = !DILocalVariable(name: "flags", arg: 3, scope: !3247, file: !434, line: 233, type: !113)
!3261 = !DILocalVariable(name: "fmt", arg: 4, scope: !3247, file: !434, line: 234, type: !269)
!3262 = !DILocalVariable(name: "ap", arg: 5, scope: !3247, file: !434, line: 234, type: !3250)
!3263 = !DILocalVariable(name: "buf0", scope: !3247, file: !434, line: 247, type: !432)
!3264 = !DILocalVariable(name: "buf", scope: !3247, file: !434, line: 248, type: !432)
!3265 = !DILocalVariable(name: "size", scope: !3247, file: !434, line: 249, type: !32)
!3266 = !DILocalVariable(name: "align", scope: !3247, file: !434, line: 250, type: !32)
!3267 = !DILocalVariable(name: "str_ptr_pos", scope: !3247, file: !434, line: 251, type: !3268)
!3268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!3269 = !DILocalVariable(name: "str_ptr_arg", scope: !3247, file: !434, line: 252, type: !3268)
!3270 = !DILocalVariable(name: "s_idx", scope: !3247, file: !434, line: 253, type: !32)
!3271 = !DILocalVariable(name: "s_rw_cnt", scope: !3247, file: !434, line: 254, type: !32)
!3272 = !DILocalVariable(name: "s_ro_cnt", scope: !3247, file: !434, line: 255, type: !32)
!3273 = !DILocalVariable(name: "arg_idx", scope: !3247, file: !434, line: 256, type: !105)
!3274 = !DILocalVariable(name: "i", scope: !3247, file: !434, line: 257, type: !32)
!3275 = !DILocalVariable(name: "s", scope: !3247, file: !434, line: 258, type: !269)
!3276 = !DILocalVariable(name: "parsing", scope: !3247, file: !434, line: 259, type: !540)
!3277 = !DILocalVariable(name: "rws_pos_en", scope: !3247, file: !434, line: 263, type: !540)
!3278 = !DILocalVariable(name: "fros_cnt", scope: !3247, file: !434, line: 268, type: !105)
!3279 = !DILocalVariable(name: "is_str_arg", scope: !3247, file: !434, line: 269, type: !540)
!3280 = !DILocalVariable(name: "pkg_hdr", scope: !3247, file: !434, line: 270, type: !3281)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 32)
!3282 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3283, line: 78, size: 32, elements: !3284)
!3283 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3284 = !{!3285, !3292}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3282, file: !3283, line: 80, baseType: !3286, size: 32)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3283, line: 45, size: 32, elements: !3287)
!3287 = !{!3288, !3289, !3290, !3291}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3286, file: !3283, line: 47, baseType: !169, size: 8)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3286, file: !3283, line: 50, baseType: !169, size: 8, offset: 8)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3286, file: !3283, line: 53, baseType: !169, size: 8, offset: 16)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3286, file: !3283, line: 56, baseType: !169, size: 8, offset: 24)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3282, file: !3283, line: 82, baseType: !104, size: 32)
!3293 = !DILocalVariable(name: "v", scope: !3294, file: !434, line: 567, type: !3298)
!3294 = distinct !DILexicalBlock(scope: !3295, file: !434, line: 562, column: 14)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !434, line: 481, column: 18)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !434, line: 466, column: 3)
!3297 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 343, column: 15)
!3298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3247, file: !434, line: 567, size: 64, elements: !3299)
!3299 = !{!3300, !3301}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3298, file: !434, line: 567, baseType: !426, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3298, file: !434, line: 567, baseType: !424, size: 64)
!3302 = !DILocalVariable(name: "is_ro", scope: !3303, file: !434, line: 620, type: !540)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !434, line: 613, column: 19)
!3304 = distinct !DILexicalBlock(scope: !3297, file: !434, line: 613, column: 7)
!3305 = !DILocalVariable(name: "do_ro", scope: !3303, file: !434, line: 621, type: !540)
!3306 = !DILocalVariable(name: "s_ptr_idx", scope: !3307, file: !434, line: 626, type: !113)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !434, line: 625, column: 11)
!3308 = distinct !DILexicalBlock(scope: !3303, file: !434, line: 623, column: 8)
!3309 = !DILocalVariable(name: "v", scope: !3310, file: !434, line: 684, type: !105)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !434, line: 683, column: 35)
!3311 = distinct !DILexicalBlock(scope: !3304, file: !434, line: 683, column: 14)
!3312 = !DILocalVariable(name: "v", scope: !3313, file: !434, line: 691, type: !106)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !434, line: 690, column: 36)
!3314 = distinct !DILexicalBlock(scope: !3311, file: !434, line: 690, column: 14)
!3315 = !DILocalVariable(name: "v", scope: !3316, file: !434, line: 698, type: !110)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !434, line: 697, column: 41)
!3317 = distinct !DILexicalBlock(scope: !3314, file: !434, line: 697, column: 14)
!3318 = !DILocalVariable(name: "pos", scope: !3319, file: !434, line: 762, type: !169)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !434, line: 757, column: 31)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !434, line: 757, column: 3)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !434, line: 757, column: 3)
!3322 = distinct !DILexicalBlock(scope: !3323, file: !434, line: 756, column: 16)
!3323 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 756, column: 6)
!3324 = !DILabel(scope: !3303, name: "process_string", file: !434, line: 615)
!3325 = !DILocation(line: 0, scope: !3247)
!3326 = !DILocation(line: 251, column: 2, scope: !3247)
!3327 = !DILocation(line: 251, column: 10, scope: !3247)
!3328 = !DILocation(line: 252, column: 2, scope: !3247)
!3329 = !DILocation(line: 252, column: 10, scope: !3247)
!3330 = !DILocation(line: 263, column: 29, scope: !3247)
!3331 = !DILocation(line: 263, column: 21, scope: !3247)
!3332 = !DILocation(line: 268, column: 21, scope: !3247)
!3333 = !DILocation(line: 268, column: 19, scope: !3247)
!3334 = !DILocation(line: 273, column: 6, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 273, column: 6)
!3336 = !DILocation(line: 273, column: 26, scope: !3335)
!3337 = !DILocation(line: 273, column: 6, scope: !3247)
!3338 = !DILocation(line: 297, column: 6, scope: !3247)
!3339 = !DILocation(line: 305, column: 11, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 305, column: 6)
!3341 = !DILocation(line: 305, column: 6, scope: !3247)
!3342 = !DILocation(line: 327, column: 19, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 327, column: 6)
!3344 = !DILocation(line: 327, column: 22, scope: !3343)
!3345 = !DILocation(line: 327, column: 33, scope: !3343)
!3346 = !DILocation(line: 327, column: 50, scope: !3343)
!3347 = !DILocation(line: 327, column: 6, scope: !3247)
!3348 = !DILocation(line: 338, column: 9, scope: !3247)
!3349 = !DILocation(line: 341, column: 2, scope: !3247)
!3350 = !DILocation(line: 472, column: 8, scope: !3296)
!3351 = !DILocation(line: 473, column: 14, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !434, line: 473, column: 9)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !434, line: 472, column: 18)
!3354 = distinct !DILexicalBlock(scope: !3296, file: !434, line: 472, column: 8)
!3355 = !DILocation(line: 473, column: 9, scope: !3353)
!3356 = !DILocation(line: 479, column: 5, scope: !3353)
!3357 = !DILocation(line: 468, column: 9, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3296, file: !434, line: 468, column: 8)
!3359 = !DILocation(line: 468, column: 8, scope: !3358)
!3360 = !DILocation(line: 468, column: 15, scope: !3358)
!3361 = !DILocation(line: 468, column: 8, scope: !3296)
!3362 = distinct !{!3362, !3363, !3364}
!3363 = !DILocation(line: 343, column: 2, scope: !3247)
!3364 = !DILocation(line: 712, column: 2, scope: !3247)
!3365 = !DILocation(line: 481, column: 4, scope: !3296)
!3366 = !DILocation(line: 484, column: 12, scope: !3295)
!3367 = !DILocation(line: 485, column: 5, scope: !3295)
!3368 = !DILocation(line: 505, column: 5, scope: !3295)
!3369 = !DILocation(line: 518, column: 5, scope: !3295)
!3370 = !DILocation(line: 523, column: 5, scope: !3295)
!3371 = !DILocation(line: 532, column: 9, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3295, file: !434, line: 532, column: 9)
!3373 = !DILocation(line: 532, column: 17, scope: !3372)
!3374 = !DILocation(line: 532, column: 9, scope: !3295)
!3375 = !DILocation(line: 533, column: 10, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3377, file: !434, line: 533, column: 10)
!3377 = distinct !DILexicalBlock(scope: !3372, file: !434, line: 532, column: 25)
!3378 = !DILocation(line: 533, column: 18, scope: !3376)
!3379 = !DILocation(line: 0, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3294, file: !434, line: 569, column: 9)
!3381 = !DILocation(line: 0, scope: !3294)
!3382 = !DILocation(line: 579, column: 20, scope: !3294)
!3383 = !DILocation(line: 579, column: 11, scope: !3294)
!3384 = !DILocation(line: 580, column: 9, scope: !3294)
!3385 = !DILocation(line: 582, column: 21, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !434, line: 582, column: 10)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !434, line: 580, column: 23)
!3388 = distinct !DILexicalBlock(scope: !3294, file: !434, line: 580, column: 9)
!3389 = !DILocation(line: 582, column: 28, scope: !3386)
!3390 = !DILocation(line: 582, column: 10, scope: !3387)
!3391 = !DILocation(line: 0, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !434, line: 587, column: 17)
!3393 = distinct !DILexicalBlock(scope: !3387, file: !434, line: 585, column: 10)
!3394 = !DILocation(line: 593, column: 9, scope: !3294)
!3395 = !DILocation(line: 600, column: 5, scope: !3295)
!3396 = !DILocation(line: 605, column: 18, scope: !3297)
!3397 = !DILocation(line: 605, column: 9, scope: !3297)
!3398 = !DILocation(line: 608, column: 20, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3297, file: !434, line: 608, column: 7)
!3400 = !DILocation(line: 608, column: 23, scope: !3399)
!3401 = !DILocation(line: 608, column: 34, scope: !3399)
!3402 = !DILocation(line: 608, column: 41, scope: !3399)
!3403 = !DILocation(line: 608, column: 7, scope: !3297)
!3404 = !DILocation(line: 613, column: 7, scope: !3297)
!3405 = !DILocation(line: 614, column: 8, scope: !3303)
!3406 = !DILocation(line: 614, column: 4, scope: !3303)
!3407 = !DILocation(line: 256, column: 6, scope: !3247)
!3408 = !DILocation(line: 254, column: 15, scope: !3247)
!3409 = !DILocation(line: 320, column: 7, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3340, file: !434, line: 305, column: 20)
!3411 = !DILocation(line: 615, column: 1, scope: !3303)
!3412 = !DILocation(line: 616, column: 8, scope: !3303)
!3413 = !DILocation(line: 617, column: 5, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !434, line: 616, column: 22)
!3415 = distinct !DILexicalBlock(scope: !3303, file: !434, line: 616, column: 8)
!3416 = !DILocation(line: 617, column: 25, scope: !3414)
!3417 = !DILocation(line: 618, column: 4, scope: !3414)
!3418 = !DILocation(line: 620, column: 26, scope: !3303)
!3419 = !DILocation(line: 620, column: 29, scope: !3303)
!3420 = !DILocation(line: 620, column: 17, scope: !3303)
!3421 = !DILocation(line: 620, column: 43, scope: !3303)
!3422 = !DILocation(line: 0, scope: !3303)
!3423 = !DILocation(line: 623, column: 14, scope: !3308)
!3424 = !DILocation(line: 626, column: 26, scope: !3307)
!3425 = !DILocation(line: 626, column: 37, scope: !3307)
!3426 = !DILocation(line: 0, scope: !3307)
!3427 = !DILocation(line: 634, column: 15, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3307, file: !434, line: 634, column: 9)
!3429 = !DILocation(line: 635, column: 6, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !434, line: 635, column: 6)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !434, line: 635, column: 6)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !434, line: 635, column: 6)
!3433 = distinct !DILexicalBlock(scope: !3428, file: !434, line: 634, column: 44)
!3434 = !DILocation(line: 639, column: 15, scope: !3435)
!3435 = distinct !DILexicalBlock(scope: !3307, file: !434, line: 639, column: 9)
!3436 = !DILocation(line: 639, column: 9, scope: !3307)
!3437 = !DILocation(line: 640, column: 6, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !434, line: 640, column: 6)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !434, line: 640, column: 6)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !434, line: 640, column: 6)
!3441 = distinct !DILexicalBlock(scope: !3435, file: !434, line: 639, column: 43)
!3442 = !DILocation(line: 644, column: 9, scope: !3307)
!3443 = !DILocation(line: 649, column: 27, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !434, line: 644, column: 23)
!3445 = distinct !DILexicalBlock(scope: !3307, file: !434, line: 644, column: 9)
!3446 = !DILocation(line: 649, column: 6, scope: !3444)
!3447 = !DILocation(line: 649, column: 25, scope: !3444)
!3448 = !DILocation(line: 650, column: 27, scope: !3444)
!3449 = !DILocation(line: 650, column: 6, scope: !3444)
!3450 = !DILocation(line: 650, column: 25, scope: !3444)
!3451 = !DILocation(line: 651, column: 10, scope: !3444)
!3452 = !DILocation(line: 653, column: 26, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3454, file: !434, line: 651, column: 17)
!3454 = distinct !DILexicalBlock(scope: !3444, file: !434, line: 651, column: 10)
!3455 = !DILocation(line: 654, column: 15, scope: !3453)
!3456 = !DILocation(line: 655, column: 6, scope: !3453)
!3457 = !DILocation(line: 656, column: 15, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3454, file: !434, line: 655, column: 13)
!3459 = !DILocation(line: 658, column: 16, scope: !3445)
!3460 = !DILocation(line: 663, column: 10, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !434, line: 658, column: 23)
!3462 = distinct !DILexicalBlock(scope: !3445, file: !434, line: 658, column: 16)
!3463 = !DILocation(line: 664, column: 5, scope: !3461)
!3464 = !DILocation(line: 664, column: 16, scope: !3462)
!3465 = !DILocation(line: 669, column: 10, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !434, line: 664, column: 28)
!3467 = distinct !DILexicalBlock(scope: !3462, file: !434, line: 664, column: 16)
!3468 = !DILocation(line: 670, column: 5, scope: !3466)
!3469 = !DILocation(line: 675, column: 13, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3467, file: !434, line: 670, column: 12)
!3471 = !DILocation(line: 675, column: 27, scope: !3470)
!3472 = !DILocation(line: 675, column: 10, scope: !3470)
!3473 = !DILocation(line: 678, column: 10, scope: !3307)
!3474 = !DILocation(line: 680, column: 8, scope: !3303)
!3475 = !DILocation(line: 683, column: 14, scope: !3304)
!3476 = !DILocation(line: 684, column: 12, scope: !3310)
!3477 = !DILocation(line: 0, scope: !3310)
!3478 = !DILocation(line: 686, column: 8, scope: !3310)
!3479 = !DILocation(line: 687, column: 5, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3481, file: !434, line: 686, column: 22)
!3481 = distinct !DILexicalBlock(scope: !3310, file: !434, line: 686, column: 8)
!3482 = !DILocation(line: 687, column: 17, scope: !3480)
!3483 = !DILocation(line: 688, column: 4, scope: !3480)
!3484 = !DILocation(line: 698, column: 18, scope: !3316)
!3485 = !DILocation(line: 0, scope: !3316)
!3486 = !DILocation(line: 700, column: 8, scope: !3316)
!3487 = !DILocation(line: 704, column: 6, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !434, line: 703, column: 12)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !434, line: 701, column: 9)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !434, line: 700, column: 22)
!3491 = distinct !DILexicalBlock(scope: !3316, file: !434, line: 700, column: 8)
!3492 = !DILocation(line: 704, column: 24, scope: !3488)
!3493 = !DILocation(line: 706, column: 4, scope: !3490)
!3494 = !DILocation(line: 709, column: 4, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !434, line: 709, column: 4)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !434, line: 709, column: 4)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !434, line: 709, column: 4)
!3498 = distinct !DILexicalBlock(scope: !3317, file: !434, line: 708, column: 10)
!3499 = !DILocation(line: 0, scope: !3311)
!3500 = !DILocation(line: 0, scope: !3297)
!3501 = !DILocation(line: 720, column: 6, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 720, column: 6)
!3503 = !DILocation(line: 720, column: 17, scope: !3502)
!3504 = !DILocation(line: 720, column: 31, scope: !3502)
!3505 = !DILocation(line: 720, column: 6, scope: !3247)
!3506 = !DILocation(line: 721, column: 3, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !434, line: 721, column: 3)
!3508 = distinct !DILexicalBlock(scope: !3509, file: !434, line: 721, column: 3)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !434, line: 721, column: 3)
!3510 = distinct !DILexicalBlock(scope: !3502, file: !434, line: 720, column: 38)
!3511 = !DILocation(line: 729, column: 6, scope: !3247)
!3512 = !DILocation(line: 730, column: 21, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !434, line: 729, column: 20)
!3514 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 729, column: 6)
!3515 = !DILocation(line: 730, column: 27, scope: !3513)
!3516 = !DILocation(line: 730, column: 3, scope: !3513)
!3517 = !DILocation(line: 737, column: 22, scope: !3247)
!3518 = !DILocation(line: 737, column: 20, scope: !3247)
!3519 = !DILocation(line: 0, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 739, column: 6)
!3521 = !DILocation(line: 745, column: 17, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3520, file: !434, line: 743, column: 9)
!3523 = !DILocation(line: 745, column: 25, scope: !3522)
!3524 = !DILocation(line: 746, column: 17, scope: !3522)
!3525 = !DILocation(line: 746, column: 28, scope: !3522)
!3526 = !DILocation(line: 749, column: 29, scope: !3247)
!3527 = !DILocation(line: 749, column: 16, scope: !3247)
!3528 = !DILocation(line: 749, column: 27, scope: !3247)
!3529 = !DILocation(line: 756, column: 6, scope: !3323)
!3530 = !DILocation(line: 756, column: 6, scope: !3247)
!3531 = !DILocation(line: 757, column: 3, scope: !3321)
!3532 = !DILocation(line: 758, column: 10, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3319, file: !434, line: 758, column: 8)
!3534 = !DILocation(line: 758, column: 25, scope: !3533)
!3535 = !DILocation(line: 758, column: 8, scope: !3319)
!3536 = !DILocation(line: 0, scope: !3319)
!3537 = !DILocation(line: 765, column: 8, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3319, file: !434, line: 765, column: 8)
!3539 = !DILocation(line: 765, column: 19, scope: !3538)
!3540 = !DILocation(line: 765, column: 23, scope: !3538)
!3541 = !DILocation(line: 765, column: 8, scope: !3319)
!3542 = !DILocation(line: 762, column: 33, scope: !3319)
!3543 = !DILocation(line: 769, column: 8, scope: !3319)
!3544 = !DILocation(line: 769, column: 11, scope: !3319)
!3545 = !DILocation(line: 757, column: 27, scope: !3320)
!3546 = !DILocation(line: 757, column: 17, scope: !3320)
!3547 = distinct !{!3547, !3531, !3548}
!3548 = !DILocation(line: 770, column: 3, scope: !3321)
!3549 = !DILocation(line: 774, column: 16, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !434, line: 774, column: 2)
!3551 = distinct !DILexicalBlock(scope: !3247, file: !434, line: 774, column: 2)
!3552 = !DILocation(line: 774, column: 2, scope: !3551)
!3553 = !DILocation(line: 776, column: 16, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !434, line: 776, column: 7)
!3555 = distinct !DILexicalBlock(scope: !3550, file: !434, line: 774, column: 30)
!3556 = !DILocation(line: 776, column: 19, scope: !3554)
!3557 = !DILocation(line: 776, column: 34, scope: !3554)
!3558 = !DILocation(line: 776, column: 7, scope: !3555)
!3559 = !DILocation(line: 780, column: 7, scope: !3555)
!3560 = !DILocation(line: 782, column: 13, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !434, line: 780, column: 19)
!3562 = distinct !DILexicalBlock(scope: !3555, file: !434, line: 780, column: 7)
!3563 = !DILocation(line: 782, column: 8, scope: !3561)
!3564 = !DILocation(line: 782, column: 11, scope: !3561)
!3565 = !DILocation(line: 783, column: 3, scope: !3561)
!3566 = !DILocation(line: 785, column: 26, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3562, file: !434, line: 783, column: 10)
!3568 = !DILocation(line: 785, column: 41, scope: !3567)
!3569 = !DILocation(line: 785, column: 24, scope: !3567)
!3570 = !DILocation(line: 785, column: 8, scope: !3567)
!3571 = !DILocation(line: 787, column: 52, scope: !3567)
!3572 = !DILocation(line: 789, column: 11, scope: !3567)
!3573 = !DILocation(line: 789, column: 21, scope: !3567)
!3574 = !DILocation(line: 0, scope: !3562)
!3575 = !DILocation(line: 793, column: 7, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3555, file: !434, line: 793, column: 7)
!3577 = !DILocation(line: 793, column: 18, scope: !3576)
!3578 = !DILocation(line: 793, column: 22, scope: !3576)
!3579 = !DILocation(line: 793, column: 29, scope: !3576)
!3580 = !DILocation(line: 793, column: 7, scope: !3555)
!3581 = !DILocation(line: 797, column: 12, scope: !3555)
!3582 = !DILocation(line: 797, column: 7, scope: !3555)
!3583 = !DILocation(line: 797, column: 10, scope: !3555)
!3584 = !DILocation(line: 799, column: 3, scope: !3555)
!3585 = !DILocation(line: 800, column: 7, scope: !3555)
!3586 = !DILocation(line: 801, column: 2, scope: !3555)
!3587 = !DILocation(line: 338, column: 4, scope: !3247)
!3588 = !DILocation(line: 774, column: 26, scope: !3550)
!3589 = distinct !{!3589, !3552, !3590}
!3590 = !DILocation(line: 801, column: 2, scope: !3551)
!3591 = !DILocation(line: 808, column: 9, scope: !3247)
!3592 = !DILocation(line: 808, column: 2, scope: !3247)
!3593 = !DILocation(line: 813, column: 1, scope: !3247)
!3594 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !3595, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3597)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!540, !269}
!3597 = !{!3598}
!3598 = !DILocalVariable(name: "addr", arg: 1, scope: !3594, file: !434, line: 33, type: !269)
!3599 = !DILocation(line: 0, scope: !3594)
!3600 = !DILocation(line: 41, column: 9, scope: !3594)
!3601 = !DILocation(line: 41, column: 2, scope: !3594)
!3602 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3603, file: !3603, line: 24, type: !3604, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3606)
!3603 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!540, !13}
!3606 = !{!3607}
!3607 = !DILocalVariable(name: "addr", arg: 1, scope: !3602, file: !3603, line: 24, type: !13)
!3608 = !DILocation(line: 0, scope: !3602)
!3609 = !DILocation(line: 49, column: 30, scope: !3602)
!3610 = !DILocation(line: 49, column: 57, scope: !3602)
!3611 = !DILocation(line: 49, column: 2, scope: !3602)
!3612 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !3613, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3615)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!105, !104, !111, !113, !269, null}
!3615 = !{!3616, !3617, !3618, !3619, !3620, !3621}
!3616 = !DILocalVariable(name: "packaged", arg: 1, scope: !3612, file: !434, line: 815, type: !104)
!3617 = !DILocalVariable(name: "len", arg: 2, scope: !3612, file: !434, line: 815, type: !111)
!3618 = !DILocalVariable(name: "flags", arg: 3, scope: !3612, file: !434, line: 815, type: !113)
!3619 = !DILocalVariable(name: "format", arg: 4, scope: !3612, file: !434, line: 816, type: !269)
!3620 = !DILocalVariable(name: "ap", scope: !3612, file: !434, line: 818, type: !3250)
!3621 = !DILocalVariable(name: "ret", scope: !3612, file: !434, line: 819, type: !105)
!3622 = !DILocation(line: 0, scope: !3612)
!3623 = !DILocation(line: 818, column: 2, scope: !3612)
!3624 = !DILocation(line: 818, column: 10, scope: !3612)
!3625 = !DILocation(line: 821, column: 2, scope: !3612)
!3626 = !DILocation(line: 822, column: 8, scope: !3612)
!3627 = !DILocation(line: 823, column: 2, scope: !3612)
!3628 = !DILocation(line: 825, column: 1, scope: !3612)
!3629 = !DILocation(line: 824, column: 2, scope: !3612)
!3630 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !3631, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3641)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!105, !3633, !3637, !104, !104}
!3633 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3283, line: 297, baseType: !3634)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 32)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!105, null}
!3637 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3283, line: 328, baseType: !3638)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 32)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!105, !3633, !104, !269, !3250}
!3641 = !{!3642, !3643, !3644, !3645, !3646, !3647, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660}
!3642 = !DILocalVariable(name: "out", arg: 1, scope: !3630, file: !434, line: 827, type: !3633)
!3643 = !DILocalVariable(name: "formatter", arg: 2, scope: !3630, file: !434, line: 828, type: !3637)
!3644 = !DILocalVariable(name: "ctx", arg: 3, scope: !3630, file: !434, line: 829, type: !104)
!3645 = !DILocalVariable(name: "packaged", arg: 4, scope: !3630, file: !434, line: 829, type: !104)
!3646 = !DILocalVariable(name: "buf", scope: !3630, file: !434, line: 831, type: !432)
!3647 = !DILocalVariable(name: "hdr", scope: !3630, file: !434, line: 832, type: !3648)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 32)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3283, line: 96, size: 64, elements: !3650)
!3650 = !{!3651, !3652}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3649, file: !3283, line: 98, baseType: !3282, size: 32)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3649, file: !3283, line: 101, baseType: !102, size: 32, offset: 32)
!3653 = !DILocalVariable(name: "s", scope: !3630, file: !434, line: 833, type: !102)
!3654 = !DILocalVariable(name: "ps", scope: !3630, file: !434, line: 833, type: !431)
!3655 = !DILocalVariable(name: "i", scope: !3630, file: !434, line: 834, type: !32)
!3656 = !DILocalVariable(name: "args_size", scope: !3630, file: !434, line: 834, type: !32)
!3657 = !DILocalVariable(name: "s_nbr", scope: !3630, file: !434, line: 834, type: !32)
!3658 = !DILocalVariable(name: "ros_nbr", scope: !3630, file: !434, line: 834, type: !32)
!3659 = !DILocalVariable(name: "rws_nbr", scope: !3630, file: !434, line: 834, type: !32)
!3660 = !DILocalVariable(name: "s_idx", scope: !3630, file: !434, line: 834, type: !32)
!3661 = !DILocation(line: 0, scope: !3630)
!3662 = !DILocation(line: 836, column: 10, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3630, file: !434, line: 836, column: 6)
!3664 = !DILocation(line: 836, column: 6, scope: !3630)
!3665 = !DILocation(line: 842, column: 28, scope: !3630)
!3666 = !DILocation(line: 842, column: 14, scope: !3630)
!3667 = !DILocation(line: 852, column: 16, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !434, line: 852, column: 2)
!3669 = distinct !DILexicalBlock(scope: !3630, file: !434, line: 852, column: 2)
!3670 = !DILocation(line: 852, column: 2, scope: !3669)
!3671 = !DILocation(line: 841, column: 28, scope: !3630)
!3672 = !DILocation(line: 841, column: 14, scope: !3630)
!3673 = !DILocation(line: 841, column: 32, scope: !3630)
!3674 = !DILocation(line: 847, column: 19, scope: !3630)
!3675 = !DILocation(line: 843, column: 28, scope: !3630)
!3676 = !DILocation(line: 843, column: 14, scope: !3630)
!3677 = !DILocation(line: 847, column: 31, scope: !3630)
!3678 = !DILocation(line: 844, column: 28, scope: !3630)
!3679 = !DILocation(line: 844, column: 14, scope: !3630)
!3680 = !DILocation(line: 847, column: 45, scope: !3630)
!3681 = !DILocation(line: 847, column: 41, scope: !3630)
!3682 = !DILocation(line: 854, column: 24, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3668, file: !434, line: 852, column: 30)
!3684 = !DILocation(line: 854, column: 11, scope: !3683)
!3685 = !DILocation(line: 855, column: 30, scope: !3683)
!3686 = !DILocation(line: 855, column: 22, scope: !3683)
!3687 = !DILocation(line: 855, column: 8, scope: !3683)
!3688 = !DILocation(line: 857, column: 7, scope: !3683)
!3689 = !DILocation(line: 859, column: 8, scope: !3683)
!3690 = !DILocation(line: 859, column: 18, scope: !3683)
!3691 = !DILocation(line: 859, column: 5, scope: !3683)
!3692 = !DILocation(line: 852, column: 26, scope: !3668)
!3693 = distinct !{!3693, !3670, !3694}
!3694 = !DILocation(line: 860, column: 2, scope: !3669)
!3695 = !DILocation(line: 863, column: 6, scope: !3630)
!3696 = !DILocation(line: 866, column: 56, scope: !3630)
!3697 = !DILocation(line: 866, column: 9, scope: !3630)
!3698 = !DILocation(line: 866, column: 2, scope: !3630)
!3699 = !DILocation(line: 867, column: 1, scope: !3630)
!3700 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !3701, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3703)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!105, !3633, !3637, !104, !269, !104}
!3703 = !{!3704, !3705, !3706, !3707, !3708, !3709}
!3704 = !DILocalVariable(name: "out", arg: 1, scope: !3700, file: !434, line: 179, type: !3633)
!3705 = !DILocalVariable(name: "formatter", arg: 2, scope: !3700, file: !434, line: 180, type: !3637)
!3706 = !DILocalVariable(name: "ctx", arg: 3, scope: !3700, file: !434, line: 181, type: !104)
!3707 = !DILocalVariable(name: "fmt", arg: 4, scope: !3700, file: !434, line: 182, type: !269)
!3708 = !DILocalVariable(name: "buf", arg: 5, scope: !3700, file: !434, line: 182, type: !104)
!3709 = !DILocalVariable(name: "u", scope: !3700, file: !434, line: 187, type: !3710)
!3710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3700, file: !434, line: 184, size: 32, elements: !3711)
!3711 = !{!3712, !3713}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3710, file: !434, line: 185, baseType: !3250, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3710, file: !434, line: 186, baseType: !104, size: 32)
!3714 = !DILocation(line: 0, scope: !3700)
!3715 = !DILocation(line: 191, column: 9, scope: !3700)
!3716 = !DILocation(line: 191, column: 2, scope: !3700)
!3717 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !3718, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3720)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{!540, !269, !105}
!3720 = !{!3721, !3722, !3723, !3724, !3725}
!3721 = !DILocalVariable(name: "fmt", arg: 1, scope: !3717, file: !434, line: 881, type: !269)
!3722 = !DILocalVariable(name: "n", arg: 2, scope: !3717, file: !434, line: 881, type: !105)
!3723 = !DILocalVariable(name: "c", scope: !3717, file: !434, line: 883, type: !103)
!3724 = !DILocalVariable(name: "mod", scope: !3717, file: !434, line: 884, type: !540)
!3725 = !DILocalVariable(name: "cnt", scope: !3717, file: !434, line: 885, type: !105)
!3726 = !DILocation(line: 0, scope: !3717)
!3727 = !DILocation(line: 887, column: 14, scope: !3717)
!3728 = !DILocation(line: 887, column: 22, scope: !3717)
!3729 = !DILocation(line: 887, column: 2, scope: !3717)
!3730 = !DILocation(line: 887, column: 18, scope: !3717)
!3731 = !DILocation(line: 888, column: 7, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3717, file: !434, line: 887, column: 31)
!3733 = !DILocation(line: 889, column: 12, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !434, line: 889, column: 8)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !434, line: 888, column: 12)
!3736 = distinct !DILexicalBlock(scope: !3732, file: !434, line: 888, column: 7)
!3737 = !DILocation(line: 889, column: 8, scope: !3735)
!3738 = !DILocation(line: 890, column: 11, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !434, line: 890, column: 9)
!3740 = distinct !DILexicalBlock(scope: !3734, file: !434, line: 889, column: 18)
!3741 = !DILocation(line: 890, column: 9, scope: !3740)
!3742 = !DILocation(line: 892, column: 16, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3739, file: !434, line: 892, column: 16)
!3744 = !DILocation(line: 892, column: 16, scope: !3739)
!3745 = !DILocation(line: 895, column: 15, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3734, file: !434, line: 895, column: 15)
!3747 = !DILocation(line: 895, column: 15, scope: !3734)
!3748 = !DILocation(line: 900, column: 9, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3732, file: !434, line: 900, column: 7)
!3750 = !DILocation(line: 900, column: 7, scope: !3732)
!3751 = distinct !{!3751, !3729, !3752}
!3752 = !DILocation(line: 903, column: 2, scope: !3717)
!3753 = !DILocation(line: 906, column: 1, scope: !3717)
!3754 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !3755, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3757)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!540, !103}
!3757 = !{!3758}
!3758 = !DILocalVariable(name: "c", arg: 1, scope: !3754, file: !434, line: 873, type: !103)
!3759 = !DILocation(line: 0, scope: !3754)
!3760 = !DILocation(line: 875, column: 19, scope: !3754)
!3761 = !DILocation(line: 875, column: 2, scope: !3754)
!3762 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !3763, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3769)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!105, !104, !111, !3765, !104, !113, !2012, !111}
!3765 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3283, line: 308, baseType: !3766)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 32)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!105, !13, !111, !104}
!3769 = !{!3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3787, !3788, !3789, !3790, !3791, !3797, !3800, !3801, !3802, !3804, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3820, !3823, !3824, !3825, !3826, !3827, !3828, !3830, !3833, !3834, !3835}
!3770 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3762, file: !434, line: 908, type: !104)
!3771 = !DILocalVariable(name: "in_len", arg: 2, scope: !3762, file: !434, line: 909, type: !111)
!3772 = !DILocalVariable(name: "cb", arg: 3, scope: !3762, file: !434, line: 910, type: !3765)
!3773 = !DILocalVariable(name: "ctx", arg: 4, scope: !3762, file: !434, line: 911, type: !104)
!3774 = !DILocalVariable(name: "flags", arg: 5, scope: !3762, file: !434, line: 912, type: !113)
!3775 = !DILocalVariable(name: "strl", arg: 6, scope: !3762, file: !434, line: 913, type: !2012)
!3776 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3762, file: !434, line: 914, type: !111)
!3777 = !DILocalVariable(name: "buf", scope: !3762, file: !434, line: 918, type: !432)
!3778 = !DILocalVariable(name: "buf32", scope: !3762, file: !434, line: 919, type: !2011)
!3779 = !DILocalVariable(name: "args_size", scope: !3762, file: !434, line: 920, type: !32)
!3780 = !DILocalVariable(name: "ros_nbr", scope: !3762, file: !434, line: 920, type: !32)
!3781 = !DILocalVariable(name: "rws_nbr", scope: !3762, file: !434, line: 920, type: !32)
!3782 = !DILocalVariable(name: "fmt_present", scope: !3762, file: !434, line: 921, type: !540)
!3783 = !DILocalVariable(name: "rw_cpy", scope: !3762, file: !434, line: 922, type: !540)
!3784 = !DILocalVariable(name: "ro_cpy", scope: !3762, file: !434, line: 923, type: !540)
!3785 = !DILocalVariable(name: "in_desc", scope: !3762, file: !434, line: 924, type: !3786)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 32)
!3787 = !DILocalVariable(name: "out_len", scope: !3762, file: !434, line: 960, type: !105)
!3788 = !DILocalVariable(name: "fmt", scope: !3762, file: !434, line: 965, type: !269)
!3789 = !DILocalVariable(name: "str_pos", scope: !3762, file: !434, line: 966, type: !432)
!3790 = !DILocalVariable(name: "strl_cnt", scope: !3762, file: !434, line: 967, type: !111)
!3791 = !DILocalVariable(name: "i", scope: !3792, file: !434, line: 973, type: !105)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !434, line: 973, column: 4)
!3793 = distinct !DILexicalBlock(scope: !3794, file: !434, line: 972, column: 15)
!3794 = distinct !DILexicalBlock(scope: !3795, file: !434, line: 972, column: 7)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !434, line: 970, column: 18)
!3796 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 970, column: 6)
!3797 = !DILocalVariable(name: "str", scope: !3798, file: !434, line: 974, type: !269)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !434, line: 973, column: 38)
!3799 = distinct !DILexicalBlock(scope: !3792, file: !434, line: 973, column: 4)
!3800 = !DILocalVariable(name: "len", scope: !3798, file: !434, line: 975, type: !105)
!3801 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3795, file: !434, line: 990, type: !540)
!3802 = !DILocalVariable(name: "i", scope: !3803, file: !434, line: 995, type: !105)
!3803 = distinct !DILexicalBlock(scope: !3795, file: !434, line: 995, column: 3)
!3804 = !DILocalVariable(name: "arg_idx", scope: !3805, file: !434, line: 996, type: !169)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !434, line: 995, column: 37)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !434, line: 995, column: 3)
!3807 = !DILocalVariable(name: "arg_pos", scope: !3805, file: !434, line: 997, type: !169)
!3808 = !DILocalVariable(name: "str", scope: !3805, file: !434, line: 998, type: !269)
!3809 = !DILocalVariable(name: "is_ro", scope: !3805, file: !434, line: 999, type: !540)
!3810 = !DILocalVariable(name: "len", scope: !3805, file: !434, line: 1000, type: !105)
!3811 = !DILocalVariable(name: "out_desc", scope: !3762, file: !434, line: 1038, type: !3286)
!3812 = !DILocalVariable(name: "cpy_str_pos", scope: !3762, file: !434, line: 1040, type: !3268)
!3813 = !DILocalVariable(name: "keep_str_pos", scope: !3762, file: !434, line: 1042, type: !3268)
!3814 = !DILocalVariable(name: "scpy_cnt", scope: !3762, file: !434, line: 1043, type: !169)
!3815 = !DILocalVariable(name: "keep_cnt", scope: !3762, file: !434, line: 1044, type: !169)
!3816 = !DILocalVariable(name: "dst", scope: !3762, file: !434, line: 1045, type: !432)
!3817 = !DILocalVariable(name: "rv", scope: !3762, file: !434, line: 1046, type: !105)
!3818 = !DILocalVariable(name: "i", scope: !3819, file: !434, line: 1074, type: !105)
!3819 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1074, column: 2)
!3820 = !DILocalVariable(name: "arg_idx", scope: !3821, file: !434, line: 1075, type: !169)
!3821 = distinct !DILexicalBlock(scope: !3822, file: !434, line: 1074, column: 36)
!3822 = distinct !DILexicalBlock(scope: !3819, file: !434, line: 1074, column: 2)
!3823 = !DILocalVariable(name: "arg_pos", scope: !3821, file: !434, line: 1076, type: !169)
!3824 = !DILocalVariable(name: "str", scope: !3821, file: !434, line: 1077, type: !269)
!3825 = !DILocalVariable(name: "is_ro", scope: !3821, file: !434, line: 1078, type: !540)
!3826 = !DILocalVariable(name: "in_desc_backup", scope: !3762, file: !434, line: 1114, type: !3286)
!3827 = !DILocalVariable(name: "strs_len", scope: !3762, file: !434, line: 1134, type: !111)
!3828 = !DILocalVariable(name: "i", scope: !3829, file: !434, line: 1143, type: !105)
!3829 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1143, column: 2)
!3830 = !DILocalVariable(name: "loc", scope: !3831, file: !434, line: 1144, type: !169)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !434, line: 1143, column: 37)
!3832 = distinct !DILexicalBlock(scope: !3829, file: !434, line: 1143, column: 2)
!3833 = !DILocalVariable(name: "str", scope: !3831, file: !434, line: 1145, type: !269)
!3834 = !DILocalVariable(name: "str_len", scope: !3831, file: !434, line: 1146, type: !183)
!3835 = !DILabel(scope: !3836, name: "calculate_string_length", file: !434, line: 1021)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !434, line: 1020, column: 56)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !434, line: 1020, column: 15)
!3838 = distinct !DILexicalBlock(scope: !3805, file: !434, line: 1014, column: 8)
!3839 = !DILocation(line: 0, scope: !3762)
!3840 = !DILocation(line: 916, column: 2, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !434, line: 916, column: 2)
!3842 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 916, column: 2)
!3843 = !DILocation(line: 916, column: 2, scope: !3842)
!3844 = !DILocation(line: 916, column: 2, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3841, file: !434, line: 916, column: 2)
!3846 = !DILocation(line: 919, column: 20, scope: !3762)
!3847 = !DILocation(line: 921, column: 27, scope: !3762)
!3848 = !DILocation(line: 921, column: 21, scope: !3762)
!3849 = !DILocation(line: 926, column: 18, scope: !3762)
!3850 = !DILocation(line: 926, column: 11, scope: !3762)
!3851 = !DILocation(line: 926, column: 34, scope: !3762)
!3852 = !DILocation(line: 931, column: 21, scope: !3762)
!3853 = !DILocation(line: 931, column: 12, scope: !3762)
!3854 = !DILocation(line: 932, column: 11, scope: !3762)
!3855 = !DILocation(line: 932, column: 19, scope: !3762)
!3856 = !DILocation(line: 938, column: 21, scope: !3762)
!3857 = !DILocation(line: 938, column: 12, scope: !3762)
!3858 = !DILocation(line: 939, column: 19, scope: !3762)
!3859 = !DILocation(line: 939, column: 23, scope: !3762)
!3860 = !DILocation(line: 946, column: 14, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 946, column: 6)
!3862 = !DILocation(line: 947, column: 7, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !434, line: 947, column: 7)
!3864 = distinct !DILexicalBlock(scope: !3861, file: !434, line: 946, column: 26)
!3865 = !DILocation(line: 947, column: 7, scope: !3864)
!3866 = !DILocation(line: 948, column: 4, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3863, file: !434, line: 947, column: 11)
!3868 = !DILocation(line: 949, column: 3, scope: !3867)
!3869 = !DILocation(line: 958, column: 23, scope: !3762)
!3870 = !DILocation(line: 958, column: 14, scope: !3762)
!3871 = !DILocation(line: 958, column: 27, scope: !3762)
!3872 = !DILocation(line: 965, column: 41, scope: !3762)
!3873 = !DILocation(line: 965, column: 20, scope: !3762)
!3874 = !DILocation(line: 966, column: 22, scope: !3762)
!3875 = !DILocation(line: 970, column: 9, scope: !3796)
!3876 = !DILocation(line: 970, column: 6, scope: !3762)
!3877 = !DILocation(line: 972, column: 7, scope: !3795)
!3878 = !DILocation(line: 0, scope: !3792)
!3879 = !DILocation(line: 973, column: 4, scope: !3792)
!3880 = !DILocation(line: 974, column: 46, scope: !3798)
!3881 = !DILocation(line: 974, column: 40, scope: !3798)
!3882 = !DILocation(line: 974, column: 23, scope: !3798)
!3883 = !DILocation(line: 0, scope: !3798)
!3884 = !DILocation(line: 975, column: 15, scope: !3798)
!3885 = !DILocation(line: 978, column: 14, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3798, file: !434, line: 978, column: 9)
!3887 = !DILocation(line: 979, column: 25, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3886, file: !434, line: 978, column: 38)
!3889 = !DILocation(line: 979, column: 19, scope: !3888)
!3890 = !DILocation(line: 979, column: 6, scope: !3888)
!3891 = !DILocation(line: 979, column: 23, scope: !3888)
!3892 = !DILocation(line: 980, column: 5, scope: !3888)
!3893 = !DILocation(line: 981, column: 13, scope: !3798)
!3894 = !DILocation(line: 982, column: 12, scope: !3798)
!3895 = !DILocation(line: 973, column: 34, scope: !3799)
!3896 = !DILocation(line: 973, column: 22, scope: !3799)
!3897 = distinct !{!3897, !3879, !3898}
!3898 = !DILocation(line: 983, column: 4, scope: !3792)
!3899 = !DILocation(line: 985, column: 16, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3901, file: !434, line: 985, column: 8)
!3901 = distinct !DILexicalBlock(scope: !3794, file: !434, line: 984, column: 10)
!3902 = !DILocation(line: 967, column: 9, scope: !3762)
!3903 = !DILocation(line: 971, column: 11, scope: !3795)
!3904 = !DILocation(line: 0, scope: !3795)
!3905 = !DILocation(line: 0, scope: !3803)
!3906 = !DILocation(line: 995, column: 21, scope: !3806)
!3907 = !DILocation(line: 995, column: 3, scope: !3803)
!3908 = !DILocation(line: 990, column: 34, scope: !3795)
!3909 = !DILocation(line: 990, column: 26, scope: !3795)
!3910 = !DILocation(line: 996, column: 30, scope: !3805)
!3911 = !DILocation(line: 0, scope: !3805)
!3912 = !DILocation(line: 997, column: 30, scope: !3805)
!3913 = !DILocation(line: 997, column: 22, scope: !3805)
!3914 = !DILocation(line: 998, column: 39, scope: !3805)
!3915 = !DILocation(line: 998, column: 22, scope: !3805)
!3916 = !DILocation(line: 999, column: 17, scope: !3805)
!3917 = !DILocation(line: 1002, column: 20, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3805, file: !434, line: 1002, column: 8)
!3919 = !DILocation(line: 996, column: 22, scope: !3805)
!3920 = !DILocation(line: 1002, column: 35, scope: !3918)
!3921 = !DILocation(line: 1002, column: 23, scope: !3918)
!3922 = !DILocation(line: 1002, column: 8, scope: !3805)
!3923 = !DILocation(line: 1003, column: 5, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3925, file: !434, line: 1003, column: 5)
!3925 = distinct !DILexicalBlock(scope: !3926, file: !434, line: 1003, column: 5)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !434, line: 1003, column: 5)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !434, line: 1003, column: 5)
!3928 = distinct !DILexicalBlock(scope: !3918, file: !434, line: 1002, column: 45)
!3929 = !DILocation(line: 1010, column: 13, scope: !3928)
!3930 = !DILocation(line: 1011, column: 5, scope: !3928)
!3931 = !DILocation(line: 1014, column: 8, scope: !3805)
!3932 = !DILocation(line: 1015, column: 9, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3838, file: !434, line: 1014, column: 15)
!3934 = !DILocation(line: 1018, column: 14, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !434, line: 1017, column: 12)
!3936 = distinct !DILexicalBlock(scope: !3933, file: !434, line: 1015, column: 9)
!3937 = !DILocation(line: 1020, column: 4, scope: !3933)
!3938 = !DILocation(line: 1020, column: 15, scope: !3838)
!3939 = !DILocation(line: 1021, column: 1, scope: !3836)
!3940 = !DILocation(line: 1022, column: 11, scope: !3836)
!3941 = !DILocation(line: 1025, column: 14, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3836, file: !434, line: 1025, column: 9)
!3943 = !DILocation(line: 1026, column: 25, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3942, file: !434, line: 1025, column: 38)
!3945 = !DILocation(line: 1026, column: 19, scope: !3944)
!3946 = !DILocation(line: 1026, column: 6, scope: !3944)
!3947 = !DILocation(line: 1026, column: 23, scope: !3944)
!3948 = !DILocation(line: 1027, column: 5, scope: !3944)
!3949 = !DILocation(line: 1031, column: 21, scope: !3836)
!3950 = !DILocation(line: 1031, column: 13, scope: !3836)
!3951 = !DILocation(line: 1032, column: 4, scope: !3836)
!3952 = !DILocation(line: 995, column: 33, scope: !3806)
!3953 = distinct !{!3953, !3907, !3954}
!3954 = !DILocation(line: 1033, column: 3, scope: !3803)
!3955 = !DILocation(line: 1040, column: 10, scope: !3762)
!3956 = !DILocation(line: 1042, column: 10, scope: !3762)
!3957 = !DILocation(line: 1052, column: 6, scope: !3762)
!3958 = !DILocation(line: 1055, column: 9, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3960, file: !434, line: 1052, column: 14)
!3960 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1052, column: 6)
!3961 = !DILocation(line: 1056, column: 2, scope: !3959)
!3962 = !DILocation(line: 1056, column: 21, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3960, file: !434, line: 1056, column: 13)
!3964 = !DILocation(line: 1066, column: 3, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3966, file: !434, line: 1065, column: 11)
!3966 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1065, column: 6)
!3967 = !DILocation(line: 1067, column: 2, scope: !3965)
!3968 = !DILocation(line: 1068, column: 10, scope: !3762)
!3969 = !DILocation(line: 0, scope: !3819)
!3970 = !DILocation(line: 1074, column: 20, scope: !3822)
!3971 = !DILocation(line: 1074, column: 2, scope: !3819)
!3972 = !DILocation(line: 1110, column: 24, scope: !3762)
!3973 = !DILocation(line: 1053, column: 12, scope: !3959)
!3974 = !DILocation(line: 1054, column: 12, scope: !3959)
!3975 = !DILocation(line: 1108, column: 30, scope: !3762)
!3976 = !DILocation(line: 1108, column: 40, scope: !3762)
!3977 = !DILocation(line: 1108, column: 38, scope: !3762)
!3978 = !DILocation(line: 1109, column: 31, scope: !3762)
!3979 = !DILocation(line: 1109, column: 24, scope: !3762)
!3980 = !DILocation(line: 1110, column: 31, scope: !3762)
!3981 = !DILocation(line: 1114, column: 31, scope: !3762)
!3982 = !DILocation(line: 1114, column: 48, scope: !3762)
!3983 = !DILocation(line: 1115, column: 13, scope: !3762)
!3984 = !DILocation(line: 1118, column: 7, scope: !3762)
!3985 = !DILocation(line: 1119, column: 9, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1119, column: 6)
!3987 = !DILocation(line: 1119, column: 6, scope: !3762)
!3988 = !DILocation(line: 1075, column: 29, scope: !3821)
!3989 = !DILocation(line: 1075, column: 21, scope: !3821)
!3990 = !DILocation(line: 0, scope: !3821)
!3991 = !DILocation(line: 1076, column: 29, scope: !3821)
!3992 = !DILocation(line: 1076, column: 21, scope: !3821)
!3993 = !DILocation(line: 1077, column: 38, scope: !3821)
!3994 = !DILocation(line: 1077, column: 21, scope: !3821)
!3995 = !DILocation(line: 1078, column: 16, scope: !3821)
!3996 = !DILocation(line: 1080, column: 19, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3821, file: !434, line: 1080, column: 7)
!3998 = !DILocation(line: 1080, column: 34, scope: !3997)
!3999 = !DILocation(line: 1080, column: 22, scope: !3997)
!4000 = !DILocation(line: 1080, column: 7, scope: !3821)
!4001 = !DILocation(line: 1084, column: 7, scope: !3821)
!4002 = !DILocation(line: 1085, column: 8, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !434, line: 1084, column: 14)
!4004 = distinct !DILexicalBlock(scope: !3821, file: !434, line: 1084, column: 7)
!4005 = !DILocation(line: 1086, column: 5, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !434, line: 1086, column: 5)
!4007 = distinct !DILexicalBlock(scope: !4008, file: !434, line: 1086, column: 5)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !434, line: 1085, column: 49)
!4009 = distinct !DILexicalBlock(scope: !4003, file: !434, line: 1085, column: 8)
!4010 = !DILocation(line: 1086, column: 5, scope: !4007)
!4011 = !DILocation(line: 1086, column: 5, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4006, file: !434, line: 1086, column: 5)
!4013 = !DILocation(line: 1087, column: 25, scope: !4008)
!4014 = !DILocation(line: 1087, column: 5, scope: !4008)
!4015 = !DILocation(line: 1088, column: 4, scope: !4008)
!4016 = !DILocation(line: 1088, column: 15, scope: !4009)
!4017 = !DILocation(line: 1089, column: 5, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !434, line: 1089, column: 5)
!4019 = distinct !DILexicalBlock(scope: !4020, file: !434, line: 1089, column: 5)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !434, line: 1088, column: 61)
!4021 = distinct !DILexicalBlock(scope: !4009, file: !434, line: 1088, column: 15)
!4022 = !DILocation(line: 1089, column: 5, scope: !4019)
!4023 = !DILocation(line: 1089, column: 5, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4018, file: !434, line: 1089, column: 5)
!4025 = !DILocation(line: 1090, column: 26, scope: !4020)
!4026 = !DILocation(line: 1090, column: 5, scope: !4020)
!4027 = !DILocation(line: 1091, column: 4, scope: !4020)
!4028 = !DILocation(line: 1095, column: 8, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4004, file: !434, line: 1094, column: 10)
!4030 = !DILocation(line: 1096, column: 5, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !434, line: 1096, column: 5)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !434, line: 1096, column: 5)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !434, line: 1095, column: 49)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !434, line: 1095, column: 8)
!4035 = !DILocation(line: 1096, column: 5, scope: !4032)
!4036 = !DILocation(line: 1096, column: 5, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 1096, column: 5)
!4038 = !DILocation(line: 1097, column: 25, scope: !4033)
!4039 = !DILocation(line: 1097, column: 5, scope: !4033)
!4040 = !DILocation(line: 1098, column: 4, scope: !4033)
!4041 = !DILocation(line: 1099, column: 5, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !434, line: 1099, column: 5)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !434, line: 1099, column: 5)
!4044 = distinct !DILexicalBlock(scope: !4034, file: !434, line: 1098, column: 11)
!4045 = !DILocation(line: 1099, column: 5, scope: !4043)
!4046 = !DILocation(line: 1099, column: 5, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4042, file: !434, line: 1099, column: 5)
!4048 = !DILocation(line: 1100, column: 26, scope: !4044)
!4049 = !DILocation(line: 1100, column: 5, scope: !4044)
!4050 = !DILocation(line: 1100, column: 30, scope: !4044)
!4051 = !DILocation(line: 1101, column: 26, scope: !4044)
!4052 = !DILocation(line: 1101, column: 5, scope: !4044)
!4053 = !DILocation(line: 0, scope: !4004)
!4054 = !DILocation(line: 1074, column: 32, scope: !3822)
!4055 = distinct !{!4055, !3971, !4056}
!4056 = !DILocation(line: 1104, column: 2, scope: !3819)
!4057 = !DILocation(line: 1124, column: 13, scope: !3762)
!4058 = !DILocation(line: 1127, column: 10, scope: !3762)
!4059 = !DILocation(line: 1127, column: 7, scope: !3762)
!4060 = !DILocation(line: 1128, column: 9, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1128, column: 6)
!4062 = !DILocation(line: 1128, column: 6, scope: !3762)
!4063 = !DILocation(line: 1134, column: 27, scope: !3762)
!4064 = !DILocation(line: 1136, column: 7, scope: !3762)
!4065 = !DILocation(line: 1137, column: 9, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !3762, file: !434, line: 1137, column: 6)
!4067 = !DILocation(line: 1137, column: 6, scope: !3762)
!4068 = !DILocation(line: 1131, column: 10, scope: !3762)
!4069 = !DILocation(line: 1140, column: 10, scope: !3762)
!4070 = !DILocation(line: 0, scope: !3829)
!4071 = !DILocation(line: 1143, column: 20, scope: !3832)
!4072 = !DILocation(line: 1143, column: 2, scope: !3829)
!4073 = !DILocation(line: 1144, column: 3, scope: !3831)
!4074 = !DILocation(line: 1144, column: 17, scope: !3831)
!4075 = !DILocation(line: 0, scope: !3831)
!4076 = !DILocation(line: 1144, column: 11, scope: !3831)
!4077 = !DILocation(line: 1145, column: 38, scope: !3831)
!4078 = !DILocation(line: 1145, column: 21, scope: !3831)
!4079 = !DILocation(line: 1146, column: 22, scope: !3831)
!4080 = !DILocation(line: 1146, column: 29, scope: !3831)
!4081 = !DILocation(line: 1148, column: 8, scope: !3831)
!4082 = !DILocation(line: 1149, column: 10, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !3831, file: !434, line: 1149, column: 7)
!4084 = !DILocation(line: 1149, column: 7, scope: !3831)
!4085 = !DILocation(line: 1154, column: 8, scope: !3831)
!4086 = !DILocation(line: 1155, column: 10, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3831, file: !434, line: 1155, column: 7)
!4088 = !DILocation(line: 1155, column: 7, scope: !3831)
!4089 = !DILocation(line: 1159, column: 2, scope: !3832)
!4090 = !DILocation(line: 1152, column: 11, scope: !3831)
!4091 = !DILocation(line: 1158, column: 11, scope: !3831)
!4092 = !DILocation(line: 1143, column: 33, scope: !3832)
!4093 = distinct !{!4093, !4072, !4094}
!4094 = !DILocation(line: 1159, column: 2, scope: !3829)
!4095 = !DILocation(line: 1162, column: 8, scope: !3762)
!4096 = !DILocation(line: 1164, column: 2, scope: !3762)
!4097 = !DILocation(line: 1165, column: 1, scope: !3762)
!4098 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4099, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!111, !104}
!4101 = !{!4102, !4103, !4104, !4105, !4106, !4107, !4108}
!4102 = !DILocalVariable(name: "packaged", arg: 1, scope: !4098, file: !434, line: 196, type: !104)
!4103 = !DILocalVariable(name: "buf", scope: !4098, file: !434, line: 200, type: !432)
!4104 = !DILocalVariable(name: "start", scope: !4098, file: !434, line: 201, type: !432)
!4105 = !DILocalVariable(name: "args_size", scope: !4098, file: !434, line: 202, type: !32)
!4106 = !DILocalVariable(name: "s_nbr", scope: !4098, file: !434, line: 202, type: !32)
!4107 = !DILocalVariable(name: "ros_nbr", scope: !4098, file: !434, line: 202, type: !32)
!4108 = !DILocalVariable(name: "i", scope: !4109, file: !434, line: 215, type: !105)
!4109 = distinct !DILexicalBlock(scope: !4098, file: !434, line: 215, column: 2)
!4110 = !DILocation(line: 0, scope: !4098)
!4111 = !DILocation(line: 198, column: 2, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !434, line: 198, column: 2)
!4113 = distinct !DILexicalBlock(scope: !4098, file: !434, line: 198, column: 2)
!4114 = !DILocation(line: 198, column: 2, scope: !4113)
!4115 = !DILocation(line: 198, column: 2, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4112, file: !434, line: 198, column: 2)
!4117 = !DILocation(line: 204, column: 14, scope: !4098)
!4118 = !DILocation(line: 204, column: 21, scope: !4098)
!4119 = !DILocation(line: 205, column: 14, scope: !4098)
!4120 = !DILocation(line: 206, column: 14, scope: !4098)
!4121 = !DILocation(line: 209, column: 6, scope: !4098)
!4122 = !DILocation(line: 212, column: 6, scope: !4098)
!4123 = !DILocation(line: 0, scope: !4109)
!4124 = !DILocation(line: 215, column: 20, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4109, file: !434, line: 215, column: 2)
!4126 = !DILocation(line: 215, column: 2, scope: !4109)
!4127 = !DILocation(line: 220, column: 33, scope: !4098)
!4128 = !DILocation(line: 220, column: 2, scope: !4098)
!4129 = !DILocation(line: 216, column: 6, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4125, file: !434, line: 215, column: 34)
!4131 = !DILocation(line: 217, column: 10, scope: !4130)
!4132 = !DILocation(line: 217, column: 36, scope: !4130)
!4133 = !DILocation(line: 217, column: 7, scope: !4130)
!4134 = !DILocation(line: 215, column: 30, scope: !4125)
!4135 = distinct !{!4135, !4126, !4136}
!4136 = !DILocation(line: 218, column: 2, scope: !4109)
!4137 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4138, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4140)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!105, !3765, !104, !269, !183}
!4140 = !{!4141, !4142, !4143, !4144}
!4141 = !DILocalVariable(name: "cb", arg: 1, scope: !4137, file: !434, line: 223, type: !3765)
!4142 = !DILocalVariable(name: "ctx", arg: 2, scope: !4137, file: !434, line: 223, type: !104)
!4143 = !DILocalVariable(name: "str", arg: 3, scope: !4137, file: !434, line: 223, type: !269)
!4144 = !DILocalVariable(name: "strl", arg: 4, scope: !4137, file: !434, line: 223, type: !183)
!4145 = !DILocation(line: 0, scope: !4137)
!4146 = !DILocation(line: 225, column: 9, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4137, file: !434, line: 225, column: 6)
!4148 = !DILocation(line: 225, column: 6, scope: !4137)
!4149 = !DILocation(line: 226, column: 14, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4147, file: !434, line: 225, column: 18)
!4151 = !DILocation(line: 226, column: 12, scope: !4150)
!4152 = !DILocation(line: 226, column: 3, scope: !4150)
!4153 = !DILocation(line: 229, column: 14, scope: !4137)
!4154 = !DILocation(line: 229, column: 9, scope: !4137)
!4155 = !DILocation(line: 229, column: 27, scope: !4137)
!4156 = !DILocation(line: 229, column: 39, scope: !4137)
!4157 = !DILocation(line: 230, column: 17, scope: !4137)
!4158 = !DILocation(line: 230, column: 9, scope: !4137)
!4159 = !DILocation(line: 230, column: 2, scope: !4137)
!4160 = !DILocation(line: 231, column: 1, scope: !4137)
!4161 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4162)
!4162 = !{!4163}
!4163 = !DILocalVariable(name: "c", arg: 1, scope: !4161, file: !446, line: 45, type: !105)
!4164 = !DILocation(line: 0, scope: !4161)
!4165 = !DILocation(line: 50, column: 2, scope: !4161)
!4166 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4167, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4169)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{null, !447}
!4169 = !{!4170}
!4170 = !DILocalVariable(name: "fn", arg: 1, scope: !4166, file: !446, line: 63, type: !447)
!4171 = !DILocation(line: 0, scope: !4166)
!4172 = !DILocation(line: 65, column: 12, scope: !4166)
!4173 = !DILocation(line: 66, column: 1, scope: !4166)
!4174 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4175, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!104}
!4177 = !DILocation(line: 78, column: 9, scope: !4174)
!4178 = !DILocation(line: 78, column: 2, scope: !4174)
!4179 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4180, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4188)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{null, !269, !4182}
!4182 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3251, line: 99, baseType: !4183)
!4183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3251, line: 40, baseType: !4184)
!4184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4185)
!4185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4186)
!4186 = !{!4187}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4185, file: !446, line: 79, baseType: !104, size: 32)
!4188 = !{!4189, !4190, !4191}
!4189 = !DILocalVariable(name: "fmt", arg: 1, scope: !4179, file: !446, line: 113, type: !269)
!4190 = !DILocalVariable(name: "ap", arg: 2, scope: !4179, file: !446, line: 113, type: !4182)
!4191 = !DILocalVariable(name: "ctx", scope: !4192, file: !446, line: 121, type: !4194)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !446, line: 120, column: 27)
!4193 = distinct !DILexicalBlock(scope: !4179, file: !446, line: 120, column: 6)
!4194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4195)
!4195 = !{!4196, !4197}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4194, file: !446, line: 85, baseType: !32, size: 32)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4194, file: !446, line: 86, baseType: !4198, offset: 32)
!4198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2009)
!4199 = !DILocation(line: 0, scope: !4179)
!4200 = !DILocation(line: 148, column: 3, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4193, file: !446, line: 138, column: 9)
!4202 = !DILocation(line: 155, column: 1, scope: !4179)
!4203 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !4204, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4206)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!105, !105, !104}
!4206 = !{!4207, !4208}
!4207 = !DILocalVariable(name: "c", arg: 1, scope: !4203, file: !446, line: 107, type: !105)
!4208 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4203, file: !446, line: 107, type: !104)
!4209 = !DILocation(line: 0, scope: !4203)
!4210 = !DILocation(line: 110, column: 9, scope: !4203)
!4211 = !DILocation(line: 110, column: 2, scope: !4203)
!4212 = distinct !DISubprogram(name: "cbvprintf", scope: !3283, file: !3283, line: 739, type: !4213, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4215)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!105, !3633, !104, !269, !4182}
!4215 = !{!4216, !4217, !4218, !4219}
!4216 = !DILocalVariable(name: "out", arg: 1, scope: !4212, file: !3283, line: 739, type: !3633)
!4217 = !DILocalVariable(name: "ctx", arg: 2, scope: !4212, file: !3283, line: 739, type: !104)
!4218 = !DILocalVariable(name: "format", arg: 3, scope: !4212, file: !3283, line: 739, type: !269)
!4219 = !DILocalVariable(name: "ap", arg: 4, scope: !4212, file: !3283, line: 739, type: !4182)
!4220 = !DILocation(line: 0, scope: !4212)
!4221 = !DILocation(line: 741, column: 9, scope: !4212)
!4222 = !DILocation(line: 741, column: 2, scope: !4212)
!4223 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !4224, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4226)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{null, !102, !111}
!4226 = !{!4227, !4228, !4229}
!4227 = !DILocalVariable(name: "c", arg: 1, scope: !4223, file: !446, line: 157, type: !102)
!4228 = !DILocalVariable(name: "n", arg: 2, scope: !4223, file: !446, line: 157, type: !111)
!4229 = !DILocalVariable(name: "i", scope: !4223, file: !446, line: 159, type: !111)
!4230 = !DILocation(line: 0, scope: !4223)
!4231 = !DILocation(line: 164, column: 16, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !446, line: 164, column: 2)
!4233 = distinct !DILexicalBlock(scope: !4223, file: !446, line: 164, column: 2)
!4234 = !DILocation(line: 164, column: 2, scope: !4233)
!4235 = !DILocation(line: 165, column: 3, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4232, file: !446, line: 164, column: 26)
!4237 = !DILocation(line: 165, column: 13, scope: !4236)
!4238 = !DILocation(line: 164, column: 22, scope: !4232)
!4239 = distinct !{!4239, !4234, !4240}
!4240 = !DILocation(line: 166, column: 2, scope: !4233)
!4241 = !DILocation(line: 171, column: 1, scope: !4223)
!4242 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !4243, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4245)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{null, !269, null}
!4245 = !{!4246, !4247}
!4246 = !DILocalVariable(name: "fmt", arg: 1, scope: !4242, file: !446, line: 203, type: !269)
!4247 = !DILocalVariable(name: "ap", scope: !4242, file: !446, line: 205, type: !4182)
!4248 = !DILocation(line: 0, scope: !4242)
!4249 = !DILocation(line: 205, column: 2, scope: !4242)
!4250 = !DILocation(line: 205, column: 10, scope: !4242)
!4251 = !DILocation(line: 207, column: 2, scope: !4242)
!4252 = !DILocation(line: 209, column: 2, scope: !4242)
!4253 = !DILocation(line: 211, column: 2, scope: !4242)
!4254 = !DILocation(line: 212, column: 1, scope: !4242)
!4255 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !4256, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!105, !102, !111, !269, null}
!4258 = !{!4259, !4260, !4261, !4262, !4263}
!4259 = !DILocalVariable(name: "str", arg: 1, scope: !4255, file: !446, line: 239, type: !102)
!4260 = !DILocalVariable(name: "size", arg: 2, scope: !4255, file: !446, line: 239, type: !111)
!4261 = !DILocalVariable(name: "fmt", arg: 3, scope: !4255, file: !446, line: 239, type: !269)
!4262 = !DILocalVariable(name: "ap", scope: !4255, file: !446, line: 241, type: !4182)
!4263 = !DILocalVariable(name: "ret", scope: !4255, file: !446, line: 242, type: !105)
!4264 = !DILocation(line: 0, scope: !4255)
!4265 = !DILocation(line: 241, column: 2, scope: !4255)
!4266 = !DILocation(line: 241, column: 10, scope: !4255)
!4267 = !DILocation(line: 244, column: 2, scope: !4255)
!4268 = !DILocation(line: 245, column: 8, scope: !4255)
!4269 = !DILocation(line: 246, column: 2, scope: !4255)
!4270 = !DILocation(line: 249, column: 1, scope: !4255)
!4271 = !DILocation(line: 248, column: 2, scope: !4255)
!4272 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !4273, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4275)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!105, !102, !111, !269, !4182}
!4275 = !{!4276, !4277, !4278, !4279, !4280}
!4276 = !DILocalVariable(name: "str", arg: 1, scope: !4272, file: !446, line: 251, type: !102)
!4277 = !DILocalVariable(name: "size", arg: 2, scope: !4272, file: !446, line: 251, type: !111)
!4278 = !DILocalVariable(name: "fmt", arg: 3, scope: !4272, file: !446, line: 251, type: !269)
!4279 = !DILocalVariable(name: "ap", arg: 4, scope: !4272, file: !446, line: 251, type: !4182)
!4280 = !DILocalVariable(name: "ctx", scope: !4272, file: !446, line: 253, type: !4281)
!4281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !4282)
!4282 = !{!4283, !4284, !4285}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4281, file: !446, line: 218, baseType: !102, size: 32)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4281, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4281, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!4286 = !DILocation(line: 0, scope: !4272)
!4287 = !DILocation(line: 253, column: 2, scope: !4272)
!4288 = !DILocation(line: 253, column: 21, scope: !4272)
!4289 = !DILocation(line: 253, column: 27, scope: !4272)
!4290 = !DILocation(line: 255, column: 2, scope: !4272)
!4291 = !DILocation(line: 257, column: 10, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4272, file: !446, line: 257, column: 6)
!4293 = !DILocation(line: 257, column: 22, scope: !4292)
!4294 = !DILocation(line: 257, column: 16, scope: !4292)
!4295 = !DILocation(line: 257, column: 6, scope: !4272)
!4296 = !DILocation(line: 258, column: 3, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4292, file: !446, line: 257, column: 27)
!4298 = !DILocation(line: 258, column: 18, scope: !4297)
!4299 = !DILocation(line: 259, column: 2, scope: !4297)
!4300 = !DILocation(line: 262, column: 1, scope: !4272)
!4301 = !DILocation(line: 261, column: 2, scope: !4272)
!4302 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !4303, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4306)
!4303 = !DISubroutineType(types: !4304)
!4304 = !{!105, !105, !4305}
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 32)
!4306 = !{!4307, !4308}
!4307 = !DILocalVariable(name: "c", arg: 1, scope: !4302, file: !446, line: 223, type: !105)
!4308 = !DILocalVariable(name: "ctx", arg: 2, scope: !4302, file: !446, line: 223, type: !4305)
!4309 = !DILocation(line: 0, scope: !4302)
!4310 = !DILocation(line: 225, column: 11, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4302, file: !446, line: 225, column: 6)
!4312 = !DILocation(line: 225, column: 15, scope: !4311)
!4313 = !DILocation(line: 0, scope: !4311)
!4314 = !DILocation(line: 225, column: 23, scope: !4311)
!4315 = !DILocation(line: 225, column: 45, scope: !4311)
!4316 = !DILocation(line: 225, column: 37, scope: !4311)
!4317 = !DILocation(line: 225, column: 6, scope: !4302)
!4318 = !DILocation(line: 226, column: 8, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4311, file: !446, line: 225, column: 50)
!4320 = !DILocation(line: 226, column: 13, scope: !4319)
!4321 = !DILocation(line: 227, column: 3, scope: !4319)
!4322 = !DILocation(line: 230, column: 29, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4302, file: !446, line: 230, column: 6)
!4324 = !DILocation(line: 230, column: 17, scope: !4323)
!4325 = !DILocation(line: 230, column: 6, scope: !4302)
!4326 = !DILocation(line: 231, column: 22, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4323, file: !446, line: 230, column: 34)
!4328 = !DILocation(line: 231, column: 3, scope: !4327)
!4329 = !DILocation(line: 231, column: 26, scope: !4327)
!4330 = !DILocation(line: 232, column: 2, scope: !4327)
!4331 = !DILocation(line: 233, column: 28, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4323, file: !446, line: 232, column: 9)
!4333 = !DILocation(line: 233, column: 22, scope: !4332)
!4334 = !DILocation(line: 233, column: 3, scope: !4332)
!4335 = !DILocation(line: 233, column: 26, scope: !4332)
!4336 = !DILocation(line: 237, column: 1, scope: !4302)
!4337 = distinct !DISubprogram(name: "z_thread_entry", scope: !4338, file: !4338, line: 30, type: !4339, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !4341)
!4338 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4339 = !DISubroutineType(types: !4340)
!4340 = !{null, !254, !104, !104, !104}
!4341 = !{!4342, !4343, !4344, !4345}
!4342 = !DILocalVariable(name: "entry", arg: 1, scope: !4337, file: !4338, line: 30, type: !254)
!4343 = !DILocalVariable(name: "p1", arg: 2, scope: !4337, file: !4338, line: 31, type: !104)
!4344 = !DILocalVariable(name: "p2", arg: 3, scope: !4337, file: !4338, line: 31, type: !104)
!4345 = !DILocalVariable(name: "p3", arg: 4, scope: !4337, file: !4338, line: 31, type: !104)
!4346 = !DILocation(line: 0, scope: !4337)
!4347 = !DILocation(line: 36, column: 2, scope: !4337)
!4348 = !DILocation(line: 38, column: 17, scope: !4337)
!4349 = !DILocation(line: 38, column: 2, scope: !4337)
!4350 = !DILocation(line: 45, column: 2, scope: !4337)
!4351 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !4352, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !397)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!4354}
!4354 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !4355)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 32)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !4357)
!4357 = !{!4358, !4416, !4428, !4429, !4430, !4431, !4437, !4452}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4356, file: !127, line: 247, baseType: !4359, size: 384)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !4360)
!4360 = !{!4361, !4385, !4392, !4393, !4394, !4403, !4404, !4405}
!4361 = !DIDerivedType(tag: DW_TAG_member, scope: !4359, file: !127, line: 60, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4359, file: !127, line: 60, size: 64, elements: !4363)
!4363 = !{!4364, !4379}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4362, file: !127, line: 61, baseType: !4365, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !4366)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !4367)
!4367 = !{!4368, !4374}
!4368 = !DIDerivedType(tag: DW_TAG_member, scope: !4366, file: !137, line: 38, baseType: !4369, size: 32)
!4369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4366, file: !137, line: 38, size: 32, elements: !4370)
!4370 = !{!4371, !4373}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4369, file: !137, line: 39, baseType: !4372, size: 32)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4369, file: !137, line: 40, baseType: !4372, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, scope: !4366, file: !137, line: 42, baseType: !4375, size: 32, offset: 32)
!4375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4366, file: !137, line: 42, size: 32, elements: !4376)
!4376 = !{!4377, !4378}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4375, file: !137, line: 43, baseType: !4372, size: 32)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4375, file: !137, line: 44, baseType: !4372, size: 32)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4362, file: !127, line: 62, baseType: !4380, size: 64)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !4381)
!4381 = !{!4382}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4380, file: !153, line: 50, baseType: !4383, size: 64)
!4383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4384, size: 64, elements: !158)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 32)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4359, file: !127, line: 68, baseType: !4386, size: 32, offset: 64)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 32)
!4387 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !4388)
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !4389)
!4389 = !{!4390}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4388, file: !163, line: 232, baseType: !4391, size: 64)
!4391 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !4366)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4359, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4359, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!4394 = !DIDerivedType(tag: DW_TAG_member, scope: !4359, file: !127, line: 90, baseType: !4395, size: 16, offset: 112)
!4395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4359, file: !127, line: 90, size: 16, elements: !4396)
!4396 = !{!4397, !4402}
!4397 = !DIDerivedType(tag: DW_TAG_member, scope: !4395, file: !127, line: 91, baseType: !4398, size: 16)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4395, file: !127, line: 91, size: 16, elements: !4399)
!4399 = !{!4400, !4401}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4398, file: !127, line: 96, baseType: !179, size: 8)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4398, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4395, file: !127, line: 100, baseType: !183, size: 16)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4359, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4359, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4359, file: !127, line: 131, baseType: !4406, size: 192, offset: 192)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !4407)
!4407 = !{!4408, !4409, !4415}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4406, file: !163, line: 245, baseType: !4365, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4406, file: !163, line: 246, baseType: !4410, size: 32, offset: 64)
!4410 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !4411)
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 32)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{null, !4414}
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4406, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4356, file: !127, line: 250, baseType: !4417, size: 288, offset: 384)
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !4418)
!4418 = !{!4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4417, file: !200, line: 26, baseType: !113, size: 32)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4417, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4417, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4417, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4417, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4417, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4417, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4417, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4417, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4356, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4356, file: !127, line: 256, baseType: !4387, size: 64, offset: 704)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4356, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4356, file: !127, line: 300, baseType: !4432, size: 96, offset: 800)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !4433)
!4433 = !{!4434, !4435, !4436}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4432, file: !127, line: 153, baseType: !22, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4432, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4432, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4356, file: !127, line: 325, baseType: !4438, size: 32, offset: 896)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 32)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !4440)
!4440 = !{!4441, !4447, !4448}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4439, file: !122, line: 5074, baseType: !4442, size: 96)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !4443)
!4443 = !{!4444, !4445, !4446}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4442, file: !226, line: 57, baseType: !229, size: 32)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4442, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4442, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4439, file: !122, line: 5075, baseType: !4387, size: 64, offset: 96)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4439, file: !122, line: 5076, baseType: !4449, size: 32, offset: 160)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !4450)
!4450 = !{!4451}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4449, file: !236, line: 52, baseType: !22, size: 32)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4356, file: !127, line: 343, baseType: !4453, size: 64, offset: 928)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !4454)
!4454 = !{!4455, !4456}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4453, file: !200, line: 63, baseType: !113, size: 32)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4453, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!4457 = !DILocation(line: 535, column: 9, scope: !4351)
!4458 = !DILocation(line: 535, column: 2, scope: !4351)
!4459 = distinct !DISubprogram(name: "k_thread_abort", scope: !2698, file: !2698, line: 188, type: !4460, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !4462)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{null, !4354}
!4462 = !{!4463}
!4463 = !DILocalVariable(name: "thread", arg: 1, scope: !4459, file: !2698, line: 188, type: !4354)
!4464 = !DILocation(line: 0, scope: !4459)
!4465 = !DILocation(line: 197, column: 2, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4459, file: !2698, line: 197, column: 2)
!4467 = !{i64 2151093945}
!4468 = !DILocation(line: 198, column: 2, scope: !4459)
!4469 = !DILocation(line: 199, column: 1, scope: !4459)
!4470 = distinct !DISubprogram(name: "z_current_get", scope: !2698, file: !2698, line: 173, type: !4352, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1977, retainedNodes: !397)
!4471 = !DILocation(line: 180, column: 2, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4470, file: !2698, line: 180, column: 2)
!4473 = !{i64 2151093877}
!4474 = !DILocation(line: 181, column: 9, scope: !4470)
!4475 = !DILocation(line: 181, column: 2, scope: !4470)
!4476 = distinct !DISubprogram(name: "sys_heap_free", scope: !4477, file: !4477, line: 163, type: !4478, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4486)
!4477 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4478 = !DISubroutineType(types: !4479)
!4479 = !{null, !4480, !104}
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 32)
!4481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !4482)
!4482 = !{!4483, !4484, !4485}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4481, file: !226, line: 57, baseType: !1996, size: 32)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4481, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4481, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!4486 = !{!4487, !4488, !4489, !4490}
!4487 = !DILocalVariable(name: "heap", arg: 1, scope: !4476, file: !4477, line: 163, type: !4480)
!4488 = !DILocalVariable(name: "mem", arg: 2, scope: !4476, file: !4477, line: 163, type: !104)
!4489 = !DILocalVariable(name: "h", scope: !4476, file: !4477, line: 168, type: !1996)
!4490 = !DILocalVariable(name: "c", scope: !4476, file: !4477, line: 169, type: !2001)
!4491 = !DILocation(line: 0, scope: !4476)
!4492 = !DILocation(line: 165, column: 10, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4476, file: !4477, line: 165, column: 6)
!4494 = !DILocation(line: 165, column: 6, scope: !4476)
!4495 = !DILocation(line: 168, column: 27, scope: !4476)
!4496 = !DILocation(line: 169, column: 16, scope: !4476)
!4497 = !{i32 0, i32 536870912}
!4498 = !DILocation(line: 175, column: 2, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !4477, line: 175, column: 2)
!4500 = distinct !DILexicalBlock(scope: !4476, file: !4477, line: 175, column: 2)
!4501 = !DILocation(line: 175, column: 2, scope: !4500)
!4502 = !DILocation(line: 175, column: 2, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !4477, line: 175, column: 2)
!4504 = !DILocation(line: 183, column: 2, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !4477, line: 183, column: 2)
!4506 = distinct !DILexicalBlock(scope: !4476, file: !4477, line: 183, column: 2)
!4507 = !DILocation(line: 183, column: 2, scope: !4506)
!4508 = !DILocation(line: 183, column: 2, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !4477, line: 183, column: 2)
!4510 = !DILocation(line: 187, column: 2, scope: !4476)
!4511 = !DILocation(line: 197, column: 2, scope: !4476)
!4512 = !DILocation(line: 198, column: 1, scope: !4476)
!4513 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !4477, file: !4477, line: 157, type: !4514, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4516)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!2001, !1996, !104}
!4516 = !{!4517, !4518, !4519, !4520}
!4517 = !DILocalVariable(name: "h", arg: 1, scope: !4513, file: !4477, line: 157, type: !1996)
!4518 = !DILocalVariable(name: "p", arg: 2, scope: !4513, file: !4477, line: 157, type: !104)
!4519 = !DILocalVariable(name: "mem", scope: !4513, file: !4477, line: 159, type: !432)
!4520 = !DILocalVariable(name: "base", scope: !4513, file: !4477, line: 159, type: !432)
!4521 = !DILocation(line: 0, scope: !4513)
!4522 = !DILocation(line: 159, column: 39, scope: !4513)
!4523 = !DILocation(line: 160, column: 14, scope: !4513)
!4524 = !DILocation(line: 160, column: 38, scope: !4513)
!4525 = !DILocation(line: 160, column: 46, scope: !4513)
!4526 = !DILocation(line: 160, column: 2, scope: !4513)
!4527 = distinct !DISubprogram(name: "chunk_used", scope: !1983, file: !1983, line: 137, type: !4528, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4530)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!540, !1996, !2001}
!4530 = !{!4531, !4532}
!4531 = !DILocalVariable(name: "h", arg: 1, scope: !4527, file: !1983, line: 137, type: !1996)
!4532 = !DILocalVariable(name: "c", arg: 2, scope: !4527, file: !1983, line: 137, type: !2001)
!4533 = !DILocation(line: 0, scope: !4527)
!4534 = !DILocation(line: 139, column: 9, scope: !4527)
!4535 = !DILocation(line: 139, column: 42, scope: !4527)
!4536 = !DILocation(line: 139, column: 2, scope: !4527)
!4537 = distinct !DISubprogram(name: "right_chunk", scope: !1983, file: !1983, line: 204, type: !4538, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4540)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!2001, !1996, !2001}
!4540 = !{!4541, !4542}
!4541 = !DILocalVariable(name: "h", arg: 1, scope: !4537, file: !1983, line: 204, type: !1996)
!4542 = !DILocalVariable(name: "c", arg: 2, scope: !4537, file: !1983, line: 204, type: !2001)
!4543 = !DILocation(line: 0, scope: !4537)
!4544 = !DILocation(line: 206, column: 13, scope: !4537)
!4545 = !DILocation(line: 206, column: 11, scope: !4537)
!4546 = !DILocation(line: 206, column: 2, scope: !4537)
!4547 = distinct !DISubprogram(name: "left_chunk", scope: !1983, file: !1983, line: 199, type: !4538, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4548)
!4548 = !{!4549, !4550}
!4549 = !DILocalVariable(name: "h", arg: 1, scope: !4547, file: !1983, line: 199, type: !1996)
!4550 = !DILocalVariable(name: "c", arg: 2, scope: !4547, file: !1983, line: 199, type: !2001)
!4551 = !DILocation(line: 0, scope: !4547)
!4552 = !DILocation(line: 201, column: 13, scope: !4547)
!4553 = !DILocation(line: 201, column: 11, scope: !4547)
!4554 = !DILocation(line: 201, column: 2, scope: !4547)
!4555 = distinct !DISubprogram(name: "set_chunk_used", scope: !1983, file: !1983, line: 147, type: !4556, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4558)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{null, !1996, !2001, !540}
!4558 = !{!4559, !4560, !4561, !4562, !4563}
!4559 = !DILocalVariable(name: "h", arg: 1, scope: !4555, file: !1983, line: 147, type: !1996)
!4560 = !DILocalVariable(name: "c", arg: 2, scope: !4555, file: !1983, line: 147, type: !2001)
!4561 = !DILocalVariable(name: "used", arg: 3, scope: !4555, file: !1983, line: 147, type: !540)
!4562 = !DILocalVariable(name: "buf", scope: !4555, file: !1983, line: 149, type: !1990)
!4563 = !DILocalVariable(name: "cmem", scope: !4555, file: !1983, line: 150, type: !104)
!4564 = !DILocation(line: 0, scope: !4555)
!4565 = !DILocation(line: 149, column: 22, scope: !4555)
!4566 = !DILocation(line: 0, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !1983, line: 159, column: 7)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !1983, line: 158, column: 9)
!4569 = distinct !DILexicalBlock(scope: !4555, file: !1983, line: 152, column: 6)
!4570 = !DILocation(line: 159, column: 7, scope: !4568)
!4571 = !DILocation(line: 165, column: 1, scope: !4555)
!4572 = distinct !DISubprogram(name: "free_chunk", scope: !4477, file: !4477, line: 133, type: !4573, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4575)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{null, !1996, !2001}
!4575 = !{!4576, !4577}
!4576 = !DILocalVariable(name: "h", arg: 1, scope: !4572, file: !4477, line: 133, type: !1996)
!4577 = !DILocalVariable(name: "c", arg: 2, scope: !4572, file: !4477, line: 133, type: !2001)
!4578 = !DILocation(line: 0, scope: !4572)
!4579 = !DILocation(line: 136, column: 21, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4572, file: !4477, line: 136, column: 6)
!4581 = !DILocation(line: 136, column: 7, scope: !4580)
!4582 = !DILocation(line: 136, column: 6, scope: !4572)
!4583 = !DILocation(line: 137, column: 3, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !4477, line: 136, column: 41)
!4585 = !DILocation(line: 138, column: 22, scope: !4584)
!4586 = !DILocation(line: 138, column: 3, scope: !4584)
!4587 = !DILocation(line: 139, column: 2, scope: !4584)
!4588 = !DILocation(line: 142, column: 21, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4572, file: !4477, line: 142, column: 6)
!4590 = !DILocation(line: 142, column: 7, scope: !4589)
!4591 = !DILocation(line: 142, column: 6, scope: !4572)
!4592 = !DILocation(line: 143, column: 3, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4589, file: !4477, line: 142, column: 40)
!4594 = !DILocation(line: 144, column: 19, scope: !4593)
!4595 = !DILocation(line: 144, column: 3, scope: !4593)
!4596 = !DILocation(line: 145, column: 7, scope: !4593)
!4597 = !DILocation(line: 146, column: 2, scope: !4593)
!4598 = !DILocation(line: 148, column: 2, scope: !4572)
!4599 = !DILocation(line: 149, column: 1, scope: !4572)
!4600 = distinct !DISubprogram(name: "free_list_remove", scope: !4477, file: !4477, line: 60, type: !4573, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4601)
!4601 = !{!4602, !4603, !4604}
!4602 = !DILocalVariable(name: "h", arg: 1, scope: !4600, file: !4477, line: 60, type: !1996)
!4603 = !DILocalVariable(name: "c", arg: 2, scope: !4600, file: !4477, line: 60, type: !2001)
!4604 = !DILocalVariable(name: "bidx", scope: !4605, file: !4477, line: 63, type: !105)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !4477, line: 62, column: 31)
!4606 = distinct !DILexicalBlock(scope: !4600, file: !4477, line: 62, column: 6)
!4607 = !DILocation(line: 0, scope: !4600)
!4608 = !DILocation(line: 63, column: 28, scope: !4605)
!4609 = !{i32 0, i32 32768}
!4610 = !DILocation(line: 63, column: 14, scope: !4605)
!4611 = !DILocation(line: 0, scope: !4605)
!4612 = !DILocation(line: 64, column: 3, scope: !4605)
!4613 = !DILocation(line: 66, column: 1, scope: !4600)
!4614 = distinct !DISubprogram(name: "merge_chunks", scope: !4477, file: !4477, line: 125, type: !4615, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4617)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{null, !1996, !2001, !2001}
!4617 = !{!4618, !4619, !4620, !4621}
!4618 = !DILocalVariable(name: "h", arg: 1, scope: !4614, file: !4477, line: 125, type: !1996)
!4619 = !DILocalVariable(name: "lc", arg: 2, scope: !4614, file: !4477, line: 125, type: !2001)
!4620 = !DILocalVariable(name: "rc", arg: 3, scope: !4614, file: !4477, line: 125, type: !2001)
!4621 = !DILocalVariable(name: "newsz", scope: !4614, file: !4477, line: 127, type: !4622)
!4622 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !1983, line: 62, baseType: !113)
!4623 = !DILocation(line: 0, scope: !4614)
!4624 = !DILocation(line: 127, column: 20, scope: !4614)
!4625 = !DILocation(line: 127, column: 40, scope: !4614)
!4626 = !DILocation(line: 127, column: 38, scope: !4614)
!4627 = !DILocation(line: 129, column: 2, scope: !4614)
!4628 = !DILocation(line: 130, column: 25, scope: !4614)
!4629 = !DILocation(line: 130, column: 2, scope: !4614)
!4630 = !DILocation(line: 131, column: 1, scope: !4614)
!4631 = distinct !DISubprogram(name: "free_list_add", scope: !4477, file: !4477, line: 98, type: !4573, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4632)
!4632 = !{!4633, !4634, !4635}
!4633 = !DILocalVariable(name: "h", arg: 1, scope: !4631, file: !4477, line: 98, type: !1996)
!4634 = !DILocalVariable(name: "c", arg: 2, scope: !4631, file: !4477, line: 98, type: !2001)
!4635 = !DILocalVariable(name: "bidx", scope: !4636, file: !4477, line: 101, type: !105)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !4477, line: 100, column: 31)
!4637 = distinct !DILexicalBlock(scope: !4631, file: !4477, line: 100, column: 6)
!4638 = !DILocation(line: 0, scope: !4631)
!4639 = !DILocation(line: 101, column: 28, scope: !4636)
!4640 = !DILocation(line: 101, column: 14, scope: !4636)
!4641 = !DILocation(line: 0, scope: !4636)
!4642 = !DILocation(line: 102, column: 3, scope: !4636)
!4643 = !DILocation(line: 104, column: 1, scope: !4631)
!4644 = distinct !DISubprogram(name: "chunk_size", scope: !1983, file: !1983, line: 142, type: !4645, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4647)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!4622, !1996, !2001}
!4647 = !{!4648, !4649}
!4648 = !DILocalVariable(name: "h", arg: 1, scope: !4644, file: !1983, line: 142, type: !1996)
!4649 = !DILocalVariable(name: "c", arg: 2, scope: !4644, file: !1983, line: 142, type: !2001)
!4650 = !DILocation(line: 0, scope: !4644)
!4651 = !DILocation(line: 144, column: 9, scope: !4644)
!4652 = !DILocation(line: 144, column: 42, scope: !4644)
!4653 = !DILocation(line: 144, column: 2, scope: !4644)
!4654 = distinct !DISubprogram(name: "bucket_idx", scope: !1983, file: !1983, line: 250, type: !4655, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4657)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!105, !1996, !4622}
!4657 = !{!4658, !4659, !4660}
!4658 = !DILocalVariable(name: "h", arg: 1, scope: !4654, file: !1983, line: 250, type: !1996)
!4659 = !DILocalVariable(name: "sz", arg: 2, scope: !4654, file: !1983, line: 250, type: !4622)
!4660 = !DILocalVariable(name: "usable_sz", scope: !4654, file: !1983, line: 252, type: !32)
!4661 = !DILocation(line: 0, scope: !4654)
!4662 = !DILocation(line: 252, column: 32, scope: !4654)
!4663 = !DILocation(line: 252, column: 30, scope: !4654)
!4664 = !DILocation(line: 252, column: 50, scope: !4654)
!4665 = !DILocation(line: 253, column: 14, scope: !4654)
!4666 = !{i32 0, i32 33}
!4667 = !DILocation(line: 253, column: 12, scope: !4654)
!4668 = !DILocation(line: 253, column: 2, scope: !4654)
!4669 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !4477, file: !4477, line: 68, type: !4670, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4672)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !1996, !2001, !105}
!4672 = !{!4673, !4674, !4675, !4676, !4678, !4681}
!4673 = !DILocalVariable(name: "h", arg: 1, scope: !4669, file: !4477, line: 68, type: !1996)
!4674 = !DILocalVariable(name: "c", arg: 2, scope: !4669, file: !4477, line: 68, type: !2001)
!4675 = !DILocalVariable(name: "bidx", arg: 3, scope: !4669, file: !4477, line: 68, type: !105)
!4676 = !DILocalVariable(name: "b", scope: !4669, file: !4477, line: 70, type: !4677)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!4678 = !DILocalVariable(name: "second", scope: !4679, file: !4477, line: 84, type: !2001)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !4477, line: 80, column: 9)
!4680 = distinct !DILexicalBlock(scope: !4669, file: !4477, line: 72, column: 6)
!4681 = !DILocalVariable(name: "first", scope: !4679, file: !4477, line: 85, type: !2001)
!4682 = !DILocation(line: 0, scope: !4669)
!4683 = !DILocation(line: 72, column: 9, scope: !4680)
!4684 = !DILocation(line: 72, column: 14, scope: !4680)
!4685 = !DILocation(line: 72, column: 6, scope: !4669)
!4686 = !DILocation(line: 76, column: 23, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4680, file: !4477, line: 72, column: 21)
!4688 = !DILocation(line: 76, column: 6, scope: !4687)
!4689 = !DILocation(line: 76, column: 20, scope: !4687)
!4690 = !DILocation(line: 77, column: 11, scope: !4687)
!4691 = !DILocation(line: 78, column: 3, scope: !4687)
!4692 = !DILocation(line: 79, column: 3, scope: !4687)
!4693 = !DILocation(line: 80, column: 2, scope: !4687)
!4694 = !DILocation(line: 0, scope: !4679)
!4695 = !DILocation(line: 85, column: 21, scope: !4679)
!4696 = !{i32 0, i32 65536}
!4697 = !DILocation(line: 87, column: 3, scope: !4679)
!4698 = !DILocation(line: 88, column: 3, scope: !4679)
!4699 = !DILocation(line: 89, column: 3, scope: !4679)
!4700 = !DILocation(line: 90, column: 3, scope: !4679)
!4701 = !DILocation(line: 96, column: 1, scope: !4669)
!4702 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !1983, file: !1983, line: 187, type: !4615, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4703)
!4703 = !{!4704, !4705, !4706}
!4704 = !DILocalVariable(name: "h", arg: 1, scope: !4702, file: !1983, line: 187, type: !1996)
!4705 = !DILocalVariable(name: "c", arg: 2, scope: !4702, file: !1983, line: 187, type: !2001)
!4706 = !DILocalVariable(name: "prev", arg: 3, scope: !4702, file: !1983, line: 188, type: !2001)
!4707 = !DILocation(line: 0, scope: !4702)
!4708 = !DILocation(line: 190, column: 2, scope: !4702)
!4709 = !DILocation(line: 191, column: 1, scope: !4702)
!4710 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !1983, file: !1983, line: 193, type: !4615, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4711)
!4711 = !{!4712, !4713, !4714}
!4712 = !DILocalVariable(name: "h", arg: 1, scope: !4710, file: !1983, line: 193, type: !1996)
!4713 = !DILocalVariable(name: "c", arg: 2, scope: !4710, file: !1983, line: 193, type: !2001)
!4714 = !DILocalVariable(name: "next", arg: 3, scope: !4710, file: !1983, line: 194, type: !2001)
!4715 = !DILocation(line: 0, scope: !4710)
!4716 = !DILocation(line: 196, column: 2, scope: !4710)
!4717 = !DILocation(line: 197, column: 1, scope: !4710)
!4718 = distinct !DISubprogram(name: "prev_free_chunk", scope: !1983, file: !1983, line: 177, type: !4538, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4719)
!4719 = !{!4720, !4721}
!4720 = !DILocalVariable(name: "h", arg: 1, scope: !4718, file: !1983, line: 177, type: !1996)
!4721 = !DILocalVariable(name: "c", arg: 2, scope: !4718, file: !1983, line: 177, type: !2001)
!4722 = !DILocation(line: 0, scope: !4718)
!4723 = !DILocation(line: 179, column: 9, scope: !4718)
!4724 = !DILocation(line: 179, column: 2, scope: !4718)
!4725 = distinct !DISubprogram(name: "chunk_field", scope: !1983, file: !1983, line: 107, type: !4726, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4728)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!2001, !1996, !2001, !1982}
!4728 = !{!4729, !4730, !4731, !4732, !4733}
!4729 = !DILocalVariable(name: "h", arg: 1, scope: !4725, file: !1983, line: 107, type: !1996)
!4730 = !DILocalVariable(name: "c", arg: 2, scope: !4725, file: !1983, line: 107, type: !2001)
!4731 = !DILocalVariable(name: "f", arg: 3, scope: !4725, file: !1983, line: 108, type: !1982)
!4732 = !DILocalVariable(name: "buf", scope: !4725, file: !1983, line: 110, type: !1990)
!4733 = !DILocalVariable(name: "cmem", scope: !4725, file: !1983, line: 111, type: !104)
!4734 = !DILocation(line: 0, scope: !4725)
!4735 = !DILocation(line: 110, column: 22, scope: !4725)
!4736 = !DILocation(line: 111, column: 15, scope: !4725)
!4737 = !DILocation(line: 116, column: 11, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !1983, line: 115, column: 9)
!4739 = distinct !DILexicalBlock(scope: !4725, file: !1983, line: 113, column: 6)
!4740 = !DILocation(line: 116, column: 10, scope: !4738)
!4741 = !DILocation(line: 118, column: 1, scope: !4725)
!4742 = distinct !DISubprogram(name: "chunk_buf", scope: !1983, file: !1983, line: 101, type: !4743, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4745)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!1990, !1996}
!4745 = !{!4746}
!4746 = !DILocalVariable(name: "h", arg: 1, scope: !4742, file: !1983, line: 101, type: !1996)
!4747 = !DILocation(line: 0, scope: !4742)
!4748 = !DILocation(line: 104, column: 9, scope: !4742)
!4749 = !DILocation(line: 104, column: 2, scope: !4742)
!4750 = distinct !DISubprogram(name: "chunk_set", scope: !1983, file: !1983, line: 120, type: !4751, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4753)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{null, !1996, !2001, !1982, !2001}
!4753 = !{!4754, !4755, !4756, !4757, !4758, !4759}
!4754 = !DILocalVariable(name: "h", arg: 1, scope: !4750, file: !1983, line: 120, type: !1996)
!4755 = !DILocalVariable(name: "c", arg: 2, scope: !4750, file: !1983, line: 120, type: !2001)
!4756 = !DILocalVariable(name: "f", arg: 3, scope: !4750, file: !1983, line: 121, type: !1982)
!4757 = !DILocalVariable(name: "val", arg: 4, scope: !4750, file: !1983, line: 121, type: !2001)
!4758 = !DILocalVariable(name: "buf", scope: !4750, file: !1983, line: 125, type: !1990)
!4759 = !DILocalVariable(name: "cmem", scope: !4750, file: !1983, line: 126, type: !104)
!4760 = !DILocation(line: 0, scope: !4750)
!4761 = !DILocation(line: 125, column: 22, scope: !4750)
!4762 = !DILocation(line: 126, column: 15, scope: !4750)
!4763 = !DILocation(line: 133, column: 27, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !1983, line: 131, column: 9)
!4765 = distinct !DILexicalBlock(scope: !4750, file: !1983, line: 128, column: 6)
!4766 = !DILocation(line: 133, column: 4, scope: !4764)
!4767 = !DILocation(line: 133, column: 3, scope: !4764)
!4768 = !DILocation(line: 133, column: 25, scope: !4764)
!4769 = !DILocation(line: 135, column: 1, scope: !4750)
!4770 = distinct !DISubprogram(name: "min_chunk_size", scope: !1983, file: !1983, line: 240, type: !4771, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4773)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!4622, !1996}
!4773 = !{!4774}
!4774 = !DILocalVariable(name: "h", arg: 1, scope: !4770, file: !1983, line: 240, type: !1996)
!4775 = !DILocation(line: 0, scope: !4770)
!4776 = !DILocation(line: 242, column: 9, scope: !4770)
!4777 = !DILocation(line: 242, column: 2, scope: !4770)
!4778 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !1983, file: !1983, line: 235, type: !4779, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4781)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{!4622, !1996, !111}
!4781 = !{!4782, !4783}
!4782 = !DILocalVariable(name: "h", arg: 1, scope: !4778, file: !1983, line: 235, type: !1996)
!4783 = !DILocalVariable(name: "bytes", arg: 2, scope: !4778, file: !1983, line: 235, type: !111)
!4784 = !DILocation(line: 0, scope: !4778)
!4785 = !DILocation(line: 237, column: 39, scope: !4778)
!4786 = !DILocation(line: 237, column: 9, scope: !4778)
!4787 = !DILocation(line: 237, column: 2, scope: !4778)
!4788 = distinct !DISubprogram(name: "chunksz", scope: !1983, file: !1983, line: 230, type: !4789, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4791)
!4789 = !DISubroutineType(types: !4790)
!4790 = !{!4622, !111}
!4791 = !{!4792}
!4792 = !DILocalVariable(name: "bytes", arg: 1, scope: !4788, file: !1983, line: 230, type: !111)
!4793 = !DILocation(line: 0, scope: !4788)
!4794 = !DILocation(line: 232, column: 29, scope: !4788)
!4795 = !DILocation(line: 232, column: 35, scope: !4788)
!4796 = !DILocation(line: 232, column: 2, scope: !4788)
!4797 = distinct !DISubprogram(name: "set_chunk_size", scope: !1983, file: !1983, line: 172, type: !4798, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4800)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{null, !1996, !2001, !4622}
!4800 = !{!4801, !4802, !4803}
!4801 = !DILocalVariable(name: "h", arg: 1, scope: !4797, file: !1983, line: 172, type: !1996)
!4802 = !DILocalVariable(name: "c", arg: 2, scope: !4797, file: !1983, line: 172, type: !2001)
!4803 = !DILocalVariable(name: "size", arg: 3, scope: !4797, file: !1983, line: 172, type: !4622)
!4804 = !DILocation(line: 0, scope: !4797)
!4805 = !DILocation(line: 174, column: 38, scope: !4797)
!4806 = !DILocation(line: 174, column: 2, scope: !4797)
!4807 = !DILocation(line: 175, column: 1, scope: !4797)
!4808 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !1983, file: !1983, line: 209, type: !4798, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4809)
!4809 = !{!4810, !4811, !4812}
!4810 = !DILocalVariable(name: "h", arg: 1, scope: !4808, file: !1983, line: 209, type: !1996)
!4811 = !DILocalVariable(name: "c", arg: 2, scope: !4808, file: !1983, line: 209, type: !2001)
!4812 = !DILocalVariable(name: "size", arg: 3, scope: !4808, file: !1983, line: 210, type: !4622)
!4813 = !DILocation(line: 0, scope: !4808)
!4814 = !DILocation(line: 212, column: 2, scope: !4808)
!4815 = !DILocation(line: 213, column: 1, scope: !4808)
!4816 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !4477, file: !4477, line: 34, type: !4670, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4817)
!4817 = !{!4818, !4819, !4820, !4821, !4822, !4825}
!4818 = !DILocalVariable(name: "h", arg: 1, scope: !4816, file: !4477, line: 34, type: !1996)
!4819 = !DILocalVariable(name: "c", arg: 2, scope: !4816, file: !4477, line: 34, type: !2001)
!4820 = !DILocalVariable(name: "bidx", arg: 3, scope: !4816, file: !4477, line: 34, type: !105)
!4821 = !DILocalVariable(name: "b", scope: !4816, file: !4477, line: 36, type: !4677)
!4822 = !DILocalVariable(name: "first", scope: !4823, file: !4477, line: 47, type: !2001)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !4477, line: 46, column: 9)
!4824 = distinct !DILexicalBlock(scope: !4816, file: !4477, line: 42, column: 6)
!4825 = !DILocalVariable(name: "second", scope: !4823, file: !4477, line: 48, type: !2001)
!4826 = !DILocation(line: 0, scope: !4816)
!4827 = !DILocation(line: 36, column: 29, scope: !4816)
!4828 = !DILocation(line: 42, column: 6, scope: !4824)
!4829 = !DILocation(line: 42, column: 28, scope: !4824)
!4830 = !DILocation(line: 42, column: 6, scope: !4816)
!4831 = !DILocation(line: 44, column: 24, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4824, file: !4477, line: 42, column: 34)
!4833 = !DILocation(line: 44, column: 23, scope: !4832)
!4834 = !DILocation(line: 44, column: 6, scope: !4832)
!4835 = !DILocation(line: 44, column: 20, scope: !4832)
!4836 = !DILocation(line: 45, column: 6, scope: !4832)
!4837 = !DILocation(line: 45, column: 11, scope: !4832)
!4838 = !DILocation(line: 46, column: 2, scope: !4832)
!4839 = !DILocation(line: 47, column: 21, scope: !4823)
!4840 = !DILocation(line: 0, scope: !4823)
!4841 = !DILocation(line: 50, column: 6, scope: !4823)
!4842 = !DILocation(line: 50, column: 11, scope: !4823)
!4843 = !DILocation(line: 51, column: 3, scope: !4823)
!4844 = !DILocation(line: 52, column: 3, scope: !4823)
!4845 = !DILocation(line: 58, column: 1, scope: !4816)
!4846 = distinct !DISubprogram(name: "next_free_chunk", scope: !1983, file: !1983, line: 182, type: !4538, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4847)
!4847 = !{!4848, !4849}
!4848 = !DILocalVariable(name: "h", arg: 1, scope: !4846, file: !1983, line: 182, type: !1996)
!4849 = !DILocalVariable(name: "c", arg: 2, scope: !4846, file: !1983, line: 182, type: !2001)
!4850 = !DILocation(line: 0, scope: !4846)
!4851 = !DILocation(line: 184, column: 9, scope: !4846)
!4852 = !DILocation(line: 184, column: 2, scope: !4846)
!4853 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !4477, file: !4477, line: 200, type: !4854, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4856)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{!111, !4480, !104}
!4856 = !{!4857, !4858, !4859, !4860, !4861, !4862, !4863}
!4857 = !DILocalVariable(name: "heap", arg: 1, scope: !4853, file: !4477, line: 200, type: !4480)
!4858 = !DILocalVariable(name: "mem", arg: 2, scope: !4853, file: !4477, line: 200, type: !104)
!4859 = !DILocalVariable(name: "h", scope: !4853, file: !4477, line: 202, type: !1996)
!4860 = !DILocalVariable(name: "c", scope: !4853, file: !4477, line: 203, type: !2001)
!4861 = !DILocalVariable(name: "addr", scope: !4853, file: !4477, line: 204, type: !111)
!4862 = !DILocalVariable(name: "chunk_base", scope: !4853, file: !4477, line: 205, type: !111)
!4863 = !DILocalVariable(name: "chunk_sz", scope: !4853, file: !4477, line: 206, type: !111)
!4864 = !DILocation(line: 0, scope: !4853)
!4865 = !DILocation(line: 202, column: 27, scope: !4853)
!4866 = !DILocation(line: 203, column: 16, scope: !4853)
!4867 = !DILocation(line: 204, column: 16, scope: !4853)
!4868 = !DILocation(line: 205, column: 31, scope: !4853)
!4869 = !DILocation(line: 205, column: 22, scope: !4853)
!4870 = !DILocation(line: 206, column: 20, scope: !4853)
!4871 = !DILocation(line: 206, column: 37, scope: !4853)
!4872 = !DILocation(line: 208, column: 26, scope: !4853)
!4873 = !DILocation(line: 208, column: 18, scope: !4853)
!4874 = !DILocation(line: 208, column: 2, scope: !4853)
!4875 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !4477, file: !4477, line: 263, type: !4876, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4878)
!4876 = !DISubroutineType(types: !4877)
!4877 = !{!104, !4480, !111}
!4878 = !{!4879, !4880, !4881, !4882, !4883, !4884}
!4879 = !DILocalVariable(name: "heap", arg: 1, scope: !4875, file: !4477, line: 263, type: !4480)
!4880 = !DILocalVariable(name: "bytes", arg: 2, scope: !4875, file: !4477, line: 263, type: !111)
!4881 = !DILocalVariable(name: "h", scope: !4875, file: !4477, line: 265, type: !1996)
!4882 = !DILocalVariable(name: "mem", scope: !4875, file: !4477, line: 266, type: !104)
!4883 = !DILocalVariable(name: "chunk_sz", scope: !4875, file: !4477, line: 272, type: !4622)
!4884 = !DILocalVariable(name: "c", scope: !4875, file: !4477, line: 273, type: !2001)
!4885 = !DILocation(line: 0, scope: !4875)
!4886 = !DILocation(line: 265, column: 27, scope: !4875)
!4887 = !DILocation(line: 268, column: 12, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4875, file: !4477, line: 268, column: 6)
!4889 = !DILocation(line: 268, column: 18, scope: !4888)
!4890 = !DILocation(line: 268, column: 21, scope: !4888)
!4891 = !DILocation(line: 268, column: 6, scope: !4875)
!4892 = !DILocation(line: 272, column: 23, scope: !4875)
!4893 = !DILocation(line: 273, column: 16, scope: !4875)
!4894 = !DILocation(line: 274, column: 8, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4875, file: !4477, line: 274, column: 6)
!4896 = !DILocation(line: 274, column: 6, scope: !4875)
!4897 = !DILocation(line: 279, column: 6, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4875, file: !4477, line: 279, column: 6)
!4899 = !DILocation(line: 279, column: 23, scope: !4898)
!4900 = !DILocation(line: 279, column: 6, scope: !4875)
!4901 = !DILocation(line: 280, column: 24, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4898, file: !4477, line: 279, column: 35)
!4903 = !DILocation(line: 280, column: 3, scope: !4902)
!4904 = !DILocation(line: 281, column: 3, scope: !4902)
!4905 = !DILocation(line: 282, column: 2, scope: !4902)
!4906 = !DILocation(line: 284, column: 2, scope: !4875)
!4907 = !DILocation(line: 286, column: 8, scope: !4875)
!4908 = !DILocation(line: 298, column: 2, scope: !4875)
!4909 = !DILocation(line: 299, column: 1, scope: !4875)
!4910 = distinct !DISubprogram(name: "size_too_big", scope: !1983, file: !1983, line: 256, type: !4911, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4913)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!540, !1996, !111}
!4913 = !{!4914, !4915}
!4914 = !DILocalVariable(name: "h", arg: 1, scope: !4910, file: !1983, line: 256, type: !1996)
!4915 = !DILocalVariable(name: "bytes", arg: 2, scope: !4910, file: !1983, line: 256, type: !111)
!4916 = !DILocation(line: 0, scope: !4910)
!4917 = !DILocation(line: 262, column: 16, scope: !4910)
!4918 = !DILocation(line: 262, column: 36, scope: !4910)
!4919 = !DILocation(line: 262, column: 30, scope: !4910)
!4920 = !DILocation(line: 262, column: 2, scope: !4910)
!4921 = distinct !DISubprogram(name: "alloc_chunk", scope: !4477, file: !4477, line: 211, type: !4922, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4924)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!2001, !1996, !4622}
!4924 = !{!4925, !4926, !4927, !4928, !4929, !4932, !4933, !4935, !4936, !4939}
!4925 = !DILocalVariable(name: "h", arg: 1, scope: !4921, file: !4477, line: 211, type: !1996)
!4926 = !DILocalVariable(name: "sz", arg: 2, scope: !4921, file: !4477, line: 211, type: !4622)
!4927 = !DILocalVariable(name: "bi", scope: !4921, file: !4477, line: 213, type: !105)
!4928 = !DILocalVariable(name: "b", scope: !4921, file: !4477, line: 214, type: !4677)
!4929 = !DILocalVariable(name: "first", scope: !4930, file: !4477, line: 233, type: !2001)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !4477, line: 232, column: 15)
!4931 = distinct !DILexicalBlock(scope: !4921, file: !4477, line: 232, column: 6)
!4932 = !DILocalVariable(name: "i", scope: !4930, file: !4477, line: 234, type: !105)
!4933 = !DILocalVariable(name: "c", scope: !4934, file: !4477, line: 236, type: !2001)
!4934 = distinct !DILexicalBlock(scope: !4930, file: !4477, line: 235, column: 6)
!4935 = !DILocalVariable(name: "bmask", scope: !4921, file: !4477, line: 249, type: !113)
!4936 = !DILocalVariable(name: "minbucket", scope: !4937, file: !4477, line: 252, type: !105)
!4937 = distinct !DILexicalBlock(scope: !4938, file: !4477, line: 251, column: 19)
!4938 = distinct !DILexicalBlock(scope: !4921, file: !4477, line: 251, column: 6)
!4939 = !DILocalVariable(name: "c", scope: !4937, file: !4477, line: 253, type: !2001)
!4940 = !DILocation(line: 0, scope: !4921)
!4941 = !DILocation(line: 213, column: 11, scope: !4921)
!4942 = !DILocation(line: 232, column: 9, scope: !4931)
!4943 = !DILocation(line: 232, column: 6, scope: !4931)
!4944 = !DILocation(line: 232, column: 6, scope: !4921)
!4945 = !DILocation(line: 236, column: 21, scope: !4934)
!4946 = !DILocation(line: 0, scope: !4930)
!4947 = !DILocation(line: 0, scope: !4934)
!4948 = !DILocation(line: 237, column: 8, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4934, file: !4477, line: 237, column: 8)
!4950 = !DILocation(line: 237, column: 25, scope: !4949)
!4951 = !DILocation(line: 237, column: 8, scope: !4934)
!4952 = !DILocation(line: 238, column: 5, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4949, file: !4477, line: 237, column: 32)
!4954 = !DILocation(line: 241, column: 14, scope: !4934)
!4955 = !DILocation(line: 241, column: 12, scope: !4934)
!4956 = !DILocation(line: 243, column: 12, scope: !4930)
!4957 = !DILocation(line: 243, column: 16, scope: !4930)
!4958 = distinct !{!4958, !4959, !4960}
!4959 = !DILocation(line: 235, column: 3, scope: !4930)
!4960 = !DILocation(line: 243, column: 35, scope: !4930)
!4961 = !DILocation(line: 249, column: 22, scope: !4921)
!4962 = !DILocation(line: 249, column: 39, scope: !4921)
!4963 = !DILocation(line: 249, column: 36, scope: !4921)
!4964 = !DILocation(line: 251, column: 12, scope: !4938)
!4965 = !DILocation(line: 251, column: 6, scope: !4921)
!4966 = !DILocation(line: 252, column: 19, scope: !4937)
!4967 = !DILocation(line: 0, scope: !4937)
!4968 = !DILocation(line: 253, column: 39, scope: !4937)
!4969 = !DILocation(line: 255, column: 3, scope: !4937)
!4970 = !DILocation(line: 261, column: 1, scope: !4921)
!4971 = distinct !DISubprogram(name: "split_chunks", scope: !4477, file: !4477, line: 109, type: !4615, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4972)
!4972 = !{!4973, !4974, !4975, !4976, !4977, !4978}
!4973 = !DILocalVariable(name: "h", arg: 1, scope: !4971, file: !4477, line: 109, type: !1996)
!4974 = !DILocalVariable(name: "lc", arg: 2, scope: !4971, file: !4477, line: 109, type: !2001)
!4975 = !DILocalVariable(name: "rc", arg: 3, scope: !4971, file: !4477, line: 109, type: !2001)
!4976 = !DILocalVariable(name: "sz0", scope: !4971, file: !4477, line: 114, type: !4622)
!4977 = !DILocalVariable(name: "lsz", scope: !4971, file: !4477, line: 115, type: !4622)
!4978 = !DILocalVariable(name: "rsz", scope: !4971, file: !4477, line: 116, type: !4622)
!4979 = !DILocation(line: 0, scope: !4971)
!4980 = !DILocation(line: 114, column: 18, scope: !4971)
!4981 = !DILocation(line: 115, column: 21, scope: !4971)
!4982 = !DILocation(line: 116, column: 22, scope: !4971)
!4983 = !DILocation(line: 118, column: 2, scope: !4971)
!4984 = !DILocation(line: 119, column: 2, scope: !4971)
!4985 = !DILocation(line: 120, column: 2, scope: !4971)
!4986 = !DILocation(line: 121, column: 25, scope: !4971)
!4987 = !DILocation(line: 121, column: 2, scope: !4971)
!4988 = !DILocation(line: 122, column: 1, scope: !4971)
!4989 = distinct !DISubprogram(name: "chunk_mem", scope: !4477, file: !4477, line: 24, type: !4990, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!104, !1996, !2001}
!4992 = !{!4993, !4994, !4995, !4996}
!4993 = !DILocalVariable(name: "h", arg: 1, scope: !4989, file: !4477, line: 24, type: !1996)
!4994 = !DILocalVariable(name: "c", arg: 2, scope: !4989, file: !4477, line: 24, type: !2001)
!4995 = !DILocalVariable(name: "buf", scope: !4989, file: !4477, line: 26, type: !1990)
!4996 = !DILocalVariable(name: "ret", scope: !4989, file: !4477, line: 27, type: !432)
!4997 = !DILocation(line: 0, scope: !4989)
!4998 = !DILocation(line: 26, column: 22, scope: !4989)
!4999 = !DILocation(line: 27, column: 38, scope: !4989)
!5000 = !DILocation(line: 31, column: 2, scope: !4989)
!5001 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !4477, file: !4477, line: 301, type: !5002, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !5004)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{!104, !4480, !111, !111}
!5004 = !{!5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016}
!5005 = !DILocalVariable(name: "heap", arg: 1, scope: !5001, file: !4477, line: 301, type: !4480)
!5006 = !DILocalVariable(name: "align", arg: 2, scope: !5001, file: !4477, line: 301, type: !111)
!5007 = !DILocalVariable(name: "bytes", arg: 3, scope: !5001, file: !4477, line: 301, type: !111)
!5008 = !DILocalVariable(name: "h", scope: !5001, file: !4477, line: 303, type: !1996)
!5009 = !DILocalVariable(name: "gap", scope: !5001, file: !4477, line: 304, type: !111)
!5010 = !DILocalVariable(name: "rew", scope: !5001, file: !4477, line: 304, type: !111)
!5011 = !DILocalVariable(name: "padded_sz", scope: !5001, file: !4477, line: 335, type: !4622)
!5012 = !DILocalVariable(name: "c0", scope: !5001, file: !4477, line: 336, type: !2001)
!5013 = !DILocalVariable(name: "mem", scope: !5001, file: !4477, line: 341, type: !432)
!5014 = !DILocalVariable(name: "end", scope: !5001, file: !4477, line: 345, type: !1990)
!5015 = !DILocalVariable(name: "c", scope: !5001, file: !4477, line: 348, type: !2001)
!5016 = !DILocalVariable(name: "c_end", scope: !5001, file: !4477, line: 349, type: !2001)
!5017 = !DILocation(line: 0, scope: !5001)
!5018 = !DILocation(line: 303, column: 27, scope: !5001)
!5019 = !DILocation(line: 313, column: 16, scope: !5001)
!5020 = !DILocation(line: 313, column: 14, scope: !5001)
!5021 = !DILocation(line: 314, column: 12, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5001, file: !4477, line: 314, column: 6)
!5023 = !DILocation(line: 314, column: 6, scope: !5001)
!5024 = !DILocation(line: 315, column: 9, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !4477, line: 314, column: 20)
!5026 = !DILocation(line: 316, column: 9, scope: !5025)
!5027 = !DILocation(line: 318, column: 13, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !4477, line: 318, column: 7)
!5029 = distinct !DILexicalBlock(scope: !5022, file: !4477, line: 317, column: 9)
!5030 = !DILocation(line: 318, column: 7, scope: !5029)
!5031 = !DILocation(line: 319, column: 11, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !4477, line: 318, column: 39)
!5033 = !DILocation(line: 319, column: 4, scope: !5032)
!5034 = !DILocation(line: 0, scope: !5022)
!5035 = !DILocation(line: 324, column: 2, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !4477, line: 324, column: 2)
!5037 = distinct !DILexicalBlock(scope: !5001, file: !4477, line: 324, column: 2)
!5038 = !DILocation(line: 324, column: 2, scope: !5037)
!5039 = !DILocation(line: 324, column: 2, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !4477, line: 324, column: 2)
!5041 = !DILocation(line: 326, column: 12, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5001, file: !4477, line: 326, column: 6)
!5043 = !DILocation(line: 326, column: 17, scope: !5042)
!5044 = !DILocation(line: 326, column: 20, scope: !5042)
!5045 = !DILocation(line: 326, column: 6, scope: !5001)
!5046 = !DILocation(line: 335, column: 50, scope: !5001)
!5047 = !DILocation(line: 335, column: 58, scope: !5001)
!5048 = !DILocation(line: 335, column: 24, scope: !5001)
!5049 = !DILocation(line: 336, column: 17, scope: !5001)
!5050 = !DILocation(line: 338, column: 9, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5001, file: !4477, line: 338, column: 6)
!5052 = !DILocation(line: 338, column: 6, scope: !5001)
!5053 = !DILocation(line: 341, column: 17, scope: !5001)
!5054 = !DILocation(line: 344, column: 20, scope: !5001)
!5055 = !DILocation(line: 344, column: 8, scope: !5001)
!5056 = !DILocation(line: 344, column: 47, scope: !5001)
!5057 = !DILocation(line: 345, column: 39, scope: !5001)
!5058 = !DILocation(line: 348, column: 16, scope: !5001)
!5059 = !DILocation(line: 349, column: 26, scope: !5001)
!5060 = !DILocation(line: 349, column: 24, scope: !5001)
!5061 = !DILocation(line: 353, column: 8, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5001, file: !4477, line: 353, column: 6)
!5063 = !DILocation(line: 353, column: 6, scope: !5001)
!5064 = !DILocation(line: 354, column: 3, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5062, file: !4477, line: 353, column: 14)
!5066 = !DILocation(line: 355, column: 3, scope: !5065)
!5067 = !DILocation(line: 356, column: 2, scope: !5065)
!5068 = !DILocation(line: 359, column: 6, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5001, file: !4477, line: 359, column: 6)
!5070 = !DILocation(line: 359, column: 24, scope: !5069)
!5071 = !DILocation(line: 359, column: 6, scope: !5001)
!5072 = !DILocation(line: 360, column: 3, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5069, file: !4477, line: 359, column: 33)
!5074 = !DILocation(line: 361, column: 3, scope: !5073)
!5075 = !DILocation(line: 362, column: 2, scope: !5073)
!5076 = !DILocation(line: 364, column: 2, scope: !5001)
!5077 = !DILocation(line: 377, column: 1, scope: !5001)
!5078 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !4477, file: !4477, line: 379, type: !5079, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !5081)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!104, !4480, !104, !111, !111}
!5081 = !{!5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5097, !5098}
!5082 = !DILocalVariable(name: "heap", arg: 1, scope: !5078, file: !4477, line: 379, type: !4480)
!5083 = !DILocalVariable(name: "ptr", arg: 2, scope: !5078, file: !4477, line: 379, type: !104)
!5084 = !DILocalVariable(name: "align", arg: 3, scope: !5078, file: !4477, line: 380, type: !111)
!5085 = !DILocalVariable(name: "bytes", arg: 4, scope: !5078, file: !4477, line: 380, type: !111)
!5086 = !DILocalVariable(name: "h", scope: !5078, file: !4477, line: 382, type: !1996)
!5087 = !DILocalVariable(name: "c", scope: !5078, file: !4477, line: 399, type: !2001)
!5088 = !DILocalVariable(name: "rc", scope: !5078, file: !4477, line: 400, type: !2001)
!5089 = !DILocalVariable(name: "align_gap", scope: !5078, file: !4477, line: 401, type: !111)
!5090 = !DILocalVariable(name: "chunks_need", scope: !5078, file: !4477, line: 402, type: !4622)
!5091 = !DILocalVariable(name: "split_size", scope: !5092, file: !4477, line: 435, type: !4622)
!5092 = distinct !DILexicalBlock(scope: !5093, file: !4477, line: 433, column: 61)
!5093 = distinct !DILexicalBlock(scope: !5094, file: !4477, line: 432, column: 13)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !4477, line: 409, column: 13)
!5095 = distinct !DILexicalBlock(scope: !5096, file: !4477, line: 406, column: 13)
!5096 = distinct !DILexicalBlock(scope: !5078, file: !4477, line: 404, column: 6)
!5097 = !DILocalVariable(name: "ptr2", scope: !5078, file: !4477, line: 474, type: !104)
!5098 = !DILocalVariable(name: "prev_size", scope: !5099, file: !4477, line: 477, type: !111)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !4477, line: 476, column: 20)
!5100 = distinct !DILexicalBlock(scope: !5078, file: !4477, line: 476, column: 6)
!5101 = !DILocation(line: 0, scope: !5078)
!5102 = !DILocation(line: 382, column: 27, scope: !5078)
!5103 = !DILocation(line: 385, column: 10, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5078, file: !4477, line: 385, column: 6)
!5105 = !DILocation(line: 385, column: 6, scope: !5078)
!5106 = !DILocation(line: 386, column: 10, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5104, file: !4477, line: 385, column: 19)
!5108 = !DILocation(line: 386, column: 3, scope: !5107)
!5109 = !DILocation(line: 388, column: 12, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5078, file: !4477, line: 388, column: 6)
!5111 = !DILocation(line: 388, column: 6, scope: !5078)
!5112 = !DILocation(line: 389, column: 3, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5110, file: !4477, line: 388, column: 18)
!5114 = !DILocation(line: 390, column: 3, scope: !5113)
!5115 = !DILocation(line: 393, column: 2, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !4477, line: 393, column: 2)
!5117 = distinct !DILexicalBlock(scope: !5078, file: !4477, line: 393, column: 2)
!5118 = !DILocation(line: 393, column: 2, scope: !5117)
!5119 = !DILocation(line: 393, column: 2, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !4477, line: 393, column: 2)
!5121 = !DILocation(line: 395, column: 6, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5078, file: !4477, line: 395, column: 6)
!5123 = !DILocation(line: 395, column: 6, scope: !5078)
!5124 = !DILocation(line: 399, column: 16, scope: !5078)
!5125 = !DILocation(line: 400, column: 17, scope: !5078)
!5126 = !DILocation(line: 401, column: 49, scope: !5078)
!5127 = !DILocation(line: 401, column: 36, scope: !5078)
!5128 = !DILocation(line: 402, column: 52, scope: !5078)
!5129 = !DILocation(line: 402, column: 26, scope: !5078)
!5130 = !DILocation(line: 404, column: 6, scope: !5096)
!5131 = !DILocation(line: 404, column: 12, scope: !5096)
!5132 = !DILocation(line: 406, column: 13, scope: !5095)
!5133 = !DILocation(line: 406, column: 30, scope: !5095)
!5134 = !DILocation(line: 406, column: 13, scope: !5096)
!5135 = !DILocation(line: 409, column: 30, scope: !5094)
!5136 = !DILocation(line: 409, column: 13, scope: !5095)
!5137 = !DILocation(line: 420, column: 24, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5094, file: !4477, line: 409, column: 45)
!5139 = !DILocation(line: 420, column: 3, scope: !5138)
!5140 = !DILocation(line: 421, column: 3, scope: !5138)
!5141 = !DILocation(line: 422, column: 3, scope: !5138)
!5142 = !DILocation(line: 431, column: 3, scope: !5138)
!5143 = !DILocation(line: 432, column: 14, scope: !5093)
!5144 = !DILocation(line: 432, column: 32, scope: !5093)
!5145 = !DILocation(line: 433, column: 26, scope: !5093)
!5146 = !DILocation(line: 433, column: 24, scope: !5093)
!5147 = !DILocation(line: 433, column: 44, scope: !5093)
!5148 = !DILocation(line: 432, column: 13, scope: !5094)
!5149 = !DILocation(line: 435, column: 38, scope: !5092)
!5150 = !DILocation(line: 0, scope: !5092)
!5151 = !DILocation(line: 445, column: 3, scope: !5092)
!5152 = !DILocation(line: 447, column: 20, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5092, file: !4477, line: 447, column: 7)
!5154 = !DILocation(line: 447, column: 18, scope: !5153)
!5155 = !DILocation(line: 447, column: 7, scope: !5092)
!5156 = !DILocation(line: 448, column: 27, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !4477, line: 447, column: 39)
!5158 = !DILocation(line: 448, column: 4, scope: !5157)
!5159 = !DILocation(line: 449, column: 4, scope: !5157)
!5160 = !DILocation(line: 450, column: 3, scope: !5157)
!5161 = !DILocation(line: 452, column: 3, scope: !5092)
!5162 = !DILocation(line: 453, column: 3, scope: !5092)
!5163 = !DILocation(line: 474, column: 15, scope: !5078)
!5164 = !DILocation(line: 476, column: 11, scope: !5100)
!5165 = !DILocation(line: 476, column: 6, scope: !5078)
!5166 = !DILocation(line: 477, column: 42, scope: !5099)
!5167 = !DILocation(line: 477, column: 22, scope: !5099)
!5168 = !DILocation(line: 477, column: 60, scope: !5099)
!5169 = !DILocation(line: 0, scope: !5099)
!5170 = !DILocation(line: 479, column: 21, scope: !5099)
!5171 = !DILocation(line: 479, column: 3, scope: !5099)
!5172 = !DILocation(line: 480, column: 3, scope: !5099)
!5173 = !DILocation(line: 481, column: 2, scope: !5099)
!5174 = !DILocation(line: 483, column: 1, scope: !5078)
!5175 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !1983, file: !1983, line: 245, type: !5176, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !5178)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!111, !1996, !4622}
!5178 = !{!5179, !5180}
!5179 = !DILocalVariable(name: "h", arg: 1, scope: !5175, file: !1983, line: 245, type: !1996)
!5180 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5175, file: !1983, line: 245, type: !4622)
!5181 = !DILocation(line: 0, scope: !5175)
!5182 = !DILocation(line: 247, column: 20, scope: !5175)
!5183 = !DILocation(line: 247, column: 33, scope: !5175)
!5184 = !DILocation(line: 247, column: 2, scope: !5175)
!5185 = distinct !DISubprogram(name: "sys_heap_init", scope: !4477, file: !4477, line: 485, type: !5186, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1979, retainedNodes: !5188)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{null, !4480, !104, !111}
!5188 = !{!5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198}
!5189 = !DILocalVariable(name: "heap", arg: 1, scope: !5185, file: !4477, line: 485, type: !4480)
!5190 = !DILocalVariable(name: "mem", arg: 2, scope: !5185, file: !4477, line: 485, type: !104)
!5191 = !DILocalVariable(name: "bytes", arg: 3, scope: !5185, file: !4477, line: 485, type: !111)
!5192 = !DILocalVariable(name: "addr", scope: !5185, file: !4477, line: 502, type: !22)
!5193 = !DILocalVariable(name: "end", scope: !5185, file: !4477, line: 503, type: !22)
!5194 = !DILocalVariable(name: "heap_sz", scope: !5185, file: !4477, line: 504, type: !4622)
!5195 = !DILocalVariable(name: "h", scope: !5185, file: !4477, line: 509, type: !1996)
!5196 = !DILocalVariable(name: "nb_buckets", scope: !5185, file: !4477, line: 520, type: !105)
!5197 = !DILocalVariable(name: "chunk0_size", scope: !5185, file: !4477, line: 521, type: !4622)
!5198 = !DILocalVariable(name: "i", scope: !5199, file: !4477, line: 526, type: !105)
!5199 = distinct !DILexicalBlock(scope: !5185, file: !4477, line: 526, column: 2)
!5200 = !DILocation(line: 0, scope: !5185)
!5201 = !DILocation(line: 491, column: 3, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !4477, line: 491, column: 3)
!5203 = distinct !DILexicalBlock(scope: !5204, file: !4477, line: 491, column: 3)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !4477, line: 489, column: 46)
!5205 = distinct !DILexicalBlock(scope: !5185, file: !4477, line: 489, column: 6)
!5206 = !DILocation(line: 491, column: 3, scope: !5203)
!5207 = !DILocation(line: 491, column: 3, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5202, file: !4477, line: 491, column: 3)
!5209 = !DILocation(line: 498, column: 2, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5211, file: !4477, line: 498, column: 2)
!5211 = distinct !DILexicalBlock(scope: !5185, file: !4477, line: 498, column: 2)
!5212 = !DILocation(line: 498, column: 2, scope: !5211)
!5213 = !DILocation(line: 498, column: 2, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !4477, line: 498, column: 2)
!5215 = !DILocation(line: 499, column: 8, scope: !5185)
!5216 = !DILocation(line: 502, column: 19, scope: !5185)
!5217 = !DILocation(line: 503, column: 18, scope: !5185)
!5218 = !DILocation(line: 504, column: 27, scope: !5185)
!5219 = !DILocation(line: 504, column: 35, scope: !5185)
!5220 = !DILocation(line: 507, column: 2, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5222, file: !4477, line: 507, column: 2)
!5222 = distinct !DILexicalBlock(scope: !5185, file: !4477, line: 507, column: 2)
!5223 = !DILocation(line: 507, column: 2, scope: !5222)
!5224 = !DILocation(line: 507, column: 2, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !4477, line: 507, column: 2)
!5226 = !DILocation(line: 509, column: 21, scope: !5185)
!5227 = !DILocation(line: 510, column: 8, scope: !5185)
!5228 = !DILocation(line: 510, column: 13, scope: !5185)
!5229 = !DILocation(line: 511, column: 5, scope: !5185)
!5230 = !DILocation(line: 511, column: 15, scope: !5185)
!5231 = !DILocation(line: 512, column: 5, scope: !5185)
!5232 = !DILocation(line: 512, column: 19, scope: !5185)
!5233 = !DILocation(line: 520, column: 19, scope: !5185)
!5234 = !DILocation(line: 522, column: 21, scope: !5185)
!5235 = !DILocation(line: 521, column: 56, scope: !5185)
!5236 = !DILocation(line: 521, column: 26, scope: !5185)
!5237 = !DILocation(line: 524, column: 2, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !4477, line: 524, column: 2)
!5239 = distinct !DILexicalBlock(scope: !5185, file: !4477, line: 524, column: 2)
!5240 = !DILocation(line: 524, column: 2, scope: !5239)
!5241 = !DILocation(line: 0, scope: !5199)
!5242 = !DILocation(line: 526, column: 20, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5199, file: !4477, line: 526, column: 2)
!5244 = !DILocation(line: 526, column: 2, scope: !5199)
!5245 = !DILocation(line: 524, column: 2, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5238, file: !4477, line: 524, column: 2)
!5247 = !DILocation(line: 531, column: 2, scope: !5185)
!5248 = !DILocation(line: 532, column: 2, scope: !5185)
!5249 = !DILocation(line: 533, column: 2, scope: !5185)
!5250 = !DILocation(line: 536, column: 41, scope: !5185)
!5251 = !DILocation(line: 536, column: 2, scope: !5185)
!5252 = !DILocation(line: 537, column: 2, scope: !5185)
!5253 = !DILocation(line: 540, column: 2, scope: !5185)
!5254 = !DILocation(line: 541, column: 2, scope: !5185)
!5255 = !DILocation(line: 542, column: 2, scope: !5185)
!5256 = !DILocation(line: 544, column: 2, scope: !5185)
!5257 = !DILocation(line: 545, column: 1, scope: !5185)
!5258 = !DILocation(line: 527, column: 17, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5243, file: !4477, line: 526, column: 39)
!5260 = !DILocation(line: 527, column: 22, scope: !5259)
!5261 = !DILocation(line: 526, column: 35, scope: !5243)
!5262 = distinct !{!5262, !5244, !5263}
!5263 = !DILocation(line: 528, column: 2, scope: !5199)
!5264 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2017, file: !2017, line: 1338, type: !5265, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5273)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{!105, !3633, !104, !269, !5267, !113}
!5267 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3251, line: 99, baseType: !5268)
!5268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3251, line: 40, baseType: !5269)
!5269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2017, baseType: !5270)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5271)
!5271 = !{!5272}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5270, file: !2017, baseType: !104, size: 32)
!5273 = !{!5274, !5275, !5276, !5277, !5278, !5279, !5283, !5284, !5285, !5287, !5292, !5335, !5338, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5350, !5351, !5352, !5356, !5359, !5361, !5364, !5365, !5366, !5371, !5377, !5380, !5384, !5390, !5394, !5397, !5399, !5402}
!5274 = !DILocalVariable(name: "out", arg: 1, scope: !5264, file: !2017, line: 1338, type: !3633)
!5275 = !DILocalVariable(name: "ctx", arg: 2, scope: !5264, file: !2017, line: 1338, type: !104)
!5276 = !DILocalVariable(name: "fp", arg: 3, scope: !5264, file: !2017, line: 1338, type: !269)
!5277 = !DILocalVariable(name: "ap", arg: 4, scope: !5264, file: !2017, line: 1339, type: !5267)
!5278 = !DILocalVariable(name: "flags", arg: 5, scope: !5264, file: !2017, line: 1339, type: !113)
!5279 = !DILocalVariable(name: "buf", scope: !5264, file: !2017, line: 1341, type: !5280)
!5280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !5281)
!5281 = !{!5282}
!5282 = !DISubrange(count: 22)
!5283 = !DILocalVariable(name: "count", scope: !5264, file: !2017, line: 1342, type: !111)
!5284 = !DILocalVariable(name: "sint", scope: !5264, file: !2017, line: 1343, type: !2036)
!5285 = !DILocalVariable(name: "tagged_ap", scope: !5264, file: !2017, line: 1345, type: !5286)
!5286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !540)
!5287 = !DILocalVariable(name: "rc", scope: !5288, file: !2017, line: 1377, type: !105)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !2017, line: 1377, column: 4)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !2017, line: 1376, column: 19)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1376, column: 7)
!5291 = distinct !DILexicalBlock(scope: !5264, file: !2017, line: 1375, column: 19)
!5292 = !DILocalVariable(name: "state", scope: !5291, file: !2017, line: 1395, type: !5293)
!5293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5264, file: !2017, line: 1392, size: 192, elements: !5294)
!5294 = !{!5295, !5303}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5293, file: !2017, line: 1393, baseType: !5296, size: 64)
!5296 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2017, line: 166, size: 64, elements: !5297)
!5297 = !{!5298, !5299, !5300, !5301, !5302}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5296, file: !2017, line: 168, baseType: !2036, size: 64)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5296, file: !2017, line: 171, baseType: !2039, size: 64)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5296, file: !2017, line: 174, baseType: !426, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5296, file: !2017, line: 177, baseType: !424, size: 64)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5296, file: !2017, line: 180, baseType: !104, size: 32)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5293, file: !2017, line: 1394, baseType: !5304, size: 96, offset: 64)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2017, line: 189, size: 96, elements: !5305)
!5305 = !{!5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5330}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5304, file: !2017, line: 191, baseType: !540, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5304, file: !2017, line: 194, baseType: !540, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5304, file: !2017, line: 197, baseType: !540, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5304, file: !2017, line: 200, baseType: !540, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5304, file: !2017, line: 203, baseType: !540, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5304, file: !2017, line: 206, baseType: !540, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5304, file: !2017, line: 209, baseType: !540, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5304, file: !2017, line: 212, baseType: !540, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5304, file: !2017, line: 219, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5304, file: !2017, line: 222, baseType: !540, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5304, file: !2017, line: 229, baseType: !540, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5304, file: !2017, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5304, file: !2017, line: 238, baseType: !540, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5304, file: !2017, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5304, file: !2017, line: 244, baseType: !540, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5304, file: !2017, line: 247, baseType: !540, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5304, file: !2017, line: 252, baseType: !540, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5304, file: !2017, line: 257, baseType: !540, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5304, file: !2017, line: 260, baseType: !170, size: 8, offset: 24)
!5325 = !DIDerivedType(tag: DW_TAG_member, scope: !5304, file: !2017, line: 262, baseType: !5326, size: 32, offset: 32)
!5326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5304, file: !2017, line: 262, size: 32, elements: !5327)
!5327 = !{!5328, !5329}
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5326, file: !2017, line: 267, baseType: !105, size: 32)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5326, file: !2017, line: 289, baseType: !105, size: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, scope: !5304, file: !2017, line: 292, baseType: !5331, size: 32, offset: 64)
!5331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5304, file: !2017, line: 292, size: 32, elements: !5332)
!5332 = !{!5333, !5334}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5331, file: !2017, line: 297, baseType: !105, size: 32)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5331, file: !2017, line: 306, baseType: !105, size: 32)
!5335 = !DILocalVariable(name: "conv", scope: !5291, file: !2017, line: 1400, type: !5336)
!5336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5337)
!5337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 32)
!5338 = !DILocalVariable(name: "value", scope: !5291, file: !2017, line: 1401, type: !5339)
!5339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5340)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 32)
!5341 = !DILocalVariable(name: "sp", scope: !5291, file: !2017, line: 1402, type: !269)
!5342 = !DILocalVariable(name: "width", scope: !5291, file: !2017, line: 1403, type: !105)
!5343 = !DILocalVariable(name: "precision", scope: !5291, file: !2017, line: 1404, type: !105)
!5344 = !DILocalVariable(name: "bps", scope: !5291, file: !2017, line: 1405, type: !269)
!5345 = !DILocalVariable(name: "bpe", scope: !5291, file: !2017, line: 1406, type: !269)
!5346 = !DILocalVariable(name: "sign", scope: !5291, file: !2017, line: 1407, type: !103)
!5347 = !DILocalVariable(name: "arg", scope: !5348, file: !2017, line: 1432, type: !105)
!5348 = distinct !DILexicalBlock(scope: !5349, file: !2017, line: 1431, column: 24)
!5349 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1431, column: 7)
!5350 = !DILocalVariable(name: "specifier_cat", scope: !5291, file: !2017, line: 1468, type: !2016)
!5351 = !DILocalVariable(name: "length_mod", scope: !5291, file: !2017, line: 1470, type: !2024)
!5352 = !DILocalVariable(name: "rc", scope: !5353, file: !2017, line: 1575, type: !105)
!5353 = distinct !DILexicalBlock(scope: !5354, file: !2017, line: 1575, column: 4)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !2017, line: 1574, column: 43)
!5355 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1574, column: 7)
!5356 = !DILocalVariable(name: "rc", scope: !5357, file: !2017, line: 1584, type: !105)
!5357 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1584, column: 4)
!5358 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1582, column: 28)
!5359 = !DILocalVariable(name: "len", scope: !5360, file: !2017, line: 1589, type: !111)
!5360 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1586, column: 13)
!5361 = !DILocalVariable(name: "len", scope: !5362, file: !2017, line: 1641, type: !111)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !2017, line: 1640, column: 24)
!5363 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1640, column: 8)
!5364 = !DILocalVariable(name: "nj_len", scope: !5291, file: !2017, line: 1722, type: !111)
!5365 = !DILocalVariable(name: "pad_len", scope: !5291, file: !2017, line: 1723, type: !105)
!5366 = !DILocalVariable(name: "pad", scope: !5367, file: !2017, line: 1751, type: !103)
!5367 = distinct !DILexicalBlock(scope: !5368, file: !2017, line: 1750, column: 26)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !2017, line: 1750, column: 8)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !2017, line: 1747, column: 18)
!5370 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1747, column: 7)
!5371 = !DILocalVariable(name: "rc", scope: !5372, file: !2017, line: 1758, type: !105)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !2017, line: 1758, column: 7)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !2017, line: 1757, column: 21)
!5374 = distinct !DILexicalBlock(scope: !5375, file: !2017, line: 1757, column: 10)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !2017, line: 1756, column: 26)
!5376 = distinct !DILexicalBlock(scope: !5367, file: !2017, line: 1756, column: 9)
!5377 = !DILocalVariable(name: "rc", scope: !5378, file: !2017, line: 1765, type: !105)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !2017, line: 1765, column: 6)
!5379 = distinct !DILexicalBlock(scope: !5367, file: !2017, line: 1764, column: 25)
!5380 = !DILocalVariable(name: "rc", scope: !5381, file: !2017, line: 1774, type: !105)
!5381 = distinct !DILexicalBlock(scope: !5382, file: !2017, line: 1774, column: 4)
!5382 = distinct !DILexicalBlock(scope: !5383, file: !2017, line: 1773, column: 18)
!5383 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1773, column: 7)
!5384 = !DILocalVariable(name: "rc", scope: !5385, file: !2017, line: 1819, type: !105)
!5385 = distinct !DILexicalBlock(scope: !5386, file: !2017, line: 1819, column: 5)
!5386 = distinct !DILexicalBlock(scope: !5387, file: !2017, line: 1818, column: 44)
!5387 = distinct !DILexicalBlock(scope: !5388, file: !2017, line: 1818, column: 8)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !2017, line: 1817, column: 10)
!5389 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1777, column: 7)
!5390 = !DILocalVariable(name: "rc", scope: !5391, file: !2017, line: 1823, type: !105)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !2017, line: 1823, column: 5)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !2017, line: 1822, column: 26)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !2017, line: 1822, column: 8)
!5394 = !DILocalVariable(name: "rc", scope: !5395, file: !2017, line: 1828, type: !105)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !2017, line: 1828, column: 5)
!5396 = distinct !DILexicalBlock(scope: !5388, file: !2017, line: 1827, column: 26)
!5397 = !DILocalVariable(name: "rc", scope: !5398, file: !2017, line: 1831, type: !105)
!5398 = distinct !DILexicalBlock(scope: !5388, file: !2017, line: 1831, column: 4)
!5399 = !DILocalVariable(name: "rc", scope: !5400, file: !2017, line: 1836, type: !105)
!5400 = distinct !DILexicalBlock(scope: !5401, file: !2017, line: 1836, column: 4)
!5401 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1835, column: 21)
!5402 = !DILabel(scope: !5358, name: "prec_int_pad0", file: !2017, line: 1634)
!5403 = !DILocation(line: 0, scope: !5264)
!5404 = !DILocation(line: 1341, column: 2, scope: !5264)
!5405 = !DILocation(line: 1341, column: 7, scope: !5264)
!5406 = !DILocation(line: 1375, column: 2, scope: !5264)
!5407 = !DILocation(line: 1342, column: 9, scope: !5264)
!5408 = !DILocation(line: 1375, column: 9, scope: !5264)
!5409 = !DILocation(line: 1377, column: 4, scope: !5288)
!5410 = !DILocation(line: 0, scope: !5288)
!5411 = !DILocation(line: 1377, column: 4, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5288, file: !2017, line: 1377, column: 4)
!5413 = distinct !{!5413, !5406, !5414}
!5414 = !DILocation(line: 1839, column: 2, scope: !5264)
!5415 = !DILocation(line: 1392, column: 3, scope: !5291)
!5416 = !DILocation(line: 1395, column: 5, scope: !5291)
!5417 = !DILocation(line: 0, scope: !5291)
!5418 = !DILocation(line: 1409, column: 8, scope: !5291)
!5419 = !DILocation(line: 1414, column: 13, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1414, column: 7)
!5421 = !DILocation(line: 1414, column: 7, scope: !5291)
!5422 = !DILocation(line: 1415, column: 12, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5420, file: !2017, line: 1414, column: 25)
!5424 = !DILocation(line: 1417, column: 14, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5423, file: !2017, line: 1417, column: 8)
!5426 = !DILocation(line: 1417, column: 8, scope: !5423)
!5427 = !DILocation(line: 1418, column: 21, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5425, file: !2017, line: 1417, column: 19)
!5429 = !DILocation(line: 1419, column: 13, scope: !5428)
!5430 = !DILocation(line: 1420, column: 4, scope: !5428)
!5431 = !DILocation(line: 1421, column: 20, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5420, file: !2017, line: 1421, column: 14)
!5433 = !DILocation(line: 1421, column: 14, scope: !5420)
!5434 = !DILocation(line: 1431, column: 13, scope: !5349)
!5435 = !DILocation(line: 1431, column: 7, scope: !5291)
!5436 = !DILocation(line: 1432, column: 14, scope: !5348)
!5437 = !DILocation(line: 0, scope: !5348)
!5438 = !DILocation(line: 1434, column: 12, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5348, file: !2017, line: 1434, column: 8)
!5440 = !DILocation(line: 1434, column: 8, scope: !5348)
!5441 = !DILocation(line: 1435, column: 24, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5439, file: !2017, line: 1434, column: 17)
!5443 = !DILocation(line: 1436, column: 4, scope: !5442)
!5444 = !DILocation(line: 1439, column: 20, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5349, file: !2017, line: 1439, column: 14)
!5446 = !DILocation(line: 1439, column: 14, scope: !5349)
!5447 = !DILocation(line: 1469, column: 37, scope: !5291)
!5448 = !DILocation(line: 1448, column: 20, scope: !5291)
!5449 = !DILocation(line: 1449, column: 22, scope: !5291)
!5450 = !DILocation(line: 1471, column: 34, scope: !5291)
!5451 = !DILocation(line: 1478, column: 7, scope: !5291)
!5452 = !DILocation(line: 1479, column: 4, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !2017, line: 1478, column: 40)
!5454 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1478, column: 7)
!5455 = !DILocation(line: 1484, column: 19, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5453, file: !2017, line: 1479, column: 24)
!5457 = !DILocation(line: 1484, column: 17, scope: !5456)
!5458 = !DILocation(line: 1485, column: 5, scope: !5456)
!5459 = !DILocation(line: 1492, column: 20, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !2017, line: 1491, column: 12)
!5461 = distinct !DILexicalBlock(scope: !5456, file: !2017, line: 1487, column: 9)
!5462 = !DILocation(line: 1492, column: 18, scope: !5460)
!5463 = !DILocation(line: 1494, column: 5, scope: !5456)
!5464 = !DILocation(line: 1497, column: 23, scope: !5456)
!5465 = !DILocation(line: 1496, column: 17, scope: !5456)
!5466 = !DILocation(line: 1498, column: 5, scope: !5456)
!5467 = !DILocation(line: 1501, column: 23, scope: !5456)
!5468 = !DILocation(line: 1500, column: 17, scope: !5456)
!5469 = !DILocation(line: 1502, column: 5, scope: !5456)
!5470 = !DILocation(line: 1513, column: 23, scope: !5456)
!5471 = !DILocation(line: 1513, column: 6, scope: !5456)
!5472 = !DILocation(line: 1512, column: 17, scope: !5456)
!5473 = !DILocation(line: 1514, column: 5, scope: !5456)
!5474 = !DILocation(line: 0, scope: !5456)
!5475 = !DILocation(line: 1516, column: 8, scope: !5453)
!5476 = !DILocation(line: 1517, column: 19, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !2017, line: 1516, column: 33)
!5478 = distinct !DILexicalBlock(scope: !5453, file: !2017, line: 1516, column: 8)
!5479 = !DILocation(line: 1517, column: 17, scope: !5477)
!5480 = !DILocation(line: 1518, column: 4, scope: !5477)
!5481 = !DILocation(line: 1519, column: 19, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !2017, line: 1518, column: 39)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !2017, line: 1518, column: 15)
!5484 = !DILocation(line: 1519, column: 17, scope: !5482)
!5485 = !DILocation(line: 1520, column: 4, scope: !5482)
!5486 = !DILocation(line: 1522, column: 4, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !2017, line: 1521, column: 47)
!5488 = distinct !DILexicalBlock(scope: !5454, file: !2017, line: 1521, column: 14)
!5489 = !DILocation(line: 1527, column: 19, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5487, file: !2017, line: 1522, column: 24)
!5491 = !DILocation(line: 1527, column: 17, scope: !5490)
!5492 = !DILocation(line: 1528, column: 5, scope: !5490)
!5493 = !DILocation(line: 0, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5490, file: !2017, line: 1530, column: 9)
!5495 = !DILocation(line: 1540, column: 23, scope: !5490)
!5496 = !DILocation(line: 1539, column: 17, scope: !5490)
!5497 = !DILocation(line: 1542, column: 5, scope: !5490)
!5498 = !DILocation(line: 1545, column: 23, scope: !5490)
!5499 = !DILocation(line: 1544, column: 17, scope: !5490)
!5500 = !DILocation(line: 1547, column: 5, scope: !5490)
!5501 = !DILocation(line: 1551, column: 23, scope: !5490)
!5502 = !DILocation(line: 1551, column: 6, scope: !5490)
!5503 = !DILocation(line: 1550, column: 17, scope: !5490)
!5504 = !DILocation(line: 1552, column: 5, scope: !5490)
!5505 = !DILocation(line: 0, scope: !5490)
!5506 = !DILocation(line: 1554, column: 8, scope: !5487)
!5507 = !DILocation(line: 1555, column: 19, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !2017, line: 1554, column: 33)
!5509 = distinct !DILexicalBlock(scope: !5487, file: !2017, line: 1554, column: 8)
!5510 = !DILocation(line: 1555, column: 17, scope: !5508)
!5511 = !DILocation(line: 1556, column: 4, scope: !5508)
!5512 = !DILocation(line: 1557, column: 19, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !2017, line: 1556, column: 39)
!5514 = distinct !DILexicalBlock(scope: !5509, file: !2017, line: 1556, column: 15)
!5515 = !DILocation(line: 1557, column: 17, scope: !5513)
!5516 = !DILocation(line: 1558, column: 4, scope: !5513)
!5517 = !DILocation(line: 0, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !2017, line: 1560, column: 8)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !2017, line: 1559, column: 45)
!5520 = distinct !DILexicalBlock(scope: !5488, file: !2017, line: 1559, column: 14)
!5521 = !DILocation(line: 1566, column: 17, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !2017, line: 1565, column: 46)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !2017, line: 1565, column: 14)
!5524 = !DILocation(line: 1566, column: 15, scope: !5522)
!5525 = !DILocation(line: 1567, column: 3, scope: !5522)
!5526 = !DILocation(line: 1574, column: 21, scope: !5355)
!5527 = !DILocation(line: 1575, column: 4, scope: !5353)
!5528 = !DILocation(line: 0, scope: !5353)
!5529 = !DILocation(line: 1575, column: 4, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5353, file: !2017, line: 1575, column: 4)
!5531 = !DILocation(line: 1582, column: 17, scope: !5291)
!5532 = !DILocation(line: 1582, column: 3, scope: !5291)
!5533 = !DILocation(line: 1584, column: 4, scope: !5357)
!5534 = !DILocation(line: 0, scope: !5357)
!5535 = !DILocation(line: 1584, column: 4, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5357, file: !2017, line: 1584, column: 4)
!5537 = !DILocation(line: 1587, column: 31, scope: !5360)
!5538 = !DILocation(line: 1591, column: 18, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5360, file: !2017, line: 1591, column: 8)
!5540 = !DILocation(line: 1591, column: 8, scope: !5360)
!5541 = !DILocation(line: 1592, column: 11, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !2017, line: 1591, column: 24)
!5543 = !DILocation(line: 0, scope: !5360)
!5544 = !DILocation(line: 1593, column: 4, scope: !5542)
!5545 = !DILocation(line: 1594, column: 11, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5539, file: !2017, line: 1593, column: 11)
!5547 = !DILocation(line: 1604, column: 51, scope: !5358)
!5548 = !DILocation(line: 1604, column: 13, scope: !5358)
!5549 = !DILocation(line: 1604, column: 11, scope: !5358)
!5550 = !DILocation(line: 1606, column: 4, scope: !5358)
!5551 = !DILocation(line: 1609, column: 14, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1609, column: 8)
!5553 = !DILocation(line: 1609, column: 8, scope: !5358)
!5554 = !DILocation(line: 1619, column: 18, scope: !5358)
!5555 = !DILocation(line: 1620, column: 13, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1620, column: 8)
!5557 = !DILocation(line: 1620, column: 8, scope: !5358)
!5558 = !DILocation(line: 1622, column: 36, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5556, file: !2017, line: 1620, column: 18)
!5560 = !DILocation(line: 1622, column: 17, scope: !5559)
!5561 = !DILocation(line: 1623, column: 4, scope: !5559)
!5562 = !DILocation(line: 1632, column: 29, scope: !5358)
!5563 = !DILocation(line: 1632, column: 10, scope: !5358)
!5564 = !DILocation(line: 1632, column: 4, scope: !5358)
!5565 = !DILocation(line: 1407, column: 8, scope: !5291)
!5566 = !DILocation(line: 0, scope: !5358)
!5567 = !DILocation(line: 1634, column: 3, scope: !5358)
!5568 = !DILocation(line: 1640, column: 18, scope: !5363)
!5569 = !DILocation(line: 1640, column: 8, scope: !5358)
!5570 = !DILocation(line: 1729, column: 13, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1729, column: 7)
!5572 = !DILocation(line: 1641, column: 22, scope: !5362)
!5573 = !DILocation(line: 0, scope: !5362)
!5574 = !DILocation(line: 1646, column: 21, scope: !5362)
!5575 = !DILocation(line: 1649, column: 13, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5362, file: !2017, line: 1649, column: 9)
!5577 = !DILocation(line: 1649, column: 9, scope: !5362)
!5578 = !DILocation(line: 1650, column: 35, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5576, file: !2017, line: 1649, column: 34)
!5580 = !DILocation(line: 1650, column: 23, scope: !5579)
!5581 = !DILocation(line: 1651, column: 5, scope: !5579)
!5582 = !DILocation(line: 1660, column: 15, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1660, column: 8)
!5584 = !DILocation(line: 1660, column: 19, scope: !5583)
!5585 = !DILocation(line: 1660, column: 8, scope: !5358)
!5586 = !DILocation(line: 1661, column: 23, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5583, file: !2017, line: 1660, column: 28)
!5588 = !DILocation(line: 1661, column: 11, scope: !5587)
!5589 = !DILocation(line: 1665, column: 22, scope: !5587)
!5590 = !DILocation(line: 1666, column: 21, scope: !5587)
!5591 = !DILocation(line: 1668, column: 5, scope: !5587)
!5592 = !DILocation(line: 1677, column: 30, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5594, file: !2017, line: 1676, column: 49)
!5594 = distinct !DILexicalBlock(scope: !5358, file: !2017, line: 1676, column: 8)
!5595 = !DILocation(line: 1677, column: 5, scope: !5593)
!5596 = !DILocation(line: 1680, column: 4, scope: !5358)
!5597 = !DILocation(line: 0, scope: !5539)
!5598 = !DILocation(line: 1597, column: 14, scope: !5360)
!5599 = !DILocation(line: 1699, column: 11, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1699, column: 7)
!5601 = !DILocation(line: 1699, column: 7, scope: !5291)
!5602 = !DILocation(line: 1725, column: 7, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1725, column: 7)
!5604 = !DILocation(line: 1725, column: 12, scope: !5603)
!5605 = !DILocation(line: 1747, column: 13, scope: !5370)
!5606 = !DILocation(line: 1747, column: 7, scope: !5291)
!5607 = !DILocation(line: 1722, column: 24, scope: !5291)
!5608 = !DILocation(line: 1725, column: 7, scope: !5291)
!5609 = !DILocation(line: 1729, column: 7, scope: !5291)
!5610 = !DILocation(line: 1736, column: 13, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5291, file: !2017, line: 1736, column: 7)
!5612 = !DILocation(line: 1735, column: 19, scope: !5291)
!5613 = !DILocation(line: 1736, column: 7, scope: !5291)
!5614 = !DILocation(line: 1748, column: 10, scope: !5369)
!5615 = !DILocation(line: 1750, column: 15, scope: !5368)
!5616 = !DILocation(line: 1750, column: 8, scope: !5369)
!5617 = !DILocation(line: 0, scope: !5367)
!5618 = !DILocation(line: 1756, column: 15, scope: !5376)
!5619 = !DILocation(line: 1756, column: 9, scope: !5367)
!5620 = !DILocation(line: 1758, column: 7, scope: !5372)
!5621 = !DILocation(line: 0, scope: !5372)
!5622 = !DILocation(line: 1758, column: 7, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5372, file: !2017, line: 1758, column: 7)
!5624 = !DILocation(line: 1764, column: 5, scope: !5367)
!5625 = !DILocation(line: 0, scope: !5369)
!5626 = !DILocation(line: 1764, column: 20, scope: !5367)
!5627 = !DILocation(line: 1764, column: 17, scope: !5367)
!5628 = !DILocation(line: 1765, column: 6, scope: !5378)
!5629 = !DILocation(line: 0, scope: !5378)
!5630 = !DILocation(line: 1765, column: 6, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5378, file: !2017, line: 1765, column: 6)
!5632 = distinct !{!5632, !5624, !5633}
!5633 = !DILocation(line: 1766, column: 5, scope: !5367)
!5634 = !DILocation(line: 1773, column: 12, scope: !5383)
!5635 = !DILocation(line: 1773, column: 7, scope: !5291)
!5636 = !DILocation(line: 1773, column: 7, scope: !5383)
!5637 = !DILocation(line: 1774, column: 4, scope: !5381)
!5638 = !DILocation(line: 0, scope: !5381)
!5639 = !DILocation(line: 1774, column: 4, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5381, file: !2017, line: 1774, column: 4)
!5641 = !DILocation(line: 1818, column: 8, scope: !5387)
!5642 = !DILocation(line: 1818, column: 27, scope: !5387)
!5643 = !DILocation(line: 1818, column: 25, scope: !5387)
!5644 = !DILocation(line: 1818, column: 8, scope: !5388)
!5645 = !DILocation(line: 1819, column: 5, scope: !5385)
!5646 = !DILocation(line: 0, scope: !5385)
!5647 = !DILocation(line: 1819, column: 5, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5385, file: !2017, line: 1819, column: 5)
!5649 = !DILocation(line: 1822, column: 14, scope: !5393)
!5650 = !DILocation(line: 1822, column: 8, scope: !5388)
!5651 = !DILocation(line: 1823, column: 5, scope: !5391)
!5652 = !DILocation(line: 0, scope: !5391)
!5653 = !DILocation(line: 1823, column: 5, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5391, file: !2017, line: 1823, column: 5)
!5655 = !DILocation(line: 1826, column: 20, scope: !5388)
!5656 = !DILocation(line: 1827, column: 4, scope: !5388)
!5657 = !DILocation(line: 0, scope: !5388)
!5658 = !DILocation(line: 1827, column: 21, scope: !5388)
!5659 = !DILocation(line: 1827, column: 18, scope: !5388)
!5660 = !DILocation(line: 1828, column: 5, scope: !5395)
!5661 = !DILocation(line: 0, scope: !5395)
!5662 = !DILocation(line: 1828, column: 5, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5395, file: !2017, line: 1828, column: 5)
!5664 = distinct !{!5664, !5656, !5665}
!5665 = !DILocation(line: 1829, column: 4, scope: !5388)
!5666 = !DILocation(line: 1831, column: 4, scope: !5398)
!5667 = !DILocation(line: 0, scope: !5398)
!5668 = !DILocation(line: 1831, column: 4, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5398, file: !2017, line: 1831, column: 4)
!5670 = !DILocation(line: 1835, column: 16, scope: !5291)
!5671 = !DILocation(line: 1835, column: 3, scope: !5291)
!5672 = !DILocation(line: 1836, column: 4, scope: !5400)
!5673 = !DILocation(line: 0, scope: !5400)
!5674 = !DILocation(line: 1836, column: 4, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5400, file: !2017, line: 1836, column: 4)
!5676 = !DILocation(line: 1837, column: 4, scope: !5401)
!5677 = distinct !{!5677, !5671, !5678}
!5678 = !DILocation(line: 1838, column: 3, scope: !5291)
!5679 = !DILocation(line: 1844, column: 1, scope: !5264)
!5680 = distinct !DISubprogram(name: "extract_conversion", scope: !2017, file: !2017, line: 642, type: !5681, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5683)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{!269, !5337, !269}
!5683 = !{!5684, !5685}
!5684 = !DILocalVariable(name: "conv", arg: 1, scope: !5680, file: !2017, line: 642, type: !5337)
!5685 = !DILocalVariable(name: "sp", arg: 2, scope: !5680, file: !2017, line: 643, type: !269)
!5686 = !DILocation(line: 0, scope: !5680)
!5687 = !DILocation(line: 645, column: 10, scope: !5680)
!5688 = !DILocation(line: 653, column: 2, scope: !5680)
!5689 = !DILocation(line: 654, column: 6, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5680, file: !2017, line: 654, column: 6)
!5691 = !DILocation(line: 654, column: 10, scope: !5690)
!5692 = !DILocation(line: 654, column: 6, scope: !5680)
!5693 = !DILocation(line: 655, column: 24, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !2017, line: 654, column: 18)
!5695 = !DILocation(line: 655, column: 19, scope: !5694)
!5696 = !DILocation(line: 656, column: 3, scope: !5694)
!5697 = !DILocation(line: 659, column: 7, scope: !5680)
!5698 = !DILocation(line: 660, column: 7, scope: !5680)
!5699 = !DILocation(line: 661, column: 7, scope: !5680)
!5700 = !DILocation(line: 662, column: 7, scope: !5680)
!5701 = !DILocation(line: 663, column: 7, scope: !5680)
!5702 = !DILocation(line: 665, column: 2, scope: !5680)
!5703 = !DILocation(line: 666, column: 1, scope: !5680)
!5704 = distinct !DISubprogram(name: "outs", scope: !2017, file: !2017, line: 1319, type: !5705, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5707)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!105, !3633, !104, !269, !269}
!5707 = !{!5708, !5709, !5710, !5711, !5712, !5713}
!5708 = !DILocalVariable(name: "out", arg: 1, scope: !5704, file: !2017, line: 1319, type: !3633)
!5709 = !DILocalVariable(name: "ctx", arg: 2, scope: !5704, file: !2017, line: 1320, type: !104)
!5710 = !DILocalVariable(name: "sp", arg: 3, scope: !5704, file: !2017, line: 1321, type: !269)
!5711 = !DILocalVariable(name: "ep", arg: 4, scope: !5704, file: !2017, line: 1322, type: !269)
!5712 = !DILocalVariable(name: "count", scope: !5704, file: !2017, line: 1324, type: !111)
!5713 = !DILocalVariable(name: "rc", scope: !5714, file: !2017, line: 1327, type: !105)
!5714 = distinct !DILexicalBlock(scope: !5704, file: !2017, line: 1326, column: 45)
!5715 = !DILocation(line: 0, scope: !5704)
!5716 = !DILocation(line: 1326, column: 2, scope: !5704)
!5717 = !DILocation(line: 1324, column: 9, scope: !5704)
!5718 = !DILocation(line: 1326, column: 13, scope: !5704)
!5719 = !DILocation(line: 1326, column: 19, scope: !5704)
!5720 = !DILocation(line: 1327, column: 21, scope: !5714)
!5721 = !DILocation(line: 1326, column: 36, scope: !5704)
!5722 = !DILocation(line: 1326, column: 39, scope: !5704)
!5723 = !DILocation(line: 1327, column: 24, scope: !5714)
!5724 = !DILocation(line: 1327, column: 16, scope: !5714)
!5725 = !DILocation(line: 1327, column: 12, scope: !5714)
!5726 = !DILocation(line: 0, scope: !5714)
!5727 = !DILocation(line: 1329, column: 10, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5714, file: !2017, line: 1329, column: 7)
!5729 = !DILocation(line: 1329, column: 7, scope: !5714)
!5730 = distinct !{!5730, !5716, !5731}
!5731 = !DILocation(line: 1333, column: 2, scope: !5704)
!5732 = !DILocation(line: 1336, column: 1, scope: !5704)
!5733 = distinct !DISubprogram(name: "encode_uint", scope: !2017, file: !2017, line: 788, type: !5734, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5736)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!102, !2039, !5337, !102, !269}
!5736 = !{!5737, !5738, !5739, !5740, !5741, !5742, !5744, !5745}
!5737 = !DILocalVariable(name: "value", arg: 1, scope: !5733, file: !2017, line: 788, type: !2039)
!5738 = !DILocalVariable(name: "conv", arg: 2, scope: !5733, file: !2017, line: 789, type: !5337)
!5739 = !DILocalVariable(name: "bps", arg: 3, scope: !5733, file: !2017, line: 790, type: !102)
!5740 = !DILocalVariable(name: "bpe", arg: 4, scope: !5733, file: !2017, line: 791, type: !269)
!5741 = !DILocalVariable(name: "upcase", scope: !5733, file: !2017, line: 793, type: !540)
!5742 = !DILocalVariable(name: "radix", scope: !5733, file: !2017, line: 794, type: !5743)
!5743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5744 = !DILocalVariable(name: "bp", scope: !5733, file: !2017, line: 795, type: !102)
!5745 = !DILocalVariable(name: "lsv", scope: !5746, file: !2017, line: 798, type: !32)
!5746 = distinct !DILexicalBlock(scope: !5733, file: !2017, line: 797, column: 5)
!5747 = !DILocation(line: 0, scope: !5733)
!5748 = !DILocation(line: 793, column: 35, scope: !5733)
!5749 = !DILocation(line: 793, column: 24, scope: !5733)
!5750 = !DILocation(line: 793, column: 16, scope: !5733)
!5751 = !DILocation(line: 794, column: 29, scope: !5733)
!5752 = !DILocation(line: 795, column: 24, scope: !5733)
!5753 = !DILocation(line: 795, column: 17, scope: !5733)
!5754 = !DILocation(line: 797, column: 2, scope: !5733)
!5755 = !DILocation(line: 802, column: 9, scope: !5746)
!5756 = !DILocation(line: 798, column: 22, scope: !5746)
!5757 = !DILocation(line: 0, scope: !5746)
!5758 = !DILocation(line: 800, column: 16, scope: !5746)
!5759 = !DILocation(line: 800, column: 11, scope: !5746)
!5760 = !DILocation(line: 800, column: 4, scope: !5746)
!5761 = !DILocation(line: 800, column: 9, scope: !5746)
!5762 = !DILocation(line: 803, column: 18, scope: !5733)
!5763 = !DILocation(line: 803, column: 24, scope: !5733)
!5764 = !DILocation(line: 803, column: 2, scope: !5746)
!5765 = distinct !{!5765, !5754, !5766}
!5766 = !DILocation(line: 803, column: 37, scope: !5733)
!5767 = !DILocation(line: 808, column: 12, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5733, file: !2017, line: 808, column: 6)
!5769 = !DILocation(line: 808, column: 6, scope: !5733)
!5770 = !DILocation(line: 809, column: 7, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5768, file: !2017, line: 808, column: 23)
!5772 = !DILocation(line: 813, column: 3, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !2017, line: 811, column: 27)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !2017, line: 811, column: 14)
!5775 = distinct !DILexicalBlock(scope: !5771, file: !2017, line: 809, column: 7)
!5776 = !DILocation(line: 0, scope: !5775)
!5777 = !DILocation(line: 818, column: 2, scope: !5733)
!5778 = distinct !DISubprogram(name: "store_count", scope: !2017, file: !2017, line: 1280, type: !5779, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5783)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{null, !5781, !104, !105}
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 32)
!5782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5304)
!5783 = !{!5784, !5785, !5786}
!5784 = !DILocalVariable(name: "conv", arg: 1, scope: !5778, file: !2017, line: 1280, type: !5781)
!5785 = !DILocalVariable(name: "dp", arg: 2, scope: !5778, file: !2017, line: 1281, type: !104)
!5786 = !DILocalVariable(name: "count", arg: 3, scope: !5778, file: !2017, line: 1282, type: !105)
!5787 = !DILocation(line: 0, scope: !5778)
!5788 = !DILocation(line: 1284, column: 38, scope: !5778)
!5789 = !DILocation(line: 1284, column: 2, scope: !5778)
!5790 = !DILocation(line: 1286, column: 4, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5778, file: !2017, line: 1284, column: 50)
!5792 = !DILocation(line: 1286, column: 14, scope: !5791)
!5793 = !DILocation(line: 1287, column: 3, scope: !5791)
!5794 = !DILocation(line: 1289, column: 24, scope: !5791)
!5795 = !DILocation(line: 1289, column: 22, scope: !5791)
!5796 = !DILocation(line: 1290, column: 3, scope: !5791)
!5797 = !DILocation(line: 1292, column: 18, scope: !5791)
!5798 = !DILocation(line: 1292, column: 4, scope: !5791)
!5799 = !DILocation(line: 1292, column: 16, scope: !5791)
!5800 = !DILocation(line: 1293, column: 3, scope: !5791)
!5801 = !DILocation(line: 1295, column: 4, scope: !5791)
!5802 = !DILocation(line: 1295, column: 15, scope: !5791)
!5803 = !DILocation(line: 1296, column: 3, scope: !5791)
!5804 = !DILocation(line: 1298, column: 22, scope: !5791)
!5805 = !DILocation(line: 1298, column: 4, scope: !5791)
!5806 = !DILocation(line: 1298, column: 20, scope: !5791)
!5807 = !DILocation(line: 1299, column: 3, scope: !5791)
!5808 = !DILocation(line: 1301, column: 21, scope: !5791)
!5809 = !DILocation(line: 1301, column: 4, scope: !5791)
!5810 = !DILocation(line: 1301, column: 19, scope: !5791)
!5811 = !DILocation(line: 1302, column: 3, scope: !5791)
!5812 = !DILocation(line: 1304, column: 4, scope: !5791)
!5813 = !DILocation(line: 1304, column: 17, scope: !5791)
!5814 = !DILocation(line: 1305, column: 3, scope: !5791)
!5815 = !DILocation(line: 1307, column: 4, scope: !5791)
!5816 = !DILocation(line: 1307, column: 20, scope: !5791)
!5817 = !DILocation(line: 1308, column: 3, scope: !5791)
!5818 = !DILocation(line: 1316, column: 1, scope: !5778)
!5819 = distinct !DISubprogram(name: "isupper", scope: !5820, file: !5820, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5821)
!5820 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5821 = !{!5822}
!5822 = !DILocalVariable(name: "a", arg: 1, scope: !5819, file: !5820, line: 16, type: !105)
!5823 = !DILocation(line: 0, scope: !5819)
!5824 = !DILocation(line: 18, column: 29, scope: !5819)
!5825 = !DILocation(line: 18, column: 45, scope: !5819)
!5826 = !DILocation(line: 18, column: 2, scope: !5819)
!5827 = distinct !DISubprogram(name: "conversion_radix", scope: !2017, file: !2017, line: 761, type: !5828, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5830)
!5828 = !DISubroutineType(types: !5829)
!5829 = !{!111, !103}
!5830 = !{!5831}
!5831 = !DILocalVariable(name: "specifier", arg: 1, scope: !5827, file: !2017, line: 761, type: !103)
!5832 = !DILocation(line: 0, scope: !5827)
!5833 = !DILocation(line: 763, column: 2, scope: !5827)
!5834 = !DILocation(line: 770, column: 3, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5827, file: !2017, line: 763, column: 21)
!5836 = !DILocation(line: 774, column: 3, scope: !5835)
!5837 = !DILocation(line: 0, scope: !5835)
!5838 = !DILocation(line: 776, column: 1, scope: !5827)
!5839 = distinct !DISubprogram(name: "extract_flags", scope: !2017, file: !2017, line: 339, type: !5681, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5840)
!5840 = !{!5841, !5842, !5843}
!5841 = !DILocalVariable(name: "conv", arg: 1, scope: !5839, file: !2017, line: 339, type: !5337)
!5842 = !DILocalVariable(name: "sp", arg: 2, scope: !5839, file: !2017, line: 340, type: !269)
!5843 = !DILocalVariable(name: "loop", scope: !5839, file: !2017, line: 342, type: !540)
!5844 = !DILocation(line: 0, scope: !5839)
!5845 = !DILocation(line: 344, column: 2, scope: !5839)
!5846 = !DILocation(line: 345, column: 11, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5839, file: !2017, line: 344, column: 5)
!5848 = !DILocation(line: 345, column: 3, scope: !5847)
!5849 = !DILocation(line: 351, column: 4, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5847, file: !2017, line: 345, column: 16)
!5851 = !DILocation(line: 354, column: 4, scope: !5850)
!5852 = !DILocation(line: 357, column: 4, scope: !5850)
!5853 = !DILocation(line: 360, column: 4, scope: !5850)
!5854 = !DILocation(line: 0, scope: !5850)
!5855 = !DILocation(line: 370, column: 12, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5839, file: !2017, line: 370, column: 6)
!5857 = !DILocation(line: 370, column: 22, scope: !5856)
!5858 = !DILocation(line: 371, column: 19, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5856, file: !2017, line: 370, column: 42)
!5860 = !DILocation(line: 372, column: 2, scope: !5859)
!5861 = !DILocation(line: 376, column: 2, scope: !5839)
!5862 = distinct !DISubprogram(name: "extract_width", scope: !2017, file: !2017, line: 388, type: !5681, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5863)
!5863 = !{!5864, !5865, !5866, !5867}
!5864 = !DILocalVariable(name: "conv", arg: 1, scope: !5862, file: !2017, line: 388, type: !5337)
!5865 = !DILocalVariable(name: "sp", arg: 2, scope: !5862, file: !2017, line: 389, type: !269)
!5866 = !DILocalVariable(name: "wp", scope: !5862, file: !2017, line: 398, type: !269)
!5867 = !DILocalVariable(name: "width", scope: !5862, file: !2017, line: 399, type: !111)
!5868 = !DILocation(line: 0, scope: !5862)
!5869 = !DILocation(line: 391, column: 8, scope: !5862)
!5870 = !DILocation(line: 391, column: 22, scope: !5862)
!5871 = !DILocation(line: 393, column: 6, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5862, file: !2017, line: 393, column: 6)
!5873 = !DILocation(line: 393, column: 10, scope: !5872)
!5874 = !DILocation(line: 393, column: 6, scope: !5862)
!5875 = !DILocation(line: 394, column: 20, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5872, file: !2017, line: 393, column: 18)
!5877 = !DILocation(line: 395, column: 10, scope: !5876)
!5878 = !DILocation(line: 395, column: 3, scope: !5876)
!5879 = !DILocation(line: 399, column: 17, scope: !5862)
!5880 = !DILocation(line: 401, column: 6, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5862, file: !2017, line: 401, column: 6)
!5882 = !DILocation(line: 401, column: 9, scope: !5881)
!5883 = !DILocation(line: 401, column: 6, scope: !5862)
!5884 = !DILocation(line: 402, column: 23, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5881, file: !2017, line: 401, column: 16)
!5886 = !DILocation(line: 403, column: 9, scope: !5885)
!5887 = !DILocation(line: 403, column: 21, scope: !5885)
!5888 = !DILocation(line: 405, column: 11, scope: !5885)
!5889 = !DILocation(line: 404, column: 21, scope: !5885)
!5890 = !DILocation(line: 406, column: 2, scope: !5885)
!5891 = !DILocation(line: 409, column: 1, scope: !5862)
!5892 = distinct !DISubprogram(name: "extract_prec", scope: !2017, file: !2017, line: 420, type: !5681, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5893)
!5893 = !{!5894, !5895, !5896}
!5894 = !DILocalVariable(name: "conv", arg: 1, scope: !5892, file: !2017, line: 420, type: !5337)
!5895 = !DILocalVariable(name: "sp", arg: 2, scope: !5892, file: !2017, line: 421, type: !269)
!5896 = !DILocalVariable(name: "prec", scope: !5892, file: !2017, line: 435, type: !111)
!5897 = !DILocation(line: 0, scope: !5892)
!5898 = !DILocation(line: 423, column: 24, scope: !5892)
!5899 = !DILocation(line: 423, column: 28, scope: !5892)
!5900 = !DILocation(line: 423, column: 8, scope: !5892)
!5901 = !DILocation(line: 423, column: 21, scope: !5892)
!5902 = !DILocation(line: 425, column: 6, scope: !5892)
!5903 = !DILocation(line: 428, column: 2, scope: !5892)
!5904 = !DILocation(line: 430, column: 6, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5892, file: !2017, line: 430, column: 6)
!5906 = !DILocation(line: 430, column: 10, scope: !5905)
!5907 = !DILocation(line: 430, column: 6, scope: !5892)
!5908 = !DILocation(line: 431, column: 19, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5905, file: !2017, line: 430, column: 18)
!5910 = !DILocation(line: 432, column: 10, scope: !5909)
!5911 = !DILocation(line: 432, column: 3, scope: !5909)
!5912 = !DILocation(line: 435, column: 16, scope: !5892)
!5913 = !DILocation(line: 437, column: 8, scope: !5892)
!5914 = !DILocation(line: 437, column: 19, scope: !5892)
!5915 = !DILocation(line: 439, column: 10, scope: !5892)
!5916 = !DILocation(line: 438, column: 20, scope: !5892)
!5917 = !DILocation(line: 441, column: 9, scope: !5892)
!5918 = !DILocation(line: 442, column: 1, scope: !5892)
!5919 = distinct !DISubprogram(name: "extract_length", scope: !2017, file: !2017, line: 453, type: !5681, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5920)
!5920 = !{!5921, !5922}
!5921 = !DILocalVariable(name: "conv", arg: 1, scope: !5919, file: !2017, line: 453, type: !5337)
!5922 = !DILocalVariable(name: "sp", arg: 2, scope: !5919, file: !2017, line: 454, type: !269)
!5923 = !DILocation(line: 0, scope: !5919)
!5924 = !DILocation(line: 456, column: 10, scope: !5919)
!5925 = !DILocation(line: 456, column: 2, scope: !5919)
!5926 = !DILocation(line: 458, column: 8, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !2017, line: 458, column: 7)
!5928 = distinct !DILexicalBlock(scope: !5919, file: !2017, line: 456, column: 15)
!5929 = !DILocation(line: 458, column: 7, scope: !5927)
!5930 = !DILocation(line: 458, column: 13, scope: !5927)
!5931 = !DILocation(line: 0, scope: !5927)
!5932 = !DILocation(line: 458, column: 7, scope: !5928)
!5933 = !DILocation(line: 459, column: 21, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5927, file: !2017, line: 458, column: 21)
!5935 = !DILocation(line: 460, column: 4, scope: !5934)
!5936 = !DILocation(line: 461, column: 3, scope: !5934)
!5937 = !DILocation(line: 462, column: 21, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5927, file: !2017, line: 461, column: 10)
!5939 = !DILocation(line: 466, column: 8, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5928, file: !2017, line: 466, column: 7)
!5941 = !DILocation(line: 466, column: 7, scope: !5940)
!5942 = !DILocation(line: 466, column: 13, scope: !5940)
!5943 = !DILocation(line: 0, scope: !5940)
!5944 = !DILocation(line: 466, column: 7, scope: !5928)
!5945 = !DILocation(line: 467, column: 21, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5940, file: !2017, line: 466, column: 21)
!5947 = !DILocation(line: 468, column: 4, scope: !5946)
!5948 = !DILocation(line: 469, column: 3, scope: !5946)
!5949 = !DILocation(line: 470, column: 21, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5940, file: !2017, line: 469, column: 10)
!5951 = !DILocation(line: 474, column: 9, scope: !5928)
!5952 = !DILocation(line: 474, column: 20, scope: !5928)
!5953 = !DILocation(line: 475, column: 3, scope: !5928)
!5954 = !DILocation(line: 476, column: 3, scope: !5928)
!5955 = !DILocation(line: 478, column: 9, scope: !5928)
!5956 = !DILocation(line: 478, column: 20, scope: !5928)
!5957 = !DILocation(line: 479, column: 3, scope: !5928)
!5958 = !DILocation(line: 480, column: 3, scope: !5928)
!5959 = !DILocation(line: 482, column: 9, scope: !5928)
!5960 = !DILocation(line: 482, column: 20, scope: !5928)
!5961 = !DILocation(line: 483, column: 3, scope: !5928)
!5962 = !DILocation(line: 484, column: 3, scope: !5928)
!5963 = !DILocation(line: 486, column: 9, scope: !5928)
!5964 = !DILocation(line: 486, column: 20, scope: !5928)
!5965 = !DILocation(line: 487, column: 3, scope: !5928)
!5966 = !DILocation(line: 492, column: 21, scope: !5928)
!5967 = !DILocation(line: 493, column: 3, scope: !5928)
!5968 = !DILocation(line: 495, column: 9, scope: !5928)
!5969 = !DILocation(line: 495, column: 20, scope: !5928)
!5970 = !DILocation(line: 496, column: 3, scope: !5928)
!5971 = !DILocation(line: 498, column: 2, scope: !5919)
!5972 = distinct !DISubprogram(name: "extract_specifier", scope: !2017, file: !2017, line: 513, type: !5681, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !5973)
!5973 = !{!5974, !5975, !5976, !5977}
!5974 = !DILocalVariable(name: "conv", arg: 1, scope: !5972, file: !2017, line: 513, type: !5337)
!5975 = !DILocalVariable(name: "sp", arg: 2, scope: !5972, file: !2017, line: 514, type: !269)
!5976 = !DILocalVariable(name: "unsupported", scope: !5972, file: !2017, line: 516, type: !540)
!5977 = !DILabel(scope: !5978, name: "int_conv", file: !2017, line: 526)
!5978 = distinct !DILexicalBlock(scope: !5972, file: !2017, line: 520, column: 27)
!5979 = !DILocation(line: 0, scope: !5972)
!5980 = !DILocation(line: 518, column: 20, scope: !5972)
!5981 = !DILocation(line: 518, column: 8, scope: !5972)
!5982 = !DILocation(line: 518, column: 18, scope: !5972)
!5983 = !DILocation(line: 520, column: 2, scope: !5972)
!5984 = !DILocation(line: 525, column: 3, scope: !5978)
!5985 = !DILocation(line: 0, scope: !5978)
!5986 = !DILocation(line: 526, column: 1, scope: !5978)
!5987 = !DILocation(line: 528, column: 24, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5978, file: !2017, line: 528, column: 7)
!5989 = !DILocation(line: 528, column: 7, scope: !5978)
!5990 = !DILocation(line: 535, column: 23, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5978, file: !2017, line: 535, column: 7)
!5992 = !DILocation(line: 535, column: 7, scope: !5978)
!5993 = !DILocation(line: 536, column: 36, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5991, file: !2017, line: 535, column: 31)
!5995 = !DILocation(line: 537, column: 3, scope: !5994)
!5996 = !DILocation(line: 570, column: 9, scope: !5978)
!5997 = !DILocation(line: 570, column: 23, scope: !5978)
!5998 = !DILocation(line: 575, column: 4, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !2017, line: 573, column: 48)
!6000 = distinct !DILexicalBlock(scope: !5978, file: !2017, line: 573, column: 7)
!6001 = !DILocation(line: 603, column: 9, scope: !5978)
!6002 = !DILocation(line: 603, column: 23, scope: !5978)
!6003 = !DILocation(line: 605, column: 24, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5978, file: !2017, line: 605, column: 7)
!6005 = !DILocation(line: 605, column: 7, scope: !5978)
!6006 = !DILocation(line: 612, column: 9, scope: !5978)
!6007 = !DILocation(line: 612, column: 23, scope: !5978)
!6008 = !DILocation(line: 619, column: 24, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5978, file: !2017, line: 619, column: 7)
!6010 = !DILocation(line: 619, column: 7, scope: !5978)
!6011 = !DILocation(line: 625, column: 9, scope: !5978)
!6012 = !DILocation(line: 625, column: 17, scope: !5978)
!6013 = !DILocation(line: 626, column: 3, scope: !5978)
!6014 = !DILocation(line: 629, column: 20, scope: !5972)
!6015 = !DILocation(line: 629, column: 8, scope: !5972)
!6016 = !DILocation(line: 518, column: 23, scope: !5972)
!6017 = !DILocation(line: 631, column: 2, scope: !5972)
!6018 = distinct !DISubprogram(name: "extract_decimal", scope: !2017, file: !2017, line: 318, type: !6019, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !6021)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{!111, !427}
!6021 = !{!6022, !6023, !6024}
!6022 = !DILocalVariable(name: "str", arg: 1, scope: !6018, file: !2017, line: 318, type: !427)
!6023 = !DILocalVariable(name: "sp", scope: !6018, file: !2017, line: 320, type: !269)
!6024 = !DILocalVariable(name: "val", scope: !6018, file: !2017, line: 321, type: !111)
!6025 = !DILocation(line: 0, scope: !6018)
!6026 = !DILocation(line: 320, column: 19, scope: !6018)
!6027 = !DILocation(line: 323, column: 37, scope: !6018)
!6028 = !DILocation(line: 323, column: 17, scope: !6018)
!6029 = !DILocation(line: 323, column: 9, scope: !6018)
!6030 = !DILocation(line: 323, column: 2, scope: !6018)
!6031 = !DILocation(line: 324, column: 13, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6018, file: !2017, line: 323, column: 43)
!6033 = !DILocation(line: 324, column: 24, scope: !6032)
!6034 = !DILocation(line: 324, column: 19, scope: !6032)
!6035 = !DILocation(line: 324, column: 27, scope: !6032)
!6036 = distinct !{!6036, !6030, !6037}
!6037 = !DILocation(line: 325, column: 2, scope: !6018)
!6038 = !DILocation(line: 326, column: 7, scope: !6018)
!6039 = !DILocation(line: 327, column: 2, scope: !6018)
!6040 = distinct !DISubprogram(name: "isdigit", scope: !5820, file: !5820, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2013, retainedNodes: !6041)
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "a", arg: 1, scope: !6040, file: !5820, line: 43, type: !105)
!6043 = !DILocation(line: 0, scope: !6040)
!6044 = !DILocation(line: 45, column: 29, scope: !6040)
!6045 = !DILocation(line: 45, column: 45, scope: !6040)
!6046 = !DILocation(line: 45, column: 2, scope: !6040)
!6047 = distinct !DISubprogram(name: "assert_post_action", scope: !6048, file: !6048, line: 26, type: !6049, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !6051)
!6048 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !269, !32}
!6051 = !{!6052, !6053}
!6052 = !DILocalVariable(name: "file", arg: 1, scope: !6047, file: !6048, line: 26, type: !269)
!6053 = !DILocalVariable(name: "line", arg: 2, scope: !6047, file: !6048, line: 26, type: !32)
!6054 = !DILocation(line: 0, scope: !6047)
!6055 = !DILocation(line: 43, column: 2, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6047, file: !6048, line: 43, column: 2)
!6057 = !{i64 2151099289, i64 2151099305, i64 2151099331, i64 2151099359, i64 2151099379}
!6058 = !DILocation(line: 44, column: 1, scope: !6047)
!6059 = distinct !DISubprogram(name: "assert_print", scope: !6048, file: !6048, line: 46, type: !4243, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !6060)
!6060 = !{!6061, !6062}
!6061 = !DILocalVariable(name: "fmt", arg: 1, scope: !6059, file: !6048, line: 46, type: !269)
!6062 = !DILocalVariable(name: "ap", scope: !6059, file: !6048, line: 48, type: !6063)
!6063 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3251, line: 99, baseType: !6064)
!6064 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3251, line: 40, baseType: !6065)
!6065 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6048, baseType: !6066)
!6066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6067)
!6067 = !{!6068}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6066, file: !6048, line: 48, baseType: !104, size: 32)
!6069 = !DILocation(line: 0, scope: !6059)
!6070 = !DILocation(line: 48, column: 2, scope: !6059)
!6071 = !DILocation(line: 48, column: 10, scope: !6059)
!6072 = !DILocation(line: 50, column: 2, scope: !6059)
!6073 = !DILocation(line: 52, column: 2, scope: !6059)
!6074 = !DILocation(line: 54, column: 2, scope: !6059)
!6075 = !DILocation(line: 55, column: 1, scope: !6059)
!6076 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6077, file: !6077, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !397)
!6077 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!6078 = !DILocation(line: 11, column: 1, scope: !6076)
!6079 = !{i64 2147560323, i64 2147560366, i64 2147560406}
!6080 = !DILocation(line: 12, column: 1, scope: !6076)
!6081 = !{i64 2147564562, i64 2147564605, i64 2147564645}
!6082 = !DILocation(line: 13, column: 1, scope: !6076)
!6083 = !{i64 2147564731, i64 2147564774, i64 2147564814}
!6084 = !DILocation(line: 14, column: 1, scope: !6076)
!6085 = !{i64 2147564915, i64 2147564958, i64 2147564998}
!6086 = !DILocation(line: 15, column: 1, scope: !6076)
!6087 = !{i64 2147565094, i64 2147565137, i64 2147565177}
!6088 = !DILocation(line: 16, column: 1, scope: !6076)
!6089 = !{i64 2147565336, i64 2147565379, i64 2147565419}
!6090 = !DILocation(line: 17, column: 1, scope: !6076)
!6091 = !{i64 2147565522, i64 2147565565, i64 2147565605}
!6092 = !DILocation(line: 18, column: 1, scope: !6076)
!6093 = !{i64 2147565736, i64 2147565779, i64 2147565819}
!6094 = !DILocation(line: 19, column: 1, scope: !6076)
!6095 = !{i64 2147565939, i64 2147565982, i64 2147566022}
!6096 = !DILocation(line: 20, column: 1, scope: !6076)
!6097 = !{i64 2147566142, i64 2147566185, i64 2147566225}
!6098 = !DILocation(line: 21, column: 1, scope: !6076)
!6099 = !{i64 2147566341, i64 2147566384, i64 2147566424}
!6100 = !DILocation(line: 22, column: 1, scope: !6076)
!6101 = !{i64 2147566516, i64 2147566559, i64 2147566599}
!6102 = !DILocation(line: 23, column: 1, scope: !6076)
!6103 = !{i64 2147566724, i64 2147566767, i64 2147566807}
!6104 = !DILocation(line: 24, column: 1, scope: !6076)
!6105 = !{i64 2147566928, i64 2147566971, i64 2147567011}
!6106 = !DILocation(line: 25, column: 1, scope: !6076)
!6107 = !{i64 2147567130, i64 2147567173, i64 2147567213}
!6108 = !DILocation(line: 26, column: 1, scope: !6076)
!6109 = !{i64 2147567329, i64 2147567372, i64 2147567412}
!6110 = !DILocation(line: 27, column: 1, scope: !6076)
!6111 = !{i64 2147567556, i64 2147567599, i64 2147567639}
!6112 = !DILocation(line: 28, column: 1, scope: !6076)
!6113 = !{i64 2147567771, i64 2147567814, i64 2147567854}
!6114 = !DILocation(line: 29, column: 1, scope: !6076)
!6115 = !{i64 2147567943, i64 2147567986, i64 2147568026}
!6116 = !DILocation(line: 30, column: 1, scope: !6076)
!6117 = !{i64 2147568145, i64 2147568188, i64 2147568228}
!6118 = !DILocation(line: 31, column: 1, scope: !6076)
!6119 = !{i64 2147568344, i64 2147568387, i64 2147568427}
!6120 = !DILocation(line: 32, column: 1, scope: !6076)
!6121 = !{i64 2147568519, i64 2147568562, i64 2147568602}
!6122 = !DILocation(line: 33, column: 1, scope: !6076)
!6123 = !{i64 2147568772, i64 2147568815, i64 2147568855}
!6124 = !DILocation(line: 34, column: 1, scope: !6076)
!6125 = !{i64 2147569010, i64 2147569053, i64 2147569093}
!6126 = !DILocation(line: 35, column: 1, scope: !6076)
!6127 = !{i64 2147569245, i64 2147569288, i64 2147569328}
!6128 = !DILocation(line: 36, column: 1, scope: !6076)
!6129 = !{i64 2147569486, i64 2147569529, i64 2147569569}
!6130 = !DILocation(line: 37, column: 1, scope: !6076)
!6131 = !{i64 2147569736, i64 2147569779, i64 2147569819}
!6132 = !DILocation(line: 38, column: 1, scope: !6076)
!6133 = !{i64 2147569986, i64 2147570029, i64 2147570069}
!6134 = !DILocation(line: 39, column: 1, scope: !6076)
!6135 = !{i64 2147570227, i64 2147570270, i64 2147570310}
!6136 = !DILocation(line: 40, column: 1, scope: !6076)
!6137 = !{i64 2147570480, i64 2147570523, i64 2147570563}
!6138 = !DILocation(line: 41, column: 1, scope: !6076)
!6139 = !{i64 2147570706, i64 2147570749, i64 2147570789}
!6140 = !DILocation(line: 42, column: 1, scope: !6076)
!6141 = !{i64 2147570932, i64 2147570975, i64 2147571015}
!6142 = !DILocation(line: 43, column: 1, scope: !6076)
!6143 = !{i64 2147571167, i64 2147571210, i64 2147571250}
!6144 = !DILocation(line: 44, column: 1, scope: !6076)
!6145 = !{i64 2147571396, i64 2147571439, i64 2147571479}
!6146 = !DILocation(line: 45, column: 1, scope: !6076)
!6147 = !{i64 2147571604, i64 2147571647, i64 2147571687}
!6148 = !DILocation(line: 46, column: 1, scope: !6076)
!6149 = !{i64 2147571815, i64 2147571858, i64 2147571898}
!6150 = !DILocation(line: 47, column: 1, scope: !6076)
!6151 = !{i64 2147572050, i64 2147572093, i64 2147572133}
!6152 = !DILocation(line: 48, column: 1, scope: !6076)
!6153 = !{i64 2147572279, i64 2147572322, i64 2147572362}
!6154 = !DILocation(line: 49, column: 1, scope: !6076)
!6155 = !{i64 2147572496, i64 2147572539, i64 2147572579}
!6156 = !DILocation(line: 50, column: 1, scope: !6076)
!6157 = !{i64 2147572725, i64 2147572768, i64 2147572808}
!6158 = !DILocation(line: 51, column: 1, scope: !6076)
!6159 = !{i64 2147572963, i64 2147573006, i64 2147573046}
!6160 = !DILocation(line: 52, column: 1, scope: !6076)
!6161 = !{i64 2147573195, i64 2147573238, i64 2147573278}
!6162 = !DILocation(line: 53, column: 1, scope: !6076)
!6163 = !{i64 2147577482, i64 2147577525, i64 2147577565}
!6164 = !DILocation(line: 54, column: 1, scope: !6076)
!6165 = !{i64 2147577699, i64 2147577742, i64 2147577782}
!6166 = !DILocation(line: 55, column: 1, scope: !6076)
!6167 = !{i64 2147577931, i64 2147577974, i64 2147578014}
!6168 = !DILocation(line: 56, column: 1, scope: !6076)
!6169 = !{i64 2147578157, i64 2147578200, i64 2147578240}
!6170 = !DILocation(line: 57, column: 1, scope: !6076)
!6171 = !{i64 2147578371, i64 2147578414, i64 2147578454}
!6172 = !DILocation(line: 58, column: 1, scope: !6076)
!6173 = !{i64 2147578591, i64 2147578634, i64 2147578674}
!6174 = !DILocation(line: 59, column: 1, scope: !6076)
!6175 = !{i64 2147578823, i64 2147578866, i64 2147578906}
!6176 = !DILocation(line: 60, column: 1, scope: !6076)
!6177 = !{i64 2147579031, i64 2147579074, i64 2147579114}
!6178 = !DILocation(line: 61, column: 1, scope: !6076)
!6179 = !{i64 2147579236, i64 2147579279, i64 2147579319}
!6180 = !DILocation(line: 62, column: 1, scope: !6076)
!6181 = !{i64 2147579453, i64 2147579496, i64 2147579536}
!6182 = !DILocation(line: 63, column: 1, scope: !6076)
!6183 = !{i64 2147579667, i64 2147579710, i64 2147579750}
!6184 = !DILocation(line: 64, column: 1, scope: !6076)
!6185 = !{i64 2147579893, i64 2147579936, i64 2147579976}
!6186 = !DILocation(line: 65, column: 1, scope: !6076)
!6187 = !{i64 2147580113, i64 2147580156, i64 2147580196}
!6188 = !DILocation(line: 66, column: 1, scope: !6076)
!6189 = !{i64 2147580318, i64 2147580361, i64 2147580401}
!6190 = !DILocation(line: 67, column: 1, scope: !6076)
!6191 = !{i64 2147580550, i64 2147580593, i64 2147580633}
!6192 = !DILocation(line: 68, column: 1, scope: !6076)
!6193 = !{i64 2147580785, i64 2147580828, i64 2147580868}
!6194 = !DILocation(line: 69, column: 1, scope: !6076)
!6195 = !{i64 2147581035, i64 2147581078, i64 2147581118}
!6196 = !DILocation(line: 70, column: 1, scope: !6076)
!6197 = !{i64 2147581285, i64 2147581328, i64 2147581368}
!6198 = !DILocation(line: 71, column: 1, scope: !6076)
!6199 = !{i64 2147581523, i64 2147581566, i64 2147581606}
!6200 = !DILocation(line: 72, column: 1, scope: !6076)
!6201 = !{i64 2147581734, i64 2147581777, i64 2147581817}
!6202 = !DILocation(line: 73, column: 1, scope: !6076)
!6203 = !{i64 2147581951, i64 2147581994, i64 2147582034}
!6204 = !DILocation(line: 74, column: 1, scope: !6076)
!6205 = !{i64 2147582114, i64 2147582157, i64 2147582197}
!6206 = !DILocation(line: 75, column: 1, scope: !6076)
!6207 = !{i64 2147582310, i64 2147582353, i64 2147582393}
!6208 = !DILocation(line: 76, column: 1, scope: !6076)
!6209 = !{i64 2147582512, i64 2147582555, i64 2147582595}
!6210 = !DILocation(line: 77, column: 1, scope: !6076)
!6211 = !{i64 2147582708, i64 2147582751, i64 2147582791}
!6212 = !DILocation(line: 78, column: 1, scope: !6076)
!6213 = !{i64 2147582913, i64 2147582956, i64 2147582996}
!6214 = !DILocation(line: 79, column: 1, scope: !6076)
!6215 = !{i64 2147583115, i64 2147583158, i64 2147583198}
!6216 = !DILocation(line: 80, column: 1, scope: !6076)
!6217 = !{i64 2147583314, i64 2147583357, i64 2147583397}
!6218 = !DILocation(line: 81, column: 1, scope: !6076)
!6219 = !{i64 2147583498, i64 2147583541, i64 2147583581}
!6220 = !DILocation(line: 82, column: 1, scope: !6076)
!6221 = !{i64 2147583694, i64 2147583737, i64 2147583777}
!6222 = !DILocation(line: 83, column: 1, scope: !6076)
!6223 = !{i64 2147583917, i64 2147583960, i64 2147584000}
!6224 = !DILocation(line: 84, column: 1, scope: !6076)
!6225 = !{i64 2147584149, i64 2147584192, i64 2147584232}
!6226 = !DILocation(line: 85, column: 1, scope: !6076)
!6227 = !{i64 2147584381, i64 2147584424, i64 2147584464}
!6228 = !DILocation(line: 86, column: 1, scope: !6076)
!6229 = !{i64 2147584613, i64 2147584656, i64 2147584696}
!6230 = !DILocation(line: 87, column: 1, scope: !6076)
!6231 = !{i64 2147584818, i64 2147584861, i64 2147584901}
!6232 = !DILocation(line: 88, column: 1, scope: !6076)
!6233 = !{i64 2147585011, i64 2147585054, i64 2147585094}
!6234 = !DILocation(line: 89, column: 1, scope: !6076)
!6235 = !{i64 2147585177, i64 2147585220, i64 2147585260}
!6236 = !DILocation(line: 90, column: 1, scope: !6076)
!6237 = !{i64 2147585361, i64 2147585404, i64 2147585444}
!6238 = !DILocation(line: 91, column: 1, scope: !6076)
!6239 = !{i64 2147585551, i64 2147585594, i64 2147585634}
!6240 = !DILocation(line: 92, column: 1, scope: !6076)
!6241 = !{i64 2147585735, i64 2147585778, i64 2147585818}
!6242 = !DILocation(line: 93, column: 1, scope: !6076)
!6243 = !{i64 2147585949, i64 2147585992, i64 2147586032}
!6244 = !DILocation(line: 94, column: 1, scope: !6076)
!6245 = !{i64 2147586160, i64 2147586203, i64 2147586243}
!6246 = !DILocation(line: 95, column: 1, scope: !6076)
!6247 = !{i64 2147590444, i64 2147590487, i64 2147590527}
!6248 = !DILocation(line: 96, column: 1, scope: !6076)
!6249 = !{i64 2147590628, i64 2147590671, i64 2147590711}
!6250 = !DILocation(line: 97, column: 1, scope: !6076)
!6251 = !{i64 2147590842, i64 2147590885, i64 2147590925}
!6252 = !DILocation(line: 98, column: 1, scope: !6076)
!6253 = !{i64 2147591008, i64 2147591051, i64 2147591091}
!6254 = !DILocation(line: 99, column: 1, scope: !6076)
!6255 = !{i64 2147591189, i64 2147591232, i64 2147591272}
!6256 = !DILocation(line: 100, column: 1, scope: !6076)
!6257 = !{i64 2147591382, i64 2147591425, i64 2147591465}
!6258 = !DILocation(line: 101, column: 1, scope: !6076)
!6259 = !{i64 2147591608, i64 2147591651, i64 2147591691}
!6260 = !DILocation(line: 102, column: 1, scope: !6076)
!6261 = !{i64 2147591822, i64 2147591865, i64 2147591905}
!6262 = !DILocation(line: 103, column: 1, scope: !6076)
!6263 = !{i64 2147592048, i64 2147592091, i64 2147592131}
!6264 = !DILocation(line: 104, column: 1, scope: !6076)
!6265 = !{i64 2147592265, i64 2147592308, i64 2147592348}
!6266 = !DILocation(line: 105, column: 1, scope: !6076)
!6267 = !{i64 2147592542, i64 2147592585, i64 2147592625}
!6268 = !DILocation(line: 106, column: 1, scope: !6076)
!6269 = !{i64 2147592768, i64 2147592811, i64 2147592851}
!6270 = !DILocation(line: 107, column: 1, scope: !6076)
!6271 = !{i64 2147592964, i64 2147593007, i64 2147593047}
!6272 = !DILocation(line: 108, column: 1, scope: !6076)
!6273 = !{i64 2147593229, i64 2147593272, i64 2147593312}
!6274 = !DILocation(line: 109, column: 1, scope: !6076)
!6275 = !{i64 2147593443, i64 2147593486, i64 2147593526}
!6276 = !DILocation(line: 110, column: 1, scope: !6076)
!6277 = !{i64 2147593618, i64 2147593661, i64 2147593701}
!6278 = !DILocation(line: 111, column: 1, scope: !6076)
!6279 = !{i64 2147593872, i64 2147593915, i64 2147593955}
!6280 = !DILocation(line: 112, column: 1, scope: !6076)
!6281 = !{i64 2147594071, i64 2147594114, i64 2147594154}
!6282 = !DILocation(line: 113, column: 1, scope: !6076)
!6283 = !{i64 2147594313, i64 2147594356, i64 2147594396}
!6284 = !DILocation(line: 114, column: 1, scope: !6076)
!6285 = !{i64 2147594476, i64 2147594519, i64 2147594559}
!6286 = !DILocation(line: 115, column: 1, scope: !6076)
!6287 = !{i64 2147594663, i64 2147594706, i64 2147594746}
!6288 = !DILocation(line: 116, column: 1, scope: !6076)
!6289 = !{i64 2147594871, i64 2147594914, i64 2147594954}
!6290 = !DILocation(line: 117, column: 1, scope: !6076)
!6291 = !{i64 2147595067, i64 2147595110, i64 2147595150}
!6292 = !DILocation(line: 118, column: 1, scope: !6076)
!6293 = !{i64 2147595260, i64 2147595303, i64 2147595343}
!6294 = !DILocation(line: 119, column: 1, scope: !6076)
!6295 = !{i64 2147595442, i64 2147595485, i64 2147595525}
!6296 = !DILocation(line: 120, column: 1, scope: !6076)
!6297 = !{i64 2147595656, i64 2147595699, i64 2147595739}
!6298 = !DILocation(line: 121, column: 1, scope: !6076)
!6299 = !{i64 2147595867, i64 2147595910, i64 2147595950}
!6300 = !DILocation(line: 122, column: 1, scope: !6076)
!6301 = !{i64 2147596087, i64 2147596130, i64 2147596170}
!6302 = !DILocation(line: 123, column: 1, scope: !6076)
!6303 = !{i64 2147596294, i64 2147596337, i64 2147596377}
!6304 = !DILocation(line: 124, column: 1, scope: !6076)
!6305 = !{i64 2147596567, i64 2147596610, i64 2147596650}
!6306 = !DILocation(line: 125, column: 1, scope: !6076)
!6307 = !{i64 2147596815, i64 2147596858, i64 2147596898}
!6308 = !DILocation(line: 126, column: 1, scope: !6076)
!6309 = !{i64 2147597014, i64 2147597057, i64 2147597097}
!6310 = !DILocation(line: 127, column: 1, scope: !6076)
!6311 = !{i64 2147597249, i64 2147597292, i64 2147597332}
!6312 = !DILocation(line: 128, column: 1, scope: !6076)
!6313 = !{i64 2147597499, i64 2147597542, i64 2147597582}
!6314 = !DILocation(line: 129, column: 1, scope: !6076)
!6315 = !{i64 2147597701, i64 2147597744, i64 2147597784}
!6316 = !DILocation(line: 130, column: 1, scope: !6076)
!6317 = !{i64 2147597924, i64 2147597967, i64 2147598007}
!6318 = !DILocation(line: 131, column: 1, scope: !6076)
!6319 = !{i64 2147598138, i64 2147598181, i64 2147598221}
!6320 = !DILocation(line: 132, column: 1, scope: !6076)
!6321 = !{i64 2147598382, i64 2147598425, i64 2147598465}
!6322 = !DILocation(line: 133, column: 1, scope: !6076)
!6323 = !{i64 2147598611, i64 2147598654, i64 2147598694}
!6324 = !DILocation(line: 134, column: 1, scope: !6076)
!6325 = !{i64 2147598840, i64 2147598883, i64 2147598923}
!6326 = !DILocation(line: 135, column: 1, scope: !6076)
!6327 = !{i64 2147603109, i64 2147603152, i64 2147603192}
!6328 = !DILocation(line: 136, column: 1, scope: !6076)
!6329 = !{i64 2147603347, i64 2147603390, i64 2147603430}
!6330 = !DILocation(line: 137, column: 1, scope: !6076)
!6331 = !{i64 2147603573, i64 2147603616, i64 2147603656}
!6332 = !DILocation(line: 138, column: 1, scope: !6076)
!6333 = !{i64 2147603832, i64 2147603875, i64 2147603915}
!6334 = !DILocation(line: 139, column: 1, scope: !6076)
!6335 = !{i64 2147604052, i64 2147604095, i64 2147604135}
!6336 = !DILocation(line: 140, column: 1, scope: !6076)
!6337 = !{i64 2147604284, i64 2147604327, i64 2147604367}
!6338 = !DILocation(line: 141, column: 1, scope: !6076)
!6339 = !{i64 2147604525, i64 2147604568, i64 2147604608}
!6340 = !DILocation(line: 142, column: 1, scope: !6076)
!6341 = !{i64 2147604766, i64 2147604809, i64 2147604849}
!6342 = !DILocation(line: 143, column: 1, scope: !6076)
!6343 = !{i64 2147604989, i64 2147605032, i64 2147605072}
!6344 = !DILocation(line: 144, column: 1, scope: !6076)
!6345 = !{i64 2147605206, i64 2147605249, i64 2147605289}
!6346 = !DILocation(line: 145, column: 1, scope: !6076)
!6347 = !{i64 2147605447, i64 2147605490, i64 2147605530}
!6348 = !DILocation(line: 146, column: 1, scope: !6076)
!6349 = !{i64 2147605634, i64 2147605677, i64 2147605717}
!6350 = !DILocation(line: 147, column: 1, scope: !6076)
!6351 = !{i64 2147605797, i64 2147605840, i64 2147605880}
!6352 = !DILocation(line: 148, column: 1, scope: !6076)
!6353 = !{i64 2147606002, i64 2147606045, i64 2147606085}
!6354 = !DILocation(line: 149, column: 1, scope: !6076)
!6355 = !{i64 2147606195, i64 2147606238, i64 2147606278}
!6356 = !DILocation(line: 150, column: 1, scope: !6076)
!6357 = !{i64 2147606454, i64 2147606497, i64 2147606537}
!6358 = !DILocation(line: 151, column: 1, scope: !6076)
!6359 = !{i64 2147606677, i64 2147606720, i64 2147606760}
!6360 = !DILocation(line: 152, column: 1, scope: !6076)
!6361 = !{i64 2147606906, i64 2147606949, i64 2147606989}
!6362 = !DILocation(line: 153, column: 1, scope: !6076)
!6363 = !{i64 2147607120, i64 2147607163, i64 2147607203}
!6364 = !DILocation(line: 154, column: 1, scope: !6076)
!6365 = !{i64 2147607322, i64 2147607365, i64 2147607405}
!6366 = !DILocation(line: 155, column: 1, scope: !6076)
!6367 = !{i64 2147607518, i64 2147607561, i64 2147607601}
!6368 = !DILocation(line: 156, column: 1, scope: !6076)
!6369 = !{i64 2147607730, i64 2147607773, i64 2147607813}
!6370 = !DILocation(line: 157, column: 1, scope: !6076)
!6371 = !{i64 2147607951, i64 2147607994, i64 2147608034}
!6372 = !DILocation(line: 158, column: 1, scope: !6076)
!6373 = !{i64 2147608165, i64 2147608208, i64 2147608248}
!6374 = !DILocation(line: 159, column: 1, scope: !6076)
!6375 = !{i64 2147608355, i64 2147608398, i64 2147608438}
!6376 = !DILocation(line: 160, column: 1, scope: !6076)
!6377 = !{i64 2147608554, i64 2147608597, i64 2147608637}
!6378 = !DILocation(line: 161, column: 1, scope: !6076)
!6379 = !{i64 2147608759, i64 2147608802, i64 2147608842}
!6380 = !DILocation(line: 162, column: 1, scope: !6076)
!6381 = !{i64 2147608979, i64 2147609022, i64 2147609062}
!6382 = !DILocation(line: 163, column: 1, scope: !6076)
!6383 = !{i64 2147609180, i64 2147609223, i64 2147609263}
!6384 = !DILocation(line: 164, column: 1, scope: !6076)
!6385 = !{i64 2147609379, i64 2147609422, i64 2147609462}
!6386 = !DILocation(line: 165, column: 1, scope: !6076)
!6387 = !{i64 2147609584, i64 2147609627, i64 2147609667}
!6388 = !DILocation(line: 166, column: 1, scope: !6076)
!6389 = !{i64 2147609753, i64 2147609796, i64 2147609836}
!6390 = !DILocation(line: 167, column: 1, scope: !6076)
!6391 = !{i64 2147609937, i64 2147609980, i64 2147610020}
!6392 = !DILocation(line: 168, column: 1, scope: !6076)
!6393 = !{i64 2147610121, i64 2147610164, i64 2147610204}
!6394 = !DILocation(line: 169, column: 1, scope: !6076)
!6395 = !{i64 2147610308, i64 2147610351, i64 2147610391}
!6396 = !DILocation(line: 170, column: 1, scope: !6076)
!6397 = !{i64 2147610492, i64 2147610535, i64 2147610575}
!6398 = !DILocation(line: 171, column: 1, scope: !6076)
!6399 = !{i64 2147610730, i64 2147610773, i64 2147610813}
!6400 = !DILocation(line: 172, column: 1, scope: !6076)
!6401 = !{i64 2147610960, i64 2147611003, i64 2147611043}
!6402 = !DILocation(line: 173, column: 1, scope: !6076)
!6403 = !{i64 2147611189, i64 2147611232, i64 2147611272}
!6404 = !DILocation(line: 174, column: 1, scope: !6076)
!6405 = !{i64 2147611376, i64 2147611419, i64 2147611459}
!6406 = !DILocation(line: 175, column: 1, scope: !6076)
!6407 = !{i64 2147611572, i64 2147611615, i64 2147611655}
!6408 = !DILocation(line: 176, column: 1, scope: !6076)
!6409 = !{i64 2147611780, i64 2147611823, i64 2147611863}
!6410 = !DILocation(line: 177, column: 1, scope: !6076)
!6411 = !{i64 2147611992, i64 2147612035, i64 2147612075}
!6412 = !DILocation(line: 178, column: 1, scope: !6076)
!6413 = !{i64 2147616252, i64 2147616295, i64 2147616335}
!6414 = !DILocation(line: 179, column: 1, scope: !6076)
!6415 = !{i64 2147616490, i64 2147616533, i64 2147616573}
!6416 = !DILocation(line: 180, column: 1, scope: !6076)
!6417 = !{i64 2147616686, i64 2147616729, i64 2147616769}
!6418 = !DILocation(line: 181, column: 1, scope: !6076)
!6419 = !{i64 2147616888, i64 2147616931, i64 2147616971}
!6420 = !DILocation(line: 182, column: 1, scope: !6076)
!6421 = !{i64 2147617081, i64 2147617124, i64 2147617164}
!6422 = !DILocation(line: 183, column: 1, scope: !6076)
!6423 = !{i64 2147617315, i64 2147617358, i64 2147617398}
!6424 = !DILocation(line: 184, column: 1, scope: !6076)
!6425 = !{i64 2147617478, i64 2147617521, i64 2147617561}
!6426 = !DILocation(line: 185, column: 1, scope: !6076)
!6427 = !{i64 2147617717, i64 2147617760, i64 2147617800}
!6428 = !DILocation(line: 186, column: 1, scope: !6076)
!6429 = !{i64 2147617956, i64 2147617999, i64 2147618039}
!6430 = !DILocation(line: 187, column: 1, scope: !6076)
!6431 = !{i64 2147618192, i64 2147618235, i64 2147618275}
!6432 = !DILocation(line: 188, column: 1, scope: !6076)
!6433 = !{i64 2147618422, i64 2147618465, i64 2147618505}
!6434 = !DILocation(line: 189, column: 1, scope: !6076)
!6435 = !{i64 2147618636, i64 2147618679, i64 2147618719}
!6436 = !DILocation(line: 190, column: 1, scope: !6076)
!6437 = !{i64 2147618823, i64 2147618866, i64 2147618906}
!6438 = !DILocation(line: 191, column: 1, scope: !6076)
!6439 = !{i64 2147619022, i64 2147619065, i64 2147619105}
!6440 = !DILocation(line: 192, column: 1, scope: !6076)
!6441 = !{i64 2147619293, i64 2147619336, i64 2147619376}
!6442 = !DILocation(line: 193, column: 1, scope: !6076)
!6443 = !{i64 2147619468, i64 2147619511, i64 2147619551}
!6444 = !DILocation(line: 194, column: 1, scope: !6076)
!6445 = !{i64 2147619702, i64 2147619745, i64 2147619785}
!6446 = !DILocation(line: 195, column: 1, scope: !6076)
!6447 = !{i64 2147619910, i64 2147619953, i64 2147619993}
!6448 = !DILocation(line: 196, column: 1, scope: !6076)
!6449 = !{i64 2147620128, i64 2147620171, i64 2147620211}
!6450 = !DILocation(line: 197, column: 1, scope: !6076)
!6451 = !{i64 2147620318, i64 2147620361, i64 2147620401}
!6452 = !DILocation(line: 198, column: 1, scope: !6076)
!6453 = !{i64 2147620550, i64 2147620593, i64 2147620633}
!6454 = !DILocation(line: 199, column: 1, scope: !6076)
!6455 = !{i64 2147620770, i64 2147620813, i64 2147620853}
!6456 = !DILocation(line: 200, column: 1, scope: !6076)
!6457 = !{i64 2147620966, i64 2147621009, i64 2147621049}
!6458 = !DILocation(line: 201, column: 1, scope: !6076)
!6459 = !{i64 2147621172, i64 2147621215, i64 2147621255}
!6460 = !DILocation(line: 202, column: 1, scope: !6076)
!6461 = !{i64 2147621377, i64 2147621420, i64 2147621460}
!6462 = !DILocation(line: 203, column: 1, scope: !6076)
!6463 = !{i64 2147621603, i64 2147621646, i64 2147621686}
!6464 = !DILocation(line: 204, column: 1, scope: !6076)
!6465 = !{i64 2147621811, i64 2147621854, i64 2147621894}
!6466 = !DILocation(line: 205, column: 1, scope: !6076)
!6467 = !{i64 2147622007, i64 2147622050, i64 2147622090}
!6468 = !DILocation(line: 206, column: 1, scope: !6076)
!6469 = !{i64 2147622239, i64 2147622282, i64 2147622322}
!6470 = !DILocation(line: 207, column: 1, scope: !6076)
!6471 = !{i64 2147622417, i64 2147622460, i64 2147622500}
!6472 = !DILocation(line: 208, column: 1, scope: !6076)
!6473 = !{i64 2147622626, i64 2147622669, i64 2147622709}
!6474 = !DILocation(line: 209, column: 1, scope: !6076)
!6475 = !{i64 2147622834, i64 2147622877, i64 2147622917}
!6476 = !DILocation(line: 210, column: 1, scope: !6076)
!6477 = !{i64 2147623030, i64 2147623073, i64 2147623113}
!6478 = !DILocation(line: 211, column: 1, scope: !6076)
!6479 = !{i64 2147623262, i64 2147623305, i64 2147623345}
!6480 = !DILocation(line: 212, column: 1, scope: !6076)
!6481 = !{i64 2147623464, i64 2147623507, i64 2147623547}
!6482 = !DILocation(line: 213, column: 1, scope: !6076)
!6483 = !{i64 2147623714, i64 2147623757, i64 2147623797}
!6484 = !DILocation(line: 214, column: 1, scope: !6076)
!6485 = !{i64 2147623952, i64 2147623995, i64 2147624035}
!6486 = !DILocation(line: 215, column: 1, scope: !6076)
!6487 = !{i64 2147624163, i64 2147624206, i64 2147624246}
!6488 = !DILocation(line: 216, column: 1, scope: !6076)
!6489 = !{i64 2147624368, i64 2147624411, i64 2147624451}
!6490 = !DILocation(line: 217, column: 1, scope: !6076)
!6491 = !{i64 2147624561, i64 2147624604, i64 2147624644}
!6492 = !DILocation(line: 218, column: 1, scope: !6076)
!6493 = !{i64 2147624736, i64 2147624779, i64 2147624819}
!6494 = !DILocation(line: 219, column: 1, scope: !6076)
!6495 = !{i64 2147624953, i64 2147624996, i64 2147625036}
!6496 = !DILocation(line: 220, column: 1, scope: !6076)
!6497 = !{i64 2147629219, i64 2147629262, i64 2147629302}
!6498 = !DILocation(line: 221, column: 1, scope: !6076)
!6499 = !{i64 2147629406, i64 2147629449, i64 2147629489}
!6500 = !DILocation(line: 222, column: 1, scope: !6076)
!6501 = !{i64 2147629614, i64 2147629657, i64 2147629697}
!6502 = !DILocation(line: 223, column: 1, scope: !6076)
!6503 = !{i64 2147629810, i64 2147629853, i64 2147629893}
!6504 = !DILocation(line: 224, column: 1, scope: !6076)
!6505 = !{i64 2147630024, i64 2147630067, i64 2147630107}
!6506 = !DILocation(line: 225, column: 1, scope: !6076)
!6507 = !{i64 2147630232, i64 2147630275, i64 2147630315}
!6508 = !DILocation(line: 226, column: 1, scope: !6076)
!6509 = !{i64 2147630422, i64 2147630465, i64 2147630505}
!6510 = !DILocation(line: 227, column: 1, scope: !6076)
!6511 = !{i64 2147630636, i64 2147630679, i64 2147630719}
!6512 = !DILocation(line: 228, column: 1, scope: !6076)
!6513 = !{i64 2147630898, i64 2147630941, i64 2147630981}
!6514 = !DILocation(line: 229, column: 1, scope: !6076)
!6515 = !{i64 2147631109, i64 2147631152, i64 2147631192}
!6516 = !DILocation(line: 230, column: 1, scope: !6076)
!6517 = !{i64 2147631353, i64 2147631396, i64 2147631436}
!6518 = !DILocation(line: 231, column: 1, scope: !6076)
!6519 = !{i64 2147631564, i64 2147631607, i64 2147631647}
!6520 = !DILocation(line: 232, column: 1, scope: !6076)
!6521 = !{i64 2147631793, i64 2147631836, i64 2147631876}
!6522 = !DILocation(line: 233, column: 1, scope: !6076)
!6523 = !{i64 2147632058, i64 2147632101, i64 2147632141}
!6524 = !DILocation(line: 234, column: 1, scope: !6076)
!6525 = !{i64 2147632263, i64 2147632306, i64 2147632346}
!6526 = !DILocation(line: 235, column: 1, scope: !6076)
!6527 = !{i64 2147632459, i64 2147632502, i64 2147632542}
!6528 = !DILocation(line: 236, column: 1, scope: !6076)
!6529 = !{i64 2147632682, i64 2147632725, i64 2147632765}
!6530 = !DILocation(line: 237, column: 1, scope: !6076)
!6531 = !{i64 2147632845, i64 2147632888, i64 2147632928}
!6532 = !DILocation(line: 238, column: 1, scope: !6076)
!6533 = !{i64 2147633050, i64 2147633093, i64 2147633133}
!6534 = !DILocation(line: 239, column: 1, scope: !6076)
!6535 = !{i64 2147633270, i64 2147633313, i64 2147633353}
!6536 = !DILocation(line: 240, column: 1, scope: !6076)
!6537 = !{i64 2147633484, i64 2147633527, i64 2147633567}
!6538 = !DILocation(line: 241, column: 1, scope: !6076)
!6539 = !{i64 2147633728, i64 2147633771, i64 2147633811}
!6540 = !DILocation(line: 242, column: 1, scope: !6076)
!6541 = !{i64 2147633960, i64 2147634003, i64 2147634043}
!6542 = !DILocation(line: 243, column: 1, scope: !6076)
!6543 = !{i64 2147634174, i64 2147634217, i64 2147634257}
!6544 = !DILocation(line: 244, column: 1, scope: !6076)
!6545 = !{i64 2147634385, i64 2147634428, i64 2147634468}
!6546 = !DILocation(line: 245, column: 1, scope: !6076)
!6547 = !{i64 2147634578, i64 2147634621, i64 2147634661}
!6548 = !DILocation(line: 246, column: 1, scope: !6076)
!6549 = !{i64 2147634777, i64 2147634820, i64 2147634860}
!6550 = !DILocation(line: 247, column: 1, scope: !6076)
!6551 = !{i64 2147634949, i64 2147634992, i64 2147635032}
!6552 = !DILocation(line: 248, column: 1, scope: !6076)
!6553 = !{i64 2147635142, i64 2147635185, i64 2147635225}
!6554 = !DILocation(line: 249, column: 1, scope: !6076)
!6555 = !{i64 2147635314, i64 2147635357, i64 2147635397}
!6556 = !DILocation(line: 250, column: 1, scope: !6076)
!6557 = !{i64 2147635504, i64 2147635547, i64 2147635587}
!6558 = !DILocation(line: 251, column: 1, scope: !6076)
!6559 = !{i64 2147635697, i64 2147635740, i64 2147635780}
!6560 = !DILocation(line: 252, column: 1, scope: !6076)
!6561 = !{i64 2147635893, i64 2147635936, i64 2147635976}
!6562 = !DILocation(line: 253, column: 1, scope: !6076)
!6563 = !{i64 2147636056, i64 2147636099, i64 2147636139}
!6564 = !DILocation(line: 254, column: 1, scope: !6076)
!6565 = !{i64 2147636258, i64 2147636301, i64 2147636341}
!6566 = !DILocation(line: 255, column: 1, scope: !6076)
!6567 = !{i64 2147636463, i64 2147636506, i64 2147636546}
!6568 = !DILocation(line: 256, column: 1, scope: !6076)
!6569 = !{i64 2147636671, i64 2147636714, i64 2147636754}
!6570 = !DILocation(line: 257, column: 1, scope: !6076)
!6571 = !{i64 2147636864, i64 2147636907, i64 2147636947}
!6572 = !DILocation(line: 258, column: 1, scope: !6076)
!6573 = !{i64 2147637051, i64 2147637094, i64 2147637134}
!6574 = !DILocation(line: 259, column: 1, scope: !6076)
!6575 = !{i64 2147637268, i64 2147637311, i64 2147637351}
!6576 = !DILocation(line: 260, column: 1, scope: !6076)
!6577 = !{i64 2147637488, i64 2147637531, i64 2147637571}
!6578 = !DILocation(line: 261, column: 1, scope: !6076)
!6579 = !{i64 2147637715, i64 2147637758, i64 2147637798}
!6580 = !DILocation(line: 262, column: 1, scope: !6076)
!6581 = !{i64 2147637932, i64 2147637975, i64 2147638015}
!6582 = !DILocation(line: 263, column: 1, scope: !6076)
!6583 = !{i64 2147642285, i64 2147642328, i64 2147642368}
!6584 = !DILocation(line: 264, column: 1, scope: !6076)
!6585 = !{i64 2147642517, i64 2147642560, i64 2147642600}
!6586 = !DILocation(line: 265, column: 1, scope: !6076)
!6587 = !{i64 2147642734, i64 2147642777, i64 2147642817}
!6588 = !DILocation(line: 266, column: 1, scope: !6076)
!6589 = !{i64 2147642941, i64 2147642984, i64 2147643024}
!6590 = !DILocation(line: 267, column: 1, scope: !6076)
!6591 = !{i64 2147643142, i64 2147643185, i64 2147643225}
!6592 = !DILocation(line: 268, column: 1, scope: !6076)
!6593 = !{i64 2147643374, i64 2147643417, i64 2147643457}
!6594 = !DILocation(line: 269, column: 1, scope: !6076)
!6595 = !{i64 2147643582, i64 2147643625, i64 2147643665}
!6596 = !DILocation(line: 270, column: 1, scope: !6076)
!6597 = !{i64 2147643772, i64 2147643815, i64 2147643855}
!6598 = !DILocation(line: 271, column: 1, scope: !6076)
!6599 = !{i64 2147643998, i64 2147644041, i64 2147644081}
!6600 = !DILocation(line: 272, column: 1, scope: !6076)
!6601 = !{i64 2147644187, i64 2147644230, i64 2147644270}
!6602 = !DILocation(line: 273, column: 1, scope: !6076)
!6603 = !{i64 2147644458, i64 2147644501, i64 2147644541}
!6604 = !DILocation(line: 274, column: 1, scope: !6076)
!6605 = !{i64 2147644678, i64 2147644721, i64 2147644761}
!6606 = !DILocation(line: 275, column: 1, scope: !6076)
!6607 = !{i64 2147644931, i64 2147644974, i64 2147645014}
!6608 = !DILocation(line: 276, column: 1, scope: !6076)
!6609 = !{i64 2147645139, i64 2147645182, i64 2147645222}
!6610 = !DILocation(line: 277, column: 1, scope: !6076)
!6611 = !{i64 2147645371, i64 2147645414, i64 2147645454}
!6612 = !DILocation(line: 278, column: 1, scope: !6076)
!6613 = !{i64 2147645582, i64 2147645625, i64 2147645665}
!6614 = !DILocation(line: 279, column: 1, scope: !6076)
!6615 = !{i64 2147645772, i64 2147645815, i64 2147645855}
!6616 = !DILocation(line: 280, column: 1, scope: !6076)
!6617 = !{i64 2147645986, i64 2147646029, i64 2147646069}
!6618 = !DILocation(line: 281, column: 1, scope: !6076)
!6619 = !{i64 2147646185, i64 2147646228, i64 2147646268}
!6620 = !DILocation(line: 282, column: 1, scope: !6076)
!6621 = !{i64 2147646372, i64 2147646415, i64 2147646455}
!6622 = !DILocation(line: 283, column: 1, scope: !6076)
!6623 = !{i64 2147646580, i64 2147646623, i64 2147646663}
!6624 = !DILocation(line: 284, column: 1, scope: !6076)
!6625 = !{i64 2147646809, i64 2147646852, i64 2147646892}
!6626 = !DILocation(line: 285, column: 1, scope: !6076)
!6627 = !{i64 2147647011, i64 2147647054, i64 2147647094}
!6628 = !DILocation(line: 286, column: 1, scope: !6076)
!6629 = !{i64 2147647210, i64 2147647253, i64 2147647293}
!6630 = !DILocation(line: 287, column: 1, scope: !6076)
!6631 = !{i64 2147647427, i64 2147647470, i64 2147647510}
!6632 = !DILocation(line: 289, column: 1, scope: !6076)
!6633 = distinct !DISubprogram(name: "atmel_sam3x_init", scope: !517, file: !517, line: 205, type: !524, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !6634)
!6634 = !{!6635, !6636}
!6635 = !DILocalVariable(name: "arg", arg: 1, scope: !6633, file: !517, line: 205, type: !526)
!6636 = !DILocalVariable(name: "key", scope: !6633, file: !517, line: 207, type: !113)
!6637 = !DILocation(line: 0, scope: !6633)
!6638 = !DILocation(line: 55, column: 2, scope: !6639, inlinedAt: !6646)
!6639 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !6643)
!6640 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!32}
!6643 = !{!6644, !6645}
!6644 = !DILocalVariable(name: "key", scope: !6639, file: !6640, line: 44, type: !32)
!6645 = !DILocalVariable(name: "tmp", scope: !6639, file: !6640, line: 53, type: !32)
!6646 = distinct !DILocation(line: 211, column: 8, scope: !6633)
!6647 = !{i64 1326461}
!6648 = !DILocation(line: 0, scope: !6639, inlinedAt: !6646)
!6649 = !DILocation(line: 219, column: 17, scope: !6633)
!6650 = !DILocation(line: 220, column: 17, scope: !6633)
!6651 = !DILocation(line: 65, column: 16, scope: !6652, inlinedAt: !6655)
!6652 = distinct !DISubprogram(name: "clock_init", scope: !517, file: !517, line: 45, type: !266, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !6653)
!6653 = !{!6654}
!6654 = !DILocalVariable(name: "reg_val", scope: !6652, file: !517, line: 47, type: !113)
!6655 = distinct !DILocation(line: 223, column: 2, scope: !6633)
!6656 = !DILocation(line: 78, column: 2, scope: !6652, inlinedAt: !6655)
!6657 = !DILocation(line: 78, column: 16, scope: !6652, inlinedAt: !6655)
!6658 = !DILocation(line: 78, column: 23, scope: !6652, inlinedAt: !6655)
!6659 = !DILocation(line: 78, column: 9, scope: !6652, inlinedAt: !6655)
!6660 = distinct !{!6660, !6656, !6661}
!6661 = !DILocation(line: 80, column: 2, scope: !6652, inlinedAt: !6655)
!6662 = !DILocation(line: 83, column: 16, scope: !6652, inlinedAt: !6655)
!6663 = !DILocation(line: 91, column: 2, scope: !6652, inlinedAt: !6655)
!6664 = !DILocation(line: 91, column: 16, scope: !6652, inlinedAt: !6655)
!6665 = !DILocation(line: 91, column: 23, scope: !6652, inlinedAt: !6655)
!6666 = !DILocation(line: 91, column: 9, scope: !6652, inlinedAt: !6655)
!6667 = distinct !{!6667, !6663, !6668}
!6668 = !DILocation(line: 93, column: 2, scope: !6652, inlinedAt: !6655)
!6669 = !DILocation(line: 96, column: 16, scope: !6652, inlinedAt: !6655)
!6670 = !DILocation(line: 102, column: 2, scope: !6652, inlinedAt: !6655)
!6671 = !DILocation(line: 102, column: 14, scope: !6652, inlinedAt: !6655)
!6672 = !DILocation(line: 102, column: 21, scope: !6652, inlinedAt: !6655)
!6673 = distinct !{!6673, !6670, !6674}
!6674 = !DILocation(line: 104, column: 2, scope: !6652, inlinedAt: !6655)
!6675 = !DILocation(line: 143, column: 17, scope: !6652, inlinedAt: !6655)
!6676 = !DILocation(line: 143, column: 26, scope: !6652, inlinedAt: !6655)
!6677 = !DILocation(line: 0, scope: !6652, inlinedAt: !6655)
!6678 = !DILocation(line: 144, column: 26, scope: !6652, inlinedAt: !6655)
!6679 = !DILocation(line: 144, column: 16, scope: !6652, inlinedAt: !6655)
!6680 = !DILocation(line: 147, column: 2, scope: !6652, inlinedAt: !6655)
!6681 = !DILocation(line: 147, column: 16, scope: !6652, inlinedAt: !6655)
!6682 = !DILocation(line: 147, column: 23, scope: !6652, inlinedAt: !6655)
!6683 = !DILocation(line: 147, column: 9, scope: !6652, inlinedAt: !6655)
!6684 = distinct !{!6684, !6680, !6685}
!6685 = !DILocation(line: 149, column: 2, scope: !6652, inlinedAt: !6655)
!6686 = !DILocation(line: 152, column: 18, scope: !6652, inlinedAt: !6655)
!6687 = !DILocation(line: 164, column: 2, scope: !6652, inlinedAt: !6655)
!6688 = !DILocation(line: 164, column: 16, scope: !6652, inlinedAt: !6655)
!6689 = !DILocation(line: 164, column: 23, scope: !6652, inlinedAt: !6655)
!6690 = !DILocation(line: 164, column: 9, scope: !6652, inlinedAt: !6655)
!6691 = distinct !{!6691, !6687, !6692}
!6692 = !DILocation(line: 166, column: 2, scope: !6652, inlinedAt: !6655)
!6693 = !DILocation(line: 179, column: 17, scope: !6652, inlinedAt: !6655)
!6694 = !DILocation(line: 179, column: 26, scope: !6652, inlinedAt: !6655)
!6695 = !DILocation(line: 180, column: 16, scope: !6652, inlinedAt: !6655)
!6696 = !DILocation(line: 183, column: 2, scope: !6652, inlinedAt: !6655)
!6697 = !DILocation(line: 183, column: 16, scope: !6652, inlinedAt: !6655)
!6698 = !DILocation(line: 183, column: 23, scope: !6652, inlinedAt: !6655)
!6699 = !DILocation(line: 183, column: 9, scope: !6652, inlinedAt: !6655)
!6700 = distinct !{!6700, !6696, !6701}
!6701 = !DILocation(line: 185, column: 2, scope: !6652, inlinedAt: !6655)
!6702 = !DILocation(line: 188, column: 17, scope: !6652, inlinedAt: !6655)
!6703 = !DILocation(line: 188, column: 26, scope: !6652, inlinedAt: !6655)
!6704 = !DILocation(line: 189, column: 26, scope: !6652, inlinedAt: !6655)
!6705 = !DILocation(line: 189, column: 16, scope: !6652, inlinedAt: !6655)
!6706 = !DILocation(line: 192, column: 2, scope: !6652, inlinedAt: !6655)
!6707 = !DILocation(line: 192, column: 16, scope: !6652, inlinedAt: !6655)
!6708 = !DILocation(line: 192, column: 23, scope: !6652, inlinedAt: !6655)
!6709 = !DILocation(line: 192, column: 9, scope: !6652, inlinedAt: !6655)
!6710 = distinct !{!6710, !6706, !6711}
!6711 = !DILocation(line: 194, column: 2, scope: !6652, inlinedAt: !6655)
!6712 = !DILocalVariable(name: "key", arg: 1, scope: !6713, file: !6640, line: 84, type: !32)
!6713 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !6716)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{null, !32}
!6716 = !{!6712}
!6717 = !DILocation(line: 0, scope: !6713, inlinedAt: !6718)
!6718 = distinct !DILocation(line: 230, column: 2, scope: !6633)
!6719 = !DILocation(line: 95, column: 2, scope: !6713, inlinedAt: !6718)
!6720 = !{i64 1327278}
!6721 = !DILocation(line: 232, column: 2, scope: !6633)
!6722 = distinct !DISubprogram(name: "soc_pmc_peripheral_enable", scope: !6723, file: !6723, line: 19, type: !6724, scopeLine: 20, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !6726)
!6723 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/common/soc_pmc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6724 = !DISubroutineType(types: !6725)
!6725 = !{null, !113}
!6726 = !{!6727}
!6727 = !DILocalVariable(name: "id", arg: 1, scope: !6722, file: !6723, line: 19, type: !113)
!6728 = !DILocation(line: 0, scope: !6722)
!6729 = !DILocation(line: 21, column: 2, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !6723, line: 21, column: 2)
!6731 = distinct !DILexicalBlock(scope: !6722, file: !6723, line: 21, column: 2)
!6732 = !DILocation(line: 21, column: 2, scope: !6731)
!6733 = !DILocation(line: 21, column: 2, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !6723, line: 21, column: 2)
!6735 = !DILocation(line: 23, column: 9, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6722, file: !6723, line: 23, column: 6)
!6737 = !DILocation(line: 23, column: 6, scope: !6722)
!6738 = !DILocation(line: 24, column: 20, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6736, file: !6723, line: 23, column: 15)
!6740 = !DILocation(line: 24, column: 18, scope: !6739)
!6741 = !DILocation(line: 26, column: 2, scope: !6739)
!6742 = !DILocation(line: 27, column: 20, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6723, line: 26, column: 22)
!6744 = distinct !DILexicalBlock(scope: !6736, file: !6723, line: 26, column: 13)
!6745 = !DILocation(line: 27, column: 18, scope: !6743)
!6746 = !DILocation(line: 33, column: 2, scope: !6743)
!6747 = !DILocation(line: 34, column: 1, scope: !6722)
!6748 = distinct !DISubprogram(name: "soc_pmc_peripheral_disable", scope: !6723, file: !6723, line: 36, type: !6724, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !6749)
!6749 = !{!6750}
!6750 = !DILocalVariable(name: "id", arg: 1, scope: !6748, file: !6723, line: 36, type: !113)
!6751 = !DILocation(line: 0, scope: !6748)
!6752 = !DILocation(line: 38, column: 2, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !6723, line: 38, column: 2)
!6754 = distinct !DILexicalBlock(scope: !6748, file: !6723, line: 38, column: 2)
!6755 = !DILocation(line: 38, column: 2, scope: !6754)
!6756 = !DILocation(line: 38, column: 2, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6753, file: !6723, line: 38, column: 2)
!6758 = !DILocation(line: 40, column: 9, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6748, file: !6723, line: 40, column: 6)
!6760 = !DILocation(line: 40, column: 6, scope: !6748)
!6761 = !DILocation(line: 0, scope: !6759)
!6762 = !DILocation(line: 51, column: 1, scope: !6748)
!6763 = distinct !DISubprogram(name: "soc_pmc_peripheral_is_enabled", scope: !6723, file: !6723, line: 53, type: !6764, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2051, retainedNodes: !6766)
!6764 = !DISubroutineType(types: !6765)
!6765 = !{!113, !113}
!6766 = !{!6767}
!6767 = !DILocalVariable(name: "id", arg: 1, scope: !6763, file: !6723, line: 53, type: !113)
!6768 = !DILocation(line: 0, scope: !6763)
!6769 = !DILocation(line: 55, column: 2, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6723, line: 55, column: 2)
!6771 = distinct !DILexicalBlock(scope: !6763, file: !6723, line: 55, column: 2)
!6772 = !DILocation(line: 55, column: 2, scope: !6771)
!6773 = !DILocation(line: 55, column: 2, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6770, file: !6723, line: 55, column: 2)
!6775 = !DILocation(line: 57, column: 9, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6763, file: !6723, line: 57, column: 6)
!6777 = !DILocation(line: 57, column: 6, scope: !6763)
!6778 = !DILocation(line: 58, column: 16, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6776, file: !6723, line: 57, column: 15)
!6780 = !DILocation(line: 58, column: 37, scope: !6779)
!6781 = !DILocation(line: 58, column: 3, scope: !6779)
!6782 = !DILocation(line: 61, column: 16, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6723, line: 60, column: 22)
!6784 = distinct !DILexicalBlock(scope: !6776, file: !6723, line: 60, column: 13)
!6785 = !DILocation(line: 61, column: 28, scope: !6783)
!6786 = !DILocation(line: 61, column: 44, scope: !6783)
!6787 = !DILocation(line: 61, column: 3, scope: !6783)
!6788 = !DILocation(line: 70, column: 1, scope: !6763)
!6789 = distinct !DISubprogram(name: "soc_gpio_configure", scope: !6790, file: !6790, line: 116, type: !6791, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !6860)
!6790 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/common/soc_gpio.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6791 = !DISubroutineType(types: !6792)
!6792 = !{null, !6793}
!6793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6794, size: 32)
!6794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6795)
!6795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_gpio_pin", file: !6796, line: 85, size: 128, elements: !6797)
!6796 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/sam3x/../common/soc_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6797 = !{!6798, !6799, !6858, !6859}
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6795, file: !6796, line: 86, baseType: !113, size: 32)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6795, file: !6796, line: 90, baseType: !6800, size: 32, offset: 32)
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 32)
!6801 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pio", file: !1296, line: 96, baseType: !6802)
!6802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1296, line: 41, size: 1888, elements: !6803)
!6803 = !{!6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811, !6812, !6813, !6814, !6815, !6816, !6817, !6818, !6819, !6820, !6821, !6822, !6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830, !6831, !6832, !6833, !6834, !6835, !6836, !6837, !6838, !6839, !6840, !6841, !6842, !6843, !6844, !6845, !6846, !6847, !6848, !6849, !6850, !6851, !6852, !6853, !6854, !6855, !6856, !6857}
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PER", scope: !6802, file: !1296, line: 42, baseType: !461, size: 32)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDR", scope: !6802, file: !1296, line: 43, baseType: !461, size: 32, offset: 32)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PSR", scope: !6802, file: !1296, line: 44, baseType: !464, size: 32, offset: 64)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !6802, file: !1296, line: 45, baseType: !475, size: 32, offset: 96)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OER", scope: !6802, file: !1296, line: 46, baseType: !461, size: 32, offset: 128)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODR", scope: !6802, file: !1296, line: 47, baseType: !461, size: 32, offset: 160)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OSR", scope: !6802, file: !1296, line: 48, baseType: !464, size: 32, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !6802, file: !1296, line: 49, baseType: !475, size: 32, offset: 224)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFER", scope: !6802, file: !1296, line: 50, baseType: !461, size: 32, offset: 256)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDR", scope: !6802, file: !1296, line: 51, baseType: !461, size: 32, offset: 288)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFSR", scope: !6802, file: !1296, line: 52, baseType: !464, size: 32, offset: 320)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !6802, file: !1296, line: 53, baseType: !475, size: 32, offset: 352)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SODR", scope: !6802, file: !1296, line: 54, baseType: !461, size: 32, offset: 384)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_CODR", scope: !6802, file: !1296, line: 55, baseType: !461, size: 32, offset: 416)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODSR", scope: !6802, file: !1296, line: 56, baseType: !461, size: 32, offset: 448)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDSR", scope: !6802, file: !1296, line: 57, baseType: !464, size: 32, offset: 480)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IER", scope: !6802, file: !1296, line: 58, baseType: !461, size: 32, offset: 512)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IDR", scope: !6802, file: !1296, line: 59, baseType: !461, size: 32, offset: 544)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IMR", scope: !6802, file: !1296, line: 60, baseType: !464, size: 32, offset: 576)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ISR", scope: !6802, file: !1296, line: 61, baseType: !464, size: 32, offset: 608)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDER", scope: !6802, file: !1296, line: 62, baseType: !461, size: 32, offset: 640)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDDR", scope: !6802, file: !1296, line: 63, baseType: !461, size: 32, offset: 672)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDSR", scope: !6802, file: !1296, line: 64, baseType: !464, size: 32, offset: 704)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !6802, file: !1296, line: 65, baseType: !475, size: 32, offset: 736)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUDR", scope: !6802, file: !1296, line: 66, baseType: !461, size: 32, offset: 768)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUER", scope: !6802, file: !1296, line: 67, baseType: !461, size: 32, offset: 800)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUSR", scope: !6802, file: !1296, line: 68, baseType: !464, size: 32, offset: 832)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !6802, file: !1296, line: 69, baseType: !475, size: 32, offset: 864)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ABSR", scope: !6802, file: !1296, line: 70, baseType: !461, size: 32, offset: 896)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !6802, file: !1296, line: 71, baseType: !1329, size: 96, offset: 928)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCIFSR", scope: !6802, file: !1296, line: 72, baseType: !461, size: 32, offset: 1024)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_DIFSR", scope: !6802, file: !1296, line: 73, baseType: !461, size: 32, offset: 1056)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDGSR", scope: !6802, file: !1296, line: 74, baseType: !464, size: 32, offset: 1088)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCDR", scope: !6802, file: !1296, line: 75, baseType: !461, size: 32, offset: 1120)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !6802, file: !1296, line: 76, baseType: !1246, size: 128, offset: 1152)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWER", scope: !6802, file: !1296, line: 77, baseType: !461, size: 32, offset: 1280)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWDR", scope: !6802, file: !1296, line: 78, baseType: !461, size: 32, offset: 1312)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWSR", scope: !6802, file: !1296, line: 79, baseType: !464, size: 32, offset: 1344)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !6802, file: !1296, line: 80, baseType: !475, size: 32, offset: 1376)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMER", scope: !6802, file: !1296, line: 81, baseType: !461, size: 32, offset: 1408)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMDR", scope: !6802, file: !1296, line: 82, baseType: !461, size: 32, offset: 1440)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMMR", scope: !6802, file: !1296, line: 83, baseType: !464, size: 32, offset: 1472)
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved9", scope: !6802, file: !1296, line: 84, baseType: !475, size: 32, offset: 1504)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ESR", scope: !6802, file: !1296, line: 85, baseType: !461, size: 32, offset: 1536)
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LSR", scope: !6802, file: !1296, line: 86, baseType: !461, size: 32, offset: 1568)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ELSR", scope: !6802, file: !1296, line: 87, baseType: !464, size: 32, offset: 1600)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved10", scope: !6802, file: !1296, line: 88, baseType: !475, size: 32, offset: 1632)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FELLSR", scope: !6802, file: !1296, line: 89, baseType: !461, size: 32, offset: 1664)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_REHLSR", scope: !6802, file: !1296, line: 90, baseType: !461, size: 32, offset: 1696)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FRLHSR", scope: !6802, file: !1296, line: 91, baseType: !464, size: 32, offset: 1728)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved11", scope: !6802, file: !1296, line: 92, baseType: !475, size: 32, offset: 1760)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LOCKSR", scope: !6802, file: !1296, line: 93, baseType: !464, size: 32, offset: 1792)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPMR", scope: !6802, file: !1296, line: 94, baseType: !461, size: 32, offset: 1824)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPSR", scope: !6802, file: !1296, line: 95, baseType: !464, size: 32, offset: 1856)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !6795, file: !6796, line: 92, baseType: !169, size: 8, offset: 64)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6795, file: !6796, line: 93, baseType: !113, size: 32, offset: 96)
!6860 = !{!6861, !6862, !6863, !6864, !6865, !6866}
!6861 = !DILocalVariable(name: "pin", arg: 1, scope: !6789, file: !6790, line: 116, type: !6793)
!6862 = !DILocalVariable(name: "mask", scope: !6789, file: !6790, line: 118, type: !113)
!6863 = !DILocalVariable(name: "pio", scope: !6789, file: !6790, line: 119, type: !6800)
!6864 = !DILocalVariable(name: "periph_id", scope: !6789, file: !6790, line: 120, type: !169)
!6865 = !DILocalVariable(name: "flags", scope: !6789, file: !6790, line: 121, type: !113)
!6866 = !DILocalVariable(name: "type", scope: !6789, file: !6790, line: 122, type: !113)
!6867 = !DILocation(line: 0, scope: !6789)
!6868 = !DILocation(line: 118, column: 23, scope: !6789)
!6869 = !DILocation(line: 119, column: 18, scope: !6789)
!6870 = !DILocation(line: 120, column: 27, scope: !6789)
!6871 = !DILocation(line: 121, column: 24, scope: !6789)
!6872 = !DILocation(line: 122, column: 29, scope: !6789)
!6873 = !DILocation(line: 125, column: 2, scope: !6789)
!6874 = !DILocation(line: 127, column: 2, scope: !6789)
!6875 = !DILocation(line: 133, column: 20, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6789, file: !6790, line: 127, column: 16)
!6877 = !DILocation(line: 133, column: 8, scope: !6876)
!6878 = !DILocation(line: 133, column: 17, scope: !6876)
!6879 = !DILocation(line: 136, column: 8, scope: !6876)
!6880 = !DILocation(line: 137, column: 3, scope: !6876)
!6881 = !DILocation(line: 144, column: 8, scope: !6876)
!6882 = !DILocation(line: 144, column: 17, scope: !6876)
!6883 = !DILocation(line: 147, column: 8, scope: !6876)
!6884 = !DILocation(line: 148, column: 3, scope: !6876)
!6885 = !DILocation(line: 168, column: 29, scope: !6876)
!6886 = !DILocation(line: 168, column: 3, scope: !6876)
!6887 = !DILocation(line: 170, column: 3, scope: !6876)
!6888 = !DILocation(line: 172, column: 8, scope: !6876)
!6889 = !DILocation(line: 172, column: 16, scope: !6876)
!6890 = !DILocation(line: 173, column: 8, scope: !6876)
!6891 = !DILocation(line: 174, column: 3, scope: !6876)
!6892 = !DILocation(line: 179, column: 12, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6876, file: !6790, line: 179, column: 7)
!6894 = !DILocation(line: 179, column: 7, scope: !6876)
!6895 = !DILocation(line: 0, scope: !6893)
!6896 = !DILocation(line: 186, column: 3, scope: !6876)
!6897 = !DILocation(line: 188, column: 8, scope: !6876)
!6898 = !DILocation(line: 188, column: 16, scope: !6876)
!6899 = !DILocation(line: 189, column: 8, scope: !6876)
!6900 = !DILocation(line: 190, column: 3, scope: !6876)
!6901 = !DILocation(line: 193, column: 3, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6790, line: 193, column: 3)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6790, line: 193, column: 3)
!6904 = distinct !DILexicalBlock(scope: !6876, file: !6790, line: 193, column: 3)
!6905 = !DILocation(line: 0, scope: !6876)
!6906 = !DILocation(line: 196, column: 1, scope: !6789)
!6907 = distinct !DISubprogram(name: "configure_common_attr", scope: !6790, file: !6790, line: 24, type: !6908, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !6910)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{null, !6800, !113, !113}
!6910 = !{!6911, !6912, !6913}
!6911 = !DILocalVariable(name: "pio", arg: 1, scope: !6907, file: !6790, line: 24, type: !6800)
!6912 = !DILocalVariable(name: "mask", arg: 2, scope: !6907, file: !6790, line: 24, type: !113)
!6913 = !DILocalVariable(name: "flags", arg: 3, scope: !6907, file: !6790, line: 24, type: !113)
!6914 = !DILocation(line: 0, scope: !6907)
!6915 = !DILocation(line: 27, column: 7, scope: !6907)
!6916 = !DILocation(line: 27, column: 15, scope: !6907)
!6917 = !DILocation(line: 30, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6907, file: !6790, line: 30, column: 6)
!6919 = !DILocation(line: 30, column: 6, scope: !6907)
!6920 = !DILocation(line: 0, scope: !6918)
!6921 = !DILocation(line: 47, column: 12, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6907, file: !6790, line: 47, column: 6)
!6923 = !DILocation(line: 47, column: 6, scope: !6907)
!6924 = !DILocation(line: 0, scope: !6922)
!6925 = !DILocation(line: 52, column: 1, scope: !6907)
!6926 = distinct !DISubprogram(name: "configure_input_attr", scope: !6790, file: !6790, line: 54, type: !6908, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !6927)
!6927 = !{!6928, !6929, !6930}
!6928 = !DILocalVariable(name: "pio", arg: 1, scope: !6926, file: !6790, line: 54, type: !6800)
!6929 = !DILocalVariable(name: "mask", arg: 2, scope: !6926, file: !6790, line: 54, type: !113)
!6930 = !DILocalVariable(name: "flags", arg: 3, scope: !6926, file: !6790, line: 54, type: !113)
!6931 = !DILocation(line: 0, scope: !6926)
!6932 = !DILocation(line: 57, column: 13, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6926, file: !6790, line: 57, column: 6)
!6934 = !DILocation(line: 57, column: 6, scope: !6926)
!6935 = !DILocation(line: 63, column: 9, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6790, line: 58, column: 73)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6790, line: 58, column: 7)
!6938 = distinct !DILexicalBlock(scope: !6933, file: !6790, line: 57, column: 47)
!6939 = !DILocation(line: 65, column: 3, scope: !6936)
!6940 = !DILocation(line: 70, column: 9, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6937, file: !6790, line: 65, column: 10)
!6942 = !DILocation(line: 0, scope: !6937)
!6943 = !DILocation(line: 73, column: 8, scope: !6938)
!6944 = !DILocation(line: 74, column: 2, scope: !6938)
!6945 = !DILocation(line: 75, column: 8, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6933, file: !6790, line: 74, column: 9)
!6947 = !DILocation(line: 0, scope: !6933)
!6948 = !DILocation(line: 79, column: 12, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6926, file: !6790, line: 79, column: 6)
!6950 = !DILocation(line: 79, column: 6, scope: !6926)
!6951 = !DILocation(line: 80, column: 7, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6949, file: !6790, line: 79, column: 35)
!6953 = !DILocation(line: 82, column: 9, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6790, line: 80, column: 74)
!6955 = distinct !DILexicalBlock(scope: !6952, file: !6790, line: 80, column: 7)
!6956 = !DILocation(line: 83, column: 3, scope: !6954)
!6957 = !DILocation(line: 87, column: 10, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6790, line: 85, column: 68)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6790, line: 85, column: 8)
!6960 = distinct !DILexicalBlock(scope: !6955, file: !6790, line: 83, column: 10)
!6961 = !DILocation(line: 88, column: 4, scope: !6958)
!6962 = !DILocation(line: 90, column: 10, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6959, file: !6790, line: 88, column: 11)
!6964 = !DILocation(line: 0, scope: !6959)
!6965 = !DILocation(line: 93, column: 14, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6960, file: !6790, line: 93, column: 8)
!6967 = !DILocation(line: 93, column: 8, scope: !6960)
!6968 = !DILocation(line: 0, scope: !6966)
!6969 = !DILocation(line: 99, column: 9, scope: !6960)
!6970 = !DILocation(line: 0, scope: !6955)
!6971 = !DILocation(line: 102, column: 8, scope: !6952)
!6972 = !DILocation(line: 102, column: 16, scope: !6952)
!6973 = !DILocation(line: 103, column: 2, scope: !6952)
!6974 = !DILocation(line: 108, column: 1, scope: !6926)
!6975 = distinct !DISubprogram(name: "configure_output_attr", scope: !6790, file: !6790, line: 110, type: !6908, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !6976)
!6976 = !{!6977, !6978, !6979}
!6977 = !DILocalVariable(name: "pio", arg: 1, scope: !6975, file: !6790, line: 110, type: !6800)
!6978 = !DILocalVariable(name: "mask", arg: 2, scope: !6975, file: !6790, line: 110, type: !113)
!6979 = !DILocalVariable(name: "flags", arg: 3, scope: !6975, file: !6790, line: 110, type: !113)
!6980 = !DILocation(line: 0, scope: !6975)
!6981 = !DILocation(line: 113, column: 7, scope: !6975)
!6982 = !DILocation(line: 113, column: 16, scope: !6975)
!6983 = !DILocation(line: 114, column: 1, scope: !6975)
!6984 = distinct !DISubprogram(name: "soc_gpio_list_configure", scope: !6790, file: !6790, line: 198, type: !6985, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !6987)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{null, !6793, !32}
!6987 = !{!6988, !6989, !6990}
!6988 = !DILocalVariable(name: "pins", arg: 1, scope: !6984, file: !6790, line: 198, type: !6793)
!6989 = !DILocalVariable(name: "size", arg: 2, scope: !6984, file: !6790, line: 199, type: !32)
!6990 = !DILocalVariable(name: "i", scope: !6991, file: !6790, line: 201, type: !105)
!6991 = distinct !DILexicalBlock(scope: !6984, file: !6790, line: 201, column: 2)
!6992 = !DILocation(line: 0, scope: !6984)
!6993 = !DILocation(line: 0, scope: !6991)
!6994 = !DILocation(line: 201, column: 20, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6991, file: !6790, line: 201, column: 2)
!6996 = !DILocation(line: 201, column: 2, scope: !6991)
!6997 = !DILocation(line: 204, column: 1, scope: !6984)
!6998 = !DILocation(line: 202, column: 23, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6995, file: !6790, line: 201, column: 33)
!7000 = !DILocation(line: 202, column: 3, scope: !6999)
!7001 = !DILocation(line: 201, column: 29, scope: !6995)
!7002 = distinct !{!7002, !6996, !7003}
!7003 = !DILocation(line: 203, column: 2, scope: !6991)
!7004 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7005, file: !7005, line: 14, type: !4243, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !7006)
!7005 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7006 = !{!7007, !7008}
!7007 = !DILocalVariable(name: "fmt", arg: 1, scope: !7004, file: !7005, line: 14, type: !269)
!7008 = !DILocalVariable(name: "ap", scope: !7004, file: !7005, line: 16, type: !7009)
!7009 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3251, line: 99, baseType: !7010)
!7010 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3251, line: 40, baseType: !7011)
!7011 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7005, baseType: !7012)
!7012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7013)
!7013 = !{!7014}
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7012, file: !7005, line: 16, baseType: !104, size: 32)
!7015 = !DILocation(line: 0, scope: !7004)
!7016 = !DILocation(line: 16, column: 2, scope: !7004)
!7017 = !DILocation(line: 16, column: 10, scope: !7004)
!7018 = !DILocation(line: 18, column: 2, scope: !7004)
!7019 = !DILocation(line: 19, column: 2, scope: !7004)
!7020 = !DILocation(line: 20, column: 2, scope: !7004)
!7021 = !DILocation(line: 21, column: 1, scope: !7004)
!7022 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7005, file: !7005, line: 23, type: !7023, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !7025)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{null, !269, !7009}
!7025 = !{!7026, !7027}
!7026 = !DILocalVariable(name: "fmt", arg: 1, scope: !7022, file: !7005, line: 23, type: !269)
!7027 = !DILocalVariable(name: "ap", arg: 2, scope: !7022, file: !7005, line: 23, type: !7009)
!7028 = !DILocation(line: 0, scope: !7022)
!7029 = !DILocation(line: 25, column: 2, scope: !7022)
!7030 = !DILocation(line: 26, column: 1, scope: !7022)
!7031 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7005, file: !7005, line: 52, type: !7032, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !7034)
!7032 = !DISubroutineType(types: !7033)
!7033 = !{null, !105, !13, !111}
!7034 = !{!7035, !7036, !7037, !7038}
!7035 = !DILocalVariable(name: "level", arg: 1, scope: !7031, file: !7005, line: 52, type: !105)
!7036 = !DILocalVariable(name: "data", arg: 2, scope: !7031, file: !7005, line: 52, type: !13)
!7037 = !DILocalVariable(name: "size", arg: 3, scope: !7031, file: !7005, line: 52, type: !111)
!7038 = !DILocalVariable(name: "data_buffer", scope: !7031, file: !7005, line: 54, type: !269)
!7039 = !DILocation(line: 0, scope: !7031)
!7040 = !DILocation(line: 55, column: 14, scope: !7031)
!7041 = !DILocation(line: 55, column: 2, scope: !7031)
!7042 = !DILocation(line: 56, column: 3, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7031, file: !7005, line: 55, column: 20)
!7044 = !DILocation(line: 57, column: 3, scope: !7043)
!7045 = !DILocation(line: 59, column: 7, scope: !7043)
!7046 = distinct !{!7046, !7041, !7047}
!7047 = !DILocation(line: 65, column: 2, scope: !7031)
!7048 = !DILocation(line: 66, column: 1, scope: !7031)
!7049 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !2717, file: !2717, line: 175, type: !2718, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !7050)
!7050 = !{!7051}
!7051 = !DILocalVariable(name: "level", arg: 1, scope: !7049, file: !2717, line: 175, type: !105)
!7052 = !DILocation(line: 0, scope: !7049)
!7053 = !DILocation(line: 177, column: 2, scope: !7049)
!7054 = !DILocation(line: 189, column: 1, scope: !7049)
!7055 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7005, file: !7005, line: 28, type: !7056, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !7058)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{null, !269, !111}
!7058 = !{!7059, !7060, !7061, !7063, !7065}
!7059 = !DILocalVariable(name: "data", arg: 1, scope: !7055, file: !7005, line: 28, type: !269)
!7060 = !DILocalVariable(name: "length", arg: 2, scope: !7055, file: !7005, line: 28, type: !111)
!7061 = !DILocalVariable(name: "i", scope: !7062, file: !7005, line: 30, type: !111)
!7062 = distinct !DILexicalBlock(scope: !7055, file: !7005, line: 30, column: 2)
!7063 = !DILocalVariable(name: "i", scope: !7064, file: !7005, line: 40, type: !111)
!7064 = distinct !DILexicalBlock(scope: !7055, file: !7005, line: 40, column: 2)
!7065 = !DILocalVariable(name: "c", scope: !7066, file: !7005, line: 42, type: !170)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !7005, line: 41, column: 19)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !7005, line: 41, column: 7)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !7005, line: 40, column: 54)
!7069 = distinct !DILexicalBlock(scope: !7064, file: !7005, line: 40, column: 2)
!7070 = !DILocation(line: 0, scope: !7055)
!7071 = !DILocation(line: 0, scope: !7062)
!7072 = !DILocation(line: 30, column: 2, scope: !7062)
!7073 = !DILocation(line: 38, column: 2, scope: !7055)
!7074 = !DILocation(line: 0, scope: !7064)
!7075 = !DILocation(line: 40, column: 2, scope: !7064)
!7076 = !DILocation(line: 31, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !7005, line: 31, column: 7)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !7005, line: 30, column: 54)
!7079 = distinct !DILexicalBlock(scope: !7062, file: !7005, line: 30, column: 2)
!7080 = !DILocation(line: 31, column: 7, scope: !7078)
!7081 = !DILocation(line: 32, column: 35, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !7005, line: 31, column: 19)
!7083 = !DILocation(line: 32, column: 20, scope: !7082)
!7084 = !DILocation(line: 32, column: 4, scope: !7082)
!7085 = !DILocation(line: 33, column: 3, scope: !7082)
!7086 = !DILocation(line: 34, column: 4, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7077, file: !7005, line: 33, column: 10)
!7088 = !DILocation(line: 30, column: 50, scope: !7079)
!7089 = !DILocation(line: 30, column: 24, scope: !7079)
!7090 = distinct !{!7090, !7072, !7091}
!7091 = !DILocation(line: 36, column: 2, scope: !7062)
!7092 = !DILocation(line: 49, column: 2, scope: !7055)
!7093 = !DILocation(line: 50, column: 1, scope: !7055)
!7094 = !DILocation(line: 41, column: 9, scope: !7067)
!7095 = !DILocation(line: 41, column: 7, scope: !7068)
!7096 = !DILocation(line: 42, column: 22, scope: !7066)
!7097 = !DILocation(line: 0, scope: !7066)
!7098 = !DILocation(line: 44, column: 25, scope: !7066)
!7099 = !DILocation(line: 44, column: 17, scope: !7066)
!7100 = !DILocation(line: 44, column: 33, scope: !7066)
!7101 = !DILocation(line: 44, column: 4, scope: !7066)
!7102 = !DILocation(line: 45, column: 3, scope: !7066)
!7103 = !DILocation(line: 46, column: 4, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7067, file: !7005, line: 45, column: 10)
!7105 = !DILocation(line: 40, column: 50, scope: !7069)
!7106 = !DILocation(line: 40, column: 24, scope: !7069)
!7107 = distinct !{!7107, !7075, !7108}
!7108 = !DILocation(line: 48, column: 2, scope: !7064)
!7109 = distinct !DISubprogram(name: "isprint", scope: !5820, file: !5820, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2093, retainedNodes: !7110)
!7110 = !{!7111}
!7111 = !DILocalVariable(name: "c", arg: 1, scope: !7109, file: !5820, line: 37, type: !105)
!7112 = !DILocation(line: 0, scope: !7109)
!7113 = !DILocation(line: 39, column: 38, scope: !7109)
!7114 = !DILocation(line: 39, column: 2, scope: !7109)
!7115 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7116, file: !7116, line: 57, type: !7117, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2096, retainedNodes: !7163)
!7116 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7117 = !DISubroutineType(types: !7118)
!7118 = !{null, !32, !7119}
!7119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7120, size: 32)
!7120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7121)
!7121 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2217, line: 141, baseType: !7122)
!7122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2217, line: 97, size: 256, elements: !7123)
!7123 = !{!7124}
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7122, file: !2217, line: 107, baseType: !7125, size: 256)
!7125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2217, line: 98, size: 256, elements: !7126)
!7126 = !{!7127, !7132, !7137, !7142, !7147, !7152, !7157, !7162}
!7127 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 99, baseType: !7128, size: 32)
!7128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 99, size: 32, elements: !7129)
!7129 = !{!7130, !7131}
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7128, file: !2217, line: 99, baseType: !113, size: 32)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7128, file: !2217, line: 99, baseType: !113, size: 32)
!7132 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 100, baseType: !7133, size: 32, offset: 32)
!7133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 100, size: 32, elements: !7134)
!7134 = !{!7135, !7136}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7133, file: !2217, line: 100, baseType: !113, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7133, file: !2217, line: 100, baseType: !113, size: 32)
!7137 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 101, baseType: !7138, size: 32, offset: 64)
!7138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 101, size: 32, elements: !7139)
!7139 = !{!7140, !7141}
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7138, file: !2217, line: 101, baseType: !113, size: 32)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7138, file: !2217, line: 101, baseType: !113, size: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 102, baseType: !7143, size: 32, offset: 96)
!7143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 102, size: 32, elements: !7144)
!7144 = !{!7145, !7146}
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7143, file: !2217, line: 102, baseType: !113, size: 32)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7143, file: !2217, line: 102, baseType: !113, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 103, baseType: !7148, size: 32, offset: 128)
!7148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 103, size: 32, elements: !7149)
!7149 = !{!7150, !7151}
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7148, file: !2217, line: 103, baseType: !113, size: 32)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7148, file: !2217, line: 103, baseType: !113, size: 32)
!7152 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 104, baseType: !7153, size: 32, offset: 160)
!7153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 104, size: 32, elements: !7154)
!7154 = !{!7155, !7156}
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7153, file: !2217, line: 104, baseType: !113, size: 32)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7153, file: !2217, line: 104, baseType: !113, size: 32)
!7157 = !DIDerivedType(tag: DW_TAG_member, scope: !7125, file: !2217, line: 105, baseType: !7158, size: 32, offset: 192)
!7158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7125, file: !2217, line: 105, size: 32, elements: !7159)
!7159 = !{!7160, !7161}
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7158, file: !2217, line: 105, baseType: !113, size: 32)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7158, file: !2217, line: 105, baseType: !113, size: 32)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7125, file: !2217, line: 106, baseType: !113, size: 32, offset: 224)
!7163 = !{!7164, !7165}
!7164 = !DILocalVariable(name: "reason", arg: 1, scope: !7115, file: !7116, line: 57, type: !32)
!7165 = !DILocalVariable(name: "esf", arg: 2, scope: !7115, file: !7116, line: 57, type: !7119)
!7166 = !DILocation(line: 0, scope: !7115)
!7167 = !DILocation(line: 60, column: 10, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7115, file: !7116, line: 60, column: 6)
!7169 = !DILocation(line: 60, column: 6, scope: !7115)
!7170 = !DILocation(line: 61, column: 3, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7168, file: !7116, line: 60, column: 19)
!7172 = !DILocation(line: 62, column: 2, scope: !7171)
!7173 = !DILocation(line: 63, column: 2, scope: !7115)
!7174 = !DILocation(line: 64, column: 1, scope: !7115)
!7175 = distinct !DISubprogram(name: "esf_dump", scope: !7116, file: !7116, line: 20, type: !7176, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2096, retainedNodes: !7178)
!7176 = !DISubroutineType(types: !7177)
!7177 = !{null, !7119}
!7178 = !{!7179}
!7179 = !DILocalVariable(name: "esf", arg: 1, scope: !7175, file: !7116, line: 20, type: !7119)
!7180 = !DILocation(line: 0, scope: !7175)
!7181 = !DILocation(line: 22, column: 2, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !7116, line: 22, column: 2)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !7116, line: 22, column: 2)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !7116, line: 22, column: 2)
!7185 = distinct !DILexicalBlock(scope: !7175, file: !7116, line: 22, column: 2)
!7186 = !DILocation(line: 24, column: 2, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !7116, line: 24, column: 2)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !7116, line: 24, column: 2)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !7116, line: 24, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7175, file: !7116, line: 24, column: 2)
!7191 = !DILocation(line: 26, column: 2, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !7116, line: 26, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !7116, line: 26, column: 2)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !7116, line: 26, column: 2)
!7195 = distinct !DILexicalBlock(scope: !7175, file: !7116, line: 26, column: 2)
!7196 = !DILocation(line: 53, column: 2, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !7116, line: 53, column: 2)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !7116, line: 53, column: 2)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !7116, line: 53, column: 2)
!7200 = distinct !DILexicalBlock(scope: !7175, file: !7116, line: 53, column: 2)
!7201 = !DILocation(line: 55, column: 1, scope: !7175)
!7202 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7116, file: !7116, line: 82, type: !7203, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2096, retainedNodes: !7218)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{null, !7119, !7205}
!7205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 32)
!7206 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7207)
!7207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7208)
!7208 = !{!7209, !7210, !7211, !7212, !7213, !7214, !7215, !7216, !7217}
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7207, file: !200, line: 26, baseType: !113, size: 32)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7207, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7207, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7207, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7207, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7207, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7207, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7207, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7207, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7218 = !{!7219, !7220, !7221}
!7219 = !DILocalVariable(name: "esf", arg: 1, scope: !7202, file: !7116, line: 82, type: !7119)
!7220 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7202, file: !7116, line: 82, type: !7205)
!7221 = !DILocalVariable(name: "reason", scope: !7202, file: !7116, line: 88, type: !32)
!7222 = !DILocation(line: 0, scope: !7202)
!7223 = !DILocation(line: 88, column: 35, scope: !7202)
!7224 = !DILocation(line: 108, column: 2, scope: !7202)
!7225 = !DILocation(line: 131, column: 1, scope: !7202)
!7226 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7116, file: !7116, line: 133, type: !7227, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2096, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !104}
!7229 = !{!7230, !7231, !7232}
!7230 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7226, file: !7116, line: 133, type: !104)
!7231 = !DILocalVariable(name: "ssf_contents", scope: !7226, file: !7116, line: 135, type: !2011)
!7232 = !DILocalVariable(name: "oops_esf", scope: !7226, file: !7116, line: 136, type: !7121)
!7233 = !DILocation(line: 0, scope: !7226)
!7234 = !DILocation(line: 136, column: 2, scope: !7226)
!7235 = !DILocation(line: 136, column: 15, scope: !7226)
!7236 = !DILocation(line: 139, column: 22, scope: !7226)
!7237 = !DILocation(line: 139, column: 17, scope: !7226)
!7238 = !DILocation(line: 139, column: 20, scope: !7226)
!7239 = !DILocation(line: 141, column: 2, scope: !7226)
!7240 = !DILocation(line: 142, column: 2, scope: !7226)
!7241 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7242, file: !7242, line: 40, type: !6714, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7243)
!7242 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7243 = !{!7244}
!7244 = !DILocalVariable(name: "irq", arg: 1, scope: !7241, file: !7242, line: 40, type: !32)
!7245 = !DILocation(line: 0, scope: !7241)
!7246 = !DILocation(line: 42, column: 2, scope: !7241)
!7247 = !DILocation(line: 43, column: 1, scope: !7241)
!7248 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !696, file: !696, line: 1508, type: !7249, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7251)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{null, !2111}
!7251 = !{!7252}
!7252 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7248, file: !696, line: 1508, type: !2111)
!7253 = !DILocation(line: 0, scope: !7248)
!7254 = !DILocation(line: 1510, column: 23, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7248, file: !696, line: 1510, column: 7)
!7256 = !DILocation(line: 1510, column: 7, scope: !7248)
!7257 = !DILocation(line: 1512, column: 5, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7255, file: !696, line: 1511, column: 3)
!7259 = !{i64 2149088603}
!7260 = !DILocation(line: 1513, column: 81, scope: !7258)
!7261 = !DILocation(line: 1513, column: 60, scope: !7258)
!7262 = !DILocation(line: 1513, column: 34, scope: !7258)
!7263 = !DILocation(line: 1513, column: 5, scope: !7258)
!7264 = !DILocation(line: 1513, column: 43, scope: !7258)
!7265 = !DILocation(line: 1514, column: 5, scope: !7258)
!7266 = !{i64 2149088717}
!7267 = !DILocation(line: 1515, column: 3, scope: !7258)
!7268 = !DILocation(line: 1516, column: 1, scope: !7248)
!7269 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7242, file: !7242, line: 45, type: !6714, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7270)
!7270 = !{!7271}
!7271 = !DILocalVariable(name: "irq", arg: 1, scope: !7269, file: !7242, line: 45, type: !32)
!7272 = !DILocation(line: 0, scope: !7269)
!7273 = !DILocation(line: 47, column: 2, scope: !7269)
!7274 = !DILocation(line: 48, column: 1, scope: !7269)
!7275 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !696, file: !696, line: 1546, type: !7249, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7276)
!7276 = !{!7277}
!7277 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7275, file: !696, line: 1546, type: !2111)
!7278 = !DILocation(line: 0, scope: !7275)
!7279 = !DILocation(line: 1548, column: 23, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7275, file: !696, line: 1548, column: 7)
!7281 = !DILocation(line: 1548, column: 7, scope: !7275)
!7282 = !DILocation(line: 1550, column: 81, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7280, file: !696, line: 1549, column: 3)
!7284 = !DILocation(line: 1550, column: 60, scope: !7283)
!7285 = !DILocation(line: 1550, column: 34, scope: !7283)
!7286 = !DILocation(line: 1550, column: 5, scope: !7283)
!7287 = !DILocation(line: 1550, column: 43, scope: !7283)
!7288 = !DILocation(line: 271, column: 3, scope: !7289, inlinedAt: !7291)
!7289 = distinct !DISubprogram(name: "__DSB", scope: !7290, file: !7290, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !397)
!7290 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7291 = distinct !DILocation(line: 1551, column: 5, scope: !7283)
!7292 = !{i64 1546107}
!7293 = !DILocation(line: 260, column: 3, scope: !7294, inlinedAt: !7295)
!7294 = distinct !DISubprogram(name: "__ISB", scope: !7290, file: !7290, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !397)
!7295 = distinct !DILocation(line: 1552, column: 5, scope: !7283)
!7296 = !{i64 1545824}
!7297 = !DILocation(line: 1553, column: 3, scope: !7283)
!7298 = !DILocation(line: 1554, column: 1, scope: !7275)
!7299 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7242, file: !7242, line: 50, type: !7300, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7302)
!7300 = !DISubroutineType(types: !7301)
!7301 = !{!105, !32}
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "irq", arg: 1, scope: !7299, file: !7242, line: 50, type: !32)
!7304 = !DILocation(line: 0, scope: !7299)
!7305 = !DILocation(line: 52, column: 20, scope: !7299)
!7306 = !DILocation(line: 52, column: 9, scope: !7299)
!7307 = !DILocation(line: 52, column: 41, scope: !7299)
!7308 = !DILocation(line: 52, column: 39, scope: !7299)
!7309 = !DILocation(line: 52, column: 2, scope: !7299)
!7310 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7242, file: !7242, line: 64, type: !7311, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7313)
!7311 = !DISubroutineType(types: !7312)
!7312 = !{null, !32, !32, !113}
!7313 = !{!7314, !7315, !7316}
!7314 = !DILocalVariable(name: "irq", arg: 1, scope: !7310, file: !7242, line: 64, type: !32)
!7315 = !DILocalVariable(name: "prio", arg: 2, scope: !7310, file: !7242, line: 64, type: !32)
!7316 = !DILocalVariable(name: "flags", arg: 3, scope: !7310, file: !7242, line: 64, type: !113)
!7317 = !DILocation(line: 0, scope: !7310)
!7318 = !DILocation(line: 83, column: 8, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7320, file: !7242, line: 82, column: 9)
!7320 = distinct !DILexicalBlock(scope: !7310, file: !7242, line: 76, column: 6)
!7321 = !DILocation(line: 91, column: 2, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !7242, line: 91, column: 2)
!7323 = distinct !DILexicalBlock(scope: !7310, file: !7242, line: 91, column: 2)
!7324 = !DILocation(line: 91, column: 2, scope: !7323)
!7325 = !DILocation(line: 91, column: 2, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7322, file: !7242, line: 91, column: 2)
!7327 = !DILocation(line: 95, column: 2, scope: !7310)
!7328 = !DILocation(line: 96, column: 1, scope: !7310)
!7329 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !696, file: !696, line: 1638, type: !7330, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7332)
!7330 = !DISubroutineType(types: !7331)
!7331 = !{null, !2111, !113}
!7332 = !{!7333, !7334}
!7333 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7329, file: !696, line: 1638, type: !2111)
!7334 = !DILocalVariable(name: "priority", arg: 2, scope: !7329, file: !696, line: 1638, type: !113)
!7335 = !DILocation(line: 0, scope: !7329)
!7336 = !DILocation(line: 0, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7329, file: !696, line: 1640, column: 7)
!7338 = !DILocation(line: 1640, column: 7, scope: !7329)
!7339 = !DILocation(line: 1648, column: 1, scope: !7329)
!7340 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7242, file: !7242, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !7341)
!7341 = !{!7342}
!7342 = !DILocalVariable(name: "unused", arg: 1, scope: !7340, file: !7242, line: 155, type: !13)
!7343 = !DILocation(line: 0, scope: !7340)
!7344 = !DILocation(line: 159, column: 2, scope: !7340)
!7345 = !DILocation(line: 160, column: 1, scope: !7340)
!7346 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7347, file: !7347, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2154, retainedNodes: !397)
!7347 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7348 = !DILocation(line: 89, column: 2, scope: !7346)
!7349 = !DILocation(line: 90, column: 2, scope: !7346)
!7350 = !DILocation(line: 91, column: 1, scope: !7346)
!7351 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7347, file: !7347, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7352 = !DISubprogram(name: "z_arm_int_exit", scope: !7353, file: !7353, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7353 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7354 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7355, file: !7355, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !397)
!7355 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7356 = !DILocation(line: 258, column: 2, scope: !7354)
!7357 = !DILocation(line: 262, column: 2, scope: !7354)
!7358 = !DILocation(line: 263, column: 2, scope: !7354)
!7359 = !DILocation(line: 267, column: 2, scope: !7354)
!7360 = !DILocation(line: 268, column: 2, scope: !7354)
!7361 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7355, file: !7355, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !397)
!7362 = !DILocation(line: 55, column: 12, scope: !7361)
!7363 = !DILocation(line: 271, column: 3, scope: !7364, inlinedAt: !7365)
!7364 = distinct !DISubprogram(name: "__DSB", scope: !7290, file: !7290, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !397)
!7365 = distinct !DILocation(line: 56, column: 2, scope: !7361)
!7366 = !{i64 1544778}
!7367 = !DILocation(line: 260, column: 3, scope: !7368, inlinedAt: !7369)
!7368 = distinct !DISubprogram(name: "__ISB", scope: !7290, file: !7290, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !397)
!7369 = distinct !DILocation(line: 57, column: 2, scope: !7361)
!7370 = !{i64 1544495}
!7371 = !DILocation(line: 58, column: 1, scope: !7361)
!7372 = distinct !DISubprogram(name: "arch_swap", scope: !7373, file: !7373, line: 33, type: !7300, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7374)
!7373 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7374 = !{!7375}
!7375 = !DILocalVariable(name: "key", arg: 1, scope: !7372, file: !7373, line: 33, type: !32)
!7376 = !DILocation(line: 0, scope: !7372)
!7377 = !DILocation(line: 36, column: 2, scope: !7372)
!7378 = !DILocation(line: 36, column: 17, scope: !7372)
!7379 = !DILocation(line: 36, column: 25, scope: !7372)
!7380 = !DILocation(line: 37, column: 37, scope: !7372)
!7381 = !DILocation(line: 37, column: 17, scope: !7372)
!7382 = !DILocation(line: 37, column: 35, scope: !7372)
!7383 = !DILocation(line: 41, column: 12, scope: !7372)
!7384 = !DILocalVariable(name: "key", arg: 1, scope: !7385, file: !6640, line: 84, type: !32)
!7385 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2184, retainedNodes: !7386)
!7386 = !{!7384}
!7387 = !DILocation(line: 0, scope: !7385, inlinedAt: !7388)
!7388 = distinct !DILocation(line: 44, column: 2, scope: !7372)
!7389 = !DILocation(line: 95, column: 2, scope: !7385, inlinedAt: !7388)
!7390 = !{i64 1323453}
!7391 = !DILocation(line: 53, column: 9, scope: !7372)
!7392 = !DILocation(line: 53, column: 24, scope: !7372)
!7393 = !DILocation(line: 53, column: 2, scope: !7372)
!7394 = distinct !DISubprogram(name: "arch_new_thread", scope: !7395, file: !7395, line: 56, type: !7396, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !7505)
!7395 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7396 = !DISubroutineType(types: !7397)
!7397 = !{null, !7398, !7500, !102, !254, !104, !104, !104}
!7398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7399, size: 32)
!7399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7400)
!7400 = !{!7401, !7459, !7471, !7472, !7473, !7474, !7480, !7495}
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7399, file: !127, line: 247, baseType: !7402, size: 384)
!7402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7403)
!7403 = !{!7404, !7428, !7435, !7436, !7437, !7446, !7447, !7448}
!7404 = !DIDerivedType(tag: DW_TAG_member, scope: !7402, file: !127, line: 60, baseType: !7405, size: 64)
!7405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7402, file: !127, line: 60, size: 64, elements: !7406)
!7406 = !{!7407, !7422}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7405, file: !127, line: 61, baseType: !7408, size: 64)
!7408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7409)
!7409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7410)
!7410 = !{!7411, !7417}
!7411 = !DIDerivedType(tag: DW_TAG_member, scope: !7409, file: !137, line: 38, baseType: !7412, size: 32)
!7412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7409, file: !137, line: 38, size: 32, elements: !7413)
!7413 = !{!7414, !7416}
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7412, file: !137, line: 39, baseType: !7415, size: 32)
!7415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7409, size: 32)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7412, file: !137, line: 40, baseType: !7415, size: 32)
!7417 = !DIDerivedType(tag: DW_TAG_member, scope: !7409, file: !137, line: 42, baseType: !7418, size: 32, offset: 32)
!7418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7409, file: !137, line: 42, size: 32, elements: !7419)
!7419 = !{!7420, !7421}
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7418, file: !137, line: 43, baseType: !7415, size: 32)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7418, file: !137, line: 44, baseType: !7415, size: 32)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7405, file: !127, line: 62, baseType: !7423, size: 64)
!7423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7424)
!7424 = !{!7425}
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7423, file: !153, line: 50, baseType: !7426, size: 64)
!7426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7427, size: 64, elements: !158)
!7427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7423, size: 32)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7402, file: !127, line: 68, baseType: !7429, size: 32, offset: 64)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 32)
!7430 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7431)
!7431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7432)
!7432 = !{!7433}
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7431, file: !163, line: 232, baseType: !7434, size: 64)
!7434 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7409)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7402, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7402, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7437 = !DIDerivedType(tag: DW_TAG_member, scope: !7402, file: !127, line: 90, baseType: !7438, size: 16, offset: 112)
!7438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7402, file: !127, line: 90, size: 16, elements: !7439)
!7439 = !{!7440, !7445}
!7440 = !DIDerivedType(tag: DW_TAG_member, scope: !7438, file: !127, line: 91, baseType: !7441, size: 16)
!7441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7438, file: !127, line: 91, size: 16, elements: !7442)
!7442 = !{!7443, !7444}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7441, file: !127, line: 96, baseType: !179, size: 8)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7441, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7438, file: !127, line: 100, baseType: !183, size: 16)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7402, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7402, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7402, file: !127, line: 131, baseType: !7449, size: 192, offset: 192)
!7449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7450)
!7450 = !{!7451, !7452, !7458}
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7449, file: !163, line: 245, baseType: !7408, size: 64)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7449, file: !163, line: 246, baseType: !7453, size: 32, offset: 64)
!7453 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7454)
!7454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7455, size: 32)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{null, !7457}
!7457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7449, size: 32)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7449, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7399, file: !127, line: 250, baseType: !7460, size: 288, offset: 384)
!7460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7461)
!7461 = !{!7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470}
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7460, file: !200, line: 26, baseType: !113, size: 32)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7460, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7460, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7460, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7460, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7460, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7460, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7460, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7460, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7399, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7399, file: !127, line: 256, baseType: !7430, size: 64, offset: 704)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7399, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7399, file: !127, line: 300, baseType: !7475, size: 96, offset: 800)
!7475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !7476)
!7476 = !{!7477, !7478, !7479}
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7475, file: !127, line: 153, baseType: !22, size: 32)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7475, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7475, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7399, file: !127, line: 325, baseType: !7481, size: 32, offset: 896)
!7481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7482, size: 32)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !7483)
!7483 = !{!7484, !7490, !7491}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7482, file: !122, line: 5074, baseType: !7485, size: 96)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !7486)
!7486 = !{!7487, !7488, !7489}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7485, file: !226, line: 57, baseType: !229, size: 32)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7485, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7485, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7482, file: !122, line: 5075, baseType: !7430, size: 64, offset: 96)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7482, file: !122, line: 5076, baseType: !7492, size: 32, offset: 160)
!7492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !7493)
!7493 = !{!7494}
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7492, file: !236, line: 52, baseType: !22, size: 32)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7399, file: !127, line: 343, baseType: !7496, size: 64, offset: 928)
!7496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !7497)
!7497 = !{!7498, !7499}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7496, file: !200, line: 63, baseType: !113, size: 32)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7496, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!7500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7501, size: 32)
!7501 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !7502)
!7502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !7503)
!7503 = !{!7504}
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7502, file: !249, line: 48, baseType: !103, size: 8)
!7505 = !{!7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513}
!7506 = !DILocalVariable(name: "thread", arg: 1, scope: !7394, file: !7395, line: 56, type: !7398)
!7507 = !DILocalVariable(name: "stack", arg: 2, scope: !7394, file: !7395, line: 56, type: !7500)
!7508 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7394, file: !7395, line: 57, type: !102)
!7509 = !DILocalVariable(name: "entry", arg: 4, scope: !7394, file: !7395, line: 57, type: !254)
!7510 = !DILocalVariable(name: "p1", arg: 5, scope: !7394, file: !7395, line: 58, type: !104)
!7511 = !DILocalVariable(name: "p2", arg: 6, scope: !7394, file: !7395, line: 58, type: !104)
!7512 = !DILocalVariable(name: "p3", arg: 7, scope: !7394, file: !7395, line: 58, type: !104)
!7513 = !DILocalVariable(name: "iframe", scope: !7394, file: !7395, line: 60, type: !2215)
!7514 = !DILocation(line: 0, scope: !7394)
!7515 = !DILocation(line: 85, column: 11, scope: !7394)
!7516 = !DILocation(line: 93, column: 10, scope: !7394)
!7517 = !DILocation(line: 98, column: 13, scope: !7394)
!7518 = !DILocation(line: 100, column: 15, scope: !7394)
!7519 = !DILocation(line: 100, column: 10, scope: !7394)
!7520 = !DILocation(line: 100, column: 13, scope: !7394)
!7521 = !DILocation(line: 101, column: 15, scope: !7394)
!7522 = !DILocation(line: 101, column: 10, scope: !7394)
!7523 = !DILocation(line: 101, column: 13, scope: !7394)
!7524 = !DILocation(line: 102, column: 15, scope: !7394)
!7525 = !DILocation(line: 102, column: 10, scope: !7394)
!7526 = !DILocation(line: 102, column: 13, scope: !7394)
!7527 = !DILocation(line: 103, column: 15, scope: !7394)
!7528 = !DILocation(line: 103, column: 10, scope: !7394)
!7529 = !DILocation(line: 103, column: 13, scope: !7394)
!7530 = !DILocation(line: 106, column: 10, scope: !7394)
!7531 = !DILocation(line: 106, column: 15, scope: !7394)
!7532 = !DILocation(line: 122, column: 29, scope: !7394)
!7533 = !DILocation(line: 122, column: 23, scope: !7394)
!7534 = !DILocation(line: 122, column: 27, scope: !7394)
!7535 = !DILocation(line: 123, column: 15, scope: !7394)
!7536 = !DILocation(line: 123, column: 23, scope: !7394)
!7537 = !DILocation(line: 143, column: 1, scope: !7394)
!7538 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7395, file: !7395, line: 385, type: !7539, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !7541)
!7539 = !DISubroutineType(types: !7540)
!7540 = !{!113, !1359, !1359}
!7541 = !{!7542, !7543, !7544, !7547}
!7542 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7538, file: !7395, line: 385, type: !1359)
!7543 = !DILocalVariable(name: "psp", arg: 2, scope: !7538, file: !7395, line: 385, type: !1359)
!7544 = !DILocalVariable(name: "thread", scope: !7538, file: !7395, line: 388, type: !7545)
!7545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7546, size: 32)
!7546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7399)
!7547 = !DILocalVariable(name: "guard_len", scope: !7538, file: !7395, line: 405, type: !113)
!7548 = !DILocation(line: 0, scope: !7538)
!7549 = !DILocation(line: 388, column: 34, scope: !7538)
!7550 = !DILocation(line: 390, column: 13, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7538, file: !7395, line: 390, column: 6)
!7552 = !DILocation(line: 390, column: 6, scope: !7538)
!7553 = !DILocation(line: 438, column: 6, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7538, file: !7395, line: 438, column: 6)
!7555 = !DILocation(line: 438, column: 6, scope: !7538)
!7556 = !DILocation(line: 442, column: 3, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7554, file: !7395, line: 440, column: 22)
!7558 = !DILocation(line: 455, column: 1, scope: !7538)
!7559 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7395, file: !7395, line: 530, type: !7560, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2212, retainedNodes: !7562)
!7560 = !DISubroutineType(types: !7561)
!7561 = !{null, !7398, !102, !254}
!7562 = !{!7563, !7564, !7565}
!7563 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7559, file: !7395, line: 530, type: !7398)
!7564 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7559, file: !7395, line: 530, type: !102)
!7565 = !DILocalVariable(name: "_main", arg: 3, scope: !7559, file: !7395, line: 531, type: !254)
!7566 = !DILocation(line: 0, scope: !7559)
!7567 = !DILocation(line: 535, column: 11, scope: !7559)
!7568 = !DILocation(line: 560, column: 2, scope: !7559)
!7569 = !DILocation(line: 576, column: 2, scope: !7559)
!7570 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7571 = !DILocation(line: 603, column: 2, scope: !7559)
!7572 = distinct !DISubprogram(name: "z_arm_fault", scope: !7573, file: !7573, line: 1036, type: !7574, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7589)
!7573 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7574 = !DISubroutineType(types: !7575)
!7575 = !{null, !113, !113, !113, !7576}
!7576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7577, size: 32)
!7577 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7578)
!7578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7579)
!7579 = !{!7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7588}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7578, file: !200, line: 26, baseType: !113, size: 32)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7578, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7578, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7578, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7578, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7578, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7578, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7578, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7578, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7589 = !{!7590, !7591, !7592, !7593, !7594, !7595, !7596, !7597, !7598, !7599}
!7590 = !DILocalVariable(name: "msp", arg: 1, scope: !7572, file: !7573, line: 1036, type: !113)
!7591 = !DILocalVariable(name: "psp", arg: 2, scope: !7572, file: !7573, line: 1036, type: !113)
!7592 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7572, file: !7573, line: 1036, type: !113)
!7593 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7572, file: !7573, line: 1037, type: !7576)
!7594 = !DILocalVariable(name: "reason", scope: !7572, file: !7573, line: 1039, type: !113)
!7595 = !DILocalVariable(name: "fault", scope: !7572, file: !7573, line: 1040, type: !105)
!7596 = !DILocalVariable(name: "recoverable", scope: !7572, file: !7573, line: 1041, type: !540)
!7597 = !DILocalVariable(name: "nested_exc", scope: !7572, file: !7573, line: 1041, type: !540)
!7598 = !DILocalVariable(name: "esf", scope: !7572, file: !7573, line: 1042, type: !2283)
!7599 = !DILocalVariable(name: "esf_copy", scope: !7572, file: !7573, line: 1047, type: !2284)
!7600 = !DILocation(line: 0, scope: !7572)
!7601 = !DILocation(line: 1040, column: 19, scope: !7572)
!7602 = !DILocation(line: 1041, column: 2, scope: !7572)
!7603 = !DILocation(line: 1047, column: 2, scope: !7572)
!7604 = !DILocation(line: 1047, column: 15, scope: !7572)
!7605 = !DILocalVariable(name: "key", arg: 1, scope: !7606, file: !6640, line: 84, type: !32)
!7606 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7607)
!7607 = !{!7605}
!7608 = !DILocation(line: 0, scope: !7606, inlinedAt: !7609)
!7609 = distinct !DILocation(line: 1050, column: 2, scope: !7572)
!7610 = !DILocation(line: 95, column: 2, scope: !7606, inlinedAt: !7609)
!7611 = !{i64 1356697}
!7612 = !DILocation(line: 1055, column: 9, scope: !7572)
!7613 = !DILocation(line: 1056, column: 2, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !7573, line: 1056, column: 2)
!7615 = distinct !DILexicalBlock(scope: !7572, file: !7573, line: 1056, column: 2)
!7616 = !DILocation(line: 1056, column: 2, scope: !7615)
!7617 = !DILocation(line: 1056, column: 2, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7614, file: !7573, line: 1056, column: 2)
!7619 = !DILocation(line: 1040, column: 24, scope: !7572)
!7620 = !DILocation(line: 1063, column: 11, scope: !7572)
!7621 = !DILocation(line: 1064, column: 6, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7572, file: !7573, line: 1064, column: 6)
!7623 = !{i8 0, i8 2}
!7624 = !DILocation(line: 1064, column: 6, scope: !7572)
!7625 = !DILocation(line: 1070, column: 20, scope: !7572)
!7626 = !DILocation(line: 1070, column: 2, scope: !7572)
!7627 = !DILocation(line: 1089, column: 6, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7572, file: !7573, line: 1089, column: 6)
!7629 = !DILocation(line: 0, scope: !7628)
!7630 = !DILocation(line: 1089, column: 6, scope: !7572)
!7631 = !DILocation(line: 1090, column: 28, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7633, file: !7573, line: 1090, column: 7)
!7633 = distinct !DILexicalBlock(scope: !7628, file: !7573, line: 1089, column: 18)
!7634 = !DILocation(line: 1090, column: 44, scope: !7632)
!7635 = !DILocation(line: 1090, column: 7, scope: !7633)
!7636 = !DILocation(line: 1091, column: 24, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !7573, line: 1090, column: 50)
!7638 = !DILocation(line: 1092, column: 3, scope: !7637)
!7639 = !DILocation(line: 1094, column: 23, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7628, file: !7573, line: 1093, column: 9)
!7641 = !DILocation(line: 1097, column: 2, scope: !7572)
!7642 = !DILocation(line: 1098, column: 1, scope: !7572)
!7643 = distinct !DISubprogram(name: "get_esf", scope: !7573, file: !7573, line: 894, type: !7644, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7647)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!2283, !113, !113, !113, !7646}
!7646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 32)
!7647 = !{!7648, !7649, !7650, !7651, !7652, !7653}
!7648 = !DILocalVariable(name: "msp", arg: 1, scope: !7643, file: !7573, line: 894, type: !113)
!7649 = !DILocalVariable(name: "psp", arg: 2, scope: !7643, file: !7573, line: 894, type: !113)
!7650 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7643, file: !7573, line: 894, type: !113)
!7651 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7643, file: !7573, line: 895, type: !7646)
!7652 = !DILocalVariable(name: "alternative_state_exc", scope: !7643, file: !7573, line: 897, type: !540)
!7653 = !DILocalVariable(name: "ptr_esf", scope: !7643, file: !7573, line: 898, type: !2283)
!7654 = !DILocation(line: 0, scope: !7643)
!7655 = !DILocation(line: 900, column: 14, scope: !7643)
!7656 = !DILocation(line: 902, column: 49, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7643, file: !7573, line: 902, column: 6)
!7658 = !DILocation(line: 902, column: 6, scope: !7643)
!7659 = !DILocation(line: 983, column: 44, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7643, file: !7573, line: 983, column: 6)
!7661 = !DILocation(line: 985, column: 3, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !7573, line: 985, column: 3)
!7663 = distinct !DILexicalBlock(scope: !7664, file: !7573, line: 985, column: 3)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !7573, line: 985, column: 3)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !7573, line: 985, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7660, file: !7573, line: 984, column: 47)
!7667 = !DILocation(line: 986, column: 3, scope: !7666)
!7668 = !DILocation(line: 983, column: 18, scope: !7660)
!7669 = !DILocation(line: 991, column: 7, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7671, file: !7573, line: 990, column: 30)
!7671 = distinct !DILexicalBlock(scope: !7643, file: !7573, line: 990, column: 6)
!7672 = !DILocation(line: 998, column: 16, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !7573, line: 995, column: 10)
!7674 = distinct !DILexicalBlock(scope: !7670, file: !7573, line: 991, column: 7)
!7675 = !DILocation(line: 1002, column: 2, scope: !7643)
!7676 = !DILocation(line: 1003, column: 1, scope: !7643)
!7677 = distinct !DISubprogram(name: "fault_handle", scope: !7573, file: !7573, line: 786, type: !7678, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7680)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!113, !2283, !105, !7646}
!7680 = !{!7681, !7682, !7683, !7684}
!7681 = !DILocalVariable(name: "esf", arg: 1, scope: !7677, file: !7573, line: 786, type: !2283)
!7682 = !DILocalVariable(name: "fault", arg: 2, scope: !7677, file: !7573, line: 786, type: !105)
!7683 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7677, file: !7573, line: 786, type: !7646)
!7684 = !DILocalVariable(name: "reason", scope: !7677, file: !7573, line: 788, type: !113)
!7685 = !DILocation(line: 0, scope: !7677)
!7686 = !DILocation(line: 790, column: 15, scope: !7677)
!7687 = !DILocation(line: 792, column: 2, scope: !7677)
!7688 = !DILocation(line: 794, column: 12, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7677, file: !7573, line: 792, column: 17)
!7690 = !DILocation(line: 795, column: 3, scope: !7689)
!7691 = !DILocation(line: 800, column: 12, scope: !7689)
!7692 = !DILocation(line: 801, column: 3, scope: !7689)
!7693 = !DILocation(line: 803, column: 12, scope: !7689)
!7694 = !DILocation(line: 804, column: 3, scope: !7689)
!7695 = !DILocation(line: 806, column: 12, scope: !7689)
!7696 = !DILocation(line: 807, column: 3, scope: !7689)
!7697 = !DILocation(line: 814, column: 3, scope: !7689)
!7698 = !DILocation(line: 815, column: 3, scope: !7689)
!7699 = !DILocation(line: 820, column: 3, scope: !7689)
!7700 = !DILocation(line: 821, column: 3, scope: !7689)
!7701 = !DILocation(line: 829, column: 2, scope: !7677)
!7702 = distinct !DISubprogram(name: "hard_fault", scope: !7573, file: !7573, line: 709, type: !7703, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7705)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!113, !2283, !7646}
!7705 = !{!7706, !7707, !7708}
!7706 = !DILocalVariable(name: "esf", arg: 1, scope: !7702, file: !7573, line: 709, type: !2283)
!7707 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7702, file: !7573, line: 709, type: !7646)
!7708 = !DILocalVariable(name: "reason", scope: !7702, file: !7573, line: 711, type: !113)
!7709 = !DILocation(line: 0, scope: !7702)
!7710 = !DILocation(line: 713, column: 2, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !7573, line: 713, column: 2)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !7573, line: 713, column: 2)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !7573, line: 713, column: 2)
!7714 = distinct !DILexicalBlock(scope: !7702, file: !7573, line: 713, column: 2)
!7715 = !DILocation(line: 732, column: 15, scope: !7702)
!7716 = !DILocation(line: 734, column: 12, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7702, file: !7573, line: 734, column: 6)
!7718 = !DILocation(line: 734, column: 17, scope: !7717)
!7719 = !DILocation(line: 734, column: 41, scope: !7717)
!7720 = !DILocation(line: 734, column: 6, scope: !7702)
!7721 = !DILocation(line: 735, column: 3, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !7573, line: 735, column: 3)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7573, line: 735, column: 3)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7573, line: 735, column: 3)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !7573, line: 735, column: 3)
!7726 = distinct !DILexicalBlock(scope: !7717, file: !7573, line: 734, column: 47)
!7727 = !DILocation(line: 736, column: 2, scope: !7726)
!7728 = !DILocation(line: 736, column: 19, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7717, file: !7573, line: 736, column: 13)
!7730 = !DILocation(line: 736, column: 49, scope: !7729)
!7731 = !DILocation(line: 736, column: 13, scope: !7717)
!7732 = !DILocation(line: 737, column: 3, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !7573, line: 737, column: 3)
!7734 = distinct !DILexicalBlock(scope: !7735, file: !7573, line: 737, column: 3)
!7735 = distinct !DILexicalBlock(scope: !7736, file: !7573, line: 737, column: 3)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7573, line: 737, column: 3)
!7737 = distinct !DILexicalBlock(scope: !7729, file: !7573, line: 736, column: 55)
!7738 = !DILocation(line: 738, column: 2, scope: !7737)
!7739 = !DILocation(line: 738, column: 19, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7729, file: !7573, line: 738, column: 13)
!7741 = !DILocation(line: 738, column: 24, scope: !7740)
!7742 = !DILocation(line: 738, column: 47, scope: !7740)
!7743 = !DILocation(line: 738, column: 13, scope: !7729)
!7744 = !DILocation(line: 739, column: 3, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7573, line: 739, column: 3)
!7746 = distinct !DILexicalBlock(scope: !7747, file: !7573, line: 739, column: 3)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !7573, line: 739, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7749, file: !7573, line: 739, column: 3)
!7749 = distinct !DILexicalBlock(scope: !7740, file: !7573, line: 738, column: 53)
!7750 = !DILocation(line: 740, column: 7, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7749, file: !7573, line: 740, column: 7)
!7752 = !DILocation(line: 740, column: 7, scope: !7749)
!7753 = !DILocation(line: 741, column: 4, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !7573, line: 741, column: 4)
!7755 = distinct !DILexicalBlock(scope: !7756, file: !7573, line: 741, column: 4)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !7573, line: 741, column: 4)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !7573, line: 741, column: 4)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !7573, line: 740, column: 38)
!7759 = !DILocation(line: 742, column: 24, scope: !7758)
!7760 = !DILocation(line: 743, column: 3, scope: !7758)
!7761 = !DILocation(line: 743, column: 20, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7751, file: !7573, line: 743, column: 14)
!7763 = !DILocation(line: 743, column: 25, scope: !7762)
!7764 = !DILocation(line: 743, column: 52, scope: !7762)
!7765 = !DILocation(line: 743, column: 14, scope: !7751)
!7766 = !DILocation(line: 744, column: 13, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7762, file: !7573, line: 743, column: 58)
!7768 = !DILocation(line: 745, column: 3, scope: !7767)
!7769 = !DILocation(line: 745, column: 20, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7762, file: !7573, line: 745, column: 14)
!7771 = !DILocation(line: 745, column: 25, scope: !7770)
!7772 = !DILocation(line: 745, column: 52, scope: !7770)
!7773 = !DILocation(line: 745, column: 14, scope: !7762)
!7774 = !DILocation(line: 746, column: 13, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7770, file: !7573, line: 745, column: 58)
!7776 = !DILocation(line: 747, column: 3, scope: !7775)
!7777 = !DILocation(line: 747, column: 20, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7770, file: !7573, line: 747, column: 14)
!7779 = !DILocation(line: 747, column: 52, scope: !7778)
!7780 = !DILocation(line: 747, column: 14, scope: !7770)
!7781 = !DILocation(line: 748, column: 13, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7778, file: !7573, line: 747, column: 58)
!7783 = !DILocation(line: 754, column: 4, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7785, file: !7573, line: 754, column: 4)
!7785 = distinct !DILexicalBlock(scope: !7786, file: !7573, line: 754, column: 4)
!7786 = distinct !DILexicalBlock(scope: !7787, file: !7573, line: 754, column: 4)
!7787 = distinct !DILexicalBlock(scope: !7778, file: !7573, line: 753, column: 10)
!7788 = !DILocation(line: 758, column: 3, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7573, line: 758, column: 3)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !7573, line: 758, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7792, file: !7573, line: 758, column: 3)
!7792 = distinct !DILexicalBlock(scope: !7740, file: !7573, line: 757, column: 9)
!7793 = !DILocation(line: 766, column: 2, scope: !7702)
!7794 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7573, file: !7573, line: 229, type: !7678, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7795)
!7795 = !{!7796, !7797, !7798, !7799, !7800, !7801, !7804}
!7796 = !DILocalVariable(name: "esf", arg: 1, scope: !7794, file: !7573, line: 229, type: !2283)
!7797 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7794, file: !7573, line: 229, type: !105)
!7798 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7794, file: !7573, line: 230, type: !7646)
!7799 = !DILocalVariable(name: "reason", scope: !7794, file: !7573, line: 232, type: !113)
!7800 = !DILocalVariable(name: "mmfar", scope: !7794, file: !7573, line: 233, type: !113)
!7801 = !DILocalVariable(name: "temp", scope: !7802, file: !7573, line: 254, type: !113)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7573, line: 244, column: 48)
!7803 = distinct !DILexicalBlock(scope: !7794, file: !7573, line: 244, column: 6)
!7804 = !DILocalVariable(name: "min_stack_ptr", scope: !7805, file: !7573, line: 309, type: !113)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !7573, line: 308, column: 43)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !7573, line: 308, column: 7)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !7573, line: 289, column: 40)
!7808 = distinct !DILexicalBlock(scope: !7794, file: !7573, line: 288, column: 6)
!7809 = !DILocation(line: 0, scope: !7794)
!7810 = !DILocation(line: 235, column: 2, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !7573, line: 235, column: 2)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7573, line: 235, column: 2)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !7573, line: 235, column: 2)
!7814 = distinct !DILexicalBlock(scope: !7794, file: !7573, line: 235, column: 2)
!7815 = !DILocation(line: 237, column: 12, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7794, file: !7573, line: 237, column: 6)
!7817 = !DILocation(line: 237, column: 17, scope: !7816)
!7818 = !DILocation(line: 237, column: 41, scope: !7816)
!7819 = !DILocation(line: 237, column: 6, scope: !7794)
!7820 = !DILocation(line: 238, column: 3, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !7573, line: 238, column: 3)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7573, line: 238, column: 3)
!7823 = distinct !DILexicalBlock(scope: !7824, file: !7573, line: 238, column: 3)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !7573, line: 238, column: 3)
!7825 = distinct !DILexicalBlock(scope: !7816, file: !7573, line: 237, column: 47)
!7826 = !DILocation(line: 240, column: 2, scope: !7825)
!7827 = !DILocation(line: 241, column: 12, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7794, file: !7573, line: 241, column: 6)
!7829 = !DILocation(line: 241, column: 17, scope: !7828)
!7830 = !DILocation(line: 241, column: 43, scope: !7828)
!7831 = !DILocation(line: 241, column: 6, scope: !7794)
!7832 = !DILocation(line: 242, column: 3, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !7573, line: 242, column: 3)
!7834 = distinct !DILexicalBlock(scope: !7835, file: !7573, line: 242, column: 3)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !7573, line: 242, column: 3)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !7573, line: 242, column: 3)
!7837 = distinct !DILexicalBlock(scope: !7828, file: !7573, line: 241, column: 49)
!7838 = !DILocation(line: 243, column: 2, scope: !7837)
!7839 = !DILocation(line: 244, column: 12, scope: !7803)
!7840 = !DILocation(line: 244, column: 17, scope: !7803)
!7841 = !DILocation(line: 244, column: 42, scope: !7803)
!7842 = !DILocation(line: 244, column: 6, scope: !7794)
!7843 = !DILocation(line: 245, column: 3, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7845, file: !7573, line: 245, column: 3)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7573, line: 245, column: 3)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !7573, line: 245, column: 3)
!7847 = distinct !DILexicalBlock(scope: !7802, file: !7573, line: 245, column: 3)
!7848 = !DILocation(line: 254, column: 24, scope: !7802)
!7849 = !DILocation(line: 0, scope: !7802)
!7850 = !DILocation(line: 256, column: 13, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7802, file: !7573, line: 256, column: 7)
!7852 = !DILocation(line: 256, column: 18, scope: !7851)
!7853 = !DILocation(line: 256, column: 44, scope: !7851)
!7854 = !DILocation(line: 256, column: 7, scope: !7802)
!7855 = !DILocation(line: 258, column: 4, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7573, line: 258, column: 4)
!7857 = distinct !DILexicalBlock(scope: !7858, file: !7573, line: 258, column: 4)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !7573, line: 258, column: 4)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !7573, line: 258, column: 4)
!7860 = distinct !DILexicalBlock(scope: !7851, file: !7573, line: 256, column: 50)
!7861 = !DILocation(line: 259, column: 24, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7860, file: !7573, line: 259, column: 8)
!7863 = !DILocation(line: 259, column: 8, scope: !7860)
!7864 = !DILocation(line: 261, column: 15, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7862, file: !7573, line: 259, column: 30)
!7866 = !DILocation(line: 262, column: 4, scope: !7865)
!7867 = !DILocation(line: 265, column: 12, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7794, file: !7573, line: 265, column: 6)
!7869 = !DILocation(line: 265, column: 17, scope: !7868)
!7870 = !DILocation(line: 265, column: 42, scope: !7868)
!7871 = !DILocation(line: 265, column: 6, scope: !7794)
!7872 = !DILocation(line: 266, column: 3, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !7573, line: 266, column: 3)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !7573, line: 266, column: 3)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !7573, line: 266, column: 3)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !7573, line: 266, column: 3)
!7877 = distinct !DILexicalBlock(scope: !7868, file: !7573, line: 265, column: 48)
!7878 = !DILocation(line: 267, column: 2, scope: !7877)
!7879 = !DILocation(line: 288, column: 12, scope: !7808)
!7880 = !DILocation(line: 288, column: 17, scope: !7808)
!7881 = !DILocation(line: 288, column: 41, scope: !7808)
!7882 = !DILocation(line: 289, column: 9, scope: !7808)
!7883 = !DILocation(line: 289, column: 14, scope: !7808)
!7884 = !DILocation(line: 288, column: 6, scope: !7794)
!7885 = !DILocation(line: 308, column: 12, scope: !7806)
!7886 = !DILocation(line: 308, column: 17, scope: !7806)
!7887 = !DILocation(line: 308, column: 7, scope: !7807)
!7888 = !DILocation(line: 310, column: 6, scope: !7805)
!7889 = !DILocation(line: 309, column: 29, scope: !7805)
!7890 = !DILocation(line: 0, scope: !7805)
!7891 = !DILocation(line: 312, column: 8, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7805, file: !7573, line: 312, column: 8)
!7893 = !DILocation(line: 312, column: 8, scope: !7805)
!7894 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7895, file: !7290, line: 1099, type: !113)
!7895 = distinct !DISubprogram(name: "__set_PSP", scope: !7290, file: !7290, line: 1099, type: !6724, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7896)
!7896 = !{!7894}
!7897 = !DILocation(line: 0, scope: !7895, inlinedAt: !7898)
!7898 = distinct !DILocation(line: 338, column: 5, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7892, file: !7573, line: 312, column: 23)
!7900 = !DILocation(line: 1101, column: 3, scope: !7895, inlinedAt: !7898)
!7901 = !{i64 1595747}
!7902 = !DILocation(line: 341, column: 4, scope: !7899)
!7903 = !DILocation(line: 342, column: 5, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !7573, line: 342, column: 5)
!7905 = distinct !DILexicalBlock(scope: !7906, file: !7573, line: 342, column: 5)
!7906 = distinct !DILexicalBlock(scope: !7892, file: !7573, line: 341, column: 11)
!7907 = !DILocation(line: 342, column: 5, scope: !7905)
!7908 = !DILocation(line: 342, column: 5, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7904, file: !7573, line: 342, column: 5)
!7910 = !DILocation(line: 366, column: 12, scope: !7794)
!7911 = !DILocation(line: 369, column: 15, scope: !7794)
!7912 = !DILocation(line: 371, column: 2, scope: !7794)
!7913 = distinct !DISubprogram(name: "bus_fault", scope: !7573, file: !7573, line: 383, type: !7914, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !7916)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{!105, !2283, !105, !7646}
!7916 = !{!7917, !7918, !7919, !7920, !7921}
!7917 = !DILocalVariable(name: "esf", arg: 1, scope: !7913, file: !7573, line: 383, type: !2283)
!7918 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7913, file: !7573, line: 383, type: !105)
!7919 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7913, file: !7573, line: 383, type: !7646)
!7920 = !DILocalVariable(name: "reason", scope: !7913, file: !7573, line: 385, type: !113)
!7921 = !DILocalVariable(name: "bfar", scope: !7922, file: !7573, line: 405, type: !113)
!7922 = distinct !DILexicalBlock(scope: !7923, file: !7573, line: 395, column: 42)
!7923 = distinct !DILexicalBlock(scope: !7913, file: !7573, line: 395, column: 6)
!7924 = !DILocation(line: 0, scope: !7913)
!7925 = !DILocation(line: 387, column: 2, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !7573, line: 387, column: 2)
!7927 = distinct !DILexicalBlock(scope: !7928, file: !7573, line: 387, column: 2)
!7928 = distinct !DILexicalBlock(scope: !7929, file: !7573, line: 387, column: 2)
!7929 = distinct !DILexicalBlock(scope: !7913, file: !7573, line: 387, column: 2)
!7930 = !DILocation(line: 389, column: 11, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7913, file: !7573, line: 389, column: 6)
!7932 = !DILocation(line: 389, column: 16, scope: !7931)
!7933 = !DILocation(line: 389, column: 6, scope: !7913)
!7934 = !DILocation(line: 390, column: 3, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7936, file: !7573, line: 390, column: 3)
!7936 = distinct !DILexicalBlock(scope: !7937, file: !7573, line: 390, column: 3)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !7573, line: 390, column: 3)
!7938 = distinct !DILexicalBlock(scope: !7939, file: !7573, line: 390, column: 3)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !7573, line: 389, column: 39)
!7940 = !DILocation(line: 391, column: 2, scope: !7939)
!7941 = !DILocation(line: 392, column: 11, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7913, file: !7573, line: 392, column: 6)
!7943 = !DILocation(line: 392, column: 16, scope: !7942)
!7944 = !DILocation(line: 392, column: 6, scope: !7913)
!7945 = !DILocation(line: 393, column: 3, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !7573, line: 393, column: 3)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !7573, line: 393, column: 3)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !7573, line: 393, column: 3)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !7573, line: 393, column: 3)
!7950 = distinct !DILexicalBlock(scope: !7942, file: !7573, line: 392, column: 41)
!7951 = !DILocation(line: 394, column: 2, scope: !7950)
!7952 = !DILocation(line: 395, column: 11, scope: !7923)
!7953 = !DILocation(line: 395, column: 16, scope: !7923)
!7954 = !DILocation(line: 395, column: 6, scope: !7913)
!7955 = !DILocation(line: 396, column: 3, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !7573, line: 396, column: 3)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !7573, line: 396, column: 3)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !7573, line: 396, column: 3)
!7959 = distinct !DILexicalBlock(scope: !7922, file: !7573, line: 396, column: 3)
!7960 = !DILocation(line: 405, column: 3, scope: !7922)
!7961 = !DILocation(line: 0, scope: !7922)
!7962 = !DILocation(line: 407, column: 13, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7922, file: !7573, line: 407, column: 7)
!7964 = !DILocation(line: 407, column: 18, scope: !7963)
!7965 = !DILocation(line: 407, column: 44, scope: !7963)
!7966 = !DILocation(line: 407, column: 7, scope: !7922)
!7967 = !DILocation(line: 408, column: 4, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7969, file: !7573, line: 408, column: 4)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !7573, line: 408, column: 4)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !7573, line: 408, column: 4)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !7573, line: 408, column: 4)
!7972 = distinct !DILexicalBlock(scope: !7963, file: !7573, line: 407, column: 50)
!7973 = !DILocation(line: 409, column: 24, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7972, file: !7573, line: 409, column: 8)
!7975 = !DILocation(line: 409, column: 8, scope: !7972)
!7976 = !DILocation(line: 411, column: 15, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7974, file: !7573, line: 409, column: 30)
!7978 = !DILocation(line: 412, column: 4, scope: !7977)
!7979 = !DILocation(line: 415, column: 11, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7913, file: !7573, line: 415, column: 6)
!7981 = !DILocation(line: 415, column: 16, scope: !7980)
!7982 = !DILocation(line: 415, column: 6, scope: !7913)
!7983 = !DILocation(line: 416, column: 3, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7985, file: !7573, line: 416, column: 3)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7573, line: 416, column: 3)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7573, line: 416, column: 3)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7573, line: 416, column: 3)
!7988 = distinct !DILexicalBlock(scope: !7980, file: !7573, line: 415, column: 44)
!7989 = !DILocation(line: 417, column: 2, scope: !7988)
!7990 = !DILocation(line: 418, column: 12, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7913, file: !7573, line: 418, column: 6)
!7992 = !DILocation(line: 418, column: 17, scope: !7991)
!7993 = !DILocation(line: 418, column: 41, scope: !7991)
!7994 = !DILocation(line: 418, column: 6, scope: !7913)
!7995 = !DILocation(line: 419, column: 3, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !7573, line: 419, column: 3)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !7573, line: 419, column: 3)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !7573, line: 419, column: 3)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !7573, line: 419, column: 3)
!8000 = distinct !DILexicalBlock(scope: !7991, file: !7573, line: 418, column: 47)
!8001 = !DILocation(line: 421, column: 2, scope: !8000)
!8002 = !DILocation(line: 524, column: 12, scope: !7913)
!8003 = !DILocation(line: 526, column: 15, scope: !7913)
!8004 = !DILocation(line: 528, column: 2, scope: !7913)
!8005 = distinct !DISubprogram(name: "usage_fault", scope: !7573, file: !7573, line: 539, type: !8006, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !8010)
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!113, !8008}
!8008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8009, size: 32)
!8009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2284)
!8010 = !{!8011, !8012}
!8011 = !DILocalVariable(name: "esf", arg: 1, scope: !8005, file: !7573, line: 539, type: !8008)
!8012 = !DILocalVariable(name: "reason", scope: !8005, file: !7573, line: 541, type: !113)
!8013 = !DILocation(line: 0, scope: !8005)
!8014 = !DILocation(line: 543, column: 2, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !7573, line: 543, column: 2)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !7573, line: 543, column: 2)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !7573, line: 543, column: 2)
!8018 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 543, column: 2)
!8019 = !DILocation(line: 546, column: 12, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 546, column: 6)
!8021 = !DILocation(line: 546, column: 17, scope: !8020)
!8022 = !DILocation(line: 546, column: 43, scope: !8020)
!8023 = !DILocation(line: 546, column: 6, scope: !8005)
!8024 = !DILocation(line: 547, column: 3, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !7573, line: 547, column: 3)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !7573, line: 547, column: 3)
!8027 = distinct !DILexicalBlock(scope: !8028, file: !7573, line: 547, column: 3)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !7573, line: 547, column: 3)
!8029 = distinct !DILexicalBlock(scope: !8020, file: !7573, line: 546, column: 49)
!8030 = !DILocation(line: 548, column: 2, scope: !8029)
!8031 = !DILocation(line: 549, column: 12, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 549, column: 6)
!8033 = !DILocation(line: 549, column: 17, scope: !8032)
!8034 = !DILocation(line: 549, column: 43, scope: !8032)
!8035 = !DILocation(line: 549, column: 6, scope: !8005)
!8036 = !DILocation(line: 550, column: 3, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7573, line: 550, column: 3)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7573, line: 550, column: 3)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7573, line: 550, column: 3)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !7573, line: 550, column: 3)
!8041 = distinct !DILexicalBlock(scope: !8032, file: !7573, line: 549, column: 49)
!8042 = !DILocation(line: 551, column: 2, scope: !8041)
!8043 = !DILocation(line: 567, column: 12, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 567, column: 6)
!8045 = !DILocation(line: 567, column: 17, scope: !8044)
!8046 = !DILocation(line: 567, column: 38, scope: !8044)
!8047 = !DILocation(line: 567, column: 6, scope: !8005)
!8048 = !DILocation(line: 568, column: 3, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7573, line: 568, column: 3)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7573, line: 568, column: 3)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !7573, line: 568, column: 3)
!8052 = distinct !DILexicalBlock(scope: !8053, file: !7573, line: 568, column: 3)
!8053 = distinct !DILexicalBlock(scope: !8044, file: !7573, line: 567, column: 44)
!8054 = !DILocation(line: 569, column: 2, scope: !8053)
!8055 = !DILocation(line: 570, column: 12, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 570, column: 6)
!8057 = !DILocation(line: 570, column: 17, scope: !8056)
!8058 = !DILocation(line: 570, column: 39, scope: !8056)
!8059 = !DILocation(line: 570, column: 6, scope: !8005)
!8060 = !DILocation(line: 571, column: 3, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !7573, line: 571, column: 3)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !7573, line: 571, column: 3)
!8063 = distinct !DILexicalBlock(scope: !8064, file: !7573, line: 571, column: 3)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !7573, line: 571, column: 3)
!8065 = distinct !DILexicalBlock(scope: !8056, file: !7573, line: 570, column: 45)
!8066 = !DILocation(line: 572, column: 2, scope: !8065)
!8067 = !DILocation(line: 573, column: 12, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 573, column: 6)
!8069 = !DILocation(line: 573, column: 17, scope: !8068)
!8070 = !DILocation(line: 573, column: 42, scope: !8068)
!8071 = !DILocation(line: 573, column: 6, scope: !8005)
!8072 = !DILocation(line: 574, column: 3, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !7573, line: 574, column: 3)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !7573, line: 574, column: 3)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !7573, line: 574, column: 3)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !7573, line: 574, column: 3)
!8077 = distinct !DILexicalBlock(scope: !8068, file: !7573, line: 573, column: 48)
!8078 = !DILocation(line: 575, column: 2, scope: !8077)
!8079 = !DILocation(line: 576, column: 12, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8005, file: !7573, line: 576, column: 6)
!8081 = !DILocation(line: 576, column: 17, scope: !8080)
!8082 = !DILocation(line: 576, column: 44, scope: !8080)
!8083 = !DILocation(line: 576, column: 6, scope: !8005)
!8084 = !DILocation(line: 577, column: 3, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7573, line: 577, column: 3)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7573, line: 577, column: 3)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !7573, line: 577, column: 3)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !7573, line: 577, column: 3)
!8089 = distinct !DILexicalBlock(scope: !8080, file: !7573, line: 576, column: 50)
!8090 = !DILocation(line: 578, column: 2, scope: !8089)
!8091 = !DILocation(line: 581, column: 12, scope: !8005)
!8092 = !DILocation(line: 583, column: 2, scope: !8005)
!8093 = distinct !DISubprogram(name: "debug_monitor", scope: !7573, file: !7573, line: 632, type: !8094, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !8096)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{null, !2283, !7646}
!8096 = !{!8097, !8098}
!8097 = !DILocalVariable(name: "esf", arg: 1, scope: !8093, file: !7573, line: 632, type: !2283)
!8098 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8093, file: !7573, line: 632, type: !7646)
!8099 = !DILocation(line: 0, scope: !8093)
!8100 = !DILocation(line: 634, column: 15, scope: !8093)
!8101 = !DILocation(line: 636, column: 2, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !7573, line: 636, column: 2)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !7573, line: 636, column: 2)
!8104 = distinct !DILexicalBlock(scope: !8105, file: !7573, line: 636, column: 2)
!8105 = distinct !DILexicalBlock(scope: !8093, file: !7573, line: 636, column: 2)
!8106 = !DILocation(line: 652, column: 1, scope: !8093)
!8107 = distinct !DISubprogram(name: "reserved_exception", scope: !7573, file: !7573, line: 776, type: !8108, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !8110)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{null, !8008, !105}
!8110 = !{!8111, !8112}
!8111 = !DILocalVariable(name: "esf", arg: 1, scope: !8107, file: !7573, line: 776, type: !8008)
!8112 = !DILocalVariable(name: "fault", arg: 2, scope: !8107, file: !7573, line: 776, type: !105)
!8113 = !DILocation(line: 0, scope: !8107)
!8114 = !DILocation(line: 780, column: 2, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !7573, line: 780, column: 2)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !7573, line: 780, column: 2)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !7573, line: 780, column: 2)
!8118 = distinct !DILexicalBlock(scope: !8107, file: !7573, line: 780, column: 2)
!8119 = !DILocation(line: 783, column: 1, scope: !8107)
!8120 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7573, file: !7573, line: 658, type: !8121, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !8123)
!8121 = !DISubroutineType(types: !8122)
!8122 = !{!540, !2283}
!8123 = !{!8124, !8125, !8126}
!8124 = !DILocalVariable(name: "esf", arg: 1, scope: !8120, file: !7573, line: 658, type: !2283)
!8125 = !DILocalVariable(name: "ret_addr", scope: !8120, file: !7573, line: 660, type: !2012)
!8126 = !DILocalVariable(name: "fault_insn", scope: !8120, file: !7573, line: 686, type: !183)
!8127 = !DILocation(line: 0, scope: !8120)
!8128 = !DILocation(line: 660, column: 46, scope: !8120)
!8129 = !DILocation(line: 660, column: 23, scope: !8120)
!8130 = !DILocation(line: 682, column: 11, scope: !8120)
!8131 = !DILocation(line: 271, column: 3, scope: !8132, inlinedAt: !8133)
!8132 = distinct !DISubprogram(name: "__DSB", scope: !7290, file: !7290, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !397)
!8133 = distinct !DILocation(line: 683, column: 2, scope: !8120)
!8134 = !{i64 1571882}
!8135 = !DILocation(line: 260, column: 3, scope: !8136, inlinedAt: !8137)
!8136 = distinct !DISubprogram(name: "__ISB", scope: !7290, file: !7290, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !397)
!8137 = distinct !DILocation(line: 684, column: 2, scope: !8120)
!8138 = !{i64 1571599}
!8139 = !DILocation(line: 686, column: 35, scope: !8120)
!8140 = !DILocation(line: 686, column: 24, scope: !8120)
!8141 = !DILocation(line: 688, column: 11, scope: !8120)
!8142 = !DILocation(line: 271, column: 3, scope: !8132, inlinedAt: !8143)
!8143 = distinct !DILocation(line: 689, column: 2, scope: !8120)
!8144 = !DILocation(line: 260, column: 3, scope: !8136, inlinedAt: !8145)
!8145 = distinct !DILocation(line: 690, column: 2, scope: !8120)
!8146 = !DILocation(line: 693, column: 45, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8120, file: !7573, line: 693, column: 6)
!8148 = !DILocation(line: 699, column: 1, scope: !8120)
!8149 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7573, file: !7573, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2255, retainedNodes: !397)
!8150 = !DILocation(line: 1111, column: 11, scope: !8149)
!8151 = !DILocation(line: 1136, column: 1, scope: !8149)
!8152 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8153, file: !8153, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !8154)
!8153 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8154 = !{!8155}
!8155 = !DILocalVariable(name: "irq", scope: !8152, file: !8153, line: 28, type: !105)
!8156 = !DILocation(line: 0, scope: !8152)
!8157 = !DILocation(line: 30, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8152, file: !8153, line: 30, column: 2)
!8159 = !DILocation(line: 31, column: 3, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !8153, line: 30, column: 39)
!8161 = distinct !DILexicalBlock(scope: !8158, file: !8153, line: 30, column: 2)
!8162 = !DILocation(line: 30, column: 35, scope: !8161)
!8163 = !DILocation(line: 30, column: 13, scope: !8161)
!8164 = distinct !{!8164, !8157, !8165}
!8165 = !DILocation(line: 32, column: 2, scope: !8158)
!8166 = !DILocation(line: 33, column: 1, scope: !8152)
!8167 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !696, file: !696, line: 1638, type: !7330, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !8168)
!8168 = !{!8169, !8170}
!8169 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8167, file: !696, line: 1638, type: !2111)
!8170 = !DILocalVariable(name: "priority", arg: 2, scope: !8167, file: !696, line: 1638, type: !113)
!8171 = !DILocation(line: 0, scope: !8167)
!8172 = !DILocation(line: 1640, column: 7, scope: !8167)
!8173 = !DILocation(line: 0, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8167, file: !696, line: 1640, column: 7)
!8175 = !DILocation(line: 1648, column: 1, scope: !8167)
!8176 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8177, file: !8177, line: 27, type: !8178, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2371, retainedNodes: !8283)
!8177 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8178 = !DISubroutineType(types: !8179)
!8179 = !{null, !8180}
!8180 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8181)
!8181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8182, size: 32)
!8182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8183)
!8183 = !{!8184, !8242, !8254, !8255, !8256, !8257, !8263, !8278}
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8182, file: !127, line: 247, baseType: !8185, size: 384)
!8185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8186)
!8186 = !{!8187, !8211, !8218, !8219, !8220, !8229, !8230, !8231}
!8187 = !DIDerivedType(tag: DW_TAG_member, scope: !8185, file: !127, line: 60, baseType: !8188, size: 64)
!8188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8185, file: !127, line: 60, size: 64, elements: !8189)
!8189 = !{!8190, !8205}
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8188, file: !127, line: 61, baseType: !8191, size: 64)
!8191 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8192)
!8192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8193)
!8193 = !{!8194, !8200}
!8194 = !DIDerivedType(tag: DW_TAG_member, scope: !8192, file: !137, line: 38, baseType: !8195, size: 32)
!8195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8192, file: !137, line: 38, size: 32, elements: !8196)
!8196 = !{!8197, !8199}
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8195, file: !137, line: 39, baseType: !8198, size: 32)
!8198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8192, size: 32)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8195, file: !137, line: 40, baseType: !8198, size: 32)
!8200 = !DIDerivedType(tag: DW_TAG_member, scope: !8192, file: !137, line: 42, baseType: !8201, size: 32, offset: 32)
!8201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8192, file: !137, line: 42, size: 32, elements: !8202)
!8202 = !{!8203, !8204}
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8201, file: !137, line: 43, baseType: !8198, size: 32)
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8201, file: !137, line: 44, baseType: !8198, size: 32)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8188, file: !127, line: 62, baseType: !8206, size: 64)
!8206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8207)
!8207 = !{!8208}
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8206, file: !153, line: 50, baseType: !8209, size: 64)
!8209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8210, size: 64, elements: !158)
!8210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8206, size: 32)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8185, file: !127, line: 68, baseType: !8212, size: 32, offset: 64)
!8212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8213, size: 32)
!8213 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8214)
!8214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8215)
!8215 = !{!8216}
!8216 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8214, file: !163, line: 232, baseType: !8217, size: 64)
!8217 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8192)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8185, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8185, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8220 = !DIDerivedType(tag: DW_TAG_member, scope: !8185, file: !127, line: 90, baseType: !8221, size: 16, offset: 112)
!8221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8185, file: !127, line: 90, size: 16, elements: !8222)
!8222 = !{!8223, !8228}
!8223 = !DIDerivedType(tag: DW_TAG_member, scope: !8221, file: !127, line: 91, baseType: !8224, size: 16)
!8224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8221, file: !127, line: 91, size: 16, elements: !8225)
!8225 = !{!8226, !8227}
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8224, file: !127, line: 96, baseType: !179, size: 8)
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8224, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8221, file: !127, line: 100, baseType: !183, size: 16)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8185, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8185, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8185, file: !127, line: 131, baseType: !8232, size: 192, offset: 192)
!8232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8233)
!8233 = !{!8234, !8235, !8241}
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8232, file: !163, line: 245, baseType: !8191, size: 64)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8232, file: !163, line: 246, baseType: !8236, size: 32, offset: 64)
!8236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8237)
!8237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8238, size: 32)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{null, !8240}
!8240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8232, size: 32)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8232, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8182, file: !127, line: 250, baseType: !8243, size: 288, offset: 384)
!8243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8244)
!8244 = !{!8245, !8246, !8247, !8248, !8249, !8250, !8251, !8252, !8253}
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8243, file: !200, line: 26, baseType: !113, size: 32)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8243, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8243, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8243, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8243, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8243, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8251 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8243, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8252 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8243, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8243, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8182, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8182, file: !127, line: 256, baseType: !8213, size: 64, offset: 704)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8182, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8182, file: !127, line: 300, baseType: !8258, size: 96, offset: 800)
!8258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8259)
!8259 = !{!8260, !8261, !8262}
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8258, file: !127, line: 153, baseType: !22, size: 32)
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8258, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8258, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8182, file: !127, line: 325, baseType: !8264, size: 32, offset: 896)
!8264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8265, size: 32)
!8265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8266)
!8266 = !{!8267, !8273, !8274}
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8265, file: !122, line: 5074, baseType: !8268, size: 96)
!8268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8269)
!8269 = !{!8270, !8271, !8272}
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8268, file: !226, line: 57, baseType: !229, size: 32)
!8271 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8268, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8268, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8273 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8265, file: !122, line: 5075, baseType: !8213, size: 64, offset: 96)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8265, file: !122, line: 5076, baseType: !8275, size: 32, offset: 160)
!8275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8276)
!8276 = !{!8277}
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8275, file: !236, line: 52, baseType: !22, size: 32)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8182, file: !127, line: 343, baseType: !8279, size: 64, offset: 928)
!8279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8280)
!8280 = !{!8281, !8282}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8279, file: !200, line: 63, baseType: !113, size: 32)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8279, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8283 = !{!8284}
!8284 = !DILocalVariable(name: "thread", arg: 1, scope: !8176, file: !8177, line: 27, type: !8180)
!8285 = !DILocation(line: 0, scope: !8176)
!8286 = !DILocation(line: 29, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8176, file: !8177, line: 29, column: 6)
!8288 = !DILocation(line: 29, column: 15, scope: !8287)
!8289 = !DILocation(line: 29, column: 6, scope: !8176)
!8290 = !DILocation(line: 1031, column: 3, scope: !8291, inlinedAt: !8294)
!8291 = distinct !DISubprogram(name: "__get_IPSR", scope: !7290, file: !7290, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2371, retainedNodes: !8292)
!8292 = !{!8293}
!8293 = !DILocalVariable(name: "result", scope: !8291, file: !7290, line: 1029, type: !113)
!8294 = distinct !DILocation(line: 48, column: 10, scope: !8295, inlinedAt: !8299)
!8295 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2371, retainedNodes: !397)
!8296 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!540}
!8299 = distinct !DILocation(line: 30, column: 7, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !8177, line: 30, column: 7)
!8301 = distinct !DILexicalBlock(scope: !8287, file: !8177, line: 29, column: 26)
!8302 = !{i64 1560730}
!8303 = !DILocation(line: 0, scope: !8291, inlinedAt: !8294)
!8304 = !DILocation(line: 48, column: 9, scope: !8295, inlinedAt: !8299)
!8305 = !DILocation(line: 30, column: 7, scope: !8301)
!8306 = !DILocation(line: 42, column: 14, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8300, file: !8177, line: 30, column: 25)
!8308 = !DILocation(line: 48, column: 15, scope: !8307)
!8309 = !DILocation(line: 49, column: 3, scope: !8307)
!8310 = !DILocation(line: 52, column: 2, scope: !8176)
!8311 = !DILocation(line: 53, column: 1, scope: !8176)
!8312 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !558, file: !558, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !551, retainedNodes: !397)
!8313 = !DILocation(line: 134, column: 2, scope: !8312)
!8314 = !DILocation(line: 156, column: 1, scope: !8312)
!8315 = !DILocation(line: 0, scope: !557)
!8316 = !DILocation(line: 289, column: 36, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !557, file: !558, line: 285, column: 2)
!8318 = !DILocation(line: 289, column: 42, scope: !8317)
!8319 = !DILocation(line: 300, column: 36, scope: !557)
!8320 = !DILocation(line: 301, column: 35, scope: !557)
!8321 = !DILocation(line: 302, column: 37, scope: !557)
!8322 = !DILocation(line: 311, column: 2, scope: !557)
!8323 = !DILocation(line: 316, column: 1, scope: !557)
!8324 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !723, file: !723, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !397)
!8325 = !DILocation(line: 188, column: 12, scope: !8324)
!8326 = !DILocation(line: 271, column: 3, scope: !8327, inlinedAt: !8328)
!8327 = distinct !DISubprogram(name: "__DSB", scope: !7290, file: !7290, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !397)
!8328 = distinct !DILocation(line: 192, column: 2, scope: !8324)
!8329 = !{i64 1714137}
!8330 = !DILocation(line: 260, column: 3, scope: !8331, inlinedAt: !8332)
!8331 = distinct !DISubprogram(name: "__ISB", scope: !7290, file: !7290, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !397)
!8332 = distinct !DILocation(line: 193, column: 2, scope: !8324)
!8333 = !{i64 1713854}
!8334 = !DILocation(line: 194, column: 1, scope: !8324)
!8335 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !723, file: !723, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !397)
!8336 = !DILocation(line: 282, column: 3, scope: !8337, inlinedAt: !8338)
!8337 = distinct !DISubprogram(name: "__DMB", scope: !7290, file: !7290, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !397)
!8338 = distinct !DILocation(line: 202, column: 2, scope: !8335)
!8339 = !{i64 1714413}
!8340 = !DILocation(line: 205, column: 12, scope: !8335)
!8341 = !DILocation(line: 206, column: 1, scope: !8335)
!8342 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !723, file: !723, line: 275, type: !8343, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8357)
!8343 = !DISubroutineType(types: !8344)
!8344 = !{null, !8345, !8356, !1359, !1359}
!8345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8346, size: 32)
!8346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8347)
!8347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !670, line: 52, size: 96, elements: !8348)
!8348 = !{!8349, !8350, !8351}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8347, file: !670, line: 53, baseType: !22, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8347, file: !670, line: 54, baseType: !111, size: 32, offset: 32)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8347, file: !670, line: 55, baseType: !8352, size: 32, offset: 64)
!8352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !676, line: 151, baseType: !8353)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !676, line: 149, size: 32, elements: !8354)
!8354 = !{!8355}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8353, file: !676, line: 150, baseType: !113, size: 32)
!8356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!8357 = !{!8358, !8359, !8360, !8361}
!8358 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8342, file: !723, line: 276, type: !8345)
!8359 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8342, file: !723, line: 276, type: !8356)
!8360 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8342, file: !723, line: 277, type: !1359)
!8361 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8342, file: !723, line: 277, type: !1359)
!8362 = !DILocation(line: 0, scope: !8342)
!8363 = !DILocation(line: 279, column: 6, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8342, file: !723, line: 279, column: 6)
!8365 = !DILocation(line: 280, column: 57, scope: !8364)
!8366 = !DILocation(line: 279, column: 6, scope: !8342)
!8367 = !DILocation(line: 282, column: 3, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !723, line: 282, column: 3)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !723, line: 282, column: 3)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !723, line: 282, column: 3)
!8371 = distinct !DILexicalBlock(scope: !8364, file: !723, line: 280, column: 69)
!8372 = !DILocation(line: 285, column: 1, scope: !8342)
!8373 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8374, file: !8374, line: 220, type: !8375, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8377)
!8374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8375 = !DISubroutineType(types: !8376)
!8376 = !{!105, !8345, !8356, !1359, !1359}
!8377 = !{!8378, !8379, !8380, !8381, !8382}
!8378 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8373, file: !8374, line: 221, type: !8345)
!8379 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8373, file: !8374, line: 221, type: !8356)
!8380 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8373, file: !8374, line: 222, type: !1359)
!8381 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8373, file: !8374, line: 223, type: !1359)
!8382 = !DILocalVariable(name: "mpu_reg_index", scope: !8373, file: !8374, line: 225, type: !105)
!8383 = !DILocation(line: 0, scope: !8373)
!8384 = !DILocation(line: 225, column: 22, scope: !8373)
!8385 = !DILocation(line: 233, column: 18, scope: !8373)
!8386 = !DILocation(line: 236, column: 23, scope: !8373)
!8387 = !DILocation(line: 236, column: 21, scope: !8373)
!8388 = !DILocation(line: 238, column: 2, scope: !8373)
!8389 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !723, file: !723, line: 105, type: !8390, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8392)
!8390 = !DISubroutineType(types: !8391)
!8391 = !{!105, !8345, !169, !169, !540}
!8392 = !{!8393, !8394, !8395, !8396, !8397, !8398}
!8393 = !DILocalVariable(name: "regions", arg: 1, scope: !8389, file: !723, line: 106, type: !8345)
!8394 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8389, file: !723, line: 106, type: !169)
!8395 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8389, file: !723, line: 106, type: !169)
!8396 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8389, file: !723, line: 107, type: !540)
!8397 = !DILocalVariable(name: "i", scope: !8389, file: !723, line: 109, type: !105)
!8398 = !DILocalVariable(name: "reg_index", scope: !8389, file: !723, line: 110, type: !105)
!8399 = !DILocation(line: 0, scope: !8389)
!8400 = !DILocation(line: 110, column: 18, scope: !8389)
!8401 = !DILocation(line: 112, column: 16, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !723, line: 112, column: 2)
!8403 = distinct !DILexicalBlock(scope: !8389, file: !723, line: 112, column: 2)
!8404 = !DILocation(line: 112, column: 2, scope: !8403)
!8405 = !DILocation(line: 113, column: 7, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !723, line: 113, column: 7)
!8407 = distinct !DILexicalBlock(scope: !8402, file: !723, line: 112, column: 36)
!8408 = !DILocation(line: 113, column: 18, scope: !8406)
!8409 = !DILocation(line: 113, column: 23, scope: !8406)
!8410 = !DILocation(line: 113, column: 7, scope: !8407)
!8411 = !DILocation(line: 118, column: 23, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8407, file: !723, line: 118, column: 7)
!8413 = !DILocation(line: 119, column: 7, scope: !8412)
!8414 = !DILocation(line: 118, column: 7, scope: !8407)
!8415 = !DILocation(line: 120, column: 4, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !723, line: 120, column: 4)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !723, line: 120, column: 4)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !723, line: 120, column: 4)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !723, line: 120, column: 4)
!8420 = distinct !DILexicalBlock(scope: !8412, file: !723, line: 119, column: 45)
!8421 = !DILocation(line: 121, column: 4, scope: !8420)
!8422 = !DILocation(line: 124, column: 36, scope: !8407)
!8423 = !DILocation(line: 124, column: 15, scope: !8407)
!8424 = !DILocation(line: 126, column: 17, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8407, file: !723, line: 126, column: 7)
!8426 = !DILocation(line: 126, column: 7, scope: !8407)
!8427 = !DILocation(line: 131, column: 12, scope: !8407)
!8428 = !DILocation(line: 132, column: 2, scope: !8407)
!8429 = !DILocation(line: 112, column: 32, scope: !8402)
!8430 = distinct !{!8430, !8404, !8431}
!8431 = !DILocation(line: 132, column: 2, scope: !8403)
!8432 = !DILocation(line: 135, column: 1, scope: !8389)
!8433 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8374, file: !8374, line: 63, type: !8434, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8436)
!8434 = !DISubroutineType(types: !8435)
!8435 = !{!105, !8345}
!8436 = !{!8437, !8438}
!8437 = !DILocalVariable(name: "part", arg: 1, scope: !8433, file: !8374, line: 63, type: !8345)
!8438 = !DILocalVariable(name: "partition_is_valid", scope: !8433, file: !8374, line: 70, type: !105)
!8439 = !DILocation(line: 0, scope: !8433)
!8440 = !DILocation(line: 71, column: 11, scope: !8433)
!8441 = !DILocation(line: 71, column: 37, scope: !8433)
!8442 = !DILocation(line: 72, column: 3, scope: !8433)
!8443 = !DILocation(line: 71, column: 30, scope: !8433)
!8444 = !DILocation(line: 75, column: 11, scope: !8433)
!8445 = !DILocation(line: 75, column: 17, scope: !8433)
!8446 = !DILocation(line: 75, column: 38, scope: !8433)
!8447 = !DILocation(line: 77, column: 2, scope: !8433)
!8448 = distinct !DISubprogram(name: "mpu_configure_region", scope: !723, file: !723, line: 79, type: !8449, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8451)
!8449 = !DISubroutineType(types: !8450)
!8450 = !{!105, !8356, !8345}
!8451 = !{!8452, !8453, !8454}
!8452 = !DILocalVariable(name: "index", arg: 1, scope: !8448, file: !723, line: 79, type: !8356)
!8453 = !DILocalVariable(name: "new_region", arg: 2, scope: !8448, file: !723, line: 80, type: !8345)
!8454 = !DILocalVariable(name: "region_conf", scope: !8448, file: !723, line: 82, type: !712)
!8455 = !DILocation(line: 0, scope: !8448)
!8456 = !DILocation(line: 82, column: 2, scope: !8448)
!8457 = !DILocation(line: 82, column: 24, scope: !8448)
!8458 = !DILocation(line: 87, column: 33, scope: !8448)
!8459 = !DILocation(line: 87, column: 14, scope: !8448)
!8460 = !DILocation(line: 87, column: 19, scope: !8448)
!8461 = !DILocation(line: 91, column: 55, scope: !8448)
!8462 = !DILocation(line: 92, column: 16, scope: !8448)
!8463 = !DILocation(line: 92, column: 53, scope: !8448)
!8464 = !DILocation(line: 91, column: 2, scope: !8448)
!8465 = !DILocation(line: 95, column: 9, scope: !8448)
!8466 = !DILocation(line: 97, column: 1, scope: !8448)
!8467 = !DILocation(line: 95, column: 2, scope: !8448)
!8468 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8374, file: !8374, line: 113, type: !8469, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8474)
!8469 = !DISubroutineType(types: !8470)
!8470 = !{null, !8471, !8472, !113, !113}
!8471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8473, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8352)
!8474 = !{!8475, !8476, !8477, !8478}
!8475 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8468, file: !8374, line: 114, type: !8471)
!8476 = !DILocalVariable(name: "attr", arg: 2, scope: !8468, file: !8374, line: 115, type: !8472)
!8477 = !DILocalVariable(name: "base", arg: 3, scope: !8468, file: !8374, line: 115, type: !113)
!8478 = !DILocalVariable(name: "size", arg: 4, scope: !8468, file: !8374, line: 115, type: !113)
!8479 = !DILocation(line: 0, scope: !8468)
!8480 = !DILocation(line: 127, column: 23, scope: !8468)
!8481 = !DILocation(line: 127, column: 35, scope: !8468)
!8482 = !DILocation(line: 127, column: 33, scope: !8468)
!8483 = !DILocation(line: 127, column: 10, scope: !8468)
!8484 = !DILocation(line: 127, column: 15, scope: !8468)
!8485 = !DILocation(line: 129, column: 1, scope: !8468)
!8486 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !723, file: !723, line: 57, type: !8487, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8489)
!8487 = !DISubroutineType(types: !8488)
!8488 = !{!105, !8356, !710}
!8489 = !{!8490, !8491}
!8490 = !DILocalVariable(name: "index", arg: 1, scope: !8486, file: !723, line: 57, type: !8356)
!8491 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8486, file: !723, line: 58, type: !710)
!8492 = !DILocation(line: 0, scope: !8486)
!8493 = !DILocation(line: 61, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8486, file: !723, line: 61, column: 6)
!8495 = !DILocation(line: 61, column: 12, scope: !8494)
!8496 = !DILocation(line: 61, column: 6, scope: !8486)
!8497 = !DILocation(line: 64, column: 3, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8499, file: !723, line: 64, column: 3)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !723, line: 64, column: 3)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !723, line: 64, column: 3)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !723, line: 64, column: 3)
!8502 = distinct !DILexicalBlock(scope: !8494, file: !723, line: 61, column: 40)
!8503 = !DILocation(line: 65, column: 3, scope: !8502)
!8504 = !DILocation(line: 71, column: 2, scope: !8486)
!8505 = !DILocation(line: 73, column: 2, scope: !8486)
!8506 = !DILocation(line: 74, column: 1, scope: !8486)
!8507 = distinct !DISubprogram(name: "region_init", scope: !8374, file: !8374, line: 29, type: !8508, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8510)
!8508 = !DISubroutineType(types: !8509)
!8509 = !{null, !1359, !710}
!8510 = !{!8511, !8512}
!8511 = !DILocalVariable(name: "index", arg: 1, scope: !8507, file: !8374, line: 29, type: !1359)
!8512 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8507, file: !8374, line: 30, type: !710)
!8513 = !DILocation(line: 0, scope: !8507)
!8514 = !DILocation(line: 33, column: 2, scope: !8507)
!8515 = !DILocation(line: 47, column: 28, scope: !8507)
!8516 = !DILocation(line: 47, column: 33, scope: !8507)
!8517 = !DILocation(line: 48, column: 26, scope: !8507)
!8518 = !DILocation(line: 47, column: 12, scope: !8507)
!8519 = !DILocation(line: 49, column: 32, scope: !8507)
!8520 = !DILocation(line: 49, column: 37, scope: !8507)
!8521 = !DILocation(line: 49, column: 12, scope: !8507)
!8522 = !DILocation(line: 53, column: 1, scope: !8507)
!8523 = distinct !DISubprogram(name: "set_region_number", scope: !8524, file: !8524, line: 32, type: !6724, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8525)
!8524 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8525 = !{!8526}
!8526 = !DILocalVariable(name: "index", arg: 1, scope: !8523, file: !8524, line: 32, type: !113)
!8527 = !DILocation(line: 0, scope: !8523)
!8528 = !DILocation(line: 34, column: 11, scope: !8523)
!8529 = !DILocation(line: 35, column: 1, scope: !8523)
!8530 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8374, file: !8374, line: 88, type: !6764, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8531)
!8531 = !{!8532}
!8532 = !DILocalVariable(name: "size", arg: 1, scope: !8530, file: !8374, line: 88, type: !113)
!8533 = !DILocation(line: 0, scope: !8530)
!8534 = !DILocation(line: 91, column: 11, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8530, file: !8374, line: 91, column: 6)
!8536 = !DILocation(line: 91, column: 6, scope: !8530)
!8537 = !DILocation(line: 100, column: 11, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8530, file: !8374, line: 100, column: 6)
!8539 = !DILocation(line: 100, column: 6, scope: !8530)
!8540 = !DILocation(line: 104, column: 35, scope: !8530)
!8541 = !DILocation(line: 104, column: 16, scope: !8530)
!8542 = !DILocation(line: 104, column: 50, scope: !8530)
!8543 = !DILocation(line: 104, column: 72, scope: !8530)
!8544 = !DILocation(line: 104, column: 2, scope: !8530)
!8545 = !DILocation(line: 106, column: 1, scope: !8530)
!8546 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !723, file: !723, line: 307, type: !8547, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8549)
!8547 = !DISubroutineType(types: !8548)
!8548 = !{null, !8345, !169}
!8549 = !{!8550, !8551}
!8550 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8546, file: !723, line: 308, type: !8345)
!8551 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8546, file: !723, line: 308, type: !169)
!8552 = !DILocation(line: 0, scope: !8546)
!8553 = !DILocation(line: 310, column: 6, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8546, file: !723, line: 310, column: 6)
!8555 = !DILocation(line: 311, column: 3, scope: !8554)
!8556 = !DILocation(line: 310, column: 6, scope: !8546)
!8557 = !DILocation(line: 313, column: 3, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8559, file: !723, line: 313, column: 3)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !723, line: 313, column: 3)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !723, line: 313, column: 3)
!8561 = distinct !DILexicalBlock(scope: !8554, file: !723, line: 311, column: 15)
!8562 = !DILocation(line: 316, column: 1, scope: !8546)
!8563 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8374, file: !8374, line: 249, type: !8564, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8566)
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!105, !8345, !169}
!8566 = !{!8567, !8568, !8569, !8570}
!8567 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !8563, file: !8374, line: 250, type: !8345)
!8568 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8563, file: !8374, line: 250, type: !169)
!8569 = !DILocalVariable(name: "mpu_reg_index", scope: !8563, file: !8374, line: 252, type: !105)
!8570 = !DILocalVariable(name: "i", scope: !8571, file: !8374, line: 264, type: !105)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8374, line: 264, column: 3)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !8374, line: 261, column: 32)
!8573 = distinct !DILexicalBlock(scope: !8563, file: !8374, line: 261, column: 6)
!8574 = !DILocation(line: 0, scope: !8563)
!8575 = !DILocation(line: 252, column: 22, scope: !8563)
!8576 = !DILocation(line: 258, column: 18, scope: !8563)
!8577 = !DILocation(line: 261, column: 20, scope: !8573)
!8578 = !DILocation(line: 261, column: 6, scope: !8563)
!8579 = !DILocation(line: 0, scope: !8571)
!8580 = !DILocation(line: 265, column: 4, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8374, line: 264, column: 59)
!8582 = distinct !DILexicalBlock(scope: !8571, file: !8374, line: 264, column: 3)
!8583 = !DILocation(line: 264, column: 55, scope: !8582)
!8584 = !DILocation(line: 264, column: 33, scope: !8582)
!8585 = !DILocation(line: 264, column: 3, scope: !8571)
!8586 = distinct !{!8586, !8585, !8587}
!8587 = !DILocation(line: 266, column: 3, scope: !8571)
!8588 = !DILocation(line: 269, column: 2, scope: !8563)
!8589 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !8590, file: !8590, line: 218, type: !6724, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8591)
!8590 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8591 = !{!8592}
!8592 = !DILocalVariable(name: "rnr", arg: 1, scope: !8589, file: !8590, line: 218, type: !113)
!8593 = !DILocation(line: 0, scope: !8589)
!8594 = !DILocation(line: 220, column: 12, scope: !8589)
!8595 = !DILocation(line: 221, column: 13, scope: !8589)
!8596 = !DILocation(line: 222, column: 1, scope: !8589)
!8597 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !723, file: !723, line: 326, type: !8598, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !691, retainedNodes: !8600)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!105}
!8600 = !{!8601}
!8601 = !DILocalVariable(name: "r_index", scope: !8597, file: !723, line: 328, type: !113)
!8602 = !DILocation(line: 330, column: 17, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8597, file: !723, line: 330, column: 6)
!8604 = !DILocation(line: 330, column: 29, scope: !8603)
!8605 = !DILocation(line: 330, column: 6, scope: !8597)
!8606 = !DILocation(line: 337, column: 3, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !723, line: 337, column: 3)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !723, line: 337, column: 3)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !723, line: 337, column: 3)
!8610 = distinct !DILexicalBlock(scope: !8603, file: !723, line: 330, column: 50)
!8611 = !DILocation(line: 347, column: 2, scope: !8597)
!8612 = !DILocation(line: 0, scope: !8597)
!8613 = !DILocation(line: 364, column: 29, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !723, line: 364, column: 2)
!8615 = distinct !DILexicalBlock(scope: !8597, file: !723, line: 364, column: 2)
!8616 = !DILocation(line: 364, column: 2, scope: !8615)
!8617 = !DILocation(line: 365, column: 25, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8614, file: !723, line: 364, column: 66)
!8619 = !DILocation(line: 365, column: 3, scope: !8618)
!8620 = !DILocation(line: 364, column: 62, scope: !8614)
!8621 = distinct !{!8621, !8616, !8622}
!8622 = !DILocation(line: 366, column: 2, scope: !8615)
!8623 = !DILocation(line: 369, column: 23, scope: !8597)
!8624 = !DILocation(line: 369, column: 21, scope: !8597)
!8625 = !DILocation(line: 372, column: 2, scope: !8597)
!8626 = !DILocation(line: 433, column: 2, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !723, line: 433, column: 2)
!8628 = distinct !DILexicalBlock(scope: !8597, file: !723, line: 433, column: 2)
!8629 = !DILocation(line: 433, column: 2, scope: !8628)
!8630 = !DILocation(line: 433, column: 2, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8627, file: !723, line: 433, column: 2)
!8632 = !DILocation(line: 444, column: 1, scope: !8597)
!8633 = distinct !DISubprogram(name: "strcpy", scope: !8634, file: !8634, line: 20, type: !8635, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8639)
!8634 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8635 = !DISubroutineType(types: !8636)
!8636 = !{!102, !8637, !8638}
!8637 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8638 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!8639 = !{!8640, !8641, !8642}
!8640 = !DILocalVariable(name: "d", arg: 1, scope: !8633, file: !8634, line: 20, type: !8637)
!8641 = !DILocalVariable(name: "s", arg: 2, scope: !8633, file: !8634, line: 20, type: !8638)
!8642 = !DILocalVariable(name: "dest", scope: !8633, file: !8634, line: 22, type: !102)
!8643 = !DILocation(line: 0, scope: !8633)
!8644 = !DILocation(line: 24, column: 9, scope: !8633)
!8645 = !DILocation(line: 24, column: 12, scope: !8633)
!8646 = !DILocation(line: 24, column: 2, scope: !8633)
!8647 = !DILocation(line: 25, column: 6, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8633, file: !8634, line: 24, column: 21)
!8649 = !DILocation(line: 26, column: 4, scope: !8648)
!8650 = !DILocation(line: 27, column: 4, scope: !8648)
!8651 = distinct !{!8651, !8646, !8652}
!8652 = !DILocation(line: 28, column: 2, scope: !8633)
!8653 = !DILocation(line: 30, column: 5, scope: !8633)
!8654 = !DILocation(line: 32, column: 2, scope: !8633)
!8655 = distinct !DISubprogram(name: "strncpy", scope: !8634, file: !8634, line: 42, type: !8656, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8658)
!8656 = !DISubroutineType(types: !8657)
!8657 = !{!102, !8637, !8638, !111}
!8658 = !{!8659, !8660, !8661, !8662}
!8659 = !DILocalVariable(name: "d", arg: 1, scope: !8655, file: !8634, line: 42, type: !8637)
!8660 = !DILocalVariable(name: "s", arg: 2, scope: !8655, file: !8634, line: 42, type: !8638)
!8661 = !DILocalVariable(name: "n", arg: 3, scope: !8655, file: !8634, line: 42, type: !111)
!8662 = !DILocalVariable(name: "dest", scope: !8655, file: !8634, line: 44, type: !102)
!8663 = !DILocation(line: 0, scope: !8655)
!8664 = !DILocation(line: 46, column: 12, scope: !8655)
!8665 = !DILocation(line: 46, column: 17, scope: !8655)
!8666 = !DILocation(line: 46, column: 20, scope: !8655)
!8667 = !DILocation(line: 46, column: 23, scope: !8655)
!8668 = !DILocation(line: 46, column: 2, scope: !8655)
!8669 = !DILocation(line: 47, column: 6, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8655, file: !8634, line: 46, column: 32)
!8671 = !DILocation(line: 48, column: 4, scope: !8670)
!8672 = !DILocation(line: 49, column: 4, scope: !8670)
!8673 = !DILocation(line: 50, column: 4, scope: !8670)
!8674 = distinct !{!8674, !8668, !8675}
!8675 = !DILocation(line: 51, column: 2, scope: !8655)
!8676 = !DILocation(line: 54, column: 6, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8655, file: !8634, line: 53, column: 16)
!8678 = !DILocation(line: 55, column: 4, scope: !8677)
!8679 = !DILocation(line: 56, column: 4, scope: !8677)
!8680 = !DILocation(line: 53, column: 11, scope: !8655)
!8681 = !DILocation(line: 53, column: 2, scope: !8655)
!8682 = distinct !{!8682, !8681, !8683}
!8683 = !DILocation(line: 57, column: 2, scope: !8655)
!8684 = !DILocation(line: 59, column: 2, scope: !8655)
!8685 = distinct !DISubprogram(name: "strchr", scope: !8634, file: !8634, line: 69, type: !8686, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8688)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{!102, !269, !105}
!8688 = !{!8689, !8690, !8691}
!8689 = !DILocalVariable(name: "s", arg: 1, scope: !8685, file: !8634, line: 69, type: !269)
!8690 = !DILocalVariable(name: "c", arg: 2, scope: !8685, file: !8634, line: 69, type: !105)
!8691 = !DILocalVariable(name: "tmp", scope: !8685, file: !8634, line: 71, type: !103)
!8692 = !DILocation(line: 0, scope: !8685)
!8693 = !DILocation(line: 73, column: 2, scope: !8685)
!8694 = !DILocation(line: 73, column: 10, scope: !8685)
!8695 = !DILocation(line: 73, column: 13, scope: !8685)
!8696 = !DILocation(line: 73, column: 21, scope: !8685)
!8697 = !DILocation(line: 74, column: 4, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8685, file: !8634, line: 73, column: 38)
!8699 = distinct !{!8699, !8693, !8700}
!8700 = !DILocation(line: 75, column: 2, scope: !8685)
!8701 = !DILocation(line: 77, column: 9, scope: !8685)
!8702 = !DILocation(line: 77, column: 2, scope: !8685)
!8703 = distinct !DISubprogram(name: "strrchr", scope: !8634, file: !8634, line: 87, type: !8686, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707}
!8705 = !DILocalVariable(name: "s", arg: 1, scope: !8703, file: !8634, line: 87, type: !269)
!8706 = !DILocalVariable(name: "c", arg: 2, scope: !8703, file: !8634, line: 87, type: !105)
!8707 = !DILocalVariable(name: "match", scope: !8703, file: !8634, line: 89, type: !102)
!8708 = !DILocation(line: 0, scope: !8703)
!8709 = !DILocation(line: 91, column: 2, scope: !8703)
!8710 = !DILocation(line: 92, column: 7, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !8634, line: 92, column: 7)
!8712 = distinct !DILexicalBlock(scope: !8703, file: !8634, line: 91, column: 5)
!8713 = !DILocation(line: 92, column: 10, scope: !8711)
!8714 = !DILocation(line: 92, column: 7, scope: !8712)
!8715 = !DILocation(line: 95, column: 13, scope: !8703)
!8716 = !DILocation(line: 95, column: 2, scope: !8712)
!8717 = distinct !{!8717, !8709, !8718}
!8718 = !DILocation(line: 95, column: 15, scope: !8703)
!8719 = !DILocation(line: 97, column: 2, scope: !8703)
!8720 = distinct !DISubprogram(name: "strlen", scope: !8634, file: !8634, line: 107, type: !8721, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8723)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!111, !269}
!8723 = !{!8724, !8725}
!8724 = !DILocalVariable(name: "s", arg: 1, scope: !8720, file: !8634, line: 107, type: !269)
!8725 = !DILocalVariable(name: "n", scope: !8720, file: !8634, line: 109, type: !111)
!8726 = !DILocation(line: 0, scope: !8720)
!8727 = !DILocation(line: 111, column: 9, scope: !8720)
!8728 = !DILocation(line: 111, column: 12, scope: !8720)
!8729 = !DILocation(line: 111, column: 2, scope: !8720)
!8730 = !DILocation(line: 112, column: 4, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8720, file: !8634, line: 111, column: 21)
!8732 = !DILocation(line: 113, column: 4, scope: !8731)
!8733 = distinct !{!8733, !8729, !8734}
!8734 = !DILocation(line: 114, column: 2, scope: !8720)
!8735 = !DILocation(line: 116, column: 2, scope: !8720)
!8736 = distinct !DISubprogram(name: "strnlen", scope: !8634, file: !8634, line: 126, type: !8737, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8739)
!8737 = !DISubroutineType(types: !8738)
!8738 = !{!111, !269, !111}
!8739 = !{!8740, !8741, !8742}
!8740 = !DILocalVariable(name: "s", arg: 1, scope: !8736, file: !8634, line: 126, type: !269)
!8741 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8736, file: !8634, line: 126, type: !111)
!8742 = !DILocalVariable(name: "n", scope: !8736, file: !8634, line: 128, type: !111)
!8743 = !DILocation(line: 0, scope: !8736)
!8744 = !DILocation(line: 130, column: 9, scope: !8736)
!8745 = !DILocation(line: 130, column: 12, scope: !8736)
!8746 = !DILocation(line: 130, column: 20, scope: !8736)
!8747 = !DILocation(line: 130, column: 2, scope: !8736)
!8748 = !DILocation(line: 131, column: 4, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8736, file: !8634, line: 130, column: 35)
!8750 = !DILocation(line: 132, column: 4, scope: !8749)
!8751 = distinct !{!8751, !8747, !8752}
!8752 = !DILocation(line: 133, column: 2, scope: !8736)
!8753 = !DILocation(line: 135, column: 2, scope: !8736)
!8754 = distinct !DISubprogram(name: "strcmp", scope: !8634, file: !8634, line: 145, type: !8755, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8757)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{!105, !269, !269}
!8757 = !{!8758, !8759}
!8758 = !DILocalVariable(name: "s1", arg: 1, scope: !8754, file: !8634, line: 145, type: !269)
!8759 = !DILocalVariable(name: "s2", arg: 2, scope: !8754, file: !8634, line: 145, type: !269)
!8760 = !DILocation(line: 0, scope: !8754)
!8761 = !DILocation(line: 147, column: 10, scope: !8754)
!8762 = !DILocation(line: 147, column: 17, scope: !8754)
!8763 = !DILocation(line: 147, column: 14, scope: !8754)
!8764 = !DILocation(line: 147, column: 22, scope: !8754)
!8765 = !DILocation(line: 148, column: 5, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8754, file: !8634, line: 147, column: 40)
!8767 = !DILocation(line: 149, column: 5, scope: !8766)
!8768 = distinct !{!8768, !8769, !8770}
!8769 = !DILocation(line: 147, column: 2, scope: !8754)
!8770 = !DILocation(line: 150, column: 2, scope: !8754)
!8771 = !DILocation(line: 152, column: 9, scope: !8754)
!8772 = !DILocation(line: 152, column: 15, scope: !8754)
!8773 = !DILocation(line: 152, column: 13, scope: !8754)
!8774 = !DILocation(line: 152, column: 2, scope: !8754)
!8775 = distinct !DISubprogram(name: "strncmp", scope: !8634, file: !8634, line: 162, type: !8776, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8778)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!105, !269, !269, !111}
!8778 = !{!8779, !8780, !8781}
!8779 = !DILocalVariable(name: "s1", arg: 1, scope: !8775, file: !8634, line: 162, type: !269)
!8780 = !DILocalVariable(name: "s2", arg: 2, scope: !8775, file: !8634, line: 162, type: !269)
!8781 = !DILocalVariable(name: "n", arg: 3, scope: !8775, file: !8634, line: 162, type: !111)
!8782 = !DILocation(line: 0, scope: !8775)
!8783 = !DILocation(line: 164, column: 17, scope: !8775)
!8784 = !DILocation(line: 164, column: 21, scope: !8775)
!8785 = !DILocation(line: 164, column: 28, scope: !8775)
!8786 = !DILocation(line: 164, column: 25, scope: !8775)
!8787 = !DILocation(line: 164, column: 33, scope: !8775)
!8788 = !DILocation(line: 165, column: 5, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8775, file: !8634, line: 164, column: 51)
!8790 = !DILocation(line: 166, column: 5, scope: !8789)
!8791 = !DILocation(line: 167, column: 4, scope: !8789)
!8792 = distinct !{!8792, !8793, !8794}
!8793 = !DILocation(line: 164, column: 2, scope: !8775)
!8794 = !DILocation(line: 168, column: 2, scope: !8775)
!8795 = !DILocation(line: 170, column: 25, scope: !8775)
!8796 = !DILocation(line: 170, column: 31, scope: !8775)
!8797 = !DILocation(line: 170, column: 29, scope: !8775)
!8798 = !DILocation(line: 170, column: 9, scope: !8775)
!8799 = !DILocation(line: 170, column: 2, scope: !8775)
!8800 = distinct !DISubprogram(name: "strtok_r", scope: !8634, file: !8634, line: 180, type: !8801, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8803)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!102, !102, !269, !431}
!8803 = !{!8804, !8805, !8806, !8807, !8808}
!8804 = !DILocalVariable(name: "str", arg: 1, scope: !8800, file: !8634, line: 180, type: !102)
!8805 = !DILocalVariable(name: "sep", arg: 2, scope: !8800, file: !8634, line: 180, type: !269)
!8806 = !DILocalVariable(name: "state", arg: 3, scope: !8800, file: !8634, line: 180, type: !431)
!8807 = !DILocalVariable(name: "start", scope: !8800, file: !8634, line: 182, type: !102)
!8808 = !DILocalVariable(name: "end", scope: !8800, file: !8634, line: 182, type: !102)
!8809 = !DILocation(line: 0, scope: !8800)
!8810 = !DILocation(line: 184, column: 10, scope: !8800)
!8811 = !DILocation(line: 184, column: 22, scope: !8800)
!8812 = !DILocation(line: 187, column: 9, scope: !8800)
!8813 = !DILocation(line: 187, column: 16, scope: !8800)
!8814 = !DILocation(line: 187, column: 19, scope: !8800)
!8815 = !DILocation(line: 187, column: 2, scope: !8800)
!8816 = !DILocation(line: 188, column: 8, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8800, file: !8634, line: 187, column: 40)
!8818 = distinct !{!8818, !8815, !8819}
!8819 = !DILocation(line: 189, column: 2, scope: !8800)
!8820 = !DILocation(line: 198, column: 9, scope: !8800)
!8821 = !DILocation(line: 198, column: 18, scope: !8800)
!8822 = !DILocation(line: 198, column: 17, scope: !8800)
!8823 = !DILocation(line: 198, column: 2, scope: !8800)
!8824 = !DILocation(line: 199, column: 6, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8800, file: !8634, line: 198, column: 37)
!8826 = !DILocation(line: 198, column: 14, scope: !8800)
!8827 = distinct !{!8827, !8823, !8828}
!8828 = !DILocation(line: 200, column: 2, scope: !8800)
!8829 = !DILocation(line: 203, column: 8, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8634, line: 202, column: 20)
!8831 = distinct !DILexicalBlock(scope: !8800, file: !8634, line: 202, column: 6)
!8832 = !DILocation(line: 204, column: 16, scope: !8830)
!8833 = !DILocation(line: 205, column: 2, scope: !8830)
!8834 = !DILocation(line: 210, column: 1, scope: !8800)
!8835 = distinct !DISubprogram(name: "strcat", scope: !8634, file: !8634, line: 212, type: !8635, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8836)
!8836 = !{!8837, !8838}
!8837 = !DILocalVariable(name: "dest", arg: 1, scope: !8835, file: !8634, line: 212, type: !8637)
!8838 = !DILocalVariable(name: "src", arg: 2, scope: !8835, file: !8634, line: 212, type: !8638)
!8839 = !DILocation(line: 0, scope: !8835)
!8840 = !DILocation(line: 214, column: 16, scope: !8835)
!8841 = !DILocation(line: 214, column: 14, scope: !8835)
!8842 = !DILocation(line: 214, column: 2, scope: !8835)
!8843 = !DILocation(line: 215, column: 2, scope: !8835)
!8844 = distinct !DISubprogram(name: "strncat", scope: !8634, file: !8634, line: 218, type: !8656, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8845)
!8845 = !{!8846, !8847, !8848, !8849, !8850}
!8846 = !DILocalVariable(name: "dest", arg: 1, scope: !8844, file: !8634, line: 218, type: !8637)
!8847 = !DILocalVariable(name: "src", arg: 2, scope: !8844, file: !8634, line: 218, type: !8638)
!8848 = !DILocalVariable(name: "n", arg: 3, scope: !8844, file: !8634, line: 219, type: !111)
!8849 = !DILocalVariable(name: "orig_dest", scope: !8844, file: !8634, line: 221, type: !102)
!8850 = !DILocalVariable(name: "len", scope: !8844, file: !8634, line: 222, type: !111)
!8851 = !DILocation(line: 0, scope: !8844)
!8852 = !DILocation(line: 222, column: 15, scope: !8844)
!8853 = !DILocation(line: 224, column: 7, scope: !8844)
!8854 = !DILocation(line: 225, column: 14, scope: !8844)
!8855 = !DILocation(line: 225, column: 19, scope: !8844)
!8856 = !DILocation(line: 225, column: 11, scope: !8844)
!8857 = !DILocation(line: 225, column: 23, scope: !8844)
!8858 = !DILocation(line: 225, column: 28, scope: !8844)
!8859 = !DILocation(line: 225, column: 2, scope: !8844)
!8860 = !DILocation(line: 226, column: 17, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8844, file: !8634, line: 225, column: 38)
!8862 = !DILocation(line: 226, column: 8, scope: !8861)
!8863 = !DILocation(line: 226, column: 11, scope: !8861)
!8864 = distinct !{!8864, !8859, !8865}
!8865 = !DILocation(line: 227, column: 2, scope: !8844)
!8866 = !DILocation(line: 228, column: 8, scope: !8844)
!8867 = !DILocation(line: 230, column: 2, scope: !8844)
!8868 = distinct !DISubprogram(name: "memcmp", scope: !8634, file: !8634, line: 239, type: !8869, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8871)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{!105, !13, !13, !111}
!8871 = !{!8872, !8873, !8874, !8875, !8876}
!8872 = !DILocalVariable(name: "m1", arg: 1, scope: !8868, file: !8634, line: 239, type: !13)
!8873 = !DILocalVariable(name: "m2", arg: 2, scope: !8868, file: !8634, line: 239, type: !13)
!8874 = !DILocalVariable(name: "n", arg: 3, scope: !8868, file: !8634, line: 239, type: !111)
!8875 = !DILocalVariable(name: "c1", scope: !8868, file: !8634, line: 241, type: !269)
!8876 = !DILocalVariable(name: "c2", scope: !8868, file: !8634, line: 242, type: !269)
!8877 = !DILocation(line: 0, scope: !8868)
!8878 = !DILocation(line: 244, column: 7, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8868, file: !8634, line: 244, column: 6)
!8880 = !DILocation(line: 244, column: 6, scope: !8868)
!8881 = !DILocation(line: 248, column: 10, scope: !8868)
!8882 = !DILocation(line: 248, column: 14, scope: !8868)
!8883 = !DILocation(line: 248, column: 19, scope: !8868)
!8884 = !DILocation(line: 248, column: 2, scope: !8868)
!8885 = !DILocation(line: 248, column: 23, scope: !8868)
!8886 = !DILocation(line: 248, column: 30, scope: !8868)
!8887 = !DILocation(line: 248, column: 27, scope: !8868)
!8888 = !DILocation(line: 249, column: 5, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8868, file: !8634, line: 248, column: 36)
!8890 = !DILocation(line: 250, column: 5, scope: !8889)
!8891 = distinct !{!8891, !8884, !8892}
!8892 = !DILocation(line: 251, column: 2, scope: !8868)
!8893 = !DILocation(line: 253, column: 9, scope: !8868)
!8894 = !DILocation(line: 253, column: 15, scope: !8868)
!8895 = !DILocation(line: 253, column: 13, scope: !8868)
!8896 = !DILocation(line: 253, column: 2, scope: !8868)
!8897 = !DILocation(line: 254, column: 1, scope: !8868)
!8898 = distinct !DISubprogram(name: "memmove", scope: !8634, file: !8634, line: 263, type: !8899, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8901)
!8899 = !DISubroutineType(types: !8900)
!8900 = !{!104, !104, !13, !111}
!8901 = !{!8902, !8903, !8904, !8905, !8906}
!8902 = !DILocalVariable(name: "d", arg: 1, scope: !8898, file: !8634, line: 263, type: !104)
!8903 = !DILocalVariable(name: "s", arg: 2, scope: !8898, file: !8634, line: 263, type: !13)
!8904 = !DILocalVariable(name: "n", arg: 3, scope: !8898, file: !8634, line: 263, type: !111)
!8905 = !DILocalVariable(name: "dest", scope: !8898, file: !8634, line: 265, type: !102)
!8906 = !DILocalVariable(name: "src", scope: !8898, file: !8634, line: 266, type: !269)
!8907 = !DILocation(line: 0, scope: !8898)
!8908 = !DILocation(line: 268, column: 21, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8898, file: !8634, line: 268, column: 6)
!8910 = !DILocation(line: 268, column: 28, scope: !8909)
!8911 = !DILocation(line: 268, column: 6, scope: !8898)
!8912 = !DILocation(line: 280, column: 12, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8909, file: !8634, line: 278, column: 9)
!8914 = !DILocation(line: 280, column: 3, scope: !8913)
!8915 = !DILocation(line: 275, column: 5, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !8634, line: 274, column: 17)
!8917 = distinct !DILexicalBlock(scope: !8909, file: !8634, line: 268, column: 33)
!8918 = !DILocation(line: 276, column: 14, scope: !8916)
!8919 = !DILocation(line: 276, column: 4, scope: !8916)
!8920 = !DILocation(line: 276, column: 12, scope: !8916)
!8921 = !DILocation(line: 274, column: 12, scope: !8917)
!8922 = !DILocation(line: 274, column: 3, scope: !8917)
!8923 = distinct !{!8923, !8922, !8924}
!8924 = !DILocation(line: 277, column: 3, scope: !8917)
!8925 = !DILocation(line: 281, column: 12, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8913, file: !8634, line: 280, column: 17)
!8927 = !DILocation(line: 281, column: 10, scope: !8926)
!8928 = !DILocation(line: 282, column: 8, scope: !8926)
!8929 = !DILocation(line: 283, column: 7, scope: !8926)
!8930 = !DILocation(line: 284, column: 5, scope: !8926)
!8931 = distinct !{!8931, !8914, !8932}
!8932 = !DILocation(line: 285, column: 3, scope: !8913)
!8933 = !DILocation(line: 288, column: 2, scope: !8898)
!8934 = distinct !DISubprogram(name: "memcpy", scope: !8634, file: !8634, line: 298, type: !8935, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8939)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!104, !8937, !8938, !111}
!8937 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8938 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8939 = !{!8940, !8941, !8942, !8943, !8944}
!8940 = !DILocalVariable(name: "d", arg: 1, scope: !8934, file: !8634, line: 298, type: !8937)
!8941 = !DILocalVariable(name: "s", arg: 2, scope: !8934, file: !8634, line: 298, type: !8938)
!8942 = !DILocalVariable(name: "n", arg: 3, scope: !8934, file: !8634, line: 298, type: !111)
!8943 = !DILocalVariable(name: "d_byte", scope: !8934, file: !8634, line: 302, type: !788)
!8944 = !DILocalVariable(name: "s_byte", scope: !8934, file: !8634, line: 303, type: !2402)
!8945 = !DILocation(line: 0, scope: !8934)
!8946 = !DILocation(line: 337, column: 11, scope: !8934)
!8947 = !DILocation(line: 337, column: 2, scope: !8934)
!8948 = !DILocation(line: 338, column: 25, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8934, file: !8634, line: 337, column: 16)
!8950 = !DILocation(line: 338, column: 17, scope: !8949)
!8951 = !DILocation(line: 338, column: 11, scope: !8949)
!8952 = !DILocation(line: 338, column: 15, scope: !8949)
!8953 = !DILocation(line: 339, column: 4, scope: !8949)
!8954 = distinct !{!8954, !8947, !8955}
!8955 = !DILocation(line: 340, column: 2, scope: !8934)
!8956 = !DILocation(line: 342, column: 2, scope: !8934)
!8957 = distinct !DISubprogram(name: "memset", scope: !8634, file: !8634, line: 352, type: !8958, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8960)
!8958 = !DISubroutineType(types: !8959)
!8959 = !{!104, !104, !105, !111}
!8960 = !{!8961, !8962, !8963, !8964, !8965}
!8961 = !DILocalVariable(name: "buf", arg: 1, scope: !8957, file: !8634, line: 352, type: !104)
!8962 = !DILocalVariable(name: "c", arg: 2, scope: !8957, file: !8634, line: 352, type: !105)
!8963 = !DILocalVariable(name: "n", arg: 3, scope: !8957, file: !8634, line: 352, type: !111)
!8964 = !DILocalVariable(name: "d_byte", scope: !8957, file: !8634, line: 356, type: !788)
!8965 = !DILocalVariable(name: "c_byte", scope: !8957, file: !8634, line: 357, type: !170)
!8966 = !DILocation(line: 0, scope: !8957)
!8967 = !DILocation(line: 357, column: 25, scope: !8957)
!8968 = !DILocation(line: 389, column: 11, scope: !8957)
!8969 = !DILocation(line: 389, column: 2, scope: !8957)
!8970 = !DILocation(line: 390, column: 11, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8957, file: !8634, line: 389, column: 16)
!8972 = !DILocation(line: 390, column: 15, scope: !8971)
!8973 = !DILocation(line: 391, column: 4, scope: !8971)
!8974 = distinct !{!8974, !8969, !8975}
!8975 = !DILocation(line: 392, column: 2, scope: !8957)
!8976 = !DILocation(line: 394, column: 2, scope: !8957)
!8977 = distinct !DISubprogram(name: "memchr", scope: !8634, file: !8634, line: 404, type: !8978, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !8980)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!104, !13, !105, !111}
!8980 = !{!8981, !8982, !8983, !8984}
!8981 = !DILocalVariable(name: "s", arg: 1, scope: !8977, file: !8634, line: 404, type: !13)
!8982 = !DILocalVariable(name: "c", arg: 2, scope: !8977, file: !8634, line: 404, type: !105)
!8983 = !DILocalVariable(name: "n", arg: 3, scope: !8977, file: !8634, line: 404, type: !111)
!8984 = !DILocalVariable(name: "p", scope: !8985, file: !8634, line: 407, type: !2402)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !8634, line: 406, column: 14)
!8986 = distinct !DILexicalBlock(scope: !8977, file: !8634, line: 406, column: 6)
!8987 = !DILocation(line: 0, scope: !8977)
!8988 = !DILocation(line: 406, column: 8, scope: !8986)
!8989 = !DILocation(line: 406, column: 6, scope: !8977)
!8990 = !DILocation(line: 409, column: 3, scope: !8985)
!8991 = !DILocation(line: 0, scope: !8985)
!8992 = !DILocation(line: 410, column: 8, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !8634, line: 410, column: 8)
!8994 = distinct !DILexicalBlock(scope: !8985, file: !8634, line: 409, column: 6)
!8995 = !DILocation(line: 410, column: 13, scope: !8993)
!8996 = !DILocation(line: 410, column: 8, scope: !8994)
!8997 = distinct !{!8997, !8990, !8998}
!8998 = !DILocation(line: 414, column: 20, scope: !8985)
!8999 = !DILocation(line: 417, column: 2, scope: !8977)
!9000 = !DILocation(line: 418, column: 1, scope: !8977)
!9001 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !733, file: !733, line: 23, type: !4167, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9002)
!9002 = !{!9003}
!9003 = !DILocalVariable(name: "hook", arg: 1, scope: !9001, file: !733, line: 23, type: !447)
!9004 = !DILocation(line: 0, scope: !9001)
!9005 = !DILocation(line: 25, column: 15, scope: !9001)
!9006 = !DILocation(line: 26, column: 1, scope: !9001)
!9007 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !733, file: !733, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9008)
!9008 = !{!9009}
!9009 = !DILocalVariable(name: "c", arg: 1, scope: !9007, file: !733, line: 14, type: !105)
!9010 = !DILocation(line: 0, scope: !9007)
!9011 = !DILocation(line: 18, column: 2, scope: !9007)
!9012 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !733, file: !733, line: 28, type: !9013, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9015)
!9013 = !DISubroutineType(types: !9014)
!9014 = !{!105, !105, !729}
!9015 = !{!9016, !9017}
!9016 = !DILocalVariable(name: "c", arg: 1, scope: !9012, file: !733, line: 28, type: !105)
!9017 = !DILocalVariable(name: "stream", arg: 2, scope: !9012, file: !733, line: 28, type: !729)
!9018 = !DILocation(line: 0, scope: !9012)
!9019 = !DILocation(line: 30, column: 27, scope: !9012)
!9020 = !DILocation(line: 30, column: 50, scope: !9012)
!9021 = !DILocation(line: 30, column: 9, scope: !9012)
!9022 = !DILocation(line: 30, column: 2, scope: !9012)
!9023 = distinct !DISubprogram(name: "fputc", scope: !733, file: !733, line: 41, type: !9013, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9024)
!9024 = !{!9025, !9026}
!9025 = !DILocalVariable(name: "c", arg: 1, scope: !9023, file: !733, line: 41, type: !105)
!9026 = !DILocalVariable(name: "stream", arg: 2, scope: !9023, file: !733, line: 41, type: !729)
!9027 = !DILocation(line: 0, scope: !9023)
!9028 = !DILocation(line: 43, column: 9, scope: !9023)
!9029 = !DILocation(line: 43, column: 2, scope: !9023)
!9030 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9031, file: !9031, line: 72, type: !9013, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9032)
!9031 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!9032 = !{!9033, !9034}
!9033 = !DILocalVariable(name: "c", arg: 1, scope: !9030, file: !9031, line: 72, type: !105)
!9034 = !DILocalVariable(name: "stream", arg: 2, scope: !9030, file: !9031, line: 72, type: !729)
!9035 = !DILocation(line: 0, scope: !9030)
!9036 = !DILocation(line: 81, column: 2, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9030, file: !9031, line: 81, column: 2)
!9038 = !{i64 2151159494}
!9039 = !DILocation(line: 82, column: 9, scope: !9030)
!9040 = !DILocation(line: 82, column: 2, scope: !9030)
!9041 = distinct !DISubprogram(name: "fputs", scope: !733, file: !733, line: 46, type: !9042, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9045)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{!105, !8638, !9044}
!9044 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !729)
!9045 = !{!9046, !9047, !9048, !9049}
!9046 = !DILocalVariable(name: "s", arg: 1, scope: !9041, file: !733, line: 46, type: !8638)
!9047 = !DILocalVariable(name: "stream", arg: 2, scope: !9041, file: !733, line: 46, type: !9044)
!9048 = !DILocalVariable(name: "len", scope: !9041, file: !733, line: 48, type: !105)
!9049 = !DILocalVariable(name: "ret", scope: !9041, file: !733, line: 49, type: !105)
!9050 = !DILocation(line: 0, scope: !9041)
!9051 = !DILocation(line: 48, column: 12, scope: !9041)
!9052 = !DILocation(line: 51, column: 8, scope: !9041)
!9053 = !DILocation(line: 53, column: 13, scope: !9041)
!9054 = !DILocation(line: 53, column: 9, scope: !9041)
!9055 = !DILocation(line: 53, column: 2, scope: !9041)
!9056 = distinct !DISubprogram(name: "fwrite", scope: !733, file: !733, line: 99, type: !9057, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9059)
!9057 = !DISubroutineType(types: !9058)
!9058 = !{!111, !8938, !111, !111, !9044}
!9059 = !{!9060, !9061, !9062, !9063}
!9060 = !DILocalVariable(name: "ptr", arg: 1, scope: !9056, file: !733, line: 99, type: !8938)
!9061 = !DILocalVariable(name: "size", arg: 2, scope: !9056, file: !733, line: 99, type: !111)
!9062 = !DILocalVariable(name: "nitems", arg: 3, scope: !9056, file: !733, line: 99, type: !111)
!9063 = !DILocalVariable(name: "stream", arg: 4, scope: !9056, file: !733, line: 100, type: !9044)
!9064 = !DILocation(line: 0, scope: !9056)
!9065 = !DILocation(line: 102, column: 9, scope: !9056)
!9066 = !DILocation(line: 102, column: 2, scope: !9056)
!9067 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9031, file: !9031, line: 96, type: !9057, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9068)
!9068 = !{!9069, !9070, !9071, !9072}
!9069 = !DILocalVariable(name: "ptr", arg: 1, scope: !9067, file: !9031, line: 96, type: !8938)
!9070 = !DILocalVariable(name: "size", arg: 2, scope: !9067, file: !9031, line: 96, type: !111)
!9071 = !DILocalVariable(name: "nitems", arg: 3, scope: !9067, file: !9031, line: 96, type: !111)
!9072 = !DILocalVariable(name: "stream", arg: 4, scope: !9067, file: !9031, line: 96, type: !9044)
!9073 = !DILocation(line: 0, scope: !9067)
!9074 = !DILocation(line: 107, column: 2, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9067, file: !9031, line: 107, column: 2)
!9076 = !{i64 2151159598}
!9077 = !DILocation(line: 108, column: 9, scope: !9067)
!9078 = !DILocation(line: 108, column: 2, scope: !9067)
!9079 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !733, file: !733, line: 56, type: !9057, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9080)
!9080 = !{!9081, !9082, !9083, !9084, !9085, !9086, !9087, !9088}
!9081 = !DILocalVariable(name: "ptr", arg: 1, scope: !9079, file: !733, line: 56, type: !8938)
!9082 = !DILocalVariable(name: "size", arg: 2, scope: !9079, file: !733, line: 56, type: !111)
!9083 = !DILocalVariable(name: "nitems", arg: 3, scope: !9079, file: !733, line: 57, type: !111)
!9084 = !DILocalVariable(name: "stream", arg: 4, scope: !9079, file: !733, line: 57, type: !9044)
!9085 = !DILocalVariable(name: "i", scope: !9079, file: !733, line: 59, type: !111)
!9086 = !DILocalVariable(name: "j", scope: !9079, file: !733, line: 60, type: !111)
!9087 = !DILocalVariable(name: "p", scope: !9079, file: !733, line: 61, type: !2402)
!9088 = !DILabel(scope: !9079, name: "done", file: !733, line: 82)
!9089 = !DILocation(line: 0, scope: !9079)
!9090 = !DILocation(line: 63, column: 14, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9079, file: !733, line: 63, column: 6)
!9092 = !DILocation(line: 63, column: 24, scope: !9091)
!9093 = !DILocation(line: 72, column: 3, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9079, file: !733, line: 70, column: 5)
!9095 = !DILocation(line: 0, scope: !9094)
!9096 = !DILocation(line: 73, column: 8, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !733, line: 73, column: 8)
!9098 = distinct !DILexicalBlock(scope: !9094, file: !733, line: 72, column: 6)
!9099 = !DILocation(line: 73, column: 29, scope: !9097)
!9100 = !DILocation(line: 73, column: 27, scope: !9097)
!9101 = !DILocation(line: 73, column: 21, scope: !9097)
!9102 = !DILocation(line: 73, column: 33, scope: !9097)
!9103 = !DILocation(line: 73, column: 8, scope: !9098)
!9104 = !DILocation(line: 76, column: 5, scope: !9098)
!9105 = !DILocation(line: 77, column: 14, scope: !9094)
!9106 = !DILocation(line: 77, column: 3, scope: !9098)
!9107 = distinct !{!9107, !9093, !9108}
!9108 = !DILocation(line: 77, column: 17, scope: !9094)
!9109 = !DILocation(line: 79, column: 4, scope: !9094)
!9110 = !DILocation(line: 80, column: 13, scope: !9079)
!9111 = !DILocation(line: 80, column: 2, scope: !9094)
!9112 = distinct !{!9112, !9113, !9114}
!9113 = !DILocation(line: 70, column: 2, scope: !9079)
!9114 = !DILocation(line: 80, column: 16, scope: !9079)
!9115 = !DILocation(line: 82, column: 1, scope: !9079)
!9116 = !DILocation(line: 83, column: 17, scope: !9079)
!9117 = !DILocation(line: 83, column: 2, scope: !9079)
!9118 = !DILocation(line: 84, column: 1, scope: !9079)
!9119 = distinct !DISubprogram(name: "puts", scope: !733, file: !733, line: 106, type: !9120, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !9122)
!9120 = !DISubroutineType(types: !9121)
!9121 = !{!105, !269}
!9122 = !{!9123}
!9123 = !DILocalVariable(name: "s", arg: 1, scope: !9119, file: !733, line: 106, type: !269)
!9124 = !DILocation(line: 0, scope: !9119)
!9125 = !DILocation(line: 108, column: 6, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9119, file: !733, line: 108, column: 6)
!9127 = !DILocation(line: 108, column: 23, scope: !9126)
!9128 = !DILocation(line: 108, column: 6, scope: !9119)
!9129 = !DILocation(line: 112, column: 9, scope: !9119)
!9130 = !DILocation(line: 112, column: 29, scope: !9119)
!9131 = !DILocation(line: 112, column: 2, scope: !9119)
!9132 = !DILocation(line: 113, column: 1, scope: !9119)
!9133 = distinct !DISubprogram(name: "uart_console_init", scope: !818, file: !818, line: 588, type: !795, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9134)
!9134 = !{!9135}
!9135 = !DILocalVariable(name: "arg", arg: 1, scope: !9133, file: !818, line: 588, type: !773)
!9136 = !DILocation(line: 0, scope: !9133)
!9137 = !DILocation(line: 593, column: 7, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9133, file: !818, line: 593, column: 6)
!9139 = !DILocation(line: 593, column: 6, scope: !9133)
!9140 = !DILocation(line: 597, column: 2, scope: !9133)
!9141 = !DILocation(line: 599, column: 2, scope: !9133)
!9142 = !DILocation(line: 600, column: 1, scope: !9133)
!9143 = distinct !DISubprogram(name: "device_is_ready", scope: !9144, file: !9144, line: 47, type: !9145, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9147)
!9144 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!540, !773}
!9147 = !{!9148}
!9148 = !DILocalVariable(name: "dev", arg: 1, scope: !9143, file: !9144, line: 47, type: !773)
!9149 = !DILocation(line: 0, scope: !9143)
!9150 = !DILocation(line: 55, column: 2, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9143, file: !9144, line: 55, column: 2)
!9152 = !{i64 2151292153}
!9153 = !DILocation(line: 56, column: 9, scope: !9143)
!9154 = !DILocation(line: 56, column: 2, scope: !9143)
!9155 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !818, file: !818, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !397)
!9156 = !DILocation(line: 576, column: 2, scope: !9155)
!9157 = !DILocation(line: 579, column: 2, scope: !9155)
!9158 = !DILocation(line: 581, column: 1, scope: !9155)
!9159 = distinct !DISubprogram(name: "console_out", scope: !818, file: !818, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9160)
!9160 = !{!9161}
!9161 = !DILocalVariable(name: "c", arg: 1, scope: !9159, file: !818, line: 77, type: !105)
!9162 = !DILocation(line: 0, scope: !9159)
!9163 = !DILocation(line: 89, column: 11, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9159, file: !818, line: 89, column: 6)
!9165 = !DILocation(line: 89, column: 6, scope: !9159)
!9166 = !DILocation(line: 90, column: 3, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9164, file: !818, line: 89, column: 17)
!9168 = !DILocation(line: 91, column: 2, scope: !9167)
!9169 = !DILocation(line: 92, column: 34, scope: !9159)
!9170 = !DILocation(line: 92, column: 2, scope: !9159)
!9171 = !DILocation(line: 94, column: 2, scope: !9159)
!9172 = distinct !DISubprogram(name: "uart_poll_out", scope: !9173, file: !9173, line: 95, type: !791, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9174)
!9173 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!9174 = !{!9175, !9176}
!9175 = !DILocalVariable(name: "dev", arg: 1, scope: !9172, file: !9173, line: 95, type: !773)
!9176 = !DILocalVariable(name: "out_char", arg: 2, scope: !9172, file: !9173, line: 95, type: !170)
!9177 = !DILocation(line: 0, scope: !9172)
!9178 = !DILocation(line: 105, column: 2, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9172, file: !9173, line: 105, column: 2)
!9180 = !{i64 2151375544}
!9181 = !DILocation(line: 106, column: 2, scope: !9172)
!9182 = !DILocation(line: 107, column: 1, scope: !9172)
!9183 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !767, file: !767, line: 574, type: !791, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9184)
!9184 = !{!9185, !9186, !9187}
!9185 = !DILocalVariable(name: "dev", arg: 1, scope: !9183, file: !767, line: 574, type: !773)
!9186 = !DILocalVariable(name: "out_char", arg: 2, scope: !9183, file: !767, line: 575, type: !170)
!9187 = !DILocalVariable(name: "api", scope: !9183, file: !767, line: 577, type: !764)
!9188 = !DILocation(line: 0, scope: !9183)
!9189 = !DILocation(line: 578, column: 40, scope: !9183)
!9190 = !DILocation(line: 580, column: 7, scope: !9183)
!9191 = !DILocation(line: 580, column: 2, scope: !9183)
!9192 = !DILocation(line: 581, column: 1, scope: !9183)
!9193 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !529, file: !529, line: 730, type: !9145, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9194)
!9194 = !{!9195}
!9195 = !DILocalVariable(name: "dev", arg: 1, scope: !9193, file: !529, line: 730, type: !773)
!9196 = !DILocation(line: 0, scope: !9193)
!9197 = !DILocation(line: 732, column: 9, scope: !9193)
!9198 = !DILocation(line: 732, column: 2, scope: !9193)
!9199 = distinct !DISubprogram(name: "uart_register_input", scope: !818, file: !818, line: 560, type: !9200, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !761, retainedNodes: !9247)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{null, !9202, !9202, !9244}
!9202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9203, size: 32)
!9203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !9204)
!9204 = !{!9205}
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9203, file: !122, line: 2209, baseType: !9206, size: 160)
!9206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !9207)
!9207 = !{!9208, !9221, !9225}
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9206, file: !122, line: 1710, baseType: !9209, size: 64)
!9209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9210, line: 46, baseType: !9211)
!9210 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9210, line: 41, size: 64, elements: !9212)
!9212 = !{!9213, !9220}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9211, file: !9210, line: 42, baseType: !9214, size: 32)
!9214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9215, size: 32)
!9215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9210, line: 39, baseType: !9216)
!9216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9210, line: 35, size: 32, elements: !9217)
!9217 = !{!9218}
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9216, file: !9210, line: 36, baseType: !9219, size: 32)
!9219 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9210, line: 32, baseType: !113)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9211, file: !9210, line: 43, baseType: !9214, size: 32, offset: 32)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9206, file: !122, line: 1711, baseType: !9222, size: 32, offset: 64)
!9222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !9223)
!9223 = !{!9224}
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9222, file: !236, line: 52, baseType: !22, size: 32)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9206, file: !122, line: 1712, baseType: !9226, size: 64, offset: 96)
!9226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !9227)
!9227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !9228)
!9228 = !{!9229}
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9227, file: !163, line: 232, baseType: !9230, size: 64)
!9230 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !9231)
!9231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !9232)
!9232 = !{!9233, !9239}
!9233 = !DIDerivedType(tag: DW_TAG_member, scope: !9231, file: !137, line: 38, baseType: !9234, size: 32)
!9234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9231, file: !137, line: 38, size: 32, elements: !9235)
!9235 = !{!9236, !9238}
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9234, file: !137, line: 39, baseType: !9237, size: 32)
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9231, size: 32)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9234, file: !137, line: 40, baseType: !9237, size: 32)
!9239 = !DIDerivedType(tag: DW_TAG_member, scope: !9231, file: !137, line: 42, baseType: !9240, size: 32, offset: 32)
!9240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9231, file: !137, line: 42, size: 32, elements: !9241)
!9241 = !{!9242, !9243}
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9240, file: !137, line: 43, baseType: !9237, size: 32)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9240, file: !137, line: 44, baseType: !9237, size: 32)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9245, size: 32)
!9245 = !DISubroutineType(types: !9246)
!9246 = !{!169, !102, !169}
!9247 = !{!9248, !9249, !9250}
!9248 = !DILocalVariable(name: "avail", arg: 1, scope: !9199, file: !818, line: 560, type: !9202)
!9249 = !DILocalVariable(name: "lines", arg: 2, scope: !9199, file: !818, line: 560, type: !9202)
!9250 = !DILocalVariable(name: "completion", arg: 3, scope: !9199, file: !818, line: 561, type: !9244)
!9251 = !DILocation(line: 0, scope: !9199)
!9252 = !DILocation(line: 566, column: 1, scope: !9199)
!9253 = distinct !DISubprogram(name: "wdt_sam_setup", scope: !888, file: !888, line: 108, type: !838, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9254)
!9254 = !{!9255, !9256, !9257, !9259, !9261}
!9255 = !DILocalVariable(name: "dev", arg: 1, scope: !9253, file: !888, line: 108, type: !840)
!9256 = !DILocalVariable(name: "options", arg: 2, scope: !9253, file: !888, line: 108, type: !169)
!9257 = !DILocalVariable(name: "config", scope: !9253, file: !888, line: 110, type: !9258)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!9259 = !DILocalVariable(name: "wdt", scope: !9253, file: !888, line: 112, type: !9260)
!9260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!9261 = !DILocalVariable(name: "data", scope: !9253, file: !888, line: 113, type: !9262)
!9262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 32)
!9263 = !DILocation(line: 0, scope: !9253)
!9264 = !DILocation(line: 110, column: 46, scope: !9253)
!9265 = !DILocation(line: 112, column: 28, scope: !9253)
!9266 = !DILocation(line: 113, column: 39, scope: !9253)
!9267 = !DILocation(line: 115, column: 13, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9253, file: !888, line: 115, column: 6)
!9269 = !DILocation(line: 115, column: 6, scope: !9253)
!9270 = !DILocation(line: 116, column: 3, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9272, file: !888, line: 116, column: 3)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !888, line: 116, column: 3)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !888, line: 116, column: 3)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !888, line: 116, column: 3)
!9275 = distinct !DILexicalBlock(scope: !9268, file: !888, line: 115, column: 28)
!9276 = !DILocation(line: 117, column: 3, scope: !9275)
!9277 = !DILocation(line: 123, column: 12, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9253, file: !888, line: 123, column: 6)
!9279 = !DILocation(line: 123, column: 6, scope: !9253)
!9280 = !DILocation(line: 127, column: 7, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9253, file: !888, line: 127, column: 6)
!9282 = !DILocation(line: 127, column: 15, scope: !9281)
!9283 = !DILocation(line: 127, column: 41, scope: !9281)
!9284 = !DILocation(line: 127, column: 6, scope: !9253)
!9285 = !DILocation(line: 128, column: 9, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9281, file: !888, line: 127, column: 68)
!9287 = !DILocation(line: 128, column: 14, scope: !9286)
!9288 = !DILocation(line: 129, column: 2, scope: !9286)
!9289 = !DILocation(line: 131, column: 15, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9253, file: !888, line: 131, column: 6)
!9291 = !DILocation(line: 131, column: 46, scope: !9290)
!9292 = !DILocation(line: 131, column: 6, scope: !9253)
!9293 = !DILocation(line: 133, column: 14, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9290, file: !888, line: 132, column: 35)
!9295 = !DILocation(line: 134, column: 2, scope: !9294)
!9296 = !DILocation(line: 136, column: 22, scope: !9253)
!9297 = !DILocation(line: 136, column: 7, scope: !9253)
!9298 = !DILocation(line: 136, column: 14, scope: !9253)
!9299 = !DILocation(line: 137, column: 17, scope: !9253)
!9300 = !DILocation(line: 139, column: 2, scope: !9253)
!9301 = !DILocation(line: 140, column: 1, scope: !9253)
!9302 = distinct !DISubprogram(name: "wdt_sam_disable", scope: !888, file: !888, line: 83, type: !858, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9303)
!9303 = !{!9304, !9305, !9306, !9307}
!9304 = !DILocalVariable(name: "dev", arg: 1, scope: !9302, file: !888, line: 83, type: !840)
!9305 = !DILocalVariable(name: "config", scope: !9302, file: !888, line: 85, type: !9258)
!9306 = !DILocalVariable(name: "wdt", scope: !9302, file: !888, line: 87, type: !9260)
!9307 = !DILocalVariable(name: "data", scope: !9302, file: !888, line: 88, type: !9262)
!9308 = !DILocation(line: 0, scope: !9302)
!9309 = !DILocation(line: 88, column: 39, scope: !9302)
!9310 = !DILocation(line: 93, column: 12, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9302, file: !888, line: 93, column: 6)
!9312 = !DILocation(line: 93, column: 6, scope: !9302)
!9313 = !DILocation(line: 85, column: 46, scope: !9302)
!9314 = !DILocation(line: 87, column: 28, scope: !9302)
!9315 = !DILocation(line: 102, column: 7, scope: !9302)
!9316 = !DILocation(line: 102, column: 14, scope: !9302)
!9317 = !DILocation(line: 103, column: 17, scope: !9302)
!9318 = !DILocation(line: 105, column: 2, scope: !9302)
!9319 = !DILocation(line: 106, column: 1, scope: !9302)
!9320 = distinct !DISubprogram(name: "wdt_sam_install_timeout", scope: !888, file: !888, line: 142, type: !863, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9321)
!9321 = !{!9322, !9323, !9324, !9325, !9326}
!9322 = !DILocalVariable(name: "dev", arg: 1, scope: !9320, file: !888, line: 142, type: !840)
!9323 = !DILocalVariable(name: "cfg", arg: 2, scope: !9320, file: !888, line: 143, type: !865)
!9324 = !DILocalVariable(name: "wdt_mode", scope: !9320, file: !888, line: 145, type: !113)
!9325 = !DILocalVariable(name: "timeout_value", scope: !9320, file: !888, line: 146, type: !105)
!9326 = !DILocalVariable(name: "data", scope: !9320, file: !888, line: 148, type: !9262)
!9327 = !DILocation(line: 0, scope: !9320)
!9328 = !DILocation(line: 148, column: 39, scope: !9320)
!9329 = !DILocation(line: 150, column: 12, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9320, file: !888, line: 150, column: 6)
!9331 = !DILocation(line: 150, column: 6, scope: !9320)
!9332 = !DILocation(line: 151, column: 3, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9334, file: !888, line: 151, column: 3)
!9334 = distinct !DILexicalBlock(scope: !9335, file: !888, line: 151, column: 3)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !888, line: 151, column: 3)
!9336 = distinct !DILexicalBlock(scope: !9337, file: !888, line: 151, column: 3)
!9337 = distinct !DILexicalBlock(scope: !9330, file: !888, line: 150, column: 27)
!9338 = !DILocation(line: 152, column: 3, scope: !9337)
!9339 = !DILocation(line: 155, column: 18, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9320, file: !888, line: 155, column: 6)
!9341 = !DILocation(line: 155, column: 22, scope: !9340)
!9342 = !DILocation(line: 155, column: 6, scope: !9320)
!9343 = !DILocation(line: 164, column: 54, scope: !9320)
!9344 = !DILocation(line: 164, column: 18, scope: !9320)
!9345 = !DILocation(line: 167, column: 20, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9320, file: !888, line: 167, column: 6)
!9347 = !DILocation(line: 167, column: 6, scope: !9320)
!9348 = !DILocation(line: 171, column: 15, scope: !9320)
!9349 = !DILocation(line: 171, column: 2, scope: !9320)
!9350 = !DILocation(line: 179, column: 12, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9352, file: !888, line: 179, column: 7)
!9352 = distinct !DILexicalBlock(scope: !9320, file: !888, line: 171, column: 22)
!9353 = !DILocation(line: 179, column: 7, scope: !9351)
!9354 = !DILocation(line: 179, column: 7, scope: !9352)
!9355 = !DILocation(line: 181, column: 10, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9351, file: !888, line: 179, column: 22)
!9357 = !DILocation(line: 181, column: 13, scope: !9356)
!9358 = !DILocation(line: 186, column: 3, scope: !9352)
!9359 = !DILocation(line: 183, column: 4, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !888, line: 183, column: 4)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !888, line: 183, column: 4)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !888, line: 183, column: 4)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !888, line: 183, column: 4)
!9364 = distinct !DILexicalBlock(scope: !9351, file: !888, line: 182, column: 10)
!9365 = !DILocation(line: 184, column: 4, scope: !9364)
!9366 = !DILocation(line: 195, column: 3, scope: !9352)
!9367 = !DILocation(line: 198, column: 3, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !888, line: 198, column: 3)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !888, line: 198, column: 3)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !888, line: 198, column: 3)
!9371 = distinct !DILexicalBlock(scope: !9352, file: !888, line: 198, column: 3)
!9372 = !DILocation(line: 199, column: 3, scope: !9352)
!9373 = !DILocation(line: 0, scope: !9352)
!9374 = !DILocation(line: 203, column: 8, scope: !9320)
!9375 = !DILocation(line: 204, column: 8, scope: !9320)
!9376 = !DILocation(line: 202, column: 24, scope: !9320)
!9377 = !DILocation(line: 203, column: 34, scope: !9320)
!9378 = !DILocation(line: 202, column: 8, scope: !9320)
!9379 = !DILocation(line: 202, column: 13, scope: !9320)
!9380 = !DILocation(line: 206, column: 22, scope: !9320)
!9381 = !DILocation(line: 208, column: 2, scope: !9320)
!9382 = !DILocation(line: 209, column: 1, scope: !9320)
!9383 = distinct !DISubprogram(name: "wdt_sam_feed", scope: !888, file: !888, line: 211, type: !883, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9384)
!9384 = !{!9385, !9386, !9387, !9388}
!9385 = !DILocalVariable(name: "dev", arg: 1, scope: !9383, file: !888, line: 211, type: !840)
!9386 = !DILocalVariable(name: "channel_id", arg: 2, scope: !9383, file: !888, line: 211, type: !105)
!9387 = !DILocalVariable(name: "config", scope: !9383, file: !888, line: 213, type: !9258)
!9388 = !DILocalVariable(name: "wdt", scope: !9383, file: !888, line: 220, type: !9260)
!9389 = !DILocation(line: 0, scope: !9383)
!9390 = !DILocation(line: 213, column: 46, scope: !9383)
!9391 = !DILocation(line: 220, column: 28, scope: !9383)
!9392 = !DILocation(line: 222, column: 7, scope: !9383)
!9393 = !DILocation(line: 222, column: 14, scope: !9383)
!9394 = !DILocation(line: 224, column: 2, scope: !9383)
!9395 = distinct !DISubprogram(name: "wdt_sam_convert_timeout", scope: !888, file: !888, line: 67, type: !9396, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9398)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{!105, !113, !113}
!9398 = !{!9399, !9400, !9401, !9402}
!9399 = !DILocalVariable(name: "timeout", arg: 1, scope: !9395, file: !888, line: 67, type: !113)
!9400 = !DILocalVariable(name: "sclk", arg: 2, scope: !9395, file: !888, line: 67, type: !113)
!9401 = !DILocalVariable(name: "max", scope: !9395, file: !888, line: 69, type: !113)
!9402 = !DILocalVariable(name: "min", scope: !9395, file: !888, line: 69, type: !113)
!9403 = !DILocation(line: 0, scope: !9395)
!9404 = !DILocation(line: 71, column: 20, scope: !9395)
!9405 = !DILocation(line: 72, column: 35, scope: !9395)
!9406 = !DILocation(line: 73, column: 12, scope: !9395)
!9407 = !DILocation(line: 74, column: 15, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9395, file: !888, line: 74, column: 6)
!9409 = !DILocation(line: 74, column: 22, scope: !9408)
!9410 = !DILocation(line: 75, column: 3, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !888, line: 75, column: 3)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !888, line: 75, column: 3)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !888, line: 75, column: 3)
!9414 = distinct !DILexicalBlock(scope: !9415, file: !888, line: 75, column: 3)
!9415 = distinct !DILexicalBlock(scope: !9408, file: !888, line: 74, column: 42)
!9416 = !DILocation(line: 77, column: 3, scope: !9415)
!9417 = !DILocation(line: 80, column: 9, scope: !9395)
!9418 = !DILocation(line: 80, column: 2, scope: !9395)
!9419 = !DILocation(line: 81, column: 1, scope: !9395)
!9420 = distinct !DISubprogram(name: "wdt_sam_isr", scope: !888, file: !888, line: 47, type: !9421, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9423)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{null, !840}
!9423 = !{!9424, !9425, !9426, !9427, !9428}
!9424 = !DILocalVariable(name: "dev", arg: 1, scope: !9420, file: !888, line: 47, type: !840)
!9425 = !DILocalVariable(name: "config", scope: !9420, file: !888, line: 49, type: !9258)
!9426 = !DILocalVariable(name: "wdt_sr", scope: !9420, file: !888, line: 50, type: !113)
!9427 = !DILocalVariable(name: "wdt", scope: !9420, file: !888, line: 51, type: !9260)
!9428 = !DILocalVariable(name: "data", scope: !9420, file: !888, line: 52, type: !9262)
!9429 = !DILocation(line: 0, scope: !9420)
!9430 = !DILocation(line: 49, column: 46, scope: !9420)
!9431 = !DILocation(line: 51, column: 28, scope: !9420)
!9432 = !DILocation(line: 52, column: 39, scope: !9420)
!9433 = !DILocation(line: 55, column: 16, scope: !9420)
!9434 = !DILocation(line: 57, column: 8, scope: !9420)
!9435 = !DILocation(line: 57, column: 2, scope: !9420)
!9436 = !DILocation(line: 58, column: 1, scope: !9420)
!9437 = distinct !DISubprogram(name: "wdt_sam_init", scope: !888, file: !888, line: 246, type: !858, scopeLine: 247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !827, retainedNodes: !9438)
!9438 = !{!9439}
!9439 = !DILocalVariable(name: "dev", arg: 1, scope: !9437, file: !888, line: 246, type: !840)
!9440 = !DILocation(line: 0, scope: !9437)
!9441 = !DILocation(line: 249, column: 2, scope: !9437)
!9442 = !DILocation(line: 252, column: 2, scope: !9437)
!9443 = !DILocation(line: 253, column: 2, scope: !9437)
!9444 = !DILocation(line: 240, column: 2, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !927, file: !888, line: 240, column: 2)
!9446 = !DILocation(line: 243, column: 2, scope: !927)
!9447 = !DILocation(line: 244, column: 1, scope: !927)
!9448 = distinct !DISubprogram(name: "uart_sam_poll_in", scope: !1038, file: !1038, line: 47, type: !992, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9449)
!9449 = !{!9450, !9451, !9452, !9455}
!9450 = !DILocalVariable(name: "dev", arg: 1, scope: !9448, file: !1038, line: 47, type: !994)
!9451 = !DILocalVariable(name: "c", arg: 2, scope: !9448, file: !1038, line: 47, type: !788)
!9452 = !DILocalVariable(name: "cfg", scope: !9448, file: !1038, line: 49, type: !9453)
!9453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9454)
!9454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!9455 = !DILocalVariable(name: "uart", scope: !9448, file: !1038, line: 51, type: !9456)
!9456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1089)
!9457 = !DILocation(line: 0, scope: !9448)
!9458 = !DILocation(line: 49, column: 50, scope: !9448)
!9459 = !DILocation(line: 51, column: 27, scope: !9448)
!9460 = !DILocation(line: 53, column: 14, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9448, file: !1038, line: 53, column: 6)
!9462 = !DILocation(line: 53, column: 22, scope: !9461)
!9463 = !DILocation(line: 53, column: 6, scope: !9448)
!9464 = !DILocation(line: 58, column: 28, scope: !9448)
!9465 = !DILocation(line: 58, column: 7, scope: !9448)
!9466 = !DILocation(line: 58, column: 5, scope: !9448)
!9467 = !DILocation(line: 60, column: 2, scope: !9448)
!9468 = !DILocation(line: 61, column: 1, scope: !9448)
!9469 = distinct !DISubprogram(name: "uart_sam_poll_out", scope: !1038, file: !1038, line: 63, type: !1011, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9470)
!9470 = !{!9471, !9472, !9473, !9474}
!9471 = !DILocalVariable(name: "dev", arg: 1, scope: !9469, file: !1038, line: 63, type: !994)
!9472 = !DILocalVariable(name: "c", arg: 2, scope: !9469, file: !1038, line: 63, type: !170)
!9473 = !DILocalVariable(name: "cfg", scope: !9469, file: !1038, line: 65, type: !9453)
!9474 = !DILocalVariable(name: "uart", scope: !9469, file: !1038, line: 67, type: !9456)
!9475 = !DILocation(line: 0, scope: !9469)
!9476 = !DILocation(line: 65, column: 50, scope: !9469)
!9477 = !DILocation(line: 67, column: 27, scope: !9469)
!9478 = !DILocation(line: 70, column: 2, scope: !9469)
!9479 = !DILocation(line: 70, column: 17, scope: !9469)
!9480 = !DILocation(line: 70, column: 25, scope: !9469)
!9481 = !DILocation(line: 70, column: 9, scope: !9469)
!9482 = distinct !{!9482, !9478, !9483}
!9483 = !DILocation(line: 71, column: 2, scope: !9469)
!9484 = !DILocation(line: 74, column: 19, scope: !9469)
!9485 = !DILocation(line: 74, column: 8, scope: !9469)
!9486 = !DILocation(line: 74, column: 17, scope: !9469)
!9487 = !DILocation(line: 75, column: 1, scope: !9469)
!9488 = distinct !DISubprogram(name: "uart_sam_err_check", scope: !1038, file: !1038, line: 77, type: !1015, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9489)
!9489 = !{!9490, !9491, !9492, !9496}
!9490 = !DILocalVariable(name: "dev", arg: 1, scope: !9488, file: !1038, line: 77, type: !994)
!9491 = !DILocalVariable(name: "cfg", scope: !9488, file: !1038, line: 79, type: !9453)
!9492 = !DILocalVariable(name: "uart", scope: !9488, file: !1038, line: 81, type: !9493)
!9493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9494)
!9494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9495, size: 32)
!9495 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1090)
!9496 = !DILocalVariable(name: "errors", scope: !9488, file: !1038, line: 82, type: !105)
!9497 = !DILocation(line: 0, scope: !9488)
!9498 = !DILocation(line: 79, column: 50, scope: !9488)
!9499 = !DILocation(line: 81, column: 36, scope: !9488)
!9500 = !DILocation(line: 84, column: 12, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9488, file: !1038, line: 84, column: 6)
!9502 = !DILocation(line: 84, column: 6, scope: !9488)
!9503 = !DILocation(line: 88, column: 12, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9488, file: !1038, line: 88, column: 6)
!9505 = !DILocation(line: 88, column: 6, scope: !9488)
!9506 = !DILocation(line: 92, column: 12, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9488, file: !1038, line: 92, column: 6)
!9508 = !DILocation(line: 92, column: 6, scope: !9488)
!9509 = !DILocation(line: 96, column: 2, scope: !9488)
!9510 = distinct !DISubprogram(name: "uart_sam_configure", scope: !1038, file: !1038, line: 164, type: !1019, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516}
!9512 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !1038, line: 164, type: !994)
!9513 = !DILocalVariable(name: "cfg", arg: 2, scope: !9510, file: !1038, line: 165, type: !1021)
!9514 = !DILocalVariable(name: "retval", scope: !9510, file: !1038, line: 167, type: !105)
!9515 = !DILocalVariable(name: "config", scope: !9510, file: !1038, line: 169, type: !9453)
!9516 = !DILocalVariable(name: "uart", scope: !9510, file: !1038, line: 171, type: !9493)
!9517 = !DILocation(line: 0, scope: !9510)
!9518 = !DILocation(line: 169, column: 53, scope: !9510)
!9519 = !DILocation(line: 171, column: 39, scope: !9510)
!9520 = !DILocation(line: 174, column: 11, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9510, file: !1038, line: 174, column: 6)
!9522 = !DILocation(line: 174, column: 21, scope: !9521)
!9523 = !DILocation(line: 174, column: 45, scope: !9521)
!9524 = !DILocation(line: 175, column: 8, scope: !9521)
!9525 = !DILocation(line: 175, column: 18, scope: !9521)
!9526 = !DILocation(line: 175, column: 42, scope: !9521)
!9527 = !DILocation(line: 176, column: 8, scope: !9521)
!9528 = !DILocation(line: 176, column: 18, scope: !9521)
!9529 = !DILocation(line: 174, column: 6, scope: !9510)
!9530 = !DILocation(line: 181, column: 8, scope: !9510)
!9531 = !DILocation(line: 181, column: 16, scope: !9510)
!9532 = !DILocation(line: 189, column: 40, scope: !9510)
!9533 = !DILocation(line: 189, column: 11, scope: !9510)
!9534 = !DILocation(line: 188, column: 8, scope: !9510)
!9535 = !DILocation(line: 188, column: 16, scope: !9510)
!9536 = !DILocation(line: 192, column: 43, scope: !9510)
!9537 = !DILocation(line: 192, column: 11, scope: !9510)
!9538 = !DILocation(line: 193, column: 13, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9510, file: !1038, line: 193, column: 6)
!9540 = !DILocation(line: 193, column: 6, scope: !9510)
!9541 = !DILocation(line: 198, column: 16, scope: !9510)
!9542 = !DILocation(line: 200, column: 2, scope: !9510)
!9543 = !DILocation(line: 201, column: 1, scope: !9510)
!9544 = distinct !DISubprogram(name: "uart_sam_config_get", scope: !1038, file: !1038, line: 203, type: !1032, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9545)
!9545 = !{!9546, !9547, !9548}
!9546 = !DILocalVariable(name: "dev", arg: 1, scope: !9544, file: !1038, line: 203, type: !994)
!9547 = !DILocalVariable(name: "cfg", arg: 2, scope: !9544, file: !1038, line: 204, type: !1034)
!9548 = !DILocalVariable(name: "dev_data", scope: !9544, file: !1038, line: 206, type: !9549)
!9549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9550)
!9550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!9551 = !DILocation(line: 0, scope: !9544)
!9552 = !DILocation(line: 206, column: 50, scope: !9544)
!9553 = !DILocation(line: 208, column: 28, scope: !9544)
!9554 = !DILocation(line: 208, column: 7, scope: !9544)
!9555 = !DILocation(line: 208, column: 16, scope: !9544)
!9556 = !DILocation(line: 209, column: 16, scope: !9544)
!9557 = !DILocation(line: 209, column: 7, scope: !9544)
!9558 = !DILocation(line: 209, column: 14, scope: !9544)
!9559 = !DILocation(line: 211, column: 7, scope: !9544)
!9560 = !DILocation(line: 211, column: 17, scope: !9544)
!9561 = !DILocation(line: 212, column: 7, scope: !9544)
!9562 = !DILocation(line: 212, column: 17, scope: !9544)
!9563 = !DILocation(line: 213, column: 7, scope: !9544)
!9564 = !DILocation(line: 213, column: 17, scope: !9544)
!9565 = !DILocation(line: 215, column: 2, scope: !9544)
!9566 = distinct !DISubprogram(name: "uart_sam_get_parity", scope: !1038, file: !1038, line: 143, type: !9567, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9569)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{!169, !994}
!9569 = !{!9570, !9571, !9572}
!9570 = !DILocalVariable(name: "dev", arg: 1, scope: !9566, file: !1038, line: 143, type: !994)
!9571 = !DILocalVariable(name: "cfg", scope: !9566, file: !1038, line: 145, type: !9453)
!9572 = !DILocalVariable(name: "uart", scope: !9566, file: !1038, line: 147, type: !9493)
!9573 = !DILocation(line: 0, scope: !9566)
!9574 = !DILocation(line: 145, column: 50, scope: !9566)
!9575 = !DILocation(line: 147, column: 36, scope: !9566)
!9576 = !DILocation(line: 149, column: 16, scope: !9566)
!9577 = !DILocation(line: 149, column: 2, scope: !9566)
!9578 = !DILocation(line: 162, column: 1, scope: !9566)
!9579 = distinct !DISubprogram(name: "uart_sam_cfg2sam_parity", scope: !1038, file: !1038, line: 126, type: !9580, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9582)
!9580 = !DISubroutineType(types: !9581)
!9581 = !{!113, !169}
!9582 = !{!9583}
!9583 = !DILocalVariable(name: "parity", arg: 1, scope: !9579, file: !1038, line: 126, type: !169)
!9584 = !DILocation(line: 0, scope: !9579)
!9585 = !DILocation(line: 128, column: 2, scope: !9579)
!9586 = !DILocation(line: 0, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9579, file: !1038, line: 128, column: 18)
!9588 = !DILocation(line: 141, column: 1, scope: !9579)
!9589 = distinct !DISubprogram(name: "uart_sam_baudrate_set", scope: !1038, file: !1038, line: 99, type: !9590, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9592)
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!105, !994, !113}
!9592 = !{!9593, !9594, !9595, !9596, !9597, !9598}
!9593 = !DILocalVariable(name: "dev", arg: 1, scope: !9589, file: !1038, line: 99, type: !994)
!9594 = !DILocalVariable(name: "baudrate", arg: 2, scope: !9589, file: !1038, line: 99, type: !113)
!9595 = !DILocalVariable(name: "dev_data", scope: !9589, file: !1038, line: 101, type: !9549)
!9596 = !DILocalVariable(name: "cfg", scope: !9589, file: !1038, line: 103, type: !9453)
!9597 = !DILocalVariable(name: "uart", scope: !9589, file: !1038, line: 105, type: !9493)
!9598 = !DILocalVariable(name: "divisor", scope: !9589, file: !1038, line: 107, type: !113)
!9599 = !DILocation(line: 0, scope: !9589)
!9600 = !DILocation(line: 101, column: 50, scope: !9589)
!9601 = !DILocation(line: 103, column: 50, scope: !9589)
!9602 = !DILocation(line: 105, column: 36, scope: !9589)
!9603 = !DILocation(line: 109, column: 2, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !1038, line: 109, column: 2)
!9605 = distinct !DILexicalBlock(scope: !9589, file: !1038, line: 109, column: 2)
!9606 = !DILocation(line: 109, column: 2, scope: !9605)
!9607 = !DILocation(line: 109, column: 2, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9604, file: !1038, line: 109, column: 2)
!9609 = !DILocation(line: 111, column: 2, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1038, line: 111, column: 2)
!9611 = distinct !DILexicalBlock(scope: !9589, file: !1038, line: 111, column: 2)
!9612 = !DILocation(line: 111, column: 2, scope: !9611)
!9613 = !DILocation(line: 111, column: 2, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !1038, line: 111, column: 2)
!9615 = !DILocation(line: 116, column: 14, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9589, file: !1038, line: 116, column: 6)
!9617 = !DILocation(line: 116, column: 6, scope: !9589)
!9618 = !DILocation(line: 114, column: 44, scope: !9589)
!9619 = !DILocation(line: 120, column: 8, scope: !9589)
!9620 = !DILocation(line: 120, column: 18, scope: !9589)
!9621 = !DILocation(line: 121, column: 12, scope: !9589)
!9622 = !DILocation(line: 121, column: 22, scope: !9589)
!9623 = !DILocation(line: 123, column: 2, scope: !9589)
!9624 = !DILocation(line: 124, column: 1, scope: !9589)
!9625 = distinct !DISubprogram(name: "uart_sam_init", scope: !1038, file: !1038, line: 383, type: !1015, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9626)
!9626 = !{!9627, !9628, !9629, !9630, !9631, !9632}
!9627 = !DILocalVariable(name: "dev", arg: 1, scope: !9625, file: !1038, line: 383, type: !994)
!9628 = !DILocalVariable(name: "retval", scope: !9625, file: !1038, line: 385, type: !105)
!9629 = !DILocalVariable(name: "cfg", scope: !9625, file: !1038, line: 387, type: !9453)
!9630 = !DILocalVariable(name: "dev_data", scope: !9625, file: !1038, line: 389, type: !9549)
!9631 = !DILocalVariable(name: "uart", scope: !9625, file: !1038, line: 391, type: !9456)
!9632 = !DILocalVariable(name: "uart_config", scope: !9625, file: !1038, line: 409, type: !1023)
!9633 = !DILocation(line: 0, scope: !9625)
!9634 = !DILocation(line: 387, column: 50, scope: !9625)
!9635 = !DILocation(line: 389, column: 50, scope: !9625)
!9636 = !DILocation(line: 391, column: 27, scope: !9625)
!9637 = !DILocation(line: 394, column: 33, scope: !9625)
!9638 = !DILocation(line: 394, column: 2, scope: !9625)
!9639 = !DILocation(line: 397, column: 36, scope: !9625)
!9640 = !DILocation(line: 397, column: 11, scope: !9625)
!9641 = !DILocation(line: 398, column: 13, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9625, file: !1038, line: 398, column: 6)
!9643 = !DILocation(line: 398, column: 6, scope: !9625)
!9644 = !DILocation(line: 403, column: 8, scope: !9625)
!9645 = !DILocation(line: 403, column: 17, scope: !9625)
!9646 = !DILocation(line: 409, column: 2, scope: !9625)
!9647 = !DILocation(line: 409, column: 21, scope: !9625)
!9648 = !DILocation(line: 409, column: 35, scope: !9625)
!9649 = !DILocation(line: 410, column: 25, scope: !9625)
!9650 = !DILocation(line: 416, column: 9, scope: !9625)
!9651 = !DILocation(line: 417, column: 1, scope: !9625)
!9652 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1064, file: !1064, line: 342, type: !9653, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9655)
!9653 = !DISubroutineType(types: !9654)
!9654 = !{!105, !1119, !169}
!9655 = !{!9656, !9657, !9658, !9659}
!9656 = !DILocalVariable(name: "config", arg: 1, scope: !9652, file: !1064, line: 342, type: !1119)
!9657 = !DILocalVariable(name: "id", arg: 2, scope: !9652, file: !1064, line: 343, type: !169)
!9658 = !DILocalVariable(name: "ret", scope: !9652, file: !1064, line: 345, type: !105)
!9659 = !DILocalVariable(name: "state", scope: !9652, file: !1064, line: 346, type: !1067)
!9660 = !DILocation(line: 0, scope: !9652)
!9661 = !DILocation(line: 346, column: 2, scope: !9652)
!9662 = !DILocation(line: 348, column: 8, scope: !9652)
!9663 = !DILocation(line: 349, column: 10, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9652, file: !1064, line: 349, column: 6)
!9665 = !DILocation(line: 349, column: 6, scope: !9652)
!9666 = !DILocation(line: 353, column: 44, scope: !9652)
!9667 = !DILocation(line: 353, column: 9, scope: !9652)
!9668 = !DILocation(line: 353, column: 2, scope: !9652)
!9669 = !DILocation(line: 354, column: 1, scope: !9652)
!9670 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1064, file: !1064, line: 316, type: !9671, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !9673)
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!105, !1119, !1067}
!9673 = !{!9674, !9675, !9676}
!9674 = !DILocalVariable(name: "config", arg: 1, scope: !9670, file: !1064, line: 317, type: !1119)
!9675 = !DILocalVariable(name: "state", arg: 2, scope: !9670, file: !1064, line: 318, type: !1067)
!9676 = !DILocalVariable(name: "reg", scope: !9670, file: !1064, line: 320, type: !22)
!9677 = !DILocation(line: 0, scope: !9670)
!9678 = !DILocation(line: 329, column: 39, scope: !9670)
!9679 = !DILocation(line: 329, column: 52, scope: !9670)
!9680 = !DILocation(line: 329, column: 9, scope: !9670)
!9681 = !DILocation(line: 329, column: 2, scope: !9670)
!9682 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1254, file: !1254, line: 270, type: !1260, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9683)
!9683 = !{!9684}
!9684 = !DILocalVariable(name: "dev", arg: 1, scope: !9682, file: !1254, line: 270, type: !1262)
!9685 = !DILocation(line: 0, scope: !9682)
!9686 = !DILocation(line: 274, column: 2, scope: !9682)
!9687 = !DILocation(line: 275, column: 12, scope: !9682)
!9688 = !DILocation(line: 276, column: 15, scope: !9682)
!9689 = !DILocation(line: 277, column: 16, scope: !9682)
!9690 = !DILocation(line: 278, column: 15, scope: !9682)
!9691 = !DILocation(line: 279, column: 16, scope: !9682)
!9692 = !DILocation(line: 282, column: 2, scope: !9682)
!9693 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !696, file: !696, line: 1638, type: !7330, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9694)
!9694 = !{!9695, !9696}
!9695 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9693, file: !696, line: 1638, type: !2111)
!9696 = !DILocalVariable(name: "priority", arg: 2, scope: !9693, file: !696, line: 1638, type: !113)
!9697 = !DILocation(line: 0, scope: !9693)
!9698 = !DILocation(line: 1646, column: 46, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !696, line: 1645, column: 3)
!9700 = distinct !DILexicalBlock(scope: !9693, file: !696, line: 1640, column: 7)
!9701 = !DILocation(line: 1648, column: 1, scope: !9693)
!9702 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1254, file: !1254, line: 118, type: !7227, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9703)
!9703 = !{!9704, !9705}
!9704 = !DILocalVariable(name: "arg", arg: 1, scope: !9702, file: !1254, line: 118, type: !104)
!9705 = !DILocalVariable(name: "dticks", scope: !9702, file: !1254, line: 121, type: !113)
!9706 = !DILocation(line: 0, scope: !9702)
!9707 = !DILocation(line: 124, column: 2, scope: !9702)
!9708 = !DILocation(line: 129, column: 17, scope: !9702)
!9709 = !DILocation(line: 129, column: 14, scope: !9702)
!9710 = !DILocation(line: 130, column: 15, scope: !9702)
!9711 = !DILocation(line: 145, column: 27, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !1254, line: 132, column: 16)
!9713 = distinct !DILexicalBlock(scope: !9702, file: !1254, line: 132, column: 6)
!9714 = !DILocation(line: 145, column: 25, scope: !9712)
!9715 = !DILocation(line: 145, column: 45, scope: !9712)
!9716 = !DILocation(line: 146, column: 30, scope: !9712)
!9717 = !DILocation(line: 146, column: 20, scope: !9712)
!9718 = !DILocation(line: 147, column: 3, scope: !9712)
!9719 = !DILocation(line: 151, column: 2, scope: !9702)
!9720 = !DILocation(line: 152, column: 1, scope: !9702)
!9721 = distinct !DISubprogram(name: "elapsed", scope: !1254, file: !1254, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9722)
!9722 = !{!9723, !9724, !9725}
!9723 = !DILocalVariable(name: "val1", scope: !9721, file: !1254, line: 87, type: !113)
!9724 = !DILocalVariable(name: "ctrl", scope: !9721, file: !1254, line: 88, type: !113)
!9725 = !DILocalVariable(name: "val2", scope: !9721, file: !1254, line: 89, type: !113)
!9726 = !DILocation(line: 87, column: 27, scope: !9721)
!9727 = !DILocation(line: 0, scope: !9721)
!9728 = !DILocation(line: 88, column: 27, scope: !9721)
!9729 = !DILocation(line: 89, column: 27, scope: !9721)
!9730 = !DILocation(line: 105, column: 12, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9721, file: !1254, line: 105, column: 6)
!9732 = !DILocation(line: 106, column: 6, scope: !9731)
!9733 = !DILocation(line: 107, column: 16, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9731, file: !1254, line: 106, column: 24)
!9735 = !DILocation(line: 111, column: 18, scope: !9734)
!9736 = !DILocation(line: 112, column: 2, scope: !9734)
!9737 = !DILocation(line: 114, column: 20, scope: !9721)
!9738 = !DILocation(line: 114, column: 30, scope: !9721)
!9739 = !DILocation(line: 114, column: 28, scope: !9721)
!9740 = !DILocation(line: 114, column: 2, scope: !9721)
!9741 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1254, file: !1254, line: 154, type: !9742, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9744)
!9742 = !DISubroutineType(types: !9743)
!9743 = !{null, !116, !540}
!9744 = !{!9745, !9746, !9747, !9748, !9749, !9750, !9751, !9756, !9757}
!9745 = !DILocalVariable(name: "ticks", arg: 1, scope: !9741, file: !1254, line: 154, type: !116)
!9746 = !DILocalVariable(name: "idle", arg: 2, scope: !9741, file: !1254, line: 154, type: !540)
!9747 = !DILocalVariable(name: "delay", scope: !9741, file: !1254, line: 169, type: !113)
!9748 = !DILocalVariable(name: "val1", scope: !9741, file: !1254, line: 170, type: !113)
!9749 = !DILocalVariable(name: "val2", scope: !9741, file: !1254, line: 170, type: !113)
!9750 = !DILocalVariable(name: "last_load_", scope: !9741, file: !1254, line: 171, type: !113)
!9751 = !DILocalVariable(name: "key", scope: !9741, file: !1254, line: 176, type: !9752)
!9752 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !9753)
!9753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !9754)
!9754 = !{!9755}
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9753, file: !236, line: 33, baseType: !105, size: 32)
!9756 = !DILocalVariable(name: "pending", scope: !9741, file: !1254, line: 178, type: !113)
!9757 = !DILocalVariable(name: "unannounced", scope: !9741, file: !1254, line: 185, type: !113)
!9758 = !DILocation(line: 0, scope: !9741)
!9759 = !DILocation(line: 162, column: 49, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9741, file: !1254, line: 162, column: 6)
!9761 = !DILocation(line: 163, column: 17, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9760, file: !1254, line: 162, column: 78)
!9763 = !DILocation(line: 164, column: 13, scope: !9762)
!9764 = !DILocation(line: 165, column: 3, scope: !9762)
!9765 = !DILocation(line: 171, column: 24, scope: !9741)
!9766 = !DILocation(line: 173, column: 10, scope: !9741)
!9767 = !DILocation(line: 174, column: 10, scope: !9741)
!9768 = !DILocalVariable(name: "l", arg: 1, scope: !9769, file: !236, line: 136, type: !9772)
!9769 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !9770, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9773)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{!9752, !9772}
!9772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!9773 = !{!9768, !9774}
!9774 = !DILocalVariable(name: "k", scope: !9769, file: !236, line: 139, type: !9752)
!9775 = !DILocation(line: 0, scope: !9769, inlinedAt: !9776)
!9776 = distinct !DILocation(line: 176, column: 25, scope: !9741)
!9777 = !DILocation(line: 55, column: 2, scope: !9778, inlinedAt: !9782)
!9778 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9779)
!9779 = !{!9780, !9781}
!9780 = !DILocalVariable(name: "key", scope: !9778, file: !6640, line: 44, type: !32)
!9781 = !DILocalVariable(name: "tmp", scope: !9778, file: !6640, line: 53, type: !32)
!9782 = distinct !DILocation(line: 145, column: 10, scope: !9769, inlinedAt: !9776)
!9783 = !{i64 1287926}
!9784 = !DILocation(line: 0, scope: !9778, inlinedAt: !9782)
!9785 = !DILocation(line: 148, column: 2, scope: !9786, inlinedAt: !9776)
!9786 = distinct !DILexicalBlock(scope: !9787, file: !236, line: 148, column: 2)
!9787 = distinct !DILexicalBlock(scope: !9769, file: !236, line: 148, column: 2)
!9788 = !DILocation(line: 148, column: 2, scope: !9787, inlinedAt: !9776)
!9789 = !DILocation(line: 148, column: 2, scope: !9790, inlinedAt: !9776)
!9790 = distinct !DILexicalBlock(scope: !9786, file: !236, line: 148, column: 2)
!9791 = !DILocation(line: 160, column: 2, scope: !9769, inlinedAt: !9776)
!9792 = !DILocation(line: 178, column: 21, scope: !9741)
!9793 = !DILocation(line: 180, column: 18, scope: !9741)
!9794 = !DILocation(line: 182, column: 14, scope: !9741)
!9795 = !DILocation(line: 183, column: 15, scope: !9741)
!9796 = !DILocation(line: 185, column: 39, scope: !9741)
!9797 = !DILocation(line: 185, column: 37, scope: !9741)
!9798 = !DILocation(line: 187, column: 27, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9741, file: !1254, line: 187, column: 6)
!9800 = !DILocation(line: 187, column: 6, scope: !9741)
!9801 = !DILocation(line: 202, column: 27, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9799, file: !1254, line: 195, column: 9)
!9803 = !DILocation(line: 202, column: 48, scope: !9802)
!9804 = !DILocation(line: 203, column: 9, scope: !9802)
!9805 = !DILocation(line: 204, column: 11, scope: !9802)
!9806 = !DILocation(line: 205, column: 13, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9802, file: !1254, line: 205, column: 7)
!9808 = !DILocation(line: 205, column: 7, scope: !9802)
!9809 = !DILocation(line: 0, scope: !9799)
!9810 = !DILocation(line: 212, column: 18, scope: !9741)
!9811 = !DILocation(line: 214, column: 28, scope: !9741)
!9812 = !DILocation(line: 214, column: 16, scope: !9741)
!9813 = !DILocation(line: 215, column: 15, scope: !9741)
!9814 = !DILocation(line: 227, column: 11, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9741, file: !1254, line: 227, column: 6)
!9816 = !DILocation(line: 227, column: 6, scope: !9741)
!9817 = !DILocation(line: 228, column: 15, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9815, file: !1254, line: 227, column: 19)
!9819 = !DILocation(line: 228, column: 38, scope: !9818)
!9820 = !DILocation(line: 228, column: 24, scope: !9818)
!9821 = !DILocation(line: 229, column: 2, scope: !9818)
!9822 = !DILocation(line: 230, column: 24, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9815, file: !1254, line: 229, column: 9)
!9824 = !DILocation(line: 230, column: 15, scope: !9823)
!9825 = !DILocation(line: 0, scope: !9815)
!9826 = !DILocalVariable(name: "key", arg: 2, scope: !9827, file: !236, line: 190, type: !9752)
!9827 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !9828, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9830)
!9828 = !DISubroutineType(types: !9829)
!9829 = !{null, !9772, !9752}
!9830 = !{!9831, !9826}
!9831 = !DILocalVariable(name: "l", arg: 1, scope: !9827, file: !236, line: 189, type: !9772)
!9832 = !DILocation(line: 0, scope: !9827, inlinedAt: !9833)
!9833 = distinct !DILocation(line: 232, column: 2, scope: !9741)
!9834 = !DILocation(line: 194, column: 2, scope: !9835, inlinedAt: !9833)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !236, line: 194, column: 2)
!9836 = distinct !DILexicalBlock(scope: !9827, file: !236, line: 194, column: 2)
!9837 = !DILocation(line: 194, column: 2, scope: !9836, inlinedAt: !9833)
!9838 = !DILocation(line: 194, column: 2, scope: !9839, inlinedAt: !9833)
!9839 = distinct !DILexicalBlock(scope: !9835, file: !236, line: 194, column: 2)
!9840 = !DILocalVariable(name: "key", arg: 1, scope: !9841, file: !6640, line: 84, type: !32)
!9841 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9842)
!9842 = !{!9840}
!9843 = !DILocation(line: 0, scope: !9841, inlinedAt: !9844)
!9844 = distinct !DILocation(line: 215, column: 2, scope: !9827, inlinedAt: !9833)
!9845 = !DILocation(line: 95, column: 2, scope: !9841, inlinedAt: !9844)
!9846 = !{i64 1288743}
!9847 = !DILocation(line: 234, column: 1, scope: !9741)
!9848 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1254, file: !1254, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9849)
!9849 = !{!9850, !9851}
!9850 = !DILocalVariable(name: "key", scope: !9848, file: !1254, line: 242, type: !9752)
!9851 = !DILocalVariable(name: "cyc", scope: !9848, file: !1254, line: 243, type: !113)
!9852 = !DILocation(line: 0, scope: !9769, inlinedAt: !9853)
!9853 = distinct !DILocation(line: 242, column: 25, scope: !9848)
!9854 = !DILocation(line: 55, column: 2, scope: !9778, inlinedAt: !9855)
!9855 = distinct !DILocation(line: 145, column: 10, scope: !9769, inlinedAt: !9853)
!9856 = !DILocation(line: 0, scope: !9778, inlinedAt: !9855)
!9857 = !DILocation(line: 148, column: 2, scope: !9786, inlinedAt: !9853)
!9858 = !DILocation(line: 148, column: 2, scope: !9787, inlinedAt: !9853)
!9859 = !DILocation(line: 148, column: 2, scope: !9790, inlinedAt: !9853)
!9860 = !DILocation(line: 160, column: 2, scope: !9769, inlinedAt: !9853)
!9861 = !DILocation(line: 0, scope: !9848)
!9862 = !DILocation(line: 243, column: 17, scope: !9848)
!9863 = !DILocation(line: 243, column: 29, scope: !9848)
!9864 = !DILocation(line: 243, column: 43, scope: !9848)
!9865 = !DILocation(line: 0, scope: !9827, inlinedAt: !9866)
!9866 = distinct !DILocation(line: 245, column: 2, scope: !9848)
!9867 = !DILocation(line: 194, column: 2, scope: !9835, inlinedAt: !9866)
!9868 = !DILocation(line: 194, column: 2, scope: !9836, inlinedAt: !9866)
!9869 = !DILocation(line: 194, column: 2, scope: !9839, inlinedAt: !9866)
!9870 = !DILocation(line: 243, column: 27, scope: !9848)
!9871 = !DILocation(line: 243, column: 41, scope: !9848)
!9872 = !DILocation(line: 0, scope: !9841, inlinedAt: !9873)
!9873 = distinct !DILocation(line: 215, column: 2, scope: !9827, inlinedAt: !9866)
!9874 = !DILocation(line: 95, column: 2, scope: !9841, inlinedAt: !9873)
!9875 = !DILocation(line: 246, column: 13, scope: !9848)
!9876 = !DILocation(line: 246, column: 2, scope: !9848)
!9877 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1254, file: !1254, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !9878)
!9878 = !{!9879, !9880}
!9879 = !DILocalVariable(name: "key", scope: !9877, file: !1254, line: 251, type: !9752)
!9880 = !DILocalVariable(name: "ret", scope: !9877, file: !1254, line: 252, type: !113)
!9881 = !DILocation(line: 0, scope: !9769, inlinedAt: !9882)
!9882 = distinct !DILocation(line: 251, column: 25, scope: !9877)
!9883 = !DILocation(line: 55, column: 2, scope: !9778, inlinedAt: !9884)
!9884 = distinct !DILocation(line: 145, column: 10, scope: !9769, inlinedAt: !9882)
!9885 = !DILocation(line: 0, scope: !9778, inlinedAt: !9884)
!9886 = !DILocation(line: 148, column: 2, scope: !9786, inlinedAt: !9882)
!9887 = !DILocation(line: 148, column: 2, scope: !9787, inlinedAt: !9882)
!9888 = !DILocation(line: 148, column: 2, scope: !9790, inlinedAt: !9882)
!9889 = !DILocation(line: 160, column: 2, scope: !9769, inlinedAt: !9882)
!9890 = !DILocation(line: 0, scope: !9877)
!9891 = !DILocation(line: 252, column: 17, scope: !9877)
!9892 = !DILocation(line: 252, column: 29, scope: !9877)
!9893 = !DILocation(line: 0, scope: !9827, inlinedAt: !9894)
!9894 = distinct !DILocation(line: 254, column: 2, scope: !9877)
!9895 = !DILocation(line: 194, column: 2, scope: !9835, inlinedAt: !9894)
!9896 = !DILocation(line: 194, column: 2, scope: !9836, inlinedAt: !9894)
!9897 = !DILocation(line: 194, column: 2, scope: !9839, inlinedAt: !9894)
!9898 = !DILocation(line: 252, column: 27, scope: !9877)
!9899 = !DILocation(line: 0, scope: !9841, inlinedAt: !9900)
!9900 = distinct !DILocation(line: 215, column: 2, scope: !9827, inlinedAt: !9894)
!9901 = !DILocation(line: 95, column: 2, scope: !9841, inlinedAt: !9900)
!9902 = !DILocation(line: 255, column: 2, scope: !9877)
!9903 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1254, file: !1254, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !397)
!9904 = !DILocation(line: 260, column: 6, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9903, file: !1254, line: 260, column: 6)
!9906 = !DILocation(line: 260, column: 16, scope: !9905)
!9907 = !DILocation(line: 260, column: 6, scope: !9903)
!9908 = !DILocation(line: 261, column: 17, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9905, file: !1254, line: 260, column: 34)
!9910 = !DILocation(line: 262, column: 2, scope: !9909)
!9911 = !DILocation(line: 263, column: 1, scope: !9903)
!9912 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1254, file: !1254, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1122, retainedNodes: !397)
!9913 = !DILocation(line: 267, column: 16, scope: !9912)
!9914 = !DILocation(line: 268, column: 1, scope: !9912)
!9915 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9916, file: !9916, line: 9, type: !9917, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2404, retainedNodes: !9933)
!9916 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9917 = !DISubroutineType(types: !9918)
!9918 = !{!105, !9919, !169, !9932}
!9919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9920, size: 32)
!9920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9921)
!9921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1064, line: 60, size: 64, elements: !9922)
!9922 = !{!9923, !9931}
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9921, file: !1064, line: 69, baseType: !9924, size: 32)
!9924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9925, size: 32)
!9925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9926)
!9926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1064, line: 50, size: 64, elements: !9927)
!9927 = !{!9928, !9929, !9930}
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9926, file: !1064, line: 52, baseType: !1072, size: 32)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9926, file: !1064, line: 54, baseType: !169, size: 8, offset: 32)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9926, file: !1064, line: 56, baseType: !169, size: 8, offset: 40)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9921, file: !1064, line: 71, baseType: !169, size: 8, offset: 32)
!9932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9924, size: 32)
!9933 = !{!9934, !9935, !9936}
!9934 = !DILocalVariable(name: "config", arg: 1, scope: !9915, file: !9916, line: 9, type: !9919)
!9935 = !DILocalVariable(name: "id", arg: 2, scope: !9915, file: !9916, line: 9, type: !169)
!9936 = !DILocalVariable(name: "state", arg: 3, scope: !9915, file: !9916, line: 10, type: !9932)
!9937 = !DILocation(line: 0, scope: !9915)
!9938 = !DILocation(line: 12, column: 20, scope: !9915)
!9939 = !DILocation(line: 13, column: 27, scope: !9915)
!9940 = !DILocation(line: 13, column: 42, scope: !9915)
!9941 = !DILocation(line: 13, column: 19, scope: !9915)
!9942 = !DILocation(line: 13, column: 16, scope: !9915)
!9943 = !DILocation(line: 13, column: 2, scope: !9915)
!9944 = distinct !{!9944, !9943, !9945}
!9945 = !DILocation(line: 19, column: 2, scope: !9915)
!9946 = !DILocation(line: 14, column: 23, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !9916, line: 14, column: 7)
!9948 = distinct !DILexicalBlock(scope: !9915, file: !9916, line: 13, column: 54)
!9949 = !DILocation(line: 14, column: 10, scope: !9947)
!9950 = !DILocation(line: 18, column: 11, scope: !9948)
!9951 = !DILocation(line: 14, column: 7, scope: !9948)
!9952 = !DILocation(line: 22, column: 1, scope: !9915)
!9953 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1357, file: !1357, line: 78, type: !9954, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1291, retainedNodes: !9956)
!9954 = !DISubroutineType(types: !9955)
!9955 = !{!105, !1072, !169, !22}
!9956 = !{!9957, !9958, !9959, !9960}
!9957 = !DILocalVariable(name: "pins", arg: 1, scope: !9953, file: !1357, line: 78, type: !1072)
!9958 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9953, file: !1357, line: 78, type: !169)
!9959 = !DILocalVariable(name: "reg", arg: 3, scope: !9953, file: !1357, line: 79, type: !22)
!9960 = !DILocalVariable(name: "i", scope: !9961, file: !1357, line: 83, type: !169)
!9961 = distinct !DILexicalBlock(scope: !9953, file: !1357, line: 83, column: 2)
!9962 = !DILocation(line: 0, scope: !9953)
!9963 = !DILocation(line: 0, scope: !9961)
!9964 = !DILocation(line: 83, column: 25, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9961, file: !1357, line: 83, column: 2)
!9966 = !DILocation(line: 83, column: 2, scope: !9961)
!9967 = !DILocation(line: 87, column: 2, scope: !9953)
!9968 = !DILocation(line: 84, column: 30, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9965, file: !1357, line: 83, column: 41)
!9970 = !DILocation(line: 84, column: 25, scope: !9969)
!9971 = !DILocation(line: 84, column: 3, scope: !9969)
!9972 = !DILocation(line: 83, column: 37, scope: !9965)
!9973 = distinct !{!9973, !9966, !9974}
!9974 = !DILocation(line: 85, column: 2, scope: !9961)
!9975 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !1357, file: !1357, line: 52, type: !9976, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1291, retainedNodes: !9978)
!9976 = !DISubroutineType(types: !9977)
!9977 = !{null, !1074}
!9978 = !{!9979, !9980, !9987, !9988}
!9979 = !DILocalVariable(name: "pin", arg: 1, scope: !9975, file: !1357, line: 52, type: !1074)
!9980 = !DILocalVariable(name: "soc_pin", scope: !9975, file: !1357, line: 54, type: !9981)
!9981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_gpio_pin", file: !6796, line: 85, size: 128, elements: !9982)
!9982 = !{!9983, !9984, !9985, !9986}
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !9981, file: !6796, line: 86, baseType: !113, size: 32)
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !9981, file: !6796, line: 90, baseType: !1294, size: 32, offset: 32)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !9981, file: !6796, line: 92, baseType: !169, size: 8, offset: 64)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9981, file: !6796, line: 93, baseType: !113, size: 32, offset: 96)
!9987 = !DILocalVariable(name: "port_idx", scope: !9975, file: !1357, line: 55, type: !169)
!9988 = !DILocalVariable(name: "port_func", scope: !9975, file: !1357, line: 55, type: !169)
!9989 = !DILocation(line: 0, scope: !9975)
!9990 = !DILocation(line: 54, column: 2, scope: !9975)
!9991 = !DILocation(line: 54, column: 22, scope: !9975)
!9992 = !DILocation(line: 57, column: 13, scope: !9975)
!9993 = !DILocation(line: 58, column: 2, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9995, file: !1357, line: 58, column: 2)
!9995 = distinct !DILexicalBlock(scope: !9975, file: !1357, line: 58, column: 2)
!9996 = !DILocation(line: 58, column: 2, scope: !9995)
!9997 = !DILocation(line: 58, column: 2, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9994, file: !1357, line: 58, column: 2)
!9999 = !DILocation(line: 64, column: 25, scope: !9975)
!10000 = !DILocation(line: 64, column: 17, scope: !9975)
!10001 = !DILocation(line: 64, column: 10, scope: !9975)
!10002 = !DILocation(line: 64, column: 15, scope: !9975)
!10003 = !DILocation(line: 66, column: 22, scope: !9975)
!10004 = !DILocation(line: 66, column: 10, scope: !9975)
!10005 = !DILocation(line: 66, column: 20, scope: !9975)
!10006 = !DILocation(line: 67, column: 22, scope: !9975)
!10007 = !DILocation(line: 67, column: 19, scope: !9975)
!10008 = !DILocation(line: 67, column: 10, scope: !9975)
!10009 = !DILocation(line: 67, column: 15, scope: !9975)
!10010 = !DILocation(line: 68, column: 18, scope: !9975)
!10011 = !DILocation(line: 70, column: 16, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !9975, file: !1357, line: 70, column: 6)
!10013 = !DILocation(line: 70, column: 6, scope: !9975)
!10014 = !DILocation(line: 68, column: 10, scope: !9975)
!10015 = !DILocation(line: 75, column: 2, scope: !9975)
!10016 = !DILocation(line: 76, column: 1, scope: !9975)
!10017 = distinct !DISubprogram(name: "z_device_state_init", scope: !10018, file: !10018, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10019)
!10018 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10019 = !{!10020}
!10020 = !DILocalVariable(name: "dev", scope: !10017, file: !10018, line: 25, type: !10021)
!10021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10022, size: 32)
!10022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10023)
!10023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !529, line: 378, size: 192, elements: !10024)
!10024 = !{!10025, !10026, !10027, !10028, !10034, !10035}
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10023, file: !529, line: 380, baseType: !269, size: 32)
!10026 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10023, file: !529, line: 382, baseType: !13, size: 32, offset: 32)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10023, file: !529, line: 384, baseType: !13, size: 32, offset: 64)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10023, file: !529, line: 386, baseType: !10029, size: 32, offset: 96)
!10029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10030, size: 32)
!10030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !529, line: 351, size: 16, elements: !10031)
!10031 = !{!10032, !10033}
!10032 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10030, file: !529, line: 359, baseType: !169, size: 8)
!10033 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10030, file: !529, line: 364, baseType: !540, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10034 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10023, file: !529, line: 388, baseType: !104, size: 32, offset: 128)
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10023, file: !529, line: 396, baseType: !543, size: 32, offset: 160)
!10036 = !DILocation(line: 0, scope: !10017)
!10037 = !DILocation(line: 31, column: 1, scope: !10017)
!10038 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10018, file: !10018, line: 33, type: !10039, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10041)
!10039 = !DISubroutineType(types: !10040)
!10040 = !{!10021, !269}
!10041 = !{!10042, !10043}
!10042 = !DILocalVariable(name: "name", arg: 1, scope: !10038, file: !10018, line: 33, type: !269)
!10043 = !DILocalVariable(name: "dev", scope: !10038, file: !10018, line: 35, type: !10021)
!10044 = !DILocation(line: 0, scope: !10038)
!10045 = !DILocation(line: 40, column: 12, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10038, file: !10018, line: 40, column: 6)
!10047 = !DILocation(line: 40, column: 21, scope: !10046)
!10048 = !DILocation(line: 40, column: 25, scope: !10046)
!10049 = !DILocation(line: 40, column: 33, scope: !10046)
!10050 = !DILocation(line: 40, column: 6, scope: !10038)
!10051 = !DILocation(line: 55, column: 2, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10038, file: !10018, line: 55, column: 2)
!10053 = !DILocation(line: 50, column: 7, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !10018, line: 50, column: 7)
!10055 = distinct !DILexicalBlock(scope: !10056, file: !10018, line: 49, column: 57)
!10056 = distinct !DILexicalBlock(scope: !10057, file: !10018, line: 49, column: 2)
!10057 = distinct !DILexicalBlock(scope: !10038, file: !10018, line: 49, column: 2)
!10058 = !DILocation(line: 50, column: 30, scope: !10054)
!10059 = !DILocation(line: 50, column: 39, scope: !10054)
!10060 = !DILocation(line: 50, column: 44, scope: !10054)
!10061 = !DILocation(line: 50, column: 7, scope: !10055)
!10062 = !DILocation(line: 49, column: 53, scope: !10056)
!10063 = !DILocation(line: 49, column: 33, scope: !10056)
!10064 = !DILocation(line: 49, column: 2, scope: !10057)
!10065 = distinct !{!10065, !10064, !10066}
!10066 = !DILocation(line: 53, column: 2, scope: !10057)
!10067 = !DILocation(line: 56, column: 7, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !10018, line: 56, column: 7)
!10069 = distinct !DILexicalBlock(scope: !10070, file: !10018, line: 55, column: 57)
!10070 = distinct !DILexicalBlock(scope: !10052, file: !10018, line: 55, column: 2)
!10071 = !DILocation(line: 56, column: 30, scope: !10068)
!10072 = !DILocation(line: 56, column: 52, scope: !10068)
!10073 = !DILocation(line: 56, column: 34, scope: !10068)
!10074 = !DILocation(line: 56, column: 58, scope: !10068)
!10075 = !DILocation(line: 56, column: 7, scope: !10069)
!10076 = !DILocation(line: 55, column: 53, scope: !10070)
!10077 = !DILocation(line: 55, column: 33, scope: !10070)
!10078 = distinct !{!10078, !10051, !10079}
!10079 = !DILocation(line: 59, column: 2, scope: !10052)
!10080 = !DILocation(line: 62, column: 1, scope: !10038)
!10081 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10018, file: !10018, line: 93, type: !10082, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10084)
!10082 = !DISubroutineType(types: !10083)
!10083 = !{!540, !10021}
!10084 = !{!10085}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10081, file: !10018, line: 93, type: !10021)
!10086 = !DILocation(line: 0, scope: !10081)
!10087 = !DILocation(line: 99, column: 10, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10081, file: !10018, line: 99, column: 6)
!10089 = !DILocation(line: 99, column: 6, scope: !10081)
!10090 = !DILocation(line: 103, column: 14, scope: !10081)
!10091 = !DILocation(line: 103, column: 21, scope: !10081)
!10092 = !DILocation(line: 103, column: 33, scope: !10081)
!10093 = !DILocation(line: 103, column: 49, scope: !10081)
!10094 = !DILocation(line: 103, column: 58, scope: !10081)
!10095 = !DILocation(line: 104, column: 1, scope: !10081)
!10096 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10018, file: !10018, line: 87, type: !10097, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10100)
!10097 = !DISubroutineType(types: !10098)
!10098 = !{!111, !10099}
!10099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10021, size: 32)
!10100 = !{!10101}
!10101 = !DILocalVariable(name: "devices", arg: 1, scope: !10096, file: !10018, line: 87, type: !10099)
!10102 = !DILocation(line: 0, scope: !10096)
!10103 = !DILocation(line: 89, column: 11, scope: !10096)
!10104 = !DILocation(line: 90, column: 2, scope: !10096)
!10105 = distinct !DISubprogram(name: "device_required_foreach", scope: !10018, file: !10018, line: 125, type: !10106, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10112)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!105, !10021, !10108, !104}
!10108 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !529, line: 471, baseType: !10109)
!10109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10110, size: 32)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!105, !10021, !104}
!10112 = !{!10113, !10114, !10115, !10116, !10117}
!10113 = !DILocalVariable(name: "dev", arg: 1, scope: !10105, file: !10018, line: 125, type: !10021)
!10114 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10105, file: !10018, line: 126, type: !10108)
!10115 = !DILocalVariable(name: "context", arg: 3, scope: !10105, file: !10018, line: 127, type: !104)
!10116 = !DILocalVariable(name: "handle_count", scope: !10105, file: !10018, line: 129, type: !111)
!10117 = !DILocalVariable(name: "handles", scope: !10105, file: !10018, line: 130, type: !543)
!10118 = !DILocation(line: 0, scope: !10105)
!10119 = !DILocation(line: 129, column: 2, scope: !10105)
!10120 = !DILocation(line: 129, column: 9, scope: !10105)
!10121 = !DILocation(line: 130, column: 35, scope: !10105)
!10122 = !DILocation(line: 132, column: 33, scope: !10105)
!10123 = !DILocation(line: 132, column: 9, scope: !10105)
!10124 = !DILocation(line: 133, column: 1, scope: !10105)
!10125 = !DILocation(line: 132, column: 2, scope: !10105)
!10126 = distinct !DISubprogram(name: "device_required_handles_get", scope: !529, file: !529, line: 493, type: !10127, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10129)
!10127 = !DISubroutineType(types: !10128)
!10128 = !{!543, !10021, !2044}
!10129 = !{!10130, !10131, !10132, !10133}
!10130 = !DILocalVariable(name: "dev", arg: 1, scope: !10126, file: !529, line: 493, type: !10021)
!10131 = !DILocalVariable(name: "count", arg: 2, scope: !10126, file: !529, line: 493, type: !2044)
!10132 = !DILocalVariable(name: "rv", scope: !10126, file: !529, line: 495, type: !543)
!10133 = !DILocalVariable(name: "i", scope: !10134, file: !529, line: 498, type: !111)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !529, line: 497, column: 18)
!10135 = distinct !DILexicalBlock(scope: !10126, file: !529, line: 497, column: 6)
!10136 = !DILocation(line: 0, scope: !10126)
!10137 = !DILocation(line: 495, column: 35, scope: !10126)
!10138 = !DILocation(line: 497, column: 9, scope: !10135)
!10139 = !DILocation(line: 497, column: 6, scope: !10126)
!10140 = !DILocation(line: 0, scope: !10134)
!10141 = !DILocation(line: 500, column: 11, scope: !10134)
!10142 = !DILocation(line: 500, column: 40, scope: !10134)
!10143 = !DILocation(line: 502, column: 4, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10134, file: !529, line: 501, column: 40)
!10145 = distinct !{!10145, !10146, !10147}
!10146 = !DILocation(line: 500, column: 3, scope: !10134)
!10147 = !DILocation(line: 503, column: 3, scope: !10134)
!10148 = !DILocation(line: 504, column: 10, scope: !10134)
!10149 = !DILocation(line: 505, column: 2, scope: !10134)
!10150 = !DILocation(line: 507, column: 2, scope: !10126)
!10151 = distinct !DISubprogram(name: "device_visitor", scope: !10018, file: !10018, line: 106, type: !10152, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{!105, !543, !111, !10108, !104}
!10154 = !{!10155, !10156, !10157, !10158, !10159, !10161, !10164, !10165}
!10155 = !DILocalVariable(name: "handles", arg: 1, scope: !10151, file: !10018, line: 106, type: !543)
!10156 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10151, file: !10018, line: 107, type: !111)
!10157 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10151, file: !10018, line: 108, type: !10108)
!10158 = !DILocalVariable(name: "context", arg: 4, scope: !10151, file: !10018, line: 109, type: !104)
!10159 = !DILocalVariable(name: "i", scope: !10160, file: !10018, line: 112, type: !111)
!10160 = distinct !DILexicalBlock(scope: !10151, file: !10018, line: 112, column: 2)
!10161 = !DILocalVariable(name: "dh", scope: !10162, file: !10018, line: 113, type: !545)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !10018, line: 112, column: 44)
!10163 = distinct !DILexicalBlock(scope: !10160, file: !10018, line: 112, column: 2)
!10164 = !DILocalVariable(name: "rdev", scope: !10162, file: !10018, line: 114, type: !10021)
!10165 = !DILocalVariable(name: "rc", scope: !10162, file: !10018, line: 115, type: !105)
!10166 = !DILocation(line: 0, scope: !10151)
!10167 = !DILocation(line: 0, scope: !10160)
!10168 = !DILocation(line: 112, column: 23, scope: !10163)
!10169 = !DILocation(line: 112, column: 2, scope: !10160)
!10170 = distinct !{!10170, !10169, !10171}
!10171 = !DILocation(line: 120, column: 2, scope: !10160)
!10172 = !DILocation(line: 113, column: 24, scope: !10162)
!10173 = !DILocation(line: 0, scope: !10162)
!10174 = !DILocation(line: 114, column: 31, scope: !10162)
!10175 = !DILocation(line: 115, column: 12, scope: !10162)
!10176 = !DILocation(line: 117, column: 10, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10162, file: !10018, line: 117, column: 7)
!10178 = !DILocation(line: 112, column: 39, scope: !10163)
!10179 = !DILocation(line: 123, column: 1, scope: !10151)
!10180 = distinct !DISubprogram(name: "device_from_handle", scope: !529, file: !529, line: 439, type: !10181, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10183)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!10021, !545}
!10183 = !{!10184, !10185, !10186}
!10184 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10180, file: !529, line: 439, type: !545)
!10185 = !DILocalVariable(name: "dev", scope: !10180, file: !529, line: 443, type: !10021)
!10186 = !DILocalVariable(name: "numdev", scope: !10180, file: !529, line: 444, type: !111)
!10187 = !DILocation(line: 0, scope: !10180)
!10188 = !DILocation(line: 446, column: 7, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10180, file: !529, line: 446, column: 6)
!10190 = !DILocation(line: 446, column: 18, scope: !10189)
!10191 = !DILocation(line: 446, column: 23, scope: !10189)
!10192 = !DILocation(line: 450, column: 2, scope: !10180)
!10193 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10018, file: !10018, line: 135, type: !10106, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10194)
!10194 = !{!10195, !10196, !10197, !10198, !10199}
!10195 = !DILocalVariable(name: "dev", arg: 1, scope: !10193, file: !10018, line: 135, type: !10021)
!10196 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10193, file: !10018, line: 136, type: !10108)
!10197 = !DILocalVariable(name: "context", arg: 3, scope: !10193, file: !10018, line: 137, type: !104)
!10198 = !DILocalVariable(name: "handle_count", scope: !10193, file: !10018, line: 139, type: !111)
!10199 = !DILocalVariable(name: "handles", scope: !10193, file: !10018, line: 140, type: !543)
!10200 = !DILocation(line: 0, scope: !10193)
!10201 = !DILocation(line: 139, column: 2, scope: !10193)
!10202 = !DILocation(line: 139, column: 9, scope: !10193)
!10203 = !DILocation(line: 140, column: 35, scope: !10193)
!10204 = !DILocation(line: 142, column: 33, scope: !10193)
!10205 = !DILocation(line: 142, column: 9, scope: !10193)
!10206 = !DILocation(line: 143, column: 1, scope: !10193)
!10207 = !DILocation(line: 142, column: 2, scope: !10193)
!10208 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !529, file: !529, line: 573, type: !10127, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2406, retainedNodes: !10209)
!10209 = !{!10210, !10211, !10212, !10213, !10214}
!10210 = !DILocalVariable(name: "dev", arg: 1, scope: !10208, file: !529, line: 573, type: !10021)
!10211 = !DILocalVariable(name: "count", arg: 2, scope: !10208, file: !529, line: 573, type: !2044)
!10212 = !DILocalVariable(name: "rv", scope: !10208, file: !529, line: 575, type: !543)
!10213 = !DILocalVariable(name: "region", scope: !10208, file: !529, line: 576, type: !111)
!10214 = !DILocalVariable(name: "i", scope: !10208, file: !529, line: 577, type: !111)
!10215 = !DILocation(line: 0, scope: !10208)
!10216 = !DILocation(line: 575, column: 35, scope: !10208)
!10217 = !DILocation(line: 579, column: 9, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10208, file: !529, line: 579, column: 6)
!10219 = !DILocation(line: 579, column: 6, scope: !10208)
!10220 = !DILocation(line: 582, column: 8, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !529, line: 582, column: 8)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !529, line: 581, column: 23)
!10223 = distinct !DILexicalBlock(scope: !10218, file: !529, line: 579, column: 18)
!10224 = !DILocation(line: 582, column: 12, scope: !10221)
!10225 = !DILocation(line: 585, column: 6, scope: !10222)
!10226 = !DILocation(line: 0, scope: !10223)
!10227 = !DILocation(line: 581, column: 17, scope: !10223)
!10228 = !DILocation(line: 581, column: 3, scope: !10223)
!10229 = !DILocation(line: 588, column: 10, scope: !10223)
!10230 = !DILocation(line: 588, column: 16, scope: !10223)
!10231 = !DILocation(line: 589, column: 4, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10223, file: !529, line: 588, column: 39)
!10233 = !DILocation(line: 588, column: 3, scope: !10223)
!10234 = distinct !{!10234, !10233, !10235}
!10235 = !DILocation(line: 590, column: 3, scope: !10223)
!10236 = !DILocation(line: 591, column: 10, scope: !10223)
!10237 = !DILocation(line: 592, column: 2, scope: !10223)
!10238 = !DILocation(line: 575, column: 25, scope: !10208)
!10239 = !DILocation(line: 594, column: 2, scope: !10208)
!10240 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1365, file: !1365, line: 49, type: !10241, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1362, retainedNodes: !397)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{!428}
!10243 = !DILocation(line: 51, column: 10, scope: !10240)
!10244 = !DILocation(line: 51, column: 20, scope: !10240)
!10245 = !DILocation(line: 51, column: 2, scope: !10240)
!10246 = distinct !DISubprogram(name: "coredump", scope: !2413, file: !2413, line: 209, type: !10247, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10395)
!10247 = !DISubroutineType(types: !10248)
!10248 = !{null, !32, !10249, !10293}
!10249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10250, size: 32)
!10250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10251)
!10251 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2217, line: 141, baseType: !10252)
!10252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2217, line: 97, size: 256, elements: !10253)
!10253 = !{!10254}
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10252, file: !2217, line: 107, baseType: !10255, size: 256)
!10255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2217, line: 98, size: 256, elements: !10256)
!10256 = !{!10257, !10262, !10267, !10272, !10277, !10282, !10287, !10292}
!10257 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 99, baseType: !10258, size: 32)
!10258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 99, size: 32, elements: !10259)
!10259 = !{!10260, !10261}
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10258, file: !2217, line: 99, baseType: !113, size: 32)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10258, file: !2217, line: 99, baseType: !113, size: 32)
!10262 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 100, baseType: !10263, size: 32, offset: 32)
!10263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 100, size: 32, elements: !10264)
!10264 = !{!10265, !10266}
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10263, file: !2217, line: 100, baseType: !113, size: 32)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10263, file: !2217, line: 100, baseType: !113, size: 32)
!10267 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 101, baseType: !10268, size: 32, offset: 64)
!10268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 101, size: 32, elements: !10269)
!10269 = !{!10270, !10271}
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10268, file: !2217, line: 101, baseType: !113, size: 32)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10268, file: !2217, line: 101, baseType: !113, size: 32)
!10272 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 102, baseType: !10273, size: 32, offset: 96)
!10273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 102, size: 32, elements: !10274)
!10274 = !{!10275, !10276}
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10273, file: !2217, line: 102, baseType: !113, size: 32)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10273, file: !2217, line: 102, baseType: !113, size: 32)
!10277 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 103, baseType: !10278, size: 32, offset: 128)
!10278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 103, size: 32, elements: !10279)
!10279 = !{!10280, !10281}
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10278, file: !2217, line: 103, baseType: !113, size: 32)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10278, file: !2217, line: 103, baseType: !113, size: 32)
!10282 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 104, baseType: !10283, size: 32, offset: 160)
!10283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 104, size: 32, elements: !10284)
!10284 = !{!10285, !10286}
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10283, file: !2217, line: 104, baseType: !113, size: 32)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10283, file: !2217, line: 104, baseType: !113, size: 32)
!10287 = !DIDerivedType(tag: DW_TAG_member, scope: !10255, file: !2217, line: 105, baseType: !10288, size: 32, offset: 192)
!10288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10255, file: !2217, line: 105, size: 32, elements: !10289)
!10289 = !{!10290, !10291}
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10288, file: !2217, line: 105, baseType: !113, size: 32)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10288, file: !2217, line: 105, baseType: !113, size: 32)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10255, file: !2217, line: 106, baseType: !113, size: 32, offset: 224)
!10293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10294, size: 32)
!10294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !10295)
!10295 = !{!10296, !10354, !10366, !10367, !10368, !10369, !10375, !10390}
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10294, file: !127, line: 247, baseType: !10297, size: 384)
!10297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !10298)
!10298 = !{!10299, !10323, !10330, !10331, !10332, !10341, !10342, !10343}
!10299 = !DIDerivedType(tag: DW_TAG_member, scope: !10297, file: !127, line: 60, baseType: !10300, size: 64)
!10300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10297, file: !127, line: 60, size: 64, elements: !10301)
!10301 = !{!10302, !10317}
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10300, file: !127, line: 61, baseType: !10303, size: 64)
!10303 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !10304)
!10304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10305)
!10305 = !{!10306, !10312}
!10306 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !137, line: 38, baseType: !10307, size: 32)
!10307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !137, line: 38, size: 32, elements: !10308)
!10308 = !{!10309, !10311}
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10307, file: !137, line: 39, baseType: !10310, size: 32)
!10310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10304, size: 32)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10307, file: !137, line: 40, baseType: !10310, size: 32)
!10312 = !DIDerivedType(tag: DW_TAG_member, scope: !10304, file: !137, line: 42, baseType: !10313, size: 32, offset: 32)
!10313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10304, file: !137, line: 42, size: 32, elements: !10314)
!10314 = !{!10315, !10316}
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10313, file: !137, line: 43, baseType: !10310, size: 32)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10313, file: !137, line: 44, baseType: !10310, size: 32)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10300, file: !127, line: 62, baseType: !10318, size: 64)
!10318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !10319)
!10319 = !{!10320}
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10318, file: !153, line: 50, baseType: !10321, size: 64)
!10321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10322, size: 64, elements: !158)
!10322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10318, size: 32)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10297, file: !127, line: 68, baseType: !10324, size: 32, offset: 64)
!10324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10325, size: 32)
!10325 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10326)
!10326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10327)
!10327 = !{!10328}
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10326, file: !163, line: 232, baseType: !10329, size: 64)
!10329 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10304)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10297, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10297, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!10332 = !DIDerivedType(tag: DW_TAG_member, scope: !10297, file: !127, line: 90, baseType: !10333, size: 16, offset: 112)
!10333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10297, file: !127, line: 90, size: 16, elements: !10334)
!10334 = !{!10335, !10340}
!10335 = !DIDerivedType(tag: DW_TAG_member, scope: !10333, file: !127, line: 91, baseType: !10336, size: 16)
!10336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10333, file: !127, line: 91, size: 16, elements: !10337)
!10337 = !{!10338, !10339}
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10336, file: !127, line: 96, baseType: !179, size: 8)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10336, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10333, file: !127, line: 100, baseType: !183, size: 16)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10297, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10297, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10297, file: !127, line: 131, baseType: !10344, size: 192, offset: 192)
!10344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !10345)
!10345 = !{!10346, !10347, !10353}
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10344, file: !163, line: 245, baseType: !10303, size: 64)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10344, file: !163, line: 246, baseType: !10348, size: 32, offset: 64)
!10348 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !10349)
!10349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10350, size: 32)
!10350 = !DISubroutineType(types: !10351)
!10351 = !{null, !10352}
!10352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10344, size: 32)
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10344, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10294, file: !127, line: 250, baseType: !10355, size: 288, offset: 384)
!10355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !10356)
!10356 = !{!10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365}
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10355, file: !200, line: 26, baseType: !113, size: 32)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10355, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10355, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10355, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10355, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10355, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10355, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10355, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10355, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10294, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10294, file: !127, line: 256, baseType: !10325, size: 64, offset: 704)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10294, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10294, file: !127, line: 300, baseType: !10370, size: 96, offset: 800)
!10370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !10371)
!10371 = !{!10372, !10373, !10374}
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10370, file: !127, line: 153, baseType: !22, size: 32)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10370, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10370, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10294, file: !127, line: 325, baseType: !10376, size: 32, offset: 896)
!10376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10377, size: 32)
!10377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !10378)
!10378 = !{!10379, !10385, !10386}
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10377, file: !122, line: 5074, baseType: !10380, size: 96)
!10380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !10381)
!10381 = !{!10382, !10383, !10384}
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10380, file: !226, line: 57, baseType: !229, size: 32)
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10380, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!10384 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10380, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10377, file: !122, line: 5075, baseType: !10325, size: 64, offset: 96)
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10377, file: !122, line: 5076, baseType: !10387, size: 32, offset: 160)
!10387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10388)
!10388 = !{!10389}
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10387, file: !236, line: 52, baseType: !22, size: 32)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10294, file: !127, line: 343, baseType: !10391, size: 64, offset: 928)
!10391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !10392)
!10392 = !{!10393, !10394}
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10391, file: !200, line: 63, baseType: !113, size: 32)
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10391, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!10395 = !{!10396, !10397, !10398}
!10396 = !DILocalVariable(name: "reason", arg: 1, scope: !10246, file: !2413, line: 209, type: !32)
!10397 = !DILocalVariable(name: "esf", arg: 2, scope: !10246, file: !2413, line: 209, type: !10249)
!10398 = !DILocalVariable(name: "thread", arg: 3, scope: !10246, file: !2413, line: 210, type: !10293)
!10399 = !DILocation(line: 0, scope: !10246)
!10400 = !DILocation(line: 212, column: 1, scope: !10246)
!10401 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2413, file: !2413, line: 214, type: !10402, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10404)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{null, !22, !22}
!10404 = !{!10405, !10406}
!10405 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10401, file: !2413, line: 214, type: !22)
!10406 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10401, file: !2413, line: 214, type: !22)
!10407 = !DILocation(line: 0, scope: !10401)
!10408 = !DILocation(line: 216, column: 1, scope: !10401)
!10409 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2413, file: !2413, line: 218, type: !10410, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10412)
!10410 = !DISubroutineType(types: !10411)
!10411 = !{null, !432, !111}
!10412 = !{!10413, !10414}
!10413 = !DILocalVariable(name: "buf", arg: 1, scope: !10409, file: !2413, line: 218, type: !432)
!10414 = !DILocalVariable(name: "buflen", arg: 2, scope: !10409, file: !2413, line: 218, type: !111)
!10415 = !DILocation(line: 0, scope: !10409)
!10416 = !DILocation(line: 220, column: 1, scope: !10409)
!10417 = distinct !DISubprogram(name: "coredump_query", scope: !2413, file: !2413, line: 222, type: !10418, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10420)
!10418 = !DISubroutineType(types: !10419)
!10419 = !{!105, !2412, !104}
!10420 = !{!10421, !10422}
!10421 = !DILocalVariable(name: "query_id", arg: 1, scope: !10417, file: !2413, line: 222, type: !2412)
!10422 = !DILocalVariable(name: "arg", arg: 2, scope: !10417, file: !2413, line: 222, type: !104)
!10423 = !DILocation(line: 0, scope: !10417)
!10424 = !DILocation(line: 224, column: 2, scope: !10417)
!10425 = distinct !DISubprogram(name: "coredump_cmd", scope: !2413, file: !2413, line: 227, type: !10426, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10428)
!10426 = !DISubroutineType(types: !10427)
!10427 = !{!105, !2419, !104}
!10428 = !{!10429, !10430}
!10429 = !DILocalVariable(name: "query_id", arg: 1, scope: !10425, file: !2413, line: 227, type: !2419)
!10430 = !DILocalVariable(name: "arg", arg: 2, scope: !10425, file: !2413, line: 227, type: !104)
!10431 = !DILocation(line: 0, scope: !10425)
!10432 = !DILocation(line: 229, column: 2, scope: !10425)
!10433 = distinct !DISubprogram(name: "arch_system_halt", scope: !10434, file: !10434, line: 23, type: !6714, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10435)
!10434 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10435 = !{!10436}
!10436 = !DILocalVariable(name: "reason", arg: 1, scope: !10433, file: !10434, line: 23, type: !32)
!10437 = !DILocation(line: 0, scope: !10433)
!10438 = !DILocation(line: 55, column: 2, scope: !10439, inlinedAt: !10443)
!10439 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10440)
!10440 = !{!10441, !10442}
!10441 = !DILocalVariable(name: "key", scope: !10439, file: !6640, line: 44, type: !32)
!10442 = !DILocalVariable(name: "tmp", scope: !10439, file: !6640, line: 53, type: !32)
!10443 = distinct !DILocation(line: 31, column: 8, scope: !10433)
!10444 = !{i64 1325614}
!10445 = !DILocation(line: 0, scope: !10439, inlinedAt: !10443)
!10446 = !DILocation(line: 32, column: 2, scope: !10433)
!10447 = !DILocation(line: 32, column: 2, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10449, file: !10434, line: 32, column: 2)
!10449 = distinct !DILexicalBlock(scope: !10433, file: !10434, line: 32, column: 2)
!10450 = distinct !{!10450, !10451, !10452}
!10451 = !DILocation(line: 32, column: 2, scope: !10449)
!10452 = !DILocation(line: 34, column: 2, scope: !10449)
!10453 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10434, file: !10434, line: 39, type: !10454, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10456)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{null, !32, !10249}
!10456 = !{!10457, !10458}
!10457 = !DILocalVariable(name: "reason", arg: 1, scope: !10453, file: !10434, line: 39, type: !32)
!10458 = !DILocalVariable(name: "esf", arg: 2, scope: !10453, file: !10434, line: 40, type: !10249)
!10459 = !DILocation(line: 0, scope: !10453)
!10460 = !DILocation(line: 45, column: 2, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !10434, line: 45, column: 2)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !10434, line: 45, column: 2)
!10463 = distinct !DILexicalBlock(scope: !10464, file: !10434, line: 45, column: 2)
!10464 = distinct !DILexicalBlock(scope: !10453, file: !10434, line: 45, column: 2)
!10465 = !DILocation(line: 46, column: 2, scope: !10453)
!10466 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10434, file: !10434, line: 81, type: !6714, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10467)
!10467 = !{!10468}
!10468 = !DILocalVariable(name: "reason", arg: 1, scope: !10466, file: !10434, line: 81, type: !32)
!10469 = !DILocation(line: 0, scope: !10466)
!10470 = !DILocation(line: 83, column: 2, scope: !10466)
!10471 = distinct !DISubprogram(name: "z_fatal_error", scope: !10434, file: !10434, line: 96, type: !10454, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10472)
!10472 = !{!10473, !10474, !10475, !10476}
!10473 = !DILocalVariable(name: "reason", arg: 1, scope: !10471, file: !10434, line: 96, type: !32)
!10474 = !DILocalVariable(name: "esf", arg: 2, scope: !10471, file: !10434, line: 96, type: !10249)
!10475 = !DILocalVariable(name: "key", scope: !10471, file: !10434, line: 102, type: !32)
!10476 = !DILocalVariable(name: "thread", scope: !10471, file: !10434, line: 103, type: !10293)
!10477 = !DILocation(line: 0, scope: !10471)
!10478 = !DILocation(line: 55, column: 2, scope: !10439, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 102, column: 21, scope: !10471)
!10480 = !DILocation(line: 0, scope: !10439, inlinedAt: !10479)
!10481 = !DILocation(line: 104, column: 4, scope: !10471)
!10482 = !DILocation(line: 109, column: 2, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !10434, line: 109, column: 2)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !10434, line: 109, column: 2)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !10434, line: 109, column: 2)
!10486 = distinct !DILexicalBlock(scope: !10471, file: !10434, line: 109, column: 2)
!10487 = !DILocation(line: 119, column: 11, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10471, file: !10434, line: 119, column: 6)
!10489 = !DILocation(line: 119, column: 20, scope: !10488)
!10490 = !DILocalVariable(name: "esf", arg: 1, scope: !10491, file: !8296, line: 71, type: !10249)
!10491 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8296, file: !8296, line: 71, type: !10492, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10494)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!540, !10249}
!10494 = !{!10490}
!10495 = !DILocation(line: 0, scope: !10491, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 119, column: 23, scope: !10488)
!10497 = !DILocation(line: 73, column: 21, scope: !10491, inlinedAt: !10496)
!10498 = !DILocation(line: 73, column: 26, scope: !10491, inlinedAt: !10496)
!10499 = !DILocation(line: 73, column: 9, scope: !10491, inlinedAt: !10496)
!10500 = !DILocation(line: 119, column: 6, scope: !10471)
!10501 = !DILocation(line: 120, column: 3, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !10434, line: 120, column: 3)
!10503 = distinct !DILexicalBlock(scope: !10504, file: !10434, line: 120, column: 3)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !10434, line: 120, column: 3)
!10505 = distinct !DILexicalBlock(scope: !10506, file: !10434, line: 120, column: 3)
!10506 = distinct !DILexicalBlock(scope: !10488, file: !10434, line: 119, column: 57)
!10507 = !DILocation(line: 121, column: 2, scope: !10506)
!10508 = !DILocation(line: 124, column: 2, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !10434, line: 124, column: 2)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !10434, line: 124, column: 2)
!10511 = distinct !DILexicalBlock(scope: !10512, file: !10434, line: 124, column: 2)
!10512 = distinct !DILexicalBlock(scope: !10471, file: !10434, line: 124, column: 2)
!10513 = !DILocation(line: 131, column: 2, scope: !10471)
!10514 = !DILocation(line: 147, column: 3, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !10434, line: 147, column: 3)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !10434, line: 147, column: 3)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !10434, line: 146, column: 32)
!10518 = distinct !DILexicalBlock(scope: !10471, file: !10434, line: 146, column: 6)
!10519 = !DILocation(line: 147, column: 3, scope: !10516)
!10520 = !DILocation(line: 147, column: 3, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10515, file: !10434, line: 147, column: 3)
!10522 = !DILocalVariable(name: "key", arg: 1, scope: !10523, file: !6640, line: 84, type: !32)
!10523 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10524)
!10524 = !{!10522}
!10525 = !DILocation(line: 0, scope: !10523, inlinedAt: !10526)
!10526 = distinct !DILocation(line: 186, column: 2, scope: !10471)
!10527 = !DILocation(line: 95, column: 2, scope: !10523, inlinedAt: !10526)
!10528 = !{i64 1326431}
!10529 = !DILocation(line: 189, column: 3, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !10434, line: 188, column: 41)
!10531 = distinct !DILexicalBlock(scope: !10471, file: !10434, line: 188, column: 6)
!10532 = !DILocation(line: 191, column: 1, scope: !10471)
!10533 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !10534, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !397)
!10534 = !DISubroutineType(types: !10535)
!10535 = !{!10536}
!10536 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !10293)
!10537 = !DILocation(line: 535, column: 9, scope: !10533)
!10538 = !DILocation(line: 535, column: 2, scope: !10533)
!10539 = distinct !DISubprogram(name: "reason_to_str", scope: !10434, file: !10434, line: 62, type: !10540, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10542)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{!269, !32}
!10542 = !{!10543}
!10543 = !DILocalVariable(name: "reason", arg: 1, scope: !10539, file: !10434, line: 62, type: !32)
!10544 = !DILocation(line: 0, scope: !10539)
!10545 = !DILocation(line: 64, column: 2, scope: !10539)
!10546 = !DILocation(line: 0, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10539, file: !10434, line: 64, column: 18)
!10548 = !DILocation(line: 78, column: 1, scope: !10539)
!10549 = distinct !DISubprogram(name: "thread_name_get", scope: !10434, file: !10434, line: 51, type: !10550, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10552)
!10550 = !DISubroutineType(types: !10551)
!10551 = !{!269, !10293}
!10552 = !{!10553, !10554}
!10553 = !DILocalVariable(name: "thread", arg: 1, scope: !10549, file: !10434, line: 51, type: !10293)
!10554 = !DILocalVariable(name: "thread_name", scope: !10549, file: !10434, line: 53, type: !269)
!10555 = !DILocation(line: 0, scope: !10549)
!10556 = !DILocation(line: 53, column: 36, scope: !10549)
!10557 = !DILocation(line: 53, column: 28, scope: !10549)
!10558 = !DILocation(line: 53, column: 47, scope: !10549)
!10559 = !DILocation(line: 55, column: 19, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10549, file: !10434, line: 55, column: 6)
!10561 = !DILocation(line: 55, column: 28, scope: !10560)
!10562 = !DILocation(line: 55, column: 32, scope: !10560)
!10563 = !DILocation(line: 55, column: 47, scope: !10560)
!10564 = !DILocation(line: 55, column: 6, scope: !10549)
!10565 = !DILocation(line: 57, column: 2, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10560, file: !10434, line: 55, column: 57)
!10567 = !DILocation(line: 59, column: 2, scope: !10549)
!10568 = distinct !DISubprogram(name: "k_thread_abort", scope: !2698, file: !2698, line: 188, type: !10569, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !10571)
!10569 = !DISubroutineType(types: !10570)
!10570 = !{null, !10536}
!10571 = !{!10572}
!10572 = !DILocalVariable(name: "thread", arg: 1, scope: !10568, file: !2698, line: 188, type: !10536)
!10573 = !DILocation(line: 0, scope: !10568)
!10574 = !DILocation(line: 197, column: 2, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10568, file: !2698, line: 197, column: 2)
!10576 = !{i64 2151097650}
!10577 = !DILocation(line: 198, column: 2, scope: !10568)
!10578 = !DILocation(line: 199, column: 1, scope: !10568)
!10579 = distinct !DISubprogram(name: "z_current_get", scope: !2698, file: !2698, line: 173, type: !10534, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2409, retainedNodes: !397)
!10580 = !DILocation(line: 180, column: 2, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10579, file: !2698, line: 180, column: 2)
!10582 = !{i64 2151097582}
!10583 = !DILocation(line: 181, column: 9, scope: !10579)
!10584 = !DILocation(line: 181, column: 2, scope: !10579)
!10585 = distinct !DISubprogram(name: "z_early_memset", scope: !1373, file: !1373, line: 108, type: !10586, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{null, !104, !105, !111}
!10588 = !{!10589, !10590, !10591}
!10589 = !DILocalVariable(name: "dst", arg: 1, scope: !10585, file: !1373, line: 108, type: !104)
!10590 = !DILocalVariable(name: "c", arg: 2, scope: !10585, file: !1373, line: 108, type: !105)
!10591 = !DILocalVariable(name: "n", arg: 3, scope: !10585, file: !1373, line: 108, type: !111)
!10592 = !DILocation(line: 0, scope: !10585)
!10593 = !DILocation(line: 110, column: 9, scope: !10585)
!10594 = !DILocation(line: 111, column: 1, scope: !10585)
!10595 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1373, file: !1373, line: 121, type: !10596, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10598)
!10596 = !DISubroutineType(types: !10597)
!10597 = !{null, !104, !13, !111}
!10598 = !{!10599, !10600, !10601}
!10599 = !DILocalVariable(name: "dst", arg: 1, scope: !10595, file: !1373, line: 121, type: !104)
!10600 = !DILocalVariable(name: "src", arg: 2, scope: !10595, file: !1373, line: 121, type: !13)
!10601 = !DILocalVariable(name: "n", arg: 3, scope: !10595, file: !1373, line: 121, type: !111)
!10602 = !DILocation(line: 0, scope: !10595)
!10603 = !DILocation(line: 123, column: 9, scope: !10595)
!10604 = !DILocation(line: 124, column: 1, scope: !10595)
!10605 = distinct !DISubprogram(name: "z_bss_zero", scope: !1373, file: !1373, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !397)
!10606 = !DILocation(line: 143, column: 2, scope: !10605)
!10607 = !DILocation(line: 168, column: 1, scope: !10605)
!10608 = distinct !DISubprogram(name: "z_init_cpu", scope: !1373, file: !1373, line: 372, type: !10609, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10611)
!10609 = !DISubroutineType(types: !10610)
!10610 = !{null, !105}
!10611 = !{!10612}
!10612 = !DILocalVariable(name: "id", arg: 1, scope: !10608, file: !1373, line: 372, type: !105)
!10613 = !DILocation(line: 0, scope: !10608)
!10614 = !DILocation(line: 374, column: 2, scope: !10608)
!10615 = !DILocation(line: 375, column: 34, scope: !10608)
!10616 = !DILocation(line: 375, column: 19, scope: !10608)
!10617 = !DILocation(line: 375, column: 31, scope: !10608)
!10618 = !DILocation(line: 376, column: 24, scope: !10608)
!10619 = !DILocation(line: 376, column: 19, scope: !10608)
!10620 = !DILocation(line: 376, column: 22, scope: !10608)
!10621 = !DILocation(line: 378, column: 26, scope: !10608)
!10622 = !DILocation(line: 378, column: 4, scope: !10608)
!10623 = !DILocation(line: 378, column: 50, scope: !10608)
!10624 = !DILocation(line: 377, column: 19, scope: !10608)
!10625 = !DILocation(line: 377, column: 29, scope: !10608)
!10626 = !DILocation(line: 384, column: 1, scope: !10608)
!10627 = distinct !DISubprogram(name: "init_idle_thread", scope: !1373, file: !1373, line: 343, type: !10609, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10628)
!10628 = !{!10629, !10630, !10631, !10634}
!10629 = !DILocalVariable(name: "i", arg: 1, scope: !10627, file: !1373, line: 343, type: !105)
!10630 = !DILocalVariable(name: "thread", scope: !10627, file: !1373, line: 345, type: !1465)
!10631 = !DILocalVariable(name: "stack", scope: !10627, file: !1373, line: 346, type: !10632)
!10632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10633, size: 32)
!10633 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !1582)
!10634 = !DILocalVariable(name: "tname", scope: !10627, file: !1373, line: 358, type: !102)
!10635 = !DILocation(line: 0, scope: !10627)
!10636 = !DILocation(line: 345, column: 29, scope: !10627)
!10637 = !DILocation(line: 346, column: 28, scope: !10627)
!10638 = !DILocation(line: 362, column: 37, scope: !10627)
!10639 = !DILocation(line: 362, column: 36, scope: !10627)
!10640 = !DILocation(line: 361, column: 2, scope: !10627)
!10641 = !DILocation(line: 365, column: 2, scope: !10627)
!10642 = !DILocation(line: 370, column: 1, scope: !10627)
!10643 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !10644, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10646)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!102, !10632}
!10646 = !{!10647}
!10647 = !DILocalVariable(name: "sym", arg: 1, scope: !10643, file: !249, line: 331, type: !10632)
!10648 = !DILocation(line: 0, scope: !10643)
!10649 = !DILocation(line: 333, column: 21, scope: !10643)
!10650 = !DILocation(line: 333, column: 2, scope: !10643)
!10651 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10652, file: !10652, line: 155, type: !10653, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10655)
!10652 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10653 = !DISubroutineType(types: !10654)
!10654 = !{null, !1465}
!10655 = !{!10656}
!10656 = !DILocalVariable(name: "thread", arg: 1, scope: !10651, file: !10652, line: 155, type: !1465)
!10657 = !DILocation(line: 0, scope: !10651)
!10658 = !DILocation(line: 157, column: 15, scope: !10651)
!10659 = !DILocation(line: 157, column: 28, scope: !10651)
!10660 = !DILocation(line: 158, column: 1, scope: !10651)
!10661 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1373, file: !1373, line: 451, type: !10410, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10662)
!10662 = !{!10663, !10664}
!10663 = !DILocalVariable(name: "buf", arg: 1, scope: !10661, file: !1373, line: 451, type: !432)
!10664 = !DILocalVariable(name: "length", arg: 2, scope: !10661, file: !1373, line: 451, type: !111)
!10665 = !DILocation(line: 0, scope: !10661)
!10666 = !DILocation(line: 485, column: 2, scope: !10661)
!10667 = !DILocation(line: 486, column: 1, scope: !10661)
!10668 = distinct !DISubprogram(name: "sys_rand_get", scope: !10669, file: !10669, line: 46, type: !10670, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10672)
!10669 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/kernel/metairq_dispatch")
!10670 = !DISubroutineType(types: !10671)
!10671 = !{null, !104, !111}
!10672 = !{!10673, !10674}
!10673 = !DILocalVariable(name: "dst", arg: 1, scope: !10668, file: !10669, line: 46, type: !104)
!10674 = !DILocalVariable(name: "len", arg: 2, scope: !10668, file: !10669, line: 46, type: !111)
!10675 = !DILocation(line: 0, scope: !10668)
!10676 = !DILocation(line: 56, column: 2, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10668, file: !10669, line: 56, column: 2)
!10678 = !{i64 2151315379}
!10679 = !DILocation(line: 57, column: 2, scope: !10668)
!10680 = !DILocation(line: 58, column: 1, scope: !10668)
!10681 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !10669, file: !10669, line: 43, type: !10670, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!10682 = distinct !DISubprogram(name: "z_cstart", scope: !1373, file: !1373, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10683)
!10683 = !{!10684}
!10684 = !DILocalVariable(name: "dummy_thread", scope: !10682, file: !1373, line: 518, type: !1466)
!10685 = !DILocation(line: 507, column: 2, scope: !10682)
!10686 = !DILocation(line: 43, column: 14, scope: !10687, inlinedAt: !10691)
!10687 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10688, file: !10688, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10689)
!10688 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10689 = !{!10690}
!10690 = !DILocalVariable(name: "msp", scope: !10687, file: !10688, line: 42, type: !113)
!10691 = distinct !DILocation(line: 44, column: 2, scope: !10692, inlinedAt: !10694)
!10692 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10693, file: !10693, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !397)
!10693 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10694 = distinct !DILocation(line: 510, column: 2, scope: !10682)
!10695 = !DILocation(line: 43, column: 3, scope: !10687, inlinedAt: !10691)
!10696 = !DILocation(line: 43, column: 60, scope: !10687, inlinedAt: !10691)
!10697 = !DILocation(line: 0, scope: !10687, inlinedAt: !10691)
!10698 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10699, file: !7290, line: 1153, type: !113)
!10699 = distinct !DISubprogram(name: "__set_MSP", scope: !7290, file: !7290, line: 1153, type: !6724, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10700)
!10700 = !{!10698}
!10701 = !DILocation(line: 0, scope: !10699, inlinedAt: !10702)
!10702 = distinct !DILocation(line: 46, column: 2, scope: !10687, inlinedAt: !10691)
!10703 = !DILocation(line: 1155, column: 3, scope: !10699, inlinedAt: !10702)
!10704 = !{i64 1583379}
!10705 = !DILocation(line: 62, column: 11, scope: !10687, inlinedAt: !10691)
!10706 = !DILocation(line: 102, column: 2, scope: !10707, inlinedAt: !10708)
!10707 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8296, file: !8296, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !397)
!10708 = distinct !DILocation(line: 45, column: 2, scope: !10692, inlinedAt: !10694)
!10709 = !DILocation(line: 108, column: 2, scope: !10707, inlinedAt: !10708)
!10710 = !DILocation(line: 112, column: 2, scope: !10707, inlinedAt: !10708)
!10711 = !DILocation(line: 113, column: 2, scope: !10707, inlinedAt: !10708)
!10712 = !DILocation(line: 114, column: 2, scope: !10707, inlinedAt: !10708)
!10713 = !DILocation(line: 116, column: 2, scope: !10707, inlinedAt: !10708)
!10714 = !DILocation(line: 123, column: 13, scope: !10707, inlinedAt: !10708)
!10715 = !DILocation(line: 46, column: 2, scope: !10692, inlinedAt: !10694)
!10716 = !DILocation(line: 47, column: 2, scope: !10692, inlinedAt: !10694)
!10717 = !DILocation(line: 174, column: 12, scope: !10718, inlinedAt: !10719)
!10718 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8296, file: !8296, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !397)
!10719 = distinct !DILocation(line: 48, column: 2, scope: !10692, inlinedAt: !10694)
!10720 = !DILocation(line: 179, column: 12, scope: !10718, inlinedAt: !10719)
!10721 = !DILocation(line: 50, column: 2, scope: !10692, inlinedAt: !10694)
!10722 = !DILocation(line: 57, column: 2, scope: !10692, inlinedAt: !10694)
!10723 = !DILocation(line: 518, column: 2, scope: !10682)
!10724 = !DILocation(line: 518, column: 18, scope: !10682)
!10725 = !DILocation(line: 520, column: 2, scope: !10682)
!10726 = !DILocation(line: 523, column: 2, scope: !10682)
!10727 = !DILocation(line: 526, column: 2, scope: !10682)
!10728 = !DILocation(line: 527, column: 2, scope: !10682)
!10729 = !DILocation(line: 543, column: 24, scope: !10682)
!10730 = !DILocation(line: 543, column: 2, scope: !10682)
!10731 = !DILocation(line: 0, scope: !1605)
!10732 = !DILocation(line: 246, column: 15, scope: !1623)
!10733 = !DILocation(line: 246, column: 36, scope: !1622)
!10734 = !DILocation(line: 246, column: 2, scope: !1623)
!10735 = !DILocation(line: 247, column: 37, scope: !1621)
!10736 = !DILocation(line: 0, scope: !1621)
!10737 = !DILocation(line: 248, column: 19, scope: !1621)
!10738 = !DILocation(line: 248, column: 12, scope: !1621)
!10739 = !DILocation(line: 250, column: 11, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !1621, file: !1373, line: 250, column: 7)
!10741 = !DILocation(line: 250, column: 7, scope: !1621)
!10742 = !DILocation(line: 254, column: 11, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !1373, line: 254, column: 8)
!10744 = distinct !DILexicalBlock(scope: !10740, file: !1373, line: 250, column: 20)
!10745 = !DILocation(line: 254, column: 8, scope: !10744)
!10746 = !DILocation(line: 255, column: 9, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10743, file: !1373, line: 254, column: 17)
!10748 = !DILocation(line: 258, column: 9, scope: !10747)
!10749 = !DILocation(line: 261, column: 28, scope: !10747)
!10750 = !DILocation(line: 261, column: 10, scope: !10747)
!10751 = !DILocation(line: 261, column: 17, scope: !10747)
!10752 = !DILocation(line: 261, column: 26, scope: !10747)
!10753 = !DILocation(line: 262, column: 4, scope: !10747)
!10754 = !DILocation(line: 263, column: 9, scope: !10744)
!10755 = !DILocation(line: 263, column: 16, scope: !10744)
!10756 = !DILocation(line: 263, column: 28, scope: !10744)
!10757 = !DILocation(line: 264, column: 3, scope: !10744)
!10758 = !DILocation(line: 246, column: 60, scope: !1622)
!10759 = distinct !{!10759, !10734, !10760}
!10760 = !DILocation(line: 265, column: 2, scope: !1623)
!10761 = !DILocation(line: 266, column: 1, scope: !1605)
!10762 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !696, file: !696, line: 1638, type: !7330, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10763)
!10763 = !{!10764, !10765}
!10764 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10762, file: !696, line: 1638, type: !2111)
!10765 = !DILocalVariable(name: "priority", arg: 2, scope: !10762, file: !696, line: 1638, type: !113)
!10766 = !DILocation(line: 0, scope: !10762)
!10767 = !DILocation(line: 1646, column: 48, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !696, line: 1645, column: 3)
!10769 = distinct !DILexicalBlock(scope: !10762, file: !696, line: 1640, column: 7)
!10770 = !DILocation(line: 1646, column: 32, scope: !10768)
!10771 = !DILocation(line: 1646, column: 40, scope: !10768)
!10772 = !DILocation(line: 1646, column: 5, scope: !10768)
!10773 = !DILocation(line: 1646, column: 46, scope: !10768)
!10774 = !DILocation(line: 1648, column: 1, scope: !10762)
!10775 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10693, file: !10693, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!10776 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10777, file: !10777, line: 215, type: !10653, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10778)
!10777 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10778 = !{!10779}
!10779 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10776, file: !10777, line: 215, type: !1465)
!10780 = !DILocation(line: 0, scope: !10776)
!10781 = !DILocation(line: 217, column: 21, scope: !10776)
!10782 = !DILocation(line: 217, column: 34, scope: !10776)
!10783 = !DILocation(line: 221, column: 21, scope: !10776)
!10784 = !DILocation(line: 221, column: 34, scope: !10776)
!10785 = !DILocation(line: 223, column: 27, scope: !10776)
!10786 = !DILocation(line: 223, column: 33, scope: !10776)
!10787 = !DILocation(line: 224, column: 27, scope: !10776)
!10788 = !DILocation(line: 224, column: 32, scope: !10776)
!10789 = !DILocation(line: 232, column: 16, scope: !10776)
!10790 = !DILocation(line: 232, column: 30, scope: !10776)
!10791 = !DILocation(line: 239, column: 24, scope: !10776)
!10792 = !DILocation(line: 240, column: 1, scope: !10776)
!10793 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1373, file: !1373, line: 399, type: !10794, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10796)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!102}
!10796 = !{!10797}
!10797 = !DILocalVariable(name: "stack_ptr", scope: !10793, file: !1373, line: 401, type: !102)
!10798 = !DILocation(line: 404, column: 2, scope: !10793)
!10799 = !DILocation(line: 416, column: 24, scope: !10793)
!10800 = !DILocation(line: 418, column: 14, scope: !10793)
!10801 = !DILocation(line: 0, scope: !10793)
!10802 = !DILocation(line: 423, column: 2, scope: !10793)
!10803 = !DILocation(line: 424, column: 2, scope: !10793)
!10804 = !DILocation(line: 426, column: 2, scope: !10793)
!10805 = !DILocation(line: 428, column: 2, scope: !10793)
!10806 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1373, file: !1373, line: 432, type: !10807, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10809)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{null, !102}
!10809 = !{!10810}
!10810 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10806, file: !1373, line: 432, type: !102)
!10811 = !DILocation(line: 0, scope: !10806)
!10812 = !DILocation(line: 435, column: 2, scope: !10806)
!10813 = !DILocation(line: 445, column: 2, scope: !10806)
!10814 = distinct !DISubprogram(name: "bg_thread_main", scope: !1373, file: !1373, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1369, retainedNodes: !10815)
!10815 = !{!10816, !10817, !10818}
!10816 = !DILocalVariable(name: "unused1", arg: 1, scope: !10814, file: !1373, line: 277, type: !104)
!10817 = !DILocalVariable(name: "unused2", arg: 2, scope: !10814, file: !1373, line: 277, type: !104)
!10818 = !DILocalVariable(name: "unused3", arg: 3, scope: !10814, file: !1373, line: 277, type: !104)
!10819 = !DILocation(line: 0, scope: !10814)
!10820 = !DILocation(line: 291, column: 20, scope: !10814)
!10821 = !DILocation(line: 293, column: 2, scope: !10814)
!10822 = !DILocation(line: 297, column: 2, scope: !10814)
!10823 = !DILocation(line: 305, column: 2, scope: !10814)
!10824 = !DILocation(line: 307, column: 2, scope: !10814)
!10825 = !DILocation(line: 330, column: 8, scope: !10814)
!10826 = !DILocation(line: 333, column: 34, scope: !10814)
!10827 = !DILocation(line: 339, column: 1, scope: !10814)
!10828 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1634, file: !1634, line: 45, type: !10829, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10837)
!10829 = !DISubroutineType(types: !10830)
!10830 = !{null, !10831, !104}
!10831 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !10832)
!10832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10833, size: 32)
!10833 = !DISubroutineType(types: !10834)
!10834 = !{null, !10835, !104}
!10835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10836, size: 32)
!10836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1639)
!10837 = !{!10838, !10839}
!10838 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10828, file: !1634, line: 45, type: !10831)
!10839 = !DILocalVariable(name: "user_data", arg: 2, scope: !10828, file: !1634, line: 45, type: !104)
!10840 = !DILocation(line: 0, scope: !10828)
!10841 = !DILocation(line: 71, column: 1, scope: !10828)
!10842 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1634, file: !1634, line: 73, type: !10829, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10843)
!10843 = !{!10844, !10845}
!10844 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10842, file: !1634, line: 73, type: !10831)
!10845 = !DILocalVariable(name: "user_data", arg: 2, scope: !10842, file: !1634, line: 73, type: !104)
!10846 = !DILocation(line: 0, scope: !10842)
!10847 = !DILocation(line: 95, column: 1, scope: !10842)
!10848 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1634, file: !1634, line: 97, type: !8297, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !397)
!10849 = !DILocation(line: 1031, column: 3, scope: !10850, inlinedAt: !10853)
!10850 = distinct !DISubprogram(name: "__get_IPSR", scope: !7290, file: !7290, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10851)
!10851 = !{!10852}
!10852 = !DILocalVariable(name: "result", scope: !10850, file: !7290, line: 1029, type: !113)
!10853 = distinct !DILocation(line: 48, column: 10, scope: !10854, inlinedAt: !10855)
!10854 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !397)
!10855 = distinct !DILocation(line: 99, column: 9, scope: !10848)
!10856 = !{i64 1589030}
!10857 = !DILocation(line: 0, scope: !10850, inlinedAt: !10853)
!10858 = !DILocation(line: 48, column: 9, scope: !10854, inlinedAt: !10855)
!10859 = !DILocation(line: 99, column: 2, scope: !10848)
!10860 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1634, file: !1634, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !397)
!10861 = !DILocation(line: 108, column: 2, scope: !10860)
!10862 = !DILocation(line: 108, column: 17, scope: !10860)
!10863 = !DILocation(line: 108, column: 30, scope: !10860)
!10864 = !DILocation(line: 109, column: 1, scope: !10860)
!10865 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1634, file: !1634, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !397)
!10866 = !DILocation(line: 118, column: 2, scope: !10865)
!10867 = !DILocation(line: 118, column: 17, scope: !10865)
!10868 = !DILocation(line: 118, column: 30, scope: !10865)
!10869 = !DILocation(line: 119, column: 1, scope: !10865)
!10870 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1634, file: !1634, line: 126, type: !8297, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !397)
!10871 = !DILocation(line: 128, column: 10, scope: !10870)
!10872 = !DILocation(line: 128, column: 25, scope: !10870)
!10873 = !DILocation(line: 128, column: 38, scope: !10870)
!10874 = !DILocation(line: 128, column: 53, scope: !10870)
!10875 = !DILocation(line: 128, column: 2, scope: !10870)
!10876 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1634, file: !1634, line: 187, type: !10877, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10879)
!10877 = !DISubroutineType(types: !10878)
!10878 = !{!105, !1638, !269}
!10879 = !{!10880, !10881}
!10880 = !DILocalVariable(name: "thread", arg: 1, scope: !10876, file: !1634, line: 187, type: !1638)
!10881 = !DILocalVariable(name: "value", arg: 2, scope: !10876, file: !1634, line: 187, type: !269)
!10882 = !DILocation(line: 0, scope: !10876)
!10883 = !DILocation(line: 206, column: 2, scope: !10876)
!10884 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1634, file: !1634, line: 238, type: !10885, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10887)
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!269, !1638}
!10887 = !{!10888}
!10888 = !DILocalVariable(name: "thread", arg: 1, scope: !10884, file: !1634, line: 238, type: !1638)
!10889 = !DILocation(line: 0, scope: !10884)
!10890 = !DILocation(line: 244, column: 2, scope: !10884)
!10891 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1634, file: !1634, line: 248, type: !10892, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10894)
!10892 = !DISubroutineType(types: !10893)
!10893 = !{!105, !1637, !102, !111}
!10894 = !{!10895, !10896, !10897}
!10895 = !DILocalVariable(name: "thread", arg: 1, scope: !10891, file: !1634, line: 248, type: !1637)
!10896 = !DILocalVariable(name: "buf", arg: 2, scope: !10891, file: !1634, line: 248, type: !102)
!10897 = !DILocalVariable(name: "size", arg: 3, scope: !10891, file: !1634, line: 248, type: !111)
!10898 = !DILocation(line: 0, scope: !10891)
!10899 = !DILocation(line: 257, column: 2, scope: !10891)
!10900 = !DILocation(line: 0, scope: !1633)
!10901 = !DILocation(line: 281, column: 11, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !1633, file: !1634, line: 281, column: 6)
!10903 = !DILocation(line: 281, column: 20, scope: !10902)
!10904 = !DILocation(line: 275, column: 45, scope: !1633)
!10905 = !DILocation(line: 285, column: 10, scope: !1633)
!10906 = !DILocation(line: 0, scope: !1757)
!10907 = !DILocation(line: 293, column: 39, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !1757, file: !1634, line: 293, column: 2)
!10909 = !DILocation(line: 293, column: 2, scope: !1757)
!10910 = !DILocation(line: 273, column: 14, scope: !1633)
!10911 = !DILocation(line: 309, column: 2, scope: !1633)
!10912 = !DILocation(line: 309, column: 11, scope: !1633)
!10913 = !DILocation(line: 311, column: 2, scope: !1633)
!10914 = !DILocation(line: 293, column: 26, scope: !10908)
!10915 = !DILocation(line: 294, column: 9, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10908, file: !1634, line: 293, column: 54)
!10917 = !DILocation(line: 295, column: 21, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10916, file: !1634, line: 295, column: 7)
!10919 = !DILocation(line: 295, column: 28, scope: !10918)
!10920 = !DILocation(line: 295, column: 7, scope: !10916)
!10921 = !DILocation(line: 299, column: 25, scope: !10916)
!10922 = !DILocation(line: 299, column: 41, scope: !10916)
!10923 = !DILocation(line: 300, column: 7, scope: !10916)
!10924 = !DILocation(line: 300, column: 26, scope: !10916)
!10925 = !DILocation(line: 299, column: 10, scope: !10916)
!10926 = !DILocation(line: 299, column: 7, scope: !10916)
!10927 = !DILocation(line: 302, column: 16, scope: !10916)
!10928 = !DILocation(line: 304, column: 20, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10916, file: !1634, line: 304, column: 7)
!10930 = !DILocation(line: 304, column: 7, scope: !10916)
!10931 = !DILocation(line: 305, column: 26, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10929, file: !1634, line: 304, column: 26)
!10933 = !DILocation(line: 305, column: 42, scope: !10932)
!10934 = !DILocation(line: 305, column: 11, scope: !10932)
!10935 = !DILocation(line: 305, column: 8, scope: !10932)
!10936 = !DILocation(line: 306, column: 3, scope: !10932)
!10937 = !DILocation(line: 293, column: 50, scope: !10908)
!10938 = !DILocation(line: 312, column: 1, scope: !1633)
!10939 = distinct !DISubprogram(name: "copy_bytes", scope: !1634, file: !1634, line: 261, type: !10940, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{!111, !102, !111, !269, !111}
!10942 = !{!10943, !10944, !10945, !10946, !10947}
!10943 = !DILocalVariable(name: "dest", arg: 1, scope: !10939, file: !1634, line: 261, type: !102)
!10944 = !DILocalVariable(name: "dest_size", arg: 2, scope: !10939, file: !1634, line: 261, type: !111)
!10945 = !DILocalVariable(name: "src", arg: 3, scope: !10939, file: !1634, line: 261, type: !269)
!10946 = !DILocalVariable(name: "src_size", arg: 4, scope: !10939, file: !1634, line: 261, type: !111)
!10947 = !DILocalVariable(name: "bytes_to_copy", scope: !10939, file: !1634, line: 263, type: !111)
!10948 = !DILocation(line: 0, scope: !10939)
!10949 = !DILocation(line: 265, column: 18, scope: !10939)
!10950 = !DILocation(line: 266, column: 2, scope: !10939)
!10951 = !DILocation(line: 268, column: 2, scope: !10939)
!10952 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1634, file: !1634, line: 383, type: !10953, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10955)
!10953 = !DISubroutineType(types: !10954)
!10954 = !{null, !1638}
!10955 = !{!10956}
!10956 = !DILocalVariable(name: "thread", arg: 1, scope: !10952, file: !1634, line: 383, type: !1638)
!10957 = !DILocation(line: 0, scope: !10952)
!10958 = !DILocation(line: 387, column: 2, scope: !10952)
!10959 = !DILocation(line: 388, column: 1, scope: !10952)
!10960 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1634, file: !1634, line: 528, type: !10961, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !10968)
!10961 = !DISubroutineType(types: !10962)
!10962 = !{!102, !1638, !10963, !111, !254, !104, !104, !104, !105, !113, !269}
!10963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10964, size: 32)
!10964 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !10965)
!10965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !10966)
!10966 = !{!10967}
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10965, file: !249, line: 48, baseType: !103, size: 8)
!10968 = !{!10969, !10970, !10971, !10972, !10973, !10974, !10975, !10976, !10977, !10978, !10979}
!10969 = !DILocalVariable(name: "new_thread", arg: 1, scope: !10960, file: !1634, line: 528, type: !1638)
!10970 = !DILocalVariable(name: "stack", arg: 2, scope: !10960, file: !1634, line: 529, type: !10963)
!10971 = !DILocalVariable(name: "stack_size", arg: 3, scope: !10960, file: !1634, line: 529, type: !111)
!10972 = !DILocalVariable(name: "entry", arg: 4, scope: !10960, file: !1634, line: 530, type: !254)
!10973 = !DILocalVariable(name: "p1", arg: 5, scope: !10960, file: !1634, line: 531, type: !104)
!10974 = !DILocalVariable(name: "p2", arg: 6, scope: !10960, file: !1634, line: 531, type: !104)
!10975 = !DILocalVariable(name: "p3", arg: 7, scope: !10960, file: !1634, line: 531, type: !104)
!10976 = !DILocalVariable(name: "prio", arg: 8, scope: !10960, file: !1634, line: 532, type: !105)
!10977 = !DILocalVariable(name: "options", arg: 9, scope: !10960, file: !1634, line: 532, type: !113)
!10978 = !DILocalVariable(name: "name", arg: 10, scope: !10960, file: !1634, line: 532, type: !269)
!10979 = !DILocalVariable(name: "stack_ptr", scope: !10960, file: !1634, line: 534, type: !102)
!10980 = !DILocation(line: 0, scope: !10960)
!10981 = !DILocation(line: 536, column: 2, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10983, file: !1634, line: 536, column: 2)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !1634, line: 536, column: 2)
!10984 = distinct !DILexicalBlock(scope: !10960, file: !1634, line: 536, column: 2)
!10985 = !DILocation(line: 536, column: 2, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10982, file: !1634, line: 536, column: 2)
!10987 = !DILocation(line: 550, column: 28, scope: !10960)
!10988 = !DILocation(line: 550, column: 2, scope: !10960)
!10989 = !DILocation(line: 553, column: 34, scope: !10960)
!10990 = !DILocation(line: 553, column: 2, scope: !10960)
!10991 = !DILocation(line: 554, column: 14, scope: !10960)
!10992 = !DILocation(line: 564, column: 2, scope: !10960)
!10993 = !DILocation(line: 567, column: 14, scope: !10960)
!10994 = !DILocation(line: 567, column: 24, scope: !10960)
!10995 = !DILocation(line: 612, column: 7, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10960, file: !1634, line: 612, column: 6)
!10997 = !DILocation(line: 612, column: 6, scope: !10960)
!10998 = !DILocation(line: 627, column: 40, scope: !10960)
!10999 = !DILocation(line: 637, column: 2, scope: !10960)
!11000 = !DILocation(line: 613, column: 15, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10996, file: !1634, line: 612, column: 17)
!11002 = !DILocation(line: 613, column: 29, scope: !11001)
!11003 = !DILocation(line: 638, column: 1, scope: !10960)
!11004 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !10652, file: !10652, line: 78, type: !11005, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11007)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{!540, !104}
!11007 = !{!11008}
!11008 = !DILocalVariable(name: "entry_point", arg: 1, scope: !11004, file: !10652, line: 78, type: !104)
!11009 = !DILocation(line: 0, scope: !11004)
!11010 = !DILocation(line: 80, column: 21, scope: !11004)
!11011 = !DILocation(line: 80, column: 2, scope: !11004)
!11012 = distinct !DISubprogram(name: "z_waitq_init", scope: !11013, file: !11013, line: 47, type: !11014, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11016)
!11013 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11014 = !DISubroutineType(types: !11015)
!11015 = !{null, !1669}
!11016 = !{!11017}
!11017 = !DILocalVariable(name: "w", arg: 1, scope: !11012, file: !11013, line: 47, type: !1669)
!11018 = !DILocation(line: 0, scope: !11012)
!11019 = !DILocation(line: 49, column: 21, scope: !11012)
!11020 = !DILocation(line: 49, column: 2, scope: !11012)
!11021 = !DILocation(line: 50, column: 1, scope: !11012)
!11022 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1634, file: !1634, line: 791, type: !11023, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11026)
!11023 = !DISubroutineType(types: !11024)
!11024 = !{null, !11025, !105, !113, !32}
!11025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!11026 = !{!11027, !11028, !11029, !11030}
!11027 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11022, file: !1634, line: 791, type: !11025)
!11028 = !DILocalVariable(name: "priority", arg: 2, scope: !11022, file: !1634, line: 791, type: !105)
!11029 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11022, file: !1634, line: 792, type: !113)
!11030 = !DILocalVariable(name: "options", arg: 4, scope: !11022, file: !1634, line: 792, type: !32)
!11031 = !DILocation(line: 0, scope: !11022)
!11032 = !DILocation(line: 795, column: 15, scope: !11022)
!11033 = !DILocation(line: 795, column: 25, scope: !11022)
!11034 = !DILocation(line: 796, column: 30, scope: !11022)
!11035 = !DILocation(line: 796, column: 15, scope: !11022)
!11036 = !DILocation(line: 796, column: 28, scope: !11022)
!11037 = !DILocation(line: 797, column: 30, scope: !11022)
!11038 = !DILocation(line: 797, column: 15, scope: !11022)
!11039 = !DILocation(line: 797, column: 28, scope: !11022)
!11040 = !DILocation(line: 799, column: 22, scope: !11022)
!11041 = !DILocation(line: 799, column: 15, scope: !11022)
!11042 = !DILocation(line: 799, column: 20, scope: !11022)
!11043 = !DILocation(line: 801, column: 15, scope: !11022)
!11044 = !DILocation(line: 801, column: 28, scope: !11022)
!11045 = !DILocation(line: 814, column: 2, scope: !11022)
!11046 = !DILocation(line: 815, column: 1, scope: !11022)
!11047 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1634, file: !1634, line: 449, type: !11048, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11050)
!11048 = !DISubroutineType(types: !11049)
!11049 = !{!102, !1638, !10963, !111}
!11050 = !{!11051, !11052, !11053, !11054, !11055, !11056, !11057, !11058}
!11051 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11047, file: !1634, line: 449, type: !1638)
!11052 = !DILocalVariable(name: "stack", arg: 2, scope: !11047, file: !1634, line: 450, type: !10963)
!11053 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11047, file: !1634, line: 450, type: !111)
!11054 = !DILocalVariable(name: "stack_obj_size", scope: !11047, file: !1634, line: 452, type: !111)
!11055 = !DILocalVariable(name: "stack_buf_size", scope: !11047, file: !1634, line: 452, type: !111)
!11056 = !DILocalVariable(name: "stack_ptr", scope: !11047, file: !1634, line: 453, type: !102)
!11057 = !DILocalVariable(name: "stack_buf_start", scope: !11047, file: !1634, line: 453, type: !102)
!11058 = !DILocalVariable(name: "delta", scope: !11047, file: !1634, line: 454, type: !111)
!11059 = !DILocation(line: 0, scope: !11047)
!11060 = !DILocation(line: 465, column: 20, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11047, file: !1634, line: 463, column: 2)
!11062 = !DILocation(line: 466, column: 21, scope: !11061)
!11063 = !DILocation(line: 473, column: 28, scope: !11047)
!11064 = !DILocation(line: 514, column: 33, scope: !11047)
!11065 = !DILocation(line: 514, column: 25, scope: !11047)
!11066 = !DILocation(line: 514, column: 31, scope: !11047)
!11067 = !DILocation(line: 515, column: 25, scope: !11047)
!11068 = !DILocation(line: 515, column: 30, scope: !11047)
!11069 = !DILocation(line: 516, column: 25, scope: !11047)
!11070 = !DILocation(line: 516, column: 31, scope: !11047)
!11071 = !DILocation(line: 520, column: 2, scope: !11047)
!11072 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !11073, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11075)
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!102, !10963}
!11075 = !{!11076}
!11076 = !DILocalVariable(name: "sym", arg: 1, scope: !11072, file: !249, line: 331, type: !10963)
!11077 = !DILocation(line: 0, scope: !11072)
!11078 = !DILocation(line: 333, column: 21, scope: !11072)
!11079 = !DILocation(line: 333, column: 2, scope: !11072)
!11080 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11081, file: !11081, line: 40, type: !11082, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11084)
!11081 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11082 = !DISubroutineType(types: !11083)
!11083 = !{null, !11025}
!11084 = !{!11085}
!11085 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11080, file: !11081, line: 40, type: !11025)
!11086 = !DILocation(line: 0, scope: !11080)
!11087 = !DILocation(line: 42, column: 31, scope: !11080)
!11088 = !DILocation(line: 42, column: 2, scope: !11080)
!11089 = !DILocation(line: 43, column: 1, scope: !11080)
!11090 = distinct !DISubprogram(name: "z_init_timeout", scope: !11081, file: !11081, line: 25, type: !1695, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11091)
!11091 = !{!11092}
!11092 = !DILocalVariable(name: "to", arg: 1, scope: !11090, file: !11081, line: 25, type: !1697)
!11093 = !DILocation(line: 0, scope: !11090)
!11094 = !DILocation(line: 27, column: 22, scope: !11090)
!11095 = !DILocation(line: 27, column: 2, scope: !11090)
!11096 = !DILocation(line: 28, column: 1, scope: !11090)
!11097 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !11098, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11100)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{null, !1743}
!11100 = !{!11101}
!11101 = !DILocalVariable(name: "node", arg: 1, scope: !11097, file: !137, line: 211, type: !1743)
!11102 = !DILocation(line: 0, scope: !11097)
!11103 = !DILocation(line: 213, column: 8, scope: !11097)
!11104 = !DILocation(line: 213, column: 13, scope: !11097)
!11105 = !DILocation(line: 214, column: 8, scope: !11097)
!11106 = !DILocation(line: 214, column: 13, scope: !11097)
!11107 = !DILocation(line: 215, column: 1, scope: !11097)
!11108 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !11109, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11112)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{null, !11111}
!11111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 32)
!11112 = !{!11113}
!11113 = !DILocalVariable(name: "list", arg: 1, scope: !11108, file: !137, line: 197, type: !11111)
!11114 = !DILocation(line: 0, scope: !11108)
!11115 = !DILocation(line: 199, column: 8, scope: !11108)
!11116 = !DILocation(line: 199, column: 13, scope: !11108)
!11117 = !DILocation(line: 200, column: 8, scope: !11108)
!11118 = !DILocation(line: 200, column: 13, scope: !11108)
!11119 = !DILocation(line: 201, column: 1, scope: !11108)
!11120 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1634, file: !1634, line: 641, type: !11121, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11127)
!11121 = !DISubroutineType(types: !11122)
!11122 = !{!1637, !1638, !10963, !111, !254, !104, !104, !104, !105, !113, !11123}
!11123 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !11124)
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !11125)
!11125 = !{!11126}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11124, file: !108, line: 66, baseType: !107, size: 64)
!11127 = !{!11128, !11129, !11130, !11131, !11132, !11133, !11134, !11135, !11136, !11137}
!11128 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11120, file: !1634, line: 641, type: !1638)
!11129 = !DILocalVariable(name: "stack", arg: 2, scope: !11120, file: !1634, line: 642, type: !10963)
!11130 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11120, file: !1634, line: 643, type: !111)
!11131 = !DILocalVariable(name: "entry", arg: 4, scope: !11120, file: !1634, line: 643, type: !254)
!11132 = !DILocalVariable(name: "p1", arg: 5, scope: !11120, file: !1634, line: 644, type: !104)
!11133 = !DILocalVariable(name: "p2", arg: 6, scope: !11120, file: !1634, line: 644, type: !104)
!11134 = !DILocalVariable(name: "p3", arg: 7, scope: !11120, file: !1634, line: 644, type: !104)
!11135 = !DILocalVariable(name: "prio", arg: 8, scope: !11120, file: !1634, line: 645, type: !105)
!11136 = !DILocalVariable(name: "options", arg: 9, scope: !11120, file: !1634, line: 645, type: !113)
!11137 = !DILocalVariable(name: "delay", arg: 10, scope: !11120, file: !1634, line: 645, type: !11123)
!11138 = !DILocation(line: 0, scope: !11120)
!11139 = !DILocation(line: 1031, column: 3, scope: !10850, inlinedAt: !11140)
!11140 = distinct !DILocation(line: 48, column: 10, scope: !10854, inlinedAt: !11141)
!11141 = distinct !DILocation(line: 647, column: 2, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11143, file: !1634, line: 647, column: 2)
!11143 = distinct !DILexicalBlock(scope: !11120, file: !1634, line: 647, column: 2)
!11144 = !DILocation(line: 0, scope: !10850, inlinedAt: !11140)
!11145 = !DILocation(line: 48, column: 9, scope: !10854, inlinedAt: !11141)
!11146 = !DILocation(line: 647, column: 2, scope: !11143)
!11147 = !DILocation(line: 647, column: 2, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11142, file: !1634, line: 647, column: 2)
!11149 = !DILocation(line: 649, column: 2, scope: !11120)
!11150 = !DILocation(line: 652, column: 7, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11120, file: !1634, line: 652, column: 6)
!11152 = !DILocation(line: 652, column: 6, scope: !11120)
!11153 = !DILocation(line: 653, column: 3, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11151, file: !1634, line: 652, column: 39)
!11155 = !DILocation(line: 654, column: 2, scope: !11154)
!11156 = !DILocation(line: 656, column: 2, scope: !11120)
!11157 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1634, file: !1634, line: 401, type: !11158, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11160)
!11158 = !DISubroutineType(types: !11159)
!11159 = !{null, !1638, !11123}
!11160 = !{!11161, !11162}
!11161 = !DILocalVariable(name: "thread", arg: 1, scope: !11157, file: !1634, line: 401, type: !1638)
!11162 = !DILocalVariable(name: "delay", arg: 2, scope: !11157, file: !1634, line: 401, type: !11123)
!11163 = !DILocation(line: 0, scope: !11157)
!11164 = !DILocation(line: 404, column: 6, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11157, file: !1634, line: 404, column: 6)
!11166 = !DILocation(line: 404, column: 6, scope: !11157)
!11167 = !DILocation(line: 405, column: 3, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11165, file: !1634, line: 404, column: 38)
!11169 = !DILocation(line: 406, column: 2, scope: !11168)
!11170 = !DILocation(line: 407, column: 3, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11165, file: !1634, line: 406, column: 9)
!11172 = !DILocation(line: 413, column: 1, scope: !11157)
!11173 = distinct !DISubprogram(name: "k_thread_start", scope: !2698, file: !2698, line: 205, type: !11174, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11176)
!11174 = !DISubroutineType(types: !11175)
!11175 = !{null, !1637}
!11176 = !{!11177}
!11177 = !DILocalVariable(name: "thread", arg: 1, scope: !11173, file: !2698, line: 205, type: !1637)
!11178 = !DILocation(line: 0, scope: !11173)
!11179 = !DILocation(line: 214, column: 2, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11173, file: !2698, line: 214, column: 2)
!11181 = !{i64 2151122874}
!11182 = !DILocation(line: 215, column: 2, scope: !11173)
!11183 = !DILocation(line: 216, column: 1, scope: !11173)
!11184 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11081, file: !11081, line: 47, type: !11158, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11185)
!11185 = !{!11186, !11187}
!11186 = !DILocalVariable(name: "thread", arg: 1, scope: !11184, file: !11081, line: 47, type: !1638)
!11187 = !DILocalVariable(name: "ticks", arg: 2, scope: !11184, file: !11081, line: 47, type: !11123)
!11188 = !DILocation(line: 0, scope: !11184)
!11189 = !DILocation(line: 49, column: 30, scope: !11184)
!11190 = !DILocation(line: 49, column: 2, scope: !11184)
!11191 = !DILocation(line: 50, column: 1, scope: !11184)
!11192 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1634, file: !1634, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11193)
!11193 = !{!11194, !11211}
!11194 = !DILocalVariable(name: "thread_data", scope: !11195, file: !1634, line: 750, type: !11196)
!11195 = distinct !DILexicalBlock(scope: !11192, file: !1634, line: 750, column: 2)
!11196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11197, size: 32)
!11197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !11198)
!11198 = !{!11199, !11200, !11201, !11202, !11203, !11204, !11205, !11206, !11207, !11208, !11209, !11210}
!11199 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11197, file: !122, line: 621, baseType: !1638, size: 32)
!11200 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11197, file: !122, line: 622, baseType: !10963, size: 32, offset: 32)
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11197, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11197, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11197, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11197, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11197, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11197, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11197, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!11208 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11197, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!11209 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11197, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!11210 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11197, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!11211 = !DILocalVariable(name: "thread_data", scope: !11212, file: !1634, line: 781, type: !11196)
!11212 = distinct !DILexicalBlock(scope: !11192, file: !1634, line: 781, column: 2)
!11213 = !DILocation(line: 0, scope: !11195)
!11214 = !DILocation(line: 750, column: 2, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11216, file: !1634, line: 750, column: 2)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !1634, line: 750, column: 2)
!11217 = distinct !DILexicalBlock(scope: !11195, file: !1634, line: 750, column: 2)
!11218 = !DILocation(line: 750, column: 2, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !1634, line: 750, column: 2)
!11220 = distinct !DILexicalBlock(scope: !11215, file: !1634, line: 750, column: 2)
!11221 = !DILocation(line: 750, column: 2, scope: !11216)
!11222 = !DILocation(line: 750, column: 2, scope: !11195)
!11223 = !DILocation(line: 780, column: 2, scope: !11192)
!11224 = !DILocation(line: 0, scope: !11212)
!11225 = !DILocation(line: 781, column: 2, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !1634, line: 781, column: 2)
!11227 = distinct !DILexicalBlock(scope: !11228, file: !1634, line: 781, column: 2)
!11228 = distinct !DILexicalBlock(scope: !11212, file: !1634, line: 781, column: 2)
!11229 = !DILocation(line: 752, column: 17, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11217, file: !1634, line: 750, column: 38)
!11231 = !DILocation(line: 753, column: 17, scope: !11230)
!11232 = !DILocation(line: 754, column: 17, scope: !11230)
!11233 = !DILocation(line: 755, column: 17, scope: !11230)
!11234 = !DILocation(line: 756, column: 17, scope: !11230)
!11235 = !DILocation(line: 757, column: 17, scope: !11230)
!11236 = !DILocation(line: 758, column: 17, scope: !11230)
!11237 = !DILocation(line: 759, column: 17, scope: !11230)
!11238 = !DILocation(line: 760, column: 17, scope: !11230)
!11239 = !DILocation(line: 751, column: 3, scope: !11230)
!11240 = !DILocation(line: 763, column: 16, scope: !11230)
!11241 = !DILocation(line: 763, column: 29, scope: !11230)
!11242 = !DILocation(line: 763, column: 39, scope: !11230)
!11243 = !DILocation(line: 750, column: 2, scope: !11217)
!11244 = !DILocation(line: 750, column: 2, scope: !11220)
!11245 = distinct !{!11245, !11222, !11246}
!11246 = !DILocation(line: 764, column: 2, scope: !11195)
!11247 = !DILocation(line: 781, column: 2, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !1634, line: 781, column: 2)
!11249 = distinct !DILexicalBlock(scope: !11226, file: !1634, line: 781, column: 2)
!11250 = !DILocation(line: 781, column: 2, scope: !11227)
!11251 = !DILocation(line: 781, column: 2, scope: !11212)
!11252 = !DILocation(line: 787, column: 2, scope: !11192)
!11253 = !DILocation(line: 788, column: 1, scope: !11192)
!11254 = !DILocation(line: 782, column: 20, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11256, file: !1634, line: 782, column: 7)
!11256 = distinct !DILexicalBlock(scope: !11228, file: !1634, line: 781, column: 38)
!11257 = !DILocation(line: 782, column: 31, scope: !11255)
!11258 = !DILocation(line: 782, column: 7, scope: !11256)
!11259 = !DILocation(line: 783, column: 37, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11255, file: !1634, line: 782, column: 51)
!11261 = !DILocation(line: 784, column: 10, scope: !11260)
!11262 = !DILocation(line: 783, column: 4, scope: !11260)
!11263 = !DILocation(line: 785, column: 3, scope: !11260)
!11264 = !DILocation(line: 781, column: 2, scope: !11228)
!11265 = !DILocation(line: 781, column: 2, scope: !11249)
!11266 = distinct !{!11266, !11251, !11267}
!11267 = !DILocation(line: 786, column: 2, scope: !11212)
!11268 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11269, file: !11269, line: 403, type: !11270, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11272)
!11269 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11270 = !DISubroutineType(types: !11271)
!11271 = !{!114, !114}
!11272 = !{!11273}
!11273 = !DILocalVariable(name: "t", arg: 1, scope: !11268, file: !11269, line: 403, type: !114)
!11274 = !DILocation(line: 0, scope: !11268)
!11275 = !DILocalVariable(name: "t", arg: 1, scope: !11276, file: !11269, line: 102, type: !114)
!11276 = distinct !DISubprogram(name: "z_tmcvt", scope: !11269, file: !11269, line: 102, type: !11277, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11279)
!11277 = !DISubroutineType(types: !11278)
!11278 = !{!114, !114, !113, !113, !540, !540, !540, !540}
!11279 = !{!11275, !11280, !11281, !11282, !11283, !11284, !11285, !11286, !11287, !11288, !11289}
!11280 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11276, file: !11269, line: 102, type: !113)
!11281 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11276, file: !11269, line: 103, type: !113)
!11282 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11276, file: !11269, line: 103, type: !540)
!11283 = !DILocalVariable(name: "result32", arg: 5, scope: !11276, file: !11269, line: 104, type: !540)
!11284 = !DILocalVariable(name: "round_up", arg: 6, scope: !11276, file: !11269, line: 104, type: !540)
!11285 = !DILocalVariable(name: "round_off", arg: 7, scope: !11276, file: !11269, line: 105, type: !540)
!11286 = !DILocalVariable(name: "mul_ratio", scope: !11276, file: !11269, line: 107, type: !540)
!11287 = !DILocalVariable(name: "div_ratio", scope: !11276, file: !11269, line: 109, type: !540)
!11288 = !DILocalVariable(name: "off", scope: !11276, file: !11269, line: 116, type: !114)
!11289 = !DILocalVariable(name: "rdivisor", scope: !11290, file: !11269, line: 119, type: !113)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !11269, line: 118, column: 18)
!11291 = distinct !DILexicalBlock(scope: !11276, file: !11269, line: 118, column: 6)
!11292 = !DILocation(line: 0, scope: !11276, inlinedAt: !11293)
!11293 = distinct !DILocation(line: 406, column: 9, scope: !11268)
!11294 = !DILocation(line: 145, column: 13, scope: !11295, inlinedAt: !11293)
!11295 = distinct !DILexicalBlock(scope: !11296, file: !11269, line: 144, column: 10)
!11296 = distinct !DILexicalBlock(scope: !11297, file: !11269, line: 142, column: 7)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !11269, line: 141, column: 24)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !11269, line: 141, column: 13)
!11299 = distinct !DILexicalBlock(scope: !11276, file: !11269, line: 134, column: 6)
!11300 = !DILocation(line: 406, column: 2, scope: !11268)
!11301 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1634, file: !1634, line: 817, type: !4339, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11302)
!11302 = !{!11303, !11304, !11305, !11306}
!11303 = !DILocalVariable(name: "entry", arg: 1, scope: !11301, file: !1634, line: 817, type: !254)
!11304 = !DILocalVariable(name: "p1", arg: 2, scope: !11301, file: !1634, line: 818, type: !104)
!11305 = !DILocalVariable(name: "p2", arg: 3, scope: !11301, file: !1634, line: 818, type: !104)
!11306 = !DILocalVariable(name: "p3", arg: 4, scope: !11301, file: !1634, line: 818, type: !104)
!11307 = !DILocation(line: 0, scope: !11301)
!11308 = !DILocation(line: 822, column: 2, scope: !11301)
!11309 = !DILocation(line: 822, column: 17, scope: !11301)
!11310 = !DILocation(line: 822, column: 30, scope: !11301)
!11311 = !DILocation(line: 823, column: 2, scope: !11301)
!11312 = !DILocation(line: 845, column: 2, scope: !11301)
!11313 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !1634, file: !1634, line: 853, type: !11314, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11317)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!540, !11316}
!11316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!11317 = !{!11318, !11319}
!11318 = !DILocalVariable(name: "l", arg: 1, scope: !11313, file: !1634, line: 853, type: !11316)
!11319 = !DILocalVariable(name: "thread_cpu", scope: !11313, file: !1634, line: 855, type: !22)
!11320 = !DILocation(line: 0, scope: !11313)
!11321 = !DILocation(line: 855, column: 28, scope: !11313)
!11322 = !DILocation(line: 857, column: 17, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11313, file: !1634, line: 857, column: 6)
!11324 = !DILocation(line: 857, column: 6, scope: !11313)
!11325 = !DILocation(line: 858, column: 19, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !1634, line: 858, column: 7)
!11327 = distinct !DILexicalBlock(scope: !11323, file: !1634, line: 857, column: 24)
!11328 = !DILocation(line: 858, column: 42, scope: !11326)
!11329 = !DILocation(line: 858, column: 28, scope: !11326)
!11330 = !DILocation(line: 858, column: 25, scope: !11326)
!11331 = !DILocation(line: 858, column: 7, scope: !11327)
!11332 = !DILocation(line: 862, column: 2, scope: !11313)
!11333 = !DILocation(line: 863, column: 1, scope: !11313)
!11334 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !1634, file: !1634, line: 865, type: !11314, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11335)
!11335 = !{!11336}
!11336 = !DILocalVariable(name: "l", arg: 1, scope: !11334, file: !1634, line: 865, type: !11316)
!11337 = !DILocation(line: 0, scope: !11334)
!11338 = !DILocation(line: 867, column: 9, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11334, file: !1634, line: 867, column: 6)
!11340 = !DILocation(line: 867, column: 38, scope: !11339)
!11341 = !DILocation(line: 867, column: 24, scope: !11339)
!11342 = !DILocation(line: 867, column: 54, scope: !11339)
!11343 = !DILocation(line: 867, column: 43, scope: !11339)
!11344 = !DILocation(line: 867, column: 41, scope: !11339)
!11345 = !DILocation(line: 867, column: 20, scope: !11339)
!11346 = !DILocation(line: 867, column: 6, scope: !11334)
!11347 = !DILocation(line: 870, column: 16, scope: !11334)
!11348 = !DILocation(line: 871, column: 2, scope: !11334)
!11349 = !DILocation(line: 872, column: 1, scope: !11334)
!11350 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !1634, file: !1634, line: 874, type: !11351, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{null, !11316}
!11353 = !{!11354}
!11354 = !DILocalVariable(name: "l", arg: 1, scope: !11350, file: !1634, line: 874, type: !11316)
!11355 = !DILocation(line: 0, scope: !11350)
!11356 = !DILocation(line: 876, column: 32, scope: !11350)
!11357 = !DILocation(line: 876, column: 18, scope: !11350)
!11358 = !DILocation(line: 876, column: 48, scope: !11350)
!11359 = !DILocation(line: 876, column: 37, scope: !11350)
!11360 = !DILocation(line: 876, column: 35, scope: !11350)
!11361 = !DILocation(line: 876, column: 5, scope: !11350)
!11362 = !DILocation(line: 876, column: 16, scope: !11350)
!11363 = !DILocation(line: 877, column: 1, scope: !11350)
!11364 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1634, file: !1634, line: 888, type: !11365, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11367)
!11365 = !DISubroutineType(types: !11366)
!11366 = !{!105, !1638}
!11367 = !{!11368}
!11368 = !DILocalVariable(name: "thread", arg: 1, scope: !11364, file: !1634, line: 888, type: !1638)
!11369 = !DILocation(line: 0, scope: !11364)
!11370 = !DILocation(line: 893, column: 2, scope: !11364)
!11371 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1634, file: !1634, line: 897, type: !11372, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11374)
!11372 = !DISubroutineType(types: !11373)
!11373 = !{!105, !1638, !32}
!11374 = !{!11375, !11376}
!11375 = !DILocalVariable(name: "thread", arg: 1, scope: !11371, file: !1634, line: 897, type: !1638)
!11376 = !DILocalVariable(name: "options", arg: 2, scope: !11371, file: !1634, line: 897, type: !32)
!11377 = !DILocation(line: 0, scope: !11371)
!11378 = !DILocation(line: 902, column: 2, scope: !11371)
!11379 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1634, file: !1634, line: 1072, type: !11380, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11385)
!11380 = !DISubroutineType(types: !11381)
!11381 = !{!105, !1637, !11382}
!11382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11383, size: 32)
!11383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !11384)
!11384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!11385 = !{!11386, !11387}
!11386 = !DILocalVariable(name: "thread", arg: 1, scope: !11379, file: !1634, line: 1072, type: !1637)
!11387 = !DILocalVariable(name: "stats", arg: 2, scope: !11379, file: !1634, line: 1073, type: !11382)
!11388 = !DILocation(line: 0, scope: !11379)
!11389 = !DILocation(line: 1075, column: 14, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11379, file: !1634, line: 1075, column: 6)
!11391 = !DILocation(line: 1075, column: 23, scope: !11390)
!11392 = !DILocation(line: 1086, column: 1, scope: !11379)
!11393 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1634, file: !1634, line: 1088, type: !11394, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1740, retainedNodes: !11396)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!105, !11382}
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "stats", arg: 1, scope: !11393, file: !1634, line: 1088, type: !11382)
!11398 = !DILocation(line: 0, scope: !11393)
!11399 = !DILocation(line: 1094, column: 12, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11393, file: !1634, line: 1094, column: 6)
!11401 = !DILocation(line: 1120, column: 1, scope: !11393)
!11402 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11403, file: !11403, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !397)
!11403 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11404 = !DILocation(line: 30, column: 2, scope: !11402)
!11405 = !DILocation(line: 31, column: 1, scope: !11402)
!11406 = distinct !DISubprogram(name: "idle", scope: !11403, file: !11403, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !11407)
!11407 = !{!11408, !11409, !11410}
!11408 = !DILocalVariable(name: "unused1", arg: 1, scope: !11406, file: !11403, line: 33, type: !104)
!11409 = !DILocalVariable(name: "unused2", arg: 2, scope: !11406, file: !11403, line: 33, type: !104)
!11410 = !DILocalVariable(name: "unused3", arg: 3, scope: !11406, file: !11403, line: 33, type: !104)
!11411 = !DILocation(line: 0, scope: !11406)
!11412 = !DILocation(line: 39, column: 2, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11414, file: !11403, line: 39, column: 2)
!11414 = distinct !DILexicalBlock(scope: !11406, file: !11403, line: 39, column: 2)
!11415 = !DILocation(line: 39, column: 2, scope: !11414)
!11416 = !DILocation(line: 39, column: 2, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11413, file: !11403, line: 39, column: 2)
!11418 = !DILocation(line: 55, column: 2, scope: !11419, inlinedAt: !11423)
!11419 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !11420)
!11420 = !{!11421, !11422}
!11421 = !DILocalVariable(name: "key", scope: !11419, file: !6640, line: 44, type: !32)
!11422 = !DILocalVariable(name: "tmp", scope: !11419, file: !6640, line: 53, type: !32)
!11423 = distinct !DILocation(line: 62, column: 10, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11406, file: !11403, line: 41, column: 15)
!11425 = !{i64 1323956}
!11426 = !DILocation(line: 0, scope: !11419, inlinedAt: !11423)
!11427 = !DILocation(line: 86, column: 3, scope: !11424)
!11428 = !DILocation(line: 41, column: 2, scope: !11406)
!11429 = distinct !{!11429, !11428, !11430}
!11430 = !DILocation(line: 105, column: 2, scope: !11406)
!11431 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2427, retainedNodes: !397)
!11432 = !DILocation(line: 5629, column: 2, scope: !11431)
!11433 = !DILocation(line: 5630, column: 1, scope: !11431)
!11434 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!11435 = distinct !DISubprogram(name: "k_msgq_init", scope: !11436, file: !11436, line: 35, type: !11437, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11452)
!11436 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11437 = !DISubroutineType(types: !11438)
!11438 = !{null, !11439, !102, !111, !113}
!11439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11440, size: 32)
!11440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !11441)
!11441 = !{!11442, !11443, !11444, !11445, !11446, !11447, !11448, !11449, !11450, !11451}
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11440, file: !122, line: 4206, baseType: !2465, size: 64)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11440, file: !122, line: 4208, baseType: !2527, size: 32, offset: 64)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !11440, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!11445 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !11440, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!11446 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !11440, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !11440, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !11440, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !11440, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !11440, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11440, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!11452 = !{!11453, !11454, !11455, !11456}
!11453 = !DILocalVariable(name: "msgq", arg: 1, scope: !11435, file: !11436, line: 35, type: !11439)
!11454 = !DILocalVariable(name: "buffer", arg: 2, scope: !11435, file: !11436, line: 35, type: !102)
!11455 = !DILocalVariable(name: "msg_size", arg: 3, scope: !11435, file: !11436, line: 35, type: !111)
!11456 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !11435, file: !11436, line: 36, type: !113)
!11457 = !DILocation(line: 0, scope: !11435)
!11458 = !DILocation(line: 38, column: 8, scope: !11435)
!11459 = !DILocation(line: 38, column: 17, scope: !11435)
!11460 = !DILocation(line: 39, column: 8, scope: !11435)
!11461 = !DILocation(line: 39, column: 17, scope: !11435)
!11462 = !DILocation(line: 40, column: 8, scope: !11435)
!11463 = !DILocation(line: 40, column: 21, scope: !11435)
!11464 = !DILocation(line: 41, column: 40, scope: !11435)
!11465 = !DILocation(line: 41, column: 28, scope: !11435)
!11466 = !DILocation(line: 41, column: 8, scope: !11435)
!11467 = !DILocation(line: 41, column: 19, scope: !11435)
!11468 = !DILocation(line: 42, column: 8, scope: !11435)
!11469 = !DILocation(line: 42, column: 17, scope: !11435)
!11470 = !DILocation(line: 43, column: 8, scope: !11435)
!11471 = !DILocation(line: 43, column: 18, scope: !11435)
!11472 = !DILocation(line: 44, column: 8, scope: !11435)
!11473 = !DILocation(line: 44, column: 18, scope: !11435)
!11474 = !DILocation(line: 45, column: 8, scope: !11435)
!11475 = !DILocation(line: 45, column: 14, scope: !11435)
!11476 = !DILocation(line: 46, column: 22, scope: !11435)
!11477 = !DILocation(line: 46, column: 2, scope: !11435)
!11478 = !DILocation(line: 47, column: 15, scope: !11435)
!11479 = !DILocation(line: 55, column: 1, scope: !11435)
!11480 = distinct !DISubprogram(name: "z_waitq_init", scope: !11013, file: !11013, line: 47, type: !11481, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11483)
!11481 = !DISubroutineType(types: !11482)
!11482 = !{null, !2464}
!11483 = !{!11484}
!11484 = !DILocalVariable(name: "w", arg: 1, scope: !11480, file: !11013, line: 47, type: !2464)
!11485 = !DILocation(line: 0, scope: !11480)
!11486 = !DILocation(line: 49, column: 21, scope: !11480)
!11487 = !DILocation(line: 49, column: 2, scope: !11480)
!11488 = !DILocation(line: 50, column: 1, scope: !11480)
!11489 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !11490, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11493)
!11490 = !DISubroutineType(types: !11491)
!11491 = !{null, !11492}
!11492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!11493 = !{!11494}
!11494 = !DILocalVariable(name: "list", arg: 1, scope: !11489, file: !137, line: 197, type: !11492)
!11495 = !DILocation(line: 0, scope: !11489)
!11496 = !DILocation(line: 199, column: 8, scope: !11489)
!11497 = !DILocation(line: 199, column: 13, scope: !11489)
!11498 = !DILocation(line: 200, column: 8, scope: !11489)
!11499 = !DILocation(line: 200, column: 13, scope: !11489)
!11500 = !DILocation(line: 201, column: 1, scope: !11489)
!11501 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !11436, file: !11436, line: 57, type: !11502, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11504)
!11502 = !DISubroutineType(types: !11503)
!11503 = !{!105, !11439, !111, !113}
!11504 = !{!11505, !11506, !11507, !11508, !11509, !11510}
!11505 = !DILocalVariable(name: "msgq", arg: 1, scope: !11501, file: !11436, line: 57, type: !11439)
!11506 = !DILocalVariable(name: "msg_size", arg: 2, scope: !11501, file: !11436, line: 57, type: !111)
!11507 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !11501, file: !11436, line: 58, type: !113)
!11508 = !DILocalVariable(name: "buffer", scope: !11501, file: !11436, line: 60, type: !104)
!11509 = !DILocalVariable(name: "ret", scope: !11501, file: !11436, line: 61, type: !105)
!11510 = !DILocalVariable(name: "total_size", scope: !11501, file: !11436, line: 62, type: !111)
!11511 = !DILocation(line: 0, scope: !11501)
!11512 = !DILocation(line: 62, column: 2, scope: !11501)
!11513 = !DILocation(line: 66, column: 6, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11501, file: !11436, line: 66, column: 6)
!11515 = !DILocation(line: 66, column: 6, scope: !11501)
!11516 = !DILocation(line: 69, column: 28, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11514, file: !11436, line: 68, column: 9)
!11518 = !DILocation(line: 69, column: 12, scope: !11517)
!11519 = !DILocation(line: 70, column: 14, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11517, file: !11436, line: 70, column: 7)
!11521 = !DILocation(line: 70, column: 7, scope: !11517)
!11522 = !DILocation(line: 71, column: 4, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11520, file: !11436, line: 70, column: 23)
!11524 = !DILocation(line: 72, column: 10, scope: !11523)
!11525 = !DILocation(line: 72, column: 16, scope: !11523)
!11526 = !DILocation(line: 74, column: 3, scope: !11523)
!11527 = !DILocation(line: 0, scope: !11514)
!11528 = !DILocation(line: 82, column: 1, scope: !11501)
!11529 = !DILocation(line: 81, column: 2, scope: !11501)
!11530 = distinct !DISubprogram(name: "size_mul_overflow", scope: !11531, file: !11531, line: 105, type: !11532, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11534)
!11531 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11532 = !DISubroutineType(types: !11533)
!11533 = !{!540, !111, !111, !2044}
!11534 = !{!11535, !11536, !11537}
!11535 = !DILocalVariable(name: "a", arg: 1, scope: !11530, file: !11531, line: 105, type: !111)
!11536 = !DILocalVariable(name: "b", arg: 2, scope: !11530, file: !11531, line: 105, type: !111)
!11537 = !DILocalVariable(name: "result", arg: 3, scope: !11530, file: !11531, line: 105, type: !2044)
!11538 = !DILocation(line: 0, scope: !11530)
!11539 = !DILocation(line: 107, column: 9, scope: !11530)
!11540 = !DILocation(line: 107, column: 2, scope: !11530)
!11541 = distinct !DISubprogram(name: "z_thread_malloc", scope: !11542, file: !11542, line: 102, type: !11543, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11544)
!11542 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11543 = !DISubroutineType(types: !2408)
!11544 = !{!11545}
!11545 = !DILocalVariable(name: "size", arg: 1, scope: !11541, file: !11542, line: 102, type: !111)
!11546 = !DILocation(line: 0, scope: !11541)
!11547 = !DILocation(line: 104, column: 9, scope: !11541)
!11548 = !DILocation(line: 104, column: 2, scope: !11541)
!11549 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !11542, file: !11542, line: 87, type: !11550, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!11550 = !DISubroutineType(types: !11551)
!11551 = !{!104, !111, !111}
!11552 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !11436, file: !11436, line: 95, type: !11553, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11555)
!11553 = !DISubroutineType(types: !11554)
!11554 = !{!105, !11439}
!11555 = !{!11556}
!11556 = !DILocalVariable(name: "msgq", arg: 1, scope: !11552, file: !11436, line: 95, type: !11439)
!11557 = !DILocation(line: 0, scope: !11552)
!11558 = !DILocation(line: 99, column: 2, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11552, file: !11436, line: 99, column: 2)
!11560 = !DILocation(line: 99, column: 2, scope: !11552)
!11561 = !DILocation(line: 105, column: 13, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11552, file: !11436, line: 105, column: 6)
!11563 = !DILocation(line: 105, column: 19, scope: !11562)
!11564 = !DILocation(line: 105, column: 40, scope: !11562)
!11565 = !DILocation(line: 105, column: 6, scope: !11552)
!11566 = !DILocation(line: 106, column: 16, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11562, file: !11436, line: 105, column: 47)
!11568 = !DILocation(line: 106, column: 3, scope: !11567)
!11569 = !DILocation(line: 107, column: 15, scope: !11567)
!11570 = !DILocation(line: 108, column: 2, scope: !11567)
!11571 = !DILocation(line: 113, column: 1, scope: !11552)
!11572 = distinct !DISubprogram(name: "z_waitq_head", scope: !11013, file: !11013, line: 52, type: !11573, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11575)
!11573 = !DISubroutineType(types: !11574)
!11574 = !{!2447, !2464}
!11575 = !{!11576}
!11576 = !DILocalVariable(name: "w", arg: 1, scope: !11572, file: !11013, line: 52, type: !2464)
!11577 = !DILocation(line: 0, scope: !11572)
!11578 = !DILocation(line: 54, column: 52, scope: !11572)
!11579 = !DILocation(line: 54, column: 28, scope: !11572)
!11580 = !DILocation(line: 54, column: 9, scope: !11572)
!11581 = !DILocation(line: 54, column: 2, scope: !11572)
!11582 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!11583 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !11584, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11586)
!11584 = !DISubroutineType(types: !11585)
!11585 = !{!2432, !11492}
!11586 = !{!11587}
!11587 = !DILocalVariable(name: "list", arg: 1, scope: !11583, file: !137, line: 294, type: !11492)
!11588 = !DILocation(line: 0, scope: !11583)
!11589 = !DILocation(line: 296, column: 9, scope: !11583)
!11590 = !DILocation(line: 296, column: 49, scope: !11583)
!11591 = !DILocation(line: 296, column: 2, scope: !11583)
!11592 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !11593, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11595)
!11593 = !DISubroutineType(types: !11594)
!11594 = !{!540, !11492}
!11595 = !{!11596}
!11596 = !DILocalVariable(name: "list", arg: 1, scope: !11592, file: !137, line: 266, type: !11492)
!11597 = !DILocation(line: 0, scope: !11592)
!11598 = !DILocation(line: 268, column: 15, scope: !11592)
!11599 = !DILocation(line: 268, column: 20, scope: !11592)
!11600 = !DILocation(line: 268, column: 2, scope: !11592)
!11601 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !11436, file: !11436, line: 116, type: !11602, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11608)
!11602 = !DISubroutineType(types: !11603)
!11603 = !{!105, !11439, !13, !11604}
!11604 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !11605)
!11605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !11606)
!11606 = !{!11607}
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11605, file: !108, line: 66, baseType: !107, size: 64)
!11608 = !{!11609, !11610, !11611, !11612, !11613, !11618}
!11609 = !DILocalVariable(name: "msgq", arg: 1, scope: !11601, file: !11436, line: 116, type: !11439)
!11610 = !DILocalVariable(name: "data", arg: 2, scope: !11601, file: !11436, line: 116, type: !13)
!11611 = !DILocalVariable(name: "timeout", arg: 3, scope: !11601, file: !11436, line: 116, type: !11604)
!11612 = !DILocalVariable(name: "pending_thread", scope: !11601, file: !11436, line: 120, type: !2447)
!11613 = !DILocalVariable(name: "key", scope: !11601, file: !11436, line: 121, type: !11614)
!11614 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !11615)
!11615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !11616)
!11616 = !{!11617}
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11615, file: !236, line: 33, baseType: !105, size: 32)
!11618 = !DILocalVariable(name: "result", scope: !11601, file: !11436, line: 122, type: !105)
!11619 = !DILocation(line: 0, scope: !11601)
!11620 = !DILocation(line: 1031, column: 3, scope: !11621, inlinedAt: !11624)
!11621 = distinct !DISubprogram(name: "__get_IPSR", scope: !7290, file: !7290, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11622)
!11622 = !{!11623}
!11623 = !DILocalVariable(name: "result", scope: !11621, file: !7290, line: 1029, type: !113)
!11624 = distinct !DILocation(line: 48, column: 10, scope: !11625, inlinedAt: !11626)
!11625 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !397)
!11626 = distinct !DILocation(line: 118, column: 2, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11628, file: !11436, line: 118, column: 2)
!11628 = distinct !DILexicalBlock(scope: !11601, file: !11436, line: 118, column: 2)
!11629 = !{i64 1568353}
!11630 = !DILocation(line: 0, scope: !11621, inlinedAt: !11624)
!11631 = !DILocation(line: 48, column: 9, scope: !11625, inlinedAt: !11626)
!11632 = !DILocation(line: 118, column: 2, scope: !11627)
!11633 = !DILocation(line: 118, column: 2, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11627, file: !11436, line: 118, column: 2)
!11635 = !DILocation(line: 124, column: 27, scope: !11601)
!11636 = !DILocalVariable(name: "l", arg: 1, scope: !11637, file: !236, line: 136, type: !11640)
!11637 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !11638, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11641)
!11638 = !DISubroutineType(types: !11639)
!11639 = !{!11614, !11640}
!11640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 32)
!11641 = !{!11636, !11642}
!11642 = !DILocalVariable(name: "k", scope: !11637, file: !236, line: 139, type: !11614)
!11643 = !DILocation(line: 0, scope: !11637, inlinedAt: !11644)
!11644 = distinct !DILocation(line: 124, column: 8, scope: !11601)
!11645 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11650)
!11646 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11647)
!11647 = !{!11648, !11649}
!11648 = !DILocalVariable(name: "key", scope: !11646, file: !6640, line: 44, type: !32)
!11649 = !DILocalVariable(name: "tmp", scope: !11646, file: !6640, line: 53, type: !32)
!11650 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11644)
!11651 = !{i64 1330093}
!11652 = !DILocation(line: 0, scope: !11646, inlinedAt: !11650)
!11653 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11644)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !236, line: 148, column: 2)
!11655 = distinct !DILexicalBlock(scope: !11637, file: !236, line: 148, column: 2)
!11656 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11644)
!11657 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11644)
!11658 = distinct !DILexicalBlock(scope: !11654, file: !236, line: 148, column: 2)
!11659 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11644)
!11660 = !DILocation(line: 128, column: 12, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11601, file: !11436, line: 128, column: 6)
!11662 = !DILocation(line: 128, column: 30, scope: !11661)
!11663 = !DILocation(line: 128, column: 22, scope: !11661)
!11664 = !DILocation(line: 128, column: 6, scope: !11601)
!11665 = !DILocation(line: 130, column: 49, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11661, file: !11436, line: 128, column: 40)
!11667 = !DILocation(line: 130, column: 20, scope: !11666)
!11668 = !DILocation(line: 131, column: 22, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11666, file: !11436, line: 131, column: 7)
!11670 = !DILocation(line: 131, column: 7, scope: !11666)
!11671 = !DILocation(line: 135, column: 38, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !11436, line: 131, column: 31)
!11673 = !DILocation(line: 136, column: 17, scope: !11672)
!11674 = !DILocation(line: 135, column: 10, scope: !11672)
!11675 = !DILocalVariable(name: "thread", arg: 1, scope: !11676, file: !10693, line: 65, type: !2447)
!11676 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10693, file: !10693, line: 65, type: !11677, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11679)
!11677 = !DISubroutineType(types: !11678)
!11678 = !{null, !2447, !32}
!11679 = !{!11675, !11680}
!11680 = !DILocalVariable(name: "value", arg: 2, scope: !11676, file: !10693, line: 65, type: !32)
!11681 = !DILocation(line: 0, scope: !11676, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 138, column: 4, scope: !11672)
!11683 = !DILocation(line: 67, column: 15, scope: !11676, inlinedAt: !11682)
!11684 = !DILocation(line: 67, column: 33, scope: !11676, inlinedAt: !11682)
!11685 = !DILocation(line: 139, column: 4, scope: !11672)
!11686 = !DILocation(line: 140, column: 4, scope: !11672)
!11687 = !DILocation(line: 141, column: 4, scope: !11672)
!11688 = !DILocation(line: 144, column: 23, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11669, file: !11436, line: 142, column: 10)
!11690 = !DILocation(line: 144, column: 46, scope: !11689)
!11691 = !DILocation(line: 144, column: 10, scope: !11689)
!11692 = !DILocation(line: 145, column: 29, scope: !11689)
!11693 = !DILocation(line: 145, column: 20, scope: !11689)
!11694 = !DILocation(line: 146, column: 33, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11689, file: !11436, line: 146, column: 8)
!11696 = !DILocation(line: 146, column: 24, scope: !11695)
!11697 = !DILocation(line: 146, column: 8, scope: !11689)
!11698 = !DILocation(line: 147, column: 29, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11695, file: !11436, line: 146, column: 45)
!11700 = !DILocation(line: 147, column: 21, scope: !11699)
!11701 = !DILocation(line: 148, column: 4, scope: !11699)
!11702 = !DILocation(line: 149, column: 19, scope: !11689)
!11703 = !DILocation(line: 155, column: 2, scope: !11666)
!11704 = !DILocation(line: 155, column: 13, scope: !11661)
!11705 = !DILocation(line: 162, column: 3, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11707, file: !11436, line: 158, column: 9)
!11707 = distinct !DILexicalBlock(scope: !11661, file: !11436, line: 155, column: 13)
!11708 = !DILocation(line: 162, column: 18, scope: !11706)
!11709 = !DILocation(line: 162, column: 28, scope: !11706)
!11710 = !DILocation(line: 164, column: 49, scope: !11706)
!11711 = !DILocation(line: 164, column: 12, scope: !11706)
!11712 = !DILocation(line: 166, column: 3, scope: !11706)
!11713 = !DILocation(line: 0, scope: !11661)
!11714 = !DILocalVariable(name: "key", arg: 2, scope: !11715, file: !236, line: 190, type: !11614)
!11715 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !11716, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11718)
!11716 = !DISubroutineType(types: !11717)
!11717 = !{null, !11640, !11614}
!11718 = !{!11719, !11714}
!11719 = !DILocalVariable(name: "l", arg: 1, scope: !11715, file: !236, line: 189, type: !11640)
!11720 = !DILocation(line: 0, scope: !11715, inlinedAt: !11721)
!11721 = distinct !DILocation(line: 171, column: 2, scope: !11601)
!11722 = !DILocation(line: 194, column: 2, scope: !11723, inlinedAt: !11721)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !236, line: 194, column: 2)
!11724 = distinct !DILexicalBlock(scope: !11715, file: !236, line: 194, column: 2)
!11725 = !DILocation(line: 194, column: 2, scope: !11724, inlinedAt: !11721)
!11726 = !DILocation(line: 194, column: 2, scope: !11727, inlinedAt: !11721)
!11727 = distinct !DILexicalBlock(scope: !11723, file: !236, line: 194, column: 2)
!11728 = !DILocalVariable(name: "key", arg: 1, scope: !11729, file: !6640, line: 84, type: !32)
!11729 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11730)
!11730 = !{!11728}
!11731 = !DILocation(line: 0, scope: !11729, inlinedAt: !11732)
!11732 = distinct !DILocation(line: 215, column: 2, scope: !11715, inlinedAt: !11721)
!11733 = !DILocation(line: 95, column: 2, scope: !11729, inlinedAt: !11732)
!11734 = !{i64 1330910}
!11735 = !DILocation(line: 173, column: 2, scope: !11601)
!11736 = !DILocation(line: 174, column: 1, scope: !11601)
!11737 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !11436, file: !11436, line: 188, type: !11738, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11746)
!11738 = !DISubroutineType(types: !11739)
!11739 = !{null, !11439, !11740}
!11740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11741, size: 32)
!11741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !11742)
!11742 = !{!11743, !11744, !11745}
!11743 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !11741, file: !122, line: 4261, baseType: !111, size: 32)
!11744 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !11741, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!11745 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !11741, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!11746 = !{!11747, !11748}
!11747 = !DILocalVariable(name: "msgq", arg: 1, scope: !11737, file: !11436, line: 188, type: !11439)
!11748 = !DILocalVariable(name: "attrs", arg: 2, scope: !11737, file: !11436, line: 188, type: !11740)
!11749 = !DILocation(line: 0, scope: !11737)
!11750 = !DILocation(line: 190, column: 26, scope: !11737)
!11751 = !DILocation(line: 190, column: 9, scope: !11737)
!11752 = !DILocation(line: 190, column: 18, scope: !11737)
!11753 = !DILocation(line: 191, column: 26, scope: !11737)
!11754 = !DILocation(line: 191, column: 9, scope: !11737)
!11755 = !DILocation(line: 191, column: 18, scope: !11737)
!11756 = !DILocation(line: 192, column: 27, scope: !11737)
!11757 = !DILocation(line: 192, column: 9, scope: !11737)
!11758 = !DILocation(line: 192, column: 19, scope: !11737)
!11759 = !DILocation(line: 193, column: 1, scope: !11737)
!11760 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !11436, file: !11436, line: 206, type: !11761, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11763)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{!105, !11439, !104, !11604}
!11763 = !{!11764, !11765, !11766, !11767, !11768, !11769}
!11764 = !DILocalVariable(name: "msgq", arg: 1, scope: !11760, file: !11436, line: 206, type: !11439)
!11765 = !DILocalVariable(name: "data", arg: 2, scope: !11760, file: !11436, line: 206, type: !104)
!11766 = !DILocalVariable(name: "timeout", arg: 3, scope: !11760, file: !11436, line: 206, type: !11604)
!11767 = !DILocalVariable(name: "key", scope: !11760, file: !11436, line: 210, type: !11614)
!11768 = !DILocalVariable(name: "pending_thread", scope: !11760, file: !11436, line: 211, type: !2447)
!11769 = !DILocalVariable(name: "result", scope: !11760, file: !11436, line: 212, type: !105)
!11770 = !DILocation(line: 0, scope: !11760)
!11771 = !DILocation(line: 1031, column: 3, scope: !11621, inlinedAt: !11772)
!11772 = distinct !DILocation(line: 48, column: 10, scope: !11625, inlinedAt: !11773)
!11773 = distinct !DILocation(line: 208, column: 2, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !11436, line: 208, column: 2)
!11775 = distinct !DILexicalBlock(scope: !11760, file: !11436, line: 208, column: 2)
!11776 = !DILocation(line: 0, scope: !11621, inlinedAt: !11772)
!11777 = !DILocation(line: 48, column: 9, scope: !11625, inlinedAt: !11773)
!11778 = !DILocation(line: 208, column: 2, scope: !11774)
!11779 = !DILocation(line: 208, column: 2, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11774, file: !11436, line: 208, column: 2)
!11781 = !DILocation(line: 214, column: 27, scope: !11760)
!11782 = !DILocation(line: 0, scope: !11637, inlinedAt: !11783)
!11783 = distinct !DILocation(line: 214, column: 8, scope: !11760)
!11784 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11785)
!11785 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11783)
!11786 = !DILocation(line: 0, scope: !11646, inlinedAt: !11785)
!11787 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11783)
!11788 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11783)
!11789 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11783)
!11790 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11783)
!11791 = !DILocation(line: 218, column: 12, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11760, file: !11436, line: 218, column: 6)
!11793 = !DILocation(line: 218, column: 22, scope: !11792)
!11794 = !DILocation(line: 218, column: 6, scope: !11760)
!11795 = !DILocation(line: 220, column: 28, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11792, file: !11436, line: 218, column: 28)
!11797 = !DILocation(line: 220, column: 44, scope: !11796)
!11798 = !DILocation(line: 220, column: 9, scope: !11796)
!11799 = !DILocation(line: 221, column: 27, scope: !11796)
!11800 = !DILocation(line: 221, column: 18, scope: !11796)
!11801 = !DILocation(line: 222, column: 31, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11796, file: !11436, line: 222, column: 7)
!11803 = !DILocation(line: 222, column: 22, scope: !11802)
!11804 = !DILocation(line: 222, column: 7, scope: !11796)
!11805 = !DILocation(line: 223, column: 27, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11802, file: !11436, line: 222, column: 43)
!11807 = !DILocation(line: 223, column: 19, scope: !11806)
!11808 = !DILocation(line: 224, column: 3, scope: !11806)
!11809 = !DILocation(line: 225, column: 18, scope: !11796)
!11810 = !DILocation(line: 228, column: 49, scope: !11796)
!11811 = !DILocation(line: 228, column: 20, scope: !11796)
!11812 = !DILocation(line: 229, column: 22, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11796, file: !11436, line: 229, column: 7)
!11814 = !DILocation(line: 229, column: 7, scope: !11796)
!11815 = !DILocation(line: 233, column: 23, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11813, file: !11436, line: 229, column: 31)
!11817 = !DILocation(line: 233, column: 55, scope: !11816)
!11818 = !DILocation(line: 234, column: 17, scope: !11816)
!11819 = !DILocation(line: 233, column: 10, scope: !11816)
!11820 = !DILocation(line: 235, column: 29, scope: !11816)
!11821 = !DILocation(line: 235, column: 20, scope: !11816)
!11822 = !DILocation(line: 236, column: 33, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11816, file: !11436, line: 236, column: 8)
!11824 = !DILocation(line: 236, column: 24, scope: !11823)
!11825 = !DILocation(line: 236, column: 8, scope: !11816)
!11826 = !DILocation(line: 237, column: 29, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11823, file: !11436, line: 236, column: 45)
!11828 = !DILocation(line: 237, column: 21, scope: !11827)
!11829 = !DILocation(line: 238, column: 4, scope: !11827)
!11830 = !DILocation(line: 239, column: 19, scope: !11816)
!11831 = !DILocation(line: 0, scope: !11676, inlinedAt: !11832)
!11832 = distinct !DILocation(line: 242, column: 4, scope: !11816)
!11833 = !DILocation(line: 67, column: 15, scope: !11676, inlinedAt: !11832)
!11834 = !DILocation(line: 67, column: 33, scope: !11676, inlinedAt: !11832)
!11835 = !DILocation(line: 243, column: 4, scope: !11816)
!11836 = !DILocation(line: 244, column: 4, scope: !11816)
!11837 = !DILocation(line: 248, column: 4, scope: !11816)
!11838 = !DILocation(line: 251, column: 13, scope: !11792)
!11839 = !DILocation(line: 258, column: 3, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !11436, line: 254, column: 9)
!11841 = distinct !DILexicalBlock(scope: !11792, file: !11436, line: 251, column: 13)
!11842 = !DILocation(line: 258, column: 18, scope: !11840)
!11843 = !DILocation(line: 258, column: 28, scope: !11840)
!11844 = !DILocation(line: 260, column: 49, scope: !11840)
!11845 = !DILocation(line: 260, column: 12, scope: !11840)
!11846 = !DILocation(line: 262, column: 3, scope: !11840)
!11847 = !DILocation(line: 0, scope: !11792)
!11848 = !DILocation(line: 0, scope: !11715, inlinedAt: !11849)
!11849 = distinct !DILocation(line: 267, column: 2, scope: !11760)
!11850 = !DILocation(line: 194, column: 2, scope: !11723, inlinedAt: !11849)
!11851 = !DILocation(line: 194, column: 2, scope: !11724, inlinedAt: !11849)
!11852 = !DILocation(line: 194, column: 2, scope: !11727, inlinedAt: !11849)
!11853 = !DILocation(line: 0, scope: !11729, inlinedAt: !11854)
!11854 = distinct !DILocation(line: 215, column: 2, scope: !11715, inlinedAt: !11849)
!11855 = !DILocation(line: 95, column: 2, scope: !11729, inlinedAt: !11854)
!11856 = !DILocation(line: 269, column: 2, scope: !11760)
!11857 = !DILocation(line: 270, column: 1, scope: !11760)
!11858 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !11436, file: !11436, line: 284, type: !11859, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!105, !11439, !104}
!11861 = !{!11862, !11863, !11864, !11865}
!11862 = !DILocalVariable(name: "msgq", arg: 1, scope: !11858, file: !11436, line: 284, type: !11439)
!11863 = !DILocalVariable(name: "data", arg: 2, scope: !11858, file: !11436, line: 284, type: !104)
!11864 = !DILocalVariable(name: "key", scope: !11858, file: !11436, line: 286, type: !11614)
!11865 = !DILocalVariable(name: "result", scope: !11858, file: !11436, line: 287, type: !105)
!11866 = !DILocation(line: 0, scope: !11858)
!11867 = !DILocation(line: 289, column: 27, scope: !11858)
!11868 = !DILocation(line: 0, scope: !11637, inlinedAt: !11869)
!11869 = distinct !DILocation(line: 289, column: 8, scope: !11858)
!11870 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11871)
!11871 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11869)
!11872 = !DILocation(line: 0, scope: !11646, inlinedAt: !11871)
!11873 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11869)
!11874 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11869)
!11875 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11869)
!11876 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11869)
!11877 = !DILocation(line: 291, column: 12, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11858, file: !11436, line: 291, column: 6)
!11879 = !DILocation(line: 291, column: 22, scope: !11878)
!11880 = !DILocation(line: 291, column: 6, scope: !11858)
!11881 = !DILocation(line: 293, column: 28, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11878, file: !11436, line: 291, column: 28)
!11883 = !DILocation(line: 293, column: 44, scope: !11882)
!11884 = !DILocation(line: 293, column: 9, scope: !11882)
!11885 = !DILocation(line: 295, column: 2, scope: !11882)
!11886 = !DILocation(line: 0, scope: !11878)
!11887 = !DILocation(line: 0, scope: !11715, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 302, column: 2, scope: !11858)
!11889 = !DILocation(line: 194, column: 2, scope: !11723, inlinedAt: !11888)
!11890 = !DILocation(line: 194, column: 2, scope: !11724, inlinedAt: !11888)
!11891 = !DILocation(line: 194, column: 2, scope: !11727, inlinedAt: !11888)
!11892 = !DILocation(line: 0, scope: !11729, inlinedAt: !11893)
!11893 = distinct !DILocation(line: 215, column: 2, scope: !11715, inlinedAt: !11888)
!11894 = !DILocation(line: 95, column: 2, scope: !11729, inlinedAt: !11893)
!11895 = !DILocation(line: 304, column: 2, scope: !11858)
!11896 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !11436, file: !11436, line: 318, type: !11897, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2429, retainedNodes: !11899)
!11897 = !DISubroutineType(types: !11898)
!11898 = !{null, !11439}
!11899 = !{!11900, !11901, !11902}
!11900 = !DILocalVariable(name: "msgq", arg: 1, scope: !11896, file: !11436, line: 318, type: !11439)
!11901 = !DILocalVariable(name: "key", scope: !11896, file: !11436, line: 320, type: !11614)
!11902 = !DILocalVariable(name: "pending_thread", scope: !11896, file: !11436, line: 321, type: !2447)
!11903 = !DILocation(line: 0, scope: !11896)
!11904 = !DILocation(line: 323, column: 27, scope: !11896)
!11905 = !DILocation(line: 0, scope: !11637, inlinedAt: !11906)
!11906 = distinct !DILocation(line: 323, column: 8, scope: !11896)
!11907 = !DILocation(line: 55, column: 2, scope: !11646, inlinedAt: !11908)
!11908 = distinct !DILocation(line: 145, column: 10, scope: !11637, inlinedAt: !11906)
!11909 = !DILocation(line: 0, scope: !11646, inlinedAt: !11908)
!11910 = !DILocation(line: 148, column: 2, scope: !11654, inlinedAt: !11906)
!11911 = !DILocation(line: 148, column: 2, scope: !11655, inlinedAt: !11906)
!11912 = !DILocation(line: 148, column: 2, scope: !11658, inlinedAt: !11906)
!11913 = !DILocation(line: 160, column: 2, scope: !11637, inlinedAt: !11906)
!11914 = !DILocation(line: 328, column: 27, scope: !11896)
!11915 = !DILocation(line: 328, column: 65, scope: !11896)
!11916 = !DILocation(line: 328, column: 2, scope: !11896)
!11917 = !DILocation(line: 0, scope: !11676, inlinedAt: !11918)
!11918 = distinct !DILocation(line: 329, column: 3, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11896, file: !11436, line: 328, column: 74)
!11920 = !DILocation(line: 67, column: 15, scope: !11676, inlinedAt: !11918)
!11921 = !DILocation(line: 67, column: 33, scope: !11676, inlinedAt: !11918)
!11922 = !DILocation(line: 330, column: 3, scope: !11919)
!11923 = distinct !{!11923, !11916, !11924}
!11924 = !DILocation(line: 331, column: 2, scope: !11896)
!11925 = !DILocation(line: 333, column: 8, scope: !11896)
!11926 = !DILocation(line: 333, column: 18, scope: !11896)
!11927 = !DILocation(line: 334, column: 25, scope: !11896)
!11928 = !DILocation(line: 334, column: 8, scope: !11896)
!11929 = !DILocation(line: 334, column: 17, scope: !11896)
!11930 = !DILocation(line: 336, column: 2, scope: !11896)
!11931 = !DILocation(line: 337, column: 1, scope: !11896)
!11932 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !1780, file: !1780, line: 41, type: !11933, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !11946)
!11933 = !DISubroutineType(types: !11934)
!11934 = !{!105, !11935, !32, !32}
!11935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11936, size: 32)
!11936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !11937)
!11937 = !{!11938, !11944, !11945}
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11936, file: !122, line: 2910, baseType: !11939, size: 64)
!11939 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !11940)
!11940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !11941)
!11941 = !{!11942}
!11942 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11940, file: !163, line: 232, baseType: !11943, size: 64)
!11943 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1766)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11936, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!11945 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !11936, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!11946 = !{!11947, !11948, !11949}
!11947 = !DILocalVariable(name: "sem", arg: 1, scope: !11932, file: !1780, line: 41, type: !11935)
!11948 = !DILocalVariable(name: "initial_count", arg: 2, scope: !11932, file: !1780, line: 41, type: !32)
!11949 = !DILocalVariable(name: "limit", arg: 3, scope: !11932, file: !1780, line: 42, type: !32)
!11950 = !DILocation(line: 0, scope: !11932)
!11951 = !DILocation(line: 47, column: 2, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11932, file: !1780, line: 47, column: 2)
!11953 = !DILocation(line: 53, column: 7, scope: !11932)
!11954 = !DILocation(line: 53, column: 13, scope: !11932)
!11955 = !DILocation(line: 54, column: 7, scope: !11932)
!11956 = !DILocation(line: 54, column: 13, scope: !11932)
!11957 = !DILocation(line: 58, column: 21, scope: !11932)
!11958 = !DILocation(line: 58, column: 2, scope: !11932)
!11959 = !DILocation(line: 64, column: 2, scope: !11932)
!11960 = !DILocation(line: 65, column: 1, scope: !11932)
!11961 = distinct !DISubprogram(name: "z_waitq_init", scope: !11013, file: !11013, line: 47, type: !11962, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !11965)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{null, !11964}
!11964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11939, size: 32)
!11965 = !{!11966}
!11966 = !DILocalVariable(name: "w", arg: 1, scope: !11961, file: !11013, line: 47, type: !11964)
!11967 = !DILocation(line: 0, scope: !11961)
!11968 = !DILocation(line: 49, column: 21, scope: !11961)
!11969 = !DILocation(line: 49, column: 2, scope: !11961)
!11970 = !DILocation(line: 50, column: 1, scope: !11961)
!11971 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !11972, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !11975)
!11972 = !DISubroutineType(types: !11973)
!11973 = !{null, !11974}
!11974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11943, size: 32)
!11975 = !{!11976}
!11976 = !DILocalVariable(name: "list", arg: 1, scope: !11971, file: !137, line: 197, type: !11974)
!11977 = !DILocation(line: 0, scope: !11971)
!11978 = !DILocation(line: 199, column: 8, scope: !11971)
!11979 = !DILocation(line: 199, column: 13, scope: !11971)
!11980 = !DILocation(line: 200, column: 8, scope: !11971)
!11981 = !DILocation(line: 200, column: 13, scope: !11971)
!11982 = !DILocation(line: 201, column: 1, scope: !11971)
!11983 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !1780, file: !1780, line: 86, type: !11984, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !11986)
!11984 = !DISubroutineType(types: !11985)
!11985 = !{null, !11935}
!11986 = !{!11987, !11988, !11993}
!11987 = !DILocalVariable(name: "sem", arg: 1, scope: !11983, file: !1780, line: 86, type: !11935)
!11988 = !DILocalVariable(name: "key", scope: !11983, file: !1780, line: 88, type: !11989)
!11989 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !11990)
!11990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !11991)
!11991 = !{!11992}
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11990, file: !236, line: 33, baseType: !105, size: 32)
!11993 = !DILocalVariable(name: "thread", scope: !11983, file: !1780, line: 89, type: !11994)
!11994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11995, size: 32)
!11995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !11996)
!11996 = !{!11997, !12035, !12047, !12048, !12049, !12050, !12056, !12068}
!11997 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11995, file: !127, line: 247, baseType: !11998, size: 384)
!11998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !11999)
!11999 = !{!12000, !12010, !12011, !12012, !12013, !12022, !12023, !12024}
!12000 = !DIDerivedType(tag: DW_TAG_member, scope: !11998, file: !127, line: 60, baseType: !12001, size: 64)
!12001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11998, file: !127, line: 60, size: 64, elements: !12002)
!12002 = !{!12003, !12004}
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12001, file: !127, line: 61, baseType: !1765, size: 64)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12001, file: !127, line: 62, baseType: !12005, size: 64)
!12005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !12006)
!12006 = !{!12007}
!12007 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12005, file: !153, line: 50, baseType: !12008, size: 64)
!12008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12009, size: 64, elements: !158)
!12009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12005, size: 32)
!12010 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11998, file: !127, line: 68, baseType: !11964, size: 32, offset: 64)
!12011 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11998, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11998, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!12013 = !DIDerivedType(tag: DW_TAG_member, scope: !11998, file: !127, line: 90, baseType: !12014, size: 16, offset: 112)
!12014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11998, file: !127, line: 90, size: 16, elements: !12015)
!12015 = !{!12016, !12021}
!12016 = !DIDerivedType(tag: DW_TAG_member, scope: !12014, file: !127, line: 91, baseType: !12017, size: 16)
!12017 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12014, file: !127, line: 91, size: 16, elements: !12018)
!12018 = !{!12019, !12020}
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12017, file: !127, line: 96, baseType: !179, size: 8)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12017, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12014, file: !127, line: 100, baseType: !183, size: 16)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11998, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11998, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!12024 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11998, file: !127, line: 131, baseType: !12025, size: 192, offset: 192)
!12025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !12026)
!12026 = !{!12027, !12028, !12034}
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12025, file: !163, line: 245, baseType: !1765, size: 64)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12025, file: !163, line: 246, baseType: !12029, size: 32, offset: 64)
!12029 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !12030)
!12030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12031, size: 32)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{null, !12033}
!12033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12025, size: 32)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12025, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11995, file: !127, line: 250, baseType: !12036, size: 288, offset: 384)
!12036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !12037)
!12037 = !{!12038, !12039, !12040, !12041, !12042, !12043, !12044, !12045, !12046}
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12036, file: !200, line: 26, baseType: !113, size: 32)
!12039 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12036, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12036, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12036, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!12042 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12036, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!12043 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12036, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!12044 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12036, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12036, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12036, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!12047 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11995, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!12048 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11995, file: !127, line: 256, baseType: !11939, size: 64, offset: 704)
!12049 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11995, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!12050 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !11995, file: !127, line: 300, baseType: !12051, size: 96, offset: 800)
!12051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !12052)
!12052 = !{!12053, !12054, !12055}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12051, file: !127, line: 153, baseType: !22, size: 32)
!12054 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12051, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12051, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11995, file: !127, line: 325, baseType: !12057, size: 32, offset: 896)
!12057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12058, size: 32)
!12058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !12059)
!12059 = !{!12060, !12066, !12067}
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12058, file: !122, line: 5074, baseType: !12061, size: 96)
!12061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !12062)
!12062 = !{!12063, !12064, !12065}
!12063 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12061, file: !226, line: 57, baseType: !229, size: 32)
!12064 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12061, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12061, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12058, file: !122, line: 5075, baseType: !11939, size: 64, offset: 96)
!12067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12058, file: !122, line: 5076, baseType: !1781, size: 32, offset: 160)
!12068 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11995, file: !127, line: 343, baseType: !12069, size: 64, offset: 928)
!12069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !12070)
!12070 = !{!12071, !12072}
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12069, file: !200, line: 63, baseType: !113, size: 32)
!12072 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12069, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!12073 = !DILocation(line: 0, scope: !11983)
!12074 = !DILocalVariable(name: "l", arg: 1, scope: !12075, file: !236, line: 136, type: !12078)
!12075 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12076, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12079)
!12076 = !DISubroutineType(types: !12077)
!12077 = !{!11989, !12078}
!12078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!12079 = !{!12074, !12080}
!12080 = !DILocalVariable(name: "k", scope: !12075, file: !236, line: 139, type: !11989)
!12081 = !DILocation(line: 0, scope: !12075, inlinedAt: !12082)
!12082 = distinct !DILocation(line: 88, column: 25, scope: !11983)
!12083 = !DILocation(line: 55, column: 2, scope: !12084, inlinedAt: !12088)
!12084 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12085)
!12085 = !{!12086, !12087}
!12086 = !DILocalVariable(name: "key", scope: !12084, file: !6640, line: 44, type: !32)
!12087 = !DILocalVariable(name: "tmp", scope: !12084, file: !6640, line: 53, type: !32)
!12088 = distinct !DILocation(line: 145, column: 10, scope: !12075, inlinedAt: !12082)
!12089 = !{i64 1325518}
!12090 = !DILocation(line: 0, scope: !12084, inlinedAt: !12088)
!12091 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12082)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !236, line: 148, column: 2)
!12093 = distinct !DILexicalBlock(scope: !12075, file: !236, line: 148, column: 2)
!12094 = !DILocation(line: 148, column: 2, scope: !12093, inlinedAt: !12082)
!12095 = !DILocation(line: 148, column: 2, scope: !12096, inlinedAt: !12082)
!12096 = distinct !DILexicalBlock(scope: !12092, file: !236, line: 148, column: 2)
!12097 = !DILocation(line: 160, column: 2, scope: !12075, inlinedAt: !12082)
!12098 = !DILocation(line: 93, column: 39, scope: !11983)
!12099 = !DILocation(line: 93, column: 11, scope: !11983)
!12100 = !DILocation(line: 95, column: 13, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !11983, file: !1780, line: 95, column: 6)
!12102 = !DILocation(line: 95, column: 6, scope: !11983)
!12103 = !DILocalVariable(name: "thread", arg: 1, scope: !12104, file: !10693, line: 65, type: !11994)
!12104 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10693, file: !10693, line: 65, type: !12105, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12107)
!12105 = !DISubroutineType(types: !12106)
!12106 = !{null, !11994, !32}
!12107 = !{!12103, !12108}
!12108 = !DILocalVariable(name: "value", arg: 2, scope: !12104, file: !10693, line: 65, type: !32)
!12109 = !DILocation(line: 0, scope: !12104, inlinedAt: !12110)
!12110 = distinct !DILocation(line: 96, column: 3, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12101, file: !1780, line: 95, column: 22)
!12112 = !DILocation(line: 67, column: 15, scope: !12104, inlinedAt: !12110)
!12113 = !DILocation(line: 67, column: 33, scope: !12104, inlinedAt: !12110)
!12114 = !DILocation(line: 97, column: 3, scope: !12111)
!12115 = !DILocation(line: 98, column: 2, scope: !12111)
!12116 = !DILocation(line: 99, column: 23, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12101, file: !1780, line: 98, column: 9)
!12118 = !DILocation(line: 99, column: 37, scope: !12117)
!12119 = !DILocation(line: 99, column: 29, scope: !12117)
!12120 = !DILocation(line: 99, column: 17, scope: !12117)
!12121 = !DILocation(line: 99, column: 14, scope: !12117)
!12122 = !DILocation(line: 103, column: 2, scope: !11983)
!12123 = !DILocation(line: 106, column: 1, scope: !11983)
!12124 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !1780, file: !1780, line: 117, type: !12125, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12131)
!12125 = !DISubroutineType(types: !12126)
!12126 = !{!105, !11935, !12127}
!12127 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !12128)
!12128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !12129)
!12129 = !{!12130}
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12128, file: !108, line: 66, baseType: !107, size: 64)
!12131 = !{!12132, !12133, !12134, !12135, !12136}
!12132 = !DILocalVariable(name: "sem", arg: 1, scope: !12124, file: !1780, line: 117, type: !11935)
!12133 = !DILocalVariable(name: "timeout", arg: 2, scope: !12124, file: !1780, line: 117, type: !12127)
!12134 = !DILocalVariable(name: "ret", scope: !12124, file: !1780, line: 119, type: !105)
!12135 = !DILocalVariable(name: "key", scope: !12124, file: !1780, line: 124, type: !11989)
!12136 = !DILabel(scope: !12124, name: "out", file: !1780, line: 145)
!12137 = !DILocation(line: 0, scope: !12124)
!12138 = !DILocation(line: 1031, column: 3, scope: !12139, inlinedAt: !12142)
!12139 = distinct !DISubprogram(name: "__get_IPSR", scope: !7290, file: !7290, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12140)
!12140 = !{!12141}
!12141 = !DILocalVariable(name: "result", scope: !12139, file: !7290, line: 1029, type: !113)
!12142 = distinct !DILocation(line: 48, column: 10, scope: !12143, inlinedAt: !12144)
!12143 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !397)
!12144 = distinct !DILocation(line: 121, column: 2, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !1780, line: 121, column: 2)
!12146 = distinct !DILexicalBlock(scope: !12124, file: !1780, line: 121, column: 2)
!12147 = !{i64 1563778}
!12148 = !DILocation(line: 0, scope: !12139, inlinedAt: !12142)
!12149 = !DILocation(line: 48, column: 9, scope: !12143, inlinedAt: !12144)
!12150 = !DILocation(line: 121, column: 2, scope: !12145)
!12151 = !DILocation(line: 121, column: 2, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12145, file: !1780, line: 121, column: 2)
!12153 = !DILocation(line: 0, scope: !12075, inlinedAt: !12154)
!12154 = distinct !DILocation(line: 124, column: 25, scope: !12124)
!12155 = !DILocation(line: 55, column: 2, scope: !12084, inlinedAt: !12156)
!12156 = distinct !DILocation(line: 145, column: 10, scope: !12075, inlinedAt: !12154)
!12157 = !DILocation(line: 0, scope: !12084, inlinedAt: !12156)
!12158 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12154)
!12159 = !DILocation(line: 148, column: 2, scope: !12093, inlinedAt: !12154)
!12160 = !DILocation(line: 148, column: 2, scope: !12096, inlinedAt: !12154)
!12161 = !DILocation(line: 160, column: 2, scope: !12075, inlinedAt: !12154)
!12162 = !DILocation(line: 128, column: 6, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12124, file: !1780, line: 128, column: 6)
!12164 = !DILocation(line: 128, column: 6, scope: !12124)
!12165 = !{!"branch_weights", i32 1, i32 2000}
!12166 = !DILocation(line: 129, column: 13, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12163, file: !1780, line: 128, column: 31)
!12168 = !DILocalVariable(name: "key", arg: 2, scope: !12169, file: !236, line: 190, type: !11989)
!12169 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12170, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12172)
!12170 = !DISubroutineType(types: !12171)
!12171 = !{null, !12078, !11989}
!12172 = !{!12173, !12168}
!12173 = !DILocalVariable(name: "l", arg: 1, scope: !12169, file: !236, line: 189, type: !12078)
!12174 = !DILocation(line: 0, scope: !12169, inlinedAt: !12175)
!12175 = distinct !DILocation(line: 130, column: 3, scope: !12167)
!12176 = !DILocation(line: 194, column: 2, scope: !12177, inlinedAt: !12175)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !236, line: 194, column: 2)
!12178 = distinct !DILexicalBlock(scope: !12169, file: !236, line: 194, column: 2)
!12179 = !DILocation(line: 194, column: 2, scope: !12178, inlinedAt: !12175)
!12180 = !DILocation(line: 194, column: 2, scope: !12181, inlinedAt: !12175)
!12181 = distinct !DILexicalBlock(scope: !12177, file: !236, line: 194, column: 2)
!12182 = !DILocalVariable(name: "key", arg: 1, scope: !12183, file: !6640, line: 84, type: !32)
!12183 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12184)
!12184 = !{!12182}
!12185 = !DILocation(line: 0, scope: !12183, inlinedAt: !12186)
!12186 = distinct !DILocation(line: 215, column: 2, scope: !12169, inlinedAt: !12175)
!12187 = !DILocation(line: 95, column: 2, scope: !12183, inlinedAt: !12186)
!12188 = !{i64 1326335}
!12189 = !DILocation(line: 132, column: 3, scope: !12167)
!12190 = !DILocation(line: 135, column: 6, scope: !12124)
!12191 = !DILocation(line: 0, scope: !12169, inlinedAt: !12192)
!12192 = distinct !DILocation(line: 136, column: 3, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !1780, line: 135, column: 40)
!12194 = distinct !DILexicalBlock(scope: !12124, file: !1780, line: 135, column: 6)
!12195 = !DILocation(line: 194, column: 2, scope: !12177, inlinedAt: !12192)
!12196 = !DILocation(line: 194, column: 2, scope: !12178, inlinedAt: !12192)
!12197 = !DILocation(line: 194, column: 2, scope: !12181, inlinedAt: !12192)
!12198 = !DILocation(line: 0, scope: !12183, inlinedAt: !12199)
!12199 = distinct !DILocation(line: 215, column: 2, scope: !12169, inlinedAt: !12192)
!12200 = !DILocation(line: 95, column: 2, scope: !12183, inlinedAt: !12199)
!12201 = !DILocation(line: 138, column: 3, scope: !12193)
!12202 = !DILocation(line: 143, column: 38, scope: !12124)
!12203 = !DILocation(line: 143, column: 8, scope: !12124)
!12204 = !DILocation(line: 143, column: 2, scope: !12124)
!12205 = !DILocation(line: 145, column: 1, scope: !12124)
!12206 = !DILocation(line: 148, column: 2, scope: !12124)
!12207 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !1780, file: !1780, line: 151, type: !11984, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1761, retainedNodes: !12208)
!12208 = !{!12209, !12210, !12211}
!12209 = !DILocalVariable(name: "sem", arg: 1, scope: !12207, file: !1780, line: 151, type: !11935)
!12210 = !DILocalVariable(name: "thread", scope: !12207, file: !1780, line: 153, type: !11994)
!12211 = !DILocalVariable(name: "key", scope: !12207, file: !1780, line: 154, type: !11989)
!12212 = !DILocation(line: 0, scope: !12207)
!12213 = !DILocation(line: 0, scope: !12075, inlinedAt: !12214)
!12214 = distinct !DILocation(line: 154, column: 25, scope: !12207)
!12215 = !DILocation(line: 55, column: 2, scope: !12084, inlinedAt: !12216)
!12216 = distinct !DILocation(line: 145, column: 10, scope: !12075, inlinedAt: !12214)
!12217 = !DILocation(line: 0, scope: !12084, inlinedAt: !12216)
!12218 = !DILocation(line: 148, column: 2, scope: !12092, inlinedAt: !12214)
!12219 = !DILocation(line: 148, column: 2, scope: !12093, inlinedAt: !12214)
!12220 = !DILocation(line: 148, column: 2, scope: !12096, inlinedAt: !12214)
!12221 = !DILocation(line: 160, column: 2, scope: !12075, inlinedAt: !12214)
!12222 = !DILocation(line: 157, column: 12, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12207, file: !1780, line: 156, column: 15)
!12224 = !DILocation(line: 158, column: 14, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12223, file: !1780, line: 158, column: 7)
!12226 = !DILocation(line: 158, column: 7, scope: !12223)
!12227 = !DILocation(line: 0, scope: !12104, inlinedAt: !12228)
!12228 = distinct !DILocation(line: 161, column: 3, scope: !12223)
!12229 = !DILocation(line: 67, column: 15, scope: !12104, inlinedAt: !12228)
!12230 = !DILocation(line: 67, column: 33, scope: !12104, inlinedAt: !12228)
!12231 = !DILocation(line: 162, column: 3, scope: !12223)
!12232 = distinct !{!12232, !12233, !12234}
!12233 = !DILocation(line: 156, column: 2, scope: !12207)
!12234 = !DILocation(line: 163, column: 2, scope: !12207)
!12235 = !DILocation(line: 164, column: 7, scope: !12207)
!12236 = !DILocation(line: 164, column: 13, scope: !12207)
!12237 = !DILocation(line: 170, column: 2, scope: !12207)
!12238 = !DILocation(line: 171, column: 1, scope: !12207)
!12239 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !1896, file: !1896, line: 93, type: !12240, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12242)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!116, !1789, !1789}
!12242 = !{!12243, !12244, !12245, !12246}
!12243 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12239, file: !1896, line: 93, type: !1789)
!12244 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12239, file: !1896, line: 94, type: !1789)
!12245 = !DILocalVariable(name: "b1", scope: !12239, file: !1896, line: 97, type: !116)
!12246 = !DILocalVariable(name: "b2", scope: !12239, file: !1896, line: 98, type: !116)
!12247 = !DILocation(line: 0, scope: !12239)
!12248 = !DILocation(line: 97, column: 30, scope: !12239)
!12249 = !DILocation(line: 98, column: 30, scope: !12239)
!12250 = !DILocation(line: 100, column: 9, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12239, file: !1896, line: 100, column: 6)
!12252 = !DILocation(line: 100, column: 6, scope: !12239)
!12253 = !DILocation(line: 125, column: 1, scope: !12239)
!12254 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !1896, file: !1896, line: 428, type: !12255, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12257)
!12255 = !DISubroutineType(types: !12256)
!12256 = !{null, !1789}
!12257 = !{!12258}
!12258 = !DILocalVariable(name: "curr", arg: 1, scope: !12254, file: !1896, line: 428, type: !1789)
!12259 = !DILocation(line: 0, scope: !12254)
!12260 = !DILocation(line: 434, column: 6, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12254, file: !1896, line: 434, column: 6)
!12262 = !DILocation(line: 434, column: 23, scope: !12261)
!12263 = !DILocation(line: 434, column: 6, scope: !12254)
!12264 = !DILocation(line: 435, column: 50, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12261, file: !1896, line: 434, column: 29)
!12266 = !DILocation(line: 435, column: 48, scope: !12265)
!12267 = !DILocation(line: 435, column: 29, scope: !12265)
!12268 = !DILocation(line: 436, column: 24, scope: !12265)
!12269 = !DILocation(line: 436, column: 3, scope: !12265)
!12270 = !DILocation(line: 437, column: 2, scope: !12265)
!12271 = !DILocation(line: 438, column: 1, scope: !12254)
!12272 = distinct !DISubprogram(name: "slice_time", scope: !1896, file: !1896, line: 407, type: !12273, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12275)
!12273 = !DISubroutineType(types: !12274)
!12274 = !{!105, !1789}
!12275 = !{!12276, !12277}
!12276 = !DILocalVariable(name: "curr", arg: 1, scope: !12272, file: !1896, line: 407, type: !1789)
!12277 = !DILocalVariable(name: "ret", scope: !12272, file: !1896, line: 409, type: !105)
!12278 = !DILocation(line: 0, scope: !12272)
!12279 = !DILocation(line: 409, column: 12, scope: !12272)
!12280 = !DILocation(line: 416, column: 2, scope: !12272)
!12281 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !1896, file: !1896, line: 440, type: !12282, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12284)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{null, !116, !105}
!12284 = !{!12285, !12286, !12287, !12293}
!12285 = !DILocalVariable(name: "slice", arg: 1, scope: !12281, file: !1896, line: 440, type: !116)
!12286 = !DILocalVariable(name: "prio", arg: 2, scope: !12281, file: !1896, line: 440, type: !105)
!12287 = !DILocalVariable(name: "__i", scope: !12288, file: !1896, line: 442, type: !12289)
!12288 = distinct !DILexicalBlock(scope: !12281, file: !1896, line: 442, column: 2)
!12289 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12290)
!12290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12291)
!12291 = !{!12292}
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12290, file: !236, line: 33, baseType: !105, size: 32)
!12293 = !DILocalVariable(name: "__key", scope: !12288, file: !1896, line: 442, type: !12289)
!12294 = !DILocation(line: 0, scope: !12281)
!12295 = !DILocation(line: 0, scope: !12288)
!12296 = !DILocalVariable(name: "l", arg: 1, scope: !12297, file: !236, line: 136, type: !12300)
!12297 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12298, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12301)
!12298 = !DISubroutineType(types: !12299)
!12299 = !{!12289, !12300}
!12300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!12301 = !{!12296, !12302}
!12302 = !DILocalVariable(name: "k", scope: !12297, file: !236, line: 139, type: !12289)
!12303 = !DILocation(line: 0, scope: !12297, inlinedAt: !12304)
!12304 = distinct !DILocation(line: 442, column: 2, scope: !12288)
!12305 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !12310)
!12306 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12307)
!12307 = !{!12308, !12309}
!12308 = !DILocalVariable(name: "key", scope: !12306, file: !6640, line: 44, type: !32)
!12309 = !DILocalVariable(name: "tmp", scope: !12306, file: !6640, line: 53, type: !32)
!12310 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !12304)
!12311 = !{i64 1367927}
!12312 = !DILocation(line: 0, scope: !12306, inlinedAt: !12310)
!12313 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !12304)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !236, line: 148, column: 2)
!12315 = distinct !DILexicalBlock(scope: !12297, file: !236, line: 148, column: 2)
!12316 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !12304)
!12317 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !12304)
!12318 = distinct !DILexicalBlock(scope: !12314, file: !236, line: 148, column: 2)
!12319 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !12304)
!12320 = !DILocation(line: 443, column: 29, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !1896, line: 442, column: 26)
!12322 = distinct !DILexicalBlock(scope: !12288, file: !1896, line: 442, column: 2)
!12323 = !DILocation(line: 444, column: 17, scope: !12321)
!12324 = !DILocation(line: 445, column: 51, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12321, file: !1896, line: 445, column: 7)
!12326 = !DILocation(line: 445, column: 7, scope: !12321)
!12327 = !DILocation(line: 0, scope: !12321)
!12328 = !DILocation(line: 451, column: 18, scope: !12321)
!12329 = !DILocation(line: 452, column: 3, scope: !12321)
!12330 = !DILocalVariable(name: "key", arg: 2, scope: !12331, file: !236, line: 190, type: !12289)
!12331 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12332, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12334)
!12332 = !DISubroutineType(types: !12333)
!12333 = !{null, !12300, !12289}
!12334 = !{!12335, !12330}
!12335 = !DILocalVariable(name: "l", arg: 1, scope: !12331, file: !236, line: 189, type: !12300)
!12336 = !DILocation(line: 0, scope: !12331, inlinedAt: !12337)
!12337 = distinct !DILocation(line: 442, column: 2, scope: !12322)
!12338 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !12337)
!12339 = distinct !DILexicalBlock(scope: !12340, file: !236, line: 194, column: 2)
!12340 = distinct !DILexicalBlock(scope: !12331, file: !236, line: 194, column: 2)
!12341 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !12337)
!12342 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !12337)
!12343 = distinct !DILexicalBlock(scope: !12339, file: !236, line: 194, column: 2)
!12344 = !DILocalVariable(name: "key", arg: 1, scope: !12345, file: !6640, line: 84, type: !32)
!12345 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12346)
!12346 = !{!12344}
!12347 = !DILocation(line: 0, scope: !12345, inlinedAt: !12348)
!12348 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !12337)
!12349 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !12348)
!12350 = !{i64 1368744}
!12351 = !DILocation(line: 454, column: 1, scope: !12281)
!12352 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11269, file: !11269, line: 389, type: !6764, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12353)
!12353 = !{!12354}
!12354 = !DILocalVariable(name: "t", arg: 1, scope: !12352, file: !11269, line: 389, type: !113)
!12355 = !DILocation(line: 0, scope: !12352)
!12356 = !DILocalVariable(name: "t", arg: 1, scope: !12357, file: !11269, line: 102, type: !114)
!12357 = distinct !DISubprogram(name: "z_tmcvt", scope: !11269, file: !11269, line: 102, type: !11277, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12358)
!12358 = !{!12356, !12359, !12360, !12361, !12362, !12363, !12364, !12365, !12366, !12367, !12368}
!12359 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12357, file: !11269, line: 102, type: !113)
!12360 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12357, file: !11269, line: 103, type: !113)
!12361 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12357, file: !11269, line: 103, type: !540)
!12362 = !DILocalVariable(name: "result32", arg: 5, scope: !12357, file: !11269, line: 104, type: !540)
!12363 = !DILocalVariable(name: "round_up", arg: 6, scope: !12357, file: !11269, line: 104, type: !540)
!12364 = !DILocalVariable(name: "round_off", arg: 7, scope: !12357, file: !11269, line: 105, type: !540)
!12365 = !DILocalVariable(name: "mul_ratio", scope: !12357, file: !11269, line: 107, type: !540)
!12366 = !DILocalVariable(name: "div_ratio", scope: !12357, file: !11269, line: 109, type: !540)
!12367 = !DILocalVariable(name: "off", scope: !12357, file: !11269, line: 116, type: !114)
!12368 = !DILocalVariable(name: "rdivisor", scope: !12369, file: !11269, line: 119, type: !113)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !11269, line: 118, column: 18)
!12370 = distinct !DILexicalBlock(scope: !12357, file: !11269, line: 118, column: 6)
!12371 = !DILocation(line: 0, scope: !12357, inlinedAt: !12372)
!12372 = distinct !DILocation(line: 392, column: 9, scope: !12352)
!12373 = !DILocation(line: 143, column: 25, scope: !12374, inlinedAt: !12372)
!12374 = distinct !DILexicalBlock(scope: !12375, file: !11269, line: 142, column: 17)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !11269, line: 142, column: 7)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !11269, line: 141, column: 24)
!12377 = distinct !DILexicalBlock(scope: !12378, file: !11269, line: 141, column: 13)
!12378 = distinct !DILexicalBlock(scope: !12357, file: !11269, line: 134, column: 6)
!12379 = !DILocation(line: 392, column: 2, scope: !12352)
!12380 = distinct !DISubprogram(name: "z_time_slice", scope: !1896, file: !1896, line: 502, type: !10609, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12381)
!12381 = !{!12382, !12383}
!12382 = !DILocalVariable(name: "ticks", arg: 1, scope: !12380, file: !1896, line: 502, type: !105)
!12383 = !DILocalVariable(name: "key", scope: !12380, file: !1896, line: 511, type: !12289)
!12384 = !DILocation(line: 0, scope: !12380)
!12385 = !DILocation(line: 0, scope: !12297, inlinedAt: !12386)
!12386 = distinct !DILocation(line: 511, column: 25, scope: !12380)
!12387 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !12388)
!12388 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !12386)
!12389 = !DILocation(line: 0, scope: !12306, inlinedAt: !12388)
!12390 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !12386)
!12391 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !12386)
!12392 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !12386)
!12393 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !12386)
!12394 = !DILocation(line: 514, column: 6, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12380, file: !1896, line: 514, column: 6)
!12396 = !DILocation(line: 514, column: 25, scope: !12395)
!12397 = !DILocation(line: 514, column: 22, scope: !12395)
!12398 = !DILocation(line: 514, column: 6, scope: !12380)
!12399 = !DILocation(line: 515, column: 3, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12395, file: !1896, line: 514, column: 35)
!12401 = !DILocation(line: 0, scope: !12331, inlinedAt: !12402)
!12402 = distinct !DILocation(line: 516, column: 3, scope: !12400)
!12403 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !12402)
!12404 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !12402)
!12405 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !12402)
!12406 = !DILocation(line: 0, scope: !12345, inlinedAt: !12407)
!12407 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !12402)
!12408 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !12407)
!12409 = !DILocation(line: 517, column: 3, scope: !12400)
!12410 = !DILocation(line: 519, column: 18, scope: !12380)
!12411 = !DILocation(line: 522, column: 6, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12380, file: !1896, line: 522, column: 6)
!12413 = !DILocation(line: 522, column: 27, scope: !12412)
!12414 = !DILocation(line: 522, column: 30, scope: !12412)
!12415 = !DILocation(line: 522, column: 6, scope: !12380)
!12416 = !DILocation(line: 523, column: 30, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !1896, line: 523, column: 7)
!12418 = distinct !DILexicalBlock(scope: !12412, file: !1896, line: 522, column: 51)
!12419 = !DILocation(line: 523, column: 13, scope: !12417)
!12420 = !DILocation(line: 523, column: 7, scope: !12418)
!12421 = !DILocation(line: 530, column: 10, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12417, file: !1896, line: 523, column: 43)
!12423 = !DILocation(line: 531, column: 3, scope: !12422)
!12424 = !DILocation(line: 532, column: 30, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12417, file: !1896, line: 531, column: 10)
!12426 = !DILocation(line: 535, column: 29, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12412, file: !1896, line: 534, column: 9)
!12428 = !DILocation(line: 0, scope: !12331, inlinedAt: !12429)
!12429 = distinct !DILocation(line: 537, column: 2, scope: !12380)
!12430 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !12429)
!12431 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !12429)
!12432 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !12429)
!12433 = !DILocation(line: 0, scope: !12345, inlinedAt: !12434)
!12434 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !12429)
!12435 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !12434)
!12436 = !DILocation(line: 538, column: 1, scope: !12380)
!12437 = distinct !DISubprogram(name: "sliceable", scope: !1896, file: !1896, line: 468, type: !12438, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12440)
!12438 = !DISubroutineType(types: !12439)
!12439 = !{!540, !1789}
!12440 = !{!12441, !12442}
!12441 = !DILocalVariable(name: "thread", arg: 1, scope: !12437, file: !1896, line: 468, type: !1789)
!12442 = !DILocalVariable(name: "ret", scope: !12437, file: !1896, line: 470, type: !540)
!12443 = !DILocation(line: 0, scope: !12437)
!12444 = !DILocation(line: 470, column: 13, scope: !12437)
!12445 = !DILocation(line: 471, column: 3, scope: !12437)
!12446 = !DILocation(line: 471, column: 7, scope: !12437)
!12447 = !DILocation(line: 472, column: 3, scope: !12437)
!12448 = !DILocation(line: 472, column: 37, scope: !12437)
!12449 = !DILocation(line: 472, column: 24, scope: !12437)
!12450 = !DILocation(line: 472, column: 43, scope: !12437)
!12451 = !DILocation(line: 472, column: 7, scope: !12437)
!12452 = !DILocation(line: 473, column: 3, scope: !12437)
!12453 = !DILocation(line: 473, column: 7, scope: !12437)
!12454 = !DILocation(line: 473, column: 6, scope: !12437)
!12455 = !DILocation(line: 479, column: 2, scope: !12437)
!12456 = distinct !DISubprogram(name: "slice_expired_locked", scope: !1896, file: !1896, line: 482, type: !12457, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12459)
!12457 = !DISubroutineType(types: !12458)
!12458 = !{!12289, !12289}
!12459 = !{!12460, !12461}
!12460 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12456, file: !1896, line: 482, type: !12289)
!12461 = !DILocalVariable(name: "curr", scope: !12456, file: !1896, line: 484, type: !1789)
!12462 = !DILocation(line: 0, scope: !12456)
!12463 = !DILocation(line: 484, column: 26, scope: !12456)
!12464 = !DILocation(line: 493, column: 7, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12456, file: !1896, line: 493, column: 6)
!12466 = !DILocation(line: 493, column: 6, scope: !12456)
!12467 = !DILocation(line: 494, column: 3, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12465, file: !1896, line: 493, column: 49)
!12469 = !DILocation(line: 495, column: 2, scope: !12468)
!12470 = !DILocation(line: 496, column: 2, scope: !12456)
!12471 = !DILocation(line: 499, column: 1, scope: !12456)
!12472 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10652, file: !10652, line: 106, type: !12438, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12473)
!12473 = !{!12474, !12475}
!12474 = !DILocalVariable(name: "thread", arg: 1, scope: !12472, file: !10652, line: 106, type: !1789)
!12475 = !DILocalVariable(name: "state", scope: !12472, file: !10652, line: 108, type: !169)
!12476 = !DILocation(line: 0, scope: !12472)
!12477 = !DILocation(line: 108, column: 31, scope: !12472)
!12478 = !DILocation(line: 110, column: 16, scope: !12472)
!12479 = !DILocation(line: 111, column: 41, scope: !12472)
!12480 = !DILocation(line: 110, column: 2, scope: !12472)
!12481 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !1896, file: !1896, line: 393, type: !12255, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12482)
!12482 = !{!12483}
!12483 = !DILocalVariable(name: "thread", arg: 1, scope: !12481, file: !1896, line: 393, type: !1789)
!12484 = !DILocation(line: 0, scope: !12481)
!12485 = !DILocation(line: 395, column: 6, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12481, file: !1896, line: 395, column: 6)
!12487 = !DILocation(line: 395, column: 6, scope: !12481)
!12488 = !DILocalVariable(name: "thread", arg: 1, scope: !12489, file: !1896, line: 264, type: !1789)
!12489 = distinct !DISubprogram(name: "dequeue_thread", scope: !1896, file: !1896, line: 264, type: !12255, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12490)
!12490 = !{!12488}
!12491 = !DILocation(line: 0, scope: !12489, inlinedAt: !12492)
!12492 = distinct !DILocation(line: 396, column: 3, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12486, file: !1896, line: 395, column: 34)
!12494 = !DILocation(line: 266, column: 15, scope: !12489, inlinedAt: !12492)
!12495 = !DILocation(line: 266, column: 28, scope: !12489, inlinedAt: !12492)
!12496 = !DILocalVariable(name: "thread", arg: 1, scope: !12497, file: !1896, line: 232, type: !1789)
!12497 = distinct !DISubprogram(name: "runq_remove", scope: !1896, file: !1896, line: 232, type: !12255, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12498)
!12498 = !{!12496}
!12499 = !DILocation(line: 0, scope: !12497, inlinedAt: !12500)
!12500 = distinct !DILocation(line: 268, column: 3, scope: !12501, inlinedAt: !12492)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !1896, line: 267, column: 35)
!12502 = distinct !DILexicalBlock(scope: !12489, file: !1896, line: 267, column: 6)
!12503 = !DILocation(line: 234, column: 2, scope: !12497, inlinedAt: !12500)
!12504 = !DILocation(line: 397, column: 2, scope: !12493)
!12505 = !DILocalVariable(name: "thread", arg: 1, scope: !12506, file: !1896, line: 250, type: !1789)
!12506 = distinct !DISubprogram(name: "queue_thread", scope: !1896, file: !1896, line: 250, type: !12255, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12507)
!12507 = !{!12505}
!12508 = !DILocation(line: 0, scope: !12506, inlinedAt: !12509)
!12509 = distinct !DILocation(line: 398, column: 2, scope: !12481)
!12510 = !DILocation(line: 252, column: 15, scope: !12506, inlinedAt: !12509)
!12511 = !DILocation(line: 252, column: 28, scope: !12506, inlinedAt: !12509)
!12512 = !DILocalVariable(name: "thread", arg: 1, scope: !12513, file: !1896, line: 227, type: !1789)
!12513 = distinct !DISubprogram(name: "runq_add", scope: !1896, file: !1896, line: 227, type: !12255, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12514)
!12514 = !{!12512}
!12515 = !DILocation(line: 0, scope: !12513, inlinedAt: !12516)
!12516 = distinct !DILocation(line: 254, column: 3, scope: !12517, inlinedAt: !12509)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !1896, line: 253, column: 35)
!12518 = distinct !DILexicalBlock(scope: !12506, file: !1896, line: 253, column: 6)
!12519 = !DILocalVariable(name: "pq", arg: 1, scope: !12520, file: !1896, line: 181, type: !12523)
!12520 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !1896, file: !1896, line: 181, type: !12521, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12524)
!12521 = !DISubroutineType(types: !12522)
!12522 = !{null, !12523, !1789}
!12523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!12524 = !{!12519, !12525, !12526}
!12525 = !DILocalVariable(name: "thread", arg: 2, scope: !12520, file: !1896, line: 182, type: !1789)
!12526 = !DILocalVariable(name: "t", scope: !12520, file: !1896, line: 184, type: !1789)
!12527 = !DILocation(line: 0, scope: !12520, inlinedAt: !12528)
!12528 = distinct !DILocation(line: 229, column: 2, scope: !12513, inlinedAt: !12516)
!12529 = !DILocation(line: 186, column: 2, scope: !12530, inlinedAt: !12528)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !1896, line: 186, column: 2)
!12531 = distinct !DILexicalBlock(scope: !12520, file: !1896, line: 186, column: 2)
!12532 = !DILocation(line: 186, column: 2, scope: !12531, inlinedAt: !12528)
!12533 = !DILocation(line: 186, column: 2, scope: !12534, inlinedAt: !12528)
!12534 = distinct !DILexicalBlock(scope: !12530, file: !1896, line: 186, column: 2)
!12535 = !DILocation(line: 188, column: 2, scope: !12536, inlinedAt: !12528)
!12536 = distinct !DILexicalBlock(scope: !12520, file: !1896, line: 188, column: 2)
!12537 = !DILocation(line: 188, column: 2, scope: !12538, inlinedAt: !12528)
!12538 = distinct !DILexicalBlock(scope: !12536, file: !1896, line: 188, column: 2)
!12539 = !DILocation(line: 0, scope: !12536, inlinedAt: !12528)
!12540 = !DILocation(line: 189, column: 7, scope: !12541, inlinedAt: !12528)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !1896, line: 189, column: 7)
!12542 = distinct !DILexicalBlock(scope: !12538, file: !1896, line: 188, column: 56)
!12543 = !DILocation(line: 189, column: 35, scope: !12541, inlinedAt: !12528)
!12544 = !DILocation(line: 189, column: 7, scope: !12542, inlinedAt: !12528)
!12545 = !DILocation(line: 191, column: 21, scope: !12546, inlinedAt: !12528)
!12546 = distinct !DILexicalBlock(scope: !12541, file: !1896, line: 189, column: 40)
!12547 = !DILocation(line: 190, column: 4, scope: !12546, inlinedAt: !12528)
!12548 = !DILocation(line: 192, column: 4, scope: !12546, inlinedAt: !12528)
!12549 = distinct !{!12549, !12535, !12550}
!12550 = !DILocation(line: 194, column: 2, scope: !12536, inlinedAt: !12528)
!12551 = !DILocation(line: 196, column: 37, scope: !12520, inlinedAt: !12528)
!12552 = !DILocation(line: 196, column: 2, scope: !12520, inlinedAt: !12528)
!12553 = !DILocation(line: 197, column: 1, scope: !12520, inlinedAt: !12528)
!12554 = !DILocation(line: 399, column: 25, scope: !12481)
!12555 = !DILocation(line: 399, column: 22, scope: !12481)
!12556 = !DILocation(line: 399, column: 2, scope: !12481)
!12557 = !DILocation(line: 400, column: 1, scope: !12481)
!12558 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10652, file: !10652, line: 136, type: !12438, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12559)
!12559 = !{!12560}
!12560 = !DILocalVariable(name: "thread", arg: 1, scope: !12558, file: !10652, line: 136, type: !1789)
!12561 = !DILocation(line: 0, scope: !12558)
!12562 = !DILocation(line: 138, column: 9, scope: !12558)
!12563 = !DILocation(line: 138, column: 2, scope: !12558)
!12564 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !1896, file: !1896, line: 1137, type: !12521, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12565)
!12565 = !{!12566, !12567}
!12566 = !DILocalVariable(name: "pq", arg: 1, scope: !12564, file: !1896, line: 1137, type: !12523)
!12567 = !DILocalVariable(name: "thread", arg: 2, scope: !12564, file: !1896, line: 1137, type: !1789)
!12568 = !DILocation(line: 0, scope: !12564)
!12569 = !DILocation(line: 1139, column: 2, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12571, file: !1896, line: 1139, column: 2)
!12571 = distinct !DILexicalBlock(scope: !12564, file: !1896, line: 1139, column: 2)
!12572 = !DILocation(line: 1139, column: 2, scope: !12571)
!12573 = !DILocation(line: 1139, column: 2, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12570, file: !1896, line: 1139, column: 2)
!12575 = !DILocation(line: 1141, column: 33, scope: !12564)
!12576 = !DILocation(line: 1141, column: 2, scope: !12564)
!12577 = !DILocation(line: 1142, column: 1, scope: !12564)
!12578 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10652, file: !10652, line: 83, type: !12438, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12579)
!12579 = !{!12580}
!12580 = !DILocalVariable(name: "thread", arg: 1, scope: !12578, file: !10652, line: 83, type: !1789)
!12581 = !DILocation(line: 0, scope: !12578)
!12582 = !DILocation(line: 89, column: 16, scope: !12578)
!12583 = !DILocation(line: 89, column: 2, scope: !12578)
!12584 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !12585, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12587)
!12585 = !DISubroutineType(types: !12586)
!12586 = !{!1892, !12523}
!12587 = !{!12588}
!12588 = !DILocalVariable(name: "list", arg: 1, scope: !12584, file: !137, line: 294, type: !12523)
!12589 = !DILocation(line: 0, scope: !12584)
!12590 = !DILocation(line: 296, column: 9, scope: !12584)
!12591 = !DILocation(line: 296, column: 49, scope: !12584)
!12592 = !DILocation(line: 296, column: 2, scope: !12584)
!12593 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !12594, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12596)
!12594 = !DISubroutineType(types: !12595)
!12595 = !{null, !1892, !1892}
!12596 = !{!12597, !12598, !12599}
!12597 = !DILocalVariable(name: "successor", arg: 1, scope: !12593, file: !137, line: 443, type: !1892)
!12598 = !DILocalVariable(name: "node", arg: 2, scope: !12593, file: !137, line: 443, type: !1892)
!12599 = !DILocalVariable(name: "prev", scope: !12593, file: !137, line: 445, type: !12600)
!12600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1892)
!12601 = !DILocation(line: 0, scope: !12593)
!12602 = !DILocation(line: 445, column: 39, scope: !12593)
!12603 = !DILocation(line: 447, column: 8, scope: !12593)
!12604 = !DILocation(line: 447, column: 13, scope: !12593)
!12605 = !DILocation(line: 448, column: 8, scope: !12593)
!12606 = !DILocation(line: 448, column: 13, scope: !12593)
!12607 = !DILocation(line: 449, column: 8, scope: !12593)
!12608 = !DILocation(line: 449, column: 13, scope: !12593)
!12609 = !DILocation(line: 450, column: 18, scope: !12593)
!12610 = !DILocation(line: 451, column: 1, scope: !12593)
!12611 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !12612, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12614)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{!1892, !12523, !1892}
!12614 = !{!12615, !12616}
!12615 = !DILocalVariable(name: "list", arg: 1, scope: !12611, file: !137, line: 341, type: !12523)
!12616 = !DILocalVariable(name: "node", arg: 2, scope: !12611, file: !137, line: 342, type: !1892)
!12617 = !DILocation(line: 0, scope: !12611)
!12618 = !DILocation(line: 344, column: 15, scope: !12611)
!12619 = !DILocation(line: 344, column: 9, scope: !12611)
!12620 = !DILocation(line: 344, column: 26, scope: !12611)
!12621 = !DILocation(line: 344, column: 2, scope: !12611)
!12622 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !12623, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12625)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{null, !12523, !1892}
!12625 = !{!12626, !12627, !12628}
!12626 = !DILocalVariable(name: "list", arg: 1, scope: !12622, file: !137, line: 404, type: !12523)
!12627 = !DILocalVariable(name: "node", arg: 2, scope: !12622, file: !137, line: 404, type: !1892)
!12628 = !DILocalVariable(name: "tail", scope: !12622, file: !137, line: 406, type: !12600)
!12629 = !DILocation(line: 0, scope: !12622)
!12630 = !DILocation(line: 406, column: 34, scope: !12622)
!12631 = !DILocation(line: 408, column: 8, scope: !12622)
!12632 = !DILocation(line: 408, column: 13, scope: !12622)
!12633 = !DILocation(line: 409, column: 8, scope: !12622)
!12634 = !DILocation(line: 409, column: 13, scope: !12622)
!12635 = !DILocation(line: 411, column: 8, scope: !12622)
!12636 = !DILocation(line: 411, column: 13, scope: !12622)
!12637 = !DILocation(line: 412, column: 13, scope: !12622)
!12638 = !DILocation(line: 413, column: 1, scope: !12622)
!12639 = distinct !DISubprogram(name: "update_cache", scope: !1896, file: !1896, line: 559, type: !10609, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12640)
!12640 = !{!12641, !12642}
!12641 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12639, file: !1896, line: 559, type: !105)
!12642 = !DILocalVariable(name: "thread", scope: !12639, file: !1896, line: 562, type: !1789)
!12643 = !DILocation(line: 0, scope: !12639)
!12644 = !DILocation(line: 239, column: 9, scope: !12645, inlinedAt: !12648)
!12645 = distinct !DISubprogram(name: "runq_best", scope: !1896, file: !1896, line: 237, type: !12646, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!12646 = !DISubroutineType(types: !12647)
!12647 = !{!1789}
!12648 = distinct !DILocation(line: 314, column: 28, scope: !12649, inlinedAt: !12653)
!12649 = distinct !DISubprogram(name: "next_up", scope: !1896, file: !1896, line: 312, type: !12646, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12650)
!12650 = !{!12651, !12652}
!12651 = !DILocalVariable(name: "thread", scope: !12649, file: !1896, line: 314, type: !1789)
!12652 = !DILocalVariable(name: "mirqp", scope: !12649, file: !1896, line: 322, type: !1789)
!12653 = distinct !DILocation(line: 562, column: 28, scope: !12639)
!12654 = !DILocation(line: 0, scope: !12649, inlinedAt: !12653)
!12655 = !DILocation(line: 322, column: 41, scope: !12649, inlinedAt: !12653)
!12656 = !DILocation(line: 324, column: 12, scope: !12657, inlinedAt: !12653)
!12657 = distinct !DILexicalBlock(scope: !12649, file: !1896, line: 324, column: 6)
!12658 = !DILocation(line: 324, column: 20, scope: !12657, inlinedAt: !12653)
!12659 = !DILocation(line: 324, column: 31, scope: !12657, inlinedAt: !12653)
!12660 = !DILocation(line: 324, column: 39, scope: !12657, inlinedAt: !12653)
!12661 = !DILocation(line: 324, column: 43, scope: !12657, inlinedAt: !12653)
!12662 = !DILocation(line: 324, column: 6, scope: !12649, inlinedAt: !12653)
!12663 = !DILocation(line: 325, column: 8, scope: !12664, inlinedAt: !12653)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !1896, line: 325, column: 7)
!12665 = distinct !DILexicalBlock(scope: !12657, file: !1896, line: 324, column: 64)
!12666 = !DILocation(line: 325, column: 7, scope: !12665, inlinedAt: !12653)
!12667 = !DILocation(line: 328, column: 36, scope: !12668, inlinedAt: !12653)
!12668 = distinct !DILexicalBlock(scope: !12664, file: !1896, line: 327, column: 10)
!12669 = !DILocation(line: 340, column: 17, scope: !12649, inlinedAt: !12653)
!12670 = !DILocation(line: 340, column: 9, scope: !12649, inlinedAt: !12653)
!12671 = !DILocalVariable(name: "thread", arg: 1, scope: !12672, file: !1896, line: 127, type: !1789)
!12672 = distinct !DISubprogram(name: "should_preempt", scope: !1896, file: !1896, line: 127, type: !12673, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12675)
!12673 = !DISubroutineType(types: !12674)
!12674 = !{!540, !1789, !105}
!12675 = !{!12671, !12676}
!12676 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12672, file: !1896, line: 128, type: !105)
!12677 = !DILocation(line: 0, scope: !12672, inlinedAt: !12678)
!12678 = distinct !DILocation(line: 564, column: 6, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12639, file: !1896, line: 564, column: 6)
!12680 = !DILocation(line: 133, column: 17, scope: !12681, inlinedAt: !12678)
!12681 = distinct !DILexicalBlock(scope: !12672, file: !1896, line: 133, column: 6)
!12682 = !DILocation(line: 0, scope: !12679)
!12683 = !DILocation(line: 133, column: 6, scope: !12672, inlinedAt: !12678)
!12684 = !DILocation(line: 137, column: 2, scope: !12685, inlinedAt: !12678)
!12685 = distinct !DILexicalBlock(scope: !12686, file: !1896, line: 137, column: 2)
!12686 = distinct !DILexicalBlock(scope: !12672, file: !1896, line: 137, column: 2)
!12687 = !DILocation(line: 137, column: 2, scope: !12686, inlinedAt: !12678)
!12688 = !DILocation(line: 137, column: 2, scope: !12689, inlinedAt: !12678)
!12689 = distinct !DILexicalBlock(scope: !12685, file: !1896, line: 137, column: 2)
!12690 = !DILocation(line: 140, column: 6, scope: !12691, inlinedAt: !12678)
!12691 = distinct !DILexicalBlock(scope: !12672, file: !1896, line: 140, column: 6)
!12692 = !DILocation(line: 140, column: 6, scope: !12672, inlinedAt: !12678)
!12693 = !DILocation(line: 150, column: 9, scope: !12694, inlinedAt: !12678)
!12694 = distinct !DILexicalBlock(scope: !12672, file: !1896, line: 149, column: 6)
!12695 = !DILocation(line: 149, column: 6, scope: !12672, inlinedAt: !12678)
!12696 = !DILocation(line: 157, column: 6, scope: !12697, inlinedAt: !12678)
!12697 = distinct !DILexicalBlock(scope: !12672, file: !1896, line: 157, column: 6)
!12698 = !DILocation(line: 157, column: 27, scope: !12697, inlinedAt: !12678)
!12699 = !DILocation(line: 157, column: 30, scope: !12697, inlinedAt: !12678)
!12700 = !DILocation(line: 564, column: 6, scope: !12639)
!12701 = !DILocation(line: 566, column: 14, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !1896, line: 566, column: 7)
!12703 = distinct !DILexicalBlock(scope: !12679, file: !1896, line: 564, column: 42)
!12704 = !DILocation(line: 566, column: 7, scope: !12703)
!12705 = !DILocation(line: 567, column: 4, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12702, file: !1896, line: 566, column: 27)
!12707 = !DILocation(line: 568, column: 3, scope: !12706)
!12708 = !DILocation(line: 570, column: 3, scope: !12703)
!12709 = !DILocation(line: 572, column: 2, scope: !12703)
!12710 = !DILocation(line: 585, column: 1, scope: !12639)
!12711 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !1896, file: !1896, line: 1144, type: !12712, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12714)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{!1789, !12523}
!12714 = !{!12715, !12716, !12717}
!12715 = !DILocalVariable(name: "pq", arg: 1, scope: !12711, file: !1896, line: 1144, type: !12523)
!12716 = !DILocalVariable(name: "thread", scope: !12711, file: !1896, line: 1146, type: !1789)
!12717 = !DILocalVariable(name: "n", scope: !12711, file: !1896, line: 1147, type: !1892)
!12718 = !DILocation(line: 0, scope: !12711)
!12719 = !DILocation(line: 1147, column: 19, scope: !12711)
!12720 = !DILocation(line: 1152, column: 2, scope: !12711)
!12721 = distinct !DISubprogram(name: "is_metairq", scope: !1896, file: !1896, line: 68, type: !12273, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12722)
!12722 = !{!12723}
!12723 = !DILocalVariable(name: "thread", arg: 1, scope: !12721, file: !1896, line: 68, type: !1789)
!12724 = !DILocation(line: 0, scope: !12721)
!12725 = !DILocation(line: 71, column: 23, scope: !12721)
!12726 = !DILocation(line: 72, column: 3, scope: !12721)
!12727 = !DILocation(line: 71, column: 2, scope: !12721)
!12728 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10652, file: !10652, line: 115, type: !12438, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12729)
!12729 = !{!12730}
!12730 = !DILocalVariable(name: "thread", arg: 1, scope: !12728, file: !10652, line: 115, type: !1789)
!12731 = !DILocation(line: 0, scope: !12728)
!12732 = !DILocation(line: 117, column: 46, scope: !12728)
!12733 = !DILocation(line: 117, column: 10, scope: !12728)
!12734 = !DILocation(line: 117, column: 9, scope: !12728)
!12735 = !DILocation(line: 117, column: 2, scope: !12728)
!12736 = distinct !DISubprogram(name: "is_preempt", scope: !1896, file: !1896, line: 62, type: !12273, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12737)
!12737 = !{!12738}
!12738 = !DILocalVariable(name: "thread", arg: 1, scope: !12736, file: !1896, line: 62, type: !1789)
!12739 = !DILocation(line: 0, scope: !12736)
!12740 = !DILocation(line: 65, column: 22, scope: !12736)
!12741 = !DILocation(line: 65, column: 30, scope: !12736)
!12742 = !DILocation(line: 65, column: 2, scope: !12736)
!12743 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !1896, file: !1896, line: 545, type: !12255, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12744)
!12744 = !{!12745}
!12745 = !DILocalVariable(name: "thread", arg: 1, scope: !12743, file: !1896, line: 545, type: !1789)
!12746 = !DILocation(line: 0, scope: !12743)
!12747 = !DILocation(line: 548, column: 6, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12743, file: !1896, line: 548, column: 6)
!12749 = !DILocation(line: 548, column: 25, scope: !12748)
!12750 = !DILocation(line: 548, column: 40, scope: !12748)
!12751 = !DILocation(line: 548, column: 29, scope: !12748)
!12752 = !DILocation(line: 548, column: 50, scope: !12748)
!12753 = !DILocation(line: 549, column: 7, scope: !12748)
!12754 = !DILocation(line: 548, column: 6, scope: !12743)
!12755 = !DILocation(line: 552, column: 37, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12748, file: !1896, line: 552, column: 13)
!12757 = !DILocation(line: 552, column: 13, scope: !12748)
!12758 = !DILocation(line: 0, scope: !12748)
!12759 = !DILocation(line: 557, column: 1, scope: !12743)
!12760 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11081, file: !11081, line: 35, type: !12761, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12765)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{!540, !12763}
!12763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12764, size: 32)
!12764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1840)
!12765 = !{!12766}
!12766 = !DILocalVariable(name: "to", arg: 1, scope: !12760, file: !11081, line: 35, type: !12763)
!12767 = !DILocation(line: 0, scope: !12760)
!12768 = !DILocation(line: 37, column: 35, scope: !12760)
!12769 = !DILocation(line: 37, column: 10, scope: !12760)
!12770 = !DILocation(line: 37, column: 9, scope: !12760)
!12771 = !DILocation(line: 37, column: 2, scope: !12760)
!12772 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !12773, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12777)
!12773 = !DISubroutineType(types: !12774)
!12774 = !{!540, !12775}
!12775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12776, size: 32)
!12776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1799)
!12777 = !{!12778}
!12778 = !DILocalVariable(name: "node", arg: 1, scope: !12772, file: !137, line: 225, type: !12775)
!12779 = !DILocation(line: 0, scope: !12772)
!12780 = !DILocation(line: 227, column: 15, scope: !12772)
!12781 = !DILocation(line: 227, column: 20, scope: !12772)
!12782 = !DILocation(line: 227, column: 2, scope: !12772)
!12783 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !12612, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12784)
!12784 = !{!12785, !12786}
!12785 = !DILocalVariable(name: "list", arg: 1, scope: !12783, file: !137, line: 325, type: !12523)
!12786 = !DILocalVariable(name: "node", arg: 2, scope: !12783, file: !137, line: 326, type: !1892)
!12787 = !DILocation(line: 0, scope: !12783)
!12788 = !DILocation(line: 328, column: 24, scope: !12783)
!12789 = !DILocation(line: 328, column: 15, scope: !12783)
!12790 = !DILocation(line: 328, column: 9, scope: !12783)
!12791 = !DILocation(line: 328, column: 45, scope: !12783)
!12792 = !DILocation(line: 328, column: 2, scope: !12783)
!12793 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !12794, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12796)
!12794 = !DISubroutineType(types: !12795)
!12795 = !{!540, !12523}
!12796 = !{!12797}
!12797 = !DILocalVariable(name: "list", arg: 1, scope: !12793, file: !137, line: 266, type: !12523)
!12798 = !DILocation(line: 0, scope: !12793)
!12799 = !DILocation(line: 268, column: 15, scope: !12793)
!12800 = !DILocation(line: 268, column: 20, scope: !12793)
!12801 = !DILocation(line: 268, column: 2, scope: !12793)
!12802 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !12803, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12805)
!12803 = !DISubroutineType(types: !12804)
!12804 = !{null, !1892}
!12805 = !{!12806, !12807, !12808}
!12806 = !DILocalVariable(name: "node", arg: 1, scope: !12802, file: !137, line: 496, type: !1892)
!12807 = !DILocalVariable(name: "prev", scope: !12802, file: !137, line: 498, type: !12600)
!12808 = !DILocalVariable(name: "next", scope: !12802, file: !137, line: 499, type: !12600)
!12809 = !DILocation(line: 0, scope: !12802)
!12810 = !DILocation(line: 498, column: 34, scope: !12802)
!12811 = !DILocation(line: 499, column: 34, scope: !12802)
!12812 = !DILocation(line: 501, column: 8, scope: !12802)
!12813 = !DILocation(line: 501, column: 13, scope: !12802)
!12814 = !DILocation(line: 502, column: 8, scope: !12802)
!12815 = !DILocation(line: 502, column: 13, scope: !12802)
!12816 = !DILocation(line: 503, column: 2, scope: !12802)
!12817 = !DILocation(line: 504, column: 1, scope: !12802)
!12818 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !12803, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12819)
!12819 = !{!12820}
!12820 = !DILocalVariable(name: "node", arg: 1, scope: !12818, file: !137, line: 211, type: !1892)
!12821 = !DILocation(line: 0, scope: !12818)
!12822 = !DILocation(line: 213, column: 8, scope: !12818)
!12823 = !DILocation(line: 213, column: 13, scope: !12818)
!12824 = !DILocation(line: 214, column: 8, scope: !12818)
!12825 = !DILocation(line: 214, column: 13, scope: !12818)
!12826 = !DILocation(line: 215, column: 1, scope: !12818)
!12827 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10652, file: !10652, line: 131, type: !12828, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12830)
!12828 = !DISubroutineType(types: !12829)
!12829 = !{!540, !1789, !113}
!12830 = !{!12831, !12832}
!12831 = !DILocalVariable(name: "thread", arg: 1, scope: !12827, file: !10652, line: 131, type: !1789)
!12832 = !DILocalVariable(name: "state", arg: 2, scope: !12827, file: !10652, line: 131, type: !113)
!12833 = !DILocation(line: 0, scope: !12827)
!12834 = !DILocation(line: 133, column: 23, scope: !12827)
!12835 = !DILocation(line: 133, column: 10, scope: !12827)
!12836 = !DILocation(line: 133, column: 36, scope: !12827)
!12837 = !DILocation(line: 133, column: 45, scope: !12827)
!12838 = !DILocation(line: 133, column: 2, scope: !12827)
!12839 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10652, file: !10652, line: 211, type: !12840, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12842)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!540, !105, !105}
!12842 = !{!12843, !12844}
!12843 = !DILocalVariable(name: "prio", arg: 1, scope: !12839, file: !10652, line: 211, type: !105)
!12844 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12839, file: !10652, line: 211, type: !105)
!12845 = !DILocation(line: 0, scope: !12839)
!12846 = !DILocation(line: 213, column: 9, scope: !12839)
!12847 = !DILocation(line: 213, column: 2, scope: !12839)
!12848 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10652, file: !10652, line: 206, type: !12840, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12849)
!12849 = !{!12850, !12851}
!12850 = !DILocalVariable(name: "prio1", arg: 1, scope: !12848, file: !10652, line: 206, type: !105)
!12851 = !DILocalVariable(name: "prio2", arg: 2, scope: !12848, file: !10652, line: 206, type: !105)
!12852 = !DILocation(line: 0, scope: !12848)
!12853 = !DILocation(line: 208, column: 15, scope: !12848)
!12854 = !DILocation(line: 208, column: 2, scope: !12848)
!12855 = distinct !DISubprogram(name: "z_ready_thread", scope: !1896, file: !1896, line: 635, type: !12255, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12856)
!12856 = !{!12857, !12858, !12860}
!12857 = !DILocalVariable(name: "thread", arg: 1, scope: !12855, file: !1896, line: 635, type: !1789)
!12858 = !DILocalVariable(name: "__i", scope: !12859, file: !1896, line: 637, type: !12289)
!12859 = distinct !DILexicalBlock(scope: !12855, file: !1896, line: 637, column: 2)
!12860 = !DILocalVariable(name: "__key", scope: !12859, file: !1896, line: 637, type: !12289)
!12861 = !DILocation(line: 0, scope: !12855)
!12862 = !DILocation(line: 0, scope: !12859)
!12863 = !DILocation(line: 0, scope: !12297, inlinedAt: !12864)
!12864 = distinct !DILocation(line: 637, column: 2, scope: !12859)
!12865 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !12866)
!12866 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !12864)
!12867 = !DILocation(line: 0, scope: !12306, inlinedAt: !12866)
!12868 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !12864)
!12869 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !12864)
!12870 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !12864)
!12871 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !12864)
!12872 = !DILocation(line: 639, column: 4, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12874, file: !1896, line: 638, column: 41)
!12874 = distinct !DILexicalBlock(scope: !12875, file: !1896, line: 638, column: 7)
!12875 = distinct !DILexicalBlock(scope: !12876, file: !1896, line: 637, column: 26)
!12876 = distinct !DILexicalBlock(scope: !12859, file: !1896, line: 637, column: 2)
!12877 = !DILocation(line: 0, scope: !12331, inlinedAt: !12878)
!12878 = distinct !DILocation(line: 637, column: 2, scope: !12876)
!12879 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !12878)
!12880 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !12878)
!12881 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !12878)
!12882 = !DILocation(line: 0, scope: !12345, inlinedAt: !12883)
!12883 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !12878)
!12884 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !12883)
!12885 = !DILocation(line: 642, column: 1, scope: !12855)
!12886 = distinct !DISubprogram(name: "ready_thread", scope: !1896, file: !1896, line: 617, type: !12255, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12887)
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "thread", arg: 1, scope: !12886, file: !1896, line: 617, type: !1789)
!12889 = !DILocation(line: 0, scope: !12886)
!12890 = !DILocation(line: 626, column: 7, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12886, file: !1896, line: 626, column: 6)
!12892 = !DILocation(line: 626, column: 34, scope: !12891)
!12893 = !DILocation(line: 626, column: 37, scope: !12891)
!12894 = !DILocation(line: 626, column: 6, scope: !12886)
!12895 = !DILocation(line: 0, scope: !12506, inlinedAt: !12896)
!12896 = distinct !DILocation(line: 629, column: 3, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12891, file: !1896, line: 626, column: 64)
!12898 = !DILocation(line: 252, column: 15, scope: !12506, inlinedAt: !12896)
!12899 = !DILocation(line: 252, column: 28, scope: !12506, inlinedAt: !12896)
!12900 = !DILocation(line: 0, scope: !12513, inlinedAt: !12901)
!12901 = distinct !DILocation(line: 254, column: 3, scope: !12517, inlinedAt: !12896)
!12902 = !DILocation(line: 0, scope: !12520, inlinedAt: !12903)
!12903 = distinct !DILocation(line: 229, column: 2, scope: !12513, inlinedAt: !12901)
!12904 = !DILocation(line: 186, column: 2, scope: !12530, inlinedAt: !12903)
!12905 = !DILocation(line: 186, column: 2, scope: !12531, inlinedAt: !12903)
!12906 = !DILocation(line: 186, column: 2, scope: !12534, inlinedAt: !12903)
!12907 = !DILocation(line: 188, column: 2, scope: !12536, inlinedAt: !12903)
!12908 = !DILocation(line: 188, column: 2, scope: !12538, inlinedAt: !12903)
!12909 = !DILocation(line: 0, scope: !12536, inlinedAt: !12903)
!12910 = !DILocation(line: 189, column: 7, scope: !12541, inlinedAt: !12903)
!12911 = !DILocation(line: 189, column: 35, scope: !12541, inlinedAt: !12903)
!12912 = !DILocation(line: 189, column: 7, scope: !12542, inlinedAt: !12903)
!12913 = !DILocation(line: 191, column: 21, scope: !12546, inlinedAt: !12903)
!12914 = !DILocation(line: 190, column: 4, scope: !12546, inlinedAt: !12903)
!12915 = !DILocation(line: 192, column: 4, scope: !12546, inlinedAt: !12903)
!12916 = distinct !{!12916, !12907, !12917}
!12917 = !DILocation(line: 194, column: 2, scope: !12536, inlinedAt: !12903)
!12918 = !DILocation(line: 196, column: 37, scope: !12520, inlinedAt: !12903)
!12919 = !DILocation(line: 196, column: 2, scope: !12520, inlinedAt: !12903)
!12920 = !DILocation(line: 197, column: 1, scope: !12520, inlinedAt: !12903)
!12921 = !DILocation(line: 630, column: 3, scope: !12897)
!12922 = !DILocation(line: 632, column: 2, scope: !12897)
!12923 = !DILocation(line: 633, column: 1, scope: !12886)
!12924 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10652, file: !10652, line: 120, type: !12438, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12925)
!12925 = !{!12926}
!12926 = !DILocalVariable(name: "thread", arg: 1, scope: !12924, file: !10652, line: 120, type: !1789)
!12927 = !DILocation(line: 0, scope: !12924)
!12928 = !DILocation(line: 122, column: 12, scope: !12924)
!12929 = !DILocation(line: 122, column: 62, scope: !12924)
!12930 = !DILocation(line: 123, column: 4, scope: !12924)
!12931 = !DILocation(line: 122, column: 2, scope: !12924)
!12932 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !1896, file: !1896, line: 644, type: !12255, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12933)
!12933 = !{!12934, !12935, !12937}
!12934 = !DILocalVariable(name: "thread", arg: 1, scope: !12932, file: !1896, line: 644, type: !1789)
!12935 = !DILocalVariable(name: "__i", scope: !12936, file: !1896, line: 646, type: !12289)
!12936 = distinct !DILexicalBlock(scope: !12932, file: !1896, line: 646, column: 2)
!12937 = !DILocalVariable(name: "__key", scope: !12936, file: !1896, line: 646, type: !12289)
!12938 = !DILocation(line: 0, scope: !12932)
!12939 = !DILocation(line: 0, scope: !12936)
!12940 = !DILocation(line: 0, scope: !12297, inlinedAt: !12941)
!12941 = distinct !DILocation(line: 646, column: 2, scope: !12936)
!12942 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !12943)
!12943 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !12941)
!12944 = !DILocation(line: 0, scope: !12306, inlinedAt: !12943)
!12945 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !12941)
!12946 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !12941)
!12947 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !12941)
!12948 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !12941)
!12949 = !DILocation(line: 647, column: 3, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12951, file: !1896, line: 646, column: 26)
!12951 = distinct !DILexicalBlock(scope: !12936, file: !1896, line: 646, column: 2)
!12952 = !DILocation(line: 0, scope: !12331, inlinedAt: !12953)
!12953 = distinct !DILocation(line: 646, column: 2, scope: !12951)
!12954 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !12953)
!12955 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !12953)
!12956 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !12953)
!12957 = !DILocation(line: 0, scope: !12345, inlinedAt: !12958)
!12958 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !12953)
!12959 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !12958)
!12960 = !DILocation(line: 649, column: 1, scope: !12932)
!12961 = distinct !DISubprogram(name: "z_sched_start", scope: !1896, file: !1896, line: 651, type: !12255, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12962)
!12962 = !{!12963, !12964}
!12963 = !DILocalVariable(name: "thread", arg: 1, scope: !12961, file: !1896, line: 651, type: !1789)
!12964 = !DILocalVariable(name: "key", scope: !12961, file: !1896, line: 653, type: !12289)
!12965 = !DILocation(line: 0, scope: !12961)
!12966 = !DILocation(line: 0, scope: !12297, inlinedAt: !12967)
!12967 = distinct !DILocation(line: 653, column: 25, scope: !12961)
!12968 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !12969)
!12969 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !12967)
!12970 = !DILocation(line: 0, scope: !12306, inlinedAt: !12969)
!12971 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !12967)
!12972 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !12967)
!12973 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !12967)
!12974 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !12967)
!12975 = !DILocation(line: 655, column: 6, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12961, file: !1896, line: 655, column: 6)
!12977 = !DILocation(line: 655, column: 6, scope: !12961)
!12978 = !DILocation(line: 0, scope: !12331, inlinedAt: !12979)
!12979 = distinct !DILocation(line: 656, column: 3, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12976, file: !1896, line: 655, column: 36)
!12981 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !12979)
!12982 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !12979)
!12983 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !12979)
!12984 = !DILocation(line: 0, scope: !12345, inlinedAt: !12985)
!12985 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !12979)
!12986 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !12985)
!12987 = !DILocation(line: 657, column: 3, scope: !12980)
!12988 = !DILocation(line: 660, column: 2, scope: !12961)
!12989 = !DILocation(line: 661, column: 2, scope: !12961)
!12990 = !DILocation(line: 662, column: 2, scope: !12961)
!12991 = !DILocation(line: 663, column: 1, scope: !12961)
!12992 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10652, file: !10652, line: 126, type: !12438, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !12993)
!12993 = !{!12994}
!12994 = !DILocalVariable(name: "thread", arg: 1, scope: !12992, file: !10652, line: 126, type: !1789)
!12995 = !DILocation(line: 0, scope: !12992)
!12996 = !DILocation(line: 128, column: 23, scope: !12992)
!12997 = !DILocation(line: 128, column: 36, scope: !12992)
!12998 = !DILocation(line: 128, column: 56, scope: !12992)
!12999 = !DILocation(line: 128, column: 2, scope: !12992)
!13000 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10652, file: !10652, line: 155, type: !12255, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13001)
!13001 = !{!13002}
!13002 = !DILocalVariable(name: "thread", arg: 1, scope: !13000, file: !10652, line: 155, type: !1789)
!13003 = !DILocation(line: 0, scope: !13000)
!13004 = !DILocation(line: 157, column: 15, scope: !13000)
!13005 = !DILocation(line: 157, column: 28, scope: !13000)
!13006 = !DILocation(line: 158, column: 1, scope: !13000)
!13007 = distinct !DISubprogram(name: "z_reschedule", scope: !1896, file: !1896, line: 967, type: !12332, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13008)
!13008 = !{!13009, !13010}
!13009 = !DILocalVariable(name: "lock", arg: 1, scope: !13007, file: !1896, line: 967, type: !12300)
!13010 = !DILocalVariable(name: "key", arg: 2, scope: !13007, file: !1896, line: 967, type: !12289)
!13011 = !DILocation(line: 0, scope: !13007)
!13012 = !DILocation(line: 969, column: 6, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13007, file: !1896, line: 969, column: 6)
!13014 = !DILocation(line: 969, column: 23, scope: !13013)
!13015 = !DILocation(line: 969, column: 26, scope: !13013)
!13016 = !DILocation(line: 969, column: 6, scope: !13007)
!13017 = !DILocalVariable(name: "key", arg: 2, scope: !13018, file: !10777, line: 193, type: !12289)
!13018 = distinct !DISubprogram(name: "z_swap", scope: !10777, file: !10777, line: 193, type: !13019, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13021)
!13019 = !DISubroutineType(types: !13020)
!13020 = !{!105, !12300, !12289}
!13021 = !{!13022, !13017}
!13022 = !DILocalVariable(name: "lock", arg: 1, scope: !13018, file: !10777, line: 193, type: !12300)
!13023 = !DILocation(line: 0, scope: !13018, inlinedAt: !13024)
!13024 = distinct !DILocation(line: 970, column: 3, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13013, file: !1896, line: 969, column: 39)
!13026 = !DILocalVariable(name: "l", arg: 1, scope: !13027, file: !236, line: 221, type: !12300)
!13027 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !13028, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13030)
!13028 = !DISubroutineType(types: !13029)
!13029 = !{null, !12300}
!13030 = !{!13026}
!13031 = !DILocation(line: 0, scope: !13027, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 195, column: 2, scope: !13018, inlinedAt: !13024)
!13033 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !13032)
!13034 = distinct !DILexicalBlock(scope: !13035, file: !236, line: 225, column: 2)
!13035 = distinct !DILexicalBlock(scope: !13027, file: !236, line: 225, column: 2)
!13036 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !13032)
!13037 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !13032)
!13038 = distinct !DILexicalBlock(scope: !13034, file: !236, line: 225, column: 2)
!13039 = !DILocation(line: 196, column: 9, scope: !13018, inlinedAt: !13024)
!13040 = !DILocation(line: 971, column: 2, scope: !13025)
!13041 = !DILocation(line: 0, scope: !12331, inlinedAt: !13042)
!13042 = distinct !DILocation(line: 972, column: 3, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13013, file: !1896, line: 971, column: 9)
!13044 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13042)
!13045 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13042)
!13046 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13042)
!13047 = !DILocation(line: 0, scope: !12345, inlinedAt: !13048)
!13048 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13042)
!13049 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13048)
!13050 = !DILocation(line: 975, column: 1, scope: !13007)
!13051 = distinct !DISubprogram(name: "resched", scope: !1896, file: !1896, line: 940, type: !13052, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!540, !113}
!13054 = !{!13055}
!13055 = !DILocalVariable(name: "key", arg: 1, scope: !13051, file: !1896, line: 940, type: !113)
!13056 = !DILocation(line: 0, scope: !13051)
!13057 = !DILocalVariable(name: "key", arg: 1, scope: !13058, file: !6640, line: 112, type: !32)
!13058 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6640, file: !6640, line: 112, type: !13059, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13061)
!13059 = !DISubroutineType(types: !13060)
!13060 = !{!540, !32}
!13061 = !{!13057}
!13062 = !DILocation(line: 0, scope: !13058, inlinedAt: !13063)
!13063 = distinct !DILocation(line: 946, column: 9, scope: !13051)
!13064 = !DILocation(line: 115, column: 13, scope: !13058, inlinedAt: !13063)
!13065 = !DILocation(line: 946, column: 32, scope: !13051)
!13066 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !13070)
!13067 = distinct !DISubprogram(name: "__get_IPSR", scope: !7290, file: !7290, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13068)
!13068 = !{!13069}
!13069 = !DILocalVariable(name: "result", scope: !13067, file: !7290, line: 1029, type: !113)
!13070 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !13072)
!13071 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!13072 = distinct !DILocation(line: 946, column: 36, scope: !13051)
!13073 = !{i64 1606187}
!13074 = !DILocation(line: 0, scope: !13067, inlinedAt: !13070)
!13075 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !13072)
!13076 = !DILocation(line: 946, column: 2, scope: !13051)
!13077 = distinct !DISubprogram(name: "need_swap", scope: !1896, file: !1896, line: 953, type: !8297, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13078)
!13078 = !{!13079}
!13079 = !DILocalVariable(name: "new_thread", scope: !13077, file: !1896, line: 959, type: !1789)
!13080 = !DILocation(line: 962, column: 31, scope: !13077)
!13081 = !DILocation(line: 0, scope: !13077)
!13082 = !DILocation(line: 963, column: 23, scope: !13077)
!13083 = !DILocation(line: 963, column: 20, scope: !13077)
!13084 = !DILocation(line: 963, column: 2, scope: !13077)
!13085 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10777, file: !10777, line: 181, type: !7300, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13086)
!13086 = !{!13087, !13088}
!13087 = !DILocalVariable(name: "key", arg: 1, scope: !13085, file: !10777, line: 181, type: !32)
!13088 = !DILocalVariable(name: "ret", scope: !13085, file: !10777, line: 183, type: !105)
!13089 = !DILocation(line: 0, scope: !13085)
!13090 = !DILocation(line: 185, column: 8, scope: !13085)
!13091 = !DILocation(line: 186, column: 2, scope: !13085)
!13092 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !1896, file: !1896, line: 665, type: !12255, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13093)
!13093 = !{!13094, !13095, !13097}
!13094 = !DILocalVariable(name: "thread", arg: 1, scope: !13092, file: !1896, line: 665, type: !1789)
!13095 = !DILocalVariable(name: "__i", scope: !13096, file: !1896, line: 671, type: !12289)
!13096 = distinct !DILexicalBlock(scope: !13092, file: !1896, line: 671, column: 2)
!13097 = !DILocalVariable(name: "__key", scope: !13096, file: !1896, line: 671, type: !12289)
!13098 = !DILocation(line: 0, scope: !13092)
!13099 = !DILocation(line: 669, column: 8, scope: !13092)
!13100 = !DILocation(line: 0, scope: !13096)
!13101 = !DILocation(line: 0, scope: !12297, inlinedAt: !13102)
!13102 = distinct !DILocation(line: 671, column: 2, scope: !13096)
!13103 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13104)
!13104 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13102)
!13105 = !DILocation(line: 0, scope: !12306, inlinedAt: !13104)
!13106 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13102)
!13107 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13102)
!13108 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13102)
!13109 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13102)
!13110 = !DILocation(line: 672, column: 7, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13112, file: !1896, line: 672, column: 7)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !1896, line: 671, column: 26)
!13113 = distinct !DILexicalBlock(scope: !13096, file: !1896, line: 671, column: 2)
!13114 = !DILocation(line: 672, column: 7, scope: !13112)
!13115 = !DILocation(line: 0, scope: !12489, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 673, column: 4, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13111, file: !1896, line: 672, column: 35)
!13118 = !DILocation(line: 266, column: 15, scope: !12489, inlinedAt: !13116)
!13119 = !DILocation(line: 266, column: 28, scope: !12489, inlinedAt: !13116)
!13120 = !DILocation(line: 0, scope: !12497, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 268, column: 3, scope: !12501, inlinedAt: !13116)
!13122 = !DILocation(line: 234, column: 2, scope: !12497, inlinedAt: !13121)
!13123 = !DILocation(line: 674, column: 3, scope: !13117)
!13124 = !DILocation(line: 675, column: 3, scope: !13112)
!13125 = !DILocation(line: 676, column: 26, scope: !13112)
!13126 = !DILocation(line: 676, column: 23, scope: !13112)
!13127 = !DILocation(line: 676, column: 3, scope: !13112)
!13128 = !DILocation(line: 0, scope: !12331, inlinedAt: !13129)
!13129 = distinct !DILocation(line: 671, column: 2, scope: !13113)
!13130 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13129)
!13131 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13129)
!13132 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13129)
!13133 = !DILocation(line: 0, scope: !12345, inlinedAt: !13134)
!13134 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13129)
!13135 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13134)
!13136 = !DILocation(line: 679, column: 16, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13092, file: !1896, line: 679, column: 6)
!13138 = !DILocation(line: 679, column: 13, scope: !13137)
!13139 = !DILocation(line: 679, column: 6, scope: !13092)
!13140 = !DILocation(line: 680, column: 3, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13137, file: !1896, line: 679, column: 26)
!13142 = !DILocation(line: 681, column: 2, scope: !13141)
!13143 = !DILocation(line: 684, column: 1, scope: !13092)
!13144 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11081, file: !11081, line: 52, type: !12273, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13145)
!13145 = !{!13146}
!13146 = !DILocalVariable(name: "thread", arg: 1, scope: !13144, file: !11081, line: 52, type: !1789)
!13147 = !DILocation(line: 0, scope: !13144)
!13148 = !DILocation(line: 54, column: 39, scope: !13144)
!13149 = !DILocation(line: 54, column: 9, scope: !13144)
!13150 = !DILocation(line: 54, column: 2, scope: !13144)
!13151 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10652, file: !10652, line: 141, type: !12255, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13152)
!13152 = !{!13153}
!13153 = !DILocalVariable(name: "thread", arg: 1, scope: !13151, file: !10652, line: 141, type: !1789)
!13154 = !DILocation(line: 0, scope: !13151)
!13155 = !DILocation(line: 143, column: 15, scope: !13151)
!13156 = !DILocation(line: 143, column: 28, scope: !13151)
!13157 = !DILocation(line: 146, column: 1, scope: !13151)
!13158 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10652, file: !10652, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!13159 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13160)
!13160 = distinct !DILocation(line: 75, column: 30, scope: !13158)
!13161 = !DILocation(line: 0, scope: !12306, inlinedAt: !13160)
!13162 = !DILocation(line: 75, column: 9, scope: !13158)
!13163 = !DILocation(line: 76, column: 1, scope: !13158)
!13164 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !1896, file: !1896, line: 977, type: !6724, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13165)
!13165 = !{!13166}
!13166 = !DILocalVariable(name: "key", arg: 1, scope: !13164, file: !1896, line: 977, type: !113)
!13167 = !DILocation(line: 0, scope: !13164)
!13168 = !DILocation(line: 979, column: 6, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13164, file: !1896, line: 979, column: 6)
!13170 = !DILocation(line: 979, column: 6, scope: !13164)
!13171 = !DILocation(line: 980, column: 3, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13169, file: !1896, line: 979, column: 20)
!13173 = !DILocation(line: 981, column: 2, scope: !13172)
!13174 = !DILocation(line: 0, scope: !12345, inlinedAt: !13175)
!13175 = distinct !DILocation(line: 982, column: 3, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13169, file: !1896, line: 981, column: 9)
!13177 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13175)
!13178 = !DILocation(line: 985, column: 1, scope: !13164)
!13179 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !1896, file: !1896, line: 695, type: !12255, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13180)
!13180 = !{!13181, !13182}
!13181 = !DILocalVariable(name: "thread", arg: 1, scope: !13179, file: !1896, line: 695, type: !1789)
!13182 = !DILocalVariable(name: "key", scope: !13179, file: !1896, line: 699, type: !12289)
!13183 = !DILocation(line: 0, scope: !13179)
!13184 = !DILocation(line: 0, scope: !12297, inlinedAt: !13185)
!13185 = distinct !DILocation(line: 699, column: 25, scope: !13179)
!13186 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13187)
!13187 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13185)
!13188 = !DILocation(line: 0, scope: !12306, inlinedAt: !13187)
!13189 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13185)
!13190 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13185)
!13191 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13185)
!13192 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13185)
!13193 = !DILocation(line: 702, column: 7, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13179, file: !1896, line: 702, column: 6)
!13195 = !DILocation(line: 702, column: 6, scope: !13179)
!13196 = !DILocation(line: 0, scope: !12331, inlinedAt: !13197)
!13197 = distinct !DILocation(line: 703, column: 3, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13194, file: !1896, line: 702, column: 38)
!13199 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13197)
!13200 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13197)
!13201 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13197)
!13202 = !DILocation(line: 0, scope: !12345, inlinedAt: !13203)
!13203 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13197)
!13204 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13203)
!13205 = !DILocation(line: 704, column: 3, scope: !13198)
!13206 = !DILocation(line: 707, column: 2, scope: !13179)
!13207 = !DILocation(line: 708, column: 2, scope: !13179)
!13208 = !DILocation(line: 710, column: 2, scope: !13179)
!13209 = !DILocation(line: 713, column: 1, scope: !13179)
!13210 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10652, file: !10652, line: 96, type: !12438, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13211)
!13211 = !{!13212}
!13212 = !DILocalVariable(name: "thread", arg: 1, scope: !13210, file: !10652, line: 96, type: !1789)
!13213 = !DILocation(line: 0, scope: !13210)
!13214 = !DILocation(line: 98, column: 23, scope: !13210)
!13215 = !DILocation(line: 98, column: 36, scope: !13210)
!13216 = !DILocation(line: 98, column: 57, scope: !13210)
!13217 = !DILocation(line: 98, column: 2, scope: !13210)
!13218 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10652, file: !10652, line: 148, type: !12255, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13219)
!13219 = !{!13220}
!13220 = !DILocalVariable(name: "thread", arg: 1, scope: !13218, file: !10652, line: 148, type: !1789)
!13221 = !DILocation(line: 0, scope: !13218)
!13222 = !DILocation(line: 150, column: 15, scope: !13218)
!13223 = !DILocation(line: 150, column: 28, scope: !13218)
!13224 = !DILocation(line: 153, column: 1, scope: !13218)
!13225 = distinct !DISubprogram(name: "z_pend_thread", scope: !1896, file: !1896, line: 770, type: !13226, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13232)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{null, !1789, !1820, !13228}
!13228 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !13229)
!13229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !13230)
!13230 = !{!13231}
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13229, file: !108, line: 66, baseType: !107, size: 64)
!13232 = !{!13233, !13234, !13235, !13236, !13238}
!13233 = !DILocalVariable(name: "thread", arg: 1, scope: !13225, file: !1896, line: 770, type: !1789)
!13234 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13225, file: !1896, line: 770, type: !1820)
!13235 = !DILocalVariable(name: "timeout", arg: 3, scope: !13225, file: !1896, line: 771, type: !13228)
!13236 = !DILocalVariable(name: "__i", scope: !13237, file: !1896, line: 774, type: !12289)
!13237 = distinct !DILexicalBlock(scope: !13225, file: !1896, line: 774, column: 2)
!13238 = !DILocalVariable(name: "__key", scope: !13237, file: !1896, line: 774, type: !12289)
!13239 = !DILocation(line: 0, scope: !13225)
!13240 = !DILocation(line: 773, column: 2, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !1896, line: 773, column: 2)
!13242 = distinct !DILexicalBlock(scope: !13225, file: !1896, line: 773, column: 2)
!13243 = !DILocation(line: 773, column: 2, scope: !13242)
!13244 = !DILocation(line: 773, column: 2, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13241, file: !1896, line: 773, column: 2)
!13246 = !DILocation(line: 0, scope: !13237)
!13247 = !DILocation(line: 0, scope: !12297, inlinedAt: !13248)
!13248 = distinct !DILocation(line: 774, column: 2, scope: !13237)
!13249 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13250)
!13250 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13248)
!13251 = !DILocation(line: 0, scope: !12306, inlinedAt: !13250)
!13252 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13248)
!13253 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13248)
!13254 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13248)
!13255 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13248)
!13256 = !DILocation(line: 775, column: 3, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13258, file: !1896, line: 774, column: 26)
!13258 = distinct !DILexicalBlock(scope: !13237, file: !1896, line: 774, column: 2)
!13259 = !DILocation(line: 0, scope: !12331, inlinedAt: !13260)
!13260 = distinct !DILocation(line: 774, column: 2, scope: !13258)
!13261 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13260)
!13262 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13260)
!13263 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13260)
!13264 = !DILocation(line: 0, scope: !12345, inlinedAt: !13265)
!13265 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13260)
!13266 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13265)
!13267 = !DILocation(line: 777, column: 1, scope: !13225)
!13268 = distinct !DISubprogram(name: "is_thread_dummy", scope: !1896, file: !1896, line: 79, type: !12438, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13269)
!13269 = !{!13270}
!13270 = !DILocalVariable(name: "thread", arg: 1, scope: !13268, file: !1896, line: 79, type: !1789)
!13271 = !DILocation(line: 0, scope: !13268)
!13272 = !DILocation(line: 81, column: 23, scope: !13268)
!13273 = !DILocation(line: 81, column: 36, scope: !13268)
!13274 = !DILocation(line: 81, column: 53, scope: !13268)
!13275 = !DILocation(line: 81, column: 2, scope: !13268)
!13276 = distinct !DISubprogram(name: "pend_locked", scope: !1896, file: !1896, line: 760, type: !13226, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13277)
!13277 = !{!13278, !13279, !13280}
!13278 = !DILocalVariable(name: "thread", arg: 1, scope: !13276, file: !1896, line: 760, type: !1789)
!13279 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13276, file: !1896, line: 760, type: !1820)
!13280 = !DILocalVariable(name: "timeout", arg: 3, scope: !13276, file: !1896, line: 761, type: !13228)
!13281 = !DILocation(line: 0, scope: !13276)
!13282 = !DILocation(line: 766, column: 2, scope: !13276)
!13283 = !DILocation(line: 767, column: 2, scope: !13276)
!13284 = !DILocation(line: 768, column: 1, scope: !13276)
!13285 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !1896, file: !1896, line: 740, type: !13286, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13288)
!13286 = !DISubroutineType(types: !13287)
!13287 = !{null, !1789, !1820}
!13288 = !{!13289, !13290}
!13289 = !DILocalVariable(name: "thread", arg: 1, scope: !13285, file: !1896, line: 740, type: !1789)
!13290 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13285, file: !1896, line: 740, type: !1820)
!13291 = !DILocation(line: 0, scope: !13285)
!13292 = !DILocation(line: 742, column: 2, scope: !13285)
!13293 = !DILocation(line: 743, column: 2, scope: !13285)
!13294 = !DILocation(line: 747, column: 13, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13285, file: !1896, line: 747, column: 6)
!13296 = !DILocation(line: 747, column: 6, scope: !13285)
!13297 = !DILocation(line: 748, column: 16, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13295, file: !1896, line: 747, column: 22)
!13299 = !DILocation(line: 748, column: 26, scope: !13298)
!13300 = !DILocation(line: 749, column: 28, scope: !13298)
!13301 = !DILocation(line: 0, scope: !12520, inlinedAt: !13302)
!13302 = distinct !DILocation(line: 749, column: 3, scope: !13298)
!13303 = !DILocation(line: 186, column: 2, scope: !12530, inlinedAt: !13302)
!13304 = !DILocation(line: 186, column: 2, scope: !12531, inlinedAt: !13302)
!13305 = !DILocation(line: 186, column: 2, scope: !12534, inlinedAt: !13302)
!13306 = !DILocation(line: 188, column: 2, scope: !12536, inlinedAt: !13302)
!13307 = !DILocation(line: 188, column: 2, scope: !12538, inlinedAt: !13302)
!13308 = !DILocation(line: 0, scope: !12536, inlinedAt: !13302)
!13309 = !DILocation(line: 189, column: 7, scope: !12541, inlinedAt: !13302)
!13310 = !DILocation(line: 189, column: 35, scope: !12541, inlinedAt: !13302)
!13311 = !DILocation(line: 189, column: 7, scope: !12542, inlinedAt: !13302)
!13312 = !DILocation(line: 191, column: 21, scope: !12546, inlinedAt: !13302)
!13313 = !DILocation(line: 190, column: 4, scope: !12546, inlinedAt: !13302)
!13314 = !DILocation(line: 192, column: 4, scope: !12546, inlinedAt: !13302)
!13315 = distinct !{!13315, !13306, !13316}
!13316 = !DILocation(line: 194, column: 2, scope: !12536, inlinedAt: !13302)
!13317 = !DILocation(line: 196, column: 37, scope: !12520, inlinedAt: !13302)
!13318 = !DILocation(line: 196, column: 2, scope: !12520, inlinedAt: !13302)
!13319 = !DILocation(line: 197, column: 1, scope: !12520, inlinedAt: !13302)
!13320 = !DILocation(line: 751, column: 1, scope: !13285)
!13321 = distinct !DISubprogram(name: "add_thread_timeout", scope: !1896, file: !1896, line: 753, type: !13322, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13324)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{null, !1789, !13228}
!13324 = !{!13325, !13326}
!13325 = !DILocalVariable(name: "thread", arg: 1, scope: !13321, file: !1896, line: 753, type: !1789)
!13326 = !DILocalVariable(name: "timeout", arg: 2, scope: !13321, file: !1896, line: 753, type: !13228)
!13327 = !DILocation(line: 0, scope: !13321)
!13328 = !DILocation(line: 755, column: 7, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13321, file: !1896, line: 755, column: 6)
!13330 = !DILocation(line: 755, column: 6, scope: !13321)
!13331 = !DILocation(line: 756, column: 3, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13329, file: !1896, line: 755, column: 41)
!13333 = !DILocation(line: 757, column: 2, scope: !13332)
!13334 = !DILocation(line: 758, column: 1, scope: !13321)
!13335 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11081, file: !11081, line: 47, type: !13322, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13336)
!13336 = !{!13337, !13338}
!13337 = !DILocalVariable(name: "thread", arg: 1, scope: !13335, file: !11081, line: 47, type: !1789)
!13338 = !DILocalVariable(name: "ticks", arg: 2, scope: !13335, file: !11081, line: 47, type: !13228)
!13339 = !DILocation(line: 0, scope: !13335)
!13340 = !DILocation(line: 49, column: 30, scope: !13335)
!13341 = !DILocation(line: 49, column: 2, scope: !13335)
!13342 = !DILocation(line: 50, column: 1, scope: !13335)
!13343 = distinct !DISubprogram(name: "z_thread_timeout", scope: !1896, file: !1896, line: 795, type: !1846, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13344)
!13344 = !{!13345, !13346, !13347, !13349, !13350}
!13345 = !DILocalVariable(name: "timeout", arg: 1, scope: !13343, file: !1896, line: 795, type: !1848)
!13346 = !DILocalVariable(name: "thread", scope: !13343, file: !1896, line: 797, type: !1789)
!13347 = !DILocalVariable(name: "__i", scope: !13348, file: !1896, line: 800, type: !12289)
!13348 = distinct !DILexicalBlock(scope: !13343, file: !1896, line: 800, column: 2)
!13349 = !DILocalVariable(name: "__key", scope: !13348, file: !1896, line: 800, type: !12289)
!13350 = !DILocalVariable(name: "killed", scope: !13351, file: !1896, line: 801, type: !540)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !1896, line: 800, column: 26)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !1896, line: 800, column: 2)
!13353 = !DILocation(line: 0, scope: !13343)
!13354 = !DILocation(line: 797, column: 28, scope: !13343)
!13355 = !DILocation(line: 0, scope: !13348)
!13356 = !DILocation(line: 0, scope: !12297, inlinedAt: !13357)
!13357 = distinct !DILocation(line: 800, column: 2, scope: !13348)
!13358 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13359)
!13359 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13357)
!13360 = !DILocation(line: 0, scope: !12306, inlinedAt: !13359)
!13361 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13357)
!13362 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13357)
!13363 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13357)
!13364 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13357)
!13365 = !DILocation(line: 801, column: 27, scope: !13351)
!13366 = !DILocation(line: 801, column: 32, scope: !13351)
!13367 = !DILocation(line: 801, column: 61, scope: !13351)
!13368 = !DILocation(line: 0, scope: !13351)
!13369 = !DILocation(line: 804, column: 7, scope: !13351)
!13370 = !DILocation(line: 805, column: 21, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !1896, line: 805, column: 8)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !1896, line: 804, column: 16)
!13373 = distinct !DILexicalBlock(scope: !13351, file: !1896, line: 804, column: 7)
!13374 = !DILocation(line: 805, column: 31, scope: !13371)
!13375 = !DILocation(line: 805, column: 8, scope: !13372)
!13376 = !DILocation(line: 806, column: 5, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13371, file: !1896, line: 805, column: 40)
!13378 = !DILocation(line: 807, column: 4, scope: !13377)
!13379 = !DILocation(line: 808, column: 4, scope: !13372)
!13380 = !DILocation(line: 809, column: 4, scope: !13372)
!13381 = !DILocation(line: 810, column: 4, scope: !13372)
!13382 = !DILocation(line: 811, column: 3, scope: !13372)
!13383 = !DILocation(line: 0, scope: !12331, inlinedAt: !13384)
!13384 = distinct !DILocation(line: 800, column: 2, scope: !13352)
!13385 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13384)
!13386 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13384)
!13387 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13384)
!13388 = !DILocation(line: 0, scope: !12345, inlinedAt: !13389)
!13389 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13384)
!13390 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13389)
!13391 = !DILocation(line: 813, column: 1, scope: !13343)
!13392 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !1896, file: !1896, line: 779, type: !12255, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13393)
!13393 = !{!13394}
!13394 = !DILocalVariable(name: "thread", arg: 1, scope: !13392, file: !1896, line: 779, type: !1789)
!13395 = !DILocation(line: 0, scope: !13392)
!13396 = !DILocation(line: 781, column: 21, scope: !13392)
!13397 = !DILocation(line: 781, column: 2, scope: !13392)
!13398 = !DILocation(line: 782, column: 2, scope: !13392)
!13399 = !DILocation(line: 783, column: 15, scope: !13392)
!13400 = !DILocation(line: 783, column: 25, scope: !13392)
!13401 = !DILocation(line: 784, column: 1, scope: !13392)
!13402 = distinct !DISubprogram(name: "pended_on_thread", scope: !1896, file: !1896, line: 724, type: !13403, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13405)
!13403 = !DISubroutineType(types: !13404)
!13404 = !{!1820, !1789}
!13405 = !{!13406}
!13406 = !DILocalVariable(name: "thread", arg: 1, scope: !13402, file: !1896, line: 724, type: !1789)
!13407 = !DILocation(line: 0, scope: !13402)
!13408 = !DILocation(line: 726, column: 2, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !1896, line: 726, column: 2)
!13410 = distinct !DILexicalBlock(scope: !13402, file: !1896, line: 726, column: 2)
!13411 = !DILocation(line: 726, column: 2, scope: !13410)
!13412 = !DILocation(line: 726, column: 2, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13409, file: !1896, line: 726, column: 2)
!13414 = !DILocation(line: 728, column: 2, scope: !13402)
!13415 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10652, file: !10652, line: 165, type: !12255, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13416)
!13416 = !{!13417}
!13417 = !DILocalVariable(name: "thread", arg: 1, scope: !13415, file: !10652, line: 165, type: !1789)
!13418 = !DILocation(line: 0, scope: !13415)
!13419 = !DILocation(line: 167, column: 15, scope: !13415)
!13420 = !DILocation(line: 167, column: 28, scope: !13415)
!13421 = !DILocation(line: 168, column: 1, scope: !13415)
!13422 = distinct !DISubprogram(name: "unready_thread", scope: !1896, file: !1896, line: 731, type: !12255, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13423)
!13423 = !{!13424}
!13424 = !DILocalVariable(name: "thread", arg: 1, scope: !13422, file: !1896, line: 731, type: !1789)
!13425 = !DILocation(line: 0, scope: !13422)
!13426 = !DILocation(line: 733, column: 6, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13422, file: !1896, line: 733, column: 6)
!13428 = !DILocation(line: 733, column: 6, scope: !13422)
!13429 = !DILocation(line: 0, scope: !12489, inlinedAt: !13430)
!13430 = distinct !DILocation(line: 734, column: 3, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13427, file: !1896, line: 733, column: 34)
!13432 = !DILocation(line: 266, column: 15, scope: !12489, inlinedAt: !13430)
!13433 = !DILocation(line: 266, column: 28, scope: !12489, inlinedAt: !13430)
!13434 = !DILocation(line: 0, scope: !12497, inlinedAt: !13435)
!13435 = distinct !DILocation(line: 268, column: 3, scope: !12501, inlinedAt: !13430)
!13436 = !DILocation(line: 234, column: 2, scope: !12497, inlinedAt: !13435)
!13437 = !DILocation(line: 735, column: 2, scope: !13431)
!13438 = !DILocation(line: 736, column: 25, scope: !13422)
!13439 = !DILocation(line: 736, column: 22, scope: !13422)
!13440 = !DILocation(line: 736, column: 2, scope: !13422)
!13441 = !DILocation(line: 737, column: 1, scope: !13422)
!13442 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10652, file: !10652, line: 160, type: !12255, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13443)
!13443 = !{!13444}
!13444 = !DILocalVariable(name: "thread", arg: 1, scope: !13442, file: !10652, line: 160, type: !1789)
!13445 = !DILocation(line: 0, scope: !13442)
!13446 = !DILocation(line: 162, column: 15, scope: !13442)
!13447 = !DILocation(line: 162, column: 28, scope: !13442)
!13448 = !DILocation(line: 163, column: 1, scope: !13442)
!13449 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !1896, file: !1896, line: 786, type: !12255, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13450)
!13450 = !{!13451, !13452, !13454}
!13451 = !DILocalVariable(name: "thread", arg: 1, scope: !13449, file: !1896, line: 786, type: !1789)
!13452 = !DILocalVariable(name: "__i", scope: !13453, file: !1896, line: 788, type: !12289)
!13453 = distinct !DILexicalBlock(scope: !13449, file: !1896, line: 788, column: 2)
!13454 = !DILocalVariable(name: "__key", scope: !13453, file: !1896, line: 788, type: !12289)
!13455 = !DILocation(line: 0, scope: !13449)
!13456 = !DILocation(line: 0, scope: !13453)
!13457 = !DILocation(line: 0, scope: !12297, inlinedAt: !13458)
!13458 = distinct !DILocation(line: 788, column: 2, scope: !13453)
!13459 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13460)
!13460 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13458)
!13461 = !DILocation(line: 0, scope: !12306, inlinedAt: !13460)
!13462 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13458)
!13463 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13458)
!13464 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13458)
!13465 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13458)
!13466 = !DILocation(line: 789, column: 3, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !1896, line: 788, column: 26)
!13468 = distinct !DILexicalBlock(scope: !13453, file: !1896, line: 788, column: 2)
!13469 = !DILocation(line: 0, scope: !12331, inlinedAt: !13470)
!13470 = distinct !DILocation(line: 788, column: 2, scope: !13468)
!13471 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13470)
!13472 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13470)
!13473 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13470)
!13474 = !DILocation(line: 0, scope: !12345, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13470)
!13476 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13475)
!13477 = !DILocation(line: 791, column: 1, scope: !13449)
!13478 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !1896, file: !1896, line: 816, type: !13479, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13481)
!13479 = !DISubroutineType(types: !13480)
!13480 = !{!105, !113, !1820, !13228}
!13481 = !{!13482, !13483, !13484, !13485, !13486, !13488}
!13482 = !DILocalVariable(name: "key", arg: 1, scope: !13478, file: !1896, line: 816, type: !113)
!13483 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13478, file: !1896, line: 816, type: !1820)
!13484 = !DILocalVariable(name: "timeout", arg: 3, scope: !13478, file: !1896, line: 816, type: !13228)
!13485 = !DILocalVariable(name: "ret", scope: !13478, file: !1896, line: 828, type: !105)
!13486 = !DILocalVariable(name: "__i", scope: !13487, file: !1896, line: 829, type: !12289)
!13487 = distinct !DILexicalBlock(scope: !13478, file: !1896, line: 829, column: 2)
!13488 = !DILocalVariable(name: "__key", scope: !13487, file: !1896, line: 829, type: !12289)
!13489 = !DILocation(line: 0, scope: !13478)
!13490 = !DILocation(line: 823, column: 14, scope: !13478)
!13491 = !DILocation(line: 823, column: 2, scope: !13478)
!13492 = !DILocation(line: 826, column: 20, scope: !13478)
!13493 = !DILocation(line: 826, column: 18, scope: !13478)
!13494 = !DILocation(line: 828, column: 12, scope: !13478)
!13495 = !DILocation(line: 0, scope: !13487)
!13496 = !DILocation(line: 0, scope: !12297, inlinedAt: !13497)
!13497 = distinct !DILocation(line: 829, column: 2, scope: !13487)
!13498 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13499)
!13499 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13497)
!13500 = !DILocation(line: 0, scope: !12306, inlinedAt: !13499)
!13501 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13497)
!13502 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13497)
!13503 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13497)
!13504 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13497)
!13505 = !DILocation(line: 830, column: 7, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13507, file: !1896, line: 830, column: 7)
!13507 = distinct !DILexicalBlock(scope: !13508, file: !1896, line: 829, column: 26)
!13508 = distinct !DILexicalBlock(scope: !13487, file: !1896, line: 829, column: 2)
!13509 = !DILocation(line: 830, column: 26, scope: !13506)
!13510 = !DILocation(line: 830, column: 23, scope: !13506)
!13511 = !DILocation(line: 830, column: 7, scope: !13507)
!13512 = !DILocation(line: 831, column: 20, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13506, file: !1896, line: 830, column: 36)
!13514 = !DILocation(line: 832, column: 3, scope: !13513)
!13515 = !DILocation(line: 0, scope: !12331, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 829, column: 2, scope: !13508)
!13517 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13516)
!13518 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13516)
!13519 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13516)
!13520 = !DILocation(line: 0, scope: !12345, inlinedAt: !13521)
!13521 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13516)
!13522 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13521)
!13523 = !DILocation(line: 834, column: 2, scope: !13478)
!13524 = distinct !DISubprogram(name: "z_pend_curr", scope: !1896, file: !1896, line: 840, type: !13525, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13527)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{!105, !12300, !12289, !1820, !13228}
!13527 = !{!13528, !13529, !13530, !13531}
!13528 = !DILocalVariable(name: "lock", arg: 1, scope: !13524, file: !1896, line: 840, type: !12300)
!13529 = !DILocalVariable(name: "key", arg: 2, scope: !13524, file: !1896, line: 840, type: !12289)
!13530 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13524, file: !1896, line: 841, type: !1820)
!13531 = !DILocalVariable(name: "timeout", arg: 4, scope: !13524, file: !1896, line: 841, type: !13228)
!13532 = !DILocation(line: 0, scope: !13524)
!13533 = !DILocation(line: 844, column: 20, scope: !13524)
!13534 = !DILocation(line: 844, column: 18, scope: !13524)
!13535 = !DILocation(line: 846, column: 2, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13537, file: !1896, line: 846, column: 2)
!13537 = distinct !DILexicalBlock(scope: !13524, file: !1896, line: 846, column: 2)
!13538 = !DILocation(line: 846, column: 2, scope: !13537)
!13539 = !DILocation(line: 846, column: 2, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13536, file: !1896, line: 846, column: 2)
!13541 = !DILocation(line: 0, scope: !12297, inlinedAt: !13542)
!13542 = distinct !DILocation(line: 856, column: 9, scope: !13524)
!13543 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13544)
!13544 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13542)
!13545 = !DILocation(line: 0, scope: !12306, inlinedAt: !13544)
!13546 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13542)
!13547 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13542)
!13548 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13542)
!13549 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13542)
!13550 = !DILocation(line: 857, column: 14, scope: !13524)
!13551 = !DILocation(line: 857, column: 2, scope: !13524)
!13552 = !DILocation(line: 0, scope: !13027, inlinedAt: !13553)
!13553 = distinct !DILocation(line: 858, column: 2, scope: !13524)
!13554 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !13553)
!13555 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !13553)
!13556 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !13553)
!13557 = !DILocation(line: 0, scope: !13018, inlinedAt: !13558)
!13558 = distinct !DILocation(line: 859, column: 9, scope: !13524)
!13559 = !DILocation(line: 0, scope: !13027, inlinedAt: !13560)
!13560 = distinct !DILocation(line: 195, column: 2, scope: !13018, inlinedAt: !13558)
!13561 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !13560)
!13562 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !13560)
!13563 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !13560)
!13564 = !DILocation(line: 196, column: 9, scope: !13018, inlinedAt: !13558)
!13565 = !DILocation(line: 859, column: 2, scope: !13524)
!13566 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !1896, file: !1896, line: 862, type: !13567, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!1789, !1820}
!13569 = !{!13570, !13571, !13572, !13574}
!13570 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13566, file: !1896, line: 862, type: !1820)
!13571 = !DILocalVariable(name: "thread", scope: !13566, file: !1896, line: 864, type: !1789)
!13572 = !DILocalVariable(name: "__i", scope: !13573, file: !1896, line: 866, type: !12289)
!13573 = distinct !DILexicalBlock(scope: !13566, file: !1896, line: 866, column: 2)
!13574 = !DILocalVariable(name: "__key", scope: !13573, file: !1896, line: 866, type: !12289)
!13575 = !DILocation(line: 0, scope: !13566)
!13576 = !DILocation(line: 0, scope: !13573)
!13577 = !DILocation(line: 0, scope: !12297, inlinedAt: !13578)
!13578 = distinct !DILocation(line: 866, column: 2, scope: !13573)
!13579 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13580)
!13580 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13578)
!13581 = !DILocation(line: 0, scope: !12306, inlinedAt: !13580)
!13582 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13578)
!13583 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13578)
!13584 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13578)
!13585 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13578)
!13586 = !DILocation(line: 867, column: 12, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !1896, line: 866, column: 26)
!13588 = distinct !DILexicalBlock(scope: !13573, file: !1896, line: 866, column: 2)
!13589 = !DILocation(line: 869, column: 14, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13587, file: !1896, line: 869, column: 7)
!13591 = !DILocation(line: 869, column: 7, scope: !13587)
!13592 = !DILocation(line: 870, column: 4, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13590, file: !1896, line: 869, column: 23)
!13594 = !DILocation(line: 871, column: 3, scope: !13593)
!13595 = !DILocation(line: 0, scope: !12331, inlinedAt: !13596)
!13596 = distinct !DILocation(line: 866, column: 2, scope: !13588)
!13597 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13596)
!13598 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13596)
!13599 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13596)
!13600 = !DILocation(line: 0, scope: !12345, inlinedAt: !13601)
!13601 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13596)
!13602 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13601)
!13603 = !DILocation(line: 874, column: 2, scope: !13566)
!13604 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !1896, file: !1896, line: 877, type: !13567, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13605)
!13605 = !{!13606, !13607, !13608, !13610}
!13606 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13604, file: !1896, line: 877, type: !1820)
!13607 = !DILocalVariable(name: "thread", scope: !13604, file: !1896, line: 879, type: !1789)
!13608 = !DILocalVariable(name: "__i", scope: !13609, file: !1896, line: 881, type: !12289)
!13609 = distinct !DILexicalBlock(scope: !13604, file: !1896, line: 881, column: 2)
!13610 = !DILocalVariable(name: "__key", scope: !13609, file: !1896, line: 881, type: !12289)
!13611 = !DILocation(line: 0, scope: !13604)
!13612 = !DILocation(line: 0, scope: !13609)
!13613 = !DILocation(line: 0, scope: !12297, inlinedAt: !13614)
!13614 = distinct !DILocation(line: 881, column: 2, scope: !13609)
!13615 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13616)
!13616 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13614)
!13617 = !DILocation(line: 0, scope: !12306, inlinedAt: !13616)
!13618 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13614)
!13619 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13614)
!13620 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13614)
!13621 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13614)
!13622 = !DILocation(line: 882, column: 12, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !1896, line: 881, column: 26)
!13624 = distinct !DILexicalBlock(scope: !13609, file: !1896, line: 881, column: 2)
!13625 = !DILocation(line: 884, column: 14, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13623, file: !1896, line: 884, column: 7)
!13627 = !DILocation(line: 884, column: 7, scope: !13623)
!13628 = !DILocation(line: 885, column: 4, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13626, file: !1896, line: 884, column: 23)
!13630 = !DILocation(line: 886, column: 10, scope: !13629)
!13631 = !DILocation(line: 887, column: 3, scope: !13629)
!13632 = !DILocation(line: 0, scope: !12331, inlinedAt: !13633)
!13633 = distinct !DILocation(line: 881, column: 2, scope: !13624)
!13634 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13633)
!13635 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13633)
!13636 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13633)
!13637 = !DILocation(line: 0, scope: !12345, inlinedAt: !13638)
!13638 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13633)
!13639 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13638)
!13640 = !DILocation(line: 890, column: 2, scope: !13604)
!13641 = distinct !DISubprogram(name: "z_unpend_thread", scope: !1896, file: !1896, line: 893, type: !12255, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13642)
!13642 = !{!13643}
!13643 = !DILocalVariable(name: "thread", arg: 1, scope: !13641, file: !1896, line: 893, type: !1789)
!13644 = !DILocation(line: 0, scope: !13641)
!13645 = !DILocation(line: 0, scope: !13449, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 895, column: 2, scope: !13641)
!13647 = !DILocation(line: 0, scope: !13453, inlinedAt: !13646)
!13648 = !DILocation(line: 0, scope: !12297, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 788, column: 2, scope: !13453, inlinedAt: !13646)
!13650 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13651)
!13651 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13649)
!13652 = !DILocation(line: 0, scope: !12306, inlinedAt: !13651)
!13653 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13649)
!13654 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13649)
!13655 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13649)
!13656 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13649)
!13657 = !DILocation(line: 789, column: 3, scope: !13467, inlinedAt: !13646)
!13658 = !DILocation(line: 0, scope: !12331, inlinedAt: !13659)
!13659 = distinct !DILocation(line: 788, column: 2, scope: !13468, inlinedAt: !13646)
!13660 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13659)
!13661 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13659)
!13662 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13659)
!13663 = !DILocation(line: 0, scope: !12345, inlinedAt: !13664)
!13664 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13659)
!13665 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13664)
!13666 = !DILocation(line: 896, column: 8, scope: !13641)
!13667 = !DILocation(line: 897, column: 1, scope: !13641)
!13668 = distinct !DISubprogram(name: "z_set_prio", scope: !1896, file: !1896, line: 902, type: !12673, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13669)
!13669 = !{!13670, !13671, !13672, !13673, !13675}
!13670 = !DILocalVariable(name: "thread", arg: 1, scope: !13668, file: !1896, line: 902, type: !1789)
!13671 = !DILocalVariable(name: "prio", arg: 2, scope: !13668, file: !1896, line: 902, type: !105)
!13672 = !DILocalVariable(name: "need_sched", scope: !13668, file: !1896, line: 904, type: !540)
!13673 = !DILocalVariable(name: "__i", scope: !13674, file: !1896, line: 906, type: !12289)
!13674 = distinct !DILexicalBlock(scope: !13668, file: !1896, line: 906, column: 2)
!13675 = !DILocalVariable(name: "__key", scope: !13674, file: !1896, line: 906, type: !12289)
!13676 = !DILocation(line: 0, scope: !13668)
!13677 = !DILocation(line: 0, scope: !13674)
!13678 = !DILocation(line: 0, scope: !12297, inlinedAt: !13679)
!13679 = distinct !DILocation(line: 906, column: 2, scope: !13674)
!13680 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13681)
!13681 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13679)
!13682 = !DILocation(line: 0, scope: !12306, inlinedAt: !13681)
!13683 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13679)
!13684 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13679)
!13685 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13679)
!13686 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13679)
!13687 = !DILocation(line: 907, column: 16, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13689, file: !1896, line: 906, column: 26)
!13689 = distinct !DILexicalBlock(scope: !13674, file: !1896, line: 906, column: 2)
!13690 = !DILocation(line: 909, column: 7, scope: !13688)
!13691 = !DILocation(line: 0, scope: !12489, inlinedAt: !13692)
!13692 = distinct !DILocation(line: 912, column: 5, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13694, file: !1896, line: 911, column: 63)
!13694 = distinct !DILexicalBlock(scope: !13695, file: !1896, line: 911, column: 8)
!13695 = distinct !DILexicalBlock(scope: !13696, file: !1896, line: 909, column: 19)
!13696 = distinct !DILexicalBlock(scope: !13688, file: !1896, line: 909, column: 7)
!13697 = !DILocation(line: 266, column: 28, scope: !12489, inlinedAt: !13692)
!13698 = !DILocation(line: 0, scope: !12497, inlinedAt: !13699)
!13699 = distinct !DILocation(line: 268, column: 3, scope: !12501, inlinedAt: !13692)
!13700 = !DILocation(line: 234, column: 2, scope: !12497, inlinedAt: !13699)
!13701 = !DILocation(line: 913, column: 23, scope: !13693)
!13702 = !DILocation(line: 0, scope: !12506, inlinedAt: !13703)
!13703 = distinct !DILocation(line: 914, column: 5, scope: !13693)
!13704 = !DILocation(line: 252, column: 28, scope: !12506, inlinedAt: !13703)
!13705 = !DILocation(line: 0, scope: !12513, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 254, column: 3, scope: !12517, inlinedAt: !13703)
!13707 = !DILocation(line: 0, scope: !12520, inlinedAt: !13708)
!13708 = distinct !DILocation(line: 229, column: 2, scope: !12513, inlinedAt: !13706)
!13709 = !DILocation(line: 186, column: 2, scope: !12530, inlinedAt: !13708)
!13710 = !DILocation(line: 186, column: 2, scope: !12531, inlinedAt: !13708)
!13711 = !DILocation(line: 186, column: 2, scope: !12534, inlinedAt: !13708)
!13712 = !DILocation(line: 188, column: 2, scope: !12536, inlinedAt: !13708)
!13713 = !DILocation(line: 188, column: 2, scope: !12538, inlinedAt: !13708)
!13714 = !DILocation(line: 0, scope: !12536, inlinedAt: !13708)
!13715 = !DILocation(line: 189, column: 7, scope: !12541, inlinedAt: !13708)
!13716 = !DILocation(line: 189, column: 35, scope: !12541, inlinedAt: !13708)
!13717 = !DILocation(line: 189, column: 7, scope: !12542, inlinedAt: !13708)
!13718 = !DILocation(line: 190, column: 4, scope: !12546, inlinedAt: !13708)
!13719 = !DILocation(line: 192, column: 4, scope: !12546, inlinedAt: !13708)
!13720 = distinct !{!13720, !13712, !13721}
!13721 = !DILocation(line: 194, column: 2, scope: !12536, inlinedAt: !13708)
!13722 = !DILocation(line: 196, column: 2, scope: !12520, inlinedAt: !13708)
!13723 = !DILocation(line: 197, column: 1, scope: !12520, inlinedAt: !13708)
!13724 = !DILocation(line: 918, column: 4, scope: !13695)
!13725 = !DILocation(line: 919, column: 3, scope: !13695)
!13726 = !DILocation(line: 920, column: 22, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13696, file: !1896, line: 919, column: 10)
!13728 = !DILocation(line: 0, scope: !12331, inlinedAt: !13729)
!13729 = distinct !DILocation(line: 906, column: 2, scope: !13689)
!13730 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13729)
!13731 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13729)
!13732 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13729)
!13733 = !DILocation(line: 0, scope: !12345, inlinedAt: !13734)
!13734 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13729)
!13735 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13734)
!13736 = !DILocation(line: 926, column: 2, scope: !13668)
!13737 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !1896, file: !1896, line: 929, type: !13738, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13740)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{null, !1789, !105}
!13740 = !{!13741, !13742, !13743}
!13741 = !DILocalVariable(name: "thread", arg: 1, scope: !13737, file: !1896, line: 929, type: !1789)
!13742 = !DILocalVariable(name: "prio", arg: 2, scope: !13737, file: !1896, line: 929, type: !105)
!13743 = !DILocalVariable(name: "need_sched", scope: !13737, file: !1896, line: 931, type: !540)
!13744 = !DILocation(line: 0, scope: !13737)
!13745 = !DILocation(line: 931, column: 20, scope: !13737)
!13746 = !DILocation(line: 935, column: 17, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13737, file: !1896, line: 935, column: 6)
!13748 = !DILocation(line: 935, column: 20, scope: !13747)
!13749 = !DILocation(line: 935, column: 35, scope: !13747)
!13750 = !DILocation(line: 935, column: 48, scope: !13747)
!13751 = !DILocation(line: 935, column: 6, scope: !13737)
!13752 = !DILocation(line: 936, column: 3, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13747, file: !1896, line: 935, column: 55)
!13754 = !DILocation(line: 937, column: 2, scope: !13753)
!13755 = !DILocation(line: 938, column: 1, scope: !13737)
!13756 = distinct !DISubprogram(name: "k_sched_lock", scope: !1896, file: !1896, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13757)
!13757 = !{!13758, !13760}
!13758 = !DILocalVariable(name: "__i", scope: !13759, file: !1896, line: 989, type: !12289)
!13759 = distinct !DILexicalBlock(scope: !13756, file: !1896, line: 989, column: 2)
!13760 = !DILocalVariable(name: "__key", scope: !13759, file: !1896, line: 989, type: !12289)
!13761 = !DILocation(line: 0, scope: !13759)
!13762 = !DILocation(line: 0, scope: !12297, inlinedAt: !13763)
!13763 = distinct !DILocation(line: 989, column: 2, scope: !13759)
!13764 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13765)
!13765 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13763)
!13766 = !DILocation(line: 0, scope: !12306, inlinedAt: !13765)
!13767 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13763)
!13768 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13763)
!13769 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13763)
!13770 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13763)
!13771 = !DILocation(line: 992, column: 3, scope: !13772)
!13772 = distinct !DILexicalBlock(scope: !13773, file: !1896, line: 989, column: 26)
!13773 = distinct !DILexicalBlock(scope: !13759, file: !1896, line: 989, column: 2)
!13774 = !DILocation(line: 0, scope: !12331, inlinedAt: !13775)
!13775 = distinct !DILocation(line: 989, column: 2, scope: !13773)
!13776 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13775)
!13777 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13775)
!13778 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13775)
!13779 = !DILocation(line: 0, scope: !12345, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13775)
!13781 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13780)
!13782 = !DILocation(line: 994, column: 1, scope: !13756)
!13783 = distinct !DISubprogram(name: "z_sched_lock", scope: !10652, file: !10652, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!13784 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !13785)
!13785 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !13786)
!13786 = distinct !DILocation(line: 253, column: 2, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13788, file: !10652, line: 253, column: 2)
!13788 = distinct !DILexicalBlock(scope: !13783, file: !10652, line: 253, column: 2)
!13789 = !DILocation(line: 0, scope: !13067, inlinedAt: !13785)
!13790 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !13786)
!13791 = !DILocation(line: 253, column: 2, scope: !13788)
!13792 = !DILocation(line: 253, column: 2, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13787, file: !10652, line: 253, column: 2)
!13794 = !DILocation(line: 254, column: 2, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13796, file: !10652, line: 254, column: 2)
!13796 = distinct !DILexicalBlock(scope: !13783, file: !10652, line: 254, column: 2)
!13797 = !DILocation(line: 254, column: 2, scope: !13796)
!13798 = !DILocation(line: 254, column: 2, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13795, file: !10652, line: 254, column: 2)
!13800 = !DILocation(line: 256, column: 2, scope: !13783)
!13801 = !DILocation(line: 258, column: 2, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13783, file: !10652, line: 258, column: 2)
!13803 = !{i64 2151224283}
!13804 = !DILocation(line: 259, column: 1, scope: !13783)
!13805 = distinct !DISubprogram(name: "k_sched_unlock", scope: !1896, file: !1896, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13806)
!13806 = !{!13807, !13809}
!13807 = !DILocalVariable(name: "__i", scope: !13808, file: !1896, line: 998, type: !12289)
!13808 = distinct !DILexicalBlock(scope: !13805, file: !1896, line: 998, column: 2)
!13809 = !DILocalVariable(name: "__key", scope: !13808, file: !1896, line: 998, type: !12289)
!13810 = !DILocation(line: 0, scope: !13808)
!13811 = !DILocation(line: 0, scope: !12297, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 998, column: 2, scope: !13808)
!13813 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !13814)
!13814 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !13812)
!13815 = !DILocation(line: 0, scope: !12306, inlinedAt: !13814)
!13816 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !13812)
!13817 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !13812)
!13818 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !13812)
!13819 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !13812)
!13820 = !DILocation(line: 999, column: 3, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !1896, line: 999, column: 3)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !1896, line: 999, column: 3)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !1896, line: 998, column: 26)
!13824 = distinct !DILexicalBlock(scope: !13808, file: !1896, line: 998, column: 2)
!13825 = !DILocation(line: 999, column: 3, scope: !13822)
!13826 = !DILocation(line: 999, column: 3, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13821, file: !1896, line: 999, column: 3)
!13828 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !13829)
!13829 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !13830)
!13830 = distinct !DILocation(line: 1000, column: 3, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13832, file: !1896, line: 1000, column: 3)
!13832 = distinct !DILexicalBlock(scope: !13823, file: !1896, line: 1000, column: 3)
!13833 = !DILocation(line: 0, scope: !13067, inlinedAt: !13829)
!13834 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !13830)
!13835 = !DILocation(line: 1000, column: 3, scope: !13832)
!13836 = !DILocation(line: 1000, column: 3, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13831, file: !1896, line: 1000, column: 3)
!13838 = !DILocation(line: 1002, column: 5, scope: !13823)
!13839 = !DILocation(line: 1002, column: 20, scope: !13823)
!13840 = !DILocation(line: 1002, column: 3, scope: !13823)
!13841 = !DILocation(line: 1003, column: 3, scope: !13823)
!13842 = !DILocation(line: 0, scope: !12331, inlinedAt: !13843)
!13843 = distinct !DILocation(line: 998, column: 2, scope: !13824)
!13844 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !13843)
!13845 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !13843)
!13846 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !13843)
!13847 = !DILocation(line: 0, scope: !12345, inlinedAt: !13848)
!13848 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !13843)
!13849 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !13848)
!13850 = !DILocation(line: 1011, column: 2, scope: !13805)
!13851 = !DILocation(line: 1012, column: 1, scope: !13805)
!13852 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !1896, file: !1896, line: 1014, type: !12646, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!13853 = !DILocation(line: 1028, column: 25, scope: !13852)
!13854 = !DILocation(line: 1028, column: 2, scope: !13852)
!13855 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !1896, file: !1896, line: 1155, type: !13856, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13858)
!13856 = !DISubroutineType(types: !13857)
!13857 = !{!540, !1818, !1818}
!13858 = !{!13859, !13860, !13861, !13862, !13863}
!13859 = !DILocalVariable(name: "a", arg: 1, scope: !13855, file: !1896, line: 1155, type: !1818)
!13860 = !DILocalVariable(name: "b", arg: 2, scope: !13855, file: !1896, line: 1155, type: !1818)
!13861 = !DILocalVariable(name: "thread_a", scope: !13855, file: !1896, line: 1157, type: !1789)
!13862 = !DILocalVariable(name: "thread_b", scope: !13855, file: !1896, line: 1157, type: !1789)
!13863 = !DILocalVariable(name: "cmp", scope: !13855, file: !1896, line: 1158, type: !116)
!13864 = !DILocation(line: 0, scope: !13855)
!13865 = !DILocation(line: 1160, column: 13, scope: !13855)
!13866 = !DILocation(line: 1161, column: 13, scope: !13855)
!13867 = !DILocation(line: 1163, column: 8, scope: !13855)
!13868 = !DILocation(line: 1165, column: 10, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13855, file: !1896, line: 1165, column: 6)
!13870 = !DILocation(line: 1165, column: 6, scope: !13855)
!13871 = !DILocation(line: 1167, column: 17, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13869, file: !1896, line: 1167, column: 13)
!13873 = !DILocation(line: 1167, column: 13, scope: !13869)
!13874 = !DILocation(line: 1170, column: 25, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13872, file: !1896, line: 1169, column: 9)
!13876 = !DILocation(line: 1170, column: 52, scope: !13875)
!13877 = !DILocation(line: 1170, column: 35, scope: !13875)
!13878 = !DILocation(line: 1170, column: 3, scope: !13875)
!13879 = !DILocation(line: 0, scope: !13869)
!13880 = !DILocation(line: 1173, column: 1, scope: !13855)
!13881 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !1896, file: !1896, line: 1175, type: !13882, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13897)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !13884, !1789}
!13884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13885, size: 32)
!13885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !13886, line: 37, size: 128, elements: !13887)
!13886 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13887 = !{!13888, !13896}
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !13885, file: !13886, line: 38, baseType: !13889, size: 96)
!13889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !13890)
!13890 = !{!13891, !13892, !13895}
!13891 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !13889, file: !153, line: 84, baseType: !1818, size: 32)
!13892 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !13889, file: !153, line: 85, baseType: !13893, size: 32, offset: 32)
!13893 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !13894)
!13894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13856, size: 32)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !13889, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!13896 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !13885, file: !13886, line: 39, baseType: !105, size: 32, offset: 96)
!13897 = !{!13898, !13899, !13900, !13901, !13910}
!13898 = !DILocalVariable(name: "pq", arg: 1, scope: !13881, file: !1896, line: 1175, type: !13884)
!13899 = !DILocalVariable(name: "thread", arg: 2, scope: !13881, file: !1896, line: 1175, type: !1789)
!13900 = !DILocalVariable(name: "t", scope: !13881, file: !1896, line: 1177, type: !1789)
!13901 = !DILocalVariable(name: "__f", scope: !13902, file: !1896, line: 1190, type: !13905)
!13902 = distinct !DILexicalBlock(scope: !13903, file: !1896, line: 1190, column: 3)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !1896, line: 1189, column: 27)
!13904 = distinct !DILexicalBlock(scope: !13881, file: !1896, line: 1189, column: 6)
!13905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !13906)
!13906 = !{!13907, !13908, !13909}
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !13905, file: !153, line: 156, baseType: !1891, size: 32)
!13908 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !13905, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!13909 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !13905, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!13910 = !DILocalVariable(name: "n", scope: !13911, file: !1896, line: 1190, type: !1818)
!13911 = distinct !DILexicalBlock(scope: !13912, file: !1896, line: 1190, column: 3)
!13912 = distinct !DILexicalBlock(scope: !13902, file: !1896, line: 1190, column: 3)
!13913 = !DILocation(line: 0, scope: !13881)
!13914 = !DILocation(line: 1179, column: 2, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13916, file: !1896, line: 1179, column: 2)
!13916 = distinct !DILexicalBlock(scope: !13881, file: !1896, line: 1179, column: 2)
!13917 = !DILocation(line: 1179, column: 2, scope: !13916)
!13918 = !DILocation(line: 1179, column: 2, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13915, file: !1896, line: 1179, column: 2)
!13920 = !DILocation(line: 1181, column: 31, scope: !13881)
!13921 = !DILocation(line: 1181, column: 45, scope: !13881)
!13922 = !DILocation(line: 1181, column: 15, scope: !13881)
!13923 = !DILocation(line: 1181, column: 25, scope: !13881)
!13924 = !DILocation(line: 1189, column: 11, scope: !13904)
!13925 = !DILocation(line: 1189, column: 7, scope: !13904)
!13926 = !DILocation(line: 1189, column: 6, scope: !13881)
!13927 = !DILocation(line: 1190, column: 3, scope: !13902)
!13928 = !DILocation(line: 1190, column: 3, scope: !13911)
!13929 = !DILocation(line: 0, scope: !13911)
!13930 = !DILocation(line: 1190, column: 3, scope: !13912)
!13931 = !DILocation(line: 1193, column: 2, scope: !13903)
!13932 = !DILocation(line: 1191, column: 42, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13912, file: !1896, line: 1190, column: 54)
!13934 = !DILocation(line: 1191, column: 12, scope: !13933)
!13935 = !DILocation(line: 1191, column: 22, scope: !13933)
!13936 = distinct !{!13936, !13927, !13937}
!13937 = !DILocation(line: 1192, column: 3, scope: !13902)
!13938 = !DILocation(line: 1195, column: 17, scope: !13881)
!13939 = !DILocation(line: 1195, column: 37, scope: !13881)
!13940 = !DILocation(line: 1195, column: 2, scope: !13881)
!13941 = !DILocation(line: 1196, column: 1, scope: !13881)
!13942 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !13943, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!1818, !13945, !13946}
!13945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13889, size: 32)
!13946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13905, size: 32)
!13947 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !13948, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13948 = !DISubroutineType(types: !13949)
!13949 = !{null, !13945, !1818}
!13950 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !1896, file: !1896, line: 1198, type: !13882, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13951)
!13951 = !{!13952, !13953}
!13952 = !DILocalVariable(name: "pq", arg: 1, scope: !13950, file: !1896, line: 1198, type: !13884)
!13953 = !DILocalVariable(name: "thread", arg: 2, scope: !13950, file: !1896, line: 1198, type: !1789)
!13954 = !DILocation(line: 0, scope: !13950)
!13955 = !DILocation(line: 1200, column: 2, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !1896, line: 1200, column: 2)
!13957 = distinct !DILexicalBlock(scope: !13950, file: !1896, line: 1200, column: 2)
!13958 = !DILocation(line: 1200, column: 2, scope: !13957)
!13959 = !DILocation(line: 1200, column: 2, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13956, file: !1896, line: 1200, column: 2)
!13961 = !DILocation(line: 1202, column: 17, scope: !13950)
!13962 = !DILocation(line: 1202, column: 37, scope: !13950)
!13963 = !DILocation(line: 1202, column: 2, scope: !13950)
!13964 = !DILocation(line: 1204, column: 16, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13950, file: !1896, line: 1204, column: 6)
!13966 = !DILocation(line: 1204, column: 7, scope: !13965)
!13967 = !DILocation(line: 1204, column: 6, scope: !13950)
!13968 = !DILocation(line: 1205, column: 7, scope: !13969)
!13969 = distinct !DILexicalBlock(scope: !13965, file: !1896, line: 1204, column: 22)
!13970 = !DILocation(line: 1205, column: 22, scope: !13969)
!13971 = !DILocation(line: 1206, column: 2, scope: !13969)
!13972 = !DILocation(line: 1207, column: 1, scope: !13950)
!13973 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !13948, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13974 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !1896, file: !1896, line: 1209, type: !13975, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13977)
!13975 = !DISubroutineType(types: !13976)
!13976 = !{!1789, !13884}
!13977 = !{!13978, !13979, !13980}
!13978 = !DILocalVariable(name: "pq", arg: 1, scope: !13974, file: !1896, line: 1209, type: !13884)
!13979 = !DILocalVariable(name: "thread", scope: !13974, file: !1896, line: 1211, type: !1789)
!13980 = !DILocalVariable(name: "n", scope: !13974, file: !1896, line: 1212, type: !1818)
!13981 = !DILocation(line: 0, scope: !13974)
!13982 = !DILocation(line: 1212, column: 37, scope: !13974)
!13983 = !DILocation(line: 1212, column: 21, scope: !13974)
!13984 = !DILocation(line: 1217, column: 2, scope: !13974)
!13985 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !13986, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !13988)
!13986 = !DISubroutineType(types: !13987)
!13987 = !{!1818, !13945}
!13988 = !{!13989}
!13989 = !DILocalVariable(name: "tree", arg: 1, scope: !13985, file: !153, line: 115, type: !13945)
!13990 = !DILocation(line: 0, scope: !13985)
!13991 = !DILocation(line: 117, column: 9, scope: !13985)
!13992 = !DILocation(line: 117, column: 2, scope: !13985)
!13993 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !13994, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!1818, !13945, !169}
!13996 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !1896, file: !1896, line: 1246, type: !13997, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14007)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!1789, !13999}
!13999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14000, size: 32)
!14000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !13886, line: 53, size: 2080, elements: !14001)
!14001 = !{!14002, !14006}
!14002 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14000, file: !13886, line: 54, baseType: !14003, size: 2048)
!14003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1825, size: 2048, elements: !14004)
!14004 = !{!14005}
!14005 = !DISubrange(count: 32)
!14006 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14000, file: !13886, line: 55, baseType: !32, size: 32, offset: 2048)
!14007 = !{!14008, !14009, !14010, !14011}
!14008 = !DILocalVariable(name: "pq", arg: 1, scope: !13996, file: !1896, line: 1246, type: !13999)
!14009 = !DILocalVariable(name: "thread", scope: !13996, file: !1896, line: 1252, type: !1789)
!14010 = !DILocalVariable(name: "l", scope: !13996, file: !1896, line: 1253, type: !12523)
!14011 = !DILocalVariable(name: "n", scope: !13996, file: !1896, line: 1254, type: !1892)
!14012 = !DILocation(line: 0, scope: !13996)
!14013 = !DILocation(line: 1248, column: 11, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !13996, file: !1896, line: 1248, column: 6)
!14015 = !DILocation(line: 1248, column: 7, scope: !14014)
!14016 = !DILocation(line: 1248, column: 6, scope: !13996)
!14017 = !DILocation(line: 1253, column: 31, scope: !13996)
!14018 = !DILocation(line: 1253, column: 20, scope: !13996)
!14019 = !DILocation(line: 1254, column: 19, scope: !13996)
!14020 = !DILocation(line: 1260, column: 1, scope: !13996)
!14021 = distinct !DISubprogram(name: "z_unpend_all", scope: !1896, file: !1896, line: 1262, type: !14022, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14024)
!14022 = !DISubroutineType(types: !14023)
!14023 = !{!105, !1820}
!14024 = !{!14025, !14026, !14027}
!14025 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14021, file: !1896, line: 1262, type: !1820)
!14026 = !DILocalVariable(name: "need_sched", scope: !14021, file: !1896, line: 1264, type: !105)
!14027 = !DILocalVariable(name: "thread", scope: !14021, file: !1896, line: 1265, type: !1789)
!14028 = !DILocation(line: 0, scope: !14021)
!14029 = !DILocation(line: 1267, column: 19, scope: !14021)
!14030 = !DILocation(line: 1267, column: 41, scope: !14021)
!14031 = !DILocation(line: 1267, column: 2, scope: !14021)
!14032 = !DILocation(line: 1268, column: 3, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14021, file: !1896, line: 1267, column: 50)
!14034 = !DILocation(line: 1269, column: 3, scope: !14033)
!14035 = distinct !{!14035, !14031, !14036}
!14036 = !DILocation(line: 1271, column: 2, scope: !14021)
!14037 = !DILocation(line: 1273, column: 2, scope: !14021)
!14038 = distinct !DISubprogram(name: "z_waitq_head", scope: !11013, file: !11013, line: 52, type: !13567, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14039)
!14039 = !{!14040}
!14040 = !DILocalVariable(name: "w", arg: 1, scope: !14038, file: !11013, line: 52, type: !1820)
!14041 = !DILocation(line: 0, scope: !14038)
!14042 = !DILocation(line: 54, column: 52, scope: !14038)
!14043 = !DILocation(line: 54, column: 28, scope: !14038)
!14044 = !DILocation(line: 54, column: 9, scope: !14038)
!14045 = !DILocation(line: 54, column: 2, scope: !14038)
!14046 = distinct !DISubprogram(name: "init_ready_q", scope: !1896, file: !1896, line: 1276, type: !14047, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14054)
!14047 = !DISubroutineType(types: !14048)
!14048 = !{null, !14049}
!14049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14050, size: 32)
!14050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !14051)
!14051 = !{!14052, !14053}
!14052 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14050, file: !163, line: 86, baseType: !1789, size: 32)
!14053 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14050, file: !163, line: 90, baseType: !1825, size: 64, offset: 32)
!14054 = !{!14055}
!14055 = !DILocalVariable(name: "rq", arg: 1, scope: !14046, file: !1896, line: 1276, type: !14049)
!14056 = !DILocation(line: 0, scope: !14046)
!14057 = !DILocation(line: 1289, column: 22, scope: !14046)
!14058 = !DILocation(line: 1289, column: 2, scope: !14046)
!14059 = !DILocation(line: 1291, column: 1, scope: !14046)
!14060 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14061, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14063)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{null, !12523}
!14063 = !{!14064}
!14064 = !DILocalVariable(name: "list", arg: 1, scope: !14060, file: !137, line: 197, type: !12523)
!14065 = !DILocation(line: 0, scope: !14060)
!14066 = !DILocation(line: 199, column: 8, scope: !14060)
!14067 = !DILocation(line: 199, column: 13, scope: !14060)
!14068 = !DILocation(line: 200, column: 8, scope: !14060)
!14069 = !DILocation(line: 200, column: 13, scope: !14060)
!14070 = !DILocation(line: 201, column: 1, scope: !14060)
!14071 = distinct !DISubprogram(name: "z_sched_init", scope: !1896, file: !1896, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!14072 = !DILocation(line: 1302, column: 2, scope: !14071)
!14073 = !DILocation(line: 1306, column: 2, scope: !14071)
!14074 = !DILocation(line: 1309, column: 1, scope: !14071)
!14075 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !1896, file: !1896, line: 1311, type: !14076, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14079)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{!105, !14078}
!14078 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !1789)
!14079 = !{!14080}
!14080 = !DILocalVariable(name: "thread", arg: 1, scope: !14075, file: !1896, line: 1311, type: !14078)
!14081 = !DILocation(line: 0, scope: !14075)
!14082 = !DILocation(line: 1313, column: 22, scope: !14075)
!14083 = !DILocation(line: 1313, column: 9, scope: !14075)
!14084 = !DILocation(line: 1313, column: 2, scope: !14075)
!14085 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !1896, file: !1896, line: 1325, type: !14086, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14088)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{null, !14078, !105}
!14088 = !{!14089, !14090, !14091}
!14089 = !DILocalVariable(name: "thread", arg: 1, scope: !14085, file: !1896, line: 1325, type: !14078)
!14090 = !DILocalVariable(name: "prio", arg: 2, scope: !14085, file: !1896, line: 1325, type: !105)
!14091 = !DILocalVariable(name: "th", scope: !14085, file: !1896, line: 1334, type: !1789)
!14092 = !DILocation(line: 0, scope: !14085)
!14093 = !DILocation(line: 1331, column: 2, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !1896, line: 1331, column: 2)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !1896, line: 1331, column: 2)
!14096 = distinct !DILexicalBlock(scope: !14085, file: !1896, line: 1331, column: 2)
!14097 = !DILocation(line: 1331, column: 2, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14094, file: !1896, line: 1331, column: 2)
!14099 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14101)
!14101 = distinct !DILocation(line: 1332, column: 2, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !1896, line: 1332, column: 2)
!14103 = distinct !DILexicalBlock(scope: !14085, file: !1896, line: 1332, column: 2)
!14104 = !DILocation(line: 0, scope: !13067, inlinedAt: !14100)
!14105 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14101)
!14106 = !DILocation(line: 1332, column: 2, scope: !14103)
!14107 = !DILocation(line: 1332, column: 2, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14102, file: !1896, line: 1332, column: 2)
!14109 = !DILocation(line: 1336, column: 2, scope: !14085)
!14110 = !DILocation(line: 1337, column: 1, scope: !14085)
!14111 = distinct !DISubprogram(name: "k_can_yield", scope: !1896, file: !1896, line: 1384, type: !8297, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!14112 = !DILocation(line: 1386, column: 11, scope: !14111)
!14113 = !DILocation(line: 1386, column: 29, scope: !14111)
!14114 = !DILocation(line: 1386, column: 32, scope: !14111)
!14115 = !DILocation(line: 1386, column: 46, scope: !14111)
!14116 = !DILocation(line: 1387, column: 28, scope: !14111)
!14117 = !DILocation(line: 1387, column: 4, scope: !14111)
!14118 = !DILocation(line: 1386, column: 2, scope: !14111)
!14119 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8297, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!14120 = !DILocation(line: 993, column: 10, scope: !14119)
!14121 = !DILocation(line: 993, column: 2, scope: !14119)
!14122 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !1896, file: !1896, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14123)
!14123 = !{!14124}
!14124 = !DILocalVariable(name: "key", scope: !14122, file: !1896, line: 1396, type: !12289)
!14125 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14126)
!14126 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 1392, column: 2, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14129, file: !1896, line: 1392, column: 2)
!14129 = distinct !DILexicalBlock(scope: !14122, file: !1896, line: 1392, column: 2)
!14130 = !DILocation(line: 0, scope: !13067, inlinedAt: !14126)
!14131 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14127)
!14132 = !DILocation(line: 1392, column: 2, scope: !14129)
!14133 = !DILocation(line: 1392, column: 2, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14128, file: !1896, line: 1392, column: 2)
!14135 = !DILocation(line: 0, scope: !12297, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 1396, column: 25, scope: !14122)
!14137 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !14138)
!14138 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !14136)
!14139 = !DILocation(line: 0, scope: !12306, inlinedAt: !14138)
!14140 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !14136)
!14141 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !14136)
!14142 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !14136)
!14143 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !14136)
!14144 = !DILocation(line: 0, scope: !14122)
!14145 = !DILocation(line: 1400, column: 18, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !1896, line: 1399, column: 36)
!14147 = distinct !DILexicalBlock(scope: !14122, file: !1896, line: 1398, column: 6)
!14148 = !DILocation(line: 0, scope: !12489, inlinedAt: !14149)
!14149 = distinct !DILocation(line: 1400, column: 3, scope: !14146)
!14150 = !DILocation(line: 266, column: 15, scope: !12489, inlinedAt: !14149)
!14151 = !DILocation(line: 266, column: 28, scope: !12489, inlinedAt: !14149)
!14152 = !DILocation(line: 0, scope: !12497, inlinedAt: !14153)
!14153 = distinct !DILocation(line: 268, column: 3, scope: !12501, inlinedAt: !14149)
!14154 = !DILocation(line: 234, column: 2, scope: !12497, inlinedAt: !14153)
!14155 = !DILocation(line: 1402, column: 15, scope: !14122)
!14156 = !DILocation(line: 0, scope: !12506, inlinedAt: !14157)
!14157 = distinct !DILocation(line: 1402, column: 2, scope: !14122)
!14158 = !DILocation(line: 252, column: 15, scope: !12506, inlinedAt: !14157)
!14159 = !DILocation(line: 252, column: 28, scope: !12506, inlinedAt: !14157)
!14160 = !DILocation(line: 0, scope: !12513, inlinedAt: !14161)
!14161 = distinct !DILocation(line: 254, column: 3, scope: !12517, inlinedAt: !14157)
!14162 = !DILocation(line: 0, scope: !12520, inlinedAt: !14163)
!14163 = distinct !DILocation(line: 229, column: 2, scope: !12513, inlinedAt: !14161)
!14164 = !DILocation(line: 186, column: 2, scope: !12530, inlinedAt: !14163)
!14165 = !DILocation(line: 186, column: 2, scope: !12531, inlinedAt: !14163)
!14166 = !DILocation(line: 186, column: 2, scope: !12534, inlinedAt: !14163)
!14167 = !DILocation(line: 188, column: 2, scope: !12536, inlinedAt: !14163)
!14168 = !DILocation(line: 188, column: 2, scope: !12538, inlinedAt: !14163)
!14169 = !DILocation(line: 0, scope: !12536, inlinedAt: !14163)
!14170 = !DILocation(line: 189, column: 7, scope: !12541, inlinedAt: !14163)
!14171 = !DILocation(line: 189, column: 35, scope: !12541, inlinedAt: !14163)
!14172 = !DILocation(line: 189, column: 7, scope: !12542, inlinedAt: !14163)
!14173 = !DILocation(line: 191, column: 21, scope: !12546, inlinedAt: !14163)
!14174 = !DILocation(line: 190, column: 4, scope: !12546, inlinedAt: !14163)
!14175 = !DILocation(line: 192, column: 4, scope: !12546, inlinedAt: !14163)
!14176 = distinct !{!14176, !14167, !14177}
!14177 = !DILocation(line: 194, column: 2, scope: !12536, inlinedAt: !14163)
!14178 = !DILocation(line: 196, column: 37, scope: !12520, inlinedAt: !14163)
!14179 = !DILocation(line: 196, column: 2, scope: !12520, inlinedAt: !14163)
!14180 = !DILocation(line: 197, column: 1, scope: !12520, inlinedAt: !14163)
!14181 = !DILocation(line: 1403, column: 2, scope: !14122)
!14182 = !DILocation(line: 0, scope: !13018, inlinedAt: !14183)
!14183 = distinct !DILocation(line: 1404, column: 2, scope: !14122)
!14184 = !DILocation(line: 0, scope: !13027, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 195, column: 2, scope: !13018, inlinedAt: !14183)
!14186 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !14185)
!14187 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !14185)
!14188 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !14185)
!14189 = !DILocation(line: 196, column: 9, scope: !13018, inlinedAt: !14183)
!14190 = !DILocation(line: 1405, column: 1, scope: !14122)
!14191 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !1896, file: !1896, line: 1459, type: !14192, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14194)
!14192 = !DISubroutineType(types: !14193)
!14193 = !{!116, !13228}
!14194 = !{!14195, !14196, !14197}
!14195 = !DILocalVariable(name: "timeout", arg: 1, scope: !14191, file: !1896, line: 1459, type: !13228)
!14196 = !DILocalVariable(name: "ticks", scope: !14191, file: !1896, line: 1461, type: !107)
!14197 = !DILocalVariable(name: "ret", scope: !14191, file: !1896, line: 1480, type: !116)
!14198 = !DILocation(line: 0, scope: !14191)
!14199 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14200)
!14200 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14201)
!14201 = distinct !DILocation(line: 1463, column: 2, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14203, file: !1896, line: 1463, column: 2)
!14203 = distinct !DILexicalBlock(scope: !14191, file: !1896, line: 1463, column: 2)
!14204 = !DILocation(line: 0, scope: !13067, inlinedAt: !14200)
!14205 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14201)
!14206 = !DILocation(line: 1463, column: 2, scope: !14203)
!14207 = !DILocation(line: 1463, column: 2, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14202, file: !1896, line: 1463, column: 2)
!14209 = !DILocation(line: 1468, column: 6, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14191, file: !1896, line: 1468, column: 6)
!14211 = !DILocation(line: 1468, column: 6, scope: !14191)
!14212 = !DILocation(line: 1469, column: 20, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14210, file: !1896, line: 1468, column: 40)
!14214 = !DILocation(line: 1469, column: 3, scope: !14213)
!14215 = !DILocation(line: 1473, column: 3, scope: !14213)
!14216 = !DILocation(line: 1478, column: 10, scope: !14191)
!14217 = !DILocation(line: 1480, column: 16, scope: !14191)
!14218 = !DILocation(line: 1485, column: 1, scope: !14191)
!14219 = distinct !DISubprogram(name: "k_thread_suspend", scope: !2698, file: !2698, line: 310, type: !14220, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14222)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{null, !14078}
!14222 = !{!14223}
!14223 = !DILocalVariable(name: "thread", arg: 1, scope: !14219, file: !2698, line: 310, type: !14078)
!14224 = !DILocation(line: 0, scope: !14219)
!14225 = !DILocation(line: 319, column: 2, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14219, file: !2698, line: 319, column: 2)
!14227 = !{i64 2151140439}
!14228 = !DILocation(line: 320, column: 2, scope: !14219)
!14229 = !DILocation(line: 321, column: 1, scope: !14219)
!14230 = distinct !DISubprogram(name: "z_tick_sleep", scope: !1896, file: !1896, line: 1415, type: !14231, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14233)
!14231 = !DISubroutineType(types: !14232)
!14232 = !{!116, !107}
!14233 = !{!14234, !14235, !14236, !14237}
!14234 = !DILocalVariable(name: "ticks", arg: 1, scope: !14230, file: !1896, line: 1415, type: !107)
!14235 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14230, file: !1896, line: 1418, type: !113)
!14236 = !DILocalVariable(name: "timeout", scope: !14230, file: !1896, line: 1430, type: !13228)
!14237 = !DILocalVariable(name: "key", scope: !14230, file: !1896, line: 1437, type: !12289)
!14238 = !DILocation(line: 0, scope: !14230)
!14239 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14240)
!14240 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14241)
!14241 = distinct !DILocation(line: 1420, column: 2, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14243, file: !1896, line: 1420, column: 2)
!14243 = distinct !DILexicalBlock(scope: !14230, file: !1896, line: 1420, column: 2)
!14244 = !DILocation(line: 0, scope: !13067, inlinedAt: !14240)
!14245 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14241)
!14246 = !DILocation(line: 1420, column: 2, scope: !14243)
!14247 = !DILocation(line: 1420, column: 2, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14242, file: !1896, line: 1420, column: 2)
!14249 = !DILocation(line: 1425, column: 12, scope: !14250)
!14250 = distinct !DILexicalBlock(scope: !14230, file: !1896, line: 1425, column: 6)
!14251 = !DILocation(line: 1425, column: 6, scope: !14230)
!14252 = !DILocation(line: 1426, column: 3, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14250, file: !1896, line: 1425, column: 18)
!14254 = !DILocation(line: 1427, column: 3, scope: !14253)
!14255 = !DILocation(line: 1431, column: 24, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14230, file: !1896, line: 1431, column: 6)
!14257 = !DILocation(line: 1431, column: 6, scope: !14230)
!14258 = !DILocation(line: 1432, column: 35, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14256, file: !1896, line: 1431, column: 30)
!14260 = !DILocation(line: 1432, column: 27, scope: !14259)
!14261 = !DILocation(line: 1433, column: 2, scope: !14259)
!14262 = !DILocation(line: 1434, column: 27, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14256, file: !1896, line: 1433, column: 9)
!14264 = !DILocation(line: 0, scope: !14256)
!14265 = !DILocation(line: 0, scope: !12297, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 1437, column: 25, scope: !14230)
!14267 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !14266)
!14269 = !DILocation(line: 0, scope: !12306, inlinedAt: !14268)
!14270 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !14266)
!14271 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !14266)
!14272 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !14266)
!14273 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !14266)
!14274 = !DILocation(line: 1440, column: 20, scope: !14230)
!14275 = !DILocation(line: 1440, column: 18, scope: !14230)
!14276 = !DILocation(line: 1442, column: 2, scope: !14230)
!14277 = !DILocation(line: 1443, column: 23, scope: !14230)
!14278 = !DILocation(line: 1443, column: 2, scope: !14230)
!14279 = !DILocation(line: 1444, column: 29, scope: !14230)
!14280 = !DILocation(line: 1444, column: 2, scope: !14230)
!14281 = !DILocation(line: 0, scope: !13018, inlinedAt: !14282)
!14282 = distinct !DILocation(line: 1446, column: 8, scope: !14230)
!14283 = !DILocation(line: 0, scope: !13027, inlinedAt: !14284)
!14284 = distinct !DILocation(line: 195, column: 2, scope: !13018, inlinedAt: !14282)
!14285 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !14284)
!14286 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !14284)
!14287 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !14284)
!14288 = !DILocation(line: 196, column: 9, scope: !13018, inlinedAt: !14282)
!14289 = !DILocation(line: 1448, column: 2, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14291, file: !1896, line: 1448, column: 2)
!14291 = distinct !DILexicalBlock(scope: !14230, file: !1896, line: 1448, column: 2)
!14292 = !DILocation(line: 1448, column: 2, scope: !14291)
!14293 = !DILocation(line: 1448, column: 2, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14290, file: !1896, line: 1448, column: 2)
!14295 = !DILocation(line: 1450, column: 10, scope: !14230)
!14296 = !DILocation(line: 1450, column: 45, scope: !14230)
!14297 = !DILocation(line: 1450, column: 43, scope: !14230)
!14298 = !DILocation(line: 1451, column: 6, scope: !14230)
!14299 = !DILocation(line: 1457, column: 1, scope: !14230)
!14300 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11269, file: !11269, line: 1103, type: !11270, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14301)
!14301 = !{!14302}
!14302 = !DILocalVariable(name: "t", arg: 1, scope: !14300, file: !11269, line: 1103, type: !114)
!14303 = !DILocation(line: 0, scope: !14300)
!14304 = !DILocation(line: 0, scope: !12357, inlinedAt: !14305)
!14305 = distinct !DILocation(line: 1106, column: 9, scope: !14300)
!14306 = !DILocation(line: 139, column: 13, scope: !14307, inlinedAt: !14305)
!14307 = distinct !DILexicalBlock(scope: !14308, file: !11269, line: 138, column: 10)
!14308 = distinct !DILexicalBlock(scope: !14309, file: !11269, line: 136, column: 7)
!14309 = distinct !DILexicalBlock(scope: !12378, file: !11269, line: 134, column: 17)
!14310 = !DILocation(line: 1106, column: 2, scope: !14300)
!14311 = distinct !DISubprogram(name: "k_yield", scope: !2698, file: !2698, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!14312 = !DILocation(line: 148, column: 2, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14311, file: !2698, line: 148, column: 2)
!14314 = !{i64 2151139759}
!14315 = !DILocation(line: 149, column: 2, scope: !14311)
!14316 = !DILocation(line: 150, column: 1, scope: !14311)
!14317 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !1896, file: !1896, line: 1495, type: !14318, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14320)
!14318 = !DISubroutineType(types: !14319)
!14319 = !{!116, !105}
!14320 = !{!14321, !14322}
!14321 = !DILocalVariable(name: "us", arg: 1, scope: !14317, file: !1896, line: 1495, type: !105)
!14322 = !DILocalVariable(name: "ticks", scope: !14317, file: !1896, line: 1497, type: !116)
!14323 = !DILocation(line: 0, scope: !14317)
!14324 = !DILocation(line: 1501, column: 31, scope: !14317)
!14325 = !DILocation(line: 1501, column: 10, scope: !14317)
!14326 = !DILocation(line: 1502, column: 23, scope: !14317)
!14327 = !DILocation(line: 1502, column: 10, scope: !14317)
!14328 = !DILocation(line: 1506, column: 31, scope: !14317)
!14329 = !DILocation(line: 1506, column: 9, scope: !14317)
!14330 = !DILocation(line: 1506, column: 2, scope: !14317)
!14331 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11269, file: !11269, line: 571, type: !11270, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14332)
!14332 = !{!14333}
!14333 = !DILocalVariable(name: "t", arg: 1, scope: !14331, file: !11269, line: 571, type: !114)
!14334 = !DILocation(line: 0, scope: !14331)
!14335 = !DILocation(line: 0, scope: !12357, inlinedAt: !14336)
!14336 = distinct !DILocation(line: 574, column: 9, scope: !14331)
!14337 = !DILocation(line: 135, column: 5, scope: !14309, inlinedAt: !14336)
!14338 = !DILocation(line: 139, column: 13, scope: !14307, inlinedAt: !14336)
!14339 = !DILocation(line: 574, column: 2, scope: !14331)
!14340 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11269, file: !11269, line: 1187, type: !11270, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14341)
!14341 = !{!14342}
!14342 = !DILocalVariable(name: "t", arg: 1, scope: !14340, file: !11269, line: 1187, type: !114)
!14343 = !DILocation(line: 0, scope: !14340)
!14344 = !DILocation(line: 0, scope: !12357, inlinedAt: !14345)
!14345 = distinct !DILocation(line: 1190, column: 9, scope: !14340)
!14346 = !DILocation(line: 145, column: 13, scope: !14347, inlinedAt: !14345)
!14347 = distinct !DILexicalBlock(scope: !12375, file: !11269, line: 144, column: 10)
!14348 = !DILocation(line: 1190, column: 2, scope: !14340)
!14349 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !1896, file: !1896, line: 1517, type: !14220, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14350)
!14350 = !{!14351}
!14351 = !DILocalVariable(name: "thread", arg: 1, scope: !14349, file: !1896, line: 1517, type: !14078)
!14352 = !DILocation(line: 0, scope: !14349)
!14353 = !DILocation(line: 1521, column: 6, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14349, file: !1896, line: 1521, column: 6)
!14355 = !DILocation(line: 1521, column: 6, scope: !14349)
!14356 = !DILocation(line: 1525, column: 6, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14349, file: !1896, line: 1525, column: 6)
!14358 = !DILocation(line: 1525, column: 37, scope: !14357)
!14359 = !DILocation(line: 1525, column: 6, scope: !14349)
!14360 = !DILocation(line: 1527, column: 20, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !1896, line: 1527, column: 7)
!14362 = distinct !DILexicalBlock(scope: !14357, file: !1896, line: 1525, column: 42)
!14363 = !DILocation(line: 1527, column: 33, scope: !14361)
!14364 = !DILocation(line: 1527, column: 7, scope: !14362)
!14365 = !DILocation(line: 1532, column: 2, scope: !14349)
!14366 = !DILocation(line: 1533, column: 2, scope: !14349)
!14367 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14368)
!14368 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14369)
!14369 = distinct !DILocation(line: 1537, column: 7, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14349, file: !1896, line: 1537, column: 6)
!14371 = !DILocation(line: 0, scope: !13067, inlinedAt: !14368)
!14372 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14369)
!14373 = !DILocation(line: 1537, column: 6, scope: !14349)
!14374 = !DILocation(line: 1538, column: 3, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14370, file: !1896, line: 1537, column: 25)
!14376 = !DILocation(line: 1539, column: 2, scope: !14375)
!14377 = !DILocation(line: 1540, column: 1, scope: !14349)
!14378 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10652, file: !10652, line: 101, type: !12438, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14379)
!14379 = !{!14380}
!14380 = !DILocalVariable(name: "thread", arg: 1, scope: !14378, file: !10652, line: 101, type: !1789)
!14381 = !DILocation(line: 0, scope: !14378)
!14382 = !DILocation(line: 103, column: 23, scope: !14378)
!14383 = !DILocation(line: 103, column: 36, scope: !14378)
!14384 = !DILocation(line: 103, column: 55, scope: !14378)
!14385 = !DILocation(line: 103, column: 2, scope: !14378)
!14386 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !1896, file: !1896, line: 1567, type: !14387, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14389)
!14387 = !DISubroutineType(types: !14388)
!14388 = !{!14078}
!14389 = !{!14390}
!14390 = !DILocalVariable(name: "ret", scope: !14386, file: !1896, line: 1577, type: !14078)
!14391 = !DILocation(line: 1577, column: 30, scope: !14386)
!14392 = !DILocation(line: 0, scope: !14386)
!14393 = !DILocation(line: 1582, column: 2, scope: !14386)
!14394 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !1896, file: !1896, line: 1593, type: !8598, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !397)
!14395 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14396)
!14396 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14397)
!14397 = distinct !DILocation(line: 1595, column: 10, scope: !14394)
!14398 = !DILocation(line: 0, scope: !13067, inlinedAt: !14396)
!14399 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14397)
!14400 = !DILocation(line: 1595, column: 27, scope: !14394)
!14401 = !DILocation(line: 1595, column: 41, scope: !14394)
!14402 = !DILocation(line: 1595, column: 30, scope: !14394)
!14403 = !DILocation(line: 1595, column: 2, scope: !14394)
!14404 = distinct !DISubprogram(name: "z_thread_abort", scope: !1896, file: !1896, line: 1725, type: !12255, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14405)
!14405 = !{!14406, !14407}
!14406 = !DILocalVariable(name: "thread", arg: 1, scope: !14404, file: !1896, line: 1725, type: !1789)
!14407 = !DILocalVariable(name: "key", scope: !14404, file: !1896, line: 1727, type: !12289)
!14408 = !DILocation(line: 0, scope: !14404)
!14409 = !DILocation(line: 0, scope: !12297, inlinedAt: !14410)
!14410 = distinct !DILocation(line: 1727, column: 25, scope: !14404)
!14411 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !14410)
!14413 = !DILocation(line: 0, scope: !12306, inlinedAt: !14412)
!14414 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !14410)
!14415 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !14410)
!14416 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !14410)
!14417 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !14410)
!14418 = !DILocation(line: 1729, column: 20, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14404, file: !1896, line: 1729, column: 6)
!14420 = !DILocation(line: 1729, column: 33, scope: !14419)
!14421 = !DILocation(line: 1729, column: 48, scope: !14419)
!14422 = !DILocation(line: 1729, column: 6, scope: !14404)
!14423 = !DILocation(line: 0, scope: !12331, inlinedAt: !14424)
!14424 = distinct !DILocation(line: 1730, column: 3, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14419, file: !1896, line: 1729, column: 54)
!14426 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !14424)
!14427 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !14424)
!14428 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !14424)
!14429 = !DILocation(line: 0, scope: !12345, inlinedAt: !14430)
!14430 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !14424)
!14431 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !14430)
!14432 = !DILocation(line: 1731, column: 3, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14434, file: !1896, line: 1731, column: 3)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !1896, line: 1731, column: 3)
!14435 = distinct !DILexicalBlock(scope: !14425, file: !1896, line: 1731, column: 3)
!14436 = !DILocation(line: 1736, column: 20, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14404, file: !1896, line: 1736, column: 6)
!14438 = !DILocation(line: 1736, column: 33, scope: !14437)
!14439 = !DILocation(line: 1736, column: 49, scope: !14437)
!14440 = !DILocation(line: 1736, column: 6, scope: !14404)
!14441 = !DILocation(line: 0, scope: !12331, inlinedAt: !14442)
!14442 = distinct !DILocation(line: 1737, column: 3, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14437, file: !1896, line: 1736, column: 56)
!14444 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !14442)
!14445 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !14442)
!14446 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !14442)
!14447 = !DILocation(line: 0, scope: !12345, inlinedAt: !14448)
!14448 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !14442)
!14449 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !14448)
!14450 = !DILocation(line: 1738, column: 3, scope: !14443)
!14451 = !DILocation(line: 1775, column: 2, scope: !14404)
!14452 = !DILocation(line: 1776, column: 16, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14404, file: !1896, line: 1776, column: 6)
!14454 = !DILocation(line: 1776, column: 13, scope: !14453)
!14455 = !DILocation(line: 1776, column: 25, scope: !14453)
!14456 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14457)
!14457 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14458)
!14458 = distinct !DILocation(line: 1776, column: 29, scope: !14453)
!14459 = !DILocation(line: 0, scope: !13067, inlinedAt: !14457)
!14460 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14458)
!14461 = !DILocation(line: 1776, column: 6, scope: !14404)
!14462 = !DILocation(line: 0, scope: !13018, inlinedAt: !14463)
!14463 = distinct !DILocation(line: 1777, column: 3, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14453, file: !1896, line: 1776, column: 47)
!14465 = !DILocation(line: 0, scope: !13027, inlinedAt: !14466)
!14466 = distinct !DILocation(line: 195, column: 2, scope: !13018, inlinedAt: !14463)
!14467 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !14466)
!14468 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !14466)
!14469 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !14466)
!14470 = !DILocation(line: 196, column: 9, scope: !13018, inlinedAt: !14463)
!14471 = !DILocation(line: 1778, column: 3, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14473, file: !1896, line: 1778, column: 3)
!14473 = distinct !DILexicalBlock(scope: !14474, file: !1896, line: 1778, column: 3)
!14474 = distinct !DILexicalBlock(scope: !14464, file: !1896, line: 1778, column: 3)
!14475 = !DILocation(line: 0, scope: !12331, inlinedAt: !14476)
!14476 = distinct !DILocation(line: 1780, column: 2, scope: !14404)
!14477 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !14476)
!14478 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !14476)
!14479 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !14476)
!14480 = !DILocation(line: 0, scope: !12345, inlinedAt: !14481)
!14481 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !14476)
!14482 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !14481)
!14483 = !DILocation(line: 1781, column: 1, scope: !14404)
!14484 = distinct !DISubprogram(name: "end_thread", scope: !1896, file: !1896, line: 1690, type: !12255, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14485)
!14485 = !{!14486}
!14486 = !DILocalVariable(name: "thread", arg: 1, scope: !14484, file: !1896, line: 1690, type: !1789)
!14487 = !DILocation(line: 0, scope: !14484)
!14488 = !DILocation(line: 1695, column: 20, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14484, file: !1896, line: 1695, column: 6)
!14490 = !DILocation(line: 1695, column: 33, scope: !14489)
!14491 = !DILocation(line: 1695, column: 49, scope: !14489)
!14492 = !DILocation(line: 1695, column: 6, scope: !14484)
!14493 = !DILocation(line: 1697, column: 29, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14489, file: !1896, line: 1695, column: 56)
!14495 = !DILocation(line: 1698, column: 7, scope: !14496)
!14496 = distinct !DILexicalBlock(scope: !14494, file: !1896, line: 1698, column: 7)
!14497 = !DILocation(line: 1698, column: 7, scope: !14494)
!14498 = !DILocation(line: 0, scope: !12489, inlinedAt: !14499)
!14499 = distinct !DILocation(line: 1699, column: 4, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14496, file: !1896, line: 1698, column: 35)
!14501 = !DILocation(line: 266, column: 28, scope: !12489, inlinedAt: !14499)
!14502 = !DILocation(line: 0, scope: !12497, inlinedAt: !14503)
!14503 = distinct !DILocation(line: 268, column: 3, scope: !12501, inlinedAt: !14499)
!14504 = !DILocation(line: 234, column: 2, scope: !12497, inlinedAt: !14503)
!14505 = !DILocation(line: 1700, column: 3, scope: !14500)
!14506 = !DILocation(line: 1701, column: 20, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14494, file: !1896, line: 1701, column: 7)
!14508 = !DILocation(line: 1701, column: 30, scope: !14507)
!14509 = !DILocation(line: 1701, column: 7, scope: !14494)
!14510 = !DILocation(line: 1702, column: 4, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14507, file: !1896, line: 1701, column: 39)
!14512 = !DILocation(line: 1703, column: 3, scope: !14511)
!14513 = !DILocation(line: 1704, column: 9, scope: !14494)
!14514 = !DILocation(line: 1705, column: 23, scope: !14494)
!14515 = !DILocation(line: 1705, column: 3, scope: !14494)
!14516 = !DILocation(line: 1706, column: 3, scope: !14494)
!14517 = !DILocation(line: 1722, column: 2, scope: !14494)
!14518 = !DILocation(line: 1723, column: 1, scope: !14484)
!14519 = distinct !DISubprogram(name: "unpend_all", scope: !1896, file: !1896, line: 1674, type: !14520, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14522)
!14520 = !DISubroutineType(types: !14521)
!14521 = !{null, !1820}
!14522 = !{!14523, !14524}
!14523 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14519, file: !1896, line: 1674, type: !1820)
!14524 = !DILocalVariable(name: "thread", scope: !14519, file: !1896, line: 1676, type: !1789)
!14525 = !DILocation(line: 0, scope: !14519)
!14526 = !DILocation(line: 1678, column: 19, scope: !14519)
!14527 = !DILocation(line: 1678, column: 41, scope: !14519)
!14528 = !DILocation(line: 1678, column: 2, scope: !14519)
!14529 = !DILocation(line: 1679, column: 3, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14519, file: !1896, line: 1678, column: 50)
!14531 = !DILocation(line: 1680, column: 9, scope: !14530)
!14532 = !DILocalVariable(name: "thread", arg: 1, scope: !14533, file: !10693, line: 65, type: !1789)
!14533 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10693, file: !10693, line: 65, type: !14534, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14536)
!14534 = !DISubroutineType(types: !14535)
!14535 = !{null, !1789, !32}
!14536 = !{!14532, !14537}
!14537 = !DILocalVariable(name: "value", arg: 2, scope: !14533, file: !10693, line: 65, type: !32)
!14538 = !DILocation(line: 0, scope: !14533, inlinedAt: !14539)
!14539 = distinct !DILocation(line: 1681, column: 3, scope: !14530)
!14540 = !DILocation(line: 67, column: 15, scope: !14533, inlinedAt: !14539)
!14541 = !DILocation(line: 67, column: 33, scope: !14533, inlinedAt: !14539)
!14542 = !DILocation(line: 1682, column: 3, scope: !14530)
!14543 = distinct !{!14543, !14528, !14544}
!14544 = !DILocation(line: 1683, column: 2, scope: !14519)
!14545 = !DILocation(line: 1684, column: 1, scope: !14519)
!14546 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !1896, file: !1896, line: 1794, type: !14547, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14549)
!14547 = !DISubroutineType(types: !14548)
!14548 = !{!105, !1789, !13228}
!14549 = !{!14550, !14551, !14552, !14553}
!14550 = !DILocalVariable(name: "thread", arg: 1, scope: !14546, file: !1896, line: 1794, type: !1789)
!14551 = !DILocalVariable(name: "timeout", arg: 2, scope: !14546, file: !1896, line: 1794, type: !13228)
!14552 = !DILocalVariable(name: "key", scope: !14546, file: !1896, line: 1796, type: !12289)
!14553 = !DILocalVariable(name: "ret", scope: !14546, file: !1896, line: 1797, type: !105)
!14554 = !DILocation(line: 0, scope: !14546)
!14555 = !DILocation(line: 0, scope: !12297, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 1796, column: 25, scope: !14546)
!14557 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !14556)
!14559 = !DILocation(line: 0, scope: !12306, inlinedAt: !14558)
!14560 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !14556)
!14561 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !14556)
!14562 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !14556)
!14563 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !14556)
!14564 = !DILocation(line: 1801, column: 20, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14546, file: !1896, line: 1801, column: 6)
!14566 = !DILocation(line: 1801, column: 33, scope: !14565)
!14567 = !DILocation(line: 1801, column: 49, scope: !14565)
!14568 = !DILocation(line: 1801, column: 6, scope: !14546)
!14569 = !DILocation(line: 1803, column: 13, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14565, file: !1896, line: 1803, column: 13)
!14571 = !DILocation(line: 1803, column: 13, scope: !14565)
!14572 = !DILocation(line: 1805, column: 24, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14570, file: !1896, line: 1805, column: 13)
!14574 = !DILocation(line: 1805, column: 21, scope: !14573)
!14575 = !DILocation(line: 1805, column: 34, scope: !14573)
!14576 = !DILocation(line: 1806, column: 20, scope: !14573)
!14577 = !DILocation(line: 1806, column: 44, scope: !14573)
!14578 = !DILocation(line: 1806, column: 30, scope: !14573)
!14579 = !DILocation(line: 1805, column: 13, scope: !14570)
!14580 = !DILocation(line: 1031, column: 3, scope: !13067, inlinedAt: !14581)
!14581 = distinct !DILocation(line: 48, column: 10, scope: !13071, inlinedAt: !14582)
!14582 = distinct !DILocation(line: 1809, column: 3, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !1896, line: 1809, column: 3)
!14584 = distinct !DILexicalBlock(scope: !14585, file: !1896, line: 1809, column: 3)
!14585 = distinct !DILexicalBlock(scope: !14573, file: !1896, line: 1808, column: 9)
!14586 = !DILocation(line: 0, scope: !13067, inlinedAt: !14581)
!14587 = !DILocation(line: 48, column: 9, scope: !13071, inlinedAt: !14582)
!14588 = !DILocation(line: 1809, column: 3, scope: !14584)
!14589 = !DILocation(line: 1809, column: 3, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14583, file: !1896, line: 1809, column: 3)
!14591 = !DILocation(line: 1810, column: 23, scope: !14585)
!14592 = !DILocation(line: 1810, column: 42, scope: !14585)
!14593 = !DILocation(line: 1810, column: 3, scope: !14585)
!14594 = !DILocation(line: 1811, column: 22, scope: !14585)
!14595 = !DILocation(line: 1811, column: 3, scope: !14585)
!14596 = !DILocation(line: 0, scope: !13018, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 1814, column: 9, scope: !14585)
!14598 = !DILocation(line: 0, scope: !13027, inlinedAt: !14599)
!14599 = distinct !DILocation(line: 195, column: 2, scope: !13018, inlinedAt: !14597)
!14600 = !DILocation(line: 225, column: 2, scope: !13034, inlinedAt: !14599)
!14601 = !DILocation(line: 225, column: 2, scope: !13035, inlinedAt: !14599)
!14602 = !DILocation(line: 225, column: 2, scope: !13038, inlinedAt: !14599)
!14603 = !DILocation(line: 196, column: 9, scope: !13018, inlinedAt: !14597)
!14604 = !DILocation(line: 1817, column: 3, scope: !14585)
!14605 = !DILocation(line: 0, scope: !14565)
!14606 = !DILocation(line: 0, scope: !12331, inlinedAt: !14607)
!14607 = distinct !DILocation(line: 1822, column: 2, scope: !14546)
!14608 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !14607)
!14609 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !14607)
!14610 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !14607)
!14611 = !DILocation(line: 0, scope: !12345, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !14607)
!14613 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !14612)
!14614 = !DILocation(line: 1823, column: 2, scope: !14546)
!14615 = !DILocation(line: 1824, column: 1, scope: !14546)
!14616 = distinct !DISubprogram(name: "z_sched_wake", scope: !1896, file: !1896, line: 1882, type: !14617, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14619)
!14617 = !DISubroutineType(types: !14618)
!14618 = !{!540, !1820, !105, !104}
!14619 = !{!14620, !14621, !14622, !14623, !14624, !14625, !14627}
!14620 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14616, file: !1896, line: 1882, type: !1820)
!14621 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14616, file: !1896, line: 1882, type: !105)
!14622 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14616, file: !1896, line: 1882, type: !104)
!14623 = !DILocalVariable(name: "thread", scope: !14616, file: !1896, line: 1884, type: !1789)
!14624 = !DILocalVariable(name: "ret", scope: !14616, file: !1896, line: 1885, type: !540)
!14625 = !DILocalVariable(name: "__i", scope: !14626, file: !1896, line: 1887, type: !12289)
!14626 = distinct !DILexicalBlock(scope: !14616, file: !1896, line: 1887, column: 2)
!14627 = !DILocalVariable(name: "__key", scope: !14626, file: !1896, line: 1887, type: !12289)
!14628 = !DILocation(line: 0, scope: !14616)
!14629 = !DILocation(line: 0, scope: !14626)
!14630 = !DILocation(line: 0, scope: !12297, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 1887, column: 2, scope: !14626)
!14632 = !DILocation(line: 55, column: 2, scope: !12306, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 145, column: 10, scope: !12297, inlinedAt: !14631)
!14634 = !DILocation(line: 0, scope: !12306, inlinedAt: !14633)
!14635 = !DILocation(line: 148, column: 2, scope: !12314, inlinedAt: !14631)
!14636 = !DILocation(line: 148, column: 2, scope: !12315, inlinedAt: !14631)
!14637 = !DILocation(line: 148, column: 2, scope: !12318, inlinedAt: !14631)
!14638 = !DILocation(line: 160, column: 2, scope: !12297, inlinedAt: !14631)
!14639 = !DILocation(line: 1888, column: 12, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14641, file: !1896, line: 1887, column: 26)
!14641 = distinct !DILexicalBlock(scope: !14626, file: !1896, line: 1887, column: 2)
!14642 = !DILocation(line: 1890, column: 14, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14640, file: !1896, line: 1890, column: 7)
!14644 = !DILocation(line: 1890, column: 7, scope: !14640)
!14645 = !DILocalVariable(name: "thread", arg: 1, scope: !14646, file: !11542, line: 134, type: !1789)
!14646 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !11542, file: !11542, line: 134, type: !14647, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14649)
!14647 = !DISubroutineType(types: !14648)
!14648 = !{null, !1789, !32, !104}
!14649 = !{!14645, !14650, !14651}
!14650 = !DILocalVariable(name: "value", arg: 2, scope: !14646, file: !11542, line: 135, type: !32)
!14651 = !DILocalVariable(name: "data", arg: 3, scope: !14646, file: !11542, line: 136, type: !104)
!14652 = !DILocation(line: 0, scope: !14646, inlinedAt: !14653)
!14653 = distinct !DILocation(line: 1891, column: 4, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14643, file: !1896, line: 1890, column: 23)
!14655 = !DILocation(line: 0, scope: !14533, inlinedAt: !14656)
!14656 = distinct !DILocation(line: 138, column: 2, scope: !14646, inlinedAt: !14653)
!14657 = !DILocation(line: 67, column: 15, scope: !14533, inlinedAt: !14656)
!14658 = !DILocation(line: 67, column: 33, scope: !14533, inlinedAt: !14656)
!14659 = !DILocation(line: 139, column: 15, scope: !14646, inlinedAt: !14653)
!14660 = !DILocation(line: 139, column: 25, scope: !14646, inlinedAt: !14653)
!14661 = !DILocation(line: 1894, column: 4, scope: !14654)
!14662 = !DILocation(line: 1895, column: 10, scope: !14654)
!14663 = !DILocation(line: 1896, column: 4, scope: !14654)
!14664 = !DILocation(line: 1898, column: 3, scope: !14654)
!14665 = !DILocation(line: 0, scope: !12331, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 1887, column: 2, scope: !14641)
!14667 = !DILocation(line: 194, column: 2, scope: !12339, inlinedAt: !14666)
!14668 = !DILocation(line: 194, column: 2, scope: !12340, inlinedAt: !14666)
!14669 = !DILocation(line: 194, column: 2, scope: !12343, inlinedAt: !14666)
!14670 = !DILocation(line: 0, scope: !12345, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 215, column: 2, scope: !12331, inlinedAt: !14666)
!14672 = !DILocation(line: 95, column: 2, scope: !12345, inlinedAt: !14671)
!14673 = !DILocation(line: 1901, column: 2, scope: !14616)
!14674 = distinct !DISubprogram(name: "z_sched_wait", scope: !1896, file: !1896, line: 1904, type: !14675, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !14678)
!14675 = !DISubroutineType(types: !14676)
!14676 = !{!105, !12300, !12289, !1820, !13228, !14677}
!14677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!14678 = !{!14679, !14680, !14681, !14682, !14683, !14684}
!14679 = !DILocalVariable(name: "lock", arg: 1, scope: !14674, file: !1896, line: 1904, type: !12300)
!14680 = !DILocalVariable(name: "key", arg: 2, scope: !14674, file: !1896, line: 1904, type: !12289)
!14681 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14674, file: !1896, line: 1905, type: !1820)
!14682 = !DILocalVariable(name: "timeout", arg: 4, scope: !14674, file: !1896, line: 1905, type: !13228)
!14683 = !DILocalVariable(name: "data", arg: 5, scope: !14674, file: !1896, line: 1905, type: !14677)
!14684 = !DILocalVariable(name: "ret", scope: !14674, file: !1896, line: 1907, type: !105)
!14685 = !DILocation(line: 0, scope: !14674)
!14686 = !DILocation(line: 1907, column: 12, scope: !14674)
!14687 = !DILocation(line: 1909, column: 11, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14674, file: !1896, line: 1909, column: 6)
!14689 = !DILocation(line: 1909, column: 6, scope: !14674)
!14690 = !DILocation(line: 1910, column: 11, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14688, file: !1896, line: 1909, column: 20)
!14692 = !DILocation(line: 1910, column: 26, scope: !14691)
!14693 = !DILocation(line: 1910, column: 9, scope: !14691)
!14694 = !DILocation(line: 1911, column: 2, scope: !14691)
!14695 = !DILocation(line: 1912, column: 2, scope: !14674)
!14696 = distinct !DISubprogram(name: "z_data_copy", scope: !14697, file: !14697, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !397)
!14697 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14698 = !DILocation(line: 24, column: 2, scope: !14696)
!14699 = !DILocation(line: 27, column: 2, scope: !14696)
!14700 = !DILocation(line: 71, column: 1, scope: !14696)
!14701 = distinct !DISubprogram(name: "z_add_timeout", scope: !1933, file: !1933, line: 88, type: !14702, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14708)
!14702 = !DISubroutineType(types: !14703)
!14703 = !{null, !1906, !1925, !14704}
!14704 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14705)
!14705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14706)
!14706 = !{!14707}
!14707 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14705, file: !108, line: 66, baseType: !107, size: 64)
!14708 = !{!14709, !14710, !14711, !14712, !14718, !14719, !14722, !14725}
!14709 = !DILocalVariable(name: "to", arg: 1, scope: !14701, file: !1933, line: 88, type: !1906)
!14710 = !DILocalVariable(name: "fn", arg: 2, scope: !14701, file: !1933, line: 88, type: !1925)
!14711 = !DILocalVariable(name: "timeout", arg: 3, scope: !14701, file: !1933, line: 89, type: !14704)
!14712 = !DILocalVariable(name: "__i", scope: !14713, file: !1933, line: 102, type: !14714)
!14713 = distinct !DILexicalBlock(scope: !14701, file: !1933, line: 102, column: 2)
!14714 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !14715)
!14715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !14716)
!14716 = !{!14717}
!14717 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14715, file: !236, line: 33, baseType: !105, size: 32)
!14718 = !DILocalVariable(name: "__key", scope: !14713, file: !1933, line: 102, type: !14714)
!14719 = !DILocalVariable(name: "t", scope: !14720, file: !1933, line: 103, type: !1906)
!14720 = distinct !DILexicalBlock(scope: !14721, file: !1933, line: 102, column: 24)
!14721 = distinct !DILexicalBlock(scope: !14713, file: !1933, line: 102, column: 2)
!14722 = !DILocalVariable(name: "ticks", scope: !14723, file: !1933, line: 107, type: !107)
!14723 = distinct !DILexicalBlock(scope: !14724, file: !1933, line: 106, column: 39)
!14724 = distinct !DILexicalBlock(scope: !14720, file: !1933, line: 105, column: 7)
!14725 = !DILocalVariable(name: "next_time", scope: !14726, file: !1933, line: 137, type: !116)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !1933, line: 127, column: 22)
!14727 = distinct !DILexicalBlock(scope: !14720, file: !1933, line: 127, column: 7)
!14728 = !DILocation(line: 0, scope: !14701)
!14729 = !DILocation(line: 91, column: 6, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14701, file: !1933, line: 91, column: 6)
!14731 = !DILocation(line: 91, column: 6, scope: !14701)
!14732 = !DILocation(line: 99, column: 2, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14734, file: !1933, line: 99, column: 2)
!14734 = distinct !DILexicalBlock(scope: !14701, file: !1933, line: 99, column: 2)
!14735 = !DILocation(line: 99, column: 2, scope: !14734)
!14736 = !DILocation(line: 99, column: 2, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14733, file: !1933, line: 99, column: 2)
!14738 = !DILocation(line: 100, column: 6, scope: !14701)
!14739 = !DILocation(line: 100, column: 9, scope: !14701)
!14740 = !DILocation(line: 0, scope: !14713)
!14741 = !DILocalVariable(name: "l", arg: 1, scope: !14742, file: !236, line: 136, type: !14745)
!14742 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !14743, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14746)
!14743 = !DISubroutineType(types: !14744)
!14744 = !{!14714, !14745}
!14745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 32)
!14746 = !{!14741, !14747}
!14747 = !DILocalVariable(name: "k", scope: !14742, file: !236, line: 139, type: !14714)
!14748 = !DILocation(line: 0, scope: !14742, inlinedAt: !14749)
!14749 = distinct !DILocation(line: 102, column: 2, scope: !14713)
!14750 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !14755)
!14751 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14752)
!14752 = !{!14753, !14754}
!14753 = !DILocalVariable(name: "key", scope: !14751, file: !6640, line: 44, type: !32)
!14754 = !DILocalVariable(name: "tmp", scope: !14751, file: !6640, line: 53, type: !32)
!14755 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !14749)
!14756 = !{i64 1329469}
!14757 = !DILocation(line: 0, scope: !14751, inlinedAt: !14755)
!14758 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !14749)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !236, line: 148, column: 2)
!14760 = distinct !DILexicalBlock(scope: !14742, file: !236, line: 148, column: 2)
!14761 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !14749)
!14762 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !14749)
!14763 = distinct !DILexicalBlock(scope: !14759, file: !236, line: 148, column: 2)
!14764 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !14749)
!14765 = !DILocation(line: 106, column: 33, scope: !14724)
!14766 = !DILocation(line: 105, column: 7, scope: !14720)
!14767 = !DILocation(line: 107, column: 50, scope: !14723)
!14768 = !DILocation(line: 107, column: 48, scope: !14723)
!14769 = !DILocation(line: 0, scope: !14723)
!14770 = !DILocation(line: 109, column: 17, scope: !14723)
!14771 = !DILocation(line: 110, column: 3, scope: !14723)
!14772 = !DILocation(line: 111, column: 31, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14724, file: !1933, line: 110, column: 10)
!14774 = !DILocation(line: 111, column: 37, scope: !14773)
!14775 = !DILocation(line: 111, column: 35, scope: !14773)
!14776 = !DILocation(line: 0, scope: !14724)
!14777 = !DILocation(line: 109, column: 8, scope: !14723)
!14778 = !DILocation(line: 109, column: 15, scope: !14723)
!14779 = !DILocation(line: 114, column: 12, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14720, file: !1933, line: 114, column: 3)
!14781 = !DILocation(line: 0, scope: !14720)
!14782 = !DILocation(line: 114, column: 3, scope: !14780)
!14783 = !DILocation(line: 115, column: 24, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14785, file: !1933, line: 115, column: 8)
!14785 = distinct !DILexicalBlock(scope: !14786, file: !1933, line: 114, column: 45)
!14786 = distinct !DILexicalBlock(scope: !14780, file: !1933, line: 114, column: 3)
!14787 = !DILocation(line: 115, column: 11, scope: !14784)
!14788 = !DILocation(line: 115, column: 18, scope: !14784)
!14789 = !DILocation(line: 115, column: 8, scope: !14785)
!14790 = !DILocation(line: 116, column: 15, scope: !14791)
!14791 = distinct !DILexicalBlock(scope: !14784, file: !1933, line: 115, column: 32)
!14792 = !DILocation(line: 117, column: 26, scope: !14791)
!14793 = !DILocation(line: 117, column: 5, scope: !14791)
!14794 = !DILocation(line: 123, column: 7, scope: !14720)
!14795 = !DILocation(line: 120, column: 15, scope: !14785)
!14796 = !DILocation(line: 114, column: 36, scope: !14786)
!14797 = distinct !{!14797, !14782, !14798}
!14798 = !DILocation(line: 121, column: 3, scope: !14780)
!14799 = !DILocation(line: 124, column: 4, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14801, file: !1933, line: 123, column: 18)
!14801 = distinct !DILexicalBlock(scope: !14720, file: !1933, line: 123, column: 7)
!14802 = !DILocation(line: 125, column: 3, scope: !14800)
!14803 = !DILocation(line: 127, column: 13, scope: !14727)
!14804 = !DILocation(line: 127, column: 10, scope: !14727)
!14805 = !DILocation(line: 127, column: 7, scope: !14720)
!14806 = !DILocation(line: 137, column: 24, scope: !14726)
!14807 = !DILocation(line: 0, scope: !14726)
!14808 = !DILocation(line: 139, column: 18, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14726, file: !1933, line: 139, column: 8)
!14810 = !DILocation(line: 139, column: 23, scope: !14809)
!14811 = !DILocation(line: 141, column: 5, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14809, file: !1933, line: 140, column: 48)
!14813 = !DILocation(line: 142, column: 4, scope: !14812)
!14814 = !DILocalVariable(name: "key", arg: 2, scope: !14815, file: !236, line: 190, type: !14714)
!14815 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !14816, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14818)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{null, !14745, !14714}
!14818 = !{!14819, !14814}
!14819 = !DILocalVariable(name: "l", arg: 1, scope: !14815, file: !236, line: 189, type: !14745)
!14820 = !DILocation(line: 0, scope: !14815, inlinedAt: !14821)
!14821 = distinct !DILocation(line: 102, column: 2, scope: !14721)
!14822 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !14821)
!14823 = distinct !DILexicalBlock(scope: !14824, file: !236, line: 194, column: 2)
!14824 = distinct !DILexicalBlock(scope: !14815, file: !236, line: 194, column: 2)
!14825 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !14821)
!14826 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !14821)
!14827 = distinct !DILexicalBlock(scope: !14823, file: !236, line: 194, column: 2)
!14828 = !DILocalVariable(name: "key", arg: 1, scope: !14829, file: !6640, line: 84, type: !32)
!14829 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14830)
!14830 = !{!14828}
!14831 = !DILocation(line: 0, scope: !14829, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !14821)
!14833 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !14832)
!14834 = !{i64 1330286}
!14835 = !DILocation(line: 148, column: 1, scope: !14701)
!14836 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !14837, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14841)
!14837 = !DISubroutineType(types: !14838)
!14838 = !{!540, !14839}
!14839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14840, size: 32)
!14840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!14841 = !{!14842}
!14842 = !DILocalVariable(name: "node", arg: 1, scope: !14836, file: !137, line: 225, type: !14839)
!14843 = !DILocation(line: 0, scope: !14836)
!14844 = !DILocation(line: 227, column: 15, scope: !14836)
!14845 = !DILocation(line: 227, column: 20, scope: !14836)
!14846 = !DILocation(line: 227, column: 2, scope: !14836)
!14847 = distinct !DISubprogram(name: "elapsed", scope: !1933, file: !1933, line: 62, type: !14848, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !397)
!14848 = !DISubroutineType(types: !14849)
!14849 = !{!116}
!14850 = !DILocation(line: 64, column: 9, scope: !14847)
!14851 = !DILocation(line: 64, column: 28, scope: !14847)
!14852 = !DILocation(line: 64, column: 35, scope: !14847)
!14853 = !DILocation(line: 64, column: 2, scope: !14847)
!14854 = distinct !DISubprogram(name: "first", scope: !1933, file: !1933, line: 39, type: !14855, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14857)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{!1906}
!14857 = !{!14858}
!14858 = !DILocalVariable(name: "t", scope: !14854, file: !1933, line: 41, type: !14859)
!14859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!14860 = !DILocation(line: 41, column: 19, scope: !14854)
!14861 = !DILocation(line: 0, scope: !14854)
!14862 = !DILocation(line: 43, column: 9, scope: !14854)
!14863 = !DILocation(line: 43, column: 2, scope: !14854)
!14864 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !14865, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14867)
!14865 = !DISubroutineType(types: !14866)
!14866 = !{null, !14859, !14859}
!14867 = !{!14868, !14869, !14870}
!14868 = !DILocalVariable(name: "successor", arg: 1, scope: !14864, file: !137, line: 443, type: !14859)
!14869 = !DILocalVariable(name: "node", arg: 2, scope: !14864, file: !137, line: 443, type: !14859)
!14870 = !DILocalVariable(name: "prev", scope: !14864, file: !137, line: 445, type: !14871)
!14871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14859)
!14872 = !DILocation(line: 0, scope: !14864)
!14873 = !DILocation(line: 445, column: 39, scope: !14864)
!14874 = !DILocation(line: 447, column: 8, scope: !14864)
!14875 = !DILocation(line: 447, column: 13, scope: !14864)
!14876 = !DILocation(line: 448, column: 8, scope: !14864)
!14877 = !DILocation(line: 448, column: 13, scope: !14864)
!14878 = !DILocation(line: 449, column: 8, scope: !14864)
!14879 = !DILocation(line: 449, column: 13, scope: !14864)
!14880 = !DILocation(line: 450, column: 18, scope: !14864)
!14881 = !DILocation(line: 451, column: 1, scope: !14864)
!14882 = distinct !DISubprogram(name: "next", scope: !1933, file: !1933, line: 46, type: !14883, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14885)
!14883 = !DISubroutineType(types: !14884)
!14884 = !{!1906, !1906}
!14885 = !{!14886, !14887}
!14886 = !DILocalVariable(name: "t", arg: 1, scope: !14882, file: !1933, line: 46, type: !1906)
!14887 = !DILocalVariable(name: "n", scope: !14882, file: !1933, line: 48, type: !14859)
!14888 = !DILocation(line: 0, scope: !14882)
!14889 = !DILocation(line: 48, column: 58, scope: !14882)
!14890 = !DILocation(line: 48, column: 19, scope: !14882)
!14891 = !DILocation(line: 50, column: 9, scope: !14882)
!14892 = !DILocation(line: 50, column: 2, scope: !14882)
!14893 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !14894, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14897)
!14894 = !DISubroutineType(types: !14895)
!14895 = !{null, !14896, !14859}
!14896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!14897 = !{!14898, !14899, !14900}
!14898 = !DILocalVariable(name: "list", arg: 1, scope: !14893, file: !137, line: 404, type: !14896)
!14899 = !DILocalVariable(name: "node", arg: 2, scope: !14893, file: !137, line: 404, type: !14859)
!14900 = !DILocalVariable(name: "tail", scope: !14893, file: !137, line: 406, type: !14871)
!14901 = !DILocation(line: 0, scope: !14893)
!14902 = !DILocation(line: 406, column: 34, scope: !14893)
!14903 = !DILocation(line: 408, column: 8, scope: !14893)
!14904 = !DILocation(line: 408, column: 13, scope: !14893)
!14905 = !DILocation(line: 409, column: 8, scope: !14893)
!14906 = !DILocation(line: 409, column: 13, scope: !14893)
!14907 = !DILocation(line: 411, column: 8, scope: !14893)
!14908 = !DILocation(line: 411, column: 13, scope: !14893)
!14909 = !DILocation(line: 412, column: 13, scope: !14893)
!14910 = !DILocation(line: 413, column: 1, scope: !14893)
!14911 = distinct !DISubprogram(name: "next_timeout", scope: !1933, file: !1933, line: 67, type: !14848, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14912)
!14912 = !{!14913, !14914, !14915}
!14913 = !DILocalVariable(name: "to", scope: !14911, file: !1933, line: 69, type: !1906)
!14914 = !DILocalVariable(name: "ticks_elapsed", scope: !14911, file: !1933, line: 70, type: !116)
!14915 = !DILocalVariable(name: "ret", scope: !14911, file: !1933, line: 71, type: !116)
!14916 = !DILocation(line: 69, column: 24, scope: !14911)
!14917 = !DILocation(line: 0, scope: !14911)
!14918 = !DILocation(line: 70, column: 26, scope: !14911)
!14919 = !DILocation(line: 73, column: 10, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14911, file: !1933, line: 73, column: 6)
!14921 = !DILocation(line: 73, column: 19, scope: !14920)
!14922 = !DILocation(line: 74, column: 21, scope: !14920)
!14923 = !DILocation(line: 74, column: 30, scope: !14920)
!14924 = !DILocation(line: 74, column: 28, scope: !14920)
!14925 = !DILocation(line: 74, column: 45, scope: !14920)
!14926 = !DILocation(line: 73, column: 6, scope: !14911)
!14927 = !DILocation(line: 77, column: 9, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14920, file: !1933, line: 76, column: 9)
!14929 = !DILocation(line: 0, scope: !14920)
!14930 = !DILocation(line: 81, column: 20, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14911, file: !1933, line: 81, column: 6)
!14932 = !DILocation(line: 81, column: 6, scope: !14931)
!14933 = !DILocation(line: 81, column: 32, scope: !14931)
!14934 = !DILocation(line: 85, column: 2, scope: !14911)
!14935 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !14936, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14938)
!14936 = !DISubroutineType(types: !14937)
!14937 = !{!14859, !14896, !14859}
!14938 = !{!14939, !14940}
!14939 = !DILocalVariable(name: "list", arg: 1, scope: !14935, file: !137, line: 341, type: !14896)
!14940 = !DILocalVariable(name: "node", arg: 2, scope: !14935, file: !137, line: 342, type: !14859)
!14941 = !DILocation(line: 0, scope: !14935)
!14942 = !DILocation(line: 344, column: 15, scope: !14935)
!14943 = !DILocation(line: 344, column: 9, scope: !14935)
!14944 = !DILocation(line: 344, column: 26, scope: !14935)
!14945 = !DILocation(line: 344, column: 2, scope: !14935)
!14946 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !14936, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14947)
!14947 = !{!14948, !14949}
!14948 = !DILocalVariable(name: "list", arg: 1, scope: !14946, file: !137, line: 325, type: !14896)
!14949 = !DILocalVariable(name: "node", arg: 2, scope: !14946, file: !137, line: 326, type: !14859)
!14950 = !DILocation(line: 0, scope: !14946)
!14951 = !DILocation(line: 328, column: 24, scope: !14946)
!14952 = !DILocation(line: 328, column: 15, scope: !14946)
!14953 = !DILocation(line: 328, column: 9, scope: !14946)
!14954 = !DILocation(line: 328, column: 45, scope: !14946)
!14955 = !DILocation(line: 328, column: 2, scope: !14946)
!14956 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !14957, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14959)
!14957 = !DISubroutineType(types: !14958)
!14958 = !{!14859, !14896}
!14959 = !{!14960}
!14960 = !DILocalVariable(name: "list", arg: 1, scope: !14956, file: !137, line: 294, type: !14896)
!14961 = !DILocation(line: 0, scope: !14956)
!14962 = !DILocation(line: 296, column: 9, scope: !14956)
!14963 = !DILocation(line: 296, column: 2, scope: !14956)
!14964 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !14965, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14967)
!14965 = !DISubroutineType(types: !14966)
!14966 = !{!540, !14896}
!14967 = !{!14968}
!14968 = !DILocalVariable(name: "list", arg: 1, scope: !14964, file: !137, line: 266, type: !14896)
!14969 = !DILocation(line: 0, scope: !14964)
!14970 = !DILocation(line: 268, column: 15, scope: !14964)
!14971 = !DILocation(line: 268, column: 20, scope: !14964)
!14972 = !DILocation(line: 268, column: 2, scope: !14964)
!14973 = distinct !DISubprogram(name: "z_abort_timeout", scope: !1933, file: !1933, line: 150, type: !14974, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !14976)
!14974 = !DISubroutineType(types: !14975)
!14975 = !{!105, !1906}
!14976 = !{!14977, !14978, !14979, !14981}
!14977 = !DILocalVariable(name: "to", arg: 1, scope: !14973, file: !1933, line: 150, type: !1906)
!14978 = !DILocalVariable(name: "ret", scope: !14973, file: !1933, line: 152, type: !105)
!14979 = !DILocalVariable(name: "__i", scope: !14980, file: !1933, line: 154, type: !14714)
!14980 = distinct !DILexicalBlock(scope: !14973, file: !1933, line: 154, column: 2)
!14981 = !DILocalVariable(name: "__key", scope: !14980, file: !1933, line: 154, type: !14714)
!14982 = !DILocation(line: 0, scope: !14973)
!14983 = !DILocation(line: 0, scope: !14980)
!14984 = !DILocation(line: 0, scope: !14742, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 154, column: 2, scope: !14980)
!14986 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !14987)
!14987 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !14985)
!14988 = !DILocation(line: 0, scope: !14751, inlinedAt: !14987)
!14989 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !14985)
!14990 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !14985)
!14991 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !14985)
!14992 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !14985)
!14993 = !DILocation(line: 155, column: 7, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14995, file: !1933, line: 155, column: 7)
!14995 = distinct !DILexicalBlock(scope: !14996, file: !1933, line: 154, column: 24)
!14996 = distinct !DILexicalBlock(scope: !14980, file: !1933, line: 154, column: 2)
!14997 = !DILocation(line: 155, column: 7, scope: !14995)
!14998 = !DILocation(line: 156, column: 4, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14994, file: !1933, line: 155, column: 39)
!15000 = !DILocation(line: 158, column: 3, scope: !14999)
!15001 = !DILocation(line: 0, scope: !14815, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 154, column: 2, scope: !14996)
!15003 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15002)
!15004 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15002)
!15005 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15002)
!15006 = !DILocation(line: 0, scope: !14829, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15002)
!15008 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15007)
!15009 = !DILocation(line: 161, column: 2, scope: !14973)
!15010 = distinct !DISubprogram(name: "remove_timeout", scope: !1933, file: !1933, line: 53, type: !1927, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15011)
!15011 = !{!15012}
!15012 = !DILocalVariable(name: "t", arg: 1, scope: !15010, file: !1933, line: 53, type: !1906)
!15013 = !DILocation(line: 0, scope: !15010)
!15014 = !DILocation(line: 55, column: 6, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15010, file: !1933, line: 55, column: 6)
!15016 = !DILocation(line: 55, column: 14, scope: !15015)
!15017 = !DILocation(line: 55, column: 6, scope: !15010)
!15018 = !DILocation(line: 56, column: 25, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15015, file: !1933, line: 55, column: 23)
!15020 = !DILocation(line: 56, column: 12, scope: !15019)
!15021 = !DILocation(line: 56, column: 19, scope: !15019)
!15022 = !DILocation(line: 57, column: 2, scope: !15019)
!15023 = !DILocation(line: 59, column: 23, scope: !15010)
!15024 = !DILocation(line: 59, column: 2, scope: !15010)
!15025 = !DILocation(line: 60, column: 1, scope: !15010)
!15026 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !15027, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15029)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{null, !14859}
!15029 = !{!15030, !15031, !15032}
!15030 = !DILocalVariable(name: "node", arg: 1, scope: !15026, file: !137, line: 496, type: !14859)
!15031 = !DILocalVariable(name: "prev", scope: !15026, file: !137, line: 498, type: !14871)
!15032 = !DILocalVariable(name: "next", scope: !15026, file: !137, line: 499, type: !14871)
!15033 = !DILocation(line: 0, scope: !15026)
!15034 = !DILocation(line: 498, column: 34, scope: !15026)
!15035 = !DILocation(line: 499, column: 34, scope: !15026)
!15036 = !DILocation(line: 501, column: 8, scope: !15026)
!15037 = !DILocation(line: 501, column: 13, scope: !15026)
!15038 = !DILocation(line: 502, column: 8, scope: !15026)
!15039 = !DILocation(line: 502, column: 13, scope: !15026)
!15040 = !DILocation(line: 503, column: 2, scope: !15026)
!15041 = !DILocation(line: 504, column: 1, scope: !15026)
!15042 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !15027, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15043)
!15043 = !{!15044}
!15044 = !DILocalVariable(name: "node", arg: 1, scope: !15042, file: !137, line: 211, type: !14859)
!15045 = !DILocation(line: 0, scope: !15042)
!15046 = !DILocation(line: 213, column: 8, scope: !15042)
!15047 = !DILocation(line: 213, column: 13, scope: !15042)
!15048 = !DILocation(line: 214, column: 8, scope: !15042)
!15049 = !DILocation(line: 214, column: 13, scope: !15042)
!15050 = !DILocation(line: 215, column: 1, scope: !15042)
!15051 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !1933, file: !1933, line: 183, type: !15052, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15056)
!15052 = !DISubroutineType(types: !15053)
!15053 = !{!107, !15054}
!15054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15055, size: 32)
!15055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!15056 = !{!15057, !15058, !15059, !15061}
!15057 = !DILocalVariable(name: "timeout", arg: 1, scope: !15051, file: !1933, line: 183, type: !15054)
!15058 = !DILocalVariable(name: "ticks", scope: !15051, file: !1933, line: 185, type: !107)
!15059 = !DILocalVariable(name: "__i", scope: !15060, file: !1933, line: 187, type: !14714)
!15060 = distinct !DILexicalBlock(scope: !15051, file: !1933, line: 187, column: 2)
!15061 = !DILocalVariable(name: "__key", scope: !15060, file: !1933, line: 187, type: !14714)
!15062 = !DILocation(line: 0, scope: !15051)
!15063 = !DILocation(line: 0, scope: !15060)
!15064 = !DILocation(line: 0, scope: !14742, inlinedAt: !15065)
!15065 = distinct !DILocation(line: 187, column: 2, scope: !15060)
!15066 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15067)
!15067 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15065)
!15068 = !DILocation(line: 0, scope: !14751, inlinedAt: !15067)
!15069 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15065)
!15070 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15065)
!15071 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15065)
!15072 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15065)
!15073 = !DILocation(line: 188, column: 11, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15075, file: !1933, line: 187, column: 24)
!15075 = distinct !DILexicalBlock(scope: !15060, file: !1933, line: 187, column: 2)
!15076 = !DILocation(line: 0, scope: !14815, inlinedAt: !15077)
!15077 = distinct !DILocation(line: 187, column: 2, scope: !15075)
!15078 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15077)
!15079 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15077)
!15080 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15077)
!15081 = !DILocation(line: 0, scope: !14829, inlinedAt: !15082)
!15082 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15077)
!15083 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15082)
!15084 = !DILocation(line: 191, column: 2, scope: !15051)
!15085 = distinct !DISubprogram(name: "timeout_rem", scope: !1933, file: !1933, line: 165, type: !15052, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15086)
!15086 = !{!15087, !15088, !15089}
!15087 = !DILocalVariable(name: "timeout", arg: 1, scope: !15085, file: !1933, line: 165, type: !15054)
!15088 = !DILocalVariable(name: "ticks", scope: !15085, file: !1933, line: 167, type: !107)
!15089 = !DILocalVariable(name: "t", scope: !15090, file: !1933, line: 173, type: !1906)
!15090 = distinct !DILexicalBlock(scope: !15085, file: !1933, line: 173, column: 2)
!15091 = !DILocation(line: 0, scope: !15085)
!15092 = !DILocation(line: 169, column: 6, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15085, file: !1933, line: 169, column: 6)
!15094 = !DILocation(line: 169, column: 6, scope: !15085)
!15095 = !DILocation(line: 173, column: 28, scope: !15090)
!15096 = !DILocation(line: 0, scope: !15090)
!15097 = !DILocation(line: 173, column: 39, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !15090, file: !1933, line: 173, column: 2)
!15099 = !DILocation(line: 173, column: 2, scope: !15090)
!15100 = !DILocation(line: 174, column: 15, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !15098, file: !1933, line: 173, column: 61)
!15102 = !DILocation(line: 174, column: 9, scope: !15101)
!15103 = !DILocation(line: 175, column: 15, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !15101, file: !1933, line: 175, column: 7)
!15105 = !DILocation(line: 175, column: 7, scope: !15101)
!15106 = !DILocation(line: 173, column: 52, scope: !15098)
!15107 = distinct !{!15107, !15099, !15108}
!15108 = !DILocation(line: 178, column: 2, scope: !15090)
!15109 = !DILocation(line: 180, column: 17, scope: !15085)
!15110 = !DILocation(line: 180, column: 15, scope: !15085)
!15111 = !DILocation(line: 180, column: 2, scope: !15085)
!15112 = !DILocation(line: 181, column: 1, scope: !15085)
!15113 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11081, file: !11081, line: 35, type: !15114, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15116)
!15114 = !DISubroutineType(types: !15115)
!15115 = !{!540, !15054}
!15116 = !{!15117}
!15117 = !DILocalVariable(name: "to", arg: 1, scope: !15113, file: !11081, line: 35, type: !15054)
!15118 = !DILocation(line: 0, scope: !15113)
!15119 = !DILocation(line: 37, column: 35, scope: !15113)
!15120 = !DILocation(line: 37, column: 10, scope: !15113)
!15121 = !DILocation(line: 37, column: 9, scope: !15113)
!15122 = !DILocation(line: 37, column: 2, scope: !15113)
!15123 = distinct !DISubprogram(name: "z_timeout_expires", scope: !1933, file: !1933, line: 194, type: !15052, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15124)
!15124 = !{!15125, !15126, !15127, !15129}
!15125 = !DILocalVariable(name: "timeout", arg: 1, scope: !15123, file: !1933, line: 194, type: !15054)
!15126 = !DILocalVariable(name: "ticks", scope: !15123, file: !1933, line: 196, type: !107)
!15127 = !DILocalVariable(name: "__i", scope: !15128, file: !1933, line: 198, type: !14714)
!15128 = distinct !DILexicalBlock(scope: !15123, file: !1933, line: 198, column: 2)
!15129 = !DILocalVariable(name: "__key", scope: !15128, file: !1933, line: 198, type: !14714)
!15130 = !DILocation(line: 0, scope: !15123)
!15131 = !DILocation(line: 0, scope: !15128)
!15132 = !DILocation(line: 0, scope: !14742, inlinedAt: !15133)
!15133 = distinct !DILocation(line: 198, column: 2, scope: !15128)
!15134 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15133)
!15136 = !DILocation(line: 0, scope: !14751, inlinedAt: !15135)
!15137 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15133)
!15138 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15133)
!15139 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15133)
!15140 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15133)
!15141 = !DILocation(line: 199, column: 11, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15143, file: !1933, line: 198, column: 24)
!15143 = distinct !DILexicalBlock(scope: !15128, file: !1933, line: 198, column: 2)
!15144 = !DILocation(line: 199, column: 23, scope: !15142)
!15145 = !DILocation(line: 0, scope: !14815, inlinedAt: !15146)
!15146 = distinct !DILocation(line: 198, column: 2, scope: !15143)
!15147 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15146)
!15148 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15146)
!15149 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15146)
!15150 = !DILocation(line: 0, scope: !14829, inlinedAt: !15151)
!15151 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15146)
!15152 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15151)
!15153 = !DILocation(line: 199, column: 21, scope: !15142)
!15154 = !DILocation(line: 202, column: 2, scope: !15123)
!15155 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !1933, file: !1933, line: 205, type: !14848, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15156)
!15156 = !{!15157, !15158, !15160}
!15157 = !DILocalVariable(name: "ret", scope: !15155, file: !1933, line: 207, type: !116)
!15158 = !DILocalVariable(name: "__i", scope: !15159, file: !1933, line: 209, type: !14714)
!15159 = distinct !DILexicalBlock(scope: !15155, file: !1933, line: 209, column: 2)
!15160 = !DILocalVariable(name: "__key", scope: !15159, file: !1933, line: 209, type: !14714)
!15161 = !DILocation(line: 0, scope: !15155)
!15162 = !DILocation(line: 0, scope: !15159)
!15163 = !DILocation(line: 0, scope: !14742, inlinedAt: !15164)
!15164 = distinct !DILocation(line: 209, column: 2, scope: !15159)
!15165 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15166)
!15166 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15164)
!15167 = !DILocation(line: 0, scope: !14751, inlinedAt: !15166)
!15168 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15164)
!15169 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15164)
!15170 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15164)
!15171 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15164)
!15172 = !DILocation(line: 210, column: 9, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15174, file: !1933, line: 209, column: 24)
!15174 = distinct !DILexicalBlock(scope: !15159, file: !1933, line: 209, column: 2)
!15175 = !DILocation(line: 0, scope: !14815, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 209, column: 2, scope: !15174)
!15177 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15176)
!15178 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15176)
!15179 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15176)
!15180 = !DILocation(line: 0, scope: !14829, inlinedAt: !15181)
!15181 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15176)
!15182 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15181)
!15183 = !DILocation(line: 212, column: 2, scope: !15155)
!15184 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !1933, file: !1933, line: 215, type: !9742, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15185)
!15185 = !{!15186, !15187, !15188, !15190, !15191, !15194, !15195}
!15186 = !DILocalVariable(name: "ticks", arg: 1, scope: !15184, file: !1933, line: 215, type: !116)
!15187 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15184, file: !1933, line: 215, type: !540)
!15188 = !DILocalVariable(name: "__i", scope: !15189, file: !1933, line: 217, type: !14714)
!15189 = distinct !DILexicalBlock(scope: !15184, file: !1933, line: 217, column: 2)
!15190 = !DILocalVariable(name: "__key", scope: !15189, file: !1933, line: 217, type: !14714)
!15191 = !DILocalVariable(name: "next_to", scope: !15192, file: !1933, line: 218, type: !105)
!15192 = distinct !DILexicalBlock(scope: !15193, file: !1933, line: 217, column: 24)
!15193 = distinct !DILexicalBlock(scope: !15189, file: !1933, line: 217, column: 2)
!15194 = !DILocalVariable(name: "sooner", scope: !15192, file: !1933, line: 219, type: !540)
!15195 = !DILocalVariable(name: "imminent", scope: !15192, file: !1933, line: 221, type: !540)
!15196 = !DILocation(line: 0, scope: !15184)
!15197 = !DILocation(line: 0, scope: !15189)
!15198 = !DILocation(line: 0, scope: !14742, inlinedAt: !15199)
!15199 = distinct !DILocation(line: 217, column: 2, scope: !15189)
!15200 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15201)
!15201 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15199)
!15202 = !DILocation(line: 0, scope: !14751, inlinedAt: !15201)
!15203 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15199)
!15204 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15199)
!15205 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15199)
!15206 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15199)
!15207 = !DILocation(line: 218, column: 17, scope: !15192)
!15208 = !DILocation(line: 0, scope: !15192)
!15209 = !DILocation(line: 221, column: 27, scope: !15192)
!15210 = !DILocation(line: 233, column: 17, scope: !15211)
!15211 = distinct !DILexicalBlock(scope: !15192, file: !1933, line: 233, column: 7)
!15212 = !DILocation(line: 234, column: 26, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15211, file: !1933, line: 233, column: 56)
!15214 = !DILocation(line: 234, column: 4, scope: !15213)
!15215 = !DILocation(line: 235, column: 3, scope: !15213)
!15216 = !DILocation(line: 0, scope: !14815, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 217, column: 2, scope: !15193)
!15218 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15217)
!15219 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15217)
!15220 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15217)
!15221 = !DILocation(line: 0, scope: !14829, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15217)
!15223 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15222)
!15224 = !DILocation(line: 237, column: 1, scope: !15184)
!15225 = distinct !DISubprogram(name: "sys_clock_announce", scope: !1933, file: !1933, line: 239, type: !15226, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15228)
!15226 = !DISubroutineType(types: !15227)
!15227 = !{null, !116}
!15228 = !{!15229, !15230, !15231, !15233}
!15229 = !DILocalVariable(name: "ticks", arg: 1, scope: !15225, file: !1933, line: 239, type: !116)
!15230 = !DILocalVariable(name: "key", scope: !15225, file: !1933, line: 245, type: !14714)
!15231 = !DILocalVariable(name: "t", scope: !15232, file: !1933, line: 262, type: !1906)
!15232 = distinct !DILexicalBlock(scope: !15225, file: !1933, line: 261, column: 67)
!15233 = !DILocalVariable(name: "dt", scope: !15232, file: !1933, line: 263, type: !105)
!15234 = !DILocation(line: 0, scope: !15225)
!15235 = !DILocation(line: 242, column: 2, scope: !15225)
!15236 = !DILocation(line: 0, scope: !14742, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 245, column: 25, scope: !15225)
!15238 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15237)
!15240 = !DILocation(line: 0, scope: !14751, inlinedAt: !15239)
!15241 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15237)
!15242 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15237)
!15243 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15237)
!15244 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15237)
!15245 = !DILocation(line: 261, column: 9, scope: !15225)
!15246 = !DILocation(line: 261, column: 17, scope: !15225)
!15247 = !DILocation(line: 261, column: 25, scope: !15225)
!15248 = !DILocation(line: 261, column: 37, scope: !15225)
!15249 = !DILocation(line: 261, column: 47, scope: !15225)
!15250 = !DILocation(line: 261, column: 44, scope: !15225)
!15251 = !DILocation(line: 261, column: 2, scope: !15225)
!15252 = !DILocation(line: 0, scope: !15232)
!15253 = !DILocation(line: 263, column: 12, scope: !15232)
!15254 = !DILocation(line: 265, column: 16, scope: !15232)
!15255 = !DILocation(line: 265, column: 13, scope: !15232)
!15256 = !DILocation(line: 266, column: 13, scope: !15232)
!15257 = !DILocation(line: 267, column: 3, scope: !15232)
!15258 = !DILocation(line: 0, scope: !14815, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 269, column: 3, scope: !15232)
!15260 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15259)
!15261 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15259)
!15262 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15259)
!15263 = !DILocation(line: 0, scope: !14829, inlinedAt: !15264)
!15264 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15259)
!15265 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15264)
!15266 = !DILocation(line: 270, column: 6, scope: !15232)
!15267 = !DILocation(line: 270, column: 3, scope: !15232)
!15268 = !DILocation(line: 0, scope: !14742, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 271, column: 9, scope: !15232)
!15270 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15269)
!15272 = !DILocation(line: 0, scope: !14751, inlinedAt: !15271)
!15273 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15269)
!15274 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15269)
!15275 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15269)
!15276 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15269)
!15277 = !DILocation(line: 272, column: 22, scope: !15232)
!15278 = distinct !{!15278, !15251, !15279}
!15279 = !DILocation(line: 273, column: 2, scope: !15225)
!15280 = !DILocation(line: 276, column: 19, scope: !15281)
!15281 = distinct !DILexicalBlock(scope: !15282, file: !1933, line: 275, column: 23)
!15282 = distinct !DILexicalBlock(scope: !15225, file: !1933, line: 275, column: 6)
!15283 = !DILocation(line: 277, column: 2, scope: !15281)
!15284 = !DILocation(line: 279, column: 15, scope: !15225)
!15285 = !DILocation(line: 279, column: 12, scope: !15225)
!15286 = !DILocation(line: 280, column: 21, scope: !15225)
!15287 = !DILocation(line: 282, column: 24, scope: !15225)
!15288 = !DILocation(line: 282, column: 2, scope: !15225)
!15289 = !DILocation(line: 0, scope: !14815, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 284, column: 2, scope: !15225)
!15291 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15290)
!15292 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15290)
!15293 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15290)
!15294 = !DILocation(line: 0, scope: !14829, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15290)
!15296 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15295)
!15297 = !DILocation(line: 285, column: 1, scope: !15225)
!15298 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !1933, file: !1933, line: 287, type: !15299, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15301)
!15299 = !DISubroutineType(types: !15300)
!15300 = !{!109}
!15301 = !{!15302, !15303, !15305}
!15302 = !DILocalVariable(name: "t", scope: !15298, file: !1933, line: 289, type: !114)
!15303 = !DILocalVariable(name: "__i", scope: !15304, file: !1933, line: 291, type: !14714)
!15304 = distinct !DILexicalBlock(scope: !15298, file: !1933, line: 291, column: 2)
!15305 = !DILocalVariable(name: "__key", scope: !15304, file: !1933, line: 291, type: !14714)
!15306 = !DILocation(line: 0, scope: !15298)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 0, scope: !14742, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 291, column: 2, scope: !15304)
!15310 = !DILocation(line: 55, column: 2, scope: !14751, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 145, column: 10, scope: !14742, inlinedAt: !15309)
!15312 = !DILocation(line: 0, scope: !14751, inlinedAt: !15311)
!15313 = !DILocation(line: 148, column: 2, scope: !14759, inlinedAt: !15309)
!15314 = !DILocation(line: 148, column: 2, scope: !14760, inlinedAt: !15309)
!15315 = !DILocation(line: 148, column: 2, scope: !14763, inlinedAt: !15309)
!15316 = !DILocation(line: 160, column: 2, scope: !14742, inlinedAt: !15309)
!15317 = !DILocation(line: 292, column: 7, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15319, file: !1933, line: 291, column: 24)
!15319 = distinct !DILexicalBlock(scope: !15304, file: !1933, line: 291, column: 2)
!15320 = !DILocation(line: 292, column: 19, scope: !15318)
!15321 = !DILocation(line: 0, scope: !14815, inlinedAt: !15322)
!15322 = distinct !DILocation(line: 291, column: 2, scope: !15319)
!15323 = !DILocation(line: 194, column: 2, scope: !14823, inlinedAt: !15322)
!15324 = !DILocation(line: 194, column: 2, scope: !14824, inlinedAt: !15322)
!15325 = !DILocation(line: 194, column: 2, scope: !14827, inlinedAt: !15322)
!15326 = !DILocation(line: 0, scope: !14829, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 215, column: 2, scope: !14815, inlinedAt: !15322)
!15328 = !DILocation(line: 95, column: 2, scope: !14829, inlinedAt: !15327)
!15329 = !DILocation(line: 292, column: 17, scope: !15318)
!15330 = !DILocation(line: 294, column: 2, scope: !15298)
!15331 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !1933, file: !1933, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !397)
!15332 = !DILocation(line: 300, column: 19, scope: !15331)
!15333 = !DILocation(line: 300, column: 9, scope: !15331)
!15334 = !DILocation(line: 300, column: 2, scope: !15331)
!15335 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !1933, file: !1933, line: 306, type: !15299, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !397)
!15336 = !DILocation(line: 308, column: 9, scope: !15335)
!15337 = !DILocation(line: 308, column: 2, scope: !15335)
!15338 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !1933, file: !1933, line: 319, type: !6724, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15339)
!15339 = !{!15340, !15341, !15342, !15343}
!15340 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15338, file: !1933, line: 319, type: !113)
!15341 = !DILocalVariable(name: "start_cycles", scope: !15338, file: !1933, line: 328, type: !113)
!15342 = !DILocalVariable(name: "cycles_to_wait", scope: !15338, file: !1933, line: 331, type: !113)
!15343 = !DILocalVariable(name: "current_cycles", scope: !15344, file: !1933, line: 338, type: !113)
!15344 = distinct !DILexicalBlock(scope: !15345, file: !1933, line: 337, column: 11)
!15345 = distinct !DILexicalBlock(scope: !15346, file: !1933, line: 337, column: 2)
!15346 = distinct !DILexicalBlock(scope: !15338, file: !1933, line: 337, column: 2)
!15347 = !DILocation(line: 0, scope: !15338)
!15348 = !DILocation(line: 322, column: 19, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15338, file: !1933, line: 322, column: 6)
!15350 = !DILocation(line: 322, column: 6, scope: !15338)
!15351 = !DILocation(line: 328, column: 26, scope: !15338)
!15352 = !DILocation(line: 333, column: 43, scope: !15338)
!15353 = !DILocation(line: 337, column: 2, scope: !15338)
!15354 = !DILocation(line: 338, column: 29, scope: !15344)
!15355 = !DILocation(line: 0, scope: !15344)
!15356 = !DILocation(line: 341, column: 23, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15344, file: !1933, line: 341, column: 7)
!15358 = !DILocation(line: 341, column: 39, scope: !15357)
!15359 = !DILocation(line: 349, column: 1, scope: !15338)
!15360 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !397)
!15361 = !DILocation(line: 1677, column: 9, scope: !15360)
!15362 = !DILocation(line: 1677, column: 2, scope: !15360)
!15363 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !2726, file: !2726, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !397)
!15364 = !DILocation(line: 26, column: 9, scope: !15363)
!15365 = !DILocation(line: 26, column: 2, scope: !15363)
!15366 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !1933, file: !1933, line: 364, type: !15367, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !15369)
!15367 = !DISubroutineType(types: !15368)
!15368 = !{!114, !14704}
!15369 = !{!15370, !15371}
!15370 = !DILocalVariable(name: "timeout", arg: 1, scope: !15366, file: !1933, line: 364, type: !14704)
!15371 = !DILocalVariable(name: "dt", scope: !15366, file: !1933, line: 366, type: !107)
!15372 = !DILocation(line: 0, scope: !15366)
!15373 = !DILocation(line: 368, column: 6, scope: !15366)
!15374 = !DILocation(line: 371, column: 10, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15376, file: !1933, line: 370, column: 47)
!15376 = distinct !DILexicalBlock(scope: !15377, file: !1933, line: 370, column: 13)
!15377 = distinct !DILexicalBlock(scope: !15366, file: !1933, line: 368, column: 6)
!15378 = !DILocation(line: 371, column: 3, scope: !15375)
!15379 = !DILocation(line: 376, column: 58, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !1933, line: 376, column: 7)
!15381 = distinct !DILexicalBlock(scope: !15376, file: !1933, line: 372, column: 9)
!15382 = !DILocation(line: 376, column: 7, scope: !15381)
!15383 = !DILocation(line: 376, column: 43, scope: !15380)
!15384 = !DILocation(line: 377, column: 4, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15380, file: !1933, line: 376, column: 64)
!15386 = !DILocation(line: 379, column: 10, scope: !15381)
!15387 = !DILocation(line: 379, column: 33, scope: !15381)
!15388 = !DILocation(line: 379, column: 31, scope: !15381)
!15389 = !DILocation(line: 379, column: 3, scope: !15381)
!15390 = !DILocation(line: 0, scope: !15377)
!15391 = !DILocation(line: 381, column: 1, scope: !15366)
!15392 = distinct !DISubprogram(name: "boot_banner", scope: !15393, file: !15393, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !397)
!15393 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15394 = !DILocation(line: 34, column: 2, scope: !15392)
!15395 = !DILocation(line: 36, column: 1, scope: !15392)
!15396 = distinct !DISubprogram(name: "statics_init", scope: !1963, file: !1963, line: 21, type: !1969, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15397)
!15397 = !{!15398, !15399}
!15398 = !DILocalVariable(name: "unused", arg: 1, scope: !15396, file: !1963, line: 21, type: !1971)
!15399 = !DILocalVariable(name: "h", scope: !15400, file: !1963, line: 24, type: !15401)
!15400 = distinct !DILexicalBlock(scope: !15396, file: !1963, line: 24, column: 2)
!15401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15402, size: 32)
!15402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !15403)
!15403 = !{!15404, !15410, !15416}
!15404 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15402, file: !122, line: 5074, baseType: !15405, size: 96)
!15405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !15406)
!15406 = !{!15407, !15408, !15409}
!15407 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15405, file: !226, line: 57, baseType: !229, size: 32)
!15408 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15405, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!15409 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15405, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!15410 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15402, file: !122, line: 5075, baseType: !15411, size: 64, offset: 96)
!15411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !15412)
!15412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !15413)
!15413 = !{!15414}
!15414 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15412, file: !163, line: 232, baseType: !15415, size: 64)
!15415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1949)
!15416 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15402, file: !122, line: 5076, baseType: !15417, size: 32, offset: 160)
!15417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !15418)
!15418 = !{!15419}
!15419 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !15417, file: !236, line: 52, baseType: !22, size: 32)
!15420 = !DILocation(line: 0, scope: !15396)
!15421 = !DILocation(line: 0, scope: !15400)
!15422 = !DILocation(line: 24, column: 2, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15424, file: !1963, line: 24, column: 2)
!15424 = distinct !DILexicalBlock(scope: !15425, file: !1963, line: 24, column: 2)
!15425 = distinct !DILexicalBlock(scope: !15400, file: !1963, line: 24, column: 2)
!15426 = !DILocation(line: 24, column: 2, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15428, file: !1963, line: 24, column: 2)
!15428 = distinct !DILexicalBlock(scope: !15423, file: !1963, line: 24, column: 2)
!15429 = !DILocation(line: 24, column: 2, scope: !15424)
!15430 = !DILocation(line: 24, column: 2, scope: !15400)
!15431 = !DILocation(line: 52, column: 2, scope: !15396)
!15432 = !DILocation(line: 49, column: 27, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15434, file: !1963, line: 48, column: 3)
!15434 = distinct !DILexicalBlock(scope: !15425, file: !1963, line: 24, column: 36)
!15435 = !DILocation(line: 49, column: 45, scope: !15433)
!15436 = !DILocation(line: 49, column: 4, scope: !15433)
!15437 = !DILocation(line: 24, column: 2, scope: !15425)
!15438 = !DILocation(line: 24, column: 2, scope: !15428)
!15439 = distinct !{!15439, !15430, !15440}
!15440 = !DILocation(line: 51, column: 2, scope: !15400)
!15441 = distinct !DISubprogram(name: "k_heap_init", scope: !1963, file: !1963, line: 13, type: !15442, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15444)
!15442 = !DISubroutineType(types: !15443)
!15443 = !{null, !15401, !104, !111}
!15444 = !{!15445, !15446, !15447}
!15445 = !DILocalVariable(name: "h", arg: 1, scope: !15441, file: !1963, line: 13, type: !15401)
!15446 = !DILocalVariable(name: "mem", arg: 2, scope: !15441, file: !1963, line: 13, type: !104)
!15447 = !DILocalVariable(name: "bytes", arg: 3, scope: !15441, file: !1963, line: 13, type: !111)
!15448 = !DILocation(line: 0, scope: !15441)
!15449 = !DILocation(line: 15, column: 19, scope: !15441)
!15450 = !DILocation(line: 15, column: 2, scope: !15441)
!15451 = !DILocation(line: 16, column: 20, scope: !15441)
!15452 = !DILocation(line: 16, column: 2, scope: !15441)
!15453 = !DILocation(line: 19, column: 1, scope: !15441)
!15454 = distinct !DISubprogram(name: "z_waitq_init", scope: !11013, file: !11013, line: 47, type: !15455, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15458)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{null, !15457}
!15457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15411, size: 32)
!15458 = !{!15459}
!15459 = !DILocalVariable(name: "w", arg: 1, scope: !15454, file: !11013, line: 47, type: !15457)
!15460 = !DILocation(line: 0, scope: !15454)
!15461 = !DILocation(line: 49, column: 21, scope: !15454)
!15462 = !DILocation(line: 49, column: 2, scope: !15454)
!15463 = !DILocation(line: 50, column: 1, scope: !15454)
!15464 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15465, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15468)
!15465 = !DISubroutineType(types: !15466)
!15466 = !{null, !15467}
!15467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15415, size: 32)
!15468 = !{!15469}
!15469 = !DILocalVariable(name: "list", arg: 1, scope: !15464, file: !137, line: 197, type: !15467)
!15470 = !DILocation(line: 0, scope: !15464)
!15471 = !DILocation(line: 199, column: 8, scope: !15464)
!15472 = !DILocation(line: 199, column: 13, scope: !15464)
!15473 = !DILocation(line: 200, column: 8, scope: !15464)
!15474 = !DILocation(line: 200, column: 13, scope: !15464)
!15475 = !DILocation(line: 201, column: 1, scope: !15464)
!15476 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !1963, file: !1963, line: 64, type: !15477, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15483)
!15477 = !DISubroutineType(types: !15478)
!15478 = !{!104, !15401, !111, !111, !15479}
!15479 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15480)
!15480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15481)
!15481 = !{!15482}
!15482 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15480, file: !108, line: 66, baseType: !107, size: 64)
!15483 = !{!15484, !15485, !15486, !15487, !15488, !15489, !15490, !15491, !15496}
!15484 = !DILocalVariable(name: "h", arg: 1, scope: !15476, file: !1963, line: 64, type: !15401)
!15485 = !DILocalVariable(name: "align", arg: 2, scope: !15476, file: !1963, line: 64, type: !111)
!15486 = !DILocalVariable(name: "bytes", arg: 3, scope: !15476, file: !1963, line: 64, type: !111)
!15487 = !DILocalVariable(name: "timeout", arg: 4, scope: !15476, file: !1963, line: 65, type: !15479)
!15488 = !DILocalVariable(name: "now", scope: !15476, file: !1963, line: 67, type: !109)
!15489 = !DILocalVariable(name: "end", scope: !15476, file: !1963, line: 67, type: !109)
!15490 = !DILocalVariable(name: "ret", scope: !15476, file: !1963, line: 68, type: !104)
!15491 = !DILocalVariable(name: "key", scope: !15476, file: !1963, line: 72, type: !15492)
!15492 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15493)
!15493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15494)
!15494 = !{!15495}
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15493, file: !236, line: 33, baseType: !105, size: 32)
!15496 = !DILocalVariable(name: "blocked_alloc", scope: !15476, file: !1963, line: 78, type: !540)
!15497 = !DILocation(line: 0, scope: !15476)
!15498 = !DILocation(line: 67, column: 21, scope: !15476)
!15499 = !DILocation(line: 70, column: 8, scope: !15476)
!15500 = !DILocation(line: 72, column: 41, scope: !15476)
!15501 = !DILocalVariable(name: "l", arg: 1, scope: !15502, file: !236, line: 136, type: !15505)
!15502 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15503, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15506)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!15492, !15505}
!15505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15417, size: 32)
!15506 = !{!15501, !15507}
!15507 = !DILocalVariable(name: "k", scope: !15502, file: !236, line: 139, type: !15492)
!15508 = !DILocation(line: 0, scope: !15502, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 72, column: 25, scope: !15476)
!15510 = !DILocation(line: 55, column: 2, scope: !15511, inlinedAt: !15515)
!15511 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6640, file: !6640, line: 42, type: !6641, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15512)
!15512 = !{!15513, !15514}
!15513 = !DILocalVariable(name: "key", scope: !15511, file: !6640, line: 44, type: !32)
!15514 = !DILocalVariable(name: "tmp", scope: !15511, file: !6640, line: 53, type: !32)
!15515 = distinct !DILocation(line: 145, column: 10, scope: !15502, inlinedAt: !15509)
!15516 = !{i64 1324523}
!15517 = !DILocation(line: 0, scope: !15511, inlinedAt: !15515)
!15518 = !DILocation(line: 148, column: 2, scope: !15519, inlinedAt: !15509)
!15519 = distinct !DILexicalBlock(scope: !15520, file: !236, line: 148, column: 2)
!15520 = distinct !DILexicalBlock(scope: !15502, file: !236, line: 148, column: 2)
!15521 = !DILocation(line: 148, column: 2, scope: !15520, inlinedAt: !15509)
!15522 = !DILocation(line: 148, column: 2, scope: !15523, inlinedAt: !15509)
!15523 = distinct !DILexicalBlock(scope: !15519, file: !236, line: 148, column: 2)
!15524 = !DILocation(line: 160, column: 2, scope: !15502, inlinedAt: !15509)
!15525 = !DILocation(line: 1031, column: 3, scope: !15526, inlinedAt: !15529)
!15526 = distinct !DISubprogram(name: "__get_IPSR", scope: !7290, file: !7290, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15527)
!15527 = !{!15528}
!15528 = !DILocalVariable(name: "result", scope: !15526, file: !7290, line: 1029, type: !113)
!15529 = distinct !DILocation(line: 48, column: 10, scope: !15530, inlinedAt: !15531)
!15530 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8296, file: !8296, line: 46, type: !8297, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !397)
!15531 = distinct !DILocation(line: 76, column: 2, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15533, file: !1963, line: 76, column: 2)
!15533 = distinct !DILexicalBlock(scope: !15476, file: !1963, line: 76, column: 2)
!15534 = !{i64 1562783}
!15535 = !DILocation(line: 0, scope: !15526, inlinedAt: !15529)
!15536 = !DILocation(line: 48, column: 9, scope: !15530, inlinedAt: !15531)
!15537 = !DILocation(line: 76, column: 2, scope: !15532)
!15538 = !DILocation(line: 81, column: 9, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15476, file: !1963, line: 80, column: 22)
!15540 = !DILocation(line: 83, column: 9, scope: !15539)
!15541 = !DILocation(line: 85, column: 12, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15539, file: !1963, line: 84, column: 7)
!15543 = !DILocation(line: 85, column: 21, scope: !15542)
!15544 = !DILocation(line: 76, column: 2, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15532, file: !1963, line: 76, column: 2)
!15546 = !DILocation(line: 85, column: 30, scope: !15542)
!15547 = !DILocation(line: 85, column: 37, scope: !15542)
!15548 = !DILocation(line: 84, column: 7, scope: !15539)
!15549 = !DILocation(line: 99, column: 10, scope: !15539)
!15550 = !DILocation(line: 0, scope: !15502, inlinedAt: !15551)
!15551 = distinct !DILocation(line: 101, column: 9, scope: !15539)
!15552 = !DILocation(line: 55, column: 2, scope: !15511, inlinedAt: !15553)
!15553 = distinct !DILocation(line: 145, column: 10, scope: !15502, inlinedAt: !15551)
!15554 = !DILocation(line: 0, scope: !15511, inlinedAt: !15553)
!15555 = !DILocation(line: 148, column: 2, scope: !15519, inlinedAt: !15551)
!15556 = !DILocation(line: 148, column: 2, scope: !15520, inlinedAt: !15551)
!15557 = !DILocation(line: 148, column: 2, scope: !15523, inlinedAt: !15551)
!15558 = !DILocation(line: 160, column: 2, scope: !15502, inlinedAt: !15551)
!15559 = distinct !{!15559, !15560, !15561}
!15560 = !DILocation(line: 80, column: 2, scope: !15476)
!15561 = !DILocation(line: 102, column: 2, scope: !15476)
!15562 = !DILocalVariable(name: "key", arg: 2, scope: !15563, file: !236, line: 190, type: !15492)
!15563 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15564, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15566)
!15564 = !DISubroutineType(types: !15565)
!15565 = !{null, !15505, !15492}
!15566 = !{!15567, !15562}
!15567 = !DILocalVariable(name: "l", arg: 1, scope: !15563, file: !236, line: 189, type: !15505)
!15568 = !DILocation(line: 0, scope: !15563, inlinedAt: !15569)
!15569 = distinct !DILocation(line: 106, column: 2, scope: !15476)
!15570 = !DILocation(line: 194, column: 2, scope: !15571, inlinedAt: !15569)
!15571 = distinct !DILexicalBlock(scope: !15572, file: !236, line: 194, column: 2)
!15572 = distinct !DILexicalBlock(scope: !15563, file: !236, line: 194, column: 2)
!15573 = !DILocation(line: 194, column: 2, scope: !15572, inlinedAt: !15569)
!15574 = !DILocation(line: 194, column: 2, scope: !15575, inlinedAt: !15569)
!15575 = distinct !DILexicalBlock(scope: !15571, file: !236, line: 194, column: 2)
!15576 = !DILocalVariable(name: "key", arg: 1, scope: !15577, file: !6640, line: 84, type: !32)
!15577 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6640, file: !6640, line: 84, type: !6714, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15578)
!15578 = !{!15576}
!15579 = !DILocation(line: 0, scope: !15577, inlinedAt: !15580)
!15580 = distinct !DILocation(line: 215, column: 2, scope: !15563, inlinedAt: !15569)
!15581 = !DILocation(line: 95, column: 2, scope: !15577, inlinedAt: !15580)
!15582 = !{i64 1325340}
!15583 = !DILocation(line: 107, column: 2, scope: !15476)
!15584 = distinct !DISubprogram(name: "k_heap_alloc", scope: !1963, file: !1963, line: 110, type: !15585, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15587)
!15585 = !DISubroutineType(types: !15586)
!15586 = !{!104, !15401, !111, !15479}
!15587 = !{!15588, !15589, !15590, !15591}
!15588 = !DILocalVariable(name: "h", arg: 1, scope: !15584, file: !1963, line: 110, type: !15401)
!15589 = !DILocalVariable(name: "bytes", arg: 2, scope: !15584, file: !1963, line: 110, type: !111)
!15590 = !DILocalVariable(name: "timeout", arg: 3, scope: !15584, file: !1963, line: 110, type: !15479)
!15591 = !DILocalVariable(name: "ret", scope: !15584, file: !1963, line: 114, type: !104)
!15592 = !DILocation(line: 0, scope: !15584)
!15593 = !DILocation(line: 114, column: 14, scope: !15584)
!15594 = !DILocation(line: 118, column: 2, scope: !15584)
!15595 = distinct !DISubprogram(name: "k_heap_free", scope: !1963, file: !1963, line: 121, type: !15596, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1944, retainedNodes: !15598)
!15596 = !DISubroutineType(types: !15597)
!15597 = !{null, !15401, !104}
!15598 = !{!15599, !15600, !15601}
!15599 = !DILocalVariable(name: "h", arg: 1, scope: !15595, file: !1963, line: 121, type: !15401)
!15600 = !DILocalVariable(name: "mem", arg: 2, scope: !15595, file: !1963, line: 121, type: !104)
!15601 = !DILocalVariable(name: "key", scope: !15595, file: !1963, line: 123, type: !15492)
!15602 = !DILocation(line: 0, scope: !15595)
!15603 = !DILocation(line: 123, column: 41, scope: !15595)
!15604 = !DILocation(line: 0, scope: !15502, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 123, column: 25, scope: !15595)
!15606 = !DILocation(line: 55, column: 2, scope: !15511, inlinedAt: !15607)
!15607 = distinct !DILocation(line: 145, column: 10, scope: !15502, inlinedAt: !15605)
!15608 = !DILocation(line: 0, scope: !15511, inlinedAt: !15607)
!15609 = !DILocation(line: 148, column: 2, scope: !15519, inlinedAt: !15605)
!15610 = !DILocation(line: 148, column: 2, scope: !15520, inlinedAt: !15605)
!15611 = !DILocation(line: 148, column: 2, scope: !15523, inlinedAt: !15605)
!15612 = !DILocation(line: 160, column: 2, scope: !15502, inlinedAt: !15605)
!15613 = !DILocation(line: 125, column: 20, scope: !15595)
!15614 = !DILocation(line: 125, column: 2, scope: !15595)
!15615 = !DILocation(line: 128, column: 60, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15595, file: !1963, line: 128, column: 6)
!15617 = !DILocation(line: 128, column: 43, scope: !15616)
!15618 = !DILocation(line: 128, column: 68, scope: !15616)
!15619 = !DILocation(line: 128, column: 6, scope: !15595)
!15620 = !DILocation(line: 129, column: 3, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15616, file: !1963, line: 128, column: 74)
!15622 = !DILocation(line: 130, column: 2, scope: !15621)
!15623 = !DILocation(line: 0, scope: !15563, inlinedAt: !15624)
!15624 = distinct !DILocation(line: 131, column: 3, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15616, file: !1963, line: 130, column: 9)
!15626 = !DILocation(line: 194, column: 2, scope: !15571, inlinedAt: !15624)
!15627 = !DILocation(line: 194, column: 2, scope: !15572, inlinedAt: !15624)
!15628 = !DILocation(line: 194, column: 2, scope: !15575, inlinedAt: !15624)
!15629 = !DILocation(line: 0, scope: !15577, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 215, column: 2, scope: !15563, inlinedAt: !15624)
!15631 = !DILocation(line: 95, column: 2, scope: !15577, inlinedAt: !15630)
!15632 = !DILocation(line: 133, column: 1, scope: !15595)
