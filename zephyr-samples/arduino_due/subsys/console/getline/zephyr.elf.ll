; ModuleID = 'build/arduino_due/subsys/console/getline/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.z_heap_bucket = type { i32 }
%struct.k_spinlock = type {}
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.wdt_sam_dev_cfg = type { %struct._thread_stack_info* }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.wdt_driver_api = type { i32 (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.wdt_timeout_cfg*)*, i32 (%struct.device*, i32)* }
%struct.wdt_timeout_cfg = type { %struct._thread_arch, void (%struct.device*, i32)*, i8 }
%struct._thread_arch = type { i32, i32 }
%struct.wdt_sam_dev_data = type { void (%struct.device*, i32)*, i32, i8, i8 }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.uart_sam_dev_cfg = type { %struct.Uart*, i32, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.Uart = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [55 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_sam_dev_data = type { i32, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.soc_gpio_pin = type { i32, %struct.Pio*, i8, i32 }
%struct.Pio = type { i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, [3 x i32], i32, i32, i32, i32, [4 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._snode = type { %struct._snode* }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 537280 to i8*), void (i8*)* inttoptr (i32 535487 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 537304 to i8*), void (i8*)* inttoptr (i32 535899 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [14 x i8] c"Enter a line\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"line: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"last char was: 0x%x\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [12 x i8*] [i8* bitcast (%struct.init_entry* @__init_atmel_sam3x_init to i8*), i8* bitcast (%struct.k_fifo* @free_queue to i8*), i8* bitcast (%struct.k_fifo* @used_queue to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_26 to i8*), i8* bitcast (%struct._isr_list* @wdt_sam_irq_config.__isr_wdt_sam_isr_irq_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct._isr_list* @uart0_sam_irq_config_func.__isr_uart_sam_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_atmel_sam3x_init = internal constant %struct.init_entry { i32 (%struct.device*)* @atmel_sam3x_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@free_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @free_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.free_queue", align 4, !dbg !214
@used_queue = internal global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct.k_spinlock undef, %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @used_queue to i8*), i64 8) to %struct._dnode*) } } } } }, section "._k_queue.static.used_queue", align 4, !dbg !311
@console_getline.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !358
@line_bufs = internal global [2 x %struct.console_input] zeroinitializer, align 4, !dbg !379
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !384
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !390
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !525
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !560
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 524288, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 537329664, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.33, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !570
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !575
@.str.32 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.33 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !595
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !696
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !736
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !689
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !744
@esc_state = internal global i32 0, align 4, !dbg !763
@cur = internal unnamed_addr global i8 0, align 1, !dbg !771
@end = internal unnamed_addr global i8 0, align 1, !dbg !773
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !767
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !769
@.str.41 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.40 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_26 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.42 = private unnamed_addr constant [18 x i8] c"watchdog@400e1a50\00", align 1
@wdt_sam_cfg = internal constant %struct.wdt_sam_dev_cfg { %struct._thread_stack_info* inttoptr (i32 1074666064 to %struct._thread_stack_info*) }, align 4, !dbg !784
@wdt_sam_api = internal constant %struct.wdt_driver_api { i32 (%struct.device*, i8)* @wdt_sam_setup, i32 (%struct.device*)* @wdt_sam_disable, i32 (%struct.device*, %struct.wdt_timeout_cfg*)* @wdt_sam_install_timeout, i32 (%struct.device*, i32)* @wdt_sam_feed }, align 4, !dbg !860
@__devstate_dts_ord_26 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !858
@wdt_sam_data = internal global %struct.wdt_sam_dev_data zeroinitializer, align 4, !dbg !862
@__device_dts_ord_26 = dso_local constant %struct.device { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.42, i32 0, i32 0), i8* bitcast (%struct.wdt_sam_dev_cfg* @wdt_sam_cfg to i8*), i8* bitcast (%struct.wdt_driver_api* @wdt_sam_api to i8*), %struct.device_state* @__devstate_dts_ord_26, i8* bitcast (%struct.wdt_sam_dev_data* @wdt_sam_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_26, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_150_", align 4, !dbg !849
@__init___device_dts_ord_26 = internal constant %struct.init_entry { i32 (%struct.device*)* @wdt_sam_init, %struct.device* @__device_dts_ord_26 }, section ".z_init_PRE_KERNEL_150_", align 4, !dbg !851
@wdt_sam_irq_config.__isr_wdt_sam_isr_irq_0 = internal global %struct._isr_list { i32 4, i32 0, i8* bitcast (void (%struct.device*)* @wdt_sam_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*) }, section ".intList", align 4, !dbg !870
@__devicehdl_dts_ord_21 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.46 = private unnamed_addr constant [14 x i8] c"uart@400e0800\00", align 1
@uart0_sam_config = internal constant %struct.uart_sam_dev_cfg { %struct.Uart* inttoptr (i32 1074661376 to %struct.Uart*), i32 8, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_21, void (%struct.device*)* @uart0_sam_irq_config_func }, align 4, !dbg !894
@uart_sam_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_sam_poll_in, void (%struct.device*, i8)* @uart_sam_poll_out, i32 (%struct.device*)* @uart_sam_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_sam_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_sam_config_get, i32 (%struct.device*, i8*, i32)* @uart_sam_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_sam_fifo_read, void (%struct.device*)* @uart_sam_irq_tx_enable, void (%struct.device*)* @uart_sam_irq_tx_disable, i32 (%struct.device*)* @uart_sam_irq_tx_ready, void (%struct.device*)* @uart_sam_irq_rx_enable, void (%struct.device*)* @uart_sam_irq_rx_disable, i32 (%struct.device*)* @uart_sam_irq_tx_complete, i32 (%struct.device*)* @uart_sam_irq_rx_ready, void (%struct.device*)* @uart_sam_irq_err_enable, void (%struct.device*)* @uart_sam_irq_err_disable, i32 (%struct.device*)* @uart_sam_irq_is_pending, i32 (%struct.device*)* @uart_sam_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_sam_irq_callback_set }, align 4, !dbg !1029
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1027
@uart0_sam_data = internal global %struct.uart_sam_dev_data { i32 115200, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1031
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.uart_sam_dev_cfg* @uart0_sam_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.uart_sam_dev_data* @uart0_sam_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1018
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_sam_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1020
@__pinctrl_dev_config__device_dts_ord_21 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_21, i32 0, i32 0), i8 1 }, align 4, !dbg !1038
@__pinctrl_states__device_dts_ord_21 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_21, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1057
@__pinctrl_state_pins_0__device_dts_ord_21 = internal constant [2 x i32] [i32 41943041, i32 42991616], align 4, !dbg !1060
@uart0_sam_irq_config_func.__isr_uart_sam_isr_irq_0 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @uart_sam_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*) }, section ".intList", align 4, !dbg !1063
@switch.table.uart_sam_cfg2sam_parity = private unnamed_addr constant [4 x i32] [i32 512, i32 0, i32 1536, i32 1024], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1111
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1276
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1278
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1274
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1245
@sam_port_addrs = internal unnamed_addr constant [5 x i32] [i32 1074662912, i32 1074663424, i32 1074663936, i32 1074664448, i32 1074664960], align 4, !dbg !1280
@sam_port_periph_id = internal unnamed_addr constant [5 x i32] [i32 11, i32 12, i32 13, i32 14, i32 15], align 4, !dbg !1346
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1351
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1357
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1566
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1575
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1582
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1587
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.70 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.72, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.73, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.74, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.75, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1613
@.str.71 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.72 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.73 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.74 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.75 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1727
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !1741
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !1849
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !1852
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !1854
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1580
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1577
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !1856
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !1892
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !1890
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1444
@.str.144 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !1895
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2440 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !2442, !srcloc !2443
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !2444, !srcloc !2445
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !2446, !srcloc !2447
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !2448, !srcloc !2449
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2450, !srcloc !2451
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !2452, !srcloc !2453
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !2454, !srcloc !2455
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !2456, !srcloc !2457
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !2458, !srcloc !2459
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !2460, !srcloc !2461
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !2462, !srcloc !2463
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !2464, !srcloc !2465
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !2466, !srcloc !2467
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !2468, !srcloc !2469
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !2470, !srcloc !2471
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !2472, !srcloc !2473
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !2474, !srcloc !2475
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !2476, !srcloc !2477
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2478, !srcloc !2479
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !2480, !srcloc !2481
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !2482, !srcloc !2483
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2484, !srcloc !2485
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !2486, !srcloc !2487
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !2488, !srcloc !2489
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !2490, !srcloc !2491
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !2492, !srcloc !2493
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !2494, !srcloc !2495
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !2496, !srcloc !2499
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !2500, !srcloc !2501
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2502, !srcloc !2503
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2504, !srcloc !2505
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2506, !srcloc !2507
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2508, !srcloc !2509
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !2510, !srcloc !2511
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !2512, !srcloc !2513
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !2514, !srcloc !2515
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !2516, !srcloc !2517
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2518, !srcloc !2519
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !2520, !srcloc !2521
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !2522, !srcloc !2523
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !2524, !srcloc !2525
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !2526, !srcloc !2527
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !2528, !srcloc !2529
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !2530, !srcloc !2531
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !2532, !srcloc !2533
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !2534, !srcloc !2535
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !2536, !srcloc !2537
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !2538, !srcloc !2539
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !2540, !srcloc !2541
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !2542, !srcloc !2543
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !2544, !srcloc !2545
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !2546, !srcloc !2547
  ret void, !dbg !2548
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !2551 {
  tail call void @console_getline_init() #25, !dbg !2556
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)) #25, !dbg !2557
  br label %1, !dbg !2558

1:                                                ; preds = %0, %1
  %2 = tail call i8* @console_getline() #25, !dbg !2559
  call void @llvm.dbg.value(metadata i8* %2, metadata !2554, metadata !DIExpression()), !dbg !2560
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* noundef %2) #25, !dbg !2561
  %3 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !2562
  %4 = add i32 %3, -1, !dbg !2563
  %5 = getelementptr inbounds i8, i8* %2, i32 %4, !dbg !2564
  %6 = load i8, i8* %5, align 1, !dbg !2564
  %7 = zext i8 %6 to i32, !dbg !2564
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i32 0, i32 0), i32 noundef %7) #25, !dbg !2565
  br label %1, !dbg !2558, !llvm.loop !2566
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2570, metadata !DIExpression()), !dbg !2571
  ret i32 0, !dbg !2572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2573 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2577, metadata !DIExpression()), !dbg !2578
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2579
  ret void, !dbg !2580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2581 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2584
  ret i8* %1, !dbg !2585
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2586 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2598, metadata !DIExpression()), !dbg !2607
  call void @llvm.dbg.value(metadata i8* %0, metadata !2597, metadata !DIExpression()), !dbg !2607
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !2608
  ret void, !dbg !2610
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2615, metadata !DIExpression()), !dbg !2617
  call void @llvm.dbg.value(metadata i8* %1, metadata !2616, metadata !DIExpression()), !dbg !2617
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2618
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !2618
  ret i32 %4, !dbg !2619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2620 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2632, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2629, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i8* %1, metadata !2630, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i8* %2, metadata !2631, metadata !DIExpression()), !dbg !2633
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !2634
  ret void, !dbg !2635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !2636 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2640, metadata !DIExpression()), !dbg !2643
  call void @llvm.dbg.value(metadata i32 %1, metadata !2641, metadata !DIExpression()), !dbg !2643
  call void @llvm.dbg.value(metadata i32 0, metadata !2642, metadata !DIExpression()), !dbg !2643
  %3 = icmp eq i32 %1, 0, !dbg !2644
  br i1 %3, label %13, label %4, !dbg !2647

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2642, metadata !DIExpression()), !dbg !2643
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2648
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !2650
  %8 = load i8, i8* %7, align 1, !dbg !2650
  %9 = zext i8 %8 to i32, !dbg !2650
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !2648
  %11 = add nuw i32 %5, 1, !dbg !2651
  call void @llvm.dbg.value(metadata i32 %11, metadata !2642, metadata !DIExpression()), !dbg !2643
  %12 = icmp eq i32 %11, %1, !dbg !2644
  br i1 %12, label %13, label %4, !dbg !2647, !llvm.loop !2652

13:                                               ; preds = %4, %2
  ret void, !dbg !2654
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !2655 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2659, metadata !DIExpression()), !dbg !2661
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !2662
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !2662
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2660, metadata !DIExpression()), !dbg !2663
  call void @llvm.va_start(i8* nonnull %3), !dbg !2664
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !2665
  %5 = load i32, i32* %4, align 4, !dbg !2665
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !2665
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !2665
  call void @llvm.va_end(i8* nonnull %3), !dbg !2666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !2667
  ret void, !dbg !2667
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !2668 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2672, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata i32 %1, metadata !2673, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.value(metadata i8* %2, metadata !2674, metadata !DIExpression()), !dbg !2677
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2678
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !2678
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2675, metadata !DIExpression()), !dbg !2679
  call void @llvm.va_start(i8* nonnull %5), !dbg !2680
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2681
  %7 = load i32, i32* %6, align 4, !dbg !2681
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2681
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !2681
  call void @llvm.dbg.value(metadata i32 %9, metadata !2676, metadata !DIExpression()), !dbg !2677
  call void @llvm.va_end(i8* nonnull %5), !dbg !2682
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !2683
  ret i32 %9, !dbg !2684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !2685 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !2692, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i8* %0, metadata !2689, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %1, metadata !2690, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i8* %2, metadata !2691, metadata !DIExpression()), !dbg !2699
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !2700
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !2700
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !2693, metadata !DIExpression()), !dbg !2701
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !2702
  store i8* %0, i8** %7, align 4, !dbg !2702
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !2702
  store i32 %1, i32* %8, align 4, !dbg !2702
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !2702
  store i32 0, i32* %9, align 4, !dbg !2702
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !2703
  %10 = load i32, i32* %9, align 4, !dbg !2704
  %11 = load i32, i32* %8, align 4, !dbg !2706
  %12 = icmp slt i32 %10, %11, !dbg !2707
  br i1 %12, label %13, label %15, !dbg !2708

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !2709
  store i8 0, i8* %14, align 1, !dbg !2711
  br label %15, !dbg !2712

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !2713
  ret i32 %10, !dbg !2714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !2715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2720, metadata !DIExpression()), !dbg !2722
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !2721, metadata !DIExpression()), !dbg !2722
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !2723
  %4 = load i8*, i8** %3, align 4, !dbg !2723
  %5 = icmp eq i8* %4, null, !dbg !2725
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !2726
  br i1 %5, label %12, label %8, !dbg !2727

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !2728
  %10 = load i32, i32* %9, align 4, !dbg !2728
  %11 = icmp slt i32 %7, %10, !dbg !2729
  br i1 %11, label %15, label %12, !dbg !2730

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !2731
  %14 = add nsw i32 %7, 1, !dbg !2733
  store i32 %14, i32* %13, align 4, !dbg !2733
  br label %25, !dbg !2734

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !2735
  %17 = icmp eq i32 %7, %16, !dbg !2737
  br i1 %17, label %18, label %21, !dbg !2738

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !2739
  store i32 %19, i32* %6, align 4, !dbg !2739
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !2741
  store i8 0, i8* %20, align 1, !dbg !2742
  br label %25, !dbg !2743

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !2744
  %23 = add nsw i32 %7, 1, !dbg !2746
  store i32 %23, i32* %6, align 4, !dbg !2746
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !2747
  store i8 %22, i8* %24, align 1, !dbg !2748
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !2749
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !2750 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !2760, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata i8* %1, metadata !2761, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata i8* %2, metadata !2762, metadata !DIExpression()), !dbg !2764
  call void @llvm.dbg.value(metadata i8* %3, metadata !2763, metadata !DIExpression()), !dbg !2764
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !2765
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !2766
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !2767
  unreachable, !dbg !2768
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !2769 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !2873
  ret %struct.k_thread* %1, !dbg !2874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !2875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2880, metadata !DIExpression()), !dbg !2881
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2882, !srcloc !2884
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !2885
  ret void, !dbg !2886
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !2887 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !2888, !srcloc !2890
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !2891
  ret %struct.k_thread* %1, !dbg !2892
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !2893 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !2904, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.value(metadata i8* %1, metadata !2905, metadata !DIExpression()), !dbg !2908
  %3 = icmp eq i8* %1, null, !dbg !2909
  br i1 %3, label %8, label %4, !dbg !2911

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !2912
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !2912
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !2906, metadata !DIExpression()), !dbg !2908
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !2913, !range !2914
  call void @llvm.dbg.value(metadata i32 %7, metadata !2907, metadata !DIExpression()), !dbg !2908
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !2915
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !2916
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !2917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !2918 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2922, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.value(metadata i8* %1, metadata !2923, metadata !DIExpression()), !dbg !2926
  call void @llvm.dbg.value(metadata i8* %1, metadata !2924, metadata !DIExpression()), !dbg !2926
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !2927
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !2925, metadata !DIExpression()), !dbg !2926
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !2928
  %5 = ptrtoint i8* %4 to i32, !dbg !2929
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !2929
  %7 = sub i32 %5, %6, !dbg !2929
  %8 = lshr i32 %7, 3, !dbg !2930
  ret i32 %8, !dbg !2931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !2932 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2936, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %1, metadata !2937, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i1 %2, metadata !2938, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2941
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !2942
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !2939, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !2940, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2941
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !2943
  %6 = bitcast i8* %5 to i16*, !dbg !2943
  %7 = load i16, i16* %6, align 2, !dbg !2943
  %8 = and i16 %7, -2, !dbg !2947
  %9 = zext i1 %2 to i16, !dbg !2947
  %10 = or i16 %8, %9, !dbg !2947
  store i16 %10, i16* %6, align 2, !dbg !2943
  ret void, !dbg !2948
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !2949 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2953, metadata !DIExpression()), !dbg !2955
  call void @llvm.dbg.value(metadata i32 %1, metadata !2954, metadata !DIExpression()), !dbg !2955
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !2956
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !2958
  br i1 %4, label %7, label %5, !dbg !2959

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !2960
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !2962
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !2963
  br label %7, !dbg !2964

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !2965, !range !2967
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !2968
  br i1 %9, label %13, label %10, !dbg !2969

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !2970
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !2972, !range !2967
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !2973
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !2974
  call void @llvm.dbg.value(metadata i32 %12, metadata !2954, metadata !DIExpression()), !dbg !2955
  br label %13, !dbg !2975

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !2954, metadata !DIExpression()), !dbg !2955
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !2976
  ret void, !dbg !2977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !2978 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2982, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.value(metadata i32 %1, metadata !2983, metadata !DIExpression()), !dbg !2984
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !2985
  %4 = add i32 %3, %1, !dbg !2986
  ret i32 %4, !dbg !2987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !2988 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2992, metadata !DIExpression()), !dbg !2994
  call void @llvm.dbg.value(metadata i32 %1, metadata !2993, metadata !DIExpression()), !dbg !2994
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !2995
  %4 = and i32 %3, 1, !dbg !2996
  %5 = icmp ne i32 %4, 0, !dbg !2995
  ret i1 %5, !dbg !2997
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !2998 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3000, metadata !DIExpression()), !dbg !3005
  call void @llvm.dbg.value(metadata i32 %1, metadata !3001, metadata !DIExpression()), !dbg !3005
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3006, !range !3007
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3008
  call void @llvm.dbg.value(metadata i32 %4, metadata !3002, metadata !DIExpression()), !dbg !3009
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3010
  ret void, !dbg !3011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3012 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3016, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.value(metadata i32 %1, metadata !3017, metadata !DIExpression()), !dbg !3021
  call void @llvm.dbg.value(metadata i32 %2, metadata !3018, metadata !DIExpression()), !dbg !3021
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3022
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3023
  %6 = add i32 %5, %4, !dbg !3024
  call void @llvm.dbg.value(metadata i32 %6, metadata !3019, metadata !DIExpression()), !dbg !3021
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3025
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3026
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3027
  ret void, !dbg !3028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3029 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3031, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.value(metadata i32 %1, metadata !3032, metadata !DIExpression()), !dbg !3033
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3034
  %4 = sub i32 %1, %3, !dbg !3035
  ret i32 %4, !dbg !3036
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3037 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3039, metadata !DIExpression()), !dbg !3044
  call void @llvm.dbg.value(metadata i32 %1, metadata !3040, metadata !DIExpression()), !dbg !3044
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3045, !range !3007
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3046
  call void @llvm.dbg.value(metadata i32 %4, metadata !3041, metadata !DIExpression()), !dbg !3047
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3048
  ret void, !dbg !3049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3050 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3054, metadata !DIExpression()), !dbg !3056
  call void @llvm.dbg.value(metadata i32 %1, metadata !3055, metadata !DIExpression()), !dbg !3056
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3057
  %4 = lshr i32 %3, 1, !dbg !3058
  ret i32 %4, !dbg !3059
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3060 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3064, metadata !DIExpression()), !dbg !3067
  call void @llvm.dbg.value(metadata i32 %1, metadata !3065, metadata !DIExpression()), !dbg !3067
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3068
  %4 = add i32 %1, 1, !dbg !3069
  %5 = sub i32 %4, %3, !dbg !3070
  call void @llvm.dbg.value(metadata i32 %5, metadata !3066, metadata !DIExpression()), !dbg !3067
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3071, !range !3072
  %7 = sub nsw i32 31, %6, !dbg !3073
  ret i32 %7, !dbg !3074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3075 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3079, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata i32 %1, metadata !3080, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata i32 %2, metadata !3081, metadata !DIExpression()), !dbg !3088
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3082, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3088
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3089
  %5 = load i32, i32* %4, align 4, !dbg !3089
  %6 = icmp eq i32 %5, 0, !dbg !3090
  br i1 %6, label %7, label %12, !dbg !3091

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3092
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3094
  %10 = load i32, i32* %9, align 4, !dbg !3095
  %11 = or i32 %10, %8, !dbg !3095
  store i32 %11, i32* %9, align 4, !dbg !3095
  store i32 %1, i32* %4, align 4, !dbg !3096
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3097
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3098
  br label %14, !dbg !3099

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3084, metadata !DIExpression()), !dbg !3100
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3101, !range !3102
  call void @llvm.dbg.value(metadata i32 %13, metadata !3087, metadata !DIExpression()), !dbg !3100
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3103
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3104
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3105
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3106
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3108 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3110, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 %1, metadata !3111, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.value(metadata i32 %2, metadata !3112, metadata !DIExpression()), !dbg !3113
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3114
  ret void, !dbg !3115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3116 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3118, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i32 %1, metadata !3119, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i32 %2, metadata !3120, metadata !DIExpression()), !dbg !3121
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3122
  ret void, !dbg !3123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3124 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3126, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.value(metadata i32 %1, metadata !3127, metadata !DIExpression()), !dbg !3128
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3129
  ret i32 %3, !dbg !3130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3131 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3135, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i32 %1, metadata !3136, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata i32 %2, metadata !3137, metadata !DIExpression()), !dbg !3140
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3141
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3138, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3139, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3140
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3139, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3140
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3142
  call void @llvm.dbg.value(metadata i8* %5, metadata !3139, metadata !DIExpression()), !dbg !3140
  %6 = bitcast i8* %5 to i16*, !dbg !3143
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3146
  %8 = load i16, i16* %7, align 2, !dbg !3146
  %9 = zext i16 %8 to i32, !dbg !3146
  ret i32 %9, !dbg !3147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3148 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3152, metadata !DIExpression()), !dbg !3153
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3154
  ret %struct.chunk_unit_t* %2, !dbg !3155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3156 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3160, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata i32 %1, metadata !3161, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata i32 %2, metadata !3162, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata i32 %3, metadata !3163, metadata !DIExpression()), !dbg !3166
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3167
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3164, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3165, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3166
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3168
  call void @llvm.dbg.value(metadata i8* %6, metadata !3165, metadata !DIExpression()), !dbg !3166
  %7 = trunc i32 %3 to i16, !dbg !3169
  %8 = bitcast i8* %6 to i16*, !dbg !3172
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3173
  store i16 %7, i16* %9, align 2, !dbg !3174
  ret void, !dbg !3175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3176 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3180, metadata !DIExpression()), !dbg !3181
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3182
  ret i32 %2, !dbg !3183
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3184 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3188, metadata !DIExpression()), !dbg !3190
  call void @llvm.dbg.value(metadata i32 %1, metadata !3189, metadata !DIExpression()), !dbg !3190
  %3 = add i32 %1, 4, !dbg !3191
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3192
  ret i32 %4, !dbg !3193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3198, metadata !DIExpression()), !dbg !3199
  %2 = add i32 %0, 7, !dbg !3200
  %3 = lshr i32 %2, 3, !dbg !3201
  ret i32 %3, !dbg !3202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3203 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3207, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i32 %1, metadata !3208, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i32 %2, metadata !3209, metadata !DIExpression()), !dbg !3210
  %4 = shl i32 %2, 1, !dbg !3211
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3212
  ret void, !dbg !3213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3214 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3216, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.value(metadata i32 %1, metadata !3217, metadata !DIExpression()), !dbg !3219
  call void @llvm.dbg.value(metadata i32 %2, metadata !3218, metadata !DIExpression()), !dbg !3219
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3220
  ret void, !dbg !3221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3222 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3224, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.value(metadata i32 %1, metadata !3225, metadata !DIExpression()), !dbg !3232
  call void @llvm.dbg.value(metadata i32 %2, metadata !3226, metadata !DIExpression()), !dbg !3232
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !3233
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !3227, metadata !DIExpression()), !dbg !3232
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3234
  %6 = icmp eq i32 %5, %1, !dbg !3235
  br i1 %6, label %7, label %14, !dbg !3236

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3237
  %9 = xor i32 %8, -1, !dbg !3239
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3240
  %11 = load i32, i32* %10, align 4, !dbg !3241
  %12 = and i32 %11, %9, !dbg !3241
  store i32 %12, i32* %10, align 4, !dbg !3241
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3242
  store i32 0, i32* %13, align 4, !dbg !3243
  br label %17, !dbg !3244

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3245
  call void @llvm.dbg.value(metadata i32 %15, metadata !3228, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata i32 %5, metadata !3231, metadata !DIExpression()), !dbg !3246
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !3247
  store i32 %5, i32* %16, align 4, !dbg !3248
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !3249
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !3250
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !3251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3252 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3254, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 %1, metadata !3255, metadata !DIExpression()), !dbg !3256
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !3257
  ret i32 %3, !dbg !3258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !3259 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3263, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata i8* %1, metadata !3264, metadata !DIExpression()), !dbg !3270
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3271
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3271
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3265, metadata !DIExpression()), !dbg !3270
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !3272
  call void @llvm.dbg.value(metadata i32 %5, metadata !3266, metadata !DIExpression()), !dbg !3270
  %6 = ptrtoint i8* %1 to i32, !dbg !3273
  call void @llvm.dbg.value(metadata i32 %6, metadata !3267, metadata !DIExpression()), !dbg !3270
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !3274
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !3274
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %9, metadata !3268, metadata !DIExpression()), !dbg !3270
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !3276
  %11 = shl i32 %10, 3, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %11, metadata !3269, metadata !DIExpression()), !dbg !3270
  %12 = sub i32 %9, %6, !dbg !3278
  %13 = add i32 %12, %11, !dbg !3279
  ret i32 %13, !dbg !3280
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !3281 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3285, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata i32 %1, metadata !3286, metadata !DIExpression()), !dbg !3291
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3292
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !3292
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !3287, metadata !DIExpression()), !dbg !3291
  %5 = icmp eq i32 %1, 0, !dbg !3293
  br i1 %5, label %19, label %6, !dbg !3295

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3296
  br i1 %7, label %19, label %8, !dbg !3297

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !3298, !range !2914
  call void @llvm.dbg.value(metadata i32 %9, metadata !3289, metadata !DIExpression()), !dbg !3291
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !3299
  call void @llvm.dbg.value(metadata i32 %10, metadata !3290, metadata !DIExpression()), !dbg !3291
  %11 = icmp eq i32 %10, 0, !dbg !3300
  br i1 %11, label %19, label %12, !dbg !3302

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3303
  %14 = icmp ugt i32 %13, %9, !dbg !3305
  br i1 %14, label %15, label %17, !dbg !3306

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !3307
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !3309
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !3310
  br label %17, !dbg !3311

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !3312
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !3313
  call void @llvm.dbg.value(metadata i8* %18, metadata !3288, metadata !DIExpression()), !dbg !3291
  br label %19, !dbg !3314

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !3291
  ret i8* %20, !dbg !3315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3316 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3320, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata i32 %1, metadata !3321, metadata !DIExpression()), !dbg !3322
  %3 = lshr i32 %1, 3, !dbg !3323
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3324
  %5 = load i32, i32* %4, align 4, !dbg !3324
  %6 = icmp uge i32 %3, %5, !dbg !3325
  ret i1 %6, !dbg !3326
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3327 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3331, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata i32 %1, metadata !3332, metadata !DIExpression()), !dbg !3346
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3347
  call void @llvm.dbg.value(metadata i32 %3, metadata !3333, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3334, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3346
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !3348
  %5 = load i32, i32* %4, align 4, !dbg !3348
  %6 = icmp eq i32 %5, 0, !dbg !3349
  br i1 %6, label %19, label %7, !dbg !3350

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3351
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3352
  call void @llvm.dbg.value(metadata i32 %9, metadata !3338, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.value(metadata i32 %8, metadata !3339, metadata !DIExpression()), !dbg !3353
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3354
  %11 = icmp ult i32 %10, %1, !dbg !3356
  br i1 %11, label %13, label %12, !dbg !3357

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !3358
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !3360
  store i32 %14, i32* %4, align 4, !dbg !3361
  %15 = add nsw i32 %9, -1, !dbg !3362
  call void @llvm.dbg.value(metadata i32 %15, metadata !3338, metadata !DIExpression()), !dbg !3352
  %16 = icmp eq i32 %15, 0, !dbg !3362
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3363
  br i1 %18, label %19, label %7, !dbg !3363, !llvm.loop !3364

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3367
  %21 = load i32, i32* %20, align 4, !dbg !3367
  %22 = add nsw i32 %3, 1, !dbg !3368
  %23 = shl nsw i32 -1, %22, !dbg !3368
  %24 = and i32 %21, %23, !dbg !3369
  call void @llvm.dbg.value(metadata i32 %24, metadata !3341, metadata !DIExpression()), !dbg !3346
  %25 = icmp eq i32 %24, 0, !dbg !3370
  br i1 %25, label %30, label %26, !dbg !3371

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3372, !range !3072
  call void @llvm.dbg.value(metadata i32 %27, metadata !3342, metadata !DIExpression()), !dbg !3373
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !3374
  %29 = load i32, i32* %28, align 4, !dbg !3374
  call void @llvm.dbg.value(metadata i32 %29, metadata !3345, metadata !DIExpression()), !dbg !3373
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !3375
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3346
  ret i32 %31, !dbg !3376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3377 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3379, metadata !DIExpression()), !dbg !3385
  call void @llvm.dbg.value(metadata i32 %1, metadata !3380, metadata !DIExpression()), !dbg !3385
  call void @llvm.dbg.value(metadata i32 %2, metadata !3381, metadata !DIExpression()), !dbg !3385
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3386
  call void @llvm.dbg.value(metadata i32 %4, metadata !3382, metadata !DIExpression()), !dbg !3385
  %5 = sub i32 %2, %1, !dbg !3387
  call void @llvm.dbg.value(metadata i32 %5, metadata !3383, metadata !DIExpression()), !dbg !3385
  %6 = sub i32 %4, %5, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %6, metadata !3384, metadata !DIExpression()), !dbg !3385
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3389
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !3390
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !3391
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3392
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3393
  ret void, !dbg !3394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3395 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3399, metadata !DIExpression()), !dbg !3403
  call void @llvm.dbg.value(metadata i32 %1, metadata !3400, metadata !DIExpression()), !dbg !3403
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3404
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3401, metadata !DIExpression()), !dbg !3403
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3405
  call void @llvm.dbg.value(metadata i8* %4, metadata !3402, metadata !DIExpression()), !dbg !3403
  ret i8* %4, !dbg !3406
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3407 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3411, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.value(metadata i32 %1, metadata !3412, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.value(metadata i32 %2, metadata !3413, metadata !DIExpression()), !dbg !3423
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3424
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3424
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3414, metadata !DIExpression()), !dbg !3423
  %6 = sub i32 0, %1, !dbg !3425
  %7 = and i32 %6, %1, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %7, metadata !3416, metadata !DIExpression()), !dbg !3423
  %8 = icmp eq i32 %7, %1, !dbg !3427
  br i1 %8, label %13, label %9, !dbg !3429

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %10, metadata !3412, metadata !DIExpression()), !dbg !3423
  %11 = icmp ult i32 %7, 4, !dbg !3432
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3432
  br label %17, !dbg !3432

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3433
  br i1 %14, label %15, label %17, !dbg !3436

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !3437
  br label %57, !dbg !3439

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3423
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3440
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3412, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.value(metadata i32 %19, metadata !3415, metadata !DIExpression()), !dbg !3423
  call void @llvm.dbg.value(metadata i32 %18, metadata !3416, metadata !DIExpression()), !dbg !3423
  %21 = icmp eq i32 %2, 0, !dbg !3441
  br i1 %21, label %57, label %22, !dbg !3443

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !3444
  br i1 %23, label %57, label %24, !dbg !3445

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3446
  %26 = add i32 %25, %20, !dbg !3447
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !3448, !range !2914
  call void @llvm.dbg.value(metadata i32 %27, metadata !3417, metadata !DIExpression()), !dbg !3423
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !3449
  call void @llvm.dbg.value(metadata i32 %28, metadata !3418, metadata !DIExpression()), !dbg !3423
  %29 = icmp eq i32 %28, 0, !dbg !3450
  br i1 %29, label %57, label %30, !dbg !3452

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3453
  call void @llvm.dbg.value(metadata i8* %31, metadata !3419, metadata !DIExpression()), !dbg !3423
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3454
  %33 = ptrtoint i8* %32 to i32, !dbg !3454
  %34 = add i32 %20, -1, !dbg !3454
  %35 = add i32 %34, %33, !dbg !3454
  %36 = sub i32 0, %20, !dbg !3454
  %37 = and i32 %35, %36, !dbg !3454
  %38 = inttoptr i32 %37 to i8*, !dbg !3455
  %39 = sub i32 0, %18, !dbg !3456
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %40, metadata !3419, metadata !DIExpression()), !dbg !3423
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3457
  %42 = ptrtoint i8* %41 to i32, !dbg !3457
  %43 = add i32 %42, 7, !dbg !3457
  %44 = and i32 %43, -8, !dbg !3457
  call void @llvm.dbg.value(metadata i32 %44, metadata !3420, metadata !DIExpression()), !dbg !3423
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %45, metadata !3421, metadata !DIExpression()), !dbg !3423
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !3459
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3460
  %48 = sub i32 %44, %47, !dbg !3460
  %49 = ashr exact i32 %48, 3, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %49, metadata !3422, metadata !DIExpression()), !dbg !3423
  %50 = icmp ugt i32 %45, %28, !dbg !3461
  br i1 %50, label %51, label %52, !dbg !3463

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !3464
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !3466
  br label %52, !dbg !3467

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !3468
  %54 = icmp ugt i32 %53, %49, !dbg !3470
  br i1 %54, label %55, label %56, !dbg !3471

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !3472
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !3474
  br label %56, !dbg !3475

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !3476
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3423
  ret i8* %58, !dbg !3477
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3478 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3482, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i8* %1, metadata !3483, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 %2, metadata !3484, metadata !DIExpression()), !dbg !3501
  call void @llvm.dbg.value(metadata i32 %3, metadata !3485, metadata !DIExpression()), !dbg !3501
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3502
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3502
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3486, metadata !DIExpression()), !dbg !3501
  %7 = icmp eq i8* %1, null, !dbg !3503
  br i1 %7, label %8, label %10, !dbg !3505

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3506
  br label %59, !dbg !3508

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3509
  br i1 %11, label %12, label %13, !dbg !3511

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3512
  br label %59, !dbg !3514

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !3515
  br i1 %14, label %59, label %15, !dbg !3517

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3518, !range !2914
  call void @llvm.dbg.value(metadata i32 %16, metadata !3487, metadata !DIExpression()), !dbg !3501
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3519
  call void @llvm.dbg.value(metadata i32 %17, metadata !3488, metadata !DIExpression()), !dbg !3501
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3520
  %19 = ptrtoint i8* %1 to i32, !dbg !3521
  %20 = ptrtoint i8* %18 to i32, !dbg !3521
  %21 = sub i32 %19, %20, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %21, metadata !3489, metadata !DIExpression()), !dbg !3501
  %22 = add i32 %21, %3, !dbg !3522
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !3523
  call void @llvm.dbg.value(metadata i32 %23, metadata !3490, metadata !DIExpression()), !dbg !3501
  %24 = icmp eq i32 %2, 0, !dbg !3524
  br i1 %24, label %29, label %25, !dbg !3525

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3526
  %27 = and i32 %26, %19, !dbg !3527
  %28 = icmp eq i32 %27, 0, !dbg !3527
  br i1 %28, label %29, label %49, !dbg !3528

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3529
  %31 = icmp eq i32 %23, %30, !dbg !3530
  br i1 %31, label %59, label %32, !dbg !3531

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3532
  br i1 %33, label %34, label %36, !dbg !3533

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !3534
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !3536
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3537
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !3538
  br label %59, !dbg !3539

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3540
  br i1 %37, label %49, label %38, !dbg !3541

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3542
  %40 = add i32 %39, %30, !dbg !3543
  %41 = icmp ult i32 %40, %23, !dbg !3544
  br i1 %41, label %49, label %42, !dbg !3545

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %43, metadata !3491, metadata !DIExpression()), !dbg !3547
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3548
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !3549
  %45 = icmp ult i32 %43, %44, !dbg !3551
  br i1 %45, label %46, label %48, !dbg !3552

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !3553
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !3555
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !3556
  br label %48, !dbg !3557

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !3558
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !3559
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !3560
  call void @llvm.dbg.value(metadata i8* %50, metadata !3497, metadata !DIExpression()), !dbg !3501
  %51 = icmp eq i8* %50, null, !dbg !3561
  br i1 %51, label %59, label %52, !dbg !3562

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !3563, !range !3007
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !3564
  %55 = sub i32 %54, %21, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %55, metadata !3498, metadata !DIExpression()), !dbg !3566
  %56 = icmp ult i32 %55, %3, !dbg !3567
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !3567
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !3568
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !3569
  br label %59, !dbg !3570

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !3501
  ret i8* %60, !dbg !3571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3572 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3576, metadata !DIExpression()), !dbg !3578
  call void @llvm.dbg.value(metadata i32 %1, metadata !3577, metadata !DIExpression()), !dbg !3578
  %3 = shl i32 %1, 3, !dbg !3579
  %4 = add i32 %3, -4, !dbg !3580
  ret i32 %4, !dbg !3581
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3582 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3586, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.value(metadata i8* %1, metadata !3587, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.value(metadata i32 %2, metadata !3588, metadata !DIExpression()), !dbg !3597
  %4 = add i32 %2, -4, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %4, metadata !3588, metadata !DIExpression()), !dbg !3597
  %5 = ptrtoint i8* %1 to i32, !dbg !3599
  %6 = add i32 %5, 7, !dbg !3599
  %7 = and i32 %6, -8, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %7, metadata !3589, metadata !DIExpression()), !dbg !3597
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !3600
  %9 = ptrtoint i8* %8 to i32, !dbg !3600
  %10 = and i32 %9, -8, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %10, metadata !3590, metadata !DIExpression()), !dbg !3597
  %11 = sub i32 %10, %7, !dbg !3601
  %12 = lshr exact i32 %11, 3, !dbg !3602
  call void @llvm.dbg.value(metadata i32 %12, metadata !3591, metadata !DIExpression()), !dbg !3597
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !3603
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !3592, metadata !DIExpression()), !dbg !3597
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3604
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !3605
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !3606
  store i32 %12, i32* %15, align 8, !dbg !3607
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !3608
  store i32 0, i32* %16, align 4, !dbg !3609
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !3610
  call void @llvm.dbg.value(metadata i32 %17, metadata !3593, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3597
  %18 = shl i32 %17, 2, !dbg !3611
  %19 = add i32 %18, 20, !dbg !3612
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %20, metadata !3594, metadata !DIExpression()), !dbg !3597
  call void @llvm.dbg.value(metadata i32 0, metadata !3595, metadata !DIExpression()), !dbg !3614
  %21 = icmp slt i32 %17, 0, !dbg !3615
  br i1 %21, label %22, label %24, !dbg !3617

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !3618
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !3619
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !3620
  %23 = sub i32 %12, %20, !dbg !3621
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !3622
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !3623
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !3624
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !3625
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !3626
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !3627
  ret void, !dbg !3628

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !3595, metadata !DIExpression()), !dbg !3614
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !3629
  store i32 0, i32* %26, align 4, !dbg !3631
  %27 = add nuw i32 %25, 1, !dbg !3632
  call void @llvm.dbg.value(metadata i32 %27, metadata !3595, metadata !DIExpression()), !dbg !3614
  %28 = icmp eq i32 %25, %17, !dbg !3615
  br i1 %28, label %22, label %24, !dbg !3617, !llvm.loop !3633
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3635 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3648, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3645, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %1, metadata !3646, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %2, metadata !3647, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %4, metadata !3649, metadata !DIExpression()), !dbg !3776
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3777
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !3777
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3650, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i32 0, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i1 undef, metadata !3656, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3776
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3779

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3779

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3780
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3648, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %30, metadata !3647, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %29, metadata !3654, metadata !DIExpression()), !dbg !3776
  %31 = load i8, i8* %30, align 1, !dbg !3781
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3779

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3781
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3782
  call void @llvm.dbg.value(metadata i8* %34, metadata !3647, metadata !DIExpression()), !dbg !3776
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %35, metadata !3658, metadata !DIExpression()), !dbg !3783
  %36 = icmp slt i32 %35, 0, !dbg !3784
  %37 = add i32 %29, 1, !dbg !3782
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %36, label %365, label %28, !llvm.loop !3786

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !3788
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3663, metadata !DIExpression()), !dbg !3789
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3789
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3708, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3711, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %30, metadata !3714, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 -1, metadata !3715, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 -1, metadata !3716, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* null, metadata !3717, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %14, metadata !3718, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 0, metadata !3719, metadata !DIExpression()), !dbg !3790
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !3791
  call void @llvm.dbg.value(metadata i8* %39, metadata !3647, metadata !DIExpression()), !dbg !3776
  %40 = load i24, i24* %15, align 8, !dbg !3792
  %41 = and i24 %40, 256, !dbg !3792
  %42 = icmp eq i24 %41, 0, !dbg !3792
  br i1 %42, label %51, label %43, !dbg !3794

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3795
  call void @llvm.dbg.value(metadata i8* %44, metadata !3648, metadata !DIExpression()), !dbg !3776
  %45 = bitcast i8* %27 to i32*, !dbg !3795
  %46 = load i32, i32* %45, align 4, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %46, metadata !3715, metadata !DIExpression()), !dbg !3790
  %47 = icmp slt i32 %46, 0, !dbg !3797
  br i1 %47, label %48, label %56, !dbg !3799

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3800
  store i24 %49, i24* %15, align 8, !dbg !3800
  %50 = sub nsw i32 0, %46, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %50, metadata !3715, metadata !DIExpression()), !dbg !3790
  br label %56, !dbg !3803

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3804
  %53 = icmp eq i24 %52, 0, !dbg !3804
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3806
  br label %56, !dbg !3806

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3807
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3790
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3648, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %58, metadata !3715, metadata !DIExpression()), !dbg !3790
  %60 = and i24 %57, 1024, !dbg !3807
  %61 = icmp eq i24 %60, 0, !dbg !3807
  br i1 %61, label %69, label %62, !dbg !3808

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3809
  call void @llvm.dbg.value(metadata i8* %63, metadata !3648, metadata !DIExpression()), !dbg !3776
  %64 = bitcast i8* %59 to i32*, !dbg !3809
  %65 = load i32, i32* %64, align 4, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %65, metadata !3720, metadata !DIExpression()), !dbg !3810
  %66 = icmp slt i32 %65, 0, !dbg !3811
  br i1 %66, label %67, label %74, !dbg !3813

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3814
  store i24 %68, i24* %15, align 8, !dbg !3814
  br label %74, !dbg !3816

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3817
  %71 = icmp eq i24 %70, 0, !dbg !3817
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3819
  br label %74, !dbg !3819

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3820
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3790
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3790
  call void @llvm.dbg.value(metadata i8* %77, metadata !3648, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %76, metadata !3716, metadata !DIExpression()), !dbg !3790
  store i32 0, i32* %16, align 4, !dbg !3821
  store i32 0, i32* %17, align 8, !dbg !3822
  %78 = lshr i24 %75, 16, !dbg !3820
  call void @llvm.dbg.value(metadata i24 %78, metadata !3723, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3790
  %79 = lshr i24 %75, 11, !dbg !3823
  %80 = and i24 %79, 15, !dbg !3823
  %81 = zext i24 %80 to i32, !dbg !3823
  call void @llvm.dbg.value(metadata i32 %81, metadata !3724, metadata !DIExpression()), !dbg !3790
  %82 = trunc i24 %78 to i3, !dbg !3824
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3824

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3825

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3828
  call void @llvm.dbg.value(metadata i8* %85, metadata !3648, metadata !DIExpression()), !dbg !3776
  %86 = bitcast i8* %77 to i32*, !dbg !3828
  %87 = load i32, i32* %86, align 4, !dbg !3828
  %88 = sext i32 %87 to i64, !dbg !3828
  store i64 %88, i64* %20, align 8, !dbg !3830
  br label %115, !dbg !3831

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3832
  call void @llvm.dbg.value(metadata i8* %90, metadata !3648, metadata !DIExpression()), !dbg !3776
  %91 = bitcast i8* %77 to i32*, !dbg !3832
  %92 = load i32, i32* %91, align 4, !dbg !3832
  %93 = sext i32 %92 to i64, !dbg !3832
  store i64 %93, i64* %20, align 8, !dbg !3835
  br label %115, !dbg !3836

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3837
  %96 = add i32 %95, 7, !dbg !3837
  %97 = and i32 %96, -8, !dbg !3837
  %98 = inttoptr i32 %97 to i8*, !dbg !3837
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3837
  call void @llvm.dbg.value(metadata i8* %99, metadata !3648, metadata !DIExpression()), !dbg !3776
  %100 = inttoptr i32 %97 to i64*, !dbg !3837
  %101 = load i64, i64* %100, align 8, !dbg !3837
  store i64 %101, i64* %20, align 8, !dbg !3838
  br label %115, !dbg !3839

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3840
  %104 = add i32 %103, 7, !dbg !3840
  %105 = and i32 %104, -8, !dbg !3840
  %106 = inttoptr i32 %105 to i8*, !dbg !3840
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %107, metadata !3648, metadata !DIExpression()), !dbg !3776
  %108 = inttoptr i32 %105 to i64*, !dbg !3840
  %109 = load i64, i64* %108, align 8, !dbg !3840
  store i64 %109, i64* %20, align 8, !dbg !3841
  br label %115, !dbg !3842

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3843
  call void @llvm.dbg.value(metadata i8* %111, metadata !3648, metadata !DIExpression()), !dbg !3776
  %112 = bitcast i8* %77 to i32*, !dbg !3843
  %113 = load i32, i32* %112, align 4, !dbg !3843
  %114 = sext i32 %113 to i64, !dbg !3844
  store i64 %114, i64* %20, align 8, !dbg !3845
  br label %115, !dbg !3846

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3847
  call void @llvm.dbg.value(metadata i8* %117, metadata !3648, metadata !DIExpression()), !dbg !3776
  %118 = trunc i24 %79 to i4, !dbg !3848
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3848

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3849
  %121 = ashr exact i64 %120, 56, !dbg !3849
  store i64 %121, i64* %20, align 8, !dbg !3852
  br label %177, !dbg !3853

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3854
  %124 = ashr exact i64 %123, 48, !dbg !3854
  store i64 %124, i64* %20, align 8, !dbg !3857
  br label %177, !dbg !3858

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3859

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %127, metadata !3648, metadata !DIExpression()), !dbg !3776
  %128 = bitcast i8* %77 to i32*, !dbg !3862
  %129 = load i32, i32* %128, align 4, !dbg !3862
  %130 = zext i32 %129 to i64, !dbg !3862
  store i64 %130, i64* %20, align 8, !dbg !3864
  br label %157, !dbg !3865

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3866
  call void @llvm.dbg.value(metadata i8* %132, metadata !3648, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %132, metadata !3648, metadata !DIExpression()), !dbg !3776
  %133 = bitcast i8* %77 to i32*, !dbg !3866
  %134 = load i32, i32* %133, align 4, !dbg !3866
  %135 = zext i32 %134 to i64, !dbg !3866
  store i64 %135, i64* %20, align 8, !dbg !3866
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3868
  %138 = add i32 %137, 7, !dbg !3868
  %139 = and i32 %138, -8, !dbg !3868
  %140 = inttoptr i32 %139 to i8*, !dbg !3868
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3868
  call void @llvm.dbg.value(metadata i8* %141, metadata !3648, metadata !DIExpression()), !dbg !3776
  %142 = inttoptr i32 %139 to i64*, !dbg !3868
  %143 = load i64, i64* %142, align 8, !dbg !3868
  store i64 %143, i64* %20, align 8, !dbg !3869
  br label %157, !dbg !3870

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3871
  %146 = add i32 %145, 7, !dbg !3871
  %147 = and i32 %146, -8, !dbg !3871
  %148 = inttoptr i32 %147 to i8*, !dbg !3871
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %149, metadata !3648, metadata !DIExpression()), !dbg !3776
  %150 = inttoptr i32 %147 to i64*, !dbg !3871
  %151 = load i64, i64* %150, align 8, !dbg !3871
  store i64 %151, i64* %20, align 8, !dbg !3872
  br label %157, !dbg !3873

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3874
  call void @llvm.dbg.value(metadata i8* %153, metadata !3648, metadata !DIExpression()), !dbg !3776
  %154 = bitcast i8* %77 to i32*, !dbg !3874
  %155 = load i32, i32* %154, align 4, !dbg !3874
  %156 = zext i32 %155 to i64, !dbg !3875
  store i64 %156, i64* %20, align 8, !dbg !3876
  br label %157, !dbg !3877

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3878
  call void @llvm.dbg.value(metadata i8* %159, metadata !3648, metadata !DIExpression()), !dbg !3776
  %160 = trunc i24 %79 to i4, !dbg !3879
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3879

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3880
  store i64 %162, i64* %20, align 8, !dbg !3883
  br label %177, !dbg !3884

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3885
  store i64 %164, i64* %20, align 8, !dbg !3888
  br label %177, !dbg !3889

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3890
  %167 = add i32 %166, 7, !dbg !3890
  %168 = and i32 %167, -8, !dbg !3890
  %169 = inttoptr i32 %168 to i8*, !dbg !3890
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %170, metadata !3648, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %170, metadata !3648, metadata !DIExpression()), !dbg !3776
  %171 = inttoptr i32 %168 to double*, !dbg !3890
  %172 = load double, double* %171, align 8, !dbg !3890
  store double %172, double* %19, align 8, !dbg !3890
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3894
  call void @llvm.dbg.value(metadata i8* %174, metadata !3648, metadata !DIExpression()), !dbg !3776
  %175 = bitcast i8* %77 to i8**, !dbg !3894
  %176 = load i8*, i8** %175, align 4, !dbg !3894
  store i8* %176, i8** %18, align 8, !dbg !3897
  br label %177, !dbg !3898

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3790
  call void @llvm.dbg.value(metadata i8* %178, metadata !3648, metadata !DIExpression()), !dbg !3776
  %179 = and i24 %75, 3, !dbg !3899
  %180 = icmp eq i24 %179, 0, !dbg !3899
  br i1 %180, label %185, label %181, !dbg !3899

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %182, metadata !3725, metadata !DIExpression()), !dbg !3901
  %183 = icmp slt i32 %182, 0, !dbg !3902
  %184 = add i32 %182, %29, !dbg !3900
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3904
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3905

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !3906
  call void @llvm.dbg.value(metadata i32 %188, metadata !3729, metadata !DIExpression()), !dbg !3907
  %189 = icmp slt i32 %188, 0, !dbg !3908
  %190 = add i32 %29, 1, !dbg !3906
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3910
  call void @llvm.dbg.value(metadata i8* %192, metadata !3717, metadata !DIExpression()), !dbg !3790
  %193 = icmp sgt i32 %76, -1, !dbg !3911
  br i1 %193, label %194, label %196, !dbg !3913

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !3914
  call void @llvm.dbg.value(metadata i32 %195, metadata !3732, metadata !DIExpression()), !dbg !3916
  br label %241, !dbg !3917

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !3918
  call void @llvm.dbg.value(metadata i32 %197, metadata !3732, metadata !DIExpression()), !dbg !3916
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3717, metadata !DIExpression()), !dbg !3790
  %199 = load i64, i64* %20, align 8, !dbg !3920
  %200 = trunc i64 %199 to i8, !dbg !3921
  store i8 %200, i8* %10, align 1, !dbg !3922
  call void @llvm.dbg.value(metadata i8* %23, metadata !3718, metadata !DIExpression()), !dbg !3790
  br label %245, !dbg !3923

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3924
  %203 = icmp eq i24 %202, 0, !dbg !3924
  %204 = trunc i24 %75 to i8, !dbg !3926
  %205 = shl i8 %204, 1, !dbg !3926
  %206 = and i8 %205, 32, !dbg !3926
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3926
  call void @llvm.dbg.value(metadata i8 %207, metadata !3719, metadata !DIExpression()), !dbg !3790
  %208 = load i64, i64* %20, align 8, !dbg !3927
  call void @llvm.dbg.value(metadata i64 %208, metadata !3655, metadata !DIExpression()), !dbg !3776
  %209 = icmp slt i64 %208, 0, !dbg !3928
  br i1 %209, label %210, label %212, !dbg !3930

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3719, metadata !DIExpression()), !dbg !3790
  %211 = sub nsw i64 0, %208, !dbg !3931
  store i64 %211, i64* %20, align 8, !dbg !3933
  br label %212, !dbg !3934

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3790
  call void @llvm.dbg.value(metadata i8 %213, metadata !3719, metadata !DIExpression()), !dbg !3790
  %214 = load i64, i64* %20, align 8, !dbg !3935
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %215, metadata !3717, metadata !DIExpression()), !dbg !3790
  br label %216, !dbg !3937

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3938
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3939
  call void @llvm.dbg.value(metadata i8* %218, metadata !3717, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 %217, metadata !3719, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.label(metadata !3775), !dbg !3940
  %219 = icmp sgt i32 %76, -1, !dbg !3941
  br i1 %219, label %222, label %220, !dbg !3942

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3943
  br label %245, !dbg !3942

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3945
  %224 = sub i32 %22, %223, !dbg !3945
  call void @llvm.dbg.value(metadata i32 %224, metadata !3734, metadata !DIExpression()), !dbg !3946
  %225 = load i24, i24* %15, align 8, !dbg !3947
  %226 = and i24 %225, -65, !dbg !3947
  store i24 %226, i24* %15, align 8, !dbg !3947
  %227 = icmp ugt i32 %76, %224, !dbg !3948
  br i1 %227, label %228, label %245, !dbg !3950

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3951
  store i32 %229, i32* %16, align 4, !dbg !3953
  br label %245, !dbg !3954

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3955
  %232 = icmp eq i8* %231, null, !dbg !3957
  br i1 %232, label %245, label %233, !dbg !3958

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3959
  %235 = zext i32 %234 to i64, !dbg !3959
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !3961
  call void @llvm.dbg.value(metadata i8* %236, metadata !3717, metadata !DIExpression()), !dbg !3790
  %237 = load i24, i24* %15, align 8, !dbg !3962
  %238 = or i24 %237, 1048576, !dbg !3962
  store i24 %238, i24* %15, align 8, !dbg !3962
  store i8 120, i8* %21, align 1, !dbg !3963
  br label %216, !dbg !3964

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3965
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !3968
  br label %363, !dbg !3969

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3970
  call void @llvm.dbg.value(metadata i32 %242, metadata !3732, metadata !DIExpression()), !dbg !3916
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3971
  call void @llvm.dbg.value(metadata i32 -1, metadata !3716, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %29, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8* %192, metadata !3717, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8* %243, metadata !3718, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 0, metadata !3719, metadata !DIExpression()), !dbg !3790
  %244 = icmp eq i8* %192, null, !dbg !3972
  br i1 %244, label %363, label %245, !dbg !3974, !llvm.loop !3786

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3943
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3790
  call void @llvm.dbg.value(metadata i32 0, metadata !3738, metadata !DIExpression()), !dbg !3790
  %250 = zext i8 %249 to i32, !dbg !3975
  %251 = icmp eq i8 %249, 0, !dbg !3977
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  call void @llvm.dbg.value(metadata i32 undef, metadata !3737, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  call void @llvm.dbg.value(metadata i32 undef, metadata !3737, metadata !DIExpression()), !dbg !3790
  %252 = icmp sgt i32 %58, 0, !dbg !3978
  br i1 %252, label %253, label %302, !dbg !3979

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3943
  %255 = icmp eq i24 %254, 0, !dbg !3943
  %256 = ptrtoint i8* %248 to i32, !dbg !3980
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  %257 = ptrtoint i8* %247 to i32, !dbg !3980
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  %258 = xor i1 %251, true, !dbg !3981
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  %259 = sext i1 %258 to i32, !dbg !3981
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  %260 = lshr i24 %246, 19, !dbg !3982
  %261 = and i24 %260, 1, !dbg !3982
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3982
  %263 = zext i24 %262 to i32, !dbg !3982
  %264 = add i32 %257, %259, !dbg !3982
  %265 = add i32 %256, %263, !dbg !3982
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  %266 = and i24 %246, 4194304, !dbg !3983
  %267 = icmp eq i24 %266, 0, !dbg !3983
  %268 = load i32, i32* %16, align 4, !dbg !3985
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3737, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  call void @llvm.dbg.value(metadata i32 undef, metadata !3737, metadata !DIExpression()), !dbg !3790
  %269 = load i32, i32* %17, align 8, !dbg !3986
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3986
  call void @llvm.dbg.value(metadata i32 undef, metadata !3737, metadata !DIExpression()), !dbg !3790
  %271 = add i32 %264, %58, !dbg !3986
  %272 = add i32 %265, %268, !dbg !3986
  %273 = add i32 %272, %270, !dbg !3987
  %274 = sub i32 %271, %273, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %274, metadata !3715, metadata !DIExpression()), !dbg !3790
  %275 = and i24 %246, 4, !dbg !3988
  %276 = icmp eq i24 %275, 0, !dbg !3988
  br i1 %276, label %277, label %302, !dbg !3989

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3739, metadata !DIExpression()), !dbg !3990
  %278 = and i24 %246, 64, !dbg !3991
  %279 = icmp eq i24 %278, 0, !dbg !3991
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3992
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3992
  %282 = select i1 %279, i32 32, i32 48, !dbg !3992
  br i1 %280, label %287, label %283, !dbg !3992

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %284, metadata !3744, metadata !DIExpression()), !dbg !3994
  %285 = icmp slt i32 %284, 0, !dbg !3995
  %286 = add i32 %29, 1, !dbg !3993
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3790
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %290, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i8 undef, metadata !3739, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i8 %288, metadata !3719, metadata !DIExpression()), !dbg !3790
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3997
  %292 = add i32 %291, -1, !dbg !3997
  br label %293, !dbg !3997

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3998
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %295, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %294, metadata !3715, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %294, metadata !3715, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3790
  %296 = icmp sgt i32 %294, 0, !dbg !3999
  br i1 %296, label %297, label %302, !dbg !3997

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %298, metadata !3715, metadata !DIExpression()), !dbg !3790
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4001
  call void @llvm.dbg.value(metadata i32 %299, metadata !3750, metadata !DIExpression()), !dbg !4002
  %300 = icmp slt i32 %299, 0, !dbg !4003
  %301 = add i32 %295, 1, !dbg !4001
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %300, label %361, label %293, !llvm.loop !4005

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3790
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3790
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %305, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %304, metadata !3715, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i8 %303, metadata !3719, metadata !DIExpression()), !dbg !3790
  %306 = icmp eq i8 %303, 0, !dbg !4007
  br i1 %306, label %312, label %307, !dbg !4008

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4009
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %309, metadata !3753, metadata !DIExpression()), !dbg !4011
  %310 = icmp slt i32 %309, 0, !dbg !4012
  %311 = add i32 %305, 1, !dbg !4010
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %313, metadata !3654, metadata !DIExpression()), !dbg !3776
  %314 = lshr i24 %246, 20, !dbg !4014
  %315 = lshr i24 %246, 19, !dbg !4015
  %316 = or i24 %314, %315, !dbg !4016
  %317 = and i24 %316, 1, !dbg !4016
  %318 = icmp eq i24 %317, 0, !dbg !4016
  br i1 %318, label %323, label %319, !dbg !4017

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %320, metadata !3757, metadata !DIExpression()), !dbg !4019
  %321 = icmp slt i32 %320, 0, !dbg !4020
  %322 = add i32 %313, 1, !dbg !4018
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %324, metadata !3654, metadata !DIExpression()), !dbg !3776
  %325 = and i24 %246, 1048576, !dbg !4022
  %326 = icmp eq i24 %325, 0, !dbg !4022
  br i1 %326, label %333, label %327, !dbg !4023

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4024
  %329 = zext i8 %328 to i32, !dbg !4024
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %330, metadata !3763, metadata !DIExpression()), !dbg !4025
  %331 = icmp slt i32 %330, 0, !dbg !4026
  %332 = add i32 %324, 1, !dbg !4024
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %334, metadata !3654, metadata !DIExpression()), !dbg !3776
  %335 = load i32, i32* %16, align 4, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %335, metadata !3738, metadata !DIExpression()), !dbg !3790
  br label %336, !dbg !4029

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4030
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %338, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %337, metadata !3738, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3790
  %339 = icmp sgt i32 %337, 0, !dbg !4031
  br i1 %339, label %340, label %345, !dbg !4029

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4032
  call void @llvm.dbg.value(metadata i32 %341, metadata !3738, metadata !DIExpression()), !dbg !3790
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %342, metadata !3767, metadata !DIExpression()), !dbg !4034
  %343 = icmp slt i32 %342, 0, !dbg !4035
  %344 = add i32 %338, 1, !dbg !4033
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %343, label %361, label %336, !llvm.loop !4037

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %346, metadata !3770, metadata !DIExpression()), !dbg !4040
  %347 = icmp slt i32 %346, 0, !dbg !4041
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %349, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %304, metadata !3715, metadata !DIExpression()), !dbg !3790
  %350 = icmp sgt i32 %304, 0, !dbg !4043
  br i1 %350, label %351, label %363, !dbg !4044

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4044
  %353 = add i32 %352, %338, !dbg !4044
  br label %354, !dbg !4044

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %355, metadata !3715, metadata !DIExpression()), !dbg !3790
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %356, metadata !3772, metadata !DIExpression()), !dbg !4046
  %357 = icmp slt i32 %356, 0, !dbg !4047
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4049
  call void @llvm.dbg.value(metadata i32 undef, metadata !3654, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3776
  call void @llvm.dbg.value(metadata i32 %359, metadata !3715, metadata !DIExpression()), !dbg !3790
  %360 = icmp sgt i32 %355, 1, !dbg !4043
  br i1 %360, label %354, label %363, !dbg !4044, !llvm.loop !4050

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !3787
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3780
  call void @llvm.dbg.value(metadata i32 %364, metadata !3654, metadata !DIExpression()), !dbg !3776
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !3787
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3776
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4052
  ret i32 %366, !dbg !4052
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4053 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4057, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i8* %1, metadata !4058, metadata !DIExpression()), !dbg !4059
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4060
  store i24 0, i24* %3, align 4, !dbg !4060
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4060
  store i8 0, i8* %4, align 1, !dbg !4060
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4060
  store i32 0, i32* %5, align 4, !dbg !4060
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4060
  store i32 0, i32* %6, align 4, !dbg !4060
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4061
  call void @llvm.dbg.value(metadata i8* %7, metadata !4058, metadata !DIExpression()), !dbg !4059
  %8 = load i8, i8* %7, align 1, !dbg !4062
  %9 = icmp eq i8 %8, 37, !dbg !4064
  br i1 %9, label %10, label %12, !dbg !4065

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4066
  call void @llvm.dbg.value(metadata i8* %11, metadata !4058, metadata !DIExpression()), !dbg !4059
  store i8 37, i8* %4, align 1, !dbg !4068
  br label %18, !dbg !4069

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4070
  call void @llvm.dbg.value(metadata i8* %13, metadata !4058, metadata !DIExpression()), !dbg !4059
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4071
  call void @llvm.dbg.value(metadata i8* %14, metadata !4058, metadata !DIExpression()), !dbg !4059
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4072
  call void @llvm.dbg.value(metadata i8* %15, metadata !4058, metadata !DIExpression()), !dbg !4059
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4073
  call void @llvm.dbg.value(metadata i8* %16, metadata !4058, metadata !DIExpression()), !dbg !4059
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %17, metadata !4058, metadata !DIExpression()), !dbg !4059
  br label %18, !dbg !4075

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4059
  ret i8* %19, !dbg !4076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4077 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4081, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i8* %1, metadata !4082, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i8* %2, metadata !4083, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i8* %3, metadata !4084, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i32 0, metadata !4085, metadata !DIExpression()), !dbg !4088
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4089

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4090
  call void @llvm.dbg.value(metadata i32 %9, metadata !4085, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.value(metadata i8* %8, metadata !4083, metadata !DIExpression()), !dbg !4088
  %10 = icmp ult i8* %8, %3, !dbg !4091
  br i1 %10, label %11, label %13, !dbg !4092

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4093
  br label %17, !dbg !4092

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4094

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4095
  %16 = icmp eq i8 %15, 0, !dbg !4094
  br i1 %16, label %24, label %17, !dbg !4089

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4093
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %19, metadata !4083, metadata !DIExpression()), !dbg !4088
  %20 = zext i8 %18 to i32, !dbg !4097
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4098
  call void @llvm.dbg.value(metadata i32 %21, metadata !4086, metadata !DIExpression()), !dbg !4099
  %22 = icmp slt i32 %21, 0, !dbg !4100
  %23 = add i32 %9, 1, !dbg !4102
  call void @llvm.dbg.value(metadata i32 undef, metadata !4085, metadata !DIExpression()), !dbg !4088
  br i1 %22, label %24, label %7, !llvm.loop !4103

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4088
  ret i32 %25, !dbg !4105
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4106 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4110, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4111, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i8* %2, metadata !4112, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i8* %3, metadata !4113, metadata !DIExpression()), !dbg !4120
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4121
  %6 = load i8, i8* %5, align 1, !dbg !4121
  %7 = zext i8 %6 to i32, !dbg !4122
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4123
  %9 = icmp eq i32 %8, 0, !dbg !4123
  call void @llvm.dbg.value(metadata i1 %9, metadata !4114, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4120
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %10, metadata !4115, metadata !DIExpression()), !dbg !4120
  %11 = ptrtoint i8* %3 to i32, !dbg !4125
  %12 = ptrtoint i8* %2 to i32, !dbg !4125
  %13 = sub i32 %11, %12, !dbg !4125
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4126
  call void @llvm.dbg.value(metadata i8* %14, metadata !4117, metadata !DIExpression()), !dbg !4120
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4127

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4120
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4110, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i8* %18, metadata !4117, metadata !DIExpression()), !dbg !4120
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4128
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4129
  call void @llvm.dbg.value(metadata i32 %25, metadata !4118, metadata !DIExpression()), !dbg !4130
  %26 = icmp ult i32 %25, 10, !dbg !4131
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4132
  %28 = add i32 %27, %25, !dbg !4130
  %29 = trunc i32 %28 to i8, !dbg !4132
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %30, metadata !4117, metadata !DIExpression()), !dbg !4120
  store i8 %29, i8* %30, align 1, !dbg !4134
  call void @llvm.dbg.value(metadata i64 %22, metadata !4110, metadata !DIExpression()), !dbg !4120
  %31 = icmp uge i64 %19, %15, !dbg !4135
  %32 = icmp ugt i8* %30, %2, !dbg !4136
  %33 = and i1 %31, %32, !dbg !4136
  br i1 %33, label %17, label %34, !dbg !4137, !llvm.loop !4138

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4140
  %36 = load i24, i24* %35, align 4, !dbg !4140
  %37 = and i24 %36, 32, !dbg !4140
  %38 = icmp eq i24 %37, 0, !dbg !4140
  br i1 %38, label %44, label %39, !dbg !4142

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4143

40:                                               ; preds = %39
  br label %41, !dbg !4145

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4149
  store i24 %43, i24* %35, align 4, !dbg !4149
  br label %44, !dbg !4150

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4150
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4151 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4157, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i8* %1, metadata !4158, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i32 %2, metadata !4159, metadata !DIExpression()), !dbg !4160
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4161
  %5 = load i24, i24* %4, align 4, !dbg !4161
  %6 = lshr i24 %5, 11, !dbg !4161
  %7 = and i24 %6, 15, !dbg !4161
  %8 = zext i24 %7 to i32, !dbg !4161
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4162

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4163
  store i32 %2, i32* %10, align 4, !dbg !4165
  br label %28, !dbg !4166

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4167
  store i8 %12, i8* %1, align 1, !dbg !4168
  br label %28, !dbg !4169

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4170
  %15 = bitcast i8* %1 to i16*, !dbg !4171
  store i16 %14, i16* %15, align 2, !dbg !4172
  br label %28, !dbg !4173

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4174
  store i32 %2, i32* %17, align 4, !dbg !4175
  br label %28, !dbg !4176

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4177
  %20 = bitcast i8* %1 to i64*, !dbg !4178
  store i64 %19, i64* %20, align 8, !dbg !4179
  br label %28, !dbg !4180

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4181
  %23 = bitcast i8* %1 to i64*, !dbg !4182
  store i64 %22, i64* %23, align 8, !dbg !4183
  br label %28, !dbg !4184

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4185
  store i32 %2, i32* %25, align 4, !dbg !4186
  br label %28, !dbg !4187

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4188
  store i32 %2, i32* %27, align 4, !dbg !4189
  br label %28, !dbg !4190

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4191
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4195, metadata !DIExpression()), !dbg !4196
  %2 = add i32 %0, -65, !dbg !4197
  %3 = icmp ult i32 %2, 26, !dbg !4198
  %4 = zext i1 %3 to i32, !dbg !4198
  ret i32 %4, !dbg !4199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4200 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4204, metadata !DIExpression()), !dbg !4205
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4206

2:                                                ; preds = %1
  br label %4, !dbg !4207

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4209

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4210
  ret i32 %5, !dbg !4211
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4212 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4214, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %1, metadata !4215, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8 1, metadata !4216, metadata !DIExpression()), !dbg !4217
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4218

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4216, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %5, metadata !4215, metadata !DIExpression()), !dbg !4217
  %6 = load i8, i8* %5, align 1, !dbg !4219
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4221

7:                                                ; preds = %4
  br label %11, !dbg !4222

8:                                                ; preds = %4
  br label %11, !dbg !4224

9:                                                ; preds = %4
  br label %11, !dbg !4225

10:                                               ; preds = %4
  br label %11, !dbg !4226

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4227
  %14 = or i24 %13, %12, !dbg !4227
  store i24 %14, i24* %3, align 4, !dbg !4227
  call void @llvm.dbg.value(metadata i8 poison, metadata !4216, metadata !DIExpression()), !dbg !4217
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4215, metadata !DIExpression()), !dbg !4217
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4216, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %15, metadata !4215, metadata !DIExpression()), !dbg !4217
  %17 = load i24, i24* %3, align 4, !dbg !4228
  %18 = and i24 %17, 68, !dbg !4230
  %19 = icmp eq i24 %18, 68, !dbg !4230
  br i1 %19, label %20, label %22, !dbg !4230

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4231
  store i24 %21, i24* %3, align 4, !dbg !4231
  br label %22, !dbg !4233

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4234
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4235 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4237, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.value(metadata i8* %1, metadata !4238, metadata !DIExpression()), !dbg !4241
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4242
  %5 = load i24, i24* %4, align 4, !dbg !4243
  %6 = or i24 %5, 128, !dbg !4243
  store i24 %6, i24* %4, align 4, !dbg !4243
  call void @llvm.dbg.value(metadata i8* %1, metadata !4238, metadata !DIExpression()), !dbg !4241
  %7 = load i8, i8* %1, align 1, !dbg !4244
  %8 = icmp eq i8 %7, 42, !dbg !4246
  br i1 %8, label %9, label %12, !dbg !4247

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4248
  store i24 %10, i24* %4, align 4, !dbg !4248
  call void @llvm.dbg.value(metadata i8* %1, metadata !4238, metadata !DIExpression()), !dbg !4241
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4250
  call void @llvm.dbg.value(metadata i8* %11, metadata !4238, metadata !DIExpression()), !dbg !4241
  store i8* %11, i8** %3, align 4, !dbg !4250
  br label %29, !dbg !4251

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4239, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.value(metadata i8** %3, metadata !4238, metadata !DIExpression(DW_OP_deref)), !dbg !4241
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %13, metadata !4240, metadata !DIExpression()), !dbg !4241
  %14 = load i8*, i8** %3, align 4, !dbg !4253
  call void @llvm.dbg.value(metadata i8* %14, metadata !4238, metadata !DIExpression()), !dbg !4241
  %15 = icmp eq i8* %14, %1, !dbg !4255
  br i1 %15, label %29, label %16, !dbg !4256

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4257
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4259
  store i32 %13, i32* %18, align 4, !dbg !4260
  %19 = lshr i32 %13, 31, !dbg !4261
  %20 = lshr i24 %17, 1, !dbg !4262
  %21 = and i24 %20, 1, !dbg !4262
  %22 = zext i24 %21 to i32, !dbg !4262
  %23 = or i32 %19, %22, !dbg !4262
  %24 = trunc i32 %23 to i24, !dbg !4262
  %25 = shl nuw nsw i24 %24, 1, !dbg !4262
  %26 = and i24 %17, -131, !dbg !4262
  %27 = or i24 %26, 128, !dbg !4262
  %28 = or i24 %25, %27, !dbg !4262
  store i24 %28, i24* %4, align 4, !dbg !4262
  br label %29, !dbg !4263

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4241
  ret i8* %30, !dbg !4264
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4265 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4267, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.value(metadata i8* %1, metadata !4268, metadata !DIExpression()), !dbg !4270
  %4 = load i8, i8* %1, align 1, !dbg !4271
  %5 = icmp eq i8 %4, 46, !dbg !4272
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4273
  %7 = load i24, i24* %6, align 4, !dbg !4274
  %8 = select i1 %5, i24 512, i24 0, !dbg !4274
  %9 = and i24 %7, -513, !dbg !4274
  %10 = or i24 %9, %8, !dbg !4274
  store i24 %10, i24* %6, align 4, !dbg !4274
  br i1 %5, label %11, label %32, !dbg !4275

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4268, metadata !DIExpression()), !dbg !4270
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %12, metadata !4268, metadata !DIExpression()), !dbg !4270
  store i8* %12, i8** %3, align 4, !dbg !4276
  %13 = load i8, i8* %12, align 1, !dbg !4277
  %14 = icmp eq i8 %13, 42, !dbg !4279
  br i1 %14, label %15, label %18, !dbg !4280

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4281
  store i24 %16, i24* %6, align 4, !dbg !4281
  call void @llvm.dbg.value(metadata i8* %12, metadata !4268, metadata !DIExpression()), !dbg !4270
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4283
  call void @llvm.dbg.value(metadata i8* %17, metadata !4268, metadata !DIExpression()), !dbg !4270
  store i8* %17, i8** %3, align 4, !dbg !4283
  br label %32, !dbg !4284

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4268, metadata !DIExpression(DW_OP_deref)), !dbg !4270
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !4285
  call void @llvm.dbg.value(metadata i32 %19, metadata !4269, metadata !DIExpression()), !dbg !4270
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4286
  store i32 %19, i32* %20, align 4, !dbg !4287
  %21 = lshr i32 %19, 31, !dbg !4288
  %22 = load i24, i24* %6, align 4, !dbg !4289
  %23 = lshr i24 %22, 1, !dbg !4289
  %24 = and i24 %23, 1, !dbg !4289
  %25 = zext i24 %24 to i32, !dbg !4289
  %26 = or i32 %21, %25, !dbg !4289
  %27 = trunc i32 %26 to i24, !dbg !4289
  %28 = shl nuw nsw i24 %27, 1, !dbg !4289
  %29 = and i24 %22, -3, !dbg !4289
  %30 = or i24 %28, %29, !dbg !4289
  store i24 %30, i24* %6, align 4, !dbg !4289
  %31 = load i8*, i8** %3, align 4, !dbg !4290
  call void @llvm.dbg.value(metadata i8* %31, metadata !4268, metadata !DIExpression()), !dbg !4270
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4270
  ret i8* %33, !dbg !4291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4292 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4294, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i8* %1, metadata !4295, metadata !DIExpression()), !dbg !4296
  %3 = load i8, i8* %1, align 1, !dbg !4297
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4298

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %5, metadata !4295, metadata !DIExpression()), !dbg !4296
  %6 = load i8, i8* %5, align 1, !dbg !4302
  %7 = icmp eq i8 %6, 104, !dbg !4303
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4304
  %9 = load i24, i24* %8, align 4, !dbg !4304
  %10 = and i24 %9, -30721, !dbg !4304
  br i1 %7, label %11, label %14, !dbg !4305

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4306
  store i24 %12, i24* %8, align 4, !dbg !4306
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4308
  call void @llvm.dbg.value(metadata i8* %13, metadata !4295, metadata !DIExpression()), !dbg !4296
  br label %56, !dbg !4309

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4310
  store i24 %15, i24* %8, align 4, !dbg !4310
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4312
  call void @llvm.dbg.value(metadata i8* %17, metadata !4295, metadata !DIExpression()), !dbg !4296
  %18 = load i8, i8* %17, align 1, !dbg !4314
  %19 = icmp eq i8 %18, 108, !dbg !4315
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4316
  %21 = load i24, i24* %20, align 4, !dbg !4316
  %22 = and i24 %21, -30721, !dbg !4316
  br i1 %19, label %23, label %26, !dbg !4317

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4318
  store i24 %24, i24* %20, align 4, !dbg !4318
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4320
  call void @llvm.dbg.value(metadata i8* %25, metadata !4295, metadata !DIExpression()), !dbg !4296
  br label %56, !dbg !4321

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4322
  store i24 %27, i24* %20, align 4, !dbg !4322
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4324
  %30 = load i24, i24* %29, align 4, !dbg !4325
  %31 = and i24 %30, -30721, !dbg !4325
  %32 = or i24 %31, 10240, !dbg !4325
  store i24 %32, i24* %29, align 4, !dbg !4325
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4326
  call void @llvm.dbg.value(metadata i8* %33, metadata !4295, metadata !DIExpression()), !dbg !4296
  br label %56, !dbg !4327

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4328
  %36 = load i24, i24* %35, align 4, !dbg !4329
  %37 = and i24 %36, -30721, !dbg !4329
  %38 = or i24 %37, 12288, !dbg !4329
  store i24 %38, i24* %35, align 4, !dbg !4329
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4330
  call void @llvm.dbg.value(metadata i8* %39, metadata !4295, metadata !DIExpression()), !dbg !4296
  br label %56, !dbg !4331

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4332
  %42 = load i24, i24* %41, align 4, !dbg !4333
  %43 = and i24 %42, -30721, !dbg !4333
  %44 = or i24 %43, 14336, !dbg !4333
  store i24 %44, i24* %41, align 4, !dbg !4333
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4334
  call void @llvm.dbg.value(metadata i8* %45, metadata !4295, metadata !DIExpression()), !dbg !4296
  br label %56, !dbg !4335

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4336
  %48 = load i24, i24* %47, align 4, !dbg !4337
  %49 = and i24 %48, -30723, !dbg !4337
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4338
  call void @llvm.dbg.value(metadata i8* %50, metadata !4295, metadata !DIExpression()), !dbg !4296
  %51 = or i24 %49, 16386, !dbg !4339
  store i24 %51, i24* %47, align 4, !dbg !4339
  br label %56, !dbg !4340

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4341
  %54 = load i24, i24* %53, align 4, !dbg !4342
  %55 = and i24 %54, -30721, !dbg !4342
  store i24 %55, i24* %53, align 4, !dbg !4342
  br label %56, !dbg !4343

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4295, metadata !DIExpression()), !dbg !4296
  ret i8* %57, !dbg !4344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4345 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4347, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8* %1, metadata !4348, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8 0, metadata !4349, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8* %1, metadata !4348, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4352
  %3 = load i8, i8* %1, align 1, !dbg !4353
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4354
  store i8 %3, i8* %4, align 1, !dbg !4355
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4356

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4357

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4358
  %9 = load i24, i24* %8, align 4, !dbg !4358
  %10 = and i24 %9, -458753, !dbg !4358
  %11 = or i24 %10, %7, !dbg !4358
  call void @llvm.dbg.label(metadata !4350), !dbg !4359
  %12 = and i24 %9, 30720, !dbg !4360
  %13 = icmp eq i24 %12, 16384, !dbg !4360
  %14 = zext i1 %13 to i24, !dbg !4362
  %15 = or i24 %11, %14, !dbg !4362
  %16 = icmp eq i8 %3, 99, !dbg !4363
  br i1 %16, label %17, label %43, !dbg !4365

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4366
  %19 = icmp ne i24 %18, 0, !dbg !4366
  call void @llvm.dbg.value(metadata i1 %19, metadata !4349, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4352
  br label %43, !dbg !4368

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4369
  %22 = load i24, i24* %21, align 4, !dbg !4370
  %23 = and i24 %22, -458753, !dbg !4370
  %24 = or i24 %23, 262144, !dbg !4370
  call void @llvm.dbg.value(metadata i8 1, metadata !4349, metadata !DIExpression()), !dbg !4352
  br label %43, !dbg !4371

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4374
  %27 = load i24, i24* %26, align 4, !dbg !4375
  %28 = and i24 %27, -458753, !dbg !4375
  %29 = or i24 %28, 196608, !dbg !4375
  %30 = and i24 %27, 30720, !dbg !4376
  %31 = icmp eq i24 %30, 16384, !dbg !4376
  br label %43, !dbg !4378

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4379
  %34 = load i24, i24* %33, align 4, !dbg !4380
  %35 = and i24 %34, -458753, !dbg !4380
  %36 = or i24 %35, 196608, !dbg !4380
  %37 = and i24 %34, 30720, !dbg !4381
  %38 = icmp ne i24 %37, 0, !dbg !4381
  br label %43, !dbg !4383

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4384
  %41 = load i24, i24* %40, align 4, !dbg !4385
  %42 = or i24 %41, 1, !dbg !4385
  br label %43, !dbg !4386

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4387
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4388
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4389
  call void @llvm.dbg.value(metadata i8* %48, metadata !4348, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i8 poison, metadata !4349, metadata !DIExpression()), !dbg !4352
  %49 = lshr i24 %44, 1, !dbg !4387
  %50 = and i24 %49, 1, !dbg !4387
  %51 = zext i24 %50 to i32, !dbg !4387
  %52 = or i32 %51, %47, !dbg !4387
  %53 = trunc i32 %52 to i24, !dbg !4387
  %54 = shl nuw nsw i24 %53, 1, !dbg !4387
  %55 = and i24 %44, -3, !dbg !4387
  %56 = or i24 %54, %55, !dbg !4387
  store i24 %56, i24* %46, align 4, !dbg !4387
  ret i8* %48, !dbg !4390
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !4391 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4396, metadata !DIExpression()), !dbg !4399
  %2 = load i8*, i8** %0, align 4, !dbg !4400
  call void @llvm.dbg.value(metadata i8* %2, metadata !4397, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 0, metadata !4398, metadata !DIExpression()), !dbg !4399
  %3 = load i8, i8* %2, align 1, !dbg !4401
  %4 = zext i8 %3 to i32, !dbg !4402
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !4403
  %6 = icmp eq i32 %5, 0, !dbg !4404
  br i1 %6, label %19, label %7, !dbg !4404

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8* %10, metadata !4397, metadata !DIExpression()), !dbg !4399
  %11 = mul i32 %9, 10, !dbg !4405
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4407
  call void @llvm.dbg.value(metadata i8* %12, metadata !4397, metadata !DIExpression()), !dbg !4399
  %13 = add i32 %11, -48, !dbg !4408
  %14 = add i32 %13, %8, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %14, metadata !4398, metadata !DIExpression()), !dbg !4399
  %15 = load i8, i8* %12, align 1, !dbg !4401
  %16 = zext i8 %15 to i32, !dbg !4402
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !4403
  %18 = icmp eq i32 %17, 0, !dbg !4404
  br i1 %18, label %19, label %7, !dbg !4404, !llvm.loop !4410

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4399
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4399
  store i8* %20, i8** %0, align 4, !dbg !4412
  ret i32 %21, !dbg !4413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !4414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4416, metadata !DIExpression()), !dbg !4417
  %2 = add i32 %0, -48, !dbg !4418
  %3 = icmp ult i32 %2, 10, !dbg !4419
  %4 = zext i1 %3 to i32, !dbg !4419
  ret i32 %4, !dbg !4420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4421 {
  tail call void asm sideeffect ".globl\09CONFIG_WATCHDOG\0A\09.equ\09CONFIG_WATCHDOG,1\0A\09.type\09CONFIG_WATCHDOG,%object", ""() #24, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x80000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #24, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #24, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED,%object", ""() #24, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED,%object", ""() #24, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED,%object", ""() #24, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED,%object", ""() #24, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED,%object", ""() #24, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #24, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ARDUINO_DUE\0A\09.equ\09CONFIG_BOARD_ARDUINO_DUE,1\0A\09.type\09CONFIG_BOARD_ARDUINO_DUE,%object", ""() #24, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAM3X\0A\09.equ\09CONFIG_SOC_SERIES_SAM3X,1\0A\09.type\09CONFIG_SOC_SERIES_SAM3X,%object", ""() #24, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM\0A\09.equ\09CONFIG_SOC_FAMILY_SAM,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM,%object", ""() #24, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAM3X8E\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAM3X8E,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAM3X8E,%object", ""() #24, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK,1\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK,%object", ""() #24, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA,0x06\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA,%object", ""() #24, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA,0x01\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA,%object", ""() #24, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #24, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20070000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !4745, !srcloc !4746
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !4747, !srcloc !4748
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !4749, !srcloc !4750
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !4751, !srcloc !4752
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !4753, !srcloc !4754
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !4755, !srcloc !4756
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !4757, !srcloc !4758
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !4759, !srcloc !4760
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !4761, !srcloc !4762
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !4763, !srcloc !4764
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !4765, !srcloc !4766
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !4767, !srcloc !4768
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !4769, !srcloc !4770
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !4771, !srcloc !4772
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !4773, !srcloc !4774
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !4775, !srcloc !4776
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !4777, !srcloc !4778
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !4779, !srcloc !4780
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !4781, !srcloc !4782
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !4783, !srcloc !4784
  tail call void asm sideeffect ".globl\09CONFIG_UART_SAM\0A\09.equ\09CONFIG_UART_SAM,1\0A\09.type\09CONFIG_UART_SAM,%object", ""() #24, !dbg !4785, !srcloc !4786
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !4787, !srcloc !4788
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !4789, !srcloc !4790
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !4791, !srcloc !4792
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !4793, !srcloc !4794
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !4795, !srcloc !4796
  tail call void asm sideeffect ".globl\09CONFIG_WDT_DISABLE_AT_BOOT\0A\09.equ\09CONFIG_WDT_DISABLE_AT_BOOT,1\0A\09.type\09CONFIG_WDT_DISABLE_AT_BOOT,%object", ""() #24, !dbg !4797, !srcloc !4798
  tail call void asm sideeffect ".globl\09CONFIG_WDT_SAM\0A\09.equ\09CONFIG_WDT_SAM,1\0A\09.type\09CONFIG_WDT_SAM,%object", ""() #24, !dbg !4799, !srcloc !4800
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM\0A\09.equ\09CONFIG_PINCTRL_SAM,1\0A\09.type\09CONFIG_PINCTRL_SAM,%object", ""() #24, !dbg !4801, !srcloc !4802
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !4803, !srcloc !4804
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !4805, !srcloc !4806
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !4807, !srcloc !4808
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !4809, !srcloc !4810
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !4811, !srcloc !4812
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !4813, !srcloc !4814
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !4815, !srcloc !4816
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !4817, !srcloc !4818
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !4819, !srcloc !4820
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !4821, !srcloc !4822
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !4823, !srcloc !4824
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !4825, !srcloc !4826
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !4827, !srcloc !4828
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !4829, !srcloc !4830
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !4831, !srcloc !4832
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !4833, !srcloc !4834
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !4835, !srcloc !4836
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !4837, !srcloc !4838
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !4839, !srcloc !4840
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !4841, !srcloc !4842
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !4843, !srcloc !4844
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !4845, !srcloc !4846
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETLINE\0A\09.equ\09CONFIG_CONSOLE_GETLINE,1\0A\09.type\09CONFIG_CONSOLE_GETLINE,%object", ""() #24, !dbg !4847, !srcloc !4848
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !4849, !srcloc !4850
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !4851, !srcloc !4852
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !4853, !srcloc !4854
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !4855, !srcloc !4856
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !4857, !srcloc !4858
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !4859, !srcloc !4860
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !4861, !srcloc !4862
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !4863, !srcloc !4864
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !4865, !srcloc !4866
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !4867, !srcloc !4868
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !4869, !srcloc !4870
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !4871, !srcloc !4872
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !4873, !srcloc !4874
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !4875, !srcloc !4876
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !4877, !srcloc !4878
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !4879, !srcloc !4880
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !4881, !srcloc !4882
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !4883, !srcloc !4884
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !4885, !srcloc !4886
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !4887, !srcloc !4888
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !4889, !srcloc !4890
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !4891, !srcloc !4892
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !4893, !srcloc !4894
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !4895, !srcloc !4896
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !4897, !srcloc !4898
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !4899, !srcloc !4900
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !4901, !srcloc !4902
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !4903, !srcloc !4904
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !4905, !srcloc !4906
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !4907, !srcloc !4908
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !4909, !srcloc !4910
  ret void, !dbg !4911
}

; Function Attrs: noinline nounwind optsize
define internal i32 @atmel_sam3x_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4912 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4914, metadata !DIExpression()), !dbg !4916
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !4917, !srcloc !4926
  call void @llvm.dbg.value(metadata i32 undef, metadata !4923, metadata !DIExpression()) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i32 undef, metadata !4924, metadata !DIExpression()) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i32 undef, metadata !4915, metadata !DIExpression()), !dbg !4916
  store volatile i32 1024, i32* inttoptr (i32 1074661888 to i32*), align 512, !dbg !4928
  store volatile i32 1024, i32* inttoptr (i32 1074662400 to i32*), align 1024, !dbg !4929
  store volatile i32 3669769, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !4930
  br label %3, !dbg !4935

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4936
  %5 = and i32 %4, 1, !dbg !4937
  %6 = icmp eq i32 %5, 0, !dbg !4938
  br i1 %6, label %3, label %7, !dbg !4935, !llvm.loop !4939

7:                                                ; preds = %3
  store volatile i32 20446985, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !4941
  br label %8, !dbg !4942

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4943
  %10 = and i32 %9, 65536, !dbg !4944
  %11 = icmp eq i32 %10, 0, !dbg !4945
  br i1 %11, label %8, label %12, !dbg !4942, !llvm.loop !4946

12:                                               ; preds = %8
  store volatile i32 20446977, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !4948
  br label %13, !dbg !4949

13:                                               ; preds = %13, %12
  %14 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4950
  %15 = and i32 %14, 131072, !dbg !4951
  %16 = icmp eq i32 %15, 0, !dbg !4949
  br i1 %16, label %17, label %13, !dbg !4949, !llvm.loop !4952

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !4954
  %19 = and i32 %18, -4, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %19, metadata !4933, metadata !DIExpression()), !dbg !4956
  %20 = or i32 %19, 1, !dbg !4957
  store volatile i32 %20, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !4958
  br label %21, !dbg !4959

21:                                               ; preds = %21, %17
  %22 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4960
  %23 = and i32 %22, 8, !dbg !4961
  %24 = icmp eq i32 %23, 0, !dbg !4962
  br i1 %24, label %21, label %25, !dbg !4959, !llvm.loop !4963

25:                                               ; preds = %21
  store volatile i32 537280257, i32* inttoptr (i32 1074660904 to i32*), align 8, !dbg !4965
  br label %26, !dbg !4966

26:                                               ; preds = %26, %25
  %27 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4967
  %28 = and i32 %27, 2, !dbg !4968
  %29 = icmp eq i32 %28, 0, !dbg !4969
  br i1 %29, label %26, label %30, !dbg !4966, !llvm.loop !4970

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !4972
  %32 = and i32 %31, -113, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %32, metadata !4933, metadata !DIExpression()), !dbg !4956
  store volatile i32 %32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !4974
  br label %33, !dbg !4975

33:                                               ; preds = %33, %30
  %34 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4976
  %35 = and i32 %34, 8, !dbg !4977
  %36 = icmp eq i32 %35, 0, !dbg !4978
  br i1 %36, label %33, label %37, !dbg !4975, !llvm.loop !4979

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !4981
  %39 = and i32 %38, -4, !dbg !4982
  call void @llvm.dbg.value(metadata i32 %39, metadata !4933, metadata !DIExpression()), !dbg !4956
  %40 = or i32 %39, 2, !dbg !4983
  store volatile i32 %40, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !4984
  br label %41, !dbg !4985

41:                                               ; preds = %41, %37
  %42 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !4986
  %43 = and i32 %42, 8, !dbg !4987
  %44 = icmp eq i32 %43, 0, !dbg !4988
  br i1 %44, label %41, label %45, !dbg !4985, !llvm.loop !4989

45:                                               ; preds = %41
  %46 = extractvalue { i32, i32 } %2, 0, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %46, metadata !4923, metadata !DIExpression()) #24, !dbg !4927
  call void @llvm.dbg.value(metadata i32 %46, metadata !4915, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4991, metadata !DIExpression()) #24, !dbg !4996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %46) #24, !dbg !4998, !srcloc !4999
  ret i32 0, !dbg !5000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @soc_pmc_peripheral_enable(i32 noundef %0) local_unnamed_addr #15 !dbg !5001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5006, metadata !DIExpression()), !dbg !5007
  %2 = icmp ult i32 %0, 32, !dbg !5008
  br i1 %2, label %3, label %5, !dbg !5010

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !5011
  store volatile i32 %4, i32* inttoptr (i32 1074660880 to i32*), align 16, !dbg !5013
  br label %10, !dbg !5014

5:                                                ; preds = %1
  %6 = icmp ult i32 %0, 64, !dbg !5015
  br i1 %6, label %7, label %10, !dbg !5017

7:                                                ; preds = %5
  %8 = and i32 %0, 31, !dbg !5018
  %9 = shl nuw i32 1, %8, !dbg !5018
  store volatile i32 %9, i32* inttoptr (i32 1074661120 to i32*), align 256, !dbg !5020
  br label %10, !dbg !5021

10:                                               ; preds = %5, %7, %3
  ret void, !dbg !5022
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @soc_pmc_peripheral_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !5023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5025, metadata !DIExpression()), !dbg !5026
  %2 = icmp ult i32 %0, 32, !dbg !5027
  br i1 %2, label %7, label %3, !dbg !5029

3:                                                ; preds = %1
  %4 = icmp ult i32 %0, 64, !dbg !5030
  br i1 %4, label %5, label %11, !dbg !5032

5:                                                ; preds = %3
  %6 = and i32 %0, 31, !dbg !5033
  br label %7, !dbg !5035

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %0, %1 ]
  %9 = phi i32* [ inttoptr (i32 1074661124 to i32*), %5 ], [ inttoptr (i32 1074660884 to i32*), %1 ]
  %10 = shl nuw i32 1, %8, !dbg !5036
  store volatile i32 %10, i32* %9, align 4, !dbg !5036
  br label %11, !dbg !5037

11:                                               ; preds = %7, %3
  ret void, !dbg !5037
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @soc_pmc_peripheral_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5042, metadata !DIExpression()), !dbg !5043
  %2 = icmp ult i32 %0, 32, !dbg !5044
  br i1 %2, label %3, label %8, !dbg !5046

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 1074660888 to i32*), align 8, !dbg !5047
  %5 = shl nuw i32 1, %0, !dbg !5049
  %6 = and i32 %4, %5, !dbg !5050
  %7 = icmp ne i32 %6, 0, !dbg !5051
  br label %16, !dbg !5052

8:                                                ; preds = %1
  %9 = icmp ult i32 %0, 64, !dbg !5053
  br i1 %9, label %10, label %16, !dbg !5055

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1074661128 to i32*), align 8, !dbg !5056
  %12 = and i32 %0, 31, !dbg !5058
  %13 = shl nuw i32 1, %12, !dbg !5058
  %14 = and i32 %11, %13, !dbg !5059
  %15 = icmp ne i32 %14, 0, !dbg !5060
  br label %16, !dbg !5061

16:                                               ; preds = %8, %10, %3
  %17 = phi i1 [ %7, %3 ], [ %15, %10 ], [ false, %8 ]
  %18 = zext i1 %17 to i32, !dbg !5043
  ret i32 %18, !dbg !5062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_gpio_configure(%struct.soc_gpio_pin* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !5063 {
  call void @llvm.dbg.value(metadata %struct.soc_gpio_pin* %0, metadata !5135, metadata !DIExpression()), !dbg !5141
  %2 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 0, !dbg !5142
  %3 = load i32, i32* %2, align 4, !dbg !5142
  call void @llvm.dbg.value(metadata i32 %3, metadata !5136, metadata !DIExpression()), !dbg !5141
  %4 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 1, !dbg !5143
  %5 = load %struct.Pio*, %struct.Pio** %4, align 4, !dbg !5143
  call void @llvm.dbg.value(metadata %struct.Pio* %5, metadata !5137, metadata !DIExpression()), !dbg !5141
  %6 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 2, !dbg !5144
  %7 = load i8, i8* %6, align 4, !dbg !5144
  call void @llvm.dbg.value(metadata i8 %7, metadata !5138, metadata !DIExpression()), !dbg !5141
  %8 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 3, !dbg !5145
  %9 = load i32, i32* %8, align 4, !dbg !5145
  call void @llvm.dbg.value(metadata i32 %9, metadata !5139, metadata !DIExpression()), !dbg !5141
  %10 = and i32 %9, 983040, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %9, metadata !5140, metadata !DIExpression(DW_OP_constu, 983040, DW_OP_and, DW_OP_stack_value)), !dbg !5141
  tail call fastcc void @configure_common_attr(%struct.Pio* noundef %5, i32 noundef %3, i32 noundef %9) #26, !dbg !5147
  %11 = lshr exact i32 %10, 16, !dbg !5148
  switch i32 %11, label %36 [
    i32 0, label %12
    i32 1, label %18
    i32 8, label %23
    i32 10, label %27
    i32 9, label %27
  ], !dbg !5148

12:                                               ; preds = %1
  %13 = xor i32 %3, -1, !dbg !5149
  %14 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 28, !dbg !5151
  %15 = load volatile i32, i32* %14, align 4, !dbg !5152
  %16 = and i32 %15, %13, !dbg !5152
  store volatile i32 %16, i32* %14, align 4, !dbg !5152
  %17 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 1, !dbg !5153
  br label %34, !dbg !5154

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 28, !dbg !5155
  %20 = load volatile i32, i32* %19, align 4, !dbg !5156
  %21 = or i32 %20, %3, !dbg !5156
  store volatile i32 %21, i32* %19, align 4, !dbg !5156
  %22 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 1, !dbg !5157
  br label %34, !dbg !5158

23:                                               ; preds = %1
  %24 = zext i8 %7 to i32, !dbg !5159
  tail call void @soc_pmc_peripheral_enable(i32 noundef %24) #25, !dbg !5160
  tail call fastcc void @configure_input_attr(%struct.Pio* noundef %5, i32 noundef %3, i32 noundef %9) #26, !dbg !5161
  %25 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 5, !dbg !5162
  store volatile i32 %3, i32* %25, align 4, !dbg !5163
  %26 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 0, !dbg !5164
  br label %34, !dbg !5165

27:                                               ; preds = %1, %1
  %28 = icmp eq i32 %10, 655360, !dbg !5166
  %29 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 13, !dbg !5168
  %30 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 12, !dbg !5168
  %31 = select i1 %28, i32* %30, i32* %29, !dbg !5168
  store volatile i32 %3, i32* %31, align 4, !dbg !5169
  tail call fastcc void @configure_output_attr(%struct.Pio* noundef nonnull %5, i32 noundef %3) #26, !dbg !5170
  %32 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 4, !dbg !5171
  store volatile i32 %3, i32* %32, align 4, !dbg !5172
  %33 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 0, !dbg !5173
  br label %34, !dbg !5174

34:                                               ; preds = %27, %23, %18, %12
  %35 = phi i32* [ %17, %12 ], [ %22, %18 ], [ %26, %23 ], [ %33, %27 ]
  store volatile i32 %3, i32* %35, align 4, !dbg !5175
  br label %36, !dbg !5176

36:                                               ; preds = %34, %1
  ret void, !dbg !5176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_common_attr(%struct.Pio* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !5177 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !5181, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %1, metadata !5182, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.value(metadata i32 %2, metadata !5183, metadata !DIExpression()), !dbg !5184
  %4 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 17, !dbg !5185
  store volatile i32 %1, i32* %4, align 4, !dbg !5186
  %5 = and i32 %2, 1, !dbg !5187
  %6 = icmp eq i32 %5, 0, !dbg !5187
  %7 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 24, !dbg !5189
  %8 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 25, !dbg !5189
  %9 = select i1 %6, i32* %7, i32* %8, !dbg !5189
  store volatile i32 %1, i32* %9, align 4, !dbg !5190
  %10 = and i32 %2, 4, !dbg !5191
  %11 = icmp eq i32 %10, 0, !dbg !5191
  %12 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 21, !dbg !5193
  %13 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 20, !dbg !5193
  %14 = select i1 %11, i32* %12, i32* %13, !dbg !5193
  store volatile i32 %1, i32* %14, align 4, !dbg !5194
  ret void, !dbg !5195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_input_attr(%struct.Pio* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !5196 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !5198, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i32 %1, metadata !5199, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i32 %2, metadata !5200, metadata !DIExpression()), !dbg !5201
  %4 = and i32 %2, 24, !dbg !5202
  switch i32 %4, label %7 [
    i32 0, label %12
    i32 8, label %5
  ], !dbg !5204

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 31, !dbg !5205
  br label %9, !dbg !5209

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 30, !dbg !5210
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i32* [ %8, %7 ], [ %6, %5 ]
  store volatile i32 %1, i32* %10, align 4, !dbg !5212
  %11 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 8, !dbg !5213
  br label %14, !dbg !5214

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 9, !dbg !5215
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32* [ %13, %12 ], [ %11, %9 ]
  store volatile i32 %1, i32* %15, align 4, !dbg !5217
  %16 = and i32 %2, 32, !dbg !5218
  %17 = icmp eq i32 %16, 0, !dbg !5218
  br i1 %17, label %38, label %18, !dbg !5220

18:                                               ; preds = %14
  %19 = trunc i32 %2 to i8, !dbg !5221
  %20 = and i8 %19, -64, !dbg !5221
  switch i8 %20, label %25 [
    i8 -128, label %21
    i8 64, label %23
  ], !dbg !5221

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 40, !dbg !5223
  br label %35, !dbg !5226

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 43, !dbg !5227
  br label %27, !dbg !5231

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 44, !dbg !5232
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i32* [ %26, %25 ], [ %24, %23 ]
  store volatile i32 %1, i32* %28, align 4, !dbg !5234
  %29 = and i32 %2, 256, !dbg !5235
  %30 = icmp eq i32 %29, 0, !dbg !5235
  %31 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 47, !dbg !5237
  %32 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 48, !dbg !5237
  %33 = select i1 %30, i32* %31, i32* %32, !dbg !5237
  store volatile i32 %1, i32* %33, align 4, !dbg !5238
  %34 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 39, !dbg !5239
  br label %35

35:                                               ; preds = %27, %21
  %36 = phi i32* [ %34, %27 ], [ %22, %21 ]
  store volatile i32 %1, i32* %36, align 4, !dbg !5240
  %37 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 16, !dbg !5241
  store volatile i32 %1, i32* %37, align 4, !dbg !5242
  br label %38, !dbg !5243

38:                                               ; preds = %14, %35
  ret void, !dbg !5244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_output_attr(%struct.Pio* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5245 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !5247, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i32 %1, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i32 undef, metadata !5249, metadata !DIExpression()), !dbg !5250
  %3 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 35, !dbg !5251
  store volatile i32 %1, i32* %3, align 4, !dbg !5252
  ret void, !dbg !5253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_gpio_list_configure(%struct.soc_gpio_pin* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5254 {
  call void @llvm.dbg.value(metadata %struct.soc_gpio_pin* %0, metadata !5258, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 %1, metadata !5259, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.value(metadata i32 0, metadata !5260, metadata !DIExpression()), !dbg !5263
  %3 = icmp eq i32 %1, 0, !dbg !5264
  br i1 %3, label %4, label %5, !dbg !5266

4:                                                ; preds = %5, %2
  ret void, !dbg !5267

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %8, %5 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5260, metadata !DIExpression()), !dbg !5263
  %7 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 %6, !dbg !5268
  tail call void @soc_gpio_configure(%struct.soc_gpio_pin* noundef %7) #26, !dbg !5270
  %8 = add nuw i32 %6, 1, !dbg !5271
  call void @llvm.dbg.value(metadata i32 %8, metadata !5260, metadata !DIExpression()), !dbg !5263
  %9 = icmp eq i32 %8, %1, !dbg !5264
  br i1 %9, label %4, label %5, !dbg !5266, !llvm.loop !5272
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @console_getline() local_unnamed_addr #1 !dbg !360 {
  %1 = load %struct.console_input*, %struct.console_input** @console_getline.cmd, align 4, !dbg !5274
  %2 = icmp eq %struct.console_input* %1, null, !dbg !5276
  br i1 %2, label %5, label %3, !dbg !5277

3:                                                ; preds = %0
  %4 = bitcast %struct.console_input* %1 to i8*, !dbg !5278
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull %4) #25, !dbg !5278
  br label %5, !dbg !5281

5:                                                ; preds = %3, %0
  %6 = tail call fastcc i8* @k_queue_get() #26, !dbg !5282
  call void @llvm.dbg.value(metadata i8* %6, metadata !365, metadata !DIExpression()), !dbg !5283
  store i8* %6, i8** bitcast (%struct.console_input** @console_getline.cmd to i8**), align 4, !dbg !5284
  %7 = getelementptr inbounds i8, i8* %6, i32 5, !dbg !5285
  ret i8* %7, !dbg !5286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !5287 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !5297, metadata !DIExpression()), !dbg !5298
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), metadata !5296, metadata !DIExpression()), !dbg !5298
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5299, !srcloc !5301
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @used_queue, i32 0, i32 0), [1 x i64] [i64 -1]) #25, !dbg !5302
  ret i8* %1, !dbg !5303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @console_getline_init() local_unnamed_addr #1 !dbg !5304 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast ([2 x %struct.console_input]* @line_bufs to i8*)) #25, !dbg !5308
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5307
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression()), !dbg !5307
  tail call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @free_queue, i32 0, i32 0), i8* noundef nonnull bitcast (%struct.console_input* getelementptr inbounds ([2 x %struct.console_input], [2 x %struct.console_input]* @line_bufs, i32 0, i32 1) to i8*)) #25, !dbg !5308
  call void @llvm.dbg.value(metadata i32 0, metadata !5306, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5307
  tail call void @uart_register_input(%struct.k_fifo* noundef nonnull @free_queue, %struct.k_fifo* noundef nonnull @used_queue, i8 (i8*, i8)* noundef null) #25, !dbg !5313
  ret void, !dbg !5314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5364, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5365, metadata !DIExpression()), !dbg !5366
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !5367
  ret void, !dbg !5368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5369 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5386, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5387, metadata !DIExpression()), !dbg !5389
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5390
  %4 = load i32, i32* %3, align 4, !dbg !5390
  call void @llvm.dbg.value(metadata i32 %4, metadata !5388, metadata !DIExpression()), !dbg !5389
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !5391
  ret void, !dbg !5392
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5393 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5397, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %0, metadata !5398, metadata !DIExpression()), !dbg !5400
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5401
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !5401
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5399, metadata !DIExpression()), !dbg !5402
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5402
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5403
  %5 = bitcast i8* %4 to i32*, !dbg !5403
  %6 = load i32, i32* %5, align 4, !dbg !5403
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5404
  store i32 %6, i32* %7, align 4, !dbg !5405
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !5406
  unreachable, !dbg !5407
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5411, metadata !DIExpression()), !dbg !5412
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !5413
  ret void, !dbg !5414
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5419, metadata !DIExpression()), !dbg !5420
  %2 = icmp sgt i32 %0, -1, !dbg !5421
  br i1 %2, label %3, label %8, !dbg !5423

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5424, !srcloc !5426
  %4 = and i32 %0, 31, !dbg !5427
  %5 = shl nuw i32 1, %4, !dbg !5428
  %6 = lshr i32 %0, 5, !dbg !5429
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5430
  store volatile i32 %5, i32* %7, align 4, !dbg !5431
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5432, !srcloc !5433
  br label %8, !dbg !5434

8:                                                ; preds = %3, %1
  ret void, !dbg !5435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5438, metadata !DIExpression()), !dbg !5439
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !5440
  ret void, !dbg !5441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5444, metadata !DIExpression()), !dbg !5445
  %2 = icmp sgt i32 %0, -1, !dbg !5446
  br i1 %2, label %3, label %8, !dbg !5448

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5449
  %5 = shl nuw i32 1, %4, !dbg !5451
  %6 = lshr i32 %0, 5, !dbg !5452
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5453
  store volatile i32 %5, i32* %7, align 4, !dbg !5454
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !5455, !srcloc !5459
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !5460, !srcloc !5463
  br label %8, !dbg !5464

8:                                                ; preds = %3, %1
  ret void, !dbg !5465
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5470, metadata !DIExpression()), !dbg !5471
  %2 = lshr i32 %0, 5, !dbg !5472
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5473
  %4 = load volatile i32, i32* %3, align 4, !dbg !5473
  %5 = and i32 %0, 31, !dbg !5474
  %6 = shl nuw i32 1, %5, !dbg !5474
  %7 = and i32 %4, %6, !dbg !5475
  ret i32 %7, !dbg !5476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !5477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5481, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32 %1, metadata !5482, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.value(metadata i32 %2, metadata !5483, metadata !DIExpression()), !dbg !5484
  %4 = add i32 %1, 1, !dbg !5485
  call void @llvm.dbg.value(metadata i32 %4, metadata !5482, metadata !DIExpression()), !dbg !5484
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !5488
  ret void, !dbg !5489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5494, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.value(metadata i32 %1, metadata !5495, metadata !DIExpression()), !dbg !5496
  %3 = trunc i32 %1 to i8, !dbg !5497
  %4 = shl i8 %3, 4, !dbg !5497
  %5 = and i32 %0, 15, !dbg !5499
  %6 = add nsw i32 %5, -4, !dbg !5499
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5499
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5499
  %9 = icmp slt i32 %0, 0, !dbg !5499
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5499
  store volatile i8 %4, i8* %10, align 1, !dbg !5497
  ret void, !dbg !5500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5503, metadata !DIExpression()), !dbg !5504
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !5505
  ret void, !dbg !5506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5507 {
  tail call void @z_SysNmiOnReset() #25, !dbg !5509
  tail call void @z_arm_int_exit() #25, !dbg !5510
  ret void, !dbg !5511
}

; Function Attrs: optsize
declare !dbg !5512 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5513 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !5515 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !5517
  tail call void @z_bss_zero() #25, !dbg !5518
  tail call void @z_data_copy() #25, !dbg !5519
  tail call void @z_arm_interrupt_init() #25, !dbg !5520
  tail call void @z_cstart() #28, !dbg !5521
  unreachable, !dbg !5521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5522 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5523
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !5524, !srcloc !5527
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !5528, !srcloc !5531
  ret void, !dbg !5532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5536, metadata !DIExpression()), !dbg !5537
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5538
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5539
  store i32 %0, i32* %3, align 4, !dbg !5540
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5541
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5542
  store i32 %4, i32* %5, align 4, !dbg !5543
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5544
  %7 = or i32 %6, 268435456, !dbg !5544
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5544
  call void @llvm.dbg.value(metadata i32 0, metadata !5545, metadata !DIExpression()) #24, !dbg !5548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !5550, !srcloc !5551
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5552
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5553
  %10 = load i32, i32* %9, align 4, !dbg !5553
  ret i32 %10, !dbg !5554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5665, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5666, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i8* %2, metadata !5667, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5668, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i8* %4, metadata !5669, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i8* %5, metadata !5670, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i8* %6, metadata !5671, metadata !DIExpression()), !dbg !5673
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5674
  call void @llvm.dbg.value(metadata i8* %8, metadata !5672, metadata !DIExpression()), !dbg !5673
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5675
  %10 = bitcast i8* %9 to i32*, !dbg !5675
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5676
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5677
  %12 = bitcast i8* %8 to i32*, !dbg !5678
  store i32 %11, i32* %12, align 4, !dbg !5679
  %13 = ptrtoint i8* %4 to i32, !dbg !5680
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5681
  %15 = bitcast i8* %14 to i32*, !dbg !5681
  store i32 %13, i32* %15, align 4, !dbg !5682
  %16 = ptrtoint i8* %5 to i32, !dbg !5683
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5684
  %18 = bitcast i8* %17 to i32*, !dbg !5684
  store i32 %16, i32* %18, align 4, !dbg !5685
  %19 = ptrtoint i8* %6 to i32, !dbg !5686
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5687
  %21 = bitcast i8* %20 to i32*, !dbg !5687
  store i32 %19, i32* %21, align 4, !dbg !5688
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5689
  %23 = bitcast i8* %22 to i32*, !dbg !5689
  store i32 16777216, i32* %23, align 4, !dbg !5690
  %24 = ptrtoint i8* %8 to i32, !dbg !5691
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5692
  store i32 %24, i32* %25, align 8, !dbg !5693
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5694
  store i32 0, i32* %26, align 4, !dbg !5695
  ret void, !dbg !5696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5701, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %1, metadata !5702, metadata !DIExpression()), !dbg !5707
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5708
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5703, metadata !DIExpression()), !dbg !5707
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5709
  br i1 %4, label %19, label %5, !dbg !5711

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5706, metadata !DIExpression()), !dbg !5707
  %6 = icmp eq i32 %0, -22, !dbg !5712
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5712
  %8 = load i32, i32* %7, align 4, !dbg !5712
  br i1 %6, label %16, label %9, !dbg !5714

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5712
  %11 = icmp ule i32 %10, %0, !dbg !5712
  %12 = icmp ugt i32 %8, %0, !dbg !5712
  %13 = and i1 %12, %11, !dbg !5712
  %14 = icmp ugt i32 %8, %1, !dbg !5712
  %15 = and i1 %14, %13, !dbg !5712
  br i1 %15, label %18, label %19, !dbg !5712

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5712
  br i1 %17, label %18, label %19, !dbg !5714

18:                                               ; preds = %9, %16
  br label %19, !dbg !5715

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5707
  ret i32 %20, !dbg !5717
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !5718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5722, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i8* %1, metadata !5723, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5724, metadata !DIExpression()), !dbg !5725
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5726
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !5727
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !5728, !srcloc !5729
  unreachable, !dbg !5730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5731 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5749, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 %1, metadata !5750, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 %2, metadata !5751, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5752, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i32 0, metadata !5753, metadata !DIExpression()), !dbg !5759
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5760
  %9 = and i32 %8, 511, !dbg !5761
  call void @llvm.dbg.value(metadata i32 %9, metadata !5754, metadata !DIExpression()), !dbg !5759
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !5762
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !5762
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5763
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !5763
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5758, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.value(metadata i32 0, metadata !5765, metadata !DIExpression()) #24, !dbg !5768
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !5770, !srcloc !5771
  call void @llvm.dbg.value(metadata i8* %6, metadata !5756, metadata !DIExpression(DW_OP_deref)), !dbg !5759
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !5772
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5757, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i8* %5, metadata !5755, metadata !DIExpression(DW_OP_deref)), !dbg !5759
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %12, metadata !5753, metadata !DIExpression()), !dbg !5759
  %13 = load i8, i8* %5, align 1, !dbg !5774, !range !5776
  call void @llvm.dbg.value(metadata i8 %13, metadata !5755, metadata !DIExpression()), !dbg !5759
  %14 = icmp eq i8 %13, 0, !dbg !5774
  br i1 %14, label %15, label %32, !dbg !5777

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5778
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !5779
  %18 = load i8, i8* %6, align 1, !dbg !5780, !range !5776
  call void @llvm.dbg.value(metadata i8 %18, metadata !5756, metadata !DIExpression()), !dbg !5759
  %19 = icmp eq i8 %18, 0, !dbg !5780
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5782
  %21 = load i32, i32* %20, align 4, !dbg !5782
  br i1 %19, label %27, label %22, !dbg !5783

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5784
  %24 = icmp eq i32 %23, 0, !dbg !5787
  br i1 %24, label %25, label %31, !dbg !5788

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5789
  br label %29, !dbg !5791

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5792
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5782
  br label %31, !dbg !5794

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !5794
  br label %32, !dbg !5795

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !5795
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !5795
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !5795
  ret void, !dbg !5795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5801, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i32 %1, metadata !5802, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i32 %2, metadata !5803, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i8* %3, metadata !5804, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata i8 0, metadata !5805, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5806, metadata !DIExpression()), !dbg !5807
  store i8 0, i8* %3, align 1, !dbg !5808
  %5 = icmp ult i32 %2, -16777216, !dbg !5809
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5811
  br i1 %8, label %16, label %9, !dbg !5811

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5812
  %11 = icmp eq i32 %10, 0, !dbg !5812
  br i1 %11, label %12, label %13, !dbg !5814

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5806, metadata !DIExpression()), !dbg !5807
  store i8 1, i8* %3, align 1, !dbg !5817
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5807
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5806, metadata !DIExpression()), !dbg !5807
  br label %16, !dbg !5820

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5807
  ret %struct.__esf* %17, !dbg !5821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5822 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5826, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 %1, metadata !5827, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i8* %2, metadata !5828, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.value(metadata i32 0, metadata !5829, metadata !DIExpression()), !dbg !5830
  store i8 0, i8* %2, align 1, !dbg !5831
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5832

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %5, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %11, !dbg !5835

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !5836
  call void @llvm.dbg.value(metadata i32 %7, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %11, !dbg !5837

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !5838
  call void @llvm.dbg.value(metadata i32 0, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %11, !dbg !5839

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !5840
  call void @llvm.dbg.value(metadata i32 0, metadata !5829, metadata !DIExpression()), !dbg !5830
  br label %11, !dbg !5841

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !5842
  br label %11, !dbg !5843

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5845 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5849, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i8* %1, metadata !5850, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i32 0, metadata !5851, metadata !DIExpression()), !dbg !5852
  store i8 0, i8* %1, align 1, !dbg !5853
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5854
  %4 = and i32 %3, 2, !dbg !5856
  %5 = icmp eq i32 %4, 0, !dbg !5857
  br i1 %5, label %6, label %33, !dbg !5858

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5859
  %8 = icmp sgt i32 %7, -1, !dbg !5861
  br i1 %8, label %9, label %33, !dbg !5862

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5863
  %11 = and i32 %10, 1073741824, !dbg !5865
  %12 = icmp eq i32 %11, 0, !dbg !5866
  br i1 %12, label %33, label %13, !dbg !5867

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !5868
  br i1 %14, label %15, label %18, !dbg !5871

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5872
  %17 = load i32, i32* %16, align 4, !dbg !5872
  call void @llvm.dbg.value(metadata i32 %17, metadata !5851, metadata !DIExpression()), !dbg !5852
  br label %33, !dbg !5874

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5875
  %20 = and i32 %19, 255, !dbg !5877
  %21 = icmp eq i32 %20, 0, !dbg !5878
  br i1 %21, label %24, label %22, !dbg !5879

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %23, metadata !5851, metadata !DIExpression()), !dbg !5852
  br label %33, !dbg !5882

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5883
  %26 = and i32 %25, 65280, !dbg !5885
  %27 = icmp eq i32 %26, 0, !dbg !5886
  br i1 %27, label %29, label %28, !dbg !5887

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !5888
  call void @llvm.dbg.value(metadata i32 0, metadata !5851, metadata !DIExpression()), !dbg !5852
  br label %33, !dbg !5890

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5891
  %31 = icmp ult i32 %30, 65536, !dbg !5893
  br i1 %31, label %33, label %32, !dbg !5894

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !5895
  call void @llvm.dbg.value(metadata i32 0, metadata !5851, metadata !DIExpression()), !dbg !5852
  br label %33, !dbg !5897

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5852
  call void @llvm.dbg.value(metadata i32 %34, metadata !5851, metadata !DIExpression()), !dbg !5852
  ret i32 %34, !dbg !5898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5899 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5901, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 %1, metadata !5902, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i8* %2, metadata !5903, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 0, metadata !5904, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.value(metadata i32 -22, metadata !5905, metadata !DIExpression()), !dbg !5914
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5915
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5917
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5919
  %7 = and i32 %6, 2, !dbg !5920
  %8 = icmp eq i32 %7, 0, !dbg !5921
  br i1 %8, label %19, label %9, !dbg !5922

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %10, metadata !5906, metadata !DIExpression()), !dbg !5924
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5925
  %12 = and i32 %11, 128, !dbg !5927
  %13 = icmp eq i32 %12, 0, !dbg !5928
  br i1 %13, label %19, label %14, !dbg !5929

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5905, metadata !DIExpression()), !dbg !5914
  %15 = icmp eq i32 %1, 0, !dbg !5930
  br i1 %15, label %19, label %16, !dbg !5933

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5934
  %18 = and i32 %17, -129, !dbg !5934
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5934
  br label %19, !dbg !5936

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %20, metadata !5905, metadata !DIExpression()), !dbg !5914
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5937
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5939
  %23 = and i32 %22, 16, !dbg !5940
  %24 = icmp eq i32 %23, 0, !dbg !5940
  br i1 %24, label %25, label %29, !dbg !5941

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5942
  %27 = and i32 %26, 2, !dbg !5943
  %28 = icmp eq i32 %27, 0, !dbg !5943
  br i1 %28, label %38, label %29, !dbg !5944

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5945
  %31 = and i32 %30, 2048, !dbg !5946
  %32 = icmp eq i32 %31, 0, !dbg !5946
  br i1 %32, label %38, label %33, !dbg !5947

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !5948
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #25, !dbg !5949
  call void @llvm.dbg.value(metadata i32 %35, metadata !5909, metadata !DIExpression()), !dbg !5950
  %36 = icmp eq i32 %35, 0, !dbg !5951
  br i1 %36, label %38, label %37, !dbg !5953

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !5954, metadata !DIExpression()) #24, !dbg !5957
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #24, !dbg !5960, !srcloc !5961
  call void @llvm.dbg.value(metadata i32 2, metadata !5904, metadata !DIExpression()), !dbg !5914
  br label %38, !dbg !5962

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !5914
  call void @llvm.dbg.value(metadata i32 %39, metadata !5904, metadata !DIExpression()), !dbg !5914
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5963
  %41 = or i32 %40, 255, !dbg !5963
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5963
  store i8 0, i8* %2, align 1, !dbg !5964
  ret i32 %39, !dbg !5965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !5966 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5970, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i32 %0, metadata !5971, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i8* %1, metadata !5972, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i32 0, metadata !5973, metadata !DIExpression()), !dbg !5977
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5978
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5980
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5982
  %6 = and i32 %5, 512, !dbg !5983
  %7 = icmp eq i32 %6, 0, !dbg !5983
  br i1 %7, label %18, label %8, !dbg !5984

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5985
  call void @llvm.dbg.value(metadata i32 %9, metadata !5974, metadata !DIExpression()), !dbg !5986
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5987
  %11 = and i32 %10, 32768, !dbg !5989
  %12 = icmp ne i32 %11, 0, !dbg !5990
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5991
  br i1 %14, label %15, label %18, !dbg !5991

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5992
  %17 = and i32 %16, -32769, !dbg !5992
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5992
  br label %18, !dbg !5996

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5997
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5999
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6001
  %22 = or i32 %21, 65280, !dbg !6001
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6001
  store i8 0, i8* %1, align 1, !dbg !6002
  ret void, !dbg !6003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6004 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6010, metadata !DIExpression()), !dbg !6012
  call void @llvm.dbg.value(metadata i32 0, metadata !6011, metadata !DIExpression()), !dbg !6012
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6013
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6015
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6017
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6019
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6021
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6023
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6025
  %8 = or i32 %7, -65536, !dbg !6025
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6025
  ret void, !dbg !6026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6027 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %0, metadata !6032, metadata !DIExpression()), !dbg !6033
  store i8 0, i8* %0, align 1, !dbg !6034
  ret void, !dbg !6035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6036 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6040, metadata !DIExpression()), !dbg !6043
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6044
  %3 = load i32, i32* %2, align 4, !dbg !6044
  %4 = inttoptr i32 %3 to i16*, !dbg !6045
  call void @llvm.dbg.value(metadata i16* %4, metadata !6041, metadata !DIExpression()), !dbg !6043
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6046
  %6 = or i32 %5, 256, !dbg !6046
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6046
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6047, !srcloc !6050
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6051, !srcloc !6054
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6055
  %8 = load i16, i16* %7, align 2, !dbg !6056
  call void @llvm.dbg.value(metadata i16 %8, metadata !6042, metadata !DIExpression()), !dbg !6043
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6057
  %10 = and i32 %9, -257, !dbg !6057
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6057
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6058, !srcloc !6050
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6060, !srcloc !6054
  %11 = icmp eq i16 %8, -8446, !dbg !6062
  ret i1 %11, !dbg !6064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6065 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6066
  %2 = or i32 %1, 16, !dbg !6066
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6066
  ret void, !dbg !6067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6068 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6071, metadata !DIExpression()), !dbg !6072
  br label %1, !dbg !6073

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6071, metadata !DIExpression()), !dbg !6072
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #26, !dbg !6075
  %3 = add nuw nsw i32 %2, 1, !dbg !6078
  call void @llvm.dbg.value(metadata i32 %3, metadata !6071, metadata !DIExpression()), !dbg !6072
  %4 = icmp eq i32 %3, 45, !dbg !6079
  br i1 %4, label %5, label %1, !dbg !6073, !llvm.loop !6080

5:                                                ; preds = %1
  ret void, !dbg !6082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #15 !dbg !6083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6085, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.value(metadata i32 1, metadata !6086, metadata !DIExpression()), !dbg !6087
  %2 = and i32 %0, 15, !dbg !6088
  %3 = add nsw i32 %2, -4, !dbg !6088
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6088
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6088
  %6 = icmp slt i32 %0, 0, !dbg !6088
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6088
  store volatile i8 16, i8* %7, align 1, !dbg !6089
  ret void, !dbg !6091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6198, metadata !DIExpression()), !dbg !6199
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6200
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6202
  br i1 %3, label %4, label %12, !dbg !6203

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !6204, !srcloc !6218
  call void @llvm.dbg.value(metadata i32 %5, metadata !6209, metadata !DIExpression()) #24, !dbg !6219
  %6 = icmp eq i32 %5, 0, !dbg !6220
  br i1 %6, label %12, label %7, !dbg !6221

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6222
  %9 = or i32 %8, 268435456, !dbg !6222
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6222
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6224
  %11 = and i32 %10, -32769, !dbg !6224
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6224
  br label %12, !dbg !6225

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !6226
  ret void, !dbg !6227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6228 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !6229
  ret void, !dbg !6230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !507, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata i8 0, metadata !508, metadata !DIExpression()), !dbg !6231
  call void @llvm.dbg.value(metadata i32 64, metadata !510, metadata !DIExpression()), !dbg !6231
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6232
  %3 = load i32, i32* %2, align 4, !dbg !6232
  %4 = add i32 %3, -64, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %4, metadata !509, metadata !DIExpression()), !dbg !6231
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6235
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6236
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6237
  call void @llvm.dbg.value(metadata i8 1, metadata !508, metadata !DIExpression()), !dbg !6231
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !6238
  ret void, !dbg !6239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6240 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6241
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6242, !srcloc !6245
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6246, !srcloc !6249
  ret void, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6251 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !6252, !srcloc !6255
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6258 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6273, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i8 %1, metadata !6274, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i32 %2, metadata !6275, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.value(metadata i32 %3, metadata !6276, metadata !DIExpression()), !dbg !6277
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6278
  ret void, !dbg !6280
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6281 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6286, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata i8 %1, metadata !6287, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata i32 undef, metadata !6288, metadata !DIExpression()), !dbg !6291
  call void @llvm.dbg.value(metadata i32 undef, metadata !6289, metadata !DIExpression()), !dbg !6291
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6292
  call void @llvm.dbg.value(metadata i8 %3, metadata !6290, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6291
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !6293
  call void @llvm.dbg.value(metadata i32 %4, metadata !6290, metadata !DIExpression()), !dbg !6291
  %5 = trunc i32 %4 to i8, !dbg !6294
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6295
  ret void, !dbg !6296
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6297 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6301, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i8 %1, metadata !6302, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i8 %2, metadata !6303, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i1 %3, metadata !6304, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6307
  %5 = zext i8 %2 to i32, !dbg !6308
  call void @llvm.dbg.value(metadata i32 %5, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 0, metadata !6305, metadata !DIExpression()), !dbg !6307
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 0, metadata !6305, metadata !DIExpression()), !dbg !6307
  %7 = icmp eq i8 %1, 0, !dbg !6309
  br i1 %7, label %29, label %8, !dbg !6312

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.value(metadata i32 %10, metadata !6305, metadata !DIExpression()), !dbg !6307
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6313
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6316
  %13 = load i32, i32* %12, align 4, !dbg !6316
  %14 = icmp eq i32 %13, 0, !dbg !6317
  br i1 %14, label %25, label %15, !dbg !6318

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6319

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6321
  %18 = icmp eq i32 %17, 0, !dbg !6321
  br i1 %18, label %29, label %19, !dbg !6322

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6323
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %21, metadata !6306, metadata !DIExpression()), !dbg !6307
  %22 = icmp eq i32 %21, -22, !dbg !6325
  br i1 %22, label %29, label %23, !dbg !6327

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6328
  call void @llvm.dbg.value(metadata i32 %24, metadata !6306, metadata !DIExpression()), !dbg !6307
  br label %25, !dbg !6329

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6307
  call void @llvm.dbg.value(metadata i32 %26, metadata !6306, metadata !DIExpression()), !dbg !6307
  %27 = add nuw nsw i32 %10, 1, !dbg !6330
  call void @llvm.dbg.value(metadata i32 %27, metadata !6305, metadata !DIExpression()), !dbg !6307
  %28 = icmp eq i32 %27, %6, !dbg !6309
  br i1 %28, label %29, label %8, !dbg !6312, !llvm.loop !6331

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6307
  ret i32 %30, !dbg !6333
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6334 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6338, metadata !DIExpression()), !dbg !6340
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6341
  %3 = load i32, i32* %2, align 4, !dbg !6341
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6342, !range !3072
  %5 = icmp ult i32 %4, 2, !dbg !6342
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6343
  br i1 %7, label %8, label %15, !dbg !6343

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6344
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6345
  %11 = load i32, i32* %10, align 4, !dbg !6345
  %12 = and i32 %11, %9, !dbg !6346
  %13 = icmp eq i32 %12, 0, !dbg !6347
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6339, metadata !DIExpression()), !dbg !6340
  ret i32 %16, !dbg !6348
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6349 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6353, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6354, metadata !DIExpression()), !dbg !6356
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6357
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !6357
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6355, metadata !DIExpression()), !dbg !6358
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6359
  %6 = load i32, i32* %5, align 4, !dbg !6359
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6360
  store i32 %6, i32* %7, align 4, !dbg !6361
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6362
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6363
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6364
  %11 = load i32, i32* %10, align 4, !dbg !6364
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !6365
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !6366
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !6367
  ret i32 %12, !dbg !6368
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6369 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6376, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6377, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i32 undef, metadata !6378, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i32 %2, metadata !6379, metadata !DIExpression()), !dbg !6380
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6381
  %5 = load i32, i32* %4, align 4, !dbg !6381
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !6382
  %7 = or i32 %6, %5, !dbg !6383
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6384
  store i32 %7, i32* %8, align 4, !dbg !6385
  ret void, !dbg !6386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6387 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6391, metadata !DIExpression()), !dbg !6393
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6392, metadata !DIExpression()), !dbg !6393
  %3 = zext i8 %0 to i32, !dbg !6394
  %4 = icmp ugt i8 %0, 7, !dbg !6396
  br i1 %4, label %6, label %5, !dbg !6397

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !6398
  br label %6, !dbg !6399

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6393
  ret i32 %7, !dbg !6400
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6405, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6406, metadata !DIExpression()), !dbg !6407
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !6408
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6409
  %4 = load i32, i32* %3, align 4, !dbg !6409
  %5 = and i32 %4, -32, !dbg !6410
  %6 = or i32 %5, %0, !dbg !6411
  %7 = or i32 %6, 16, !dbg !6411
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6412
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6413
  %9 = load i32, i32* %8, align 4, !dbg !6413
  %10 = or i32 %9, 1, !dbg !6414
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6415
  ret void, !dbg !6416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !6417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6420, metadata !DIExpression()), !dbg !6421
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6422
  ret void, !dbg !6423
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6426, metadata !DIExpression()), !dbg !6427
  %2 = icmp ult i32 %0, 33, !dbg !6428
  br i1 %2, label %11, label %3, !dbg !6430

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6431
  br i1 %4, label %11, label %5, !dbg !6433

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6434
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6435, !range !3072
  %8 = mul nsw i32 %7, -2, !dbg !6436
  %9 = add nsw i32 %8, 62, !dbg !6436
  %10 = and i32 %9, 62, !dbg !6437
  br label %11, !dbg !6438

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6427
  ret i32 %12, !dbg !6439
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !6440 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6444, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.value(metadata i8 %1, metadata !6445, metadata !DIExpression()), !dbg !6446
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6447
  ret void, !dbg !6449
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6450 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6454, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i8 %1, metadata !6455, metadata !DIExpression()), !dbg !6461
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6462
  call void @llvm.dbg.value(metadata i8 %3, metadata !6456, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6461
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !6463
  call void @llvm.dbg.value(metadata i32 %4, metadata !6456, metadata !DIExpression()), !dbg !6461
  %5 = icmp ne i32 %4, -22, !dbg !6464
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6465
  call void @llvm.dbg.value(metadata i32 %4, metadata !6457, metadata !DIExpression()), !dbg !6466
  br i1 %7, label %8, label %12, !dbg !6465

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6457, metadata !DIExpression()), !dbg !6466
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !6467
  %10 = add i32 %9, 1, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %10, metadata !6457, metadata !DIExpression()), !dbg !6466
  %11 = icmp eq i32 %10, 8, !dbg !6471
  br i1 %11, label %12, label %8, !dbg !6472, !llvm.loop !6473

12:                                               ; preds = %8, %2
  ret void, !dbg !6475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !6476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6479, metadata !DIExpression()), !dbg !6480
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6481
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6482
  ret void, !dbg !6483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6484 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6489
  %2 = icmp ugt i32 %1, 8, !dbg !6491
  br i1 %2, label %14, label %3, !dbg !6492

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !6493
  call void @llvm.dbg.value(metadata i32 0, metadata !6488, metadata !DIExpression()), !dbg !6494
  %4 = icmp eq i32 %1, 0, !dbg !6495
  br i1 %4, label %12, label %5, !dbg !6498

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6498

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6488, metadata !DIExpression()), !dbg !6494
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6499
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !6501
  %10 = add nuw i32 %8, 1, !dbg !6502
  call void @llvm.dbg.value(metadata i32 %10, metadata !6488, metadata !DIExpression()), !dbg !6494
  %11 = icmp eq i32 %10, %1, !dbg !6495
  br i1 %11, label %12, label %7, !dbg !6498, !llvm.loop !6503

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6505
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6506
  tail call void @arm_core_mpu_enable() #26, !dbg !6507
  br label %14, !dbg !6508

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6494
  ret i32 %15, !dbg !6509
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !6510 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6517, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i8* %1, metadata !6518, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i8* %0, metadata !6519, metadata !DIExpression()), !dbg !6520
  %3 = load i8, i8* %1, align 1, !dbg !6521
  %4 = icmp eq i8 %3, 0, !dbg !6522
  br i1 %4, label %13, label %5, !dbg !6523

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6517, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.value(metadata i8* %8, metadata !6518, metadata !DIExpression()), !dbg !6520
  store i8 %6, i8* %7, align 1, !dbg !6524
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6526
  call void @llvm.dbg.value(metadata i8* %9, metadata !6517, metadata !DIExpression()), !dbg !6520
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6527
  call void @llvm.dbg.value(metadata i8* %10, metadata !6518, metadata !DIExpression()), !dbg !6520
  %11 = load i8, i8* %10, align 1, !dbg !6521
  %12 = icmp eq i8 %11, 0, !dbg !6522
  br i1 %12, label %13, label %5, !dbg !6523, !llvm.loop !6528

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6530
  ret i8* %0, !dbg !6531
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6532 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6536, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i8* %1, metadata !6537, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i32 %2, metadata !6538, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i8* %0, metadata !6539, metadata !DIExpression()), !dbg !6540
  %4 = icmp eq i32 %2, 0, !dbg !6541
  br i1 %4, label %22, label %5, !dbg !6542

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6536, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i32 %7, metadata !6538, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i8* %8, metadata !6537, metadata !DIExpression()), !dbg !6540
  %9 = load i8, i8* %8, align 1, !dbg !6543
  %10 = icmp eq i8 %9, 0, !dbg !6544
  br i1 %10, label %16, label %11, !dbg !6545

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6546
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6548
  call void @llvm.dbg.value(metadata i8* %12, metadata !6537, metadata !DIExpression()), !dbg !6540
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6549
  call void @llvm.dbg.value(metadata i8* %13, metadata !6536, metadata !DIExpression()), !dbg !6540
  %14 = add i32 %7, -1, !dbg !6550
  call void @llvm.dbg.value(metadata i32 %14, metadata !6538, metadata !DIExpression()), !dbg !6540
  %15 = icmp eq i32 %14, 0, !dbg !6541
  br i1 %15, label %22, label %5, !dbg !6542, !llvm.loop !6551

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6536, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.value(metadata i32 %18, metadata !6538, metadata !DIExpression()), !dbg !6540
  store i8 0, i8* %17, align 1, !dbg !6553
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6555
  call void @llvm.dbg.value(metadata i8* %19, metadata !6536, metadata !DIExpression()), !dbg !6540
  %20 = add i32 %18, -1, !dbg !6556
  call void @llvm.dbg.value(metadata i32 %20, metadata !6538, metadata !DIExpression()), !dbg !6540
  %21 = icmp eq i32 %20, 0, !dbg !6557
  br i1 %21, label %22, label %16, !dbg !6558, !llvm.loop !6559

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6561
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !6562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6566, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i32 %1, metadata !6567, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i32 %1, metadata !6568, metadata !DIExpression()), !dbg !6569
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6570

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6566, metadata !DIExpression()), !dbg !6569
  %6 = load i8, i8* %5, align 1, !dbg !6571
  %7 = icmp eq i8 %6, %3, !dbg !6572
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6573
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6574
  call void @llvm.dbg.value(metadata i8* %10, metadata !6566, metadata !DIExpression()), !dbg !6569
  br i1 %9, label %11, label %4, !dbg !6573, !llvm.loop !6576

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6578
  ret i8* %12, !dbg !6579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !6580 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6582, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i32 %1, metadata !6583, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* null, metadata !6584, metadata !DIExpression()), !dbg !6585
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6586

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6585
  call void @llvm.dbg.value(metadata i8* %6, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* %5, metadata !6582, metadata !DIExpression()), !dbg !6585
  %7 = load i8, i8* %5, align 1, !dbg !6587
  %8 = icmp eq i8 %7, %3, !dbg !6590
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6591
  call void @llvm.dbg.value(metadata i8* %9, metadata !6584, metadata !DIExpression()), !dbg !6585
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6592
  call void @llvm.dbg.value(metadata i8* %10, metadata !6582, metadata !DIExpression()), !dbg !6585
  %11 = icmp eq i8 %7, 0, !dbg !6593
  br i1 %11, label %12, label %4, !dbg !6593, !llvm.loop !6594

12:                                               ; preds = %4
  ret i8* %9, !dbg !6596
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !6597 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6601, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i32 0, metadata !6602, metadata !DIExpression()), !dbg !6603
  %2 = load i8, i8* %0, align 1, !dbg !6604
  %3 = icmp eq i8 %2, 0, !dbg !6605
  br i1 %3, label %11, label %4, !dbg !6606

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6602, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i8* %6, metadata !6601, metadata !DIExpression()), !dbg !6603
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6607
  call void @llvm.dbg.value(metadata i8* %7, metadata !6601, metadata !DIExpression()), !dbg !6603
  %8 = add i32 %5, 1, !dbg !6609
  call void @llvm.dbg.value(metadata i32 %8, metadata !6602, metadata !DIExpression()), !dbg !6603
  %9 = load i8, i8* %7, align 1, !dbg !6604
  %10 = icmp eq i8 %9, 0, !dbg !6605
  br i1 %10, label %11, label %4, !dbg !6606, !llvm.loop !6610

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6603
  ret i32 %12, !dbg !6612
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !6613 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6617, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 %1, metadata !6618, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  %3 = load i8, i8* %0, align 1, !dbg !6621
  %4 = icmp ne i8 %3, 0, !dbg !6622
  %5 = icmp ne i32 %1, 0, !dbg !6623
  %6 = and i1 %4, %5, !dbg !6623
  br i1 %6, label %7, label %16, !dbg !6624

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6619, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i8* %9, metadata !6617, metadata !DIExpression()), !dbg !6620
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6625
  call void @llvm.dbg.value(metadata i8* %10, metadata !6617, metadata !DIExpression()), !dbg !6620
  %11 = add nuw i32 %8, 1, !dbg !6627
  call void @llvm.dbg.value(metadata i32 %11, metadata !6619, metadata !DIExpression()), !dbg !6620
  %12 = load i8, i8* %10, align 1, !dbg !6621
  %13 = icmp ne i8 %12, 0, !dbg !6622
  %14 = icmp ult i32 %11, %1, !dbg !6623
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6623
  br i1 %15, label %7, label %16, !dbg !6624, !llvm.loop !6628

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6620
  ret i32 %17, !dbg !6630
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !6631 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6635, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %1, metadata !6636, metadata !DIExpression()), !dbg !6637
  %3 = load i8, i8* %0, align 1, !dbg !6638
  %4 = load i8, i8* %1, align 1, !dbg !6639
  %5 = icmp ne i8 %3, %4, !dbg !6640
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6641
  br i1 %7, label %18, label %8, !dbg !6641

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6636, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i8* %10, metadata !6635, metadata !DIExpression()), !dbg !6637
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6642
  call void @llvm.dbg.value(metadata i8* %11, metadata !6635, metadata !DIExpression()), !dbg !6637
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6644
  call void @llvm.dbg.value(metadata i8* %12, metadata !6636, metadata !DIExpression()), !dbg !6637
  %13 = load i8, i8* %11, align 1, !dbg !6638
  %14 = load i8, i8* %12, align 1, !dbg !6639
  %15 = icmp ne i8 %13, %14, !dbg !6640
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6641
  br i1 %17, label %18, label %8, !dbg !6641, !llvm.loop !6645

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6638
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6639
  %21 = zext i8 %19 to i32, !dbg !6648
  %22 = zext i8 %20 to i32, !dbg !6649
  %23 = sub nsw i32 %21, %22, !dbg !6650
  ret i32 %23, !dbg !6651
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6652 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6656, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %1, metadata !6657, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i32 %2, metadata !6658, metadata !DIExpression()), !dbg !6659
  %4 = icmp eq i32 %2, 0, !dbg !6660
  br i1 %4, label %23, label %5, !dbg !6660

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %7, metadata !6657, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i8* %8, metadata !6656, metadata !DIExpression()), !dbg !6659
  %9 = load i8, i8* %8, align 1, !dbg !6661
  %10 = load i8, i8* %7, align 1, !dbg !6662
  %11 = icmp ne i8 %9, %10, !dbg !6663
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6664
  br i1 %13, label %19, label %14, !dbg !6664

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6665
  call void @llvm.dbg.value(metadata i8* %15, metadata !6656, metadata !DIExpression()), !dbg !6659
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6667
  call void @llvm.dbg.value(metadata i8* %16, metadata !6657, metadata !DIExpression()), !dbg !6659
  %17 = add i32 %6, -1, !dbg !6668
  call void @llvm.dbg.value(metadata i32 %17, metadata !6658, metadata !DIExpression()), !dbg !6659
  %18 = icmp eq i32 %17, 0, !dbg !6660
  br i1 %18, label %23, label %5, !dbg !6660, !llvm.loop !6669

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6672
  %21 = zext i8 %10 to i32, !dbg !6673
  %22 = sub nsw i32 %20, %21, !dbg !6674
  br label %23, !dbg !6675

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6675
  ret i32 %24, !dbg !6676
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !6677 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6682, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8* %1, metadata !6683, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.value(metadata i8** %2, metadata !6684, metadata !DIExpression()), !dbg !6687
  %4 = icmp eq i8* %0, null, !dbg !6688
  br i1 %4, label %5, label %7, !dbg !6688

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6689
  br label %7, !dbg !6688

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6688
  call void @llvm.dbg.value(metadata i8* %8, metadata !6685, metadata !DIExpression()), !dbg !6687
  %9 = load i8, i8* %8, align 1, !dbg !6690
  %10 = icmp eq i8 %9, 0, !dbg !6690
  br i1 %10, label %33, label %11, !dbg !6691

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6685, metadata !DIExpression()), !dbg !6687
  %14 = zext i8 %12 to i32, !dbg !6690
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !6692
  %16 = icmp eq i8* %15, null, !dbg !6691
  br i1 %16, label %21, label %17, !dbg !6693

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6694
  call void @llvm.dbg.value(metadata i8* %18, metadata !6685, metadata !DIExpression()), !dbg !6687
  %19 = load i8, i8* %18, align 1, !dbg !6690
  %20 = icmp eq i8 %19, 0, !dbg !6690
  br i1 %20, label %33, label %11, !dbg !6691, !llvm.loop !6696

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6686, metadata !DIExpression()), !dbg !6687
  %24 = zext i8 %22 to i32, !dbg !6698
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !6699
  %26 = icmp eq i8* %25, null, !dbg !6700
  br i1 %26, label %27, label %31, !dbg !6701

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6702
  call void @llvm.dbg.value(metadata i8* %28, metadata !6686, metadata !DIExpression()), !dbg !6687
  %29 = load i8, i8* %28, align 1, !dbg !6698
  %30 = icmp eq i8 %29, 0, !dbg !6698
  br i1 %30, label %33, label %21, !dbg !6704, !llvm.loop !6705

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6707
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6710
  br label %33, !dbg !6711

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6687
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6687
  store i8* %34, i8** %2, align 4, !dbg !6687
  ret i8* %35, !dbg !6712
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !6713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6715, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.value(metadata i8* %1, metadata !6716, metadata !DIExpression()), !dbg !6717
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !6718
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6719
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !6720
  ret i8* %0, !dbg !6721
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6722 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6724, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i8* %1, metadata !6725, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 %2, metadata !6726, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i8* %0, metadata !6727, metadata !DIExpression()), !dbg !6729
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !6730
  call void @llvm.dbg.value(metadata i32 %4, metadata !6728, metadata !DIExpression()), !dbg !6729
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6731
  call void @llvm.dbg.value(metadata i8* %5, metadata !6724, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i8* %1, metadata !6725, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 %2, metadata !6726, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 %2, metadata !6726, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6729
  %6 = icmp eq i32 %2, 0, !dbg !6732
  br i1 %6, label %18, label %7, !dbg !6733

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6734
  call void @llvm.dbg.value(metadata i8* %9, metadata !6724, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i8* %10, metadata !6725, metadata !DIExpression()), !dbg !6729
  %12 = load i8, i8* %10, align 1, !dbg !6735
  %13 = icmp eq i8 %12, 0, !dbg !6736
  br i1 %13, label %18, label %14, !dbg !6737

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6738
  call void @llvm.dbg.value(metadata i8* %15, metadata !6725, metadata !DIExpression()), !dbg !6729
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6740
  call void @llvm.dbg.value(metadata i8* %16, metadata !6724, metadata !DIExpression()), !dbg !6729
  store i8 %12, i8* %9, align 1, !dbg !6741
  call void @llvm.dbg.value(metadata i32 %11, metadata !6726, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.value(metadata i32 %11, metadata !6726, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6729
  %17 = icmp eq i32 %11, 0, !dbg !6732
  br i1 %17, label %18, label %7, !dbg !6733, !llvm.loop !6742

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6729
  store i8 0, i8* %19, align 1, !dbg !6744
  ret i8* %0, !dbg !6745
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6746 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6750, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %1, metadata !6751, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %2, metadata !6752, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %0, metadata !6753, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %1, metadata !6754, metadata !DIExpression()), !dbg !6755
  %4 = icmp eq i32 %2, 0, !dbg !6756
  br i1 %4, label %31, label %5, !dbg !6758

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %0, metadata !6753, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %2, metadata !6752, metadata !DIExpression()), !dbg !6755
  %6 = add i32 %2, -1, !dbg !6759
  call void @llvm.dbg.value(metadata i32 %6, metadata !6752, metadata !DIExpression()), !dbg !6755
  %7 = icmp eq i32 %6, 0, !dbg !6760
  br i1 %7, label %23, label %8, !dbg !6761

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6762
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6762
  br label %11, !dbg !6762

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %14, metadata !6753, metadata !DIExpression()), !dbg !6755
  %15 = load i8, i8* %14, align 1, !dbg !6763
  %16 = load i8, i8* %13, align 1, !dbg !6764
  %17 = icmp eq i8 %15, %16, !dbg !6765
  br i1 %17, label %18, label %23, !dbg !6762

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6766
  call void @llvm.dbg.value(metadata i8* %19, metadata !6753, metadata !DIExpression()), !dbg !6755
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6768
  call void @llvm.dbg.value(metadata i8* %20, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %12, metadata !6752, metadata !DIExpression()), !dbg !6755
  %21 = add i32 %12, -1, !dbg !6759
  call void @llvm.dbg.value(metadata i32 %21, metadata !6752, metadata !DIExpression()), !dbg !6755
  %22 = icmp eq i32 %21, 0, !dbg !6760
  br i1 %22, label %23, label %11, !dbg !6761, !llvm.loop !6769

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6755
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6755
  %26 = load i8, i8* %24, align 1, !dbg !6771
  %27 = zext i8 %26 to i32, !dbg !6771
  %28 = load i8, i8* %25, align 1, !dbg !6772
  %29 = zext i8 %28 to i32, !dbg !6772
  %30 = sub nsw i32 %27, %29, !dbg !6773
  br label %31, !dbg !6774

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6755
  ret i32 %32, !dbg !6775
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6776 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6780, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %1, metadata !6781, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %2, metadata !6782, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %0, metadata !6783, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %1, metadata !6784, metadata !DIExpression()), !dbg !6785
  %4 = ptrtoint i8* %0 to i32, !dbg !6786
  %5 = ptrtoint i8* %1 to i32, !dbg !6786
  %6 = sub i32 %4, %5, !dbg !6786
  %7 = icmp ult i32 %6, %2, !dbg !6788
  br i1 %7, label %10, label %8, !dbg !6789

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %0, metadata !6783, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %2, metadata !6782, metadata !DIExpression()), !dbg !6785
  %9 = icmp eq i32 %2, 0, !dbg !6790
  br i1 %9, label %26, label %17, !dbg !6792

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6782, metadata !DIExpression()), !dbg !6785
  %12 = add i32 %11, -1, !dbg !6793
  call void @llvm.dbg.value(metadata i32 %12, metadata !6782, metadata !DIExpression()), !dbg !6785
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6796
  %14 = load i8, i8* %13, align 1, !dbg !6796
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6797
  store i8 %14, i8* %15, align 1, !dbg !6798
  %16 = icmp eq i32 %12, 0, !dbg !6799
  br i1 %16, label %26, label %10, !dbg !6800, !llvm.loop !6801

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %19, metadata !6783, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %20, metadata !6782, metadata !DIExpression()), !dbg !6785
  %21 = load i8, i8* %18, align 1, !dbg !6803
  store i8 %21, i8* %19, align 1, !dbg !6805
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6806
  call void @llvm.dbg.value(metadata i8* %22, metadata !6783, metadata !DIExpression()), !dbg !6785
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6807
  call void @llvm.dbg.value(metadata i8* %23, metadata !6784, metadata !DIExpression()), !dbg !6785
  %24 = add i32 %20, -1, !dbg !6808
  call void @llvm.dbg.value(metadata i32 %24, metadata !6782, metadata !DIExpression()), !dbg !6785
  %25 = icmp eq i32 %24, 0, !dbg !6790
  br i1 %25, label %26, label %17, !dbg !6792, !llvm.loop !6809

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6811
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !6812 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6818, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %1, metadata !6819, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %2, metadata !6820, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %0, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %1, metadata !6822, metadata !DIExpression()), !dbg !6823
  %4 = icmp eq i32 %2, 0, !dbg !6824
  br i1 %4, label %14, label %5, !dbg !6825

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6822, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %7, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %8, metadata !6820, metadata !DIExpression()), !dbg !6823
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6826
  call void @llvm.dbg.value(metadata i8* %9, metadata !6822, metadata !DIExpression()), !dbg !6823
  %10 = load i8, i8* %6, align 1, !dbg !6828
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6829
  call void @llvm.dbg.value(metadata i8* %11, metadata !6821, metadata !DIExpression()), !dbg !6823
  store i8 %10, i8* %7, align 1, !dbg !6830
  %12 = add i32 %8, -1, !dbg !6831
  call void @llvm.dbg.value(metadata i32 %12, metadata !6820, metadata !DIExpression()), !dbg !6823
  %13 = icmp eq i32 %12, 0, !dbg !6824
  br i1 %13, label %14, label %5, !dbg !6825, !llvm.loop !6832

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !6835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6839, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %1, metadata !6840, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %2, metadata !6841, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i8* %0, metadata !6842, metadata !DIExpression()), !dbg !6844
  %4 = trunc i32 %1 to i8, !dbg !6845
  call void @llvm.dbg.value(metadata i8 %4, metadata !6843, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %2, metadata !6841, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i8* %0, metadata !6842, metadata !DIExpression()), !dbg !6844
  %5 = icmp eq i32 %2, 0, !dbg !6846
  br i1 %5, label %12, label %6, !dbg !6847

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6841, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i8* %8, metadata !6842, metadata !DIExpression()), !dbg !6844
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6848
  call void @llvm.dbg.value(metadata i8* %9, metadata !6842, metadata !DIExpression()), !dbg !6844
  store i8 %4, i8* %8, align 1, !dbg !6850
  %10 = add i32 %7, -1, !dbg !6851
  call void @llvm.dbg.value(metadata i32 %10, metadata !6841, metadata !DIExpression()), !dbg !6844
  %11 = icmp eq i32 %10, 0, !dbg !6846
  br i1 %11, label %12, label %6, !dbg !6847, !llvm.loop !6852

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6859, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata i32 %1, metadata !6860, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata i32 %2, metadata !6861, metadata !DIExpression()), !dbg !6865
  %4 = icmp eq i32 %2, 0, !dbg !6866
  br i1 %4, label %17, label %5, !dbg !6867

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6868

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6869
  call void @llvm.dbg.value(metadata i8* %9, metadata !6862, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i32 %8, metadata !6861, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata i8* %9, metadata !6862, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6869
  %10 = load i8, i8* %9, align 1, !dbg !6870
  %11 = icmp eq i8 %10, %6, !dbg !6873
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6874
  call void @llvm.dbg.value(metadata i8* %12, metadata !6862, metadata !DIExpression()), !dbg !6869
  call void @llvm.dbg.value(metadata i32 %13, metadata !6861, metadata !DIExpression()), !dbg !6865
  br i1 %15, label %16, label %7, !dbg !6874, !llvm.loop !6875

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6877

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6865
  ret i8* %19, !dbg !6878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6879 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6881, metadata !DIExpression()), !dbg !6882
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6883
  ret void, !dbg !6884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !6885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6887, metadata !DIExpression()), !dbg !6888
  ret i32 -1, !dbg !6889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6894, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i32* %1, metadata !6895, metadata !DIExpression()), !dbg !6896
  %3 = ptrtoint i32* %1 to i32, !dbg !6897
  %4 = and i32 %3, -2, !dbg !6897
  %5 = icmp eq i32 %4, 2, !dbg !6897
  br i1 %5, label %6, label %9, !dbg !6897

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6898
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !6898
  br label %9, !dbg !6899

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6899
  ret i32 %10, !dbg !6900
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6903, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i32* %1, metadata !6904, metadata !DIExpression()), !dbg !6905
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !6906
  ret i32 %3, !dbg !6907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6911, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata i32* %1, metadata !6912, metadata !DIExpression()), !dbg !6913
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6914, !srcloc !6916
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !6917
  ret i32 %3, !dbg !6918
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6919 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6924, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.value(metadata i32* %1, metadata !6925, metadata !DIExpression()), !dbg !6928
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6929
  call void @llvm.dbg.value(metadata i32 %3, metadata !6926, metadata !DIExpression()), !dbg !6928
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !6930
  call void @llvm.dbg.value(metadata i32 %4, metadata !6927, metadata !DIExpression()), !dbg !6928
  %5 = icmp ne i32 %3, %4, !dbg !6931
  %6 = sext i1 %5 to i32, !dbg !6932
  ret i32 %6, !dbg !6933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6938, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i32 %1, metadata !6939, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i32 %2, metadata !6940, metadata !DIExpression()), !dbg !6942
  call void @llvm.dbg.value(metadata i32* %3, metadata !6941, metadata !DIExpression()), !dbg !6942
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !6943
  ret i32 %5, !dbg !6944
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6947, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i32 %1, metadata !6948, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i32 %2, metadata !6949, metadata !DIExpression()), !dbg !6951
  call void @llvm.dbg.value(metadata i32* %3, metadata !6950, metadata !DIExpression()), !dbg !6951
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6952, !srcloc !6954
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !6955
  ret i32 %5, !dbg !6956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6957 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6959, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %1, metadata !6960, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %2, metadata !6961, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32* %3, metadata !6962, metadata !DIExpression()), !dbg !6967
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6968
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6970
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6970
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6970
  br i1 %11, label %33, label %12, !dbg !6970

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6967
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6967
  call void @llvm.dbg.value(metadata i8* %14, metadata !6965, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %13, metadata !6963, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %1, metadata !6964, metadata !DIExpression()), !dbg !6967
  br label %15, !dbg !6971

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6973
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6967
  call void @llvm.dbg.value(metadata i8* %17, metadata !6965, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %16, metadata !6964, metadata !DIExpression()), !dbg !6967
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6974
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6977
  call void @llvm.dbg.value(metadata i8* %19, metadata !6965, metadata !DIExpression()), !dbg !6967
  %20 = load i8, i8* %17, align 1, !dbg !6978
  %21 = zext i8 %20 to i32, !dbg !6979
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !6974
  %23 = icmp eq i32 %22, -1, !dbg !6980
  br i1 %23, label %30, label %24, !dbg !6981

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %25, metadata !6964, metadata !DIExpression()), !dbg !6967
  %26 = icmp eq i32 %25, 0, !dbg !6983
  br i1 %26, label %27, label %15, !dbg !6984, !llvm.loop !6985

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6987
  call void @llvm.dbg.value(metadata i32 %28, metadata !6963, metadata !DIExpression()), !dbg !6967
  %29 = icmp eq i32 %28, 0, !dbg !6988
  br i1 %29, label %30, label %12, !dbg !6989, !llvm.loop !6990

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6967
  call void @llvm.dbg.value(metadata i32 %31, metadata !6963, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.label(metadata !6966), !dbg !6993
  %32 = sub i32 %2, %31, !dbg !6994
  br label %33, !dbg !6995

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6967
  ret i32 %34, !dbg !6996
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6997 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7001, metadata !DIExpression()), !dbg !7002
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7003
  %3 = icmp eq i32 %2, -1, !dbg !7005
  br i1 %3, label %8, label %4, !dbg !7006

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7007
  %6 = icmp eq i32 %5, -1, !dbg !7008
  %7 = sext i1 %6 to i32, !dbg !7007
  br label %8, !dbg !7009

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7002
  ret i32 %9, !dbg !7010
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7011 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7013, metadata !DIExpression()), !dbg !7014
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !7015
  br i1 %2, label %3, label %4, !dbg !7017

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !7018
  br label %4, !dbg !7019

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7014
  ret i32 %5, !dbg !7020
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7021 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7026, metadata !DIExpression()), !dbg !7027
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7028, !srcloc !7030
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !7031
  ret i1 %1, !dbg !7032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7033 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7034
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !7035
  ret void, !dbg !7036
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7039, metadata !DIExpression()), !dbg !7040
  %2 = icmp eq i32 %0, 10, !dbg !7041
  br i1 %2, label %3, label %4, !dbg !7043

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !7044
  br label %4, !dbg !7046

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7047
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !7048
  ret i32 %0, !dbg !7049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7050 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7053, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.value(metadata i8 %0, metadata !7054, metadata !DIExpression()), !dbg !7055
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7056, !srcloc !7058
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !7059
  ret void, !dbg !7060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7061 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7063, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.value(metadata i8 %0, metadata !7064, metadata !DIExpression()), !dbg !7066
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7067
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7065, metadata !DIExpression()), !dbg !7066
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7068
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7068
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_21, i8 noundef zeroext %0) #25, !dbg !7069
  ret void, !dbg !7070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7071 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7073, metadata !DIExpression()), !dbg !7074
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7075
  ret i1 %1, !dbg !7076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !7077 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7081, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7082, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7083, metadata !DIExpression()), !dbg !7084
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !7085
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !7086
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !7087
  tail call fastcc void @console_input_init() #26, !dbg !7088
  ret void, !dbg !7089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !7090 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !7093
  tail call fastcc void @uart_irq_rx_disable() #26, !dbg !7094
  tail call fastcc void @uart_irq_tx_disable() #26, !dbg !7095
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !7096
  %2 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !7097
  %3 = icmp eq i32 %2, 0, !dbg !7098
  br i1 %3, label %8, label %4, !dbg !7098

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !7092, metadata !DIExpression(DW_OP_deref)), !dbg !7099
  %5 = call fastcc i32 @uart_fifo_read(i8* noundef nonnull %1) #26, !dbg !7100
  %6 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !7097
  %7 = icmp eq i32 %6, 0, !dbg !7098
  br i1 %7, label %8, label %4, !dbg !7098, !llvm.loop !7102

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable() #26, !dbg !7104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !7105
  ret void, !dbg !7105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable() unnamed_addr #1 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7108, metadata !DIExpression()), !dbg !7109
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7110, !srcloc !7112
  tail call fastcc void @z_impl_uart_irq_rx_disable() #26, !dbg !7113
  ret void, !dbg !7114
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable() unnamed_addr #1 !dbg !7115 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7117, metadata !DIExpression()), !dbg !7118
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7119, !srcloc !7121
  tail call fastcc void @z_impl_uart_irq_tx_disable() #26, !dbg !7122
  ret void, !dbg !7123
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !7124 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7128, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !7129, metadata !DIExpression()), !dbg !7130
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !7131
  ret void, !dbg !7132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !7133 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7135, metadata !DIExpression()), !dbg !7137
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7138
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7136, metadata !DIExpression()), !dbg !7137
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !7139
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7139
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7141
  br i1 %4, label %7, label %5, !dbg !7142

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7143
  br label %7, !dbg !7144

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7137
  ret i32 %8, !dbg !7145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !7146 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7148, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i8* %0, metadata !7149, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.value(metadata i32 1, metadata !7150, metadata !DIExpression()), !dbg !7152
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7153
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7151, metadata !DIExpression()), !dbg !7152
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !7154
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !7154
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !7156
  br i1 %5, label %8, label %6, !dbg !7157

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_21, i8* noundef %0, i32 noundef 1) #25, !dbg !7158
  br label %8, !dbg !7159

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !7152
  ret i32 %9, !dbg !7160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !7161 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7163, metadata !DIExpression()), !dbg !7164
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7165, !srcloc !7167
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !7168
  ret void, !dbg !7169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !7170 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7172, metadata !DIExpression()), !dbg !7174
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7175
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7173, metadata !DIExpression()), !dbg !7174
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !7176
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7176
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7178
  br i1 %4, label %6, label %5, !dbg !7179

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7180
  br label %6, !dbg !7182

6:                                                ; preds = %5, %0
  ret void, !dbg !7183
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !746 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !748, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata i8* %1, metadata !749, metadata !DIExpression()), !dbg !7184
  %4 = call fastcc i32 @uart_irq_update() #26, !dbg !7185
  %5 = icmp eq i32 %4, 0, !dbg !7185
  br i1 %5, label %89, label %6, !dbg !7186

6:                                                ; preds = %2, %86
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !7187
  %8 = icmp eq i32 %7, 0, !dbg !7186
  br i1 %8, label %89, label %9, !dbg !7188

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !7189
  %10 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !7190
  %11 = icmp eq i32 %10, 0, !dbg !7190
  br i1 %11, label %86, label %12, !dbg !7192, !llvm.loop !7193

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !750, metadata !DIExpression(DW_OP_deref)), !dbg !7195
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !7196
  call void @llvm.dbg.value(metadata i32 %13, metadata !752, metadata !DIExpression()), !dbg !7195
  %14 = icmp slt i32 %13, 0, !dbg !7197
  br i1 %14, label %85, label %15, !dbg !7199

15:                                               ; preds = %12
  %16 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7200
  %17 = icmp eq %struct.console_input* %16, null, !dbg !7200
  br i1 %17, label %18, label %23, !dbg !7201

18:                                               ; preds = %15
  %19 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !7202
  %20 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %19, i32 0, i32 0, !dbg !7202
  %21 = call fastcc i8* @k_queue_get.37(%struct.k_queue* noundef %20) #26, !dbg !7202
  call void @llvm.dbg.value(metadata i8* %21, metadata !753, metadata !DIExpression()), !dbg !7203
  store i8* %21, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !7204
  %22 = icmp eq i8* %21, null, !dbg !7205
  br i1 %22, label %85, label %23, !dbg !7207

23:                                               ; preds = %18, %15
  %24 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !7208
  br i1 %24, label %25, label %29, !dbg !7210

25:                                               ; preds = %23
  %26 = load i8, i8* %3, align 1, !dbg !7211
  call void @llvm.dbg.value(metadata i8 %26, metadata !750, metadata !DIExpression()), !dbg !7195
  %27 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7213
  %28 = getelementptr inbounds %struct.console_input, %struct.console_input* %27, i32 0, i32 2, i32 0, !dbg !7213
  call fastcc void @handle_ansi(i8 noundef zeroext %26, i8* noundef nonnull %28) #26, !dbg !7214
  br label %86, !dbg !7215, !llvm.loop !7193

29:                                               ; preds = %23
  %30 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !7216
  %31 = load i8, i8* %3, align 1, !dbg !7195
  call void @llvm.dbg.value(metadata i8 %31, metadata !750, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.value(metadata i8 %31, metadata !750, metadata !DIExpression()), !dbg !7195
  br i1 %30, label %32, label %35, !dbg !7218

32:                                               ; preds = %29
  %33 = icmp eq i8 %31, 91, !dbg !7219
  br i1 %33, label %34, label %86, !dbg !7222, !llvm.loop !7193

34:                                               ; preds = %32
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !7223
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !7225
  br label %86, !dbg !7226, !llvm.loop !7193

35:                                               ; preds = %29
  %36 = zext i8 %31 to i32, !dbg !7227
  %37 = call fastcc i32 @isprint(i32 noundef %36) #26, !dbg !7229
  %38 = icmp eq i32 %37, 0, !dbg !7229
  br i1 %38, label %39, label %74, !dbg !7230

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i8 undef, metadata !750, metadata !DIExpression()), !dbg !7195
  switch i8 %31, label %86 [
    i8 8, label %40
    i8 127, label %40
    i8 27, label %49
    i8 13, label %50
    i8 9, label %61
  ], !dbg !7231, !llvm.loop !7193

40:                                               ; preds = %39, %39
  %41 = load i8, i8* @cur, align 1, !dbg !7233
  %42 = icmp eq i8 %41, 0, !dbg !7236
  br i1 %42, label %86, label %43, !dbg !7237, !llvm.loop !7193

43:                                               ; preds = %40
  %44 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7238
  %45 = add i8 %41, -1, !dbg !7240
  store i8 %45, i8* @cur, align 1, !dbg !7240
  %46 = zext i8 %45 to i32, !dbg !7238
  %47 = getelementptr inbounds %struct.console_input, %struct.console_input* %44, i32 0, i32 2, i32 %46, !dbg !7238
  %48 = load i8, i8* @end, align 1, !dbg !7241
  call fastcc void @del_char(i8* noundef nonnull %47, i8 noundef zeroext %48) #26, !dbg !7242
  br label %86, !dbg !7243, !llvm.loop !7193

49:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !7244
  br label %86, !dbg !7245, !llvm.loop !7193

50:                                               ; preds = %39
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7246
  %52 = load i8, i8* @cur, align 1, !dbg !7247
  %53 = zext i8 %52 to i32, !dbg !7247
  %54 = load i8, i8* @end, align 1, !dbg !7248
  %55 = zext i8 %54 to i32, !dbg !7248
  %56 = add nuw nsw i32 %55, %53, !dbg !7249
  %57 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %56, !dbg !7246
  store i8 0, i8* %57, align 1, !dbg !7250
  call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !7251
  call fastcc void @uart_poll_out(i8 noundef zeroext 10) #26, !dbg !7252
  store i8 0, i8* @cur, align 1, !dbg !7253
  store i8 0, i8* @end, align 1, !dbg !7254
  %58 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !7255
  %59 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %58, i32 0, i32 0, !dbg !7255
  %60 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !7255
  call void @k_queue_append(%struct.k_queue* noundef %59, i8* noundef %60) #25, !dbg !7255
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7257
  br label %86, !dbg !7258, !llvm.loop !7193

61:                                               ; preds = %39
  %62 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !7259
  %63 = icmp eq i8 (i8*, i8)* %62, null, !dbg !7259
  %64 = load i8, i8* @end, align 1
  %65 = icmp ne i8 %64, 0
  %66 = select i1 %63, i1 true, i1 %65, !dbg !7261
  br i1 %66, label %86, label %67, !dbg !7261, !llvm.loop !7193

67:                                               ; preds = %61
  %68 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7262
  %69 = getelementptr inbounds %struct.console_input, %struct.console_input* %68, i32 0, i32 2, i32 0, !dbg !7262
  %70 = load i8, i8* @cur, align 1, !dbg !7264
  %71 = call zeroext i8 %62(i8* noundef nonnull %69, i8 noundef zeroext %70) #25, !dbg !7265
  %72 = load i8, i8* @cur, align 1, !dbg !7266
  %73 = add i8 %72, %71, !dbg !7266
  store i8 %73, i8* @cur, align 1, !dbg !7266
  br label %86, !dbg !7267, !llvm.loop !7193

74:                                               ; preds = %35
  %75 = load i8, i8* @cur, align 1, !dbg !7268
  %76 = zext i8 %75 to i32, !dbg !7268
  %77 = load i8, i8* @end, align 1, !dbg !7270
  %78 = zext i8 %77 to i32, !dbg !7270
  %79 = add nuw nsw i32 %78, %76, !dbg !7271
  %80 = icmp ult i32 %79, 127, !dbg !7272
  br i1 %80, label %81, label %86, !dbg !7273

81:                                               ; preds = %74
  %82 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !7274
  %83 = add i8 %75, 1, !dbg !7276
  store i8 %83, i8* @cur, align 1, !dbg !7276
  %84 = getelementptr inbounds %struct.console_input, %struct.console_input* %82, i32 0, i32 2, i32 %76, !dbg !7274
  call void @llvm.dbg.value(metadata i8 %31, metadata !750, metadata !DIExpression()), !dbg !7195
  call fastcc void @insert_char(i8* noundef nonnull %84, i8 noundef zeroext %31, i8 noundef zeroext %77) #26, !dbg !7277
  br label %86, !dbg !7278

85:                                               ; preds = %12, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !7194
  br label %89

86:                                               ; preds = %74, %81, %49, %50, %43, %40, %67, %61, %39, %32, %34, %9, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !7194
  %87 = call fastcc i32 @uart_irq_update() #26, !dbg !7185
  %88 = icmp eq i32 %87, 0, !dbg !7185
  br i1 %88, label %89, label %6, !dbg !7186

89:                                               ; preds = %6, %86, %2, %85
  ret void, !dbg !7279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !7280 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7282, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !7283, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* null, metadata !7284, metadata !DIExpression()), !dbg !7286
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7287
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7285, metadata !DIExpression()), !dbg !7286
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !7288
  br i1 %2, label %8, label %3, !dbg !7290

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !7291
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !7291
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !7292
  br i1 %6, label %8, label %7, !dbg !7293

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_21, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !7294
  br label %8, !dbg !7296

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !7297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !7298 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7300, metadata !DIExpression()), !dbg !7301
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7302, !srcloc !7304
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !7305
  ret i32 %1, !dbg !7306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !7307 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7309, metadata !DIExpression()), !dbg !7310
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7311, !srcloc !7313
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !7314
  ret i32 %1, !dbg !7315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !7316 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7320, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %0, metadata !7321, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 1, metadata !7322, metadata !DIExpression()), !dbg !7324
  %2 = tail call fastcc i32 @uart_fifo_read(i8* noundef %0) #26, !dbg !7325
  call void @llvm.dbg.value(metadata i32 %2, metadata !7323, metadata !DIExpression()), !dbg !7324
  %3 = icmp slt i32 %2, 0, !dbg !7326
  br i1 %3, label %4, label %5, !dbg !7328

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable() #26, !dbg !7329
  br label %5, !dbg !7331

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !7324
  ret i32 %6, !dbg !7332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get.37(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !7333 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7343, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !7342, metadata !DIExpression()), !dbg !7344
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7345, !srcloc !7347
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !7348
  ret i8* %2, !dbg !7349
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #16 !dbg !7350 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7356, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %0, metadata !7357, metadata !DIExpression()), !dbg !7360
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !7361
  call void @llvm.dbg.value(metadata i32 %2, metadata !7358, metadata !DIExpression()), !dbg !7360
  %3 = and i32 %0, 31, !dbg !7362
  %4 = shl nuw i32 1, %3, !dbg !7363
  %5 = and i32 %2, %4, !dbg !7363
  %6 = icmp ne i32 %5, 0, !dbg !7363
  ret i1 %6, !dbg !7364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !7365 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7369, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.value(metadata i8* %1, metadata !7370, metadata !DIExpression()), !dbg !7372
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !7373
  br i1 %3, label %4, label %11, !dbg !7375

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !7376
  %6 = tail call fastcc i32 @isdigit.39(i32 noundef %5) #26, !dbg !7379
  %7 = icmp eq i32 %6, 0, !dbg !7379
  br i1 %7, label %8, label %9, !dbg !7380

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !7381
  br label %34, !dbg !7383

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !7384
  %10 = add nsw i32 %5, -48, !dbg !7385
  store i32 %10, i32* @ansi_val, align 4, !dbg !7386
  store i32 0, i32* @ansi_val_2, align 4, !dbg !7387
  br label %81, !dbg !7388

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !7389
  br i1 %12, label %13, label %34, !dbg !7391

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !7392
  %15 = tail call fastcc i32 @isdigit.39(i32 noundef %14) #26, !dbg !7395
  %16 = icmp eq i32 %15, 0, !dbg !7395
  br i1 %16, label %29, label %17, !dbg !7396

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !7397
  br i1 %18, label %19, label %24, !dbg !7400

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !7401
  %21 = mul i32 %20, 10, !dbg !7401
  %22 = add nsw i32 %14, -48, !dbg !7403
  %23 = add i32 %22, %21, !dbg !7404
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !7404
  br label %81, !dbg !7405

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !7406
  %26 = mul i32 %25, 10, !dbg !7406
  %27 = add nsw i32 %14, -48, !dbg !7408
  %28 = add i32 %27, %26, !dbg !7409
  store i32 %28, i32* @ansi_val, align 4, !dbg !7409
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !7410
  br i1 %30, label %31, label %33, !dbg !7412

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !7413
  br i1 %32, label %33, label %81, !dbg !7414

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !7415
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !7416
  br label %34, !dbg !7417

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !7371), !dbg !7418
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !7419

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !7420
  %37 = load i8, i8* @cur, align 1, !dbg !7423
  %38 = zext i8 %37 to i32, !dbg !7423
  %39 = icmp ugt i32 %36, %38, !dbg !7424
  br i1 %39, label %80, label %40, !dbg !7425

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !7426
  %42 = trunc i32 %36 to i8, !dbg !7426
  %43 = add i8 %41, %42, !dbg !7426
  store i8 %43, i8* @end, align 1, !dbg !7426
  %44 = sub i8 %37, %42, !dbg !7427
  store i8 %44, i8* @cur, align 1, !dbg !7427
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !7428
  br label %80, !dbg !7429

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !7430
  %47 = load i8, i8* @end, align 1, !dbg !7432
  %48 = zext i8 %47 to i32, !dbg !7432
  %49 = icmp ugt i32 %46, %48, !dbg !7433
  br i1 %49, label %80, label %50, !dbg !7434

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !7435
  %52 = sub i8 %47, %51, !dbg !7435
  store i8 %52, i8* @end, align 1, !dbg !7435
  %53 = load i8, i8* @cur, align 1, !dbg !7436
  %54 = add i8 %53, %51, !dbg !7436
  store i8 %54, i8* @cur, align 1, !dbg !7436
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !7437
  br label %80, !dbg !7438

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !7439
  %57 = icmp eq i8 %56, 0, !dbg !7439
  br i1 %57, label %80, label %58, !dbg !7441

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !7442
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !7443
  %60 = load i8, i8* @cur, align 1, !dbg !7444
  %61 = load i8, i8* @end, align 1, !dbg !7445
  %62 = add i8 %61, %60, !dbg !7445
  store i8 %62, i8* @end, align 1, !dbg !7445
  store i8 0, i8* @cur, align 1, !dbg !7446
  br label %80, !dbg !7447

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !7448
  %65 = icmp eq i8 %64, 0, !dbg !7448
  br i1 %65, label %80, label %66, !dbg !7450

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !7451
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !7452
  %68 = load i8, i8* @end, align 1, !dbg !7453
  %69 = load i8, i8* @cur, align 1, !dbg !7454
  %70 = add i8 %69, %68, !dbg !7454
  store i8 %70, i8* @cur, align 1, !dbg !7454
  store i8 0, i8* @end, align 1, !dbg !7455
  br label %80, !dbg !7456

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !7457
  %73 = icmp eq i8 %72, 0, !dbg !7457
  br i1 %73, label %80, label %74, !dbg !7459

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !7460
  %75 = load i8, i8* @cur, align 1, !dbg !7461
  %76 = zext i8 %75 to i32, !dbg !7462
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !7462
  %78 = load i8, i8* @end, align 1, !dbg !7463
  %79 = add i8 %78, -1, !dbg !7463
  store i8 %79, i8* @end, align 1, !dbg !7463
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !7464
  br label %80, !dbg !7465

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !7466
  br label %81, !dbg !7467

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !7467
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !7468 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7473, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.value(metadata i32 %0, metadata !7474, metadata !DIExpression()), !dbg !7477
  %2 = and i32 %0, 31, !dbg !7478
  %3 = shl nuw i32 1, %2, !dbg !7478
  call void @llvm.dbg.value(metadata i32 %3, metadata !7475, metadata !DIExpression()), !dbg !7477
  %4 = xor i32 %3, -1, !dbg !7479
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !7480
  call void @llvm.dbg.value(metadata i32 %5, metadata !7476, metadata !DIExpression()), !dbg !7477
  %6 = and i32 %5, %3, !dbg !7481
  %7 = icmp ne i32 %6, 0, !dbg !7482
  ret i1 %7, !dbg !7483
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #16 !dbg !7484 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7488, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 %0, metadata !7489, metadata !DIExpression()), !dbg !7491
  %2 = and i32 %0, 31, !dbg !7492
  %3 = shl nuw i32 1, %2, !dbg !7492
  call void @llvm.dbg.value(metadata i32 %3, metadata !7490, metadata !DIExpression()), !dbg !7491
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !7493
  ret void, !dbg !7494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !7495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7497, metadata !DIExpression()), !dbg !7498
  %2 = add i32 %0, -32, !dbg !7499
  %3 = icmp ult i32 %2, 95, !dbg !7499
  %4 = zext i1 %3 to i32, !dbg !7499
  ret i32 %4, !dbg !7500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7501 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i8 %1, metadata !7506, metadata !DIExpression()), !dbg !7507
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #26, !dbg !7508
  %3 = icmp eq i8 %1, 0, !dbg !7509
  br i1 %3, label %4, label %5, !dbg !7511

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #26, !dbg !7512
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 8) #26, !dbg !7514
  br label %14, !dbg !7515

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !7516
  call void @llvm.dbg.value(metadata i8 %1, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i8 %1, metadata !7506, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7507
  br label %6, !dbg !7517

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.value(metadata i8* %8, metadata !7505, metadata !DIExpression()), !dbg !7507
  %9 = add i8 %7, -1, !dbg !7518
  call void @llvm.dbg.value(metadata i8 %9, metadata !7506, metadata !DIExpression()), !dbg !7507
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7519
  %11 = load i8, i8* %10, align 1, !dbg !7521
  store i8 %11, i8* %8, align 1, !dbg !7522
  call void @llvm.dbg.value(metadata i8* %10, metadata !7505, metadata !DIExpression()), !dbg !7507
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %11) #26, !dbg !7523
  call void @llvm.dbg.value(metadata i8 %9, metadata !7506, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7507
  %12 = icmp eq i8 %9, 0, !dbg !7524
  br i1 %12, label %13, label %6, !dbg !7517, !llvm.loop !7525

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 32) #26, !dbg !7527
  tail call fastcc void @cursor_restore() #26, !dbg !7528
  br label %14, !dbg !7529

14:                                               ; preds = %13, %4
  ret void, !dbg !7529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !7530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %1, metadata !7535, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %2, metadata !7536, metadata !DIExpression()), !dbg !7538
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %1) #26, !dbg !7539
  %4 = icmp eq i8 %2, 0, !dbg !7540
  br i1 %4, label %5, label %6, !dbg !7542

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !7543
  br label %17, !dbg !7545

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !7546
  call void @llvm.dbg.value(metadata i8 %7, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7538
  store i8 %1, i8* %0, align 1, !dbg !7547
  tail call fastcc void @cursor_save() #26, !dbg !7548
  call void @llvm.dbg.value(metadata i8 %7, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %2, metadata !7536, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %2, metadata !7536, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7538
  br label %8, !dbg !7549

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7538
  call void @llvm.dbg.value(metadata i8 %10, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %11, metadata !7536, metadata !DIExpression()), !dbg !7538
  %13 = add i8 %11, -1, !dbg !7550
  call void @llvm.dbg.value(metadata i8 %13, metadata !7536, metadata !DIExpression()), !dbg !7538
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %10) #26, !dbg !7551
  %14 = load i8, i8* %12, align 1, !dbg !7553
  call void @llvm.dbg.value(metadata i8 %14, metadata !7535, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %12, metadata !7534, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7538
  store i8 %10, i8* %12, align 1, !dbg !7554
  call void @llvm.dbg.value(metadata i8 %14, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.value(metadata i8* %12, metadata !7534, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7538
  call void @llvm.dbg.value(metadata i8 %13, metadata !7536, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7538
  %15 = icmp eq i8 %13, 0, !dbg !7555
  br i1 %15, label %16, label %8, !dbg !7549, !llvm.loop !7556

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !7558
  br label %17, !dbg !7559

17:                                               ; preds = %16, %5
  ret void, !dbg !7559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !7560 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !7561
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !7563 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !7564
  ret void, !dbg !7565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #16 !dbg !7566 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7571, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i32 %0, metadata !7572, metadata !DIExpression()), !dbg !7573
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !7574
  ret i32 %2, !dbg !7575
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #16 !dbg !7576 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i32 %0, metadata !7579, metadata !DIExpression()), !dbg !7580
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !7581
  ret i32 %2, !dbg !7582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.39(i32 noundef %0) unnamed_addr #11 !dbg !7583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7585, metadata !DIExpression()), !dbg !7586
  %2 = add i32 %0, -48, !dbg !7587
  %3 = icmp ult i32 %2, 10, !dbg !7588
  %4 = zext i1 %3 to i32, !dbg !7588
  ret i32 %4, !dbg !7589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #16 !dbg !7590 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7592, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.value(metadata i32 4, metadata !7593, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.value(metadata i32 16, metadata !7594, metadata !DIExpression()), !dbg !7596
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !7597
  call void @llvm.dbg.value(metadata i32 %1, metadata !7595, metadata !DIExpression()), !dbg !7596
  %2 = and i32 %1, 16, !dbg !7598
  %3 = icmp ne i32 %2, 0, !dbg !7599
  ret i1 %3, !dbg !7600
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #16 !dbg !7601 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7603, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.value(metadata i32 %0, metadata !7604, metadata !DIExpression()), !dbg !7606
  %2 = and i32 %0, 31, !dbg !7607
  %3 = shl nuw i32 1, %2, !dbg !7607
  call void @llvm.dbg.value(metadata i32 %3, metadata !7605, metadata !DIExpression()), !dbg !7606
  %4 = xor i32 %3, -1, !dbg !7608
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !7609
  ret void, !dbg !7610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !7611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7613, metadata !DIExpression()), !dbg !7614
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), i32 noundef %0) #25, !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !7617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7619, metadata !DIExpression()), !dbg !7620
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.40, i32 0, i32 0), i32 noundef %0) #25, !dbg !7621
  ret void, !dbg !7622
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #16 !dbg !7623 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !7627, metadata !DIExpression()), !dbg !7628
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !7629
  ret i32 %1, !dbg !7630
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !7631 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7633, metadata !DIExpression()), !dbg !7635
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7636
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7634, metadata !DIExpression()), !dbg !7635
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !7637
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7637
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7639
  br i1 %4, label %7, label %5, !dbg !7640

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7641
  br label %7, !dbg !7642

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7635
  ret i32 %8, !dbg !7643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !7644 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7646, metadata !DIExpression()), !dbg !7648
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7649
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7647, metadata !DIExpression()), !dbg !7648
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !7650
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !7650
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !7652
  br i1 %4, label %7, label %5, !dbg !7653

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7654
  br label %7, !dbg !7655

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !7648
  ret i32 %8, !dbg !7656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable() unnamed_addr #1 !dbg !7657 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7659, metadata !DIExpression()), !dbg !7661
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7662
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7660, metadata !DIExpression()), !dbg !7661
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !7663
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7663
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7665
  br i1 %4, label %6, label %5, !dbg !7666

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7667
  br label %6, !dbg !7669

6:                                                ; preds = %5, %0
  ret void, !dbg !7670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable() unnamed_addr #1 !dbg !7671 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7673, metadata !DIExpression()), !dbg !7675
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7676
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !7674, metadata !DIExpression()), !dbg !7675
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !7677
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !7677
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !7679
  br i1 %4, label %6, label %5, !dbg !7680

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_21) #25, !dbg !7681
  br label %6, !dbg !7683

6:                                                ; preds = %5, %0
  ret void, !dbg !7684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_setup(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !7685 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7687, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.value(metadata i8 %1, metadata !7688, metadata !DIExpression()), !dbg !7695
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7696
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_cfg**, !dbg !7696
  %5 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %4, align 4, !dbg !7696
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %5, metadata !7689, metadata !DIExpression()), !dbg !7695
  %6 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7697
  %7 = load %struct._thread_stack_info*, %struct._thread_stack_info** %6, align 4, !dbg !7697
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %7, metadata !7691, metadata !DIExpression()), !dbg !7695
  %8 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7698
  %9 = bitcast i8** %8 to %struct.wdt_sam_dev_data**, !dbg !7698
  %10 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %9, align 4, !dbg !7698
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %10, metadata !7693, metadata !DIExpression()), !dbg !7695
  %11 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 2, !dbg !7699
  %12 = load i8, i8* %11, align 4, !dbg !7699, !range !5776
  %13 = icmp eq i8 %12, 0, !dbg !7699
  br i1 %13, label %36, label %14, !dbg !7701

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 3, !dbg !7702
  %16 = load i8, i8* %15, align 1, !dbg !7702, !range !5776
  %17 = icmp eq i8 %16, 0, !dbg !7702
  br i1 %17, label %18, label %36, !dbg !7704

18:                                               ; preds = %14
  %19 = zext i8 %1 to i32, !dbg !7705
  %20 = and i32 %19, 1, !dbg !7707
  %21 = icmp eq i32 %20, 0, !dbg !7708
  br i1 %21, label %26, label %22, !dbg !7709

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 1, !dbg !7710
  %24 = load i32, i32* %23, align 4, !dbg !7712
  %25 = or i32 %24, 536870912, !dbg !7712
  store i32 %25, i32* %23, align 4, !dbg !7712
  br label %26, !dbg !7713

26:                                               ; preds = %22, %18
  %27 = and i32 %19, 2, !dbg !7714
  %28 = icmp eq i32 %27, 0, !dbg !7716
  %29 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 1
  %30 = load i32, i32* %29, align 4, !dbg !7695
  br i1 %28, label %33, label %31, !dbg !7717

31:                                               ; preds = %26
  %32 = or i32 %30, 268435456, !dbg !7718
  store i32 %32, i32* %29, align 4, !dbg !7718
  br label %33, !dbg !7720

33:                                               ; preds = %26, %31
  %34 = phi i32 [ %32, %31 ], [ %30, %26 ], !dbg !7721
  %35 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %7, i32 0, i32 1, !dbg !7722
  store volatile i32 %34, i32* %35, align 4, !dbg !7723
  store i8 1, i8* %15, align 1, !dbg !7724
  br label %36, !dbg !7725

36:                                               ; preds = %14, %2, %33
  %37 = phi i32 [ 0, %33 ], [ -22, %2 ], [ -1, %14 ], !dbg !7695
  ret i32 %37, !dbg !7726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !7727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7729, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* undef, metadata !7730, metadata !DIExpression()), !dbg !7733
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* undef, metadata !7731, metadata !DIExpression()), !dbg !7733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7734
  %3 = bitcast i8** %2 to %struct.wdt_sam_dev_data**, !dbg !7734
  %4 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %3, align 4, !dbg !7734
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %4, metadata !7732, metadata !DIExpression()), !dbg !7733
  %5 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %4, i32 0, i32 3, !dbg !7735
  %6 = load i8, i8* %5, align 1, !dbg !7735, !range !5776
  %7 = icmp eq i8 %6, 0, !dbg !7735
  br i1 %7, label %8, label %17, !dbg !7737

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7738
  %10 = bitcast i8** %9 to %struct.wdt_sam_dev_cfg**, !dbg !7738
  %11 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %10, align 4, !dbg !7738
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %11, metadata !7730, metadata !DIExpression()), !dbg !7733
  %12 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %11, i32 0, i32 0, !dbg !7739
  %13 = load %struct._thread_stack_info*, %struct._thread_stack_info** %12, align 4, !dbg !7739
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %13, metadata !7731, metadata !DIExpression()), !dbg !7733
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %13, i32 0, i32 1, !dbg !7740
  %15 = load volatile i32, i32* %14, align 4, !dbg !7741
  %16 = or i32 %15, 32768, !dbg !7741
  store volatile i32 %16, i32* %14, align 4, !dbg !7741
  store i8 1, i8* %5, align 1, !dbg !7742
  br label %17, !dbg !7743

17:                                               ; preds = %1, %8
  %18 = phi i32 [ 0, %8 ], [ -1, %1 ], !dbg !7733
  ret i32 %18, !dbg !7744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @wdt_sam_install_timeout(%struct.device* nocapture noundef readonly %0, %struct.wdt_timeout_cfg* nocapture noundef readonly %1) #8 !dbg !7745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7747, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata %struct.wdt_timeout_cfg* %1, metadata !7748, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.value(metadata i32 0, metadata !7749, metadata !DIExpression()), !dbg !7752
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7753
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_data**, !dbg !7753
  %5 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %4, align 4, !dbg !7753
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %5, metadata !7751, metadata !DIExpression()), !dbg !7752
  %6 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 2, !dbg !7754
  %7 = load i8, i8* %6, align 4, !dbg !7754, !range !5776
  %8 = icmp eq i8 %7, 0, !dbg !7754
  br i1 %8, label %9, label %36, !dbg !7756

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 0, i32 0, !dbg !7757
  %11 = load i32, i32* %10, align 4, !dbg !7757
  %12 = icmp eq i32 %11, 0, !dbg !7759
  br i1 %12, label %13, label %36, !dbg !7760

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 0, i32 1, !dbg !7761
  %15 = load i32, i32* %14, align 4, !dbg !7761
  %16 = tail call i32 @wdt_sam_convert_timeout(i32 noundef %15, i32 noundef 32768) #26, !dbg !7762
  call void @llvm.dbg.value(metadata i32 %16, metadata !7750, metadata !DIExpression()), !dbg !7752
  %17 = icmp slt i32 %16, 0, !dbg !7763
  br i1 %17, label %36, label %18, !dbg !7765

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 2, !dbg !7766
  %20 = load i8, i8* %19, align 4, !dbg !7766
  switch i8 %20, label %36 [
    i8 2, label %28
    i8 0, label %21
    i8 1, label %27
  ], !dbg !7767

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 1, !dbg !7768
  %23 = load void (%struct.device*, i32)*, void (%struct.device*, i32)** %22, align 4, !dbg !7768
  %24 = icmp eq void (%struct.device*, i32)* %23, null, !dbg !7771
  br i1 %24, label %36, label %25, !dbg !7772

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 4096, metadata !7749, metadata !DIExpression()), !dbg !7752
  %26 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 0, !dbg !7773
  store void (%struct.device*, i32)* %23, void (%struct.device*, i32)** %26, align 4, !dbg !7775
  br label %28, !dbg !7776

27:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 24576, metadata !7749, metadata !DIExpression()), !dbg !7752
  br label %28, !dbg !7777

28:                                               ; preds = %18, %27, %25
  %29 = phi i32 [ 24576, %27 ], [ 4096, %25 ], [ 8192, %18 ], !dbg !7778
  call void @llvm.dbg.value(metadata i32 %29, metadata !7749, metadata !DIExpression()), !dbg !7752
  %30 = and i32 %16, 4095, !dbg !7779
  %31 = shl i32 %16, 16, !dbg !7780
  %32 = and i32 %31, 268369920, !dbg !7780
  %33 = or i32 %32, %30, !dbg !7781
  %34 = or i32 %33, %29, !dbg !7782
  %35 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 1, !dbg !7783
  store i32 %34, i32* %35, align 4, !dbg !7784
  store i8 1, i8* %6, align 4, !dbg !7785
  br label %36, !dbg !7786

36:                                               ; preds = %18, %21, %13, %9, %2, %28
  %37 = phi i32 [ 0, %28 ], [ -12, %2 ], [ -22, %9 ], [ -22, %13 ], [ -22, %21 ], [ -134, %18 ], !dbg !7752
  ret i32 %37, !dbg !7787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_feed(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7790, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 %1, metadata !7791, metadata !DIExpression()), !dbg !7794
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7795
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_cfg**, !dbg !7795
  %5 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %4, align 4, !dbg !7795
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %5, metadata !7792, metadata !DIExpression()), !dbg !7794
  %6 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7796
  %7 = load %struct._thread_stack_info*, %struct._thread_stack_info** %6, align 4, !dbg !7796
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %7, metadata !7793, metadata !DIExpression()), !dbg !7794
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %7, i32 0, i32 0, !dbg !7797
  %9 = load volatile i32, i32* %8, align 4, !dbg !7798
  %10 = or i32 %9, -1526726655, !dbg !7798
  store volatile i32 %10, i32* %8, align 4, !dbg !7798
  ret i32 0, !dbg !7799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @wdt_sam_convert_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7804, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %1, metadata !7805, metadata !DIExpression()), !dbg !7808
  %3 = mul i32 %0, 1000, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %3, metadata !7804, metadata !DIExpression()), !dbg !7808
  %4 = udiv i32 128000000, %1, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %4, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %4, metadata !7806, metadata !DIExpression(DW_OP_constu, 4095, DW_OP_mul, DW_OP_stack_value)), !dbg !7808
  %5 = icmp ult i32 %3, %4, !dbg !7811
  %6 = mul i32 %4, 4095
  %7 = icmp ugt i32 %3, %6
  %8 = or i1 %5, %7, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %6, metadata !7806, metadata !DIExpression()), !dbg !7808
  br i1 %8, label %12, label %9, !dbg !7813

9:                                                ; preds = %2
  %10 = udiv i32 %3, %4, !dbg !7814
  %11 = and i32 %10, 4095, !dbg !7814
  br label %12, !dbg !7815

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %11, %9 ], [ -22, %2 ], !dbg !7808
  ret i32 %13, !dbg !7816
}

; Function Attrs: noinline nounwind optsize
define internal void @wdt_sam_isr(%struct.device* noundef %0) #1 !dbg !7817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7821, metadata !DIExpression()), !dbg !7826
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7827
  %3 = bitcast i8** %2 to %struct.wdt_sam_dev_cfg**, !dbg !7827
  %4 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %3, align 4, !dbg !7827
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %4, metadata !7822, metadata !DIExpression()), !dbg !7826
  %5 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %4, i32 0, i32 0, !dbg !7828
  %6 = load %struct._thread_stack_info*, %struct._thread_stack_info** %5, align 4, !dbg !7828
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %6, metadata !7824, metadata !DIExpression()), !dbg !7826
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7829
  %8 = bitcast i8** %7 to %struct.wdt_sam_dev_data**, !dbg !7829
  %9 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %8, align 4, !dbg !7829
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %9, metadata !7825, metadata !DIExpression()), !dbg !7826
  %10 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %6, i32 0, i32 2, !dbg !7830
  %11 = load volatile i32, i32* %10, align 4, !dbg !7830
  call void @llvm.dbg.value(metadata i32 %11, metadata !7823, metadata !DIExpression()), !dbg !7826
  %12 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %9, i32 0, i32 0, !dbg !7831
  %13 = load void (%struct.device*, i32)*, void (%struct.device*, i32)** %12, align 4, !dbg !7831
  tail call void %13(%struct.device* noundef %0, i32 noundef 0) #25, !dbg !7832
  ret void, !dbg !7833
}

; Function Attrs: noinline nounwind optsize
define internal i32 @wdt_sam_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !7834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7836, metadata !DIExpression()), !dbg !7837
  %2 = tail call i32 @wdt_sam_disable(%struct.device* noundef %0) #26, !dbg !7838
  tail call fastcc void @wdt_sam_irq_config() #26, !dbg !7839
  ret i32 0, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @wdt_sam_irq_config() unnamed_addr #1 !dbg !872 {
  tail call void @z_arm_irq_priority_set(i32 noundef 4, i32 noundef 0, i32 noundef 0) #25, !dbg !7841
  tail call void @arch_irq_enable(i32 noundef 4) #25, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !7845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7847, metadata !DIExpression()), !dbg !7854
  call void @llvm.dbg.value(metadata i8* %1, metadata !7848, metadata !DIExpression()), !dbg !7854
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7855
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7855
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7855
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7849, metadata !DIExpression()), !dbg !7854
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7856
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !7856
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !7852, metadata !DIExpression()), !dbg !7854
  %8 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 5, !dbg !7857
  %9 = load volatile i32, i32* %8, align 4, !dbg !7857
  %10 = and i32 %9, 1, !dbg !7859
  %11 = icmp eq i32 %10, 0, !dbg !7859
  br i1 %11, label %16, label %12, !dbg !7860

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 6, !dbg !7861
  %14 = load volatile i32, i32* %13, align 4, !dbg !7861
  %15 = trunc i32 %14 to i8, !dbg !7862
  store i8 %15, i8* %1, align 1, !dbg !7863
  br label %16, !dbg !7864

16:                                               ; preds = %2, %12
  %17 = phi i32 [ 0, %12 ], [ -16, %2 ], !dbg !7854
  ret i32 %17, !dbg !7865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !7866 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7868, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i8 %1, metadata !7869, metadata !DIExpression()), !dbg !7872
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7873
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7873
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7873
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7870, metadata !DIExpression()), !dbg !7872
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7874
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !7874
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !7871, metadata !DIExpression()), !dbg !7872
  %8 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 5
  br label %9, !dbg !7875

9:                                                ; preds = %9, %2
  %10 = load volatile i32, i32* %8, align 4, !dbg !7876
  %11 = and i32 %10, 2, !dbg !7877
  %12 = icmp eq i32 %11, 0, !dbg !7878
  br i1 %12, label %9, label %13, !dbg !7875, !llvm.loop !7879

13:                                               ; preds = %9
  %14 = zext i8 %1 to i32, !dbg !7881
  %15 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 7, !dbg !7882
  store volatile i32 %14, i32* %15, align 4, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !7885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7887, metadata !DIExpression()), !dbg !7894
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7895
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !7895
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !7895
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !7888, metadata !DIExpression()), !dbg !7894
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !7896
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !7896
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !7889, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.value(metadata i32 0, metadata !7893, metadata !DIExpression()), !dbg !7894
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !7897
  %8 = load volatile i32, i32* %7, align 4, !dbg !7897
  %9 = lshr i32 %8, 5, !dbg !7899
  %10 = and i32 %9, 1, !dbg !7899
  call void @llvm.dbg.value(metadata i32 %10, metadata !7893, metadata !DIExpression()), !dbg !7894
  %11 = load volatile i32, i32* %7, align 4, !dbg !7900
  %12 = lshr i32 %11, 6, !dbg !7902
  %13 = and i32 %12, 2, !dbg !7902
  %14 = or i32 %13, %10, !dbg !7902
  call void @llvm.dbg.value(metadata i32 %14, metadata !7893, metadata !DIExpression()), !dbg !7894
  %15 = load volatile i32, i32* %7, align 4, !dbg !7903
  %16 = lshr i32 %15, 4, !dbg !7905
  %17 = and i32 %16, 4, !dbg !7905
  %18 = or i32 %14, %17, !dbg !7905
  call void @llvm.dbg.value(metadata i32 %18, metadata !7893, metadata !DIExpression()), !dbg !7894
  ret i32 %18, !dbg !7906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #15 !dbg !7907 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7909, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7910, metadata !DIExpression()), !dbg !7914
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7915
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7915
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7915
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7912, metadata !DIExpression()), !dbg !7914
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7916
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !7916
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !7913, metadata !DIExpression()), !dbg !7914
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7917
  %9 = load i8, i8* %8, align 1, !dbg !7917
  %10 = icmp eq i8 %9, 1, !dbg !7919
  br i1 %10, label %11, label %30, !dbg !7920

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7921
  %13 = load i8, i8* %12, align 2, !dbg !7921
  %14 = icmp eq i8 %13, 3, !dbg !7922
  br i1 %14, label %15, label %30, !dbg !7923

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7924
  %17 = load i8, i8* %16, align 1, !dbg !7924
  %18 = icmp eq i8 %17, 0, !dbg !7925
  br i1 %18, label %19, label %30, !dbg !7926

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 0, !dbg !7927
  store volatile i32 428, i32* %20, align 4, !dbg !7928
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7929
  %22 = load i8, i8* %21, align 4, !dbg !7929
  %23 = tail call fastcc i32 @uart_sam_cfg2sam_parity(i8 noundef zeroext %22) #26, !dbg !7930
  %24 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 1, !dbg !7931
  store volatile i32 %23, i32* %24, align 4, !dbg !7932
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7933
  %26 = load i32, i32* %25, align 4, !dbg !7933
  %27 = tail call fastcc i32 @uart_sam_baudrate_set(%struct.device* noundef nonnull %0, i32 noundef %26) #26, !dbg !7934
  call void @llvm.dbg.value(metadata i32 %27, metadata !7911, metadata !DIExpression()), !dbg !7914
  %28 = icmp eq i32 %27, 0, !dbg !7935
  br i1 %28, label %29, label %30, !dbg !7937

29:                                               ; preds = %19
  store volatile i32 80, i32* %20, align 4, !dbg !7938
  br label %30, !dbg !7939

30:                                               ; preds = %19, %2, %11, %15, %29
  %31 = phi i32 [ 0, %29 ], [ -134, %15 ], [ -134, %11 ], [ -134, %2 ], [ %27, %19 ], !dbg !7914
  ret i32 %31, !dbg !7940
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #16 !dbg !7941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7943, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7944, metadata !DIExpression()), !dbg !7948
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7949
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_data**, !dbg !7949
  %5 = load %struct.uart_sam_dev_data*, %struct.uart_sam_dev_data** %4, align 4, !dbg !7949
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_data* %5, metadata !7945, metadata !DIExpression()), !dbg !7948
  %6 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %5, i32 0, i32 0, !dbg !7950
  %7 = load i32, i32* %6, align 4, !dbg !7950
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7951
  store i32 %7, i32* %8, align 4, !dbg !7952
  %9 = tail call fastcc zeroext i8 @uart_sam_get_parity(%struct.device* noundef %0) #26, !dbg !7953
  %10 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7954
  store i8 %9, i8* %10, align 4, !dbg !7955
  %11 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7956
  store i8 1, i8* %11, align 1, !dbg !7957
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7958
  store i8 3, i8* %12, align 2, !dbg !7959
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7960
  store i8 0, i8* %13, align 1, !dbg !7961
  ret i32 0, !dbg !7962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #15 !dbg !7963 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7965, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i8* %1, metadata !7966, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i32 %2, metadata !7967, metadata !DIExpression()), !dbg !7970
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7971
  %5 = bitcast i8** %4 to %struct.uart_sam_dev_cfg**, !dbg !7971
  %6 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %5, align 4, !dbg !7971
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %6, metadata !7968, metadata !DIExpression()), !dbg !7970
  %7 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %6, i32 0, i32 0, !dbg !7972
  %8 = load %struct.Uart*, %struct.Uart** %7, align 4, !dbg !7972
  call void @llvm.dbg.value(metadata %struct.Uart* %8, metadata !7969, metadata !DIExpression()), !dbg !7970
  %9 = getelementptr inbounds %struct.Uart, %struct.Uart* %8, i32 0, i32 5
  br label %10, !dbg !7973

10:                                               ; preds = %10, %3
  %11 = load volatile i32, i32* %9, align 4, !dbg !7974
  %12 = and i32 %11, 2, !dbg !7975
  %13 = icmp eq i32 %12, 0, !dbg !7976
  br i1 %13, label %10, label %14, !dbg !7973, !llvm.loop !7977

14:                                               ; preds = %10
  %15 = load i8, i8* %1, align 1, !dbg !7979
  %16 = zext i8 %15 to i32, !dbg !7979
  %17 = getelementptr inbounds %struct.Uart, %struct.Uart* %8, i32 0, i32 7, !dbg !7980
  store volatile i32 %16, i32* %17, align 4, !dbg !7981
  ret i32 1, !dbg !7982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #15 !dbg !7983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7985, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i8* %1, metadata !7986, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 %2, metadata !7987, metadata !DIExpression()), !dbg !7991
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7992
  %5 = bitcast i8** %4 to %struct.uart_sam_dev_cfg**, !dbg !7992
  %6 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %5, align 4, !dbg !7992
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %6, metadata !7988, metadata !DIExpression()), !dbg !7991
  %7 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %6, i32 0, i32 0, !dbg !7993
  %8 = load %struct.Uart*, %struct.Uart** %7, align 4, !dbg !7993
  call void @llvm.dbg.value(metadata %struct.Uart* %8, metadata !7989, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i32 0, metadata !7990, metadata !DIExpression()), !dbg !7991
  %9 = getelementptr inbounds %struct.Uart, %struct.Uart* %8, i32 0, i32 5, !dbg !7994
  call void @llvm.dbg.value(metadata i32 0, metadata !7990, metadata !DIExpression()), !dbg !7991
  %10 = icmp sgt i32 %2, 0, !dbg !7997
  br i1 %10, label %11, label %24, !dbg !7998

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.Uart, %struct.Uart* %8, i32 0, i32 6
  br label %13, !dbg !7998

13:                                               ; preds = %11, %18
  %14 = phi i32 [ 0, %11 ], [ %22, %18 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7990, metadata !DIExpression()), !dbg !7991
  %15 = load volatile i32, i32* %9, align 4, !dbg !7994
  %16 = and i32 %15, 1, !dbg !7999
  %17 = icmp eq i32 %16, 0, !dbg !7999
  br i1 %17, label %24, label %18, !dbg !8000

18:                                               ; preds = %13
  %19 = load volatile i32, i32* %12, align 4, !dbg !8001
  %20 = trunc i32 %19 to i8, !dbg !8003
  %21 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !8004
  store i8 %20, i8* %21, align 1, !dbg !8005
  %22 = add nuw nsw i32 %14, 1, !dbg !8006
  call void @llvm.dbg.value(metadata i32 %22, metadata !7990, metadata !DIExpression()), !dbg !7991
  %23 = icmp eq i32 %22, %2, !dbg !7997
  br i1 %23, label %24, label %13, !dbg !7998, !llvm.loop !8007

24:                                               ; preds = %18, %13, %3
  %25 = phi i32 [ 0, %3 ], [ %14, %13 ], [ %2, %18 ], !dbg !7991
  ret i32 %25, !dbg !8009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !8010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8012, metadata !DIExpression()), !dbg !8015
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8016
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8016
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8016
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8013, metadata !DIExpression()), !dbg !8015
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8017
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8017
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8014, metadata !DIExpression()), !dbg !8015
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 2, !dbg !8018
  store volatile i32 2, i32* %7, align 4, !dbg !8019
  ret void, !dbg !8020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !8021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8023, metadata !DIExpression()), !dbg !8026
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8027
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8027
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8027
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8024, metadata !DIExpression()), !dbg !8026
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8028
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8028
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8025, metadata !DIExpression()), !dbg !8026
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 3, !dbg !8029
  store volatile i32 2, i32* %7, align 4, !dbg !8030
  ret void, !dbg !8031
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8032 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8034, metadata !DIExpression()), !dbg !8037
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8038
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8038
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8038
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8035, metadata !DIExpression()), !dbg !8037
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8039
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8039
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8036, metadata !DIExpression()), !dbg !8037
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !8040
  %8 = load volatile i32, i32* %7, align 4, !dbg !8040
  %9 = and i32 %8, 2, !dbg !8041
  %10 = icmp eq i32 %9, 0, !dbg !8041
  br i1 %10, label %16, label %11, !dbg !8042

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 4, !dbg !8043
  %13 = load volatile i32, i32* %12, align 4, !dbg !8043
  %14 = lshr i32 %13, 1
  %15 = and i32 %14, 1
  br label %16

16:                                               ; preds = %11, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %11 ]
  ret i32 %17, !dbg !8044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !8045 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8047, metadata !DIExpression()), !dbg !8050
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8051
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8051
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8051
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8048, metadata !DIExpression()), !dbg !8050
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8052
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8052
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8049, metadata !DIExpression()), !dbg !8050
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 2, !dbg !8053
  store volatile i32 1, i32* %7, align 4, !dbg !8054
  ret void, !dbg !8055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !8056 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8058, metadata !DIExpression()), !dbg !8061
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8062
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8062
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8062
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8059, metadata !DIExpression()), !dbg !8061
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8063
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8063
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8060, metadata !DIExpression()), !dbg !8061
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 3, !dbg !8064
  store volatile i32 1, i32* %7, align 4, !dbg !8065
  ret void, !dbg !8066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !8067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8069, metadata !DIExpression()), !dbg !8072
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8073
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8073
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8073
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8070, metadata !DIExpression()), !dbg !8072
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8074
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8074
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8071, metadata !DIExpression()), !dbg !8072
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !8075
  %8 = load volatile i32, i32* %7, align 4, !dbg !8075
  %9 = and i32 %8, 2, !dbg !8076
  %10 = icmp eq i32 %9, 0, !dbg !8076
  br i1 %10, label %16, label %11, !dbg !8077

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 4, !dbg !8078
  %13 = load volatile i32, i32* %12, align 4, !dbg !8078
  %14 = lshr i32 %13, 9
  %15 = and i32 %14, 1
  br label %16

16:                                               ; preds = %11, %1
  %17 = phi i32 [ 0, %1 ], [ %15, %11 ]
  ret i32 %17, !dbg !8079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !8080 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8082, metadata !DIExpression()), !dbg !8085
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8086
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8086
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8086
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8083, metadata !DIExpression()), !dbg !8085
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8087
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8087
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8084, metadata !DIExpression()), !dbg !8085
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !8088
  %8 = load volatile i32, i32* %7, align 4, !dbg !8088
  %9 = and i32 %8, 1, !dbg !8089
  ret i32 %9, !dbg !8090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_irq_err_enable(%struct.device* nocapture noundef readonly %0) #15 !dbg !8091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8093, metadata !DIExpression()), !dbg !8096
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8097
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8097
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8097
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8094, metadata !DIExpression()), !dbg !8096
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8098
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8098
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8095, metadata !DIExpression()), !dbg !8096
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 2, !dbg !8099
  store volatile i32 224, i32* %7, align 4, !dbg !8100
  ret void, !dbg !8101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_irq_err_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !8102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8104, metadata !DIExpression()), !dbg !8107
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8108
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8108
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8108
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8105, metadata !DIExpression()), !dbg !8107
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8109
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8109
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8106, metadata !DIExpression()), !dbg !8107
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 3, !dbg !8110
  store volatile i32 224, i32* %7, align 4, !dbg !8111
  ret void, !dbg !8112
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !8113 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8115, metadata !DIExpression()), !dbg !8118
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8119
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8119
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8119
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8116, metadata !DIExpression()), !dbg !8118
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8120
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8120
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8117, metadata !DIExpression()), !dbg !8118
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 4, !dbg !8121
  %8 = load volatile i32, i32* %7, align 4, !dbg !8121
  %9 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !8122
  %10 = load volatile i32, i32* %9, align 4, !dbg !8122
  %11 = and i32 %8, 3, !dbg !8123
  %12 = and i32 %11, %10, !dbg !8124
  ret i32 %12, !dbg !8125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_sam_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !8126 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8128, metadata !DIExpression()), !dbg !8129
  ret i32 1, !dbg !8130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_sam_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !8131 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8133, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !8134, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i8* %2, metadata !8135, metadata !DIExpression()), !dbg !8137
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8138
  %5 = bitcast i8** %4 to %struct.uart_sam_dev_data**, !dbg !8138
  %6 = load %struct.uart_sam_dev_data*, %struct.uart_sam_dev_data** %5, align 4, !dbg !8138
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_data* %6, metadata !8136, metadata !DIExpression()), !dbg !8137
  %7 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %6, i32 0, i32 1, !dbg !8139
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !8140
  %8 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %6, i32 0, i32 2, !dbg !8141
  store i8* %2, i8** %8, align 4, !dbg !8142
  ret void, !dbg !8143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @uart_sam_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !8144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8148, metadata !DIExpression()), !dbg !8151
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8152
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !8152
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !8152
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !8149, metadata !DIExpression()), !dbg !8151
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !8153
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !8153
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !8150, metadata !DIExpression()), !dbg !8151
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 1, !dbg !8154
  %8 = load volatile i32, i32* %7, align 4, !dbg !8154
  %9 = lshr i32 %8, 9, !dbg !8155
  %10 = and i32 %9, 7, !dbg !8155
  %11 = icmp ult i32 %10, 4, !dbg !8155
  %12 = shl nuw nsw i32 %10, 3, !dbg !8155
  %13 = lshr i32 50594050, %12, !dbg !8155
  %14 = trunc i32 %13 to i8, !dbg !8155
  %15 = select i1 %11, i8 %14, i8 0, !dbg !8155
  ret i8 %15, !dbg !8156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_sam_cfg2sam_parity(i8 noundef zeroext %0) unnamed_addr #11 !dbg !8157 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8161, metadata !DIExpression()), !dbg !8162
  %2 = add i8 %0, -1, !dbg !8163
  %3 = icmp ult i8 %2, 4, !dbg !8163
  br i1 %3, label %4, label %8, !dbg !8163

4:                                                ; preds = %1
  %5 = sext i8 %2 to i32, !dbg !8163
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_sam_cfg2sam_parity, i32 0, i32 %5, !dbg !8163
  %7 = load i32, i32* %6, align 4, !dbg !8163
  br label %8, !dbg !8163

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 2048, %1 ], !dbg !8164
  ret i32 %9, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @uart_sam_baudrate_set(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !8167 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8171, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i32 %1, metadata !8172, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_data* undef, metadata !8173, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* undef, metadata !8174, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata %struct.Uart* undef, metadata !8175, metadata !DIExpression()), !dbg !8177
  call void @llvm.dbg.value(metadata i32 undef, metadata !8176, metadata !DIExpression()), !dbg !8177
  %3 = icmp ult i32 %1, 81, !dbg !8178
  br i1 %3, label %16, label %4, !dbg !8180

4:                                                ; preds = %2
  %5 = udiv i32 5250000, %1, !dbg !8181
  call void @llvm.dbg.value(metadata i32 %5, metadata !8176, metadata !DIExpression()), !dbg !8177
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8182
  %7 = bitcast i8** %6 to %struct.uart_sam_dev_cfg**, !dbg !8182
  %8 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %7, align 4, !dbg !8182
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %8, metadata !8174, metadata !DIExpression()), !dbg !8177
  %9 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %8, i32 0, i32 0, !dbg !8183
  %10 = load %struct.Uart*, %struct.Uart** %9, align 4, !dbg !8183
  call void @llvm.dbg.value(metadata %struct.Uart* %10, metadata !8175, metadata !DIExpression()), !dbg !8177
  %11 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8184
  %12 = bitcast i8** %11 to %struct.uart_sam_dev_data**, !dbg !8184
  %13 = load %struct.uart_sam_dev_data*, %struct.uart_sam_dev_data** %12, align 4, !dbg !8184
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_data* %13, metadata !8173, metadata !DIExpression()), !dbg !8177
  %14 = getelementptr inbounds %struct.Uart, %struct.Uart* %10, i32 0, i32 8, !dbg !8185
  store volatile i32 %5, i32* %14, align 4, !dbg !8186
  %15 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %13, i32 0, i32 0, !dbg !8187
  store i32 %1, i32* %15, align 4, !dbg !8188
  br label %16, !dbg !8189

16:                                               ; preds = %2, %4
  %17 = phi i32 [ 0, %4 ], [ -22, %2 ], !dbg !8177
  ret i32 %17, !dbg !8190
}

; Function Attrs: noinline nounwind optsize
define internal void @uart0_sam_irq_config_func(%struct.device* nocapture noundef readnone %0) #1 !dbg !1065 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1067, metadata !DIExpression()), !dbg !8191
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 1, i32 noundef 0) #25, !dbg !8192
  tail call void @arch_irq_enable(i32 noundef 8) #25, !dbg !8194
  ret void, !dbg !8194
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_sam_isr(%struct.device* noundef %0) #1 !dbg !8195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8197, metadata !DIExpression()), !dbg !8199
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8200
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_data**, !dbg !8200
  %4 = load %struct.uart_sam_dev_data*, %struct.uart_sam_dev_data** %3, align 4, !dbg !8200
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_data* %4, metadata !8198, metadata !DIExpression()), !dbg !8199
  %5 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %4, i32 0, i32 1, !dbg !8201
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !8201
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !8203
  br i1 %7, label %11, label %8, !dbg !8204

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %4, i32 0, i32 2, !dbg !8205
  %10 = load i8*, i8** %9, align 4, !dbg !8205
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !8207
  br label %11, !dbg !8208

11:                                               ; preds = %8, %1
  ret void, !dbg !8209
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam_init(%struct.device* noundef %0) #1 !dbg !8210 {
  %2 = alloca %struct.uart_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8212, metadata !DIExpression()), !dbg !8218
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8219
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !8219
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !8219
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !8214, metadata !DIExpression()), !dbg !8218
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8220
  %7 = bitcast i8** %6 to %struct.uart_sam_dev_data**, !dbg !8220
  %8 = load %struct.uart_sam_dev_data*, %struct.uart_sam_dev_data** %7, align 4, !dbg !8220
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_data* %8, metadata !8215, metadata !DIExpression()), !dbg !8218
  %9 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !8221
  %10 = load %struct.Uart*, %struct.Uart** %9, align 4, !dbg !8221
  call void @llvm.dbg.value(metadata %struct.Uart* %10, metadata !8216, metadata !DIExpression()), !dbg !8218
  %11 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 1, !dbg !8222
  %12 = load i32, i32* %11, align 4, !dbg !8222
  tail call void @soc_pmc_peripheral_enable(i32 noundef %12) #25, !dbg !8223
  %13 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 2, !dbg !8224
  %14 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %13, align 4, !dbg !8224
  %15 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %14) #26, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %15, metadata !8213, metadata !DIExpression()), !dbg !8218
  %16 = icmp slt i32 %15, 0, !dbg !8226
  br i1 %16, label %30, label %17, !dbg !8228

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.Uart, %struct.Uart* %10, i32 0, i32 3, !dbg !8229
  store volatile i32 -1, i32* %18, align 4, !dbg !8230
  %19 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 3, !dbg !8231
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !8231
  tail call void %20(%struct.device* noundef nonnull %0) #25, !dbg !8232
  %21 = bitcast %struct.uart_config* %2 to i8*, !dbg !8233
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #24, !dbg !8233
  call void @llvm.dbg.declare(metadata %struct.uart_config* %2, metadata !8217, metadata !DIExpression()), !dbg !8234
  %22 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 0, !dbg !8235
  %23 = getelementptr inbounds %struct.uart_sam_dev_data, %struct.uart_sam_dev_data* %8, i32 0, i32 0, !dbg !8236
  %24 = load i32, i32* %23, align 4, !dbg !8236
  store i32 %24, i32* %22, align 4, !dbg !8235
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 1, !dbg !8235
  store i8 0, i8* %25, align 4, !dbg !8235
  %26 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 2, !dbg !8235
  store i8 1, i8* %26, align 1, !dbg !8235
  %27 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 3, !dbg !8235
  store i8 3, i8* %27, align 2, !dbg !8235
  %28 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 4, !dbg !8235
  store i8 0, i8* %28, align 1, !dbg !8235
  %29 = call i32 @uart_sam_configure(%struct.device* noundef nonnull %0, %struct.uart_config* noundef nonnull %2) #26, !dbg !8237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #24, !dbg !8238
  br label %30

30:                                               ; preds = %1, %17
  %31 = phi i32 [ %29, %17 ], [ %15, %1 ], !dbg !8218
  ret i32 %31, !dbg !8238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8239 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8243, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.value(metadata i8 0, metadata !8244, metadata !DIExpression()), !dbg !8247
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8248
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !8248
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8246, metadata !DIExpression(DW_OP_deref)), !dbg !8247
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !8249
  call void @llvm.dbg.value(metadata i32 %4, metadata !8245, metadata !DIExpression()), !dbg !8247
  %5 = icmp slt i32 %4, 0, !dbg !8250
  br i1 %5, label %9, label %6, !dbg !8252

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8253
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8246, metadata !DIExpression()), !dbg !8247
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !8254
  br label %9, !dbg !8255

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8247
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !8256
  ret i32 %10, !dbg !8256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8257 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8261, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 0, metadata !8263, metadata !DIExpression()), !dbg !8264
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8265
  %3 = load i32*, i32** %2, align 4, !dbg !8265
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8266
  %5 = load i8, i8* %4, align 4, !dbg !8266
  %6 = tail call i32 @pinctrl_configure_pins(i32* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !8267
  ret i32 %6, !dbg !8268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !8269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8271, metadata !DIExpression()), !dbg !8272
  tail call fastcc void @__NVIC_SetPriority.49() #26, !dbg !8273
  store i32 8399, i32* @last_load, align 4, !dbg !8274
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8275
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8276
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8277
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8278
  %3 = or i32 %2, 7, !dbg !8278
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8278
  ret i32 0, !dbg !8279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.49() unnamed_addr #15 !dbg !8280 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 1, metadata !8283, metadata !DIExpression()), !dbg !8284
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8285
  ret void, !dbg !8288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8291, metadata !DIExpression()), !dbg !8293
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !8294
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8295
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8296
  %5 = add i32 %4, %3, !dbg !8296
  store i32 %5, i32* @cycle_count, align 4, !dbg !8296
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8297
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8298
  %7 = sub i32 %5, %6, !dbg !8301
  %8 = udiv i32 %7, 8400, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %8, metadata !8292, metadata !DIExpression()), !dbg !8293
  %9 = mul nuw i32 %8, 8400, !dbg !8303
  %10 = add i32 %9, %6, !dbg !8304
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8304
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !8305
  tail call void @z_arm_int_exit() #25, !dbg !8306
  ret void, !dbg !8307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !8308 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8313
  call void @llvm.dbg.value(metadata i32 %1, metadata !8310, metadata !DIExpression()), !dbg !8314
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %2, metadata !8311, metadata !DIExpression()), !dbg !8314
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8316
  call void @llvm.dbg.value(metadata i32 %3, metadata !8312, metadata !DIExpression()), !dbg !8314
  %4 = and i32 %2, 65536, !dbg !8317
  %5 = icmp ne i32 %4, 0, !dbg !8317
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8319
  %8 = load i32, i32* @last_load, align 4, !dbg !8314
  br i1 %7, label %9, label %13, !dbg !8319

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8320
  %11 = add i32 %10, %8, !dbg !8320
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8320
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8322
  br label %13, !dbg !8323

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8324
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8325
  %16 = add i32 %14, %15, !dbg !8326
  ret i32 %16, !dbg !8327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8332, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata i1 %1, metadata !8333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8345
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8346
  br i1 %4, label %5, label %8, !dbg !8346

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8348
  %7 = and i32 %6, -2, !dbg !8348
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8348
  store i32 -16777216, i32* @last_load, align 4, !dbg !8350
  br label %54, !dbg !8351

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %9, metadata !8337, metadata !DIExpression()), !dbg !8345
  br i1 %3, label %18, label %10, !dbg !8353

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8353
  call void @llvm.dbg.value(metadata i32 undef, metadata !8332, metadata !DIExpression()), !dbg !8345
  %12 = icmp slt i32 %11, 1, !dbg !8354
  br i1 %12, label %18, label %13, !dbg !8354

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8354
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8354
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8354
  %17 = add nuw nsw i32 %16, 8399, !dbg !8354
  br label %18, !dbg !8354

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8332, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8355, metadata !DIExpression()) #24, !dbg !8362
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !8364, !srcloc !8370
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8364
  call void @llvm.dbg.value(metadata i32 %21, metadata !8367, metadata !DIExpression()) #24, !dbg !8371
  call void @llvm.dbg.value(metadata i32 undef, metadata !8368, metadata !DIExpression()) #24, !dbg !8371
  call void @llvm.dbg.value(metadata i32 %21, metadata !8361, metadata !DIExpression()) #24, !dbg !8362
  call void @llvm.dbg.value(metadata i32 %21, metadata !8338, metadata !DIExpression()), !dbg !8345
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !8372
  call void @llvm.dbg.value(metadata i32 %22, metadata !8343, metadata !DIExpression()), !dbg !8345
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8373
  call void @llvm.dbg.value(metadata i32 %23, metadata !8335, metadata !DIExpression()), !dbg !8345
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8374
  %25 = add i32 %24, %22, !dbg !8374
  store i32 %25, i32* @cycle_count, align 4, !dbg !8374
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8375
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8376
  %27 = sub i32 %25, %26, !dbg !8377
  call void @llvm.dbg.value(metadata i32 %27, metadata !8344, metadata !DIExpression()), !dbg !8345
  %28 = icmp slt i32 %27, 0, !dbg !8378
  br i1 %28, label %38, label %29, !dbg !8380

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8334, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.value(metadata i32 undef, metadata !8334, metadata !DIExpression()), !dbg !8345
  %30 = add nuw i32 %19, %27, !dbg !8381
  %31 = urem i32 %30, 8400, !dbg !8383
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8334, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8345
  %32 = sub nuw nsw i32 %19, %31, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %32, metadata !8334, metadata !DIExpression()), !dbg !8345
  %33 = icmp ugt i32 %32, 1024, !dbg !8385
  br i1 %33, label %34, label %36, !dbg !8385

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8334, metadata !DIExpression()), !dbg !8345
  %35 = icmp ugt i32 %32, 16766400, !dbg !8386
  br i1 %35, label %38, label %36, !dbg !8388

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8389
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8390
  call void @llvm.dbg.value(metadata i32 %40, metadata !8336, metadata !DIExpression()), !dbg !8345
  %41 = add nsw i32 %39, -1, !dbg !8391
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8392
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8393
  %42 = icmp ult i32 %23, %40, !dbg !8394
  br i1 %42, label %43, label %48, !dbg !8396

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8397
  %45 = add i32 %23, %9, !dbg !8399
  %46 = sub i32 %45, %40, !dbg !8400
  %47 = add i32 %46, %44, !dbg !8397
  br label %52, !dbg !8401

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8402
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8404
  %51 = add i32 %49, %50, !dbg !8404
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8405
  store i32 %53, i32* @cycle_count, align 4, !dbg !8405
  call void @llvm.dbg.value(metadata i32 %21, metadata !8406, metadata !DIExpression()) #24, !dbg !8412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8411, metadata !DIExpression()) #24, !dbg !8412
  call void @llvm.dbg.value(metadata i32 %21, metadata !8414, metadata !DIExpression()) #24, !dbg !8417
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !8419, !srcloc !8420
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8421
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8422 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8355, metadata !DIExpression()) #24, !dbg !8426
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !8428, !srcloc !8370
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8428
  call void @llvm.dbg.value(metadata i32 %2, metadata !8367, metadata !DIExpression()) #24, !dbg !8430
  call void @llvm.dbg.value(metadata i32 undef, metadata !8368, metadata !DIExpression()) #24, !dbg !8430
  call void @llvm.dbg.value(metadata i32 %2, metadata !8361, metadata !DIExpression()) #24, !dbg !8426
  call void @llvm.dbg.value(metadata i32 %2, metadata !8424, metadata !DIExpression()), !dbg !8431
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !8432
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8433
  %5 = add i32 %4, %3, !dbg !8434
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8435
  %7 = sub i32 %5, %6, !dbg !8436
  call void @llvm.dbg.value(metadata i32 %7, metadata !8425, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata i32 %2, metadata !8406, metadata !DIExpression()) #24, !dbg !8437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8411, metadata !DIExpression()) #24, !dbg !8437
  call void @llvm.dbg.value(metadata i32 %2, metadata !8414, metadata !DIExpression()) #24, !dbg !8439
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !8441, !srcloc !8420
  %8 = udiv i32 %7, 8400, !dbg !8442
  ret i32 %8, !dbg !8443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8444 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8355, metadata !DIExpression()) #24, !dbg !8448
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !8450, !srcloc !8370
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8450
  call void @llvm.dbg.value(metadata i32 %2, metadata !8367, metadata !DIExpression()) #24, !dbg !8452
  call void @llvm.dbg.value(metadata i32 undef, metadata !8368, metadata !DIExpression()) #24, !dbg !8452
  call void @llvm.dbg.value(metadata i32 %2, metadata !8361, metadata !DIExpression()) #24, !dbg !8448
  call void @llvm.dbg.value(metadata i32 %2, metadata !8446, metadata !DIExpression()), !dbg !8453
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !8454
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8455
  %5 = add i32 %4, %3, !dbg !8456
  call void @llvm.dbg.value(metadata i32 %5, metadata !8447, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.value(metadata i32 %2, metadata !8406, metadata !DIExpression()) #24, !dbg !8457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8411, metadata !DIExpression()) #24, !dbg !8457
  call void @llvm.dbg.value(metadata i32 %2, metadata !8414, metadata !DIExpression()) #24, !dbg !8459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !8461, !srcloc !8420
  ret i32 %5, !dbg !8462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !8463 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8464
  %2 = icmp eq i32 %1, -16777216, !dbg !8466
  br i1 %2, label %3, label %6, !dbg !8467

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8468
  %5 = or i32 %4, 1, !dbg !8468
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8468
  br label %6, !dbg !8470

6:                                                ; preds = %3, %0
  ret void, !dbg !8471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !8472 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8473
  %2 = and i32 %1, -2, !dbg !8473
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8473
  ret void, !dbg !8474
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !8475 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8494, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i8 %1, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8496, metadata !DIExpression()), !dbg !8497
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8498
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8498
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8497
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8499
  %8 = load i8, i8* %6, align 4, !dbg !8500
  %9 = zext i8 %8 to i32, !dbg !8501
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8501
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8502
  br i1 %11, label %18, label %24, !dbg !8503

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8497
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8499
  %14 = load i8, i8* %6, align 4, !dbg !8500
  %15 = zext i8 %14 to i32, !dbg !8501
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8501
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8502
  br i1 %17, label %18, label %24, !dbg !8503, !llvm.loop !8504

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8506
  %21 = load i8, i8* %20, align 1, !dbg !8506
  %22 = icmp eq i8 %21, %1, !dbg !8509
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8510
  br i1 %22, label %24, label %12, !dbg !8511

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8497
  ret i32 %25, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(i32* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8513 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8517, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8 %1, metadata !8518, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i32 %2, metadata !8519, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.value(metadata i8 0, metadata !8520, metadata !DIExpression()), !dbg !8523
  %4 = icmp eq i8 %1, 0, !dbg !8524
  br i1 %4, label %5, label %6, !dbg !8526

5:                                                ; preds = %6, %3
  ret i32 0, !dbg !8527

6:                                                ; preds = %3, %6
  %7 = phi i8 [ %11, %6 ], [ 0, %3 ]
  %8 = phi i32* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8520, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32* %8, metadata !8517, metadata !DIExpression()), !dbg !8522
  %9 = getelementptr inbounds i32, i32* %8, i32 1, !dbg !8528
  call void @llvm.dbg.value(metadata i32* %9, metadata !8517, metadata !DIExpression()), !dbg !8522
  %10 = load i32, i32* %8, align 4, !dbg !8530
  tail call fastcc void @pinctrl_configure_pin(i32 noundef %10) #26, !dbg !8531
  %11 = add nuw i8 %7, 1, !dbg !8532
  call void @llvm.dbg.value(metadata i8 %11, metadata !8520, metadata !DIExpression()), !dbg !8523
  %12 = icmp ult i8 %11, %1, !dbg !8524
  br i1 %12, label %6, label %5, !dbg !8526, !llvm.loop !8533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pinctrl_configure_pin(i32 noundef %0) unnamed_addr #1 !dbg !8535 {
  %2 = alloca %struct.soc_gpio_pin, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8539, metadata !DIExpression()), !dbg !8549
  %3 = bitcast %struct.soc_gpio_pin* %2 to i8*, !dbg !8550
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8550
  call void @llvm.dbg.declare(metadata %struct.soc_gpio_pin* %2, metadata !8540, metadata !DIExpression()), !dbg !8551
  %4 = lshr i32 %0, 16, !dbg !8552
  %5 = and i32 %4, 15, !dbg !8552
  call void @llvm.dbg.value(metadata i32 %4, metadata !8547, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !8549
  call void @llvm.dbg.value(metadata i32 %0, metadata !8548, metadata !DIExpression(DW_OP_constu, 25, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !8549
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* @sam_port_addrs, i32 0, i32 %5, !dbg !8553
  %7 = load i32, i32* %6, align 4, !dbg !8553
  %8 = inttoptr i32 %7 to %struct.Pio*, !dbg !8554
  %9 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 1, !dbg !8555
  store %struct.Pio* %8, %struct.Pio** %9, align 4, !dbg !8556
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* @sam_port_periph_id, i32 0, i32 %5, !dbg !8557
  %11 = load i32, i32* %10, align 4, !dbg !8557
  %12 = trunc i32 %11 to i8, !dbg !8557
  %13 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 2, !dbg !8558
  store i8 %12, i8* %13, align 4, !dbg !8559
  %14 = lshr i32 %0, 20, !dbg !8560
  %15 = and i32 %14, 31, !dbg !8560
  %16 = shl nuw i32 1, %15, !dbg !8561
  %17 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 0, !dbg !8562
  store i32 %16, i32* %17, align 4, !dbg !8563
  %18 = and i32 %0, 63, !dbg !8564
  %19 = and i32 %0, 234881024, !dbg !8565
  %20 = icmp eq i32 %19, 33554432, !dbg !8565
  %21 = lshr i32 %0, 12, !dbg !8567
  %22 = and i32 %21, 983040, !dbg !8567
  %23 = select i1 %20, i32 %22, i32 0, !dbg !8567
  %24 = or i32 %23, %18, !dbg !8567
  %25 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 3, !dbg !8568
  store i32 %24, i32* %25, align 4, !dbg !8549
  call void @soc_gpio_configure(%struct.soc_gpio_pin* noundef nonnull %2) #25, !dbg !8569
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #24, !dbg !8570
  ret void, !dbg !8570
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !8571 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !8574, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.value(metadata i32 undef, metadata !8574, metadata !DIExpression()), !dbg !8590
  call void @llvm.dbg.value(metadata i32 undef, metadata !8574, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !8590
  ret void, !dbg !8591
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !8592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8596, metadata !DIExpression()), !dbg !8598
  %2 = icmp eq i8* %0, null, !dbg !8599
  br i1 %2, label %29, label %3, !dbg !8601

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !8602
  %5 = icmp eq i8 %4, 0, !dbg !8603
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !8604
  br i1 %6, label %29, label %8, !dbg !8604

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !8597, metadata !DIExpression()), !dbg !8598
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !8605

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !8597, metadata !DIExpression()), !dbg !8598
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !8607
  br i1 %10, label %11, label %15, !dbg !8612

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !8613
  %13 = load i8*, i8** %12, align 4, !dbg !8613
  %14 = icmp eq i8* %13, %0, !dbg !8614
  br i1 %14, label %29, label %15, !dbg !8615

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !8616
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !8597, metadata !DIExpression()), !dbg !8598
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !8617
  br i1 %17, label %7, label %8, !dbg !8618, !llvm.loop !8619

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !8597, metadata !DIExpression()), !dbg !8598
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !8621
  br i1 %20, label %21, label %26, !dbg !8625

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !8626
  %23 = load i8*, i8** %22, align 4, !dbg !8626
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !8627
  %25 = icmp eq i32 %24, 0, !dbg !8628
  br i1 %25, label %29, label %26, !dbg !8629

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !8630
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !8597, metadata !DIExpression()), !dbg !8598
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !8631
  br i1 %28, label %29, label %18, !dbg !8605, !llvm.loop !8632

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !8598
  ret %struct.device* %30, !dbg !8634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !8635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8639, metadata !DIExpression()), !dbg !8640
  %2 = icmp eq %struct.device* %0, null, !dbg !8641
  br i1 %2, label %14, label %3, !dbg !8643

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !8644
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !8644
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !8645
  %7 = load i8, i8* %6, align 1, !dbg !8645
  %8 = and i8 %7, 1, !dbg !8645
  %9 = icmp eq i8 %8, 0, !dbg !8645
  br i1 %9, label %14, label %10, !dbg !8646

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !8647
  %12 = load i8, i8* %11, align 1, !dbg !8647
  %13 = icmp eq i8 %12, 0, !dbg !8648
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !8640
  ret i1 %15, !dbg !8649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !8650 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !8655, metadata !DIExpression()), !dbg !8656
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !8657
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !8658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !8659 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8667, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !8668, metadata !DIExpression()), !dbg !8672
  call void @llvm.dbg.value(metadata i8* %2, metadata !8669, metadata !DIExpression()), !dbg !8672
  %5 = bitcast i32* %4 to i8*, !dbg !8673
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8673
  call void @llvm.dbg.value(metadata i32 0, metadata !8670, metadata !DIExpression()), !dbg !8672
  store i32 0, i32* %4, align 4, !dbg !8674
  call void @llvm.dbg.value(metadata i32* %4, metadata !8670, metadata !DIExpression(DW_OP_deref)), !dbg !8672
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !8675
  call void @llvm.dbg.value(metadata i16* %6, metadata !8671, metadata !DIExpression()), !dbg !8672
  %7 = load i32, i32* %4, align 4, !dbg !8676
  call void @llvm.dbg.value(metadata i32 %7, metadata !8670, metadata !DIExpression()), !dbg !8672
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !8677
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8678
  ret i32 %8, !dbg !8679
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !8680 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8684, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.value(metadata i32* %1, metadata !8685, metadata !DIExpression()), !dbg !8690
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !8691
  %4 = load i16*, i16** %3, align 4, !dbg !8691
  call void @llvm.dbg.value(metadata i16* %4, metadata !8686, metadata !DIExpression()), !dbg !8690
  %5 = icmp eq i16* %4, null, !dbg !8692
  br i1 %5, label %14, label %6, !dbg !8693

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !8694
  call void @llvm.dbg.value(metadata i32 %7, metadata !8687, metadata !DIExpression()), !dbg !8694
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !8695
  %9 = load i16, i16* %8, align 2, !dbg !8695
  %10 = add i16 %9, -32767, !dbg !8696
  %11 = icmp ult i16 %10, 2, !dbg !8696
  %12 = add i32 %7, 1, !dbg !8697
  call void @llvm.dbg.value(metadata i32 %12, metadata !8687, metadata !DIExpression()), !dbg !8694
  br i1 %11, label %13, label %6, !dbg !8696, !llvm.loop !8699

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !8702
  br label %14, !dbg !8703

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !8704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !8705 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !8709, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %1, metadata !8710, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !8711, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i8* %3, metadata !8712, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 0, metadata !8713, metadata !DIExpression()), !dbg !8721
  %5 = icmp eq i32 %1, 0, !dbg !8722
  br i1 %5, label %16, label %8, !dbg !8723

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !8713, metadata !DIExpression()), !dbg !8721
  %7 = icmp eq i32 %15, %1, !dbg !8722
  br i1 %7, label %16, label %8, !dbg !8723, !llvm.loop !8724

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8713, metadata !DIExpression()), !dbg !8721
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !8726
  %11 = load i16, i16* %10, align 2, !dbg !8726
  call void @llvm.dbg.value(metadata i16 %11, metadata !8715, metadata !DIExpression()), !dbg !8727
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !8728
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !8718, metadata !DIExpression()), !dbg !8727
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !8729
  call void @llvm.dbg.value(metadata i32 %13, metadata !8719, metadata !DIExpression()), !dbg !8727
  %14 = icmp slt i32 %13, 0, !dbg !8730
  %15 = add nuw i32 %9, 1, !dbg !8732
  call void @llvm.dbg.value(metadata i32 %15, metadata !8713, metadata !DIExpression()), !dbg !8721
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !8733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !8734 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8738, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !8739, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !8740, metadata !DIExpression()), !dbg !8741
  %2 = sext i16 %0 to i32, !dbg !8742
  %3 = icmp slt i16 %0, 1, !dbg !8744
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !8745
  %6 = add nsw i32 %2, -1, !dbg !8745
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !8745
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !8745
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !8739, metadata !DIExpression()), !dbg !8741
  ret %struct.device* %8, !dbg !8746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !8747 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8749, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !8750, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i8* %2, metadata !8751, metadata !DIExpression()), !dbg !8754
  %5 = bitcast i32* %4 to i8*, !dbg !8755
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8755
  call void @llvm.dbg.value(metadata i32 0, metadata !8752, metadata !DIExpression()), !dbg !8754
  store i32 0, i32* %4, align 4, !dbg !8756
  call void @llvm.dbg.value(metadata i32* %4, metadata !8752, metadata !DIExpression(DW_OP_deref)), !dbg !8754
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !8757
  call void @llvm.dbg.value(metadata i16* %6, metadata !8753, metadata !DIExpression()), !dbg !8754
  %7 = load i32, i32* %4, align 4, !dbg !8758
  call void @llvm.dbg.value(metadata i32 %7, metadata !8752, metadata !DIExpression()), !dbg !8754
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !8759
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !8760
  ret i32 %8, !dbg !8761
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8764, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32* %1, metadata !8765, metadata !DIExpression()), !dbg !8769
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !8770
  %4 = load i16*, i16** %3, align 4, !dbg !8770
  call void @llvm.dbg.value(metadata i16* %4, metadata !8766, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 0, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i32 0, metadata !8768, metadata !DIExpression()), !dbg !8769
  %5 = icmp eq i16* %4, null, !dbg !8771
  br i1 %5, label %22, label %6, !dbg !8773

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8767, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.value(metadata i16* %8, metadata !8766, metadata !DIExpression()), !dbg !8769
  %9 = load i16, i16* %8, align 2, !dbg !8774
  %10 = icmp eq i16 %9, -32768, !dbg !8778
  call void @llvm.dbg.value(metadata i32 undef, metadata !8767, metadata !DIExpression()), !dbg !8769
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !8779
  call void @llvm.dbg.value(metadata i16* %11, metadata !8766, metadata !DIExpression()), !dbg !8769
  %12 = zext i1 %10 to i32, !dbg !8780
  %13 = add i32 %7, %12, !dbg !8780
  call void @llvm.dbg.value(metadata i32 %13, metadata !8767, metadata !DIExpression()), !dbg !8769
  %14 = icmp eq i32 %13, 2, !dbg !8781
  br i1 %14, label %15, label %6, !dbg !8782

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !8769
  call void @llvm.dbg.value(metadata i32 %16, metadata !8768, metadata !DIExpression()), !dbg !8769
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !8783
  %18 = load i16, i16* %17, align 2, !dbg !8783
  %19 = icmp eq i16 %18, 32767, !dbg !8784
  %20 = add i32 %16, 1, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %20, metadata !8768, metadata !DIExpression()), !dbg !8769
  br i1 %19, label %21, label %15, !dbg !8787, !llvm.loop !8788

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !8790
  br label %22, !dbg !8791

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !8792
  call void @llvm.dbg.value(metadata i16* %23, metadata !8766, metadata !DIExpression()), !dbg !8769
  ret i16* %23, !dbg !8793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !8794 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8797
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !8798
  ret i32* %2, !dbg !8799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !8800 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8948, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !8950, metadata !DIExpression()), !dbg !8951
  ret void, !dbg !8952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8957, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.value(metadata i32 %1, metadata !8958, metadata !DIExpression()), !dbg !8959
  ret void, !dbg !8960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8965, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 %1, metadata !8966, metadata !DIExpression()), !dbg !8967
  ret void, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !8969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8973, metadata !DIExpression()), !dbg !8975
  call void @llvm.dbg.value(metadata i8* %1, metadata !8974, metadata !DIExpression()), !dbg !8975
  ret i32 -134, !dbg !8976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !8977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8981, metadata !DIExpression()), !dbg !8983
  call void @llvm.dbg.value(metadata i8* %1, metadata !8982, metadata !DIExpression()), !dbg !8983
  ret i32 -134, !dbg !8984
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !8985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8988, metadata !DIExpression()), !dbg !8989
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !8990, !srcloc !8996
  call void @llvm.dbg.value(metadata i32 undef, metadata !8993, metadata !DIExpression()) #24, !dbg !8997
  call void @llvm.dbg.value(metadata i32 undef, metadata !8994, metadata !DIExpression()) #24, !dbg !8997
  br label %3, !dbg !8998

3:                                                ; preds = %3, %1
  br label %3, !dbg !8999, !llvm.loop !9002
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !9005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9009, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !9010, metadata !DIExpression()), !dbg !9011
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !9012
  unreachable, !dbg !9012
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !9013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9015, metadata !DIExpression()), !dbg !9016
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !9017
  unreachable, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9020, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !9021, metadata !DIExpression()), !dbg !9024
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9025, !srcloc !8996
  call void @llvm.dbg.value(metadata i32 undef, metadata !8993, metadata !DIExpression()) #24, !dbg !9027
  call void @llvm.dbg.value(metadata i32 undef, metadata !8994, metadata !DIExpression()) #24, !dbg !9027
  call void @llvm.dbg.value(metadata i32 undef, metadata !9022, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !9023, metadata !DIExpression()), !dbg !9024
  %4 = icmp eq %struct.__esf* %1, null, !dbg !9028
  br i1 %4, label %6, label %5, !dbg !9030

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !9031
  br label %7, !dbg !9032

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !9031
  br label %7, !dbg !9035

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !9025
  call void @llvm.dbg.value(metadata i32 %8, metadata !8993, metadata !DIExpression()) #24, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %8, metadata !9022, metadata !DIExpression()), !dbg !9024
  %9 = tail call fastcc %struct.k_thread* @k_current_get.60() #27, !dbg !9037
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !9023, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.value(metadata i32 undef, metadata !9038, metadata !DIExpression()) #24, !dbg !9041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !9043, !srcloc !9044
  tail call fastcc void @k_thread_abort.61(%struct.k_thread* noundef %9) #26, !dbg !9045
  ret void, !dbg !9048
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.60() unnamed_addr #9 !dbg !9049 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.62() #27, !dbg !9053
  ret %struct.k_thread* %1, !dbg !9054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.61(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !9055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9059, metadata !DIExpression()), !dbg !9060
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9061, !srcloc !9063
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !9064
  ret void, !dbg !9065
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.62() unnamed_addr #9 !dbg !9066 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9067, !srcloc !9069
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !9070
  ret %struct.k_thread* %1, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9076, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 %1, metadata !9077, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.value(metadata i32 %2, metadata !9078, metadata !DIExpression()), !dbg !9079
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !9080
  ret void, !dbg !9081
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9086, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i8* %1, metadata !9087, metadata !DIExpression()), !dbg !9089
  call void @llvm.dbg.value(metadata i32 %2, metadata !9088, metadata !DIExpression()), !dbg !9089
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !9090
  ret void, !dbg !9091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !9092 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !9093
  ret void, !dbg !9094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !9095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9099, metadata !DIExpression()), !dbg !9100
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !9101
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !9102
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !9103
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !9104
  %4 = trunc i32 %0 to i8, !dbg !9105
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !9106
  store i8 %4, i8* %5, align 4, !dbg !9107
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !9108
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !9109
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !9110
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !9111
  store i8* %8, i8** %9, align 4, !dbg !9112
  ret void, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9116, metadata !DIExpression()), !dbg !9122
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !9123
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !9117, metadata !DIExpression()), !dbg !9122
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !9124
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !9118, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i8* null, metadata !9121, metadata !DIExpression()), !dbg !9122
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !9125
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !9126
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !9127
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !9128
  ret void, !dbg !9129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !9130 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !9134, metadata !DIExpression()), !dbg !9135
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !9136
  ret i8* %2, !dbg !9137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !9138 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9143, metadata !DIExpression()), !dbg !9144
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9145
  %3 = load i8, i8* %2, align 1, !dbg !9146
  %4 = and i8 %3, -5, !dbg !9146
  store i8 %4, i8* %2, align 1, !dbg !9146
  ret void, !dbg !9147
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !9148 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !9151
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !9152
  %3 = ptrtoint i8* %2 to i32, !dbg !9161
  %4 = add i32 %3, 2048, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %4, metadata !9156, metadata !DIExpression()) #24, !dbg !9163
  call void @llvm.dbg.value(metadata i32 %4, metadata !9164, metadata !DIExpression()) #24, !dbg !9167
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !9169, !srcloc !9170
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9171
  %6 = or i32 %5, 512, !dbg !9171
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9171
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef -2, i32 noundef 255) #25, !dbg !9172
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef -5, i32 noundef 0) #25, !dbg !9175
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef -12, i32 noundef 0) #25, !dbg !9176
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef -11, i32 noundef 0) #25, !dbg !9177
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef -10, i32 noundef 0) #25, !dbg !9178
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef -4, i32 noundef 0) #25, !dbg !9179
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9180
  %8 = or i32 %7, 458752, !dbg !9180
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9180
  tail call void @z_arm_fault_init() #25, !dbg !9181
  tail call void @z_arm_cpu_idle_init() #25, !dbg !9182
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9183
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !9186
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !9187
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !9188
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !9189
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !9189
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !9150, metadata !DIExpression()), !dbg !9190
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !9191
  call void @z_device_state_init() #25, !dbg !9192
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !9193
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !9194
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !9195
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !9196
  unreachable, !dbg !9196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1593, metadata !DIExpression()), !dbg !9197
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !9198
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !9198
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1594, metadata !DIExpression()), !dbg !9197
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1594, metadata !DIExpression()), !dbg !9197
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !9199
  br i1 %7, label %8, label %35, !dbg !9200

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1594, metadata !DIExpression()), !dbg !9197
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !9201
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !9201
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1604, metadata !DIExpression()), !dbg !9202
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !9203
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !9203
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %14, metadata !1608, metadata !DIExpression()), !dbg !9202
  %15 = icmp eq %struct.device* %11, null, !dbg !9205
  br i1 %15, label %32, label %16, !dbg !9207

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !9208
  br i1 %17, label %26, label %18, !dbg !9211

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !9212
  call void @llvm.dbg.value(metadata i32 %19, metadata !1608, metadata !DIExpression()), !dbg !9202
  %20 = icmp ult i32 %19, 255, !dbg !9214
  %21 = select i1 %20, i32 %19, i32 255, !dbg !9214
  call void @llvm.dbg.value(metadata i32 %21, metadata !1608, metadata !DIExpression()), !dbg !9202
  %22 = trunc i32 %21 to i8, !dbg !9215
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !9216
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !9216
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !9217
  store i8 %22, i8* %25, align 1, !dbg !9218
  br label %26, !dbg !9219

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !9220
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !9220
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !9221
  %30 = load i8, i8* %29, align 1, !dbg !9222
  %31 = or i8 %30, 1, !dbg !9222
  store i8 %31, i8* %29, align 1, !dbg !9222
  br label %32, !dbg !9223

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1594, metadata !DIExpression()), !dbg !9197
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !9199
  br i1 %34, label %8, label %35, !dbg !9200, !llvm.loop !9225

35:                                               ; preds = %32, %1
  ret void, !dbg !9227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9230, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 %1, metadata !9231, metadata !DIExpression()), !dbg !9232
  %3 = trunc i32 %1 to i8, !dbg !9233
  %4 = shl i8 %3, 4, !dbg !9233
  %5 = and i32 %0, 15, !dbg !9236
  %6 = add nsw i32 %5, -4, !dbg !9237
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !9238
  store volatile i8 %4, i8* %7, align 1, !dbg !9239
  ret void, !dbg !9240
}

; Function Attrs: optsize
declare !dbg !9241 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !9242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9245, metadata !DIExpression()), !dbg !9246
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9247
  store i8 1, i8* %2, align 1, !dbg !9248
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !9249
  store i8 1, i8* %3, align 4, !dbg !9250
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9251
  store i32 0, i32* %4, align 4, !dbg !9252
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !9253
  store i32 0, i32* %5, align 4, !dbg !9254
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !9255
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !9256
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9257
  ret void, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !9259 {
  tail call void @z_sched_init() #25, !dbg !9262
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !9263
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0)) #25, !dbg !9264
  call void @llvm.dbg.value(metadata i8* %1, metadata !9261, metadata !DIExpression()), !dbg !9265
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !9266
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !9267
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !9268
  ret i8* %1, !dbg !9269
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !9270 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9274, metadata !DIExpression()), !dbg !9275
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !9276
  unreachable, !dbg !9277
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !9278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9280, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i8* %1, metadata !9281, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata i8* %2, metadata !9282, metadata !DIExpression()), !dbg !9283
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !9284
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !9285
  tail call void @boot_banner() #25, !dbg !9286
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !9287
  tail call void @z_init_static_threads() #25, !dbg !9288
  tail call void @main() #25, !dbg !9289
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !9290
  %5 = and i8 %4, -2, !dbg !9290
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !9292 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i8* %1, metadata !9303, metadata !DIExpression()), !dbg !9304
  ret void, !dbg !9305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !9306 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !9308, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.value(metadata i8* %1, metadata !9309, metadata !DIExpression()), !dbg !9310
  ret void, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !9312 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !9313, !srcloc !9320
  call void @llvm.dbg.value(metadata i32 %1, metadata !9316, metadata !DIExpression()) #24, !dbg !9321
  %2 = icmp ne i32 %1, 0, !dbg !9322
  ret i1 %2, !dbg !9323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !9324 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !9326
  %3 = load i8, i8* %2, align 4, !dbg !9327
  %4 = or i8 %3, 1, !dbg !9327
  store i8 %4, i8* %2, align 4, !dbg !9327
  ret void, !dbg !9328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !9329 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9330
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !9331
  %3 = load i8, i8* %2, align 4, !dbg !9332
  %4 = and i8 %3, -2, !dbg !9332
  store i8 %4, i8* %2, align 4, !dbg !9332
  ret void, !dbg !9333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !9334 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9335
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !9336
  %3 = load i8, i8* %2, align 4, !dbg !9336
  %4 = and i8 %3, 1, !dbg !9337
  %5 = icmp ne i8 %4, 0, !dbg !9338
  ret i1 %5, !dbg !9339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9344, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i8* %1, metadata !9345, metadata !DIExpression()), !dbg !9346
  ret i32 -88, !dbg !9347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !9348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9352, metadata !DIExpression()), !dbg !9353
  ret i8* null, !dbg !9354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9355 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9359, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i8* %1, metadata !9360, metadata !DIExpression()), !dbg !9362
  call void @llvm.dbg.value(metadata i32 %2, metadata !9361, metadata !DIExpression()), !dbg !9362
  ret i32 -88, !dbg !9363
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1732, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8* %1, metadata !1733, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i32 %2, metadata !1734, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i32 0, metadata !1735, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8 undef, metadata !1737, metadata !DIExpression()), !dbg !9364
  %4 = icmp eq i8* %1, null, !dbg !9365
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !9367
  br i1 %6, label %46, label %7, !dbg !9367

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9368
  %9 = load i8, i8* %8, align 1, !dbg !9368
  call void @llvm.dbg.value(metadata i8 %9, metadata !1737, metadata !DIExpression()), !dbg !9364
  %10 = add i32 %2, -1, !dbg !9369
  call void @llvm.dbg.value(metadata i32 %10, metadata !1734, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i8 0, metadata !1738, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i8 %9, metadata !1737, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i32 0, metadata !1735, metadata !DIExpression()), !dbg !9364
  %11 = icmp eq i8 %9, 0, !dbg !9371
  br i1 %11, label %12, label %15, !dbg !9373

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !9374
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !9375
  store i8 0, i8* %14, align 1, !dbg !9376
  br label %46, !dbg !9377

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1738, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i8 %17, metadata !1737, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i32 %18, metadata !1735, metadata !DIExpression()), !dbg !9364
  %19 = zext i8 %17 to i32, !dbg !9378
  %20 = zext i8 %16 to i32, !dbg !9379
  %21 = shl nuw i32 1, %20, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %21, metadata !1736, metadata !DIExpression()), !dbg !9364
  %22 = and i32 %21, %19, !dbg !9381
  %23 = icmp eq i32 %22, 0, !dbg !9383
  br i1 %23, label %42, label %24, !dbg !9384

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !9385
  %26 = sub i32 %10, %18, !dbg !9386
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !9387
  %28 = load i8*, i8** %27, align 4, !dbg !9387
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !9388
  %30 = load i32, i32* %29, align 4, !dbg !9388
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !9389
  %32 = add i32 %31, %18, !dbg !9390
  call void @llvm.dbg.value(metadata i32 %32, metadata !1735, metadata !DIExpression()), !dbg !9364
  %33 = trunc i32 %21 to i8, !dbg !9391
  %34 = xor i8 %33, -1, !dbg !9391
  %35 = and i8 %17, %34, !dbg !9391
  call void @llvm.dbg.value(metadata i8 %35, metadata !1737, metadata !DIExpression()), !dbg !9364
  %36 = icmp eq i8 %35, 0, !dbg !9392
  br i1 %36, label %12, label %37, !dbg !9394

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !9395
  %39 = sub i32 %10, %32, !dbg !9397
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !9398
  %41 = add i32 %40, %32, !dbg !9399
  call void @llvm.dbg.value(metadata i32 %41, metadata !1735, metadata !DIExpression()), !dbg !9364
  br label %42, !dbg !9400

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !9364
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !9364
  call void @llvm.dbg.value(metadata i8 %44, metadata !1737, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata i32 %43, metadata !1735, metadata !DIExpression()), !dbg !9364
  %45 = add i8 %16, 1, !dbg !9401
  call void @llvm.dbg.value(metadata i8 %45, metadata !1738, metadata !DIExpression()), !dbg !9370
  br label %15, !dbg !9373

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !9364
  ret i8* %47, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9407, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i32 %1, metadata !9408, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i8* %2, metadata !9409, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i32 %3, metadata !9410, metadata !DIExpression()), !dbg !9412
  %5 = icmp ult i32 %1, %3, !dbg !9413
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !9413
  call void @llvm.dbg.value(metadata i32 %6, metadata !9411, metadata !DIExpression()), !dbg !9412
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !9414
  ret i32 %6, !dbg !9415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9420, metadata !DIExpression()), !dbg !9421
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !9422
  ret void, !dbg !9423
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9433, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !9434, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %2, metadata !9435, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !9436, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %4, metadata !9437, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %5, metadata !9438, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* %6, metadata !9439, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %7, metadata !9440, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i32 %8, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata i8* undef, metadata !9442, metadata !DIExpression()), !dbg !9444
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !9445
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !9446
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !9447
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !9448
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !9449
  call void @llvm.dbg.value(metadata i8* %13, metadata !9443, metadata !DIExpression()), !dbg !9444
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !9450
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !9451
  store i8* null, i8** %14, align 4, !dbg !9452
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9453
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !9453
  br i1 %16, label %20, label %17, !dbg !9455

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !9456
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !9456
  br label %20, !dbg !9457

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !9444
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !9458
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !9460
  ret i8* %13, !dbg !9461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !9462 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !9467, metadata !DIExpression()), !dbg !9468
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !9469
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !9470
  ret void, !dbg !9471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !9477, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %1, metadata !9478, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %2, metadata !9479, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.value(metadata i32 %3, metadata !9480, metadata !DIExpression()), !dbg !9481
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !9482
  store %union.anon* null, %union.anon** %5, align 8, !dbg !9483
  %6 = trunc i32 %3 to i8, !dbg !9484
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !9485
  store i8 %6, i8* %7, align 4, !dbg !9486
  %8 = trunc i32 %2 to i8, !dbg !9487
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !9488
  store i8 %8, i8* %9, align 1, !dbg !9489
  %10 = trunc i32 %1 to i8, !dbg !9490
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !9491
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !9491
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !9491
  store i8 %10, i8* %13, align 2, !dbg !9492
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !9493
  store i8 0, i8* %14, align 1, !dbg !9494
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !9495
  ret void, !dbg !9496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !9497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9501, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !9502, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %2, metadata !9503, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 0, metadata !9508, metadata !DIExpression()), !dbg !9509
  %4 = add i32 %2, 7, !dbg !9510
  %5 = and i32 %4, -8, !dbg !9510
  %6 = add i32 %5, 64, !dbg !9510
  call void @llvm.dbg.value(metadata i32 %6, metadata !9504, metadata !DIExpression()), !dbg !9509
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.78(%struct.z_thread_stack_element* noundef %1) #26, !dbg !9512
  call void @llvm.dbg.value(metadata i8* %7, metadata !9507, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %5, metadata !9505, metadata !DIExpression()), !dbg !9509
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !9513
  call void @llvm.dbg.value(metadata i8* %8, metadata !9506, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 0, metadata !9508, metadata !DIExpression()), !dbg !9509
  %9 = ptrtoint i8* %7 to i32, !dbg !9514
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9515
  store i32 %9, i32* %10, align 4, !dbg !9516
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !9517
  store i32 %5, i32* %11, align 4, !dbg !9518
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !9519
  store i32 0, i32* %12, align 4, !dbg !9520
  call void @llvm.dbg.value(metadata i8* %8, metadata !9506, metadata !DIExpression()), !dbg !9509
  ret i8* %8, !dbg !9521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.78(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !9522 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !9526, metadata !DIExpression()), !dbg !9527
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !9528
  ret i8* %2, !dbg !9529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9530 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !9535, metadata !DIExpression()), !dbg !9536
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !9537
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !9538
  ret void, !dbg !9539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9540 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !9542, metadata !DIExpression()), !dbg !9543
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !9544
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !9545
  ret void, !dbg !9546
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9547 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9551, metadata !DIExpression()), !dbg !9552
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9553
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !9554
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9555
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !9556
  ret void, !dbg !9557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !9558 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9563, metadata !DIExpression()), !dbg !9564
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9565
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !9566
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9567
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !9568
  ret void, !dbg !9569
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !9570 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !9587, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9578, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !9579, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i32 %2, metadata !9580, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !9581, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i8* %4, metadata !9582, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i8* %5, metadata !9583, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i8* %6, metadata !9584, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i32 %7, metadata !9585, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.value(metadata i32 %8, metadata !9586, metadata !DIExpression()), !dbg !9588
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !9589
  %13 = icmp eq i64 %11, -1, !dbg !9590
  br i1 %13, label %15, label %14, !dbg !9592

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !9593
  br label %15, !dbg !9595

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !9596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9597 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !9602, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9601, metadata !DIExpression()), !dbg !9603
  %4 = icmp eq i64 %3, 0, !dbg !9604
  br i1 %4, label %5, label %6, !dbg !9606

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !9607
  br label %7, !dbg !9609

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !9610
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !9612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !9613 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9617, metadata !DIExpression()), !dbg !9618
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9619, !srcloc !9621
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !9622
  ret void, !dbg !9623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9624 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9627, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9626, metadata !DIExpression()), !dbg !9628
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !9629
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !9630
  ret void, !dbg !9631
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !9632 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !9634, metadata !DIExpression()), !dbg !9654
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !9655

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !9656
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !9652, metadata !DIExpression()), !dbg !9657
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !9658

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !9634, metadata !DIExpression()), !dbg !9654
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !9659
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !9659
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !9662
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !9662
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !9663
  %9 = load i32, i32* %8, align 4, !dbg !9663
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !9664
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !9664
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !9665
  %13 = load i8*, i8** %12, align 4, !dbg !9665
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !9666
  %15 = load i8*, i8** %14, align 4, !dbg !9666
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !9667
  %17 = load i8*, i8** %16, align 4, !dbg !9667
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !9668
  %19 = load i32, i32* %18, align 4, !dbg !9668
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !9669
  %21 = load i32, i32* %20, align 4, !dbg !9669
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !9670
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !9671
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !9672
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !9673
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !9673
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !9674
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !9634, metadata !DIExpression()), !dbg !9654
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !9675
  br i1 %27, label %2, label %1, !dbg !9655, !llvm.loop !9677

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !9656
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !9652, metadata !DIExpression()), !dbg !9657
  br label %29, !dbg !9658

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !9679
  ret void, !dbg !9680

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !9652, metadata !DIExpression()), !dbg !9657
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !9681
  %33 = load i32, i32* %32, align 4, !dbg !9681
  %34 = icmp eq i32 %33, -1, !dbg !9685
  br i1 %34, label %43, label %35, !dbg !9686

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !9687
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !9687
  %38 = icmp sgt i32 %33, 0, !dbg !9689
  %39 = select i1 %38, i32 %33, i32 0, !dbg !9689
  %40 = zext i32 %39 to i64, !dbg !9689
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !9689
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !9690
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !9690
  br label %43, !dbg !9691

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !9692
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !9652, metadata !DIExpression()), !dbg !9657
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !9693
  br i1 %45, label %30, label %29, !dbg !9658, !llvm.loop !9695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !9697 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !9702, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.value(metadata i64 %0, metadata !9704, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 1000, metadata !9709, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i32 10000, metadata !9710, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8 1, metadata !9711, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8 0, metadata !9712, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8 1, metadata !9713, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8 0, metadata !9714, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8 1, metadata !9715, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i8 0, metadata !9716, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i64 0, metadata !9717, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.value(metadata i64 0, metadata !9717, metadata !DIExpression()), !dbg !9721
  %2 = mul i64 %0, 10, !dbg !9723
  ret i64 %2, !dbg !9729
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !9730 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !9732, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i8* %1, metadata !9733, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i8* %2, metadata !9734, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i8* %3, metadata !9735, metadata !DIExpression()), !dbg !9736
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9737
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !9738
  %7 = load i8, i8* %6, align 4, !dbg !9739
  %8 = or i8 %7, 4, !dbg !9739
  store i8 %8, i8* %6, align 4, !dbg !9739
  tail call void @z_thread_essential_clear() #26, !dbg !9740
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !9741
  unreachable, !dbg !9741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !9742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9746, metadata !DIExpression()), !dbg !9747
  ret i32 -134, !dbg !9748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9749 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9753, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %1, metadata !9754, metadata !DIExpression()), !dbg !9755
  ret i32 -134, !dbg !9756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !9757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9764, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9765, metadata !DIExpression()), !dbg !9766
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !9767
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !9769
  %6 = select i1 %5, i32 -22, i32 0, !dbg !9766
  ret i32 %6, !dbg !9770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !9771 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !9777
  %3 = select i1 %2, i32 -22, i32 0, !dbg !9776
  ret i32 %3, !dbg !9779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !9780 {
  tail call void @sys_clock_idle_exit() #25, !dbg !9782
  ret void, !dbg !9783
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !9784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9786, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i8* %1, metadata !9787, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.value(metadata i8* %2, metadata !9788, metadata !DIExpression()), !dbg !9789
  br label %4, !dbg !9790

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9791, !srcloc !9798
  call void @llvm.dbg.value(metadata i32 undef, metadata !9794, metadata !DIExpression()) #24, !dbg !9799
  call void @llvm.dbg.value(metadata i32 undef, metadata !9795, metadata !DIExpression()) #24, !dbg !9799
  tail call fastcc void @k_cpu_idle() #26, !dbg !9800
  br label %4, !dbg !9790, !llvm.loop !9801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !9803 {
  tail call void @arch_cpu_idle() #25, !dbg !9804
  ret void, !dbg !9805
}

; Function Attrs: optsize
declare !dbg !9806 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9807 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !9811, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.value(metadata i1 %1, metadata !9812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9817
  %3 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !9818
  br i1 %3, label %13, label %4, !dbg !9819

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef nonnull %0) #26, !dbg !9820
  %6 = icmp eq i8 %5, 0, !dbg !9821
  br i1 %6, label %13, label %7, !dbg !9822

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !9814, metadata !DIExpression()), !dbg !9823
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 1, !dbg !9824
  %9 = bitcast %struct.z_heap_bucket* %8 to i8**, !dbg !9824
  %10 = load i8*, i8** %9, align 4, !dbg !9824
  call void @llvm.dbg.value(metadata i8* %10, metadata !9813, metadata !DIExpression()), !dbg !9817
  br i1 %1, label %11, label %15, !dbg !9825

11:                                               ; preds = %7
  %12 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !9826
  tail call void @k_free(i8* noundef nonnull %12) #25, !dbg !9827
  br label %15, !dbg !9830

13:                                               ; preds = %4, %2
  %14 = bitcast %struct.z_heap_bucket* %0 to i8*, !dbg !9831
  call void @llvm.dbg.value(metadata i8* %14, metadata !9813, metadata !DIExpression()), !dbg !9817
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !9833
  call void @llvm.dbg.value(metadata i8* %16, metadata !9813, metadata !DIExpression()), !dbg !9817
  ret i8* %16, !dbg !9834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9835 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !9839, metadata !DIExpression()), !dbg !9840
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !9841
  %3 = load i32, i32* %2, align 4, !dbg !9841
  %4 = trunc i32 %3 to i8, !dbg !9842
  %5 = and i8 %4, 3, !dbg !9842
  ret i8 %5, !dbg !9843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #4 !dbg !9844 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9865, metadata !DIExpression()), !dbg !9866
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !9867
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #26, !dbg !9868
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !9869
  tail call fastcc void @z_waitq_init.83(%union.anon* noundef nonnull %3) #26, !dbg !9870
  ret void, !dbg !9871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9872 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !9877, metadata !DIExpression()), !dbg !9878
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !9879
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %2, align 4, !dbg !9880
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !9881
  store %struct.z_heap_bucket* null, %struct.z_heap_bucket** %3, align 4, !dbg !9882
  ret void, !dbg !9883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.83(%union.anon* noundef %0) unnamed_addr #4 !dbg !9884 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !9889, metadata !DIExpression()), !dbg !9890
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !9891
  tail call fastcc void @sys_dlist_init.84(%struct._dnode* noundef %2) #26, !dbg !9892
  ret void, !dbg !9893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.84(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !9894 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9899, metadata !DIExpression()), !dbg !9900
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9901
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !9902
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9903
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !9904
  ret void, !dbg !9905
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !9906 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9908, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9995, metadata !DIExpression()) #24, !dbg !10002
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10004, !srcloc !10010
  call void @llvm.dbg.value(metadata i32 undef, metadata !10007, metadata !DIExpression()) #24, !dbg !10011
  call void @llvm.dbg.value(metadata i32 undef, metadata !10008, metadata !DIExpression()) #24, !dbg !10011
  call void @llvm.dbg.value(metadata i32 undef, metadata !10001, metadata !DIExpression()) #24, !dbg !10002
  call void @llvm.dbg.value(metadata i32 undef, metadata !9909, metadata !DIExpression()), !dbg !9994
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !10012
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %3) #25, !dbg !10013
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !9914, metadata !DIExpression()), !dbg !9994
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !10014
  br i1 %5, label %7, label %6, !dbg !10016

6:                                                ; preds = %1
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %4, i8* noundef null) #26, !dbg !10017
  br label %7, !dbg !10019

7:                                                ; preds = %6, %1
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !10004
  call void @llvm.dbg.value(metadata i32 %8, metadata !10007, metadata !DIExpression()) #24, !dbg !10011
  call void @llvm.dbg.value(metadata i32 %8, metadata !10001, metadata !DIExpression()) #24, !dbg !10002
  call void @llvm.dbg.value(metadata i32 %8, metadata !9909, metadata !DIExpression()), !dbg !9994
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !10020
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !10021
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %10) #25, !dbg !10021
  ret void, !dbg !10022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10027, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata i8* %1, metadata !10028, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10030, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %1, metadata !10037, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10040, metadata !DIExpression()), !dbg !10046
  call void @llvm.dbg.value(metadata i32 0, metadata !10045, metadata !DIExpression()), !dbg !10046
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !10048
  store i32 0, i32* %3, align 4, !dbg !10049
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !10050
  store i8* %1, i8** %4, align 4, !dbg !10051
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10058, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i8* %1, metadata !10059, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i8* %2, metadata !10060, metadata !DIExpression()), !dbg !10061
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !10062
  ret void, !dbg !10063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !10064 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10068, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i8* %1, metadata !10069, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i8* %2, metadata !10070, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i1 %3, metadata !10071, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10078
  call void @llvm.dbg.value(metadata i1 %4, metadata !10072, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10078
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !10079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9995, metadata !DIExpression()) #24, !dbg !10080
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10082, !srcloc !10010
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !10082
  call void @llvm.dbg.value(metadata i32 %8, metadata !10007, metadata !DIExpression()) #24, !dbg !10084
  call void @llvm.dbg.value(metadata i32 undef, metadata !10008, metadata !DIExpression()) #24, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %8, metadata !10001, metadata !DIExpression()) #24, !dbg !10080
  call void @llvm.dbg.value(metadata i32 %8, metadata !10074, metadata !DIExpression()), !dbg !10078
  br i1 %4, label %9, label %13, !dbg !10085

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10086
  %11 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %10) #26, !dbg !10089
  %12 = bitcast %struct.z_heap_bucket* %11 to i8*, !dbg !10089
  call void @llvm.dbg.value(metadata i8* %12, metadata !10069, metadata !DIExpression()), !dbg !10078
  br label %13, !dbg !10090

13:                                               ; preds = %9, %5
  %14 = phi i8* [ %12, %9 ], [ %1, %5 ]
  call void @llvm.dbg.value(metadata i8* %14, metadata !10069, metadata !DIExpression()), !dbg !10078
  %15 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !10091
  %16 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %15) #25, !dbg !10092
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !10073, metadata !DIExpression()), !dbg !10078
  %17 = icmp eq %struct.k_thread* %16, null, !dbg !10093
  br i1 %17, label %20, label %18, !dbg !10095

18:                                               ; preds = %13
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %16, i8* noundef %2) #26, !dbg !10096
  %19 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !10098
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %19) #25, !dbg !10098
  br label %36, !dbg !10099

20:                                               ; preds = %13
  br i1 %3, label %21, label %29, !dbg !10100

21:                                               ; preds = %20
  %22 = tail call fastcc i8* @z_thread_malloc() #26, !dbg !10101
  call void @llvm.dbg.value(metadata i8* %22, metadata !10075, metadata !DIExpression()), !dbg !10102
  %23 = icmp eq i8* %22, null, !dbg !10103
  br i1 %23, label %24, label %25, !dbg !10105

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %8, metadata !10106, metadata !DIExpression()) #24, !dbg !10112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10111, metadata !DIExpression()) #24, !dbg !10112
  call void @llvm.dbg.value(metadata i32 %8, metadata !10115, metadata !DIExpression()) #24, !dbg !10118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !10120, !srcloc !10121
  call void @llvm.dbg.value(metadata i8* %22, metadata !10070, metadata !DIExpression()), !dbg !10078
  br label %36

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i8* %22, metadata !10075, metadata !DIExpression()), !dbg !10102
  %26 = getelementptr inbounds i8, i8* %22, i32 4, !dbg !10122
  %27 = bitcast i8* %26 to i8**, !dbg !10122
  store i8* %2, i8** %27, align 4, !dbg !10123
  %28 = bitcast i8* %22 to %struct.z_heap_bucket*, !dbg !10124
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef nonnull %28, i8 noundef zeroext 1) #26, !dbg !10125
  call void @llvm.dbg.value(metadata i8* %22, metadata !10070, metadata !DIExpression()), !dbg !10078
  br label %31

29:                                               ; preds = %20
  %30 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !10126
  tail call fastcc void @sys_sfnode_init(%struct.z_heap_bucket* noundef %30, i8 noundef zeroext 0) #26, !dbg !10128
  br label %31

31:                                               ; preds = %25, %29
  %32 = phi %struct.z_heap_bucket* [ %28, %25 ], [ %30, %29 ], !dbg !10129
  call void @llvm.dbg.value(metadata i8* undef, metadata !10070, metadata !DIExpression()), !dbg !10078
  %33 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10130
  %34 = bitcast i8* %14 to %struct.z_heap_bucket*, !dbg !10131
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %33, %struct.z_heap_bucket* noundef %34, %struct.z_heap_bucket* noundef %32) #26, !dbg !10132
  %35 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !10133
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %6, [1 x i32] %35) #25, !dbg !10133
  br label %36, !dbg !10134

36:                                               ; preds = %24, %31, %18
  %37 = phi i32 [ 0, %18 ], [ 0, %31 ], [ -12, %24 ], !dbg !10078
  ret i32 %37, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10140, metadata !DIExpression()), !dbg !10141
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !10142
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !10142
  ret %struct.z_heap_bucket* %3, !dbg !10143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !10144 {
  call void @llvm.dbg.value(metadata i32 8, metadata !10147, metadata !DIExpression()), !dbg !10148
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #25, !dbg !10149
  ret i8* %1, !dbg !10150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sfnode_init(%struct.z_heap_bucket* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #4 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !10155, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.value(metadata i8 %1, metadata !10156, metadata !DIExpression()), !dbg !10157
  %3 = zext i8 %1 to i32, !dbg !10158
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !10159
  store i32 %3, i32* %4, align 4, !dbg !10160
  ret void, !dbg !10161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !10162 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10166, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10167, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !10168, metadata !DIExpression()), !dbg !10169
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !10170
  br i1 %4, label %5, label %6, !dbg !10172

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #26, !dbg !10173
  br label %11, !dbg !10173

6:                                                ; preds = %3
  %7 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef nonnull %1) #26, !dbg !10175
  %8 = icmp eq %struct.z_heap_bucket* %7, null, !dbg !10175
  br i1 %8, label %9, label %10, !dbg !10170

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %2) #26, !dbg !10177
  br label %11, !dbg !10177

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef nonnull %7) #26, !dbg !10179
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %2) #26, !dbg !10179
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !10172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !10181 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10186, metadata !DIExpression()), !dbg !10187
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10188
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %3) #26, !dbg !10188
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #26, !dbg !10188
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !10189
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !10189
  br i1 %5, label %6, label %8, !dbg !10188

6:                                                ; preds = %2
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10191
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #26, !dbg !10191
  br label %8, !dbg !10191

8:                                                ; preds = %6, %2
  ret void, !dbg !10188
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10193 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !10197, metadata !DIExpression()), !dbg !10198
  %2 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !10199
  %3 = load i32, i32* %2, align 4, !dbg !10199
  %4 = and i32 %3, -4, !dbg !10200
  %5 = inttoptr i32 %4 to %struct.z_heap_bucket*, !dbg !10201
  ret %struct.z_heap_bucket* %5, !dbg !10202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !10203 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10205, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10206, metadata !DIExpression()), !dbg !10207
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef null) #26, !dbg !10208
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !10209
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !10209
  br i1 %4, label %5, label %6, !dbg !10208

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #26, !dbg !10211
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #26, !dbg !10211
  br label %7, !dbg !10211

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %3, %struct.z_heap_bucket* noundef %1) #26, !dbg !10213
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %1) #26, !dbg !10213
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !10208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #8 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !10219, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10220, metadata !DIExpression()), !dbg !10222
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct.z_heap_bucket* noundef %0) #26, !dbg !10223
  call void @llvm.dbg.value(metadata i8 %3, metadata !10221, metadata !DIExpression()), !dbg !10222
  %4 = zext i8 %3 to i32, !dbg !10224
  %5 = ptrtoint %struct.z_heap_bucket* %1 to i32, !dbg !10225
  %6 = or i32 %4, %5, !dbg !10226
  %7 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !10227
  store i32 %6, i32* %7, align 4, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10232, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10233, metadata !DIExpression()), !dbg !10234
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !10235
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !10236
  ret void, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #4 !dbg !10238 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10240, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10241, metadata !DIExpression()), !dbg !10242
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !10243
  store %struct.z_heap_bucket* %1, %struct.z_heap_bucket** %3, align 4, !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10248, metadata !DIExpression()), !dbg !10249
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !10250
  %3 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %2, align 4, !dbg !10250
  ret %struct.z_heap_bucket* %3, !dbg !10251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10256, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i8* %1, metadata !10257, metadata !DIExpression()), !dbg !10258
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #26, !dbg !10259
  ret void, !dbg !10260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10261 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10263, metadata !DIExpression()), !dbg !10265
  call void @llvm.dbg.value(metadata i8* %1, metadata !10264, metadata !DIExpression()), !dbg !10265
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !10266
  ret void, !dbg !10267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10268 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10272, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i8* %1, metadata !10273, metadata !DIExpression()), !dbg !10275
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #26, !dbg !10276
  call void @llvm.dbg.value(metadata i32 %3, metadata !10274, metadata !DIExpression()), !dbg !10275
  ret i32 %3, !dbg !10277
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10278 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10280, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i8* %1, metadata !10281, metadata !DIExpression()), !dbg !10283
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #26, !dbg !10284
  call void @llvm.dbg.value(metadata i32 %3, metadata !10282, metadata !DIExpression()), !dbg !10283
  ret i32 %3, !dbg !10285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10286 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10290, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i8* %1, metadata !10291, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i8* %2, metadata !10292, metadata !DIExpression()), !dbg !10295
  %4 = icmp eq i8* %1, null, !dbg !10296
  %5 = icmp eq i8* %2, null, !dbg !10296
  %6 = or i1 %4, %5, !dbg !10296
  br i1 %6, label %29, label %7, !dbg !10296

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !10298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9995, metadata !DIExpression()) #24, !dbg !10299
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10301, !srcloc !10010
  %10 = extractvalue { i32, i32 } %9, 0, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %10, metadata !10007, metadata !DIExpression()) #24, !dbg !10303
  call void @llvm.dbg.value(metadata i32 undef, metadata !10008, metadata !DIExpression()) #24, !dbg !10303
  call void @llvm.dbg.value(metadata i32 %10, metadata !10001, metadata !DIExpression()) #24, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %10, metadata !10293, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10294, metadata !DIExpression()), !dbg !10295
  %11 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !10304
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #25, !dbg !10307
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i8* %1, metadata !10291, metadata !DIExpression()), !dbg !10295
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !10308
  br i1 %13, label %24, label %14, !dbg !10309

14:                                               ; preds = %7, %14
  %15 = phi %struct.k_thread* [ %19, %14 ], [ %12, %7 ]
  %16 = phi i8* [ %18, %14 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i8* %16, metadata !10291, metadata !DIExpression()), !dbg !10295
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %15, i8* noundef nonnull %16) #26, !dbg !10310
  %17 = bitcast i8* %16 to i8**, !dbg !10312
  %18 = load i8*, i8** %17, align 4, !dbg !10313
  call void @llvm.dbg.value(metadata i8* %18, metadata !10291, metadata !DIExpression()), !dbg !10295
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef nonnull %11) #25, !dbg !10314
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !10294, metadata !DIExpression()), !dbg !10295
  %20 = icmp ne i8* %18, null, !dbg !10315
  %21 = icmp ne %struct.k_thread* %19, null, !dbg !10308
  %22 = select i1 %20, i1 %21, i1 false, !dbg !10308
  br i1 %22, label %14, label %23, !dbg !10309, !llvm.loop !10316

23:                                               ; preds = %14
  br i1 %20, label %24, label %27, !dbg !10318

24:                                               ; preds = %7, %23
  %25 = phi i8* [ %18, %23 ], [ %1, %7 ]
  %26 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10319
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %26, i8* noundef nonnull %25, i8* noundef %2) #26, !dbg !10322
  br label %27, !dbg !10323

27:                                               ; preds = %23, %24
  %28 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10324
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %8, [1 x i32] %28) #25, !dbg !10324
  br label %29

29:                                               ; preds = %3, %27
  %30 = phi i32 [ 0, %27 ], [ -22, %3 ], !dbg !10295
  ret i32 %30, !dbg !10325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #8 !dbg !10326 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10330, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i8* %1, metadata !10331, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i8* %2, metadata !10332, metadata !DIExpression()), !dbg !10333
  %4 = icmp ne i8* %1, null, !dbg !10334
  %5 = icmp ne i8* %2, null, !dbg !10334
  %6 = and i1 %4, %5, !dbg !10334
  br i1 %6, label %7, label %15, !dbg !10334

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !10336
  %9 = icmp eq %struct.z_heap_bucket* %8, null, !dbg !10336
  %10 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !10339
  br i1 %9, label %11, label %12, !dbg !10340

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %10) #26, !dbg !10341
  br label %13, !dbg !10341

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %10) #26, !dbg !10343
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct.z_heap_bucket*, !dbg !10340
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %14) #26, !dbg !10340
  br label %15, !dbg !10340

15:                                               ; preds = %13, %3
  ret void, !dbg !10345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10363, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !10364, metadata !DIExpression()), !dbg !10366
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %1) #26, !dbg !10367
  br i1 %3, label %13, label %4, !dbg !10369

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !10370
  %6 = load i8*, i8** %5, align 4, !dbg !10370
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !10371
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !10371
  %9 = load i8*, i8** %8, align 4, !dbg !10371
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #26, !dbg !10372
  call void @llvm.dbg.value(metadata i32 %10, metadata !10365, metadata !DIExpression()), !dbg !10366
  %11 = icmp eq i32 %10, 0, !dbg !10373
  br i1 %11, label %12, label %13, !dbg !10375

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #26, !dbg !10376
  br label %13, !dbg !10377

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !10366
  ret i32 %14, !dbg !10378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10379 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10383, metadata !DIExpression()), !dbg !10384
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10385
  %3 = icmp eq %struct._snode* %2, null, !dbg !10385
  ret i1 %3, !dbg !10385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10390, metadata !DIExpression()), !dbg !10391
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10392
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !10393
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10394
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !10395
  ret void, !dbg !10396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10397 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10401, metadata !DIExpression()), !dbg !10402
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10403
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10403
  ret %struct._snode* %3, !dbg !10404
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10405 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10414, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10413, metadata !DIExpression()), !dbg !10421
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !10422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9995, metadata !DIExpression()) #24, !dbg !10423
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10425, !srcloc !10010
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %5, metadata !10007, metadata !DIExpression()) #24, !dbg !10427
  call void @llvm.dbg.value(metadata i32 undef, metadata !10008, metadata !DIExpression()) #24, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %5, metadata !10001, metadata !DIExpression()) #24, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %5, metadata !10415, metadata !DIExpression()), !dbg !10421
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10428
  %7 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %6) #26, !dbg !10428
  br i1 %7, label %11, label %8, !dbg !10429, !prof !10430

8:                                                ; preds = %2
  %9 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* noundef %6) #26, !dbg !10431
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !10417, metadata !DIExpression()), !dbg !10432
  %10 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %9, i1 noundef zeroext true) #26, !dbg !10433
  call void @llvm.dbg.value(metadata i8* %10, metadata !10416, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.value(metadata i32 %5, metadata !10106, metadata !DIExpression()) #24, !dbg !10434
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10111, metadata !DIExpression()) #24, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %5, metadata !10115, metadata !DIExpression()) #24, !dbg !10436
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !10438, !srcloc !10121
  br label %24

11:                                               ; preds = %2
  %12 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %12, metadata !10414, metadata !DIExpression()), !dbg !10421
  %13 = icmp eq i64 %12, 0, !dbg !10439
  br i1 %13, label %14, label %15, !dbg !10441

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %5, metadata !10106, metadata !DIExpression()) #24, !dbg !10442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10111, metadata !DIExpression()) #24, !dbg !10442
  call void @llvm.dbg.value(metadata i32 %5, metadata !10115, metadata !DIExpression()) #24, !dbg !10445
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !10447, !srcloc !10121
  br label %24, !dbg !10448

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !10449
  %17 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !10450
  %18 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %17, %union.anon* noundef nonnull %16, [1 x i64] %1) #25, !dbg !10450
  call void @llvm.dbg.value(metadata i32 %18, metadata !10420, metadata !DIExpression()), !dbg !10421
  %19 = icmp eq i32 %18, 0, !dbg !10451
  br i1 %19, label %20, label %24, !dbg !10452

20:                                               ; preds = %15
  %21 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10453
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %21, i32 0, i32 0, i32 6, !dbg !10454
  %23 = load i8*, i8** %22, align 4, !dbg !10454
  br label %24, !dbg !10452

24:                                               ; preds = %20, %15, %14, %8
  %25 = phi i8* [ %10, %8 ], [ null, %14 ], [ %23, %20 ], [ null, %15 ], !dbg !10421
  ret i8* %25, !dbg !10455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10460, metadata !DIExpression()), !dbg !10461
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10462
  %3 = icmp eq %struct.z_heap_bucket* %2, null, !dbg !10462
  ret i1 %3, !dbg !10462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #8 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10465, metadata !DIExpression()), !dbg !10467
  %2 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10468
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !10466, metadata !DIExpression()), !dbg !10467
  %3 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #26, !dbg !10468
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %3) #26, !dbg !10468
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !10469
  %5 = icmp eq %struct.z_heap_bucket* %4, %2, !dbg !10469
  br i1 %5, label %6, label %8, !dbg !10468

6:                                                ; preds = %1
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10471
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %7) #26, !dbg !10471
  br label %8, !dbg !10471

8:                                                ; preds = %6, %1
  ret %struct.z_heap_bucket* %2, !dbg !10468
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !10473 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10477, metadata !DIExpression()), !dbg !10480
  call void @llvm.dbg.value(metadata i8* %1, metadata !10478, metadata !DIExpression()), !dbg !10480
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10481
  %4 = bitcast i8* %1 to %struct.z_heap_bucket*, !dbg !10482
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct.z_heap_bucket* noundef %4) #26, !dbg !10483
  call void @llvm.dbg.value(metadata i1 %5, metadata !10479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10480
  ret i1 %5, !dbg !10484
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1) unnamed_addr #14 !dbg !10485 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10489, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10490, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !10491, metadata !DIExpression()), !dbg !10493
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10494
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !10491, metadata !DIExpression()), !dbg !10493
  %4 = icmp eq %struct.z_heap_bucket* %3, null, !dbg !10496
  br i1 %4, label %15, label %5, !dbg !10494

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %3, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* null, metadata !10491, metadata !DIExpression()), !dbg !10493
  %6 = icmp eq %struct.z_heap_bucket* %3, %1, !dbg !10498
  br i1 %6, label %9, label %11, !dbg !10501

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !10491, metadata !DIExpression()), !dbg !10493
  %8 = icmp eq %struct.z_heap_bucket* %13, %1, !dbg !10498
  br i1 %8, label %9, label %11, !dbg !10501, !llvm.loop !10502

9:                                                ; preds = %7, %5
  %10 = phi %struct.z_heap_bucket* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10, %struct.z_heap_bucket* noundef %1) #26, !dbg !10503
  br label %15, !dbg !10503

11:                                               ; preds = %5, %7
  %12 = phi %struct.z_heap_bucket* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !10491, metadata !DIExpression()), !dbg !10493
  %13 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %12) #26, !dbg !10496
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !10492, metadata !DIExpression()), !dbg !10493
  %14 = icmp eq %struct.z_heap_bucket* %13, null, !dbg !10496
  br i1 %14, label %15, label %7, !dbg !10494, !llvm.loop !10502

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct.z_heap_bucket* noundef %1, %struct.z_heap_bucket* noundef %2) unnamed_addr #8 !dbg !10506 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !10508, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !10509, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %2, metadata !10510, metadata !DIExpression()), !dbg !10511
  %4 = icmp eq %struct.z_heap_bucket* %1, null, !dbg !10512
  %5 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %2) #26, !dbg !10514
  br i1 %4, label %6, label %11, !dbg !10515

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %5) #26, !dbg !10516
  %7 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !10518
  %8 = icmp eq %struct.z_heap_bucket* %7, %2, !dbg !10518
  br i1 %8, label %9, label %15, !dbg !10516

9:                                                ; preds = %6
  %10 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !10520
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef %10) #26, !dbg !10520
  br label %15, !dbg !10520

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef nonnull %1, %struct.z_heap_bucket* noundef %5) #26, !dbg !10522
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !10524
  %13 = icmp eq %struct.z_heap_bucket* %12, %2, !dbg !10524
  br i1 %13, label %14, label %15, !dbg !10522

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct.z_heap_bucket* noundef nonnull %1) #26, !dbg !10526
  br label %15, !dbg !10526

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct.z_heap_bucket* noundef %2, %struct.z_heap_bucket* noundef null) #26, !dbg !10515
  ret void, !dbg !10515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef readonly %0) unnamed_addr #5 !dbg !10528 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !10530, metadata !DIExpression()), !dbg !10531
  %2 = icmp eq %struct.z_heap_bucket* %0, null, !dbg !10532
  br i1 %2, label %5, label %3, !dbg !10532

3:                                                ; preds = %1
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* noundef nonnull %0) #26, !dbg !10532
  br label %5, !dbg !10532

5:                                                ; preds = %1, %3
  %6 = phi %struct.z_heap_bucket* [ %4, %3 ], [ null, %1 ], !dbg !10532
  ret %struct.z_heap_bucket* %6, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.z_heap_bucket* @sys_sflist_peek_next_no_check(%struct.z_heap_bucket* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !10535, metadata !DIExpression()), !dbg !10536
  %2 = tail call fastcc %struct.z_heap_bucket* @z_sfnode_next_peek(%struct.z_heap_bucket* noundef %0) #26, !dbg !10537
  ret %struct.z_heap_bucket* %2, !dbg !10537
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !10538 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10540, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata i8* %1, metadata !10541, metadata !DIExpression()), !dbg !10543
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10544
  %4 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %3) #26, !dbg !10544
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !10542, metadata !DIExpression()), !dbg !10543
  %5 = icmp eq %struct.z_heap_bucket* %4, null, !dbg !10546
  br i1 %5, label %14, label %6, !dbg !10544

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct.z_heap_bucket*
  br label %8, !dbg !10544

8:                                                ; preds = %6, %11
  %9 = phi %struct.z_heap_bucket* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !10542, metadata !DIExpression()), !dbg !10543
  %10 = icmp eq %struct.z_heap_bucket* %9, %7, !dbg !10548
  br i1 %10, label %15, label %11, !dbg !10551

11:                                               ; preds = %8
  %12 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_next(%struct.z_heap_bucket* noundef nonnull %9) #26, !dbg !10546
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %12, metadata !10542, metadata !DIExpression()), !dbg !10543
  %13 = icmp eq %struct.z_heap_bucket* %12, null, !dbg !10546
  br i1 %13, label %14, label %8, !dbg !10544, !llvm.loop !10552

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #26, !dbg !10554
  br label %15, !dbg !10555

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !10556
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !10557 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10561, metadata !DIExpression()), !dbg !10563
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10564
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_head(%struct._sflist* noundef %2) #26, !dbg !10565
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #26, !dbg !10566
  call void @llvm.dbg.value(metadata i8* %4, metadata !10562, metadata !DIExpression()), !dbg !10563
  ret i8* %4, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !10570, metadata !DIExpression()), !dbg !10572
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !10573
  %3 = tail call fastcc %struct.z_heap_bucket* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #26, !dbg !10574
  %4 = tail call i8* @z_queue_node_peek(%struct.z_heap_bucket* noundef %3, i1 noundef zeroext false) #26, !dbg !10575
  call void @llvm.dbg.value(metadata i8* %4, metadata !10571, metadata !DIExpression()), !dbg !10572
  ret i8* %4, !dbg !10576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !10577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10581, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !10582, metadata !DIExpression()), !dbg !10585
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !10586
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !10586
  %5 = load i8, i8* %4, align 2, !dbg !10586
  call void @llvm.dbg.value(metadata i8 %5, metadata !10583, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !10585
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !10587
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !10587
  %8 = load i8, i8* %7, align 2, !dbg !10587
  call void @llvm.dbg.value(metadata i8 %8, metadata !10584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !10585
  %9 = icmp eq i8 %8, %5, !dbg !10588
  %10 = sext i8 %5 to i32, !dbg !10590
  %11 = sext i8 %8 to i32, !dbg !10590
  %12 = sub nsw i32 %11, %10, !dbg !10590
  %13 = select i1 %9, i32 0, i32 %12, !dbg !10590
  ret i32 %13, !dbg !10591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10596, metadata !DIExpression()), !dbg !10597
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !10598
  %3 = icmp eq i32 %2, 0, !dbg !10600
  br i1 %3, label %8, label %4, !dbg !10601

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !10602
  %6 = add i32 %5, %2, !dbg !10604
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !10605
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !10606
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !10607
  br label %8, !dbg !10608

8:                                                ; preds = %4, %1
  ret void, !dbg !10609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !10610 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10614, metadata !DIExpression()), !dbg !10616
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !10617
  call void @llvm.dbg.value(metadata i32 %1, metadata !10615, metadata !DIExpression()), !dbg !10616
  ret i32 %1, !dbg !10618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10623, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata i32 %1, metadata !10624, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.value(metadata i32 0, metadata !10625, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !10641
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10643, !srcloc !10649
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !10643
  call void @llvm.dbg.value(metadata i32 %4, metadata !10646, metadata !DIExpression()) #24, !dbg !10650
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %4, metadata !10640, metadata !DIExpression()) #24, !dbg !10641
  call void @llvm.dbg.value(metadata i32 %4, metadata !10631, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 undef, metadata !10625, metadata !DIExpression()), !dbg !10633
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !10651
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !10654
  %6 = icmp sgt i32 %0, 0, !dbg !10655
  %7 = icmp sgt i32 %5, 2, !dbg !10657
  %8 = select i1 %7, i32 %5, i32 2, !dbg !10657
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !10657
  store i32 %9, i32* @slice_ticks, align 4, !dbg !10658
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !10659
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !10660
  call void @llvm.dbg.value(metadata i32 %4, metadata !10661, metadata !DIExpression()) #24, !dbg !10667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %4, metadata !10669, metadata !DIExpression()) #24, !dbg !10672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !10674, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !10625, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.value(metadata i32 undef, metadata !10625, metadata !DIExpression()), !dbg !10633
  ret void, !dbg !10676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !10677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10679, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.value(metadata i32 %0, metadata !10681, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10696
  call void @llvm.dbg.value(metadata i32 1000, metadata !10684, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata i32 10000, metadata !10685, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata i8 1, metadata !10686, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata i1 true, metadata !10687, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10696
  call void @llvm.dbg.value(metadata i1 true, metadata !10688, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10696
  call void @llvm.dbg.value(metadata i8 0, metadata !10689, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata i1 true, metadata !10690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10696
  call void @llvm.dbg.value(metadata i1 false, metadata !10691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10696
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !10696
  %2 = mul i32 %0, 10, !dbg !10698
  ret i32 %2, !dbg !10704
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !10705 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !10710
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10712, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !10712
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !10714
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %3, metadata !10708, metadata !DIExpression()), !dbg !10709
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !10715
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10717
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !10718
  br i1 %6, label %7, label %8, !dbg !10719

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !10722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !10724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !10726, !srcloc !10675
  br label %24, !dbg !10727

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !10728
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !10729
  %10 = icmp eq i32 %9, 0, !dbg !10729
  br i1 %10, label %21, label %11, !dbg !10731

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !10732
  br i1 %12, label %13, label %21, !dbg !10733

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !10734
  %15 = icmp sgt i32 %14, %0, !dbg !10737
  br i1 %15, label %19, label %16, !dbg !10738

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !10739
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !10739
  call void @llvm.dbg.value(metadata i32 %18, metadata !10708, metadata !DIExpression()), !dbg !10709
  br label %22, !dbg !10741

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !10742
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !10742
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !10744
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !10709
  call void @llvm.dbg.value(metadata i32 %23, metadata !10708, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %23, metadata !10661, metadata !DIExpression()) #24, !dbg !10746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %23, metadata !10669, metadata !DIExpression()) #24, !dbg !10748
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !10750, !srcloc !10675
  br label %24, !dbg !10751

24:                                               ; preds = %22, %7
  ret void, !dbg !10751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !10752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10756, metadata !DIExpression()), !dbg !10758
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !10759
  %3 = icmp eq i32 %2, 0, !dbg !10759
  br i1 %3, label %16, label %4, !dbg !10760

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !10761
  br i1 %5, label %16, label %6, !dbg !10762

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !10763
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !10763
  %9 = load i8, i8* %8, align 2, !dbg !10763
  %10 = sext i8 %9 to i32, !dbg !10764
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !10765
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !10766
  br i1 %12, label %16, label %13, !dbg !10767

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !10768
  %15 = xor i1 %14, true, !dbg !10769
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !10758
  call void @llvm.dbg.value(metadata i1 %17, metadata !10757, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10758
  ret i1 %17, !dbg !10770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !10771 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10775, metadata !DIExpression()), !dbg !10777
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10778
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10776, metadata !DIExpression()), !dbg !10777
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !10779
  br i1 %3, label %5, label %4, !dbg !10781

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !10782
  br label %5, !dbg !10784

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !10775, metadata !DIExpression()), !dbg !10777
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !10785
  ret i32 %6, !dbg !10786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10787 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10789, metadata !DIExpression()), !dbg !10791
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10792
  %3 = load i8, i8* %2, align 1, !dbg !10792
  call void @llvm.dbg.value(metadata i8 %3, metadata !10790, metadata !DIExpression()), !dbg !10791
  %4 = and i8 %3, 31, !dbg !10793
  %5 = icmp ne i8 %4, 0, !dbg !10794
  ret i1 %5, !dbg !10795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10796 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10798, metadata !DIExpression()), !dbg !10799
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !10800
  br i1 %2, label %3, label %7, !dbg !10802

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10803, metadata !DIExpression()) #24, !dbg !10806
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10809
  %5 = load i8, i8* %4, align 1, !dbg !10810
  %6 = and i8 %5, 127, !dbg !10810
  store i8 %6, i8* %4, align 1, !dbg !10810
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10811, metadata !DIExpression()) #24, !dbg !10814
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !10818
  br label %7, !dbg !10819

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10820, metadata !DIExpression()) #24, !dbg !10823
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10825
  %9 = load i8, i8* %8, align 1, !dbg !10826
  %10 = or i8 %9, -128, !dbg !10826
  store i8 %10, i8* %8, align 1, !dbg !10826
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10827, metadata !DIExpression()) #24, !dbg !10830
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !10834, metadata !DIExpression()) #24, !dbg !10842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10840, metadata !DIExpression()) #24, !dbg !10842
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !10844
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !10841, metadata !DIExpression()) #24, !dbg !10842
  %12 = icmp eq %struct._dnode* %11, null, !dbg !10846
  br i1 %12, label %23, label %13, !dbg !10844

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !10841, metadata !DIExpression()) #24, !dbg !10842
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !10848
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !10841, metadata !DIExpression()) #24, !dbg !10842
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !10849
  %17 = icmp sgt i32 %16, 0, !dbg !10852
  br i1 %17, label %18, label %20, !dbg !10853

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !10854
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !10856
  br label %25, !dbg !10857

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !10846
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !10841, metadata !DIExpression()) #24, !dbg !10842
  %22 = icmp eq %struct._dnode* %21, null, !dbg !10846
  br i1 %22, label %23, label %13, !dbg !10844, !llvm.loop !10858

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !10860
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !10861
  br label %25, !dbg !10862

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10863
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !10864
  %28 = zext i1 %27 to i32, !dbg !10864
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !10865
  ret void, !dbg !10866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10869, metadata !DIExpression()), !dbg !10870
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !10871
  ret i1 %2, !dbg !10872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !10873 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !10875, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !10876, metadata !DIExpression()), !dbg !10877
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !10878
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !10879
  ret void, !dbg !10880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !10881 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10885, metadata !DIExpression()), !dbg !10886
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !10887
  br i1 %2, label %6, label %3, !dbg !10887

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10888
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !10888
  br label %6, !dbg !10887

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !10887
  ret %struct._dnode* %7, !dbg !10889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !10890 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10894, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !10895, metadata !DIExpression()), !dbg !10898
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10899
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !10899
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !10896, metadata !DIExpression()), !dbg !10898
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !10900
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !10901
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !10902
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !10903
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !10904
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !10905
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !10906
  ret void, !dbg !10907
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !10908 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10912, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !10913, metadata !DIExpression()), !dbg !10914
  %3 = icmp eq %struct._dnode* %1, null, !dbg !10915
  br i1 %3, label %6, label %4, !dbg !10916

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !10917
  br label %6, !dbg !10916

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !10916
  ret %struct._dnode* %7, !dbg !10918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !10919 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10923, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !10924, metadata !DIExpression()), !dbg !10926
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10927
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !10927
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !10925, metadata !DIExpression()), !dbg !10926
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !10928
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !10929
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !10930
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !10931
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !10932
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !10933
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !10934
  ret void, !dbg !10935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !10936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10938, metadata !DIExpression()), !dbg !10940
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !10941
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10948, metadata !DIExpression()) #24, !dbg !10950
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !10951
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !10952
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !10952
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !10939, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !10953, metadata !DIExpression()) #24, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %0, metadata !10958, metadata !DIExpression()) #24, !dbg !10959
  %6 = icmp eq i32 %0, 0, !dbg !10962
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10964
  br i1 %6, label %8, label %15, !dbg !10965

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !10966
  br i1 %9, label %15, label %10, !dbg !10968

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !10969
  br i1 %11, label %15, label %12, !dbg !10971

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !10972
  %14 = icmp eq i32 %13, 0, !dbg !10972
  br i1 %14, label %18, label %15, !dbg !10974

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !10975
  br i1 %16, label %18, label %17, !dbg !10978

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !10979
  br label %18, !dbg !10981

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !10964
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10964
  ret void, !dbg !10982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10987, metadata !DIExpression()), !dbg !10990
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10988, metadata !DIExpression()), !dbg !10990
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !10991
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !10989, metadata !DIExpression()), !dbg !10990
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !10988, metadata !DIExpression()), !dbg !10990
  ret %struct.k_thread* %3, !dbg !10992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10995, metadata !DIExpression()), !dbg !10996
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10997
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !10998
  %4 = xor i1 %3, true, !dbg !10999
  ret i1 %4, !dbg !11000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11003, metadata !DIExpression()), !dbg !11004
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11005
  %3 = load i16, i16* %2, align 2, !dbg !11005
  %4 = icmp ult i16 %3, 128, !dbg !11006
  %5 = zext i1 %4 to i32, !dbg !11006
  ret i32 %5, !dbg !11007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11008 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11014, metadata !DIExpression()), !dbg !11015
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11016
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !11017
  %4 = xor i1 %3, true, !dbg !11018
  ret i1 %4, !dbg !11019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11020 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11026, metadata !DIExpression()), !dbg !11027
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11028
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11028
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11029
  ret i1 %4, !dbg !11030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11031 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11033, metadata !DIExpression()), !dbg !11035
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11034, metadata !DIExpression()), !dbg !11035
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11036
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11036
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !11037
  br i1 %5, label %9, label %6, !dbg !11038

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11039
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !11039
  br label %9, !dbg !11038

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !11038
  ret %struct._dnode* %10, !dbg !11040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !11041 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11045, metadata !DIExpression()), !dbg !11046
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11047
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11047
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11048
  ret i1 %4, !dbg !11049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11054, metadata !DIExpression()), !dbg !11057
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11058
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11058
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11055, metadata !DIExpression()), !dbg !11057
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11059
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11059
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11056, metadata !DIExpression()), !dbg !11057
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11060
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11061
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !11062
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !11063
  tail call fastcc void @sys_dnode_init.89(%struct._dnode* noundef %0) #26, !dbg !11064
  ret void, !dbg !11065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.89(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11068, metadata !DIExpression()), !dbg !11069
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11070
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11071
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11072
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11073
  ret void, !dbg !11074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11075 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11079, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 128, metadata !11080, metadata !DIExpression()), !dbg !11081
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11082
  %3 = load i8, i8* %2, align 1, !dbg !11082
  %4 = icmp slt i8 %3, 0, !dbg !11083
  ret i1 %4, !dbg !11084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11089, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.value(metadata i32 %1, metadata !11090, metadata !DIExpression()), !dbg !11091
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !11092
  ret i1 %3, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11096, metadata !DIExpression()), !dbg !11097
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !11098
  ret i1 %2, !dbg !11099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11102, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.value(metadata i32 %1, metadata !11103, metadata !DIExpression()), !dbg !11104
  %3 = icmp slt i32 %0, %1, !dbg !11105
  ret i1 %3, !dbg !11106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11109, metadata !DIExpression()), !dbg !11113
  call void @llvm.dbg.value(metadata i32 0, metadata !11110, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11115
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11117, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11117
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !11119
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11119
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %3, metadata !11112, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 undef, metadata !11110, metadata !DIExpression()), !dbg !11114
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !11120
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11125
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11125
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11127
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11129, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11110, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i32 undef, metadata !11110, metadata !DIExpression()), !dbg !11114
  ret void, !dbg !11130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11133, metadata !DIExpression()), !dbg !11134
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !11135
  br i1 %2, label %24, label %3, !dbg !11137

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !11138
  br i1 %4, label %5, label %24, !dbg !11139

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10820, metadata !DIExpression()) #24, !dbg !11140
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11143
  %7 = load i8, i8* %6, align 1, !dbg !11144
  %8 = or i8 %7, -128, !dbg !11144
  store i8 %8, i8* %6, align 1, !dbg !11144
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10827, metadata !DIExpression()) #24, !dbg !11145
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !10834, metadata !DIExpression()) #24, !dbg !11147
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10840, metadata !DIExpression()) #24, !dbg !11147
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11149
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !10841, metadata !DIExpression()) #24, !dbg !11147
  %10 = icmp eq %struct._dnode* %9, null, !dbg !11150
  br i1 %10, label %21, label %11, !dbg !11149

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !10841, metadata !DIExpression()) #24, !dbg !11147
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !11151
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !10841, metadata !DIExpression()) #24, !dbg !11147
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !11152
  %15 = icmp sgt i32 %14, 0, !dbg !11153
  br i1 %15, label %16, label %18, !dbg !11154

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11155
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !11156
  br label %23, !dbg !11157

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !11150
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !10841, metadata !DIExpression()) #24, !dbg !11147
  %20 = icmp eq %struct._dnode* %19, null, !dbg !11150
  br i1 %20, label %21, label %11, !dbg !11149, !llvm.loop !11158

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11160
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !11161
  br label %23, !dbg !11162

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !11163
  br label %24, !dbg !11164

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !11170
  br i1 %2, label %6, label %3, !dbg !11171

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !11172
  %5 = xor i1 %4, true, !dbg !11171
  br label %6, !dbg !11171

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !11173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11176, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !11177, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11182
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11184, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !11186
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %3, metadata !11179, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i32 undef, metadata !11177, metadata !DIExpression()), !dbg !11181
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !11187
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11194, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11177, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.value(metadata i32 undef, metadata !11177, metadata !DIExpression()), !dbg !11181
  ret void, !dbg !11195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11198, metadata !DIExpression()), !dbg !11200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11201
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11203, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11203
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !11205
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !11201
  call void @llvm.dbg.value(metadata i32 %3, metadata !11199, metadata !DIExpression()), !dbg !11200
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !11206
  br i1 %4, label %5, label %6, !dbg !11208

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11209
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11212
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11214, !srcloc !10675
  br label %8, !dbg !11215

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.94(%struct.k_thread* noundef %0) #26, !dbg !11216
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !11217
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11218
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !11218
  br label %8, !dbg !11219

8:                                                ; preds = %6, %5
  ret void, !dbg !11219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11224
  %3 = load i8, i8* %2, align 1, !dbg !11224
  %4 = and i8 %3, 4, !dbg !11225
  %5 = icmp eq i8 %4, 0, !dbg !11226
  ret i1 %5, !dbg !11227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.94(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11228 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11230, metadata !DIExpression()), !dbg !11231
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11232
  %3 = load i8, i8* %2, align 1, !dbg !11233
  %4 = and i8 %3, -5, !dbg !11233
  store i8 %4, i8* %2, align 1, !dbg !11233
  ret void, !dbg !11234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !11235 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !11238, metadata !DIExpression()), !dbg !11239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11237, metadata !DIExpression()), !dbg !11239
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !11240
  br i1 %4, label %5, label %9, !dbg !11242

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !11243
  br i1 %6, label %7, label %9, !dbg !11244

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !11245, metadata !DIExpression()) #24, !dbg !11251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11250, metadata !DIExpression()) #24, !dbg !11251
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !11254
  br label %10, !dbg !11255

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11259
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11261, !srcloc !10675
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !11262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !11263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11267, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32 %0, metadata !11269, metadata !DIExpression()), !dbg !11274
  %2 = icmp eq i32 %0, 0, !dbg !11276
  br i1 %2, label %3, label %6, !dbg !11277

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !11278, !srcloc !11285
  call void @llvm.dbg.value(metadata i32 %4, metadata !11281, metadata !DIExpression()) #24, !dbg !11286
  %5 = icmp eq i32 %4, 0, !dbg !11287
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !11268
  ret i1 %7, !dbg !11288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !11289 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11292
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11291, metadata !DIExpression()), !dbg !11293
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11294
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !11295
  ret i1 %3, !dbg !11296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !11297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11299, metadata !DIExpression()), !dbg !11301
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !11302
  call void @llvm.dbg.value(metadata i32 %2, metadata !11300, metadata !DIExpression()), !dbg !11301
  ret i32 %2, !dbg !11303
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11304 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11306, metadata !DIExpression()), !dbg !11310
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !11311
  call void @llvm.dbg.value(metadata i32 0, metadata !11307, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11313
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11315, !srcloc !10649
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11315
  call void @llvm.dbg.value(metadata i32 %4, metadata !10646, metadata !DIExpression()) #24, !dbg !11317
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11317
  call void @llvm.dbg.value(metadata i32 %4, metadata !10640, metadata !DIExpression()) #24, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %4, metadata !11309, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i32 undef, metadata !11307, metadata !DIExpression()), !dbg !11312
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !11318
  br i1 %5, label %6, label %10, !dbg !11322

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10803, metadata !DIExpression()) #24, !dbg !11323
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11326
  %8 = load i8, i8* %7, align 1, !dbg !11327
  %9 = and i8 %8, 127, !dbg !11327
  store i8 %9, i8* %7, align 1, !dbg !11327
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10811, metadata !DIExpression()) #24, !dbg !11328
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !11330
  br label %10, !dbg !11331

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !11332
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11333
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !11334
  %13 = zext i1 %12 to i32, !dbg !11334
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %4, metadata !10661, metadata !DIExpression()) #24, !dbg !11336
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11336
  call void @llvm.dbg.value(metadata i32 %4, metadata !10669, metadata !DIExpression()) #24, !dbg !11338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !11340, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11307, metadata !DIExpression()), !dbg !11312
  call void @llvm.dbg.value(metadata i32 undef, metadata !11307, metadata !DIExpression()), !dbg !11312
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11341
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !11343
  br i1 %15, label %16, label %17, !dbg !11344

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !11345
  br label %17, !dbg !11347

17:                                               ; preds = %16, %10
  ret void, !dbg !11348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11351, metadata !DIExpression()), !dbg !11352
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11353
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11354
  ret i32 %3, !dbg !11355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11358, metadata !DIExpression()), !dbg !11359
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11360
  %3 = load i8, i8* %2, align 1, !dbg !11361
  %4 = or i8 %3, 16, !dbg !11361
  store i8 %4, i8* %2, align 1, !dbg !11361
  ret void, !dbg !11362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !11363 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11364, !srcloc !10649
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %2, metadata !10646, metadata !DIExpression()) #24, !dbg !11366
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11366
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !11367
  ret void, !dbg !11368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !11369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11371, metadata !DIExpression()), !dbg !11372
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !11373
  br i1 %2, label %3, label %5, !dbg !11375

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !11376
  br label %6, !dbg !11378

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !10669, metadata !DIExpression()) #24, !dbg !11379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !11382, !srcloc !10675
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !11383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11384 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11386, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11389
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11391, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11391
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !11393
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !11389
  call void @llvm.dbg.value(metadata i32 %3, metadata !11387, metadata !DIExpression()), !dbg !11388
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !11394
  br i1 %4, label %6, label %5, !dbg !11396

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11402, !srcloc !10675
  br label %8, !dbg !11403

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !11404
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !11405
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11406
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !11406
  br label %8, !dbg !11407

8:                                                ; preds = %6, %5
  ret void, !dbg !11407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11408 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11410, metadata !DIExpression()), !dbg !11411
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11412
  %3 = load i8, i8* %2, align 1, !dbg !11412
  %4 = and i8 %3, 16, !dbg !11413
  %5 = icmp ne i8 %4, 0, !dbg !11414
  ret i1 %5, !dbg !11415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11418, metadata !DIExpression()), !dbg !11419
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11420
  %3 = load i8, i8* %2, align 1, !dbg !11421
  %4 = and i8 %3, -17, !dbg !11421
  store i8 %4, i8* %2, align 1, !dbg !11421
  ret void, !dbg !11422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11423 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11433, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11431, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11432, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata i32 0, metadata !11434, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11439
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11441, !srcloc !10649
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !11441
  call void @llvm.dbg.value(metadata i32 %5, metadata !10646, metadata !DIExpression()) #24, !dbg !11443
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11443
  call void @llvm.dbg.value(metadata i32 %5, metadata !10640, metadata !DIExpression()) #24, !dbg !11439
  call void @llvm.dbg.value(metadata i32 %5, metadata !11436, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.value(metadata i32 undef, metadata !11434, metadata !DIExpression()), !dbg !11438
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !11444
  call void @llvm.dbg.value(metadata i32 %5, metadata !10661, metadata !DIExpression()) #24, !dbg !11447
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11447
  call void @llvm.dbg.value(metadata i32 %5, metadata !10669, metadata !DIExpression()) #24, !dbg !11449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !11451, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11434, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.value(metadata i32 undef, metadata !11434, metadata !DIExpression()), !dbg !11438
  ret void, !dbg !11452
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !11453 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11457, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11455, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11456, metadata !DIExpression()), !dbg !11458
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !11459
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !11460
  ret void, !dbg !11461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !11462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11466, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11467, metadata !DIExpression()), !dbg !11468
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !11469
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !11470
  %3 = icmp eq %union.anon* %1, null, !dbg !11471
  br i1 %3, label %21, label %4, !dbg !11473

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !11474
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !11476
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !11477
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !10834, metadata !DIExpression()) #24, !dbg !11478
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10840, metadata !DIExpression()) #24, !dbg !11478
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !11480
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !10841, metadata !DIExpression()) #24, !dbg !11478
  %8 = icmp eq %struct._dnode* %7, null, !dbg !11481
  br i1 %8, label %19, label %9, !dbg !11480

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !10841, metadata !DIExpression()) #24, !dbg !11478
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !11482
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !10841, metadata !DIExpression()) #24, !dbg !11478
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !11483
  %13 = icmp sgt i32 %12, 0, !dbg !11484
  br i1 %13, label %14, label %16, !dbg !11485

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11486
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !11487
  br label %21, !dbg !11488

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !11481
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !10841, metadata !DIExpression()) #24, !dbg !11478
  %18 = icmp eq %struct._dnode* %17, null, !dbg !11481
  br i1 %18, label %19, label %9, !dbg !11480, !llvm.loop !11489

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11491
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !11492
  br label %21, !dbg !11493

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !11494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11495 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11500, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11499, metadata !DIExpression()), !dbg !11501
  %4 = icmp eq i64 %3, -1, !dbg !11502
  br i1 %4, label %6, label %5, !dbg !11504

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.97(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !11505
  br label %6, !dbg !11507

6:                                                ; preds = %5, %2
  ret void, !dbg !11508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.97(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11509 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11512, metadata !DIExpression()), !dbg !11513
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11511, metadata !DIExpression()), !dbg !11513
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11514
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !11515
  ret void, !dbg !11516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !11517 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11519, metadata !DIExpression()), !dbg !11527
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !11528
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !11528
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11520, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32 0, metadata !11521, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11530
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11532, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !11534
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11534
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !11530
  call void @llvm.dbg.value(metadata i32 undef, metadata !11523, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()), !dbg !11529
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !11535
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !11536
  %7 = load i8, i8* %6, align 1, !dbg !11536
  %8 = and i8 %7, 40, !dbg !11537
  %9 = icmp eq i8 %8, 0, !dbg !11537
  call void @llvm.dbg.value(metadata i1 %9, metadata !11524, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11538
  br i1 %9, label %10, label %17, !dbg !11539

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !11540
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !11540
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !11540
  %14 = icmp eq %union.anon* %13, null, !dbg !11544
  br i1 %14, label %16, label %15, !dbg !11545

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !11546
  br label %16, !dbg !11548

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.94(%struct.k_thread* noundef nonnull %3) #26, !dbg !11549
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !11550
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !11551
  br label %17, !dbg !11552

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %18, metadata !10646, metadata !DIExpression()) #24, !dbg !11534
  call void @llvm.dbg.value(metadata i32 %18, metadata !10640, metadata !DIExpression()) #24, !dbg !11530
  call void @llvm.dbg.value(metadata i32 %18, metadata !11523, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #24, !dbg !11553
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11553
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #24, !dbg !11555
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !11557, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11521, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()), !dbg !11529
  ret void, !dbg !11558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11559 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11561, metadata !DIExpression()), !dbg !11562
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !11563
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !11564
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !11565
  store %union.anon* null, %union.anon** %2, align 8, !dbg !11566
  ret void, !dbg !11567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11570, metadata !DIExpression()), !dbg !11571
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11572
  %3 = load i8, i8* %2, align 1, !dbg !11573
  %4 = and i8 %3, -3, !dbg !11573
  store i8 %4, i8* %2, align 1, !dbg !11573
  ret void, !dbg !11574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11577, metadata !DIExpression()), !dbg !11578
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !11579
  br i1 %2, label %3, label %7, !dbg !11581

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10803, metadata !DIExpression()) #24, !dbg !11582
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11585
  %5 = load i8, i8* %4, align 1, !dbg !11586
  %6 = and i8 %5, 127, !dbg !11586
  store i8 %6, i8* %4, align 1, !dbg !11586
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10811, metadata !DIExpression()) #24, !dbg !11587
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !11589
  br label %7, !dbg !11590

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11591
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !11592
  %10 = zext i1 %9 to i32, !dbg !11592
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !11593
  ret void, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11597, metadata !DIExpression()), !dbg !11598
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11599
  %3 = load i8, i8* %2, align 1, !dbg !11600
  %4 = or i8 %3, 2, !dbg !11600
  store i8 %4, i8* %2, align 1, !dbg !11600
  ret void, !dbg !11601
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !11602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11604, metadata !DIExpression()), !dbg !11608
  call void @llvm.dbg.value(metadata i32 0, metadata !11605, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11610
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11612, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11612
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !11614
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !11610
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.value(metadata i32 undef, metadata !11605, metadata !DIExpression()), !dbg !11609
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11618
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11620
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11622, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11605, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.value(metadata i32 undef, metadata !11605, metadata !DIExpression()), !dbg !11609
  ret void, !dbg !11623
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11624 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11630, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i32 %0, metadata !11628, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !11629, metadata !DIExpression()), !dbg !11635
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11636
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !11637
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11638
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !11639
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %6, metadata !11631, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.value(metadata i32 0, metadata !11632, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11642
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11644, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !11646
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11646
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !11642
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i32 undef, metadata !11632, metadata !DIExpression()), !dbg !11641
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11647
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11651
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !11652
  br i1 %10, label %11, label %12, !dbg !11653

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11654
  br label %12, !dbg !11656

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !11644
  call void @llvm.dbg.value(metadata i32 %13, metadata !10646, metadata !DIExpression()) #24, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %13, metadata !10640, metadata !DIExpression()) #24, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %13, metadata !11634, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #24, !dbg !11657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11657
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #24, !dbg !11659
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !11661, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11632, metadata !DIExpression()), !dbg !11641
  call void @llvm.dbg.value(metadata i32 undef, metadata !11632, metadata !DIExpression()), !dbg !11641
  ret i32 %6, !dbg !11662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !11663 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11668, metadata !DIExpression()), !dbg !11671
  call void @llvm.dbg.value(metadata i64 undef, metadata !11670, metadata !DIExpression()), !dbg !11671
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11667, metadata !DIExpression()), !dbg !11671
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !11669, metadata !DIExpression()), !dbg !11671
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11672
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !11673
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11674
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11676, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !11678
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11678
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !11674
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11679
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !11680
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !11245, metadata !DIExpression()) #24, !dbg !11681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11250, metadata !DIExpression()) #24, !dbg !11681
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !11683
  ret i32 %9, !dbg !11684
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !11685 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11689, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11690, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 0, metadata !11691, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11696
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11698, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !11700
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11700
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !11696
  call void @llvm.dbg.value(metadata i32 undef, metadata !11693, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11690, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()), !dbg !11695
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !11701
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11690, metadata !DIExpression()), !dbg !11694
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !11704
  br i1 %5, label %7, label %6, !dbg !11706

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !11707
  br label %7, !dbg !11709

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %8, metadata !10646, metadata !DIExpression()) #24, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %8, metadata !10640, metadata !DIExpression()) #24, !dbg !11696
  call void @llvm.dbg.value(metadata i32 %8, metadata !11693, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #24, !dbg !11710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11710
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #24, !dbg !11712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !11714, !srcloc !10675
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11690, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 undef, metadata !11691, metadata !DIExpression()), !dbg !11695
  ret %struct.k_thread* %4, !dbg !11715
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !11716 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11718, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11719, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i32 0, metadata !11720, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11725
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11727, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !11729
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11729
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !11725
  call void @llvm.dbg.value(metadata i32 undef, metadata !11722, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11719, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i32 undef, metadata !11720, metadata !DIExpression()), !dbg !11724
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !11730
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11719, metadata !DIExpression()), !dbg !11723
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !11733
  br i1 %5, label %8, label %6, !dbg !11735

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !11736
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !11738
  br label %8, !dbg !11739

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !11727
  call void @llvm.dbg.value(metadata i32 %9, metadata !10646, metadata !DIExpression()) #24, !dbg !11729
  call void @llvm.dbg.value(metadata i32 %9, metadata !10640, metadata !DIExpression()) #24, !dbg !11725
  call void @llvm.dbg.value(metadata i32 %9, metadata !11722, metadata !DIExpression()), !dbg !11724
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #24, !dbg !11740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #24, !dbg !11742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !11744, !srcloc !10675
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11719, metadata !DIExpression()), !dbg !11723
  call void @llvm.dbg.value(metadata i32 undef, metadata !11720, metadata !DIExpression()), !dbg !11724
  ret %struct.k_thread* %4, !dbg !11745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11748, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11604, metadata !DIExpression()) #24, !dbg !11750
  call void @llvm.dbg.value(metadata i32 0, metadata !11605, metadata !DIExpression()) #24, !dbg !11752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11753
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11755, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11755
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !11757
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %3, metadata !11607, metadata !DIExpression()) #24, !dbg !11752
  call void @llvm.dbg.value(metadata i32 undef, metadata !11605, metadata !DIExpression()) #24, !dbg !11752
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !11758
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !11759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11759
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !11761
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !11763, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11605, metadata !DIExpression()) #24, !dbg !11752
  call void @llvm.dbg.value(metadata i32 undef, metadata !11605, metadata !DIExpression()) #24, !dbg !11752
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !11764
  ret void, !dbg !11765
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11766 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11768, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i32 %1, metadata !11769, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i8 0, metadata !11770, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i32 0, metadata !11771, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11776
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11778, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !11780
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11780
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !11776
  call void @llvm.dbg.value(metadata i32 undef, metadata !11773, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i8 poison, metadata !11770, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i32 undef, metadata !11771, metadata !DIExpression()), !dbg !11775
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !11781
  call void @llvm.dbg.value(metadata i1 %6, metadata !11770, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11774
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !11784

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10803, metadata !DIExpression()) #24, !dbg !11785
  %11 = load i8, i8* %4, align 1, !dbg !11791
  %12 = and i8 %11, 127, !dbg !11791
  store i8 %12, i8* %4, align 1, !dbg !11791
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10811, metadata !DIExpression()) #24, !dbg !11792
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !11794
  store i8 %9, i8* %8, align 2, !dbg !11795
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10820, metadata !DIExpression()) #24, !dbg !11796
  %13 = load i8, i8* %4, align 1, !dbg !11798
  %14 = or i8 %13, -128, !dbg !11798
  store i8 %14, i8* %4, align 1, !dbg !11798
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10827, metadata !DIExpression()) #24, !dbg !11799
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !10834, metadata !DIExpression()) #24, !dbg !11801
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10840, metadata !DIExpression()) #24, !dbg !11801
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !11803
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !10841, metadata !DIExpression()) #24, !dbg !11801
  %16 = icmp eq %struct._dnode* %15, null, !dbg !11804
  br i1 %16, label %26, label %17, !dbg !11803

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !10841, metadata !DIExpression()) #24, !dbg !11801
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !11805
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !10841, metadata !DIExpression()) #24, !dbg !11801
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !11806
  %21 = icmp sgt i32 %20, 0, !dbg !11807
  br i1 %21, label %22, label %23, !dbg !11808

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !11809
  br label %27, !dbg !11810

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !11804
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !10841, metadata !DIExpression()) #24, !dbg !11801
  %25 = icmp eq %struct._dnode* %24, null, !dbg !11804
  br i1 %25, label %26, label %17, !dbg !11803, !llvm.loop !11811

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !11813
  br label %27, !dbg !11814

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !11815
  br label %29, !dbg !11816

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !11817
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %30, metadata !10646, metadata !DIExpression()) #24, !dbg !11780
  call void @llvm.dbg.value(metadata i32 %30, metadata !10640, metadata !DIExpression()) #24, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %30, metadata !11773, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #24, !dbg !11819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11819
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #24, !dbg !11821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !11823, !srcloc !10675
  call void @llvm.dbg.value(metadata i8 poison, metadata !11770, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.value(metadata i32 undef, metadata !11771, metadata !DIExpression()), !dbg !11775
  ret i1 %6, !dbg !11824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11829, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 %1, metadata !11830, metadata !DIExpression()), !dbg !11832
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !11833
  call void @llvm.dbg.value(metadata i1 %3, metadata !11831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11832
  br i1 %3, label %4, label %12, !dbg !11834

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11836
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !11837
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !11837
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !11837
  %9 = load i8, i8* %8, align 1, !dbg !11837
  %10 = icmp eq i8 %9, 0, !dbg !11838
  br i1 %10, label %11, label %12, !dbg !11839

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !11840
  br label %12, !dbg !11842

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !11843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !11844 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11846, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11850
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11852, !srcloc !10649
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11852
  call void @llvm.dbg.value(metadata i32 %2, metadata !10646, metadata !DIExpression()) #24, !dbg !11854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11854
  call void @llvm.dbg.value(metadata i32 %2, metadata !10640, metadata !DIExpression()) #24, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %2, metadata !11848, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 undef, metadata !11846, metadata !DIExpression()), !dbg !11849
  tail call fastcc void @z_sched_lock() #26, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %2, metadata !10661, metadata !DIExpression()) #24, !dbg !11858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %2, metadata !10669, metadata !DIExpression()) #24, !dbg !11860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11862, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11846, metadata !DIExpression()), !dbg !11849
  call void @llvm.dbg.value(metadata i32 undef, metadata !11846, metadata !DIExpression()), !dbg !11849
  ret void, !dbg !11863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !11864 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11865
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11866
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !11866
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !11866
  %5 = load i8, i8* %4, align 1, !dbg !11867
  %6 = add i8 %5, -1, !dbg !11867
  store i8 %6, i8* %4, align 1, !dbg !11867
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11868, !srcloc !11870
  ret void, !dbg !11871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !11872 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11874, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !11878
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11880, !srcloc !10649
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %2, metadata !10646, metadata !DIExpression()) #24, !dbg !11882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !10640, metadata !DIExpression()) #24, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %2, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.value(metadata i32 undef, metadata !11874, metadata !DIExpression()), !dbg !11877
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11883
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !11886
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !11886
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11886
  %7 = load i8, i8* %6, align 1, !dbg !11887
  %8 = add i8 %7, 1, !dbg !11887
  store i8 %8, i8* %6, align 1, !dbg !11887
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %2, metadata !10661, metadata !DIExpression()) #24, !dbg !11889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %2, metadata !10669, metadata !DIExpression()) #24, !dbg !11891
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11893, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 1, metadata !11874, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.value(metadata i32 undef, metadata !11874, metadata !DIExpression()), !dbg !11877
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !11894
  ret void, !dbg !11895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !11896 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11897
  ret %struct.k_thread* %1, !dbg !11898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11899 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !11903, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !11904, metadata !DIExpression()), !dbg !11908
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !11909
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11905, metadata !DIExpression()), !dbg !11908
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !11910
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !11906, metadata !DIExpression()), !dbg !11908
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !11911
  call void @llvm.dbg.value(metadata i32 %5, metadata !11907, metadata !DIExpression()), !dbg !11908
  %6 = icmp sgt i32 %5, 0, !dbg !11912
  br i1 %6, label %17, label %7, !dbg !11914

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !11915
  br i1 %8, label %17, label %9, !dbg !11917

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !11918
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !11918
  %12 = load i32, i32* %11, align 8, !dbg !11918
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !11920
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !11920
  %15 = load i32, i32* %14, align 8, !dbg !11920
  %16 = icmp ult i32 %12, %15, !dbg !11921
  br label %17, !dbg !11922

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !11923
  ret i1 %18, !dbg !11924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !11925 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !11942, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11943, metadata !DIExpression()), !dbg !11957
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !11958
  %5 = load i32, i32* %4, align 4, !dbg !11959
  %6 = add nsw i32 %5, 1, !dbg !11959
  store i32 %6, i32* %4, align 4, !dbg !11959
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !11960
  store i32 %5, i32* %7, align 8, !dbg !11961
  %8 = load i32, i32* %4, align 4, !dbg !11962
  %9 = icmp eq i32 %8, 0, !dbg !11963
  br i1 %9, label %10, label %32, !dbg !11964

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !11965
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !11965
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !11945, metadata !DIExpression()), !dbg !11965
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11965
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !11965
  %14 = load i32, i32* %13, align 4, !dbg !11965
  %15 = shl i32 %14, 2, !dbg !11965
  %16 = alloca i8, i32 %15, align 8, !dbg !11965
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !11965
  store i8* %16, i8** %17, align 4, !dbg !11965
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !11965
  %19 = alloca i8, i32 %14, align 8, !dbg !11965
  store i8* %19, i8** %18, align 4, !dbg !11965
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !11965
  store i32 -1, i32* %20, align 4, !dbg !11965
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !11966
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !11954, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !11944, metadata !DIExpression()), !dbg !11957
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !11968
  br i1 %22, label %23, label %24, !dbg !11965

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !11968
  br label %32, !dbg !11969

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !11944, metadata !DIExpression()), !dbg !11957
  %26 = load i32, i32* %4, align 4, !dbg !11970
  %27 = add nsw i32 %26, 1, !dbg !11970
  store i32 %27, i32* %4, align 4, !dbg !11970
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !11972
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !11972
  store i32 %26, i32* %29, align 8, !dbg !11973
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !11966
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !11954, metadata !DIExpression()), !dbg !11967
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !11944, metadata !DIExpression()), !dbg !11957
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !11968
  br i1 %31, label %23, label %24, !dbg !11965, !llvm.loop !11974

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11976
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !11977
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !11978
  ret void, !dbg !11979
}

; Function Attrs: optsize
declare !dbg !11980 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !11985 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !11988 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !11990, metadata !DIExpression()), !dbg !11992
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11991, metadata !DIExpression()), !dbg !11992
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !11993
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !11994
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !11995
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !11996
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !11996
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !11998
  br i1 %7, label %8, label %10, !dbg !11999

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12000
  store i32 0, i32* %9, align 4, !dbg !12002
  br label %10, !dbg !12003

10:                                               ; preds = %8, %2
  ret void, !dbg !12004
}

; Function Attrs: optsize
declare !dbg !12005 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12006 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12010, metadata !DIExpression()), !dbg !12013
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12011, metadata !DIExpression()), !dbg !12013
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12014
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !12015
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12012, metadata !DIExpression()), !dbg !12013
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12011, metadata !DIExpression()), !dbg !12013
  ret %struct.k_thread* %4, !dbg !12016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12017 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12021, metadata !DIExpression()), !dbg !12022
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !12023
  ret %struct.rbnode* %2, !dbg !12024
}

; Function Attrs: optsize
declare !dbg !12025 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !12028 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !12040, metadata !DIExpression()), !dbg !12044
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !12045
  %3 = load i32, i32* %2, align 4, !dbg !12045
  %4 = icmp eq i32 %3, 0, !dbg !12047
  br i1 %4, label %10, label %5, !dbg !12048

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12041, metadata !DIExpression()), !dbg !12044
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !12049, !range !3072
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !12050
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12042, metadata !DIExpression()), !dbg !12044
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !12051
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !12043, metadata !DIExpression()), !dbg !12044
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12041, metadata !DIExpression()), !dbg !12044
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !12044
  ret %struct.k_thread* %11, !dbg !12052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12053 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12057, metadata !DIExpression()), !dbg !12060
  call void @llvm.dbg.value(metadata i32 0, metadata !12058, metadata !DIExpression()), !dbg !12060
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !12061
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12059, metadata !DIExpression()), !dbg !12060
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12062
  br i1 %3, label %8, label %4, !dbg !12063

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !12064
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !12066
  call void @llvm.dbg.value(metadata i32 1, metadata !12058, metadata !DIExpression()), !dbg !12060
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !12061
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12059, metadata !DIExpression()), !dbg !12060
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12062
  br i1 %7, label %8, label %4, !dbg !12063, !llvm.loop !12067

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !12060
  ret i32 %9, !dbg !12069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !12070 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12072, metadata !DIExpression()), !dbg !12073
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12074
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !12075
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !12076
  ret %struct.k_thread* %4, !dbg !12077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !12078 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !12087, metadata !DIExpression()), !dbg !12088
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !12089
  tail call fastcc void @sys_dlist_init.108(%struct._dnode* noundef nonnull %2) #26, !dbg !12090
  ret void, !dbg !12091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.108(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12092 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12096, metadata !DIExpression()), !dbg !12097
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12098
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12099
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12100
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12101
  ret void, !dbg !12102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !12103 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !12104
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !12105
  ret void, !dbg !12106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !12107 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12112, metadata !DIExpression()), !dbg !12113
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12114
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !12114
  %4 = load i8, i8* %3, align 2, !dbg !12114
  %5 = sext i8 %4 to i32, !dbg !12115
  ret i32 %5, !dbg !12116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12121, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata i32 %1, metadata !12122, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12123, metadata !DIExpression()), !dbg !12124
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !12125
  ret void, !dbg !12126
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !12127 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !12128
  br i1 %1, label %8, label %2, !dbg !12129

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !12130
  br i1 %3, label %8, label %4, !dbg !12131

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12132
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !12133
  %7 = xor i1 %6, true, !dbg !12131
  br label %8, !dbg !12131

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !12134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !12135 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !12136, !range !5776
  %2 = icmp eq i8 %1, 0, !dbg !12136
  ret i1 %2, !dbg !12137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !12138 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !12141
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12143, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !12145
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !12145
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !12141
  call void @llvm.dbg.value(metadata i32 undef, metadata !12140, metadata !DIExpression()), !dbg !12146
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12147
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10803, metadata !DIExpression()) #24, !dbg !12150
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !12152
  %4 = load i8, i8* %3, align 1, !dbg !12153
  %5 = and i8 %4, 127, !dbg !12153
  store i8 %5, i8* %3, align 1, !dbg !12153
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10811, metadata !DIExpression()) #24, !dbg !12154
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !12156
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12157
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !10820, metadata !DIExpression()) #24, !dbg !12158
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !12160
  %8 = load i8, i8* %7, align 1, !dbg !12161
  %9 = or i8 %8, -128, !dbg !12161
  store i8 %9, i8* %7, align 1, !dbg !12161
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !10827, metadata !DIExpression()) #24, !dbg !12162
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !10834, metadata !DIExpression()) #24, !dbg !12164
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !10840, metadata !DIExpression()) #24, !dbg !12164
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !12166
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !10841, metadata !DIExpression()) #24, !dbg !12164
  %11 = icmp eq %struct._dnode* %10, null, !dbg !12167
  br i1 %11, label %22, label %12, !dbg !12166

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !10841, metadata !DIExpression()) #24, !dbg !12164
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !12168
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !10841, metadata !DIExpression()) #24, !dbg !12164
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !12169
  %16 = icmp sgt i32 %15, 0, !dbg !12170
  br i1 %16, label %17, label %19, !dbg !12171

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !12172
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !12173
  br label %24, !dbg !12174

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !12167
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !10841, metadata !DIExpression()) #24, !dbg !12164
  %21 = icmp eq %struct._dnode* %20, null, !dbg !12167
  br i1 %21, label %22, label %12, !dbg !12166, !llvm.loop !12175

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !12177
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !12178
  br label %24, !dbg !12179

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !12143
  call void @llvm.dbg.value(metadata i32 %25, metadata !10646, metadata !DIExpression()) #24, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %25, metadata !10640, metadata !DIExpression()) #24, !dbg !12141
  call void @llvm.dbg.value(metadata i32 %25, metadata !12140, metadata !DIExpression()), !dbg !12146
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !12180
  call void @llvm.dbg.value(metadata i32 undef, metadata !11245, metadata !DIExpression()) #24, !dbg !12181
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11250, metadata !DIExpression()) #24, !dbg !12181
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !12183
  ret void, !dbg !12184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !12185 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !12189, metadata !DIExpression()), !dbg !12192
  %3 = icmp eq i64 %2, -1, !dbg !12193
  br i1 %3, label %4, label %6, !dbg !12195

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12196
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !12198
  br label %11, !dbg !12199

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !12190, metadata !DIExpression()), !dbg !12192
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !12200
  %8 = sext i32 %7 to i64, !dbg !12200
  call void @llvm.dbg.value(metadata i64 %8, metadata !12190, metadata !DIExpression()), !dbg !12192
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !12201
  %10 = trunc i64 %9 to i32, !dbg !12201
  call void @llvm.dbg.value(metadata i32 %10, metadata !12191, metadata !DIExpression()), !dbg !12192
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !12192
  ret i32 %12, !dbg !12202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12207, metadata !DIExpression()), !dbg !12208
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12209, !srcloc !12211
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !12212
  ret void, !dbg !12213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !12214 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12218, metadata !DIExpression()), !dbg !12222
  %2 = icmp eq i64 %0, 0, !dbg !12223
  br i1 %2, label %3, label %4, !dbg !12225

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !12226
  br label %29, !dbg !12228

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !12220, metadata !DIExpression()), !dbg !12222
  %5 = icmp sgt i64 %0, -3, !dbg !12229
  br i1 %5, label %6, label %10, !dbg !12231

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !12232
  %8 = trunc i64 %0 to i32, !dbg !12234
  %9 = add i32 %7, %8, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %9, metadata !12219, metadata !DIExpression()), !dbg !12222
  br label %13, !dbg !12235

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !12236
  %12 = sub i32 -2, %11, !dbg !12236
  call void @llvm.dbg.value(metadata i32 %12, metadata !12219, metadata !DIExpression()), !dbg !12222
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !12238
  call void @llvm.dbg.value(metadata i32 %14, metadata !12219, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !12239
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12241, !srcloc !10649
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !12241
  call void @llvm.dbg.value(metadata i32 %16, metadata !10646, metadata !DIExpression()) #24, !dbg !12243
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !12243
  call void @llvm.dbg.value(metadata i32 %16, metadata !10640, metadata !DIExpression()) #24, !dbg !12239
  call void @llvm.dbg.value(metadata i32 %16, metadata !12221, metadata !DIExpression()), !dbg !12222
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12244
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !12245
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !12246
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12247
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !12248
  tail call fastcc void @z_add_thread_timeout.97(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !12248
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12249
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %16, metadata !11245, metadata !DIExpression()) #24, !dbg !12251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11250, metadata !DIExpression()) #24, !dbg !12251
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !12253
  %22 = zext i32 %14 to i64, !dbg !12254
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !12255
  %24 = zext i32 %23 to i64, !dbg !12255
  %25 = sub nsw i64 %22, %24, !dbg !12256
  call void @llvm.dbg.value(metadata i64 %25, metadata !12218, metadata !DIExpression()), !dbg !12222
  %26 = icmp sgt i64 %25, 0, !dbg !12257
  %27 = select i1 %26, i64 %25, i64 0, !dbg !12257
  %28 = trunc i64 %27 to i32, !dbg !12257
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !12222
  ret i32 %30, !dbg !12258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !12259 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12261, metadata !DIExpression()), !dbg !12262
  call void @llvm.dbg.value(metadata i64 %0, metadata !10681, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32 10000, metadata !10684, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i32 1000, metadata !10685, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i8 1, metadata !10686, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i1 false, metadata !10687, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12263
  call void @llvm.dbg.value(metadata i1 false, metadata !10688, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12263
  call void @llvm.dbg.value(metadata i8 0, metadata !10689, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i1 false, metadata !10690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12263
  call void @llvm.dbg.value(metadata i1 true, metadata !10691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12263
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata i64 %0, metadata !10681, metadata !DIExpression()), !dbg !12263
  %2 = udiv i64 %0, 10, !dbg !12265
  ret i64 %2, !dbg !12269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !12270 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12271, !srcloc !12273
  tail call void @z_impl_k_yield() #26, !dbg !12274
  ret void, !dbg !12275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !12276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12280, metadata !DIExpression()), !dbg !12282
  %2 = sext i32 %0 to i64, !dbg !12283
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !12284
  call void @llvm.dbg.value(metadata i64 %3, metadata !12281, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12282
  %4 = shl i64 %3, 32, !dbg !12285
  %5 = ashr exact i64 %4, 32, !dbg !12285
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %6, metadata !12281, metadata !DIExpression()), !dbg !12282
  %7 = sext i32 %6 to i64, !dbg !12287
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !12288
  %9 = trunc i64 %8 to i32, !dbg !12288
  ret i32 %9, !dbg !12289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12290 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12292, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.value(metadata i64 %0, metadata !10681, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 1000000, metadata !10684, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i32 10000, metadata !10685, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i8 1, metadata !10686, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i1 false, metadata !10687, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12294
  call void @llvm.dbg.value(metadata i1 true, metadata !10688, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12294
  call void @llvm.dbg.value(metadata i8 0, metadata !10689, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i1 false, metadata !10690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12294
  call void @llvm.dbg.value(metadata i1 true, metadata !10691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12294
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !12294
  %2 = add i64 %0, 99, !dbg !12296
  call void @llvm.dbg.value(metadata i64 %2, metadata !10681, metadata !DIExpression()), !dbg !12294
  %3 = udiv i64 %2, 100, !dbg !12297
  ret i64 %3, !dbg !12298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !12299 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12301, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i64 %0, metadata !10681, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 10000, metadata !10684, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i32 1000000, metadata !10685, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i8 1, metadata !10686, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i1 false, metadata !10687, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12303
  call void @llvm.dbg.value(metadata i1 false, metadata !10688, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12303
  call void @llvm.dbg.value(metadata i8 0, metadata !10689, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i1 true, metadata !10690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12303
  call void @llvm.dbg.value(metadata i1 false, metadata !10691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12303
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.value(metadata i64 0, metadata !10692, metadata !DIExpression()), !dbg !12303
  %2 = mul i64 %0, 100, !dbg !12305
  ret i64 %2, !dbg !12307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12308 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12310, metadata !DIExpression()), !dbg !12311
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !12312
  br i1 %2, label %14, label %3, !dbg !12314

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !12315
  %5 = icmp slt i32 %4, 0, !dbg !12317
  br i1 %5, label %6, label %10, !dbg !12318

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12319
  %8 = load i8, i8* %7, align 1, !dbg !12319
  %9 = icmp eq i8 %8, 16, !dbg !12322
  br i1 %9, label %10, label %14, !dbg !12323

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !12324
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !12325
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12326, !srcloc !11285
  call void @llvm.dbg.value(metadata i32 %11, metadata !11281, metadata !DIExpression()) #24, !dbg !12330
  %12 = icmp eq i32 %11, 0, !dbg !12331
  br i1 %12, label %13, label %14, !dbg !12332

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !12333
  br label %14, !dbg !12335

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !12336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12339, metadata !DIExpression()), !dbg !12340
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12341
  %3 = load i8, i8* %2, align 1, !dbg !12341
  %4 = and i8 %3, 2, !dbg !12342
  %5 = icmp ne i8 %4, 0, !dbg !12343
  ret i1 %5, !dbg !12344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !12345 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12350
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12349, metadata !DIExpression()), !dbg !12351
  ret %struct.k_thread* %1, !dbg !12352
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !12353 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12354, !srcloc !11285
  call void @llvm.dbg.value(metadata i32 %1, metadata !11281, metadata !DIExpression()) #24, !dbg !12357
  %2 = icmp eq i32 %1, 0, !dbg !12358
  br i1 %2, label %3, label %8, !dbg !12359

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12360
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !12361
  %6 = icmp ne i32 %5, 0, !dbg !12359
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !12362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12363 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12365, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !12368
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12370, !srcloc !10649
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12370
  call void @llvm.dbg.value(metadata i32 %3, metadata !10646, metadata !DIExpression()) #24, !dbg !12372
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !12372
  call void @llvm.dbg.value(metadata i32 %3, metadata !10640, metadata !DIExpression()) #24, !dbg !12368
  call void @llvm.dbg.value(metadata i32 %3, metadata !12366, metadata !DIExpression()), !dbg !12367
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12373
  %5 = load i8, i8* %4, align 4, !dbg !12373
  %6 = and i8 %5, 1, !dbg !12375
  %7 = icmp eq i8 %6, 0, !dbg !12376
  br i1 %7, label %9, label %8, !dbg !12377

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !12378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !12378
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !12381
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !12383, !srcloc !10675
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !12384, !srcloc !12386
  br label %24, !dbg !12387

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12388
  %11 = load i8, i8* %10, align 1, !dbg !12388
  %12 = and i8 %11, 8, !dbg !12390
  %13 = icmp eq i8 %12, 0, !dbg !12391
  br i1 %13, label %15, label %14, !dbg !12392

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !12393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !12393
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !12396
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !12398, !srcloc !10675
  br label %24, !dbg !12399

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !12400
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12401
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !12403
  br i1 %17, label %18, label %23, !dbg !12404

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12405, !srcloc !11285
  call void @llvm.dbg.value(metadata i32 %19, metadata !11281, metadata !DIExpression()) #24, !dbg !12408
  %20 = icmp eq i32 %19, 0, !dbg !12409
  br i1 %20, label %21, label %23, !dbg !12410

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !11245, metadata !DIExpression()) #24, !dbg !12411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11250, metadata !DIExpression()) #24, !dbg !12411
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !12414
  br label %23, !dbg !12415

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !10661, metadata !DIExpression()) #24, !dbg !12416
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %3, metadata !10669, metadata !DIExpression()) #24, !dbg !12418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !12420, !srcloc !10675
  br label %24, !dbg !12421

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !12421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12422 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12424, metadata !DIExpression()), !dbg !12425
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12426
  %3 = load i8, i8* %2, align 1, !dbg !12426
  %4 = and i8 %3, 8, !dbg !12428
  %5 = icmp eq i8 %4, 0, !dbg !12429
  br i1 %5, label %6, label %20, !dbg !12430

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !12431
  %8 = or i8 %7, 8, !dbg !12431
  store i8 %8, i8* %2, align 1, !dbg !12431
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !12433
  br i1 %9, label %10, label %12, !dbg !12435

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10803, metadata !DIExpression()) #24, !dbg !12436
  %11 = and i8 %8, 95, !dbg !12439
  store i8 %11, i8* %2, align 1, !dbg !12439
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10811, metadata !DIExpression()) #24, !dbg !12440
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !12442
  br label %12, !dbg !12443

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12444
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !12444
  %15 = icmp eq %union.anon* %14, null, !dbg !12446
  br i1 %15, label %17, label %16, !dbg !12447

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !12448
  br label %17, !dbg !12450

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !12451
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12452
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !12453
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !12454
  br label %20, !dbg !12455

20:                                               ; preds = %17, %1
  ret void, !dbg !12456
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !12457 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12461, metadata !DIExpression()), !dbg !12463
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !12464
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12462, metadata !DIExpression()), !dbg !12463
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12465
  br i1 %3, label %10, label %4, !dbg !12466

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !12467
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !12469
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12470, metadata !DIExpression()), !dbg !12476
  call void @llvm.dbg.value(metadata i32 0, metadata !12475, metadata !DIExpression()), !dbg !12476
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !12478
  store i32 0, i32* %7, align 4, !dbg !12479
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !12480
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !12464
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12462, metadata !DIExpression()), !dbg !12463
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !12465
  br i1 %9, label %10, label %4, !dbg !12466, !llvm.loop !12481

10:                                               ; preds = %4, %1
  ret void, !dbg !12483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !12484 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12489, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12488, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !12493
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12495, !srcloc !10649
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12495
  call void @llvm.dbg.value(metadata i32 %4, metadata !10646, metadata !DIExpression()) #24, !dbg !12497
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !12497
  call void @llvm.dbg.value(metadata i32 %4, metadata !10640, metadata !DIExpression()) #24, !dbg !12493
  call void @llvm.dbg.value(metadata i32 %4, metadata !12490, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 0, metadata !12491, metadata !DIExpression()), !dbg !12492
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12498
  %6 = load i8, i8* %5, align 1, !dbg !12498
  %7 = and i8 %6, 8, !dbg !12500
  %8 = icmp eq i8 %7, 0, !dbg !12501
  br i1 %8, label %9, label %24, !dbg !12502

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !12489, metadata !DIExpression()), !dbg !12492
  %11 = icmp eq i64 %10, 0, !dbg !12503
  br i1 %11, label %24, label %12, !dbg !12505

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12506
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !12508
  br i1 %14, label %24, label %15, !dbg !12509

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12510
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !12510
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !12511
  %19 = icmp eq %union.anon* %17, %18, !dbg !12512
  br i1 %19, label %24, label %20, !dbg !12513

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12514
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !12516
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12517
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !12518
  call void @llvm.dbg.value(metadata i32 %4, metadata !11245, metadata !DIExpression()) #24, !dbg !12519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11250, metadata !DIExpression()) #24, !dbg !12519
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !12521
  call void @llvm.dbg.value(metadata i32 %23, metadata !12491, metadata !DIExpression()), !dbg !12492
  br label %26, !dbg !12522

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !12523
  call void @llvm.dbg.value(metadata i32 %25, metadata !12491, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 %4, metadata !10661, metadata !DIExpression()) #24, !dbg !12524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !12524
  call void @llvm.dbg.value(metadata i32 %4, metadata !10669, metadata !DIExpression()) #24, !dbg !12526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !12528, !srcloc !10675
  br label %26, !dbg !12529

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !12492
  ret i32 %27, !dbg !12530
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12531 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12535, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 %1, metadata !12536, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i8* %2, metadata !12537, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i8 0, metadata !12539, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 0, metadata !12540, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10634, metadata !DIExpression()) #24, !dbg !12545
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12547, !srcloc !10649
  call void @llvm.dbg.value(metadata i32 undef, metadata !10646, metadata !DIExpression()) #24, !dbg !12549
  call void @llvm.dbg.value(metadata i32 undef, metadata !10647, metadata !DIExpression()) #24, !dbg !12549
  call void @llvm.dbg.value(metadata i32 undef, metadata !10640, metadata !DIExpression()) #24, !dbg !12545
  call void @llvm.dbg.value(metadata i32 undef, metadata !12542, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i8 poison, metadata !12539, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 undef, metadata !12540, metadata !DIExpression()), !dbg !12544
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !12550
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12538, metadata !DIExpression()), !dbg !12543
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12553
  br i1 %7, label %12, label %8, !dbg !12555

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12556, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata i32 %1, metadata !12561, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata i8* %2, metadata !12562, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12470, metadata !DIExpression()), !dbg !12566
  call void @llvm.dbg.value(metadata i32 %1, metadata !12475, metadata !DIExpression()), !dbg !12566
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !12568
  store i32 %1, i32* %9, align 4, !dbg !12569
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !12570
  store i8* %2, i8** %10, align 4, !dbg !12571
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !12572
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !12573
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !12574
  call void @llvm.dbg.value(metadata i8 1, metadata !12539, metadata !DIExpression()), !dbg !12543
  br label %12, !dbg !12575

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !12547
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !12547
  call void @llvm.dbg.value(metadata i32 %14, metadata !10646, metadata !DIExpression()) #24, !dbg !12549
  call void @llvm.dbg.value(metadata i32 %14, metadata !10640, metadata !DIExpression()) #24, !dbg !12545
  call void @llvm.dbg.value(metadata i32 %14, metadata !12542, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.value(metadata i8 poison, metadata !12539, metadata !DIExpression()), !dbg !12543
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #24, !dbg !12576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10666, metadata !DIExpression()) #24, !dbg !12576
  call void @llvm.dbg.value(metadata i32 undef, metadata !10669, metadata !DIExpression()) #24, !dbg !12578
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !12580, !srcloc !10675
  call void @llvm.dbg.value(metadata i32 undef, metadata !12540, metadata !DIExpression()), !dbg !12544
  ret i1 %13, !dbg !12581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !12582 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12587, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i64 undef, metadata !12589, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12586, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12588, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i8** %4, metadata !12590, metadata !DIExpression()), !dbg !12592
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %6, metadata !12591, metadata !DIExpression()), !dbg !12592
  %7 = icmp eq i8** %4, null, !dbg !12594
  br i1 %7, label %12, label %8, !dbg !12596

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12597
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !12599
  %11 = load i8*, i8** %10, align 4, !dbg !12599
  store i8* %11, i8** %4, align 4, !dbg !12600
  br label %12, !dbg !12601

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !12602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !12603 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !12605
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12608 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !12618, metadata !DIExpression()), !dbg !12635
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12616, metadata !DIExpression()), !dbg !12635
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !12617, metadata !DIExpression()), !dbg !12635
  %5 = icmp eq i64 %4, -1, !dbg !12636
  br i1 %5, label %55, label %6, !dbg !12638

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !12639
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !12640
  call void @llvm.dbg.value(metadata i32 0, metadata !12619, metadata !DIExpression()), !dbg !12641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !12649
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12651, !srcloc !12657
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !12651
  call void @llvm.dbg.value(metadata i32 %9, metadata !12654, metadata !DIExpression()) #24, !dbg !12658
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !12658
  call void @llvm.dbg.value(metadata i32 %9, metadata !12648, metadata !DIExpression()) #24, !dbg !12649
  call void @llvm.dbg.value(metadata i32 %9, metadata !12625, metadata !DIExpression()), !dbg !12641
  call void @llvm.dbg.value(metadata i32 undef, metadata !12619, metadata !DIExpression()), !dbg !12641
  %10 = icmp slt i64 %4, -1, !dbg !12659
  br i1 %10, label %11, label %17, !dbg !12660

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !12661
  %13 = add i64 %4, %12, !dbg !12662
  %14 = sub i64 -2, %13, !dbg !12662
  call void @llvm.dbg.value(metadata i64 %14, metadata !12629, metadata !DIExpression()), !dbg !12663
  %15 = icmp sgt i64 %14, 1, !dbg !12664
  %16 = select i1 %15, i64 %14, i64 1, !dbg !12664
  br label %22, !dbg !12665

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !12666
  %19 = tail call fastcc i32 @elapsed.119() #26, !dbg !12668
  %20 = sext i32 %19 to i64, !dbg !12668
  %21 = add nsw i64 %18, %20, !dbg !12669
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !12670
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !12671
  store i64 %23, i64* %24, align 8, !dbg !12672
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !12673
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !12626, metadata !DIExpression()), !dbg !12675
  %26 = icmp eq %struct._timeout* %25, null, !dbg !12676
  br i1 %26, label %42, label %27, !dbg !12676

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !12677
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !12626, metadata !DIExpression()), !dbg !12675
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !12681
  %31 = load i64, i64* %30, align 8, !dbg !12681
  %32 = icmp slt i64 %28, %31, !dbg !12682
  br i1 %32, label %33, label %38, !dbg !12683

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !12681
  %35 = sub nsw i64 %31, %28, !dbg !12684
  store i64 %35, i64* %34, align 8, !dbg !12684
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !12686
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12687
  tail call fastcc void @sys_dlist_insert.120(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !12688
  br label %44, !dbg !12689

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !12690
  store i64 %39, i64* %24, align 8, !dbg !12690
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !12691
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !12626, metadata !DIExpression()), !dbg !12675
  %41 = icmp eq %struct._timeout* %40, null, !dbg !12676
  br i1 %41, label %42, label %27, !dbg !12676, !llvm.loop !12692

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12694
  tail call fastcc void @sys_dlist_append.121(%struct._dnode* noundef %43) #26, !dbg !12697
  br label %44, !dbg !12698

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !12699
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !12700
  br i1 %46, label %47, label %54, !dbg !12701

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %48, metadata !12632, metadata !DIExpression()), !dbg !12703
  %49 = icmp ne i32 %48, 0, !dbg !12704
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !12706
  br i1 %52, label %54, label %53, !dbg !12706

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !12707
  br label %54, !dbg !12709

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !12710, metadata !DIExpression()) #24, !dbg !12716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !12716
  call void @llvm.dbg.value(metadata i32 %9, metadata !12718, metadata !DIExpression()) #24, !dbg !12721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !12723, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12619, metadata !DIExpression()), !dbg !12641
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !12725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.119() unnamed_addr #1 !dbg !12726 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !12729
  %2 = icmp eq i32 %1, 0, !dbg !12730
  br i1 %2, label %3, label %5, !dbg !12729

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !12731
  br label %5, !dbg !12729

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !12729
  ret i32 %6, !dbg !12732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !12733 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.124() #26, !dbg !12739
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12737, metadata !DIExpression()), !dbg !12740
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !12741
  ret %struct._timeout* %2, !dbg !12742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.120(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !12743 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12747, metadata !DIExpression()), !dbg !12751
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12748, metadata !DIExpression()), !dbg !12751
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12752
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12752
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12749, metadata !DIExpression()), !dbg !12751
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12753
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12754
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12755
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12756
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12757
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12758
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12759
  ret void, !dbg !12760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !12761 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12765, metadata !DIExpression()), !dbg !12767
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12768
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.122(%struct._dnode* noundef %2) #26, !dbg !12769
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12766, metadata !DIExpression()), !dbg !12767
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !12770
  ret %struct._timeout* %4, !dbg !12771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.121(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !12772 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !12777, metadata !DIExpression()), !dbg !12780
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12778, metadata !DIExpression()), !dbg !12780
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !12781
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12779, metadata !DIExpression()), !dbg !12780
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12782
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !12783
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12784
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !12785
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !12786
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12787
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !12788
  ret void, !dbg !12789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !12790 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !12795
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !12792, metadata !DIExpression()), !dbg !12796
  %2 = tail call fastcc i32 @elapsed.119() #26, !dbg !12797
  call void @llvm.dbg.value(metadata i32 %2, metadata !12793, metadata !DIExpression()), !dbg !12796
  %3 = icmp eq %struct._timeout* %1, null, !dbg !12798
  br i1 %3, label %14, label %4, !dbg !12800

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !12801
  %6 = load i64, i64* %5, align 8, !dbg !12801
  %7 = sext i32 %2 to i64, !dbg !12802
  %8 = sub nsw i64 %6, %7, !dbg !12803
  %9 = icmp sgt i64 %8, 2147483647, !dbg !12804
  br i1 %9, label %14, label %10, !dbg !12805

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !12806
  %12 = select i1 %11, i64 %8, i64 0, !dbg !12806
  %13 = trunc i64 %12 to i32, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %13, metadata !12794, metadata !DIExpression()), !dbg !12796
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !12808
  call void @llvm.dbg.value(metadata i32 %15, metadata !12794, metadata !DIExpression()), !dbg !12796
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12809
  %17 = icmp ne i32 %16, 0, !dbg !12811
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !12812
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !12812
  call void @llvm.dbg.value(metadata i32 %20, metadata !12794, metadata !DIExpression()), !dbg !12796
  ret i32 %20, !dbg !12813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.122(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12814 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !12818, metadata !DIExpression()), !dbg !12820
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12819, metadata !DIExpression()), !dbg !12820
  %2 = icmp eq %struct._dnode* %0, null, !dbg !12821
  br i1 %2, label %5, label %3, !dbg !12822

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.123(%struct._dnode* noundef nonnull %0) #26, !dbg !12823
  br label %5, !dbg !12822

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !12822
  ret %struct._dnode* %6, !dbg !12824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.123(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12825 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !12827, metadata !DIExpression()), !dbg !12829
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12828, metadata !DIExpression()), !dbg !12829
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !12830
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !12831
  br i1 %3, label %7, label %4, !dbg !12832

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12833
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !12833
  br label %7, !dbg !12832

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !12832
  ret %struct._dnode* %8, !dbg !12834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.124() unnamed_addr #5 !dbg !12835 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !12839, metadata !DIExpression()), !dbg !12840
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.125() #26, !dbg !12841
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !12841
  ret %struct._dnode* %3, !dbg !12842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.125() unnamed_addr #5 !dbg !12843 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !12847, metadata !DIExpression()), !dbg !12848
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !12849
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !12850
  ret i1 %2, !dbg !12851
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !12852 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12856, metadata !DIExpression()), !dbg !12861
  call void @llvm.dbg.value(metadata i32 -22, metadata !12857, metadata !DIExpression()), !dbg !12861
  call void @llvm.dbg.value(metadata i32 0, metadata !12858, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !12863
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12865, !srcloc !12657
  call void @llvm.dbg.value(metadata i32 undef, metadata !12654, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()) #24, !dbg !12863
  call void @llvm.dbg.value(metadata i32 undef, metadata !12860, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata i32 -22, metadata !12857, metadata !DIExpression()), !dbg !12861
  call void @llvm.dbg.value(metadata i32 undef, metadata !12858, metadata !DIExpression()), !dbg !12862
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !12857, metadata !DIExpression()), !dbg !12861
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.128(%struct._dnode* noundef %3) #26, !dbg !12868
  br i1 %4, label %5, label %6, !dbg !12872

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !12873
  call void @llvm.dbg.value(metadata i32 0, metadata !12857, metadata !DIExpression()), !dbg !12861
  br label %6, !dbg !12875

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !12861
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12865
  call void @llvm.dbg.value(metadata i32 %8, metadata !12654, metadata !DIExpression()) #24, !dbg !12867
  call void @llvm.dbg.value(metadata i32 %8, metadata !12648, metadata !DIExpression()) #24, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %8, metadata !12860, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.value(metadata i32 %7, metadata !12857, metadata !DIExpression()), !dbg !12861
  call void @llvm.dbg.value(metadata i32 undef, metadata !12710, metadata !DIExpression()) #24, !dbg !12876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !12876
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #24, !dbg !12878
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !12880, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12858, metadata !DIExpression()), !dbg !12862
  ret i32 %7, !dbg !12881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.128(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12882 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12890
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12890
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12891
  ret i1 %4, !dbg !12892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !12893 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12895, metadata !DIExpression()), !dbg !12896
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !12897
  %3 = icmp eq %struct._timeout* %2, null, !dbg !12899
  br i1 %3, label %10, label %4, !dbg !12900

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !12901
  %6 = load i64, i64* %5, align 8, !dbg !12901
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !12903
  %8 = load i64, i64* %7, align 8, !dbg !12904
  %9 = add nsw i64 %8, %6, !dbg !12904
  store i64 %9, i64* %7, align 8, !dbg !12904
  br label %10, !dbg !12905

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12906
  tail call fastcc void @sys_dlist_remove.129(%struct._dnode* noundef %11) #26, !dbg !12907
  ret void, !dbg !12908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.129(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12909 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12913, metadata !DIExpression()), !dbg !12916
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12917
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12917
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12914, metadata !DIExpression()), !dbg !12916
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12918
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12918
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12915, metadata !DIExpression()), !dbg !12916
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12919
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12920
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12921
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12922
  tail call fastcc void @sys_dnode_init.130(%struct._dnode* noundef %0) #26, !dbg !12923
  ret void, !dbg !12924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.130(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12925 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12927, metadata !DIExpression()), !dbg !12928
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12929
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12930
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12931
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12932
  ret void, !dbg !12933
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !12934 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12940, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i64 0, metadata !12941, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i32 0, metadata !12942, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !12947
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12949, !srcloc !12657
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12949
  call void @llvm.dbg.value(metadata i32 %3, metadata !12654, metadata !DIExpression()) #24, !dbg !12951
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !12951
  call void @llvm.dbg.value(metadata i32 %3, metadata !12648, metadata !DIExpression()) #24, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %3, metadata !12944, metadata !DIExpression()), !dbg !12946
  call void @llvm.dbg.value(metadata i64 0, metadata !12941, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i32 undef, metadata !12942, metadata !DIExpression()), !dbg !12946
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !12952
  call void @llvm.dbg.value(metadata i64 %4, metadata !12941, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i32 %3, metadata !12710, metadata !DIExpression()) #24, !dbg !12955
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !12955
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #24, !dbg !12957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !12959, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12942, metadata !DIExpression()), !dbg !12946
  ret i64 %4, !dbg !12960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12963, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i64 0, metadata !12964, metadata !DIExpression()), !dbg !12967
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.131(%struct._timeout* noundef %0) #26, !dbg !12968
  br i1 %2, label %21, label %3, !dbg !12970

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !12971
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !12965, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata i64 0, metadata !12964, metadata !DIExpression()), !dbg !12967
  %5 = icmp eq %struct._timeout* %4, null, !dbg !12973
  br i1 %5, label %16, label %6, !dbg !12975

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !12965, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata i64 %8, metadata !12964, metadata !DIExpression()), !dbg !12967
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !12976
  %10 = load i64, i64* %9, align 8, !dbg !12976
  %11 = add nsw i64 %10, %8, !dbg !12978
  call void @llvm.dbg.value(metadata i64 %11, metadata !12964, metadata !DIExpression()), !dbg !12967
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !12979
  br i1 %12, label %16, label %13, !dbg !12981

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !12982
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !12965, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata i64 %11, metadata !12964, metadata !DIExpression()), !dbg !12967
  %15 = icmp eq %struct._timeout* %14, null, !dbg !12973
  br i1 %15, label %16, label %6, !dbg !12975, !llvm.loop !12983

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !12967
  call void @llvm.dbg.value(metadata i64 %17, metadata !12964, metadata !DIExpression()), !dbg !12967
  %18 = tail call fastcc i32 @elapsed.119() #26, !dbg !12985
  %19 = sext i32 %18 to i64, !dbg !12985
  %20 = sub nsw i64 %17, %19, !dbg !12986
  br label %21, !dbg !12987

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !12967
  ret i64 %22, !dbg !12988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.131(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12989 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12993, metadata !DIExpression()), !dbg !12994
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12995
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.128(%struct._dnode* noundef %2) #26, !dbg !12996
  %4 = xor i1 %3, true, !dbg !12997
  ret i1 %4, !dbg !12998
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !12999 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13001, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i64 0, metadata !13002, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i32 0, metadata !13003, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !13008
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13010, !srcloc !12657
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %3, metadata !12654, metadata !DIExpression()) #24, !dbg !13012
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %3, metadata !12648, metadata !DIExpression()) #24, !dbg !13008
  call void @llvm.dbg.value(metadata i32 %3, metadata !13005, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.value(metadata i64 0, metadata !13002, metadata !DIExpression()), !dbg !13006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()), !dbg !13007
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13013
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !13016
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13002, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13006
  call void @llvm.dbg.value(metadata i32 %3, metadata !12710, metadata !DIExpression()) #24, !dbg !13017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !13017
  call void @llvm.dbg.value(metadata i32 %3, metadata !12718, metadata !DIExpression()) #24, !dbg !13019
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !13021, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13003, metadata !DIExpression()), !dbg !13007
  %6 = add i64 %5, %4, !dbg !13022
  ret i64 %6, !dbg !13023
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13024 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 0, metadata !13027, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !13032
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13034, !srcloc !12657
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13034
  call void @llvm.dbg.value(metadata i32 %2, metadata !12654, metadata !DIExpression()) #24, !dbg !13036
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %2, metadata !12648, metadata !DIExpression()) #24, !dbg !13032
  call void @llvm.dbg.value(metadata i32 %2, metadata !13029, metadata !DIExpression()), !dbg !13031
  call void @llvm.dbg.value(metadata i32 -1, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()), !dbg !13031
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %3, metadata !13026, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.value(metadata i32 %2, metadata !12710, metadata !DIExpression()) #24, !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !13040
  call void @llvm.dbg.value(metadata i32 %2, metadata !12718, metadata !DIExpression()) #24, !dbg !13042
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !13044, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13027, metadata !DIExpression()), !dbg !13031
  ret i32 %3, !dbg !13045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13048, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.value(metadata i1 %1, metadata !13049, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13058
  call void @llvm.dbg.value(metadata i32 0, metadata !13050, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !13060
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13062, !srcloc !12657
  call void @llvm.dbg.value(metadata i32 undef, metadata !12654, metadata !DIExpression()) #24, !dbg !13064
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !13064
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()) #24, !dbg !13060
  call void @llvm.dbg.value(metadata i32 undef, metadata !13052, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 undef, metadata !13050, metadata !DIExpression()), !dbg !13059
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %4, metadata !13053, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.value(metadata i1 undef, metadata !13056, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13066
  %5 = icmp slt i32 %4, 2, !dbg !13067
  call void @llvm.dbg.value(metadata i1 %5, metadata !13057, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13066
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !13068
  call void @llvm.dbg.value(metadata i1 %6, metadata !13056, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13066
  br i1 %7, label %11, label %8, !dbg !13068

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !13070
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !13070
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !13072
  br label %11, !dbg !13073

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13062
  call void @llvm.dbg.value(metadata i32 %12, metadata !12654, metadata !DIExpression()) #24, !dbg !13064
  call void @llvm.dbg.value(metadata i32 %12, metadata !12648, metadata !DIExpression()) #24, !dbg !13060
  call void @llvm.dbg.value(metadata i32 %12, metadata !13052, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 undef, metadata !12710, metadata !DIExpression()) #24, !dbg !13074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !13074
  call void @llvm.dbg.value(metadata i32 undef, metadata !12718, metadata !DIExpression()) #24, !dbg !13076
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !13078, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 1, metadata !13050, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 undef, metadata !13050, metadata !DIExpression()), !dbg !13059
  ret void, !dbg !13079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !13080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13084, metadata !DIExpression()), !dbg !13089
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !13090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !13091
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13093, !srcloc !12657
  call void @llvm.dbg.value(metadata i32 undef, metadata !12654, metadata !DIExpression()) #24, !dbg !13095
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !13095
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()) #24, !dbg !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13085, metadata !DIExpression()), !dbg !13089
  store i32 %0, i32* @announce_remaining, align 4, !dbg !13089
  call void @llvm.dbg.value(metadata i32 undef, metadata !13085, metadata !DIExpression()), !dbg !13089
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !13096
  %4 = icmp eq %struct._timeout* %3, null, !dbg !13097
  br i1 %4, label %28, label %5, !dbg !13098

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !13099
  %10 = load i64, i64* %9, align 8, !dbg !13099
  %11 = sext i32 %8 to i64, !dbg !13100
  %12 = icmp sgt i64 %10, %11, !dbg !13101
  br i1 %12, label %26, label %13, !dbg !13102

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !13089
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !13086, metadata !DIExpression()), !dbg !13103
  %15 = trunc i64 %10 to i32, !dbg !13104
  call void @llvm.dbg.value(metadata i32 %15, metadata !13088, metadata !DIExpression()), !dbg !13103
  %16 = sext i32 %15 to i64, !dbg !13105
  %17 = load i64, i64* @curr_tick, align 8, !dbg !13106
  %18 = add i64 %17, %16, !dbg !13106
  store i64 %18, i64* @curr_tick, align 8, !dbg !13106
  store i64 0, i64* %9, align 8, !dbg !13107
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !13108
  call void @llvm.dbg.value(metadata i32 %14, metadata !12710, metadata !DIExpression()) #24, !dbg !13109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %14, metadata !12718, metadata !DIExpression()) #24, !dbg !13111
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !13113, !srcloc !12724
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !13114
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !13114
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !13115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !13116
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13118, !srcloc !12657
  call void @llvm.dbg.value(metadata i32 undef, metadata !12654, metadata !DIExpression()) #24, !dbg !13120
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !13120
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()) #24, !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !13085, metadata !DIExpression()), !dbg !13089
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !13121
  %23 = sub nsw i32 %22, %15, !dbg !13121
  store i32 %23, i32* @announce_remaining, align 4, !dbg !13089
  call void @llvm.dbg.value(metadata i32 undef, metadata !13085, metadata !DIExpression()), !dbg !13089
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !13096
  %25 = icmp eq %struct._timeout* %24, null, !dbg !13097
  br i1 %25, label %28, label %5, !dbg !13098, !llvm.loop !13122

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !13124
  store i64 %27, i64* %9, align 8, !dbg !13124
  br label %32, !dbg !13127

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !13089
  %31 = sext i32 %30 to i64, !dbg !13128
  br label %32, !dbg !13128

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !13128
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !13089
  %36 = load i64, i64* @curr_tick, align 8, !dbg !13129
  %37 = add i64 %36, %33, !dbg !13129
  store i64 %37, i64* @curr_tick, align 8, !dbg !13129
  store i32 0, i32* @announce_remaining, align 4, !dbg !13130
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !13131
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !13132
  call void @llvm.dbg.value(metadata i32 %35, metadata !12710, metadata !DIExpression()) #24, !dbg !13133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !13133
  call void @llvm.dbg.value(metadata i32 %35, metadata !12718, metadata !DIExpression()) #24, !dbg !13135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !13137, !srcloc !12724
  ret void, !dbg !13138
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !13139 {
  call void @llvm.dbg.value(metadata i64 0, metadata !13143, metadata !DIExpression()), !dbg !13147
  call void @llvm.dbg.value(metadata i32 0, metadata !13144, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12642, metadata !DIExpression()) #24, !dbg !13149
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13151, !srcloc !12657
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13151
  call void @llvm.dbg.value(metadata i32 %2, metadata !12654, metadata !DIExpression()) #24, !dbg !13153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12655, metadata !DIExpression()) #24, !dbg !13153
  call void @llvm.dbg.value(metadata i32 %2, metadata !12648, metadata !DIExpression()) #24, !dbg !13149
  call void @llvm.dbg.value(metadata i32 %2, metadata !13146, metadata !DIExpression()), !dbg !13148
  call void @llvm.dbg.value(metadata i64 0, metadata !13143, metadata !DIExpression()), !dbg !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !13144, metadata !DIExpression()), !dbg !13148
  %3 = load i64, i64* @curr_tick, align 8, !dbg !13154
  %4 = tail call fastcc i32 @elapsed.119() #26, !dbg !13157
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !13143, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13147
  call void @llvm.dbg.value(metadata i32 %2, metadata !12710, metadata !DIExpression()) #24, !dbg !13158
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12715, metadata !DIExpression()) #24, !dbg !13158
  call void @llvm.dbg.value(metadata i32 %2, metadata !12718, metadata !DIExpression()) #24, !dbg !13160
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !13162, !srcloc !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !13144, metadata !DIExpression()), !dbg !13148
  %5 = sext i32 %4 to i64, !dbg !13157
  %6 = add i64 %3, %5, !dbg !13163
  ret i64 %6, !dbg !13164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !13165 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !13166
  %2 = trunc i64 %1 to i32, !dbg !13167
  ret i32 %2, !dbg !13168
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !13169 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !13170
  ret i64 %1, !dbg !13171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !13172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13174, metadata !DIExpression()), !dbg !13181
  %2 = icmp eq i32 %0, 0, !dbg !13182
  br i1 %2, label %10, label %3, !dbg !13184

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !13185
  call void @llvm.dbg.value(metadata i32 %4, metadata !13175, metadata !DIExpression()), !dbg !13181
  %5 = mul i32 %0, 84, !dbg !13186
  call void @llvm.dbg.value(metadata i32 %5, metadata !13176, metadata !DIExpression()), !dbg !13181
  br label %6, !dbg !13187

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %7, metadata !13177, metadata !DIExpression()), !dbg !13189
  %8 = sub i32 %7, %4, !dbg !13190
  %9 = icmp ult i32 %8, %5, !dbg !13192
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !13193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !13194 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !13195
  ret i32 %1, !dbg !13196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !13197 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !13199
  ret i32 %1, !dbg !13200
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !13201 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13205, metadata !DIExpression()), !dbg !13207
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !13208

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !13209
  br label %14, !dbg !13213

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13206, metadata !DIExpression()), !dbg !13207
  %6 = icmp slt i64 %2, -1, !dbg !13214
  br i1 %6, label %7, label %9, !dbg !13217

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !13218
  br label %14, !dbg !13219

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !13221
  %11 = icmp ugt i64 %2, 1, !dbg !13222
  %12 = select i1 %11, i64 %2, i64 1, !dbg !13222
  %13 = add nsw i64 %10, %12, !dbg !13223
  br label %14, !dbg !13224

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !13225
  ret i64 %15, !dbg !13226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !13227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13230, metadata !DIExpression()), !dbg !13263
  %2 = icmp eq i8* %0, null, !dbg !13264
  br i1 %2, label %7, label %3, !dbg !13266

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !13231, metadata !DIExpression()), !dbg !13263
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !13267
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !13267
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !13231, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.value(metadata i8* %4, metadata !13230, metadata !DIExpression()), !dbg !13263
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !13269
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #25, !dbg !13270
  br label %7, !dbg !13271

7:                                                ; preds = %3, %1
  ret void, !dbg !13272
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13277, metadata !DIExpression()), !dbg !13281
  call void @llvm.dbg.value(metadata i32 %1, metadata !13278, metadata !DIExpression()), !dbg !13281
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !13282
  br i1 %3, label %11, label %4, !dbg !13284

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13285
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !13287
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !13287
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !13280, metadata !DIExpression()), !dbg !13281
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !13288
  br i1 %8, label %11, label %9, !dbg !13290

9:                                                ; preds = %4
  %10 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %7, i32 noundef %0, i32 noundef %1) #26, !dbg !13291
  call void @llvm.dbg.value(metadata i8* %10, metadata !13279, metadata !DIExpression()), !dbg !13281
  br label %11, !dbg !13293

11:                                               ; preds = %2, %4, %9
  %12 = phi i8* [ %10, %9 ], [ null, %4 ], [ null, %2 ], !dbg !13294
  call void @llvm.dbg.value(metadata i8* %12, metadata !13279, metadata !DIExpression()), !dbg !13281
  ret i8* %12, !dbg !13295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13296 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !13300, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 %1, metadata !13301, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 %2, metadata !13302, metadata !DIExpression()), !dbg !13306
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !13302, metadata !DIExpression(DW_OP_deref)), !dbg !13306
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13307
  br i1 %5, label %14, label %6, !dbg !13309

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %7, metadata !13305, metadata !DIExpression()), !dbg !13306
  %8 = load i32, i32* %4, align 4, !dbg !13311
  call void @llvm.dbg.value(metadata i32 %8, metadata !13302, metadata !DIExpression()), !dbg !13306
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #25, !dbg !13312
  call void @llvm.dbg.value(metadata i8* %9, metadata !13303, metadata !DIExpression()), !dbg !13306
  %10 = icmp eq i8* %9, null, !dbg !13313
  br i1 %10, label %14, label %11, !dbg !13315

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !13316
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !13304, metadata !DIExpression()), !dbg !13306
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !13317
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !13318
  call void @llvm.dbg.value(metadata i8* %13, metadata !13304, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i8* %13, metadata !13303, metadata !DIExpression()), !dbg !13306
  br label %14, !dbg !13319

14:                                               ; preds = %6, %3, %11
  %15 = phi i8* [ %13, %11 ], [ null, %3 ], [ null, %6 ], !dbg !13306
  ret i8* %15, !dbg !13320
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !13321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13326, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 4, metadata !13327, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32* %1, metadata !13328, metadata !DIExpression()), !dbg !13329
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !13330
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !13330
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !13330
  store i32 %5, i32* %1, align 4, !dbg !13330
  ret i1 %4, !dbg !13331
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !13332 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.144, i32 0, i32 0)) #25, !dbg !13334
  ret void, !dbg !13335
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !13336 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13338, metadata !DIExpression()), !dbg !13358
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !13339, metadata !DIExpression()), !dbg !13359
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !13360

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !13361

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !13339, metadata !DIExpression()), !dbg !13359
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !13362
  %6 = load i8*, i8** %5, align 4, !dbg !13362
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !13366
  %8 = load i32, i32* %7, align 4, !dbg !13366
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !13367
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !13368
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !13339, metadata !DIExpression()), !dbg !13359
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !13369
  br i1 %10, label %3, label %2, !dbg !13360, !llvm.loop !13371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13373 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !13377, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i8* %1, metadata !13378, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i32 %2, metadata !13379, metadata !DIExpression()), !dbg !13380
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !13381
  tail call fastcc void @z_waitq_init.146(%union.anon* noundef nonnull %4) #26, !dbg !13382
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !13383
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !13384
  ret void, !dbg !13385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.146(%union.anon* noundef %0) unnamed_addr #4 !dbg !13386 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13391, metadata !DIExpression()), !dbg !13392
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13393
  tail call fastcc void @sys_dlist_init.147(%struct._dnode* noundef %2) #26, !dbg !13394
  ret void, !dbg !13395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.147(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13396 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13401, metadata !DIExpression()), !dbg !13402
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13403
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13404
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13405
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13406
  ret void, !dbg !13407
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13408 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !13419, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !13416, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %1, metadata !13417, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %2, metadata !13418, metadata !DIExpression()), !dbg !13429
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !13430
  call void @llvm.dbg.value(metadata i64 %6, metadata !13421, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8* null, metadata !13422, metadata !DIExpression()), !dbg !13429
  %7 = icmp eq i64 %5, -1, !dbg !13431
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !13431
  call void @llvm.dbg.value(metadata i64 %8, metadata !13421, metadata !DIExpression()), !dbg !13429
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !13432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13433, metadata !DIExpression()) #24, !dbg !13440
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13442, !srcloc !13448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13445, metadata !DIExpression()) #24, !dbg !13449
  call void @llvm.dbg.value(metadata i32 undef, metadata !13446, metadata !DIExpression()) #24, !dbg !13449
  call void @llvm.dbg.value(metadata i32 undef, metadata !13439, metadata !DIExpression()) #24, !dbg !13440
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 0, metadata !13428, metadata !DIExpression()), !dbg !13429
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !13422, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8 0, metadata !13428, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13429
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !13450
  call void @llvm.dbg.value(metadata i8* %12, metadata !13422, metadata !DIExpression()), !dbg !13429
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !13452
  call void @llvm.dbg.value(metadata i64 %13, metadata !13420, metadata !DIExpression()), !dbg !13429
  %14 = icmp eq i8* %12, null, !dbg !13453
  br i1 %14, label %15, label %31, !dbg !13455

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13429
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !13455

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !13428, metadata !DIExpression()), !dbg !13429
  %20 = sub nsw i64 %8, %18, !dbg !13456
  %21 = icmp slt i64 %20, 1, !dbg !13457
  br i1 %21, label %31, label %22, !dbg !13458

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13429
  call void @llvm.dbg.value(metadata i8 undef, metadata !13428, metadata !DIExpression()), !dbg !13429
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13459
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !13459
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !13459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13433, metadata !DIExpression()) #24, !dbg !13460
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13462, !srcloc !13448
  call void @llvm.dbg.value(metadata i32 undef, metadata !13445, metadata !DIExpression()) #24, !dbg !13464
  call void @llvm.dbg.value(metadata i32 undef, metadata !13446, metadata !DIExpression()) #24, !dbg !13464
  call void @llvm.dbg.value(metadata i32 undef, metadata !13439, metadata !DIExpression()) #24, !dbg !13460
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i8* null, metadata !13422, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 undef, metadata !13423, metadata !DIExpression()), !dbg !13429
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !13450
  call void @llvm.dbg.value(metadata i8* %28, metadata !13422, metadata !DIExpression()), !dbg !13429
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !13452
  call void @llvm.dbg.value(metadata i64 %29, metadata !13420, metadata !DIExpression()), !dbg !13429
  %30 = icmp eq i8* %28, null, !dbg !13453
  br i1 %30, label %17, label %31, !dbg !13455, !llvm.loop !13465

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !13450
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !13429
  call void @llvm.dbg.value(metadata i8* %33, metadata !13422, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %34, metadata !13468, metadata !DIExpression()) #24, !dbg !13474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13473, metadata !DIExpression()) #24, !dbg !13474
  call void @llvm.dbg.value(metadata i32 %34, metadata !13476, metadata !DIExpression()) #24, !dbg !13479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !13481, !srcloc !13482
  ret i8* %33, !dbg !13483
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13484 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13490, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !13488, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.value(metadata i32 %1, metadata !13489, metadata !DIExpression()), !dbg !13492
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !13493
  call void @llvm.dbg.value(metadata i8* %4, metadata !13491, metadata !DIExpression()), !dbg !13492
  ret i8* %4, !dbg !13494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13495 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !13499, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata i8* %1, metadata !13500, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13433, metadata !DIExpression()) #24, !dbg !13503
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13505, !srcloc !13448
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13505
  call void @llvm.dbg.value(metadata i32 %4, metadata !13445, metadata !DIExpression()) #24, !dbg !13507
  call void @llvm.dbg.value(metadata i32 undef, metadata !13446, metadata !DIExpression()) #24, !dbg !13507
  call void @llvm.dbg.value(metadata i32 %4, metadata !13439, metadata !DIExpression()) #24, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %4, metadata !13501, metadata !DIExpression()), !dbg !13502
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !13508
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !13509
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !13510
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !13512
  %8 = icmp eq i32 %7, 0, !dbg !13513
  br i1 %8, label %12, label %9, !dbg !13514

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !13515
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !13516
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !13516
  br label %13, !dbg !13518

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !13468, metadata !DIExpression()) #24, !dbg !13519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13473, metadata !DIExpression()) #24, !dbg !13519
  call void @llvm.dbg.value(metadata i32 %4, metadata !13476, metadata !DIExpression()) #24, !dbg !13522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !13524, !srcloc !13482
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !13525
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!777, !2, !1928, !1930, !27, !1932, !1934, !1968, !2005, !111, !2007, !2047, !216, !2049, !2060, !2107, !2109, !2137, !2165, !2208, !2279, !2324, !386, !527, !2352, !562, !572, !597, !786, !896, !1113, !2357, !1282, !2359, !1353, !2362, !1359, !1720, !2380, !2382, !1743, !2423, !1858, !2426, !2428, !1897}
!llvm.ident = !{!2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430, !2430}
!llvm.module.flags = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_atmel_sam3x_init", scope: !111, file: !177, line: 235, type: !178, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !113, globals: !176, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/sam3x/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!113 = !{!102, !103, !114, !126}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "Efc", file: !116, line: 46, baseType: !117)
!116 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/efc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 41, size: 128, elements: !118)
!118 = !{!119, !122, !123, !125}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FMR", scope: !117, file: !116, line: 42, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FCR", scope: !117, file: !116, line: 43, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FSR", scope: !117, file: !116, line: 44, baseType: !124, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FRR", scope: !117, file: !116, line: 45, baseType: !124, size: 32, offset: 96)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pmc", file: !128, line: 75, baseType: !129)
!128 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/pmc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 41, size: 2176, elements: !130)
!130 = !{!131, !132, !133, !134, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !154, !158, !159, !160, !161, !162, !163, !164, !165, !169, !170, !171, !172, !173, !174, !175}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCER", scope: !129, file: !128, line: 42, baseType: !120, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCDR", scope: !129, file: !128, line: 43, baseType: !120, size: 32, offset: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCSR", scope: !129, file: !128, line: 44, baseType: !124, size: 32, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !129, file: !128, line: 45, baseType: !135, size: 32, offset: 96)
!135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 32, elements: !136)
!136 = !{!137}
!137 = !DISubrange(count: 1)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER0", scope: !129, file: !128, line: 46, baseType: !120, size: 32, offset: 128)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR0", scope: !129, file: !128, line: 47, baseType: !120, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR0", scope: !129, file: !128, line: 48, baseType: !124, size: 32, offset: 192)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_UCKR", scope: !129, file: !128, line: 49, baseType: !120, size: 32, offset: 224)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MOR", scope: !129, file: !128, line: 50, baseType: !120, size: 32, offset: 256)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MCFR", scope: !129, file: !128, line: 51, baseType: !124, size: 32, offset: 288)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_PLLAR", scope: !129, file: !128, line: 52, baseType: !120, size: 32, offset: 320)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !129, file: !128, line: 53, baseType: !135, size: 32, offset: 352)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_MCKR", scope: !129, file: !128, line: 54, baseType: !120, size: 32, offset: 384)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !129, file: !128, line: 55, baseType: !135, size: 32, offset: 416)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_USB", scope: !129, file: !128, line: 56, baseType: !120, size: 32, offset: 448)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !129, file: !128, line: 57, baseType: !135, size: 32, offset: 480)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCK", scope: !129, file: !128, line: 58, baseType: !151, size: 96, offset: 512)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 96, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 3)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !129, file: !128, line: 59, baseType: !155, size: 160, offset: 608)
!155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 160, elements: !156)
!156 = !{!157}
!157 = !DISubrange(count: 5)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IER", scope: !129, file: !128, line: 60, baseType: !120, size: 32, offset: 768)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IDR", scope: !129, file: !128, line: 61, baseType: !120, size: 32, offset: 800)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SR", scope: !129, file: !128, line: 62, baseType: !124, size: 32, offset: 832)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IMR", scope: !129, file: !128, line: 63, baseType: !124, size: 32, offset: 864)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSMR", scope: !129, file: !128, line: 64, baseType: !120, size: 32, offset: 896)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSPR", scope: !129, file: !128, line: 65, baseType: !120, size: 32, offset: 928)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FOCR", scope: !129, file: !128, line: 66, baseType: !120, size: 32, offset: 960)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !129, file: !128, line: 67, baseType: !166, size: 832, offset: 992)
!166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 832, elements: !167)
!167 = !{!168}
!168 = !DISubrange(count: 26)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPMR", scope: !129, file: !128, line: 68, baseType: !120, size: 32, offset: 1824)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPSR", scope: !129, file: !128, line: 69, baseType: !124, size: 32, offset: 1856)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !129, file: !128, line: 70, baseType: !155, size: 160, offset: 1888)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER1", scope: !129, file: !128, line: 71, baseType: !120, size: 32, offset: 2048)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR1", scope: !129, file: !128, line: 72, baseType: !120, size: 32, offset: 2080)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR1", scope: !129, file: !128, line: 73, baseType: !124, size: 32, offset: 2112)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCR", scope: !129, file: !128, line: 74, baseType: !120, size: 32, offset: 2144)
!176 = !{!109}
!177 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/sam3x/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !181)
!180 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!181 = !{!182, !213}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !179, file: !180, line: 60, baseType: !183, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!184 = !DISubroutineType(types: !185)
!185 = !{!103, !186}
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !190)
!189 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!190 = !{!191, !195, !196, !197, !206, !207}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !188, file: !189, line: 380, baseType: !192, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!194 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !188, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !188, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !188, file: !189, line: 386, baseType: !198, size: 32, offset: 96)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !200)
!200 = !{!201, !204}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !199, file: !189, line: 359, baseType: !202, size: 8)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !203)
!203 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !199, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!205 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !188, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !188, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !189, line: 43, baseType: !211)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !212)
!212 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !179, file: !180, line: 65, baseType: !186, size: 32, offset: 32)
!214 = !DIGlobalVariableExpression(var: !215, expr: !DIExpression())
!215 = distinct !DIGlobalVariable(name: "free_queue", scope: !216, file: !313, line: 17, type: !314, isLocal: true, isDefinition: true, align: 32)
!216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !217, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !218, globals: !310, splitDebugInlining: false, nameTableKind: None)
!217 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!218 = !{!102, !219, !223, !103, !225}
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !220, line: 46, baseType: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !222)
!222 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !224, line: 214, baseType: !32)
!224 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !228, line: 336, size: 608, elements: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = !{!230, !250, !254, !258, !271, !276, !282, !288, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !227, file: !228, line: 365, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!232 = !DISubroutineType(types: !233)
!233 = !{!103, !234, !249}
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !237)
!237 = !{!238, !239, !240, !241, !247, !248}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !236, file: !189, line: 380, baseType: !192, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !236, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !236, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !236, file: !189, line: 386, baseType: !242, size: 32, offset: 96)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !243, file: !189, line: 359, baseType: !202, size: 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !243, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !236, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !236, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !227, file: !228, line: 366, baseType: !251, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!252 = !DISubroutineType(types: !253)
!253 = !{null, !234, !203}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !227, file: !228, line: 374, baseType: !255, size: 32, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{!103, !234}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !227, file: !228, line: 377, baseType: !259, size: 32, offset: 96)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DISubroutineType(types: !261)
!261 = !{!103, !234, !262}
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !228, line: 122, size: 64, elements: !265)
!265 = !{!266, !267, !268, !269, !270}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !264, file: !228, line: 123, baseType: !121, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !264, file: !228, line: 124, baseType: !202, size: 8, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !264, file: !228, line: 125, baseType: !202, size: 8, offset: 40)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !264, file: !228, line: 126, baseType: !202, size: 8, offset: 48)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !264, file: !228, line: 127, baseType: !202, size: 8, offset: 56)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !227, file: !228, line: 379, baseType: !272, size: 32, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 32)
!273 = !DISubroutineType(types: !274)
!274 = !{!103, !234, !275}
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !227, file: !228, line: 384, baseType: !277, size: 32, offset: 160)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DISubroutineType(types: !279)
!279 = !{!103, !234, !280, !103}
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !227, file: !228, line: 393, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!103, !234, !286, !287}
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !227, file: !228, line: 402, baseType: !289, size: 32, offset: 224)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !234}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !227, file: !228, line: 405, baseType: !289, size: 32, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !227, file: !228, line: 408, baseType: !255, size: 32, offset: 288)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !227, file: !228, line: 411, baseType: !289, size: 32, offset: 320)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !227, file: !228, line: 414, baseType: !289, size: 32, offset: 352)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !227, file: !228, line: 417, baseType: !255, size: 32, offset: 384)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !227, file: !228, line: 420, baseType: !255, size: 32, offset: 416)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !227, file: !228, line: 423, baseType: !289, size: 32, offset: 448)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !227, file: !228, line: 426, baseType: !289, size: 32, offset: 480)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !227, file: !228, line: 429, baseType: !255, size: 32, offset: 512)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !227, file: !228, line: 432, baseType: !255, size: 32, offset: 544)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !227, file: !228, line: 435, baseType: !303, size: 32, offset: 576)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 32)
!304 = !DISubroutineType(types: !305)
!305 = !{null, !234, !306, !102}
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !228, line: 142, baseType: !307)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = !DISubroutineType(types: !309)
!309 = !{null, !234, !102}
!310 = !{!214, !311, !358, !379}
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "used_queue", scope: !216, file: !313, line: 18, type: !314, isLocal: true, isDefinition: true, align: 32)
!313 = !DIFile(filename: "zephyr/subsys/console/getline.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !315, line: 2208, size: 128, elements: !316)
!315 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!316 = !{!317}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !314, file: !315, line: 2209, baseType: !318, size: 128)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !315, line: 1709, size: 128, elements: !319)
!319 = !{!320, !333, !337}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !318, file: !315, line: 1710, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !322, line: 46, baseType: !323)
!322 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !322, line: 41, size: 64, elements: !324)
!324 = !{!325, !332}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !322, line: 42, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !322, line: 39, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !322, line: 35, size: 32, elements: !329)
!329 = !{!330}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !328, file: !322, line: 36, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !322, line: 32, baseType: !121)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !323, file: !322, line: 43, baseType: !326, size: 32, offset: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !318, file: !315, line: 1711, baseType: !334, offset: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !318, file: !315, line: 1712, baseType: !338, size: 64, offset: 64)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !340)
!339 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !341)
!341 = !{!342}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !340, file: !339, line: 232, baseType: !343, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !345)
!344 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !346)
!346 = !{!347, !353}
!347 = !DIDerivedType(tag: DW_TAG_member, scope: !345, file: !344, line: 38, baseType: !348, size: 32)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !345, file: !344, line: 38, size: 32, elements: !349)
!349 = !{!350, !352}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !348, file: !344, line: 39, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !348, file: !344, line: 40, baseType: !351, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, scope: !345, file: !344, line: 42, baseType: !354, size: 32, offset: 32)
!354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !345, file: !344, line: 42, size: 32, elements: !355)
!355 = !{!356, !357}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !354, file: !344, line: 43, baseType: !351, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !354, file: !344, line: 44, baseType: !351, size: 32)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "cmd", scope: !360, file: !313, line: 22, type: !367, isLocal: true, isDefinition: true)
!360 = distinct !DISubprogram(name: "console_getline", scope: !313, file: !313, line: 20, type: !361, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !216, retainedNodes: !364)
!361 = !DISubroutineType(types: !362)
!362 = !{!363}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!364 = !{!365}
!365 = !DILocalVariable(name: "ret", scope: !366, file: !313, line: 29, type: !102)
!366 = distinct !DILexicalBlock(scope: !360, file: !313, line: 29, column: 8)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !369, line: 21, size: 1088, elements: !370)
!369 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!370 = !{!371, !374, !375}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !368, file: !369, line: 23, baseType: !372, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !373)
!373 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !368, file: !369, line: 25, baseType: !202, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !368, file: !369, line: 27, baseType: !376, size: 1024, offset: 40)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 1024, elements: !377)
!377 = !{!378}
!378 = !DISubrange(count: 128)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "line_bufs", scope: !216, file: !313, line: 15, type: !381, isLocal: true, isDefinition: true)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 2176, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 2)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "static_regions", scope: !386, file: !393, line: 62, type: !523, isLocal: true, isDefinition: true)
!386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !388, globals: !389, splitDebugInlining: false, nameTableKind: None)
!387 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!388 = !{!223, !103, !121, !102}
!389 = !{!390, !384}
!390 = !DIGlobalVariableExpression(var: !391, expr: !DIExpression())
!391 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !392, file: !393, line: 198, type: !511, isLocal: true, isDefinition: true)
!392 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !393, file: !393, line: 175, type: !394, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !506)
!393 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!394 = !DISubroutineType(types: !395)
!395 = !{null, !396}
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !399)
!398 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!399 = !{!400, !463, !476, !477, !478, !479, !485, !501}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !397, file: !398, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !402)
!402 = !{!403, !428, !435, !436, !437, !450, !451, !452}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !398, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !398, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !398, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !344, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !344, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !344, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !344, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !344, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !344, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !344, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !344, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !398, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !424)
!423 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !423, line: 50, baseType: !426, size: 64)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !427, size: 64, elements: !382)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !398, line: 68, baseType: !429, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !431, file: !339, line: 232, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !408)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !398, line: 90, baseType: !438, size: 16, offset: 112)
!438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !398, line: 90, size: 16, elements: !439)
!439 = !{!440, !447}
!440 = !DIDerivedType(tag: DW_TAG_member, scope: !438, file: !398, line: 91, baseType: !441, size: 16)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !438, file: !398, line: 91, size: 16, elements: !442)
!442 = !{!443, !446}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !441, file: !398, line: 96, baseType: !444, size: 8)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !445)
!445 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !441, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !438, file: !398, line: 100, baseType: !448, size: 16)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !449)
!449 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !398, line: 131, baseType: !453, size: 192, offset: 192)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !454)
!454 = !{!455, !456, !462}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !453, file: !339, line: 245, baseType: !407, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !453, file: !339, line: 246, baseType: !457, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !458)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DISubroutineType(types: !460)
!460 = !{null, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !453, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !397, file: !398, line: 250, baseType: !464, size: 288, offset: 384)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !466)
!465 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!466 = !{!467, !468, !469, !470, !471, !472, !473, !474, !475}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !464, file: !465, line: 26, baseType: !121, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !464, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !464, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !464, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !464, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !464, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !464, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !464, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !464, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !397, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !397, file: !398, line: 256, baseType: !430, size: 64, offset: 704)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !397, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !397, file: !398, line: 300, baseType: !480, size: 96, offset: 800)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !481)
!481 = !{!482, !483, !484}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !480, file: !398, line: 153, baseType: !22, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !480, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !480, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !397, file: !398, line: 325, baseType: !486, size: 32, offset: 896)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 32)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !488)
!488 = !{!489, !498, !499}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !487, file: !315, line: 5074, baseType: !490, size: 96)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !492)
!491 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !{!493, !496, !497}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !490, file: !491, line: 57, baseType: !494, size: 32)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !491, line: 57, flags: DIFlagFwdDecl)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !490, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !490, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !487, file: !315, line: 5075, baseType: !430, size: 64, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !487, file: !315, line: 5076, baseType: !500, offset: 160)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !397, file: !398, line: 343, baseType: !502, size: 64, offset: 928)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !503)
!503 = !{!504, !505}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !502, file: !465, line: 63, baseType: !121, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !502, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!506 = !{!507, !508, !509, !510}
!507 = !DILocalVariable(name: "thread", arg: 1, scope: !392, file: !393, line: 175, type: !396)
!508 = !DILocalVariable(name: "region_num", scope: !392, file: !393, line: 200, type: !202)
!509 = !DILocalVariable(name: "guard_start", scope: !392, file: !393, line: 265, type: !22)
!510 = !DILocalVariable(name: "guard_size", scope: !392, file: !393, line: 266, type: !223)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 96, elements: !136)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !513, line: 52, size: 96, elements: !514)
!513 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = !{!515, !516, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !512, file: !513, line: 53, baseType: !22, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !512, file: !513, line: 54, baseType: !223, size: 32, offset: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !512, file: !513, line: 55, baseType: !518, size: 32, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !519, line: 151, baseType: !520)
!519 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 149, size: 32, elements: !521)
!521 = !{!522}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !520, file: !519, line: 150, baseType: !121, size: 32)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 96, elements: !136)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !512)
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !527, file: !559, line: 39, type: !202, isLocal: true, isDefinition: true)
!527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !528, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !529, globals: !558, splitDebugInlining: false, nameTableKind: None)
!528 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!529 = !{!530, !102, !103, !546, !202}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !532, line: 1168, baseType: !533)
!532 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 1155, size: 352, elements: !534)
!534 = !{!535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !533, file: !532, line: 1157, baseType: !124, size: 32)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !533, file: !532, line: 1158, baseType: !120, size: 32, offset: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !533, file: !532, line: 1159, baseType: !120, size: 32, offset: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !533, file: !532, line: 1160, baseType: !120, size: 32, offset: 96)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !533, file: !532, line: 1161, baseType: !120, size: 32, offset: 128)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !533, file: !532, line: 1162, baseType: !120, size: 32, offset: 160)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !533, file: !532, line: 1163, baseType: !120, size: 32, offset: 192)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !533, file: !532, line: 1164, baseType: !120, size: 32, offset: 224)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !533, file: !532, line: 1165, baseType: !120, size: 32, offset: 256)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !533, file: !532, line: 1166, baseType: !120, size: 32, offset: 288)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !533, file: !532, line: 1167, baseType: !120, size: 32, offset: 320)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !548)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !549, line: 27, size: 96, elements: !550)
!549 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!550 = !{!551, !552, !553}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !548, file: !549, line: 29, baseType: !121, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !548, file: !549, line: 31, baseType: !192, size: 32, offset: 32)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !548, file: !549, line: 37, baseType: !554, size: 32, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !519, line: 146, baseType: !555)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !519, line: 141, size: 32, elements: !556)
!556 = !{!557}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !555, file: !519, line: 143, baseType: !121, size: 32)
!558 = !{!525}
!559 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!560 = !DIGlobalVariableExpression(var: !561, expr: !DIExpression())
!561 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !562, file: !569, line: 21, type: !106, isLocal: true, isDefinition: true)
!562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !563, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !564, globals: !568, splitDebugInlining: false, nameTableKind: None)
!563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!564 = !{!565, !103, !102}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !567, line: 22, baseType: !103)
!567 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = !{!560}
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !572, file: !577, line: 13, type: !594, isLocal: true, isDefinition: true)
!572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !573, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !574, splitDebugInlining: false, nameTableKind: None)
!573 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!574 = !{!575, !570}
!575 = !DIGlobalVariableExpression(var: !576, expr: !DIExpression())
!576 = distinct !DIGlobalVariable(name: "mpu_config", scope: !572, file: !577, line: 37, type: !578, isLocal: false, isDefinition: true)
!577 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !549, line: 41, size: 64, elements: !580)
!580 = !{!581, !582}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !579, file: !549, line: 43, baseType: !121, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !579, file: !549, line: 45, baseType: !583, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !549, line: 27, size: 96, elements: !586)
!586 = !{!587, !588, !589}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !585, file: !549, line: 29, baseType: !121, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !585, file: !549, line: 31, baseType: !192, size: 32, offset: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !585, file: !549, line: 37, baseType: !590, size: 32, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !519, line: 146, baseType: !591)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !519, line: 141, size: 32, elements: !592)
!592 = !{!593}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !591, file: !519, line: 143, baseType: !121, size: 32)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 192, elements: !382)
!595 = !DIGlobalVariableExpression(var: !596, expr: !DIExpression())
!596 = distinct !DIGlobalVariable(name: "avail_queue", scope: !597, file: !601, line: 108, type: !698, isLocal: true, isDefinition: true)
!597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !598, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !599, retainedTypes: !608, globals: !688, splitDebugInlining: false, nameTableKind: None)
!598 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!599 = !{!30, !600}
!600 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !601, line: 214, baseType: !32, size: 32, elements: !602)
!601 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607}
!603 = !DIEnumerator(name: "ESC_ESC", value: 0)
!604 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!605 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!606 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!607 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!608 = !{!102, !103, !609, !32, !24}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !228, line: 336, size: 608, elements: !612)
!612 = !{!613, !632, !636, !640, !653, !658, !662, !666, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !611, file: !228, line: 365, baseType: !614, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = !DISubroutineType(types: !616)
!616 = !{!103, !617, !249}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !620)
!620 = !{!621, !622, !623, !624, !630, !631}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !619, file: !189, line: 380, baseType: !192, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !619, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !619, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !619, file: !189, line: 386, baseType: !625, size: 32, offset: 96)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !627)
!627 = !{!628, !629}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !626, file: !189, line: 359, baseType: !202, size: 8)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !626, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !619, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !619, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !611, file: !228, line: 366, baseType: !633, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !617, !203}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !611, file: !228, line: 374, baseType: !637, size: 32, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 32)
!638 = !DISubroutineType(types: !639)
!639 = !{!103, !617}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !611, file: !228, line: 377, baseType: !641, size: 32, offset: 96)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{!103, !617, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !228, line: 122, size: 64, elements: !647)
!647 = !{!648, !649, !650, !651, !652}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !646, file: !228, line: 123, baseType: !121, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !646, file: !228, line: 124, baseType: !202, size: 8, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !646, file: !228, line: 125, baseType: !202, size: 8, offset: 40)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !646, file: !228, line: 126, baseType: !202, size: 8, offset: 48)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !646, file: !228, line: 127, baseType: !202, size: 8, offset: 56)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !611, file: !228, line: 379, baseType: !654, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DISubroutineType(types: !656)
!656 = !{!103, !617, !657}
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !611, file: !228, line: 384, baseType: !659, size: 32, offset: 160)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DISubroutineType(types: !661)
!661 = !{!103, !617, !280, !103}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !611, file: !228, line: 393, baseType: !663, size: 32, offset: 192)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DISubroutineType(types: !665)
!665 = !{!103, !617, !286, !287}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !611, file: !228, line: 402, baseType: !667, size: 32, offset: 224)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 32)
!668 = !DISubroutineType(types: !669)
!669 = !{null, !617}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !611, file: !228, line: 405, baseType: !667, size: 32, offset: 256)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !611, file: !228, line: 408, baseType: !637, size: 32, offset: 288)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !611, file: !228, line: 411, baseType: !667, size: 32, offset: 320)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !611, file: !228, line: 414, baseType: !667, size: 32, offset: 352)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !611, file: !228, line: 417, baseType: !637, size: 32, offset: 384)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !611, file: !228, line: 420, baseType: !637, size: 32, offset: 416)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !611, file: !228, line: 423, baseType: !667, size: 32, offset: 448)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !611, file: !228, line: 426, baseType: !667, size: 32, offset: 480)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !611, file: !228, line: 429, baseType: !637, size: 32, offset: 512)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !611, file: !228, line: 432, baseType: !637, size: 32, offset: 544)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !611, file: !228, line: 435, baseType: !681, size: 32, offset: 576)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!682 = !DISubroutineType(types: !683)
!683 = !{null, !617, !684, !102}
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !228, line: 142, baseType: !685)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 32)
!686 = !DISubroutineType(types: !687)
!687 = !{null, !617, !102}
!688 = !{!689, !595, !696, !736, !741, !744, !763, !767, !769, !771, !773}
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !597, file: !601, line: 603, type: !691, isLocal: true, isDefinition: true, align: 32)
!691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !692)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !693)
!693 = !{!694, !695}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !692, file: !180, line: 60, baseType: !637, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !692, file: !180, line: 65, baseType: !617, size: 32, offset: 32)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "lines_queue", scope: !597, file: !601, line: 109, type: !698, isLocal: true, isDefinition: true)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !315, line: 2208, size: 128, elements: !700)
!700 = !{!701}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !699, file: !315, line: 2209, baseType: !702, size: 128)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !315, line: 1709, size: 128, elements: !703)
!703 = !{!704, !715, !717}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !702, file: !315, line: 1710, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !322, line: 46, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !322, line: 41, size: 64, elements: !707)
!707 = !{!708, !714}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !706, file: !322, line: 42, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !322, line: 39, baseType: !711)
!711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !322, line: 35, size: 32, elements: !712)
!712 = !{!713}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !711, file: !322, line: 36, baseType: !331, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !706, file: !322, line: 43, baseType: !709, size: 32, offset: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !702, file: !315, line: 1711, baseType: !716, offset: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !702, file: !315, line: 1712, baseType: !718, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !720)
!720 = !{!721}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !719, file: !339, line: 232, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !723)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !724)
!724 = !{!725, !731}
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !723, file: !344, line: 38, baseType: !726, size: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !723, file: !344, line: 38, size: 32, elements: !727)
!727 = !{!728, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !726, file: !344, line: 39, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !726, file: !344, line: 40, baseType: !729, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, scope: !723, file: !344, line: 42, baseType: !732, size: 32, offset: 32)
!732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !723, file: !344, line: 42, size: 32, elements: !733)
!733 = !{!734, !735}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !732, file: !344, line: 43, baseType: !729, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !732, file: !344, line: 44, baseType: !729, size: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "completion_cb", scope: !597, file: !601, line: 110, type: !738, isLocal: true, isDefinition: true)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!739 = !DISubroutineType(types: !740)
!740 = !{!202, !363, !202}
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !597, file: !601, line: 38, type: !743, isLocal: true, isDefinition: true)
!743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !617)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "cmd", scope: !746, file: !601, line: 435, type: !757, isLocal: true, isDefinition: true)
!746 = distinct !DISubprogram(name: "uart_console_isr", scope: !601, file: !601, line: 428, type: !686, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !747)
!747 = !{!748, !749, !750, !752, !753}
!748 = !DILocalVariable(name: "unused", arg: 1, scope: !746, file: !601, line: 428, type: !617)
!749 = !DILocalVariable(name: "user_data", arg: 2, scope: !746, file: !601, line: 428, type: !102)
!750 = !DILocalVariable(name: "byte", scope: !751, file: !601, line: 436, type: !202)
!751 = distinct !DILexicalBlock(scope: !746, file: !601, line: 434, column: 48)
!752 = !DILocalVariable(name: "rx", scope: !751, file: !601, line: 437, type: !103)
!753 = !DILocalVariable(name: "ret", scope: !754, file: !601, line: 461, type: !102)
!754 = distinct !DILexicalBlock(scope: !755, file: !601, line: 461, column: 10)
!755 = distinct !DILexicalBlock(scope: !756, file: !601, line: 460, column: 13)
!756 = distinct !DILexicalBlock(scope: !751, file: !601, line: 460, column: 7)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 32)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !369, line: 21, size: 1088, elements: !759)
!759 = !{!760, !761, !762}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !758, file: !369, line: 23, baseType: !372, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !758, file: !369, line: 25, baseType: !202, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !758, file: !369, line: 27, baseType: !376, size: 1024, offset: 40)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "esc_state", scope: !597, file: !601, line: 228, type: !765, isLocal: true, isDefinition: true)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !766, line: 22, baseType: !373)
!766 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "ansi_val", scope: !597, file: !601, line: 229, type: !32, isLocal: true, isDefinition: true)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !597, file: !601, line: 229, type: !32, isLocal: true, isDefinition: true)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "cur", scope: !597, file: !601, line: 230, type: !202, isLocal: true, isDefinition: true)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "end", scope: !597, file: !601, line: 230, type: !202, isLocal: true, isDefinition: true)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !777, file: !782, line: 7, type: !783, isLocal: false, isDefinition: true, align: 16)
!777 = distinct !DICompileUnit(language: DW_LANG_C99, file: !778, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !779, splitDebugInlining: false, nameTableKind: None)
!778 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!779 = !{!775, !780}
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !777, file: !782, line: 12, type: !783, isLocal: false, isDefinition: true, align: 16)
!782 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 48, elements: !152)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "wdt_sam_cfg", scope: !786, file: !847, line: 234, type: !882, isLocal: true, isDefinition: true)
!786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !788, globals: !844, splitDebugInlining: false, nameTableKind: None)
!787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/watchdog/wdt_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!788 = !{!789, !121}
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_driver_api", file: !792, line: 134, size: 128, elements: !793)
!792 = !DIFile(filename: "zephyr/include/zephyr/drivers/watchdog.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!793 = !{!794, !814, !819, !839}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !791, file: !792, line: 135, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_setup", file: !792, line: 113, baseType: !796)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{!103, !799, !202}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !802)
!802 = !{!803, !804, !805, !806, !812, !813}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !801, file: !189, line: 380, baseType: !192, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !801, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !801, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !801, file: !189, line: 386, baseType: !807, size: 32, offset: 96)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !808, file: !189, line: 359, baseType: !202, size: 8)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !808, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !801, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !801, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !791, file: !792, line: 136, baseType: !815, size: 32, offset: 32)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_disable", file: !792, line: 119, baseType: !816)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DISubroutineType(types: !818)
!818 = !{!103, !799}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "install_timeout", scope: !791, file: !792, line: 137, baseType: !820, size: 32, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_install_timeout", file: !792, line: 125, baseType: !821)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 32)
!822 = !DISubroutineType(types: !823)
!823 = !{!103, !799, !824}
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_timeout_cfg", file: !792, line: 88, size: 128, elements: !827)
!827 = !{!828, !833, !838}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !826, file: !792, line: 90, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_window", file: !792, line: 72, size: 64, elements: !830)
!830 = !{!831, !832}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !829, file: !792, line: 74, baseType: !121, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !829, file: !792, line: 76, baseType: !121, size: 32, offset: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !826, file: !792, line: 92, baseType: !834, size: 32, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_callback_t", file: !792, line: 85, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 32)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !799, !103}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !826, file: !792, line: 104, baseType: !202, size: 8, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "feed", scope: !791, file: !792, line: 138, baseType: !840, size: 32, offset: 96)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_feed", file: !792, line: 132, baseType: !841)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DISubroutineType(types: !843)
!843 = !{!103, !799, !103}
!844 = !{!845, !849, !851, !858, !784, !860, !862, !870}
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !786, file: !847, line: 256, type: !848, isLocal: false, isDefinition: true, align: 16)
!847 = !DIFile(filename: "zephyr/drivers/watchdog/wdt_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 80, elements: !156)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__device_dts_ord_26", scope: !786, file: !847, line: 256, type: !800, isLocal: false, isDefinition: true, align: 32)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_26", scope: !786, file: !847, line: 256, type: !853, isLocal: true, isDefinition: true, align: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !855)
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !854, file: !180, line: 60, baseType: !816, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !854, file: !180, line: 65, baseType: !799, size: 32, offset: 32)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_26", scope: !786, file: !847, line: 256, type: !808, isLocal: true, isDefinition: true, align: 8)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "wdt_sam_api", scope: !786, file: !847, line: 227, type: !790, isLocal: true, isDefinition: true)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "wdt_sam_data", scope: !786, file: !847, line: 45, type: !864, isLocal: true, isDefinition: true)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_sam_dev_data", file: !847, line: 38, size: 96, elements: !865)
!865 = !{!866, !867, !868, !869}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !864, file: !847, line: 39, baseType: !834, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !864, file: !847, line: 40, baseType: !121, size: 32, offset: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_valid", scope: !864, file: !847, line: 41, baseType: !205, size: 8, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !864, file: !847, line: 42, baseType: !205, size: 8, offset: 72)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__isr_wdt_sam_isr_irq_0", scope: !872, file: !847, line: 240, type: !875, isLocal: true, isDefinition: true, align: 32)
!872 = distinct !DISubprogram(name: "wdt_sam_irq_config", scope: !847, file: !847, line: 238, type: !873, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !336)
!873 = !DISubroutineType(types: !874)
!874 = !{null}
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !876)
!876 = !{!877, !879, !880, !881}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !875, file: !10, line: 55, baseType: !878, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !875, file: !10, line: 57, baseType: !878, size: 32, offset: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !875, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !875, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_sam_dev_cfg", file: !847, line: 34, size: 32, elements: !884)
!884 = !{!885}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !883, file: !847, line: 35, baseType: !886, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "Wdt", file: !888, line: 45, baseType: !889)
!888 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/wdt.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !888, line: 41, size: 96, elements: !890)
!890 = !{!891, !892, !893}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_CR", scope: !889, file: !888, line: 42, baseType: !120, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_MR", scope: !889, file: !888, line: 43, baseType: !120, size: 32, offset: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_SR", scope: !889, file: !888, line: 44, baseType: !124, size: 32, offset: 64)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "uart0_sam_config", scope: !896, file: !1014, line: 494, type: !1074, isLocal: true, isDefinition: true)
!896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !898, retainedTypes: !931, globals: !1011, splitDebugInlining: false, nameTableKind: None)
!897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!898 = !{!899, !906, !912, !919, !924}
!899 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !228, line: 47, baseType: !32, size: 32, elements: !900)
!900 = !{!901, !902, !903, !904, !905}
!901 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!902 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!903 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!904 = !DIEnumerator(name: "UART_BREAK", value: 8)
!905 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!906 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !228, line: 84, baseType: !32, size: 32, elements: !907)
!907 = !{!908, !909, !910, !911}
!908 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!909 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!910 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!911 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!912 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !228, line: 92, baseType: !32, size: 32, elements: !913)
!913 = !{!914, !915, !916, !917, !918}
!914 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!915 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!916 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!917 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!918 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !228, line: 107, baseType: !32, size: 32, elements: !920)
!920 = !{!921, !922, !923}
!921 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!922 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!923 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!924 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !228, line: 75, baseType: !32, size: 32, elements: !925)
!925 = !{!926, !927, !928, !929, !930}
!926 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!927 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!928 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!929 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!930 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!931 = !{!932, !102, !203, !121}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !228, line: 336, size: 608, elements: !935)
!935 = !{!936, !955, !959, !963, !976, !981, !985, !989, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !934, file: !228, line: 365, baseType: !937, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!103, !940, !249}
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !943)
!943 = !{!944, !945, !946, !947, !953, !954}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !942, file: !189, line: 380, baseType: !192, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !942, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !942, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !942, file: !189, line: 386, baseType: !948, size: 32, offset: 96)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !950)
!950 = !{!951, !952}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !949, file: !189, line: 359, baseType: !202, size: 8)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !949, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !942, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !942, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !934, file: !228, line: 366, baseType: !956, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !940, !203}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !934, file: !228, line: 374, baseType: !960, size: 32, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{!103, !940}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !934, file: !228, line: 377, baseType: !964, size: 32, offset: 96)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!103, !940, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !228, line: 122, size: 64, elements: !970)
!970 = !{!971, !972, !973, !974, !975}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !969, file: !228, line: 123, baseType: !121, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !969, file: !228, line: 124, baseType: !202, size: 8, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !969, file: !228, line: 125, baseType: !202, size: 8, offset: 40)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !969, file: !228, line: 126, baseType: !202, size: 8, offset: 48)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !969, file: !228, line: 127, baseType: !202, size: 8, offset: 56)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !934, file: !228, line: 379, baseType: !977, size: 32, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!103, !940, !980}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !934, file: !228, line: 384, baseType: !982, size: 32, offset: 160)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!103, !940, !280, !103}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !934, file: !228, line: 393, baseType: !986, size: 32, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 32)
!987 = !DISubroutineType(types: !988)
!988 = !{!103, !940, !286, !287}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !934, file: !228, line: 402, baseType: !990, size: 32, offset: 224)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{null, !940}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !934, file: !228, line: 405, baseType: !990, size: 32, offset: 256)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !934, file: !228, line: 408, baseType: !960, size: 32, offset: 288)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !934, file: !228, line: 411, baseType: !990, size: 32, offset: 320)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !934, file: !228, line: 414, baseType: !990, size: 32, offset: 352)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !934, file: !228, line: 417, baseType: !960, size: 32, offset: 384)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !934, file: !228, line: 420, baseType: !960, size: 32, offset: 416)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !934, file: !228, line: 423, baseType: !990, size: 32, offset: 448)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !934, file: !228, line: 426, baseType: !990, size: 32, offset: 480)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !934, file: !228, line: 429, baseType: !960, size: 32, offset: 512)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !934, file: !228, line: 432, baseType: !960, size: 32, offset: 544)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !934, file: !228, line: 435, baseType: !1004, size: 32, offset: 576)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !940, !1007, !102}
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !228, line: 142, baseType: !1008)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{null, !940, !102}
!1011 = !{!1012, !1018, !1020, !1027, !1029, !1031, !894, !1038, !1057, !1060, !1063}
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !896, file: !1014, line: 494, type: !1015, isLocal: false, isDefinition: true, align: 16)
!1014 = !DIFile(filename: "zephyr/drivers/serial/uart_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !209, size: 96, elements: !1016)
!1016 = !{!1017}
!1017 = !DISubrange(count: 6)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !896, file: !1014, line: 494, type: !941, isLocal: false, isDefinition: true, align: 32)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !896, file: !1014, line: 494, type: !1022, isLocal: true, isDefinition: true, align: 32)
!1022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !1024)
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1023, file: !180, line: 60, baseType: !960, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1023, file: !180, line: 65, baseType: !940, size: 32, offset: 32)
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !896, file: !1014, line: 494, type: !949, isLocal: true, isDefinition: true, align: 8)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "uart_sam_driver_api", scope: !896, file: !1014, line: 419, type: !933, isLocal: true, isDefinition: true)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "uart0_sam_data", scope: !896, file: !1014, line: 494, type: !1033, isLocal: true, isDefinition: true)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam_dev_data", file: !1014, line: 38, size: 96, elements: !1034)
!1034 = !{!1035, !1036, !1037}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1033, file: !1014, line: 39, baseType: !121, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cb", scope: !1033, file: !1014, line: 42, baseType: !1007, size: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cb_data", scope: !1033, file: !1014, line: 43, baseType: !102, size: 32, offset: 64)
!1038 = !DIGlobalVariableExpression(var: !1039, expr: !DIExpression())
!1039 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_21", scope: !896, file: !1014, line: 494, type: !1040, isLocal: true, isDefinition: true)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1042, line: 60, size: 64, elements: !1043)
!1042 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1043 = !{!1044, !1056}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1041, file: !1042, line: 69, baseType: !1045, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1042, line: 50, size: 64, elements: !1048)
!1048 = !{!1049, !1054, !1055}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1047, file: !1042, line: 52, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1053, line: 32, baseType: !121)
!1053 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1047, file: !1042, line: 54, baseType: !202, size: 8, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1047, file: !1042, line: 56, baseType: !202, size: 8, offset: 40)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1041, file: !1042, line: 71, baseType: !202, size: 8, offset: 32)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_21", scope: !896, file: !1014, line: 494, type: !1059, isLocal: true, isDefinition: true)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 64, elements: !136)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_21", scope: !896, file: !1014, line: 494, type: !1062, isLocal: true, isDefinition: true)
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1051, size: 64, elements: !382)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "__isr_uart_sam_isr_irq_0", scope: !1065, file: !1014, line: 494, type: !1068, isLocal: true, isDefinition: true, align: 32)
!1065 = distinct !DISubprogram(name: "uart0_sam_irq_config_func", scope: !1014, file: !1014, line: 494, type: !991, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !1066)
!1066 = !{!1067}
!1067 = !DILocalVariable(name: "port", arg: 1, scope: !1065, file: !1014, line: 494, type: !940)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1068, file: !10, line: 55, baseType: !878, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1068, file: !10, line: 57, baseType: !878, size: 32, offset: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1068, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1068, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam_dev_cfg", file: !1014, line: 27, size: 128, elements: !1076)
!1076 = !{!1077, !1106, !1107, !1109}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1075, file: !1014, line: 28, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uart", file: !1080, line: 62, baseType: !1081)
!1080 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1080, line: 41, size: 2368, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "UART_CR", scope: !1081, file: !1080, line: 42, baseType: !120, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "UART_MR", scope: !1081, file: !1080, line: 43, baseType: !120, size: 32, offset: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IER", scope: !1081, file: !1080, line: 44, baseType: !120, size: 32, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IDR", scope: !1081, file: !1080, line: 45, baseType: !120, size: 32, offset: 96)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IMR", scope: !1081, file: !1080, line: 46, baseType: !124, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "UART_SR", scope: !1081, file: !1080, line: 47, baseType: !124, size: 32, offset: 160)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RHR", scope: !1081, file: !1080, line: 48, baseType: !124, size: 32, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "UART_THR", scope: !1081, file: !1080, line: 49, baseType: !120, size: 32, offset: 224)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "UART_BRGR", scope: !1081, file: !1080, line: 50, baseType: !120, size: 32, offset: 256)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1081, file: !1080, line: 51, baseType: !1093, size: 1760, offset: 288)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 1760, elements: !1094)
!1094 = !{!1095}
!1095 = !DISubrange(count: 55)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RPR", scope: !1081, file: !1080, line: 52, baseType: !120, size: 32, offset: 2048)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RCR", scope: !1081, file: !1080, line: 53, baseType: !120, size: 32, offset: 2080)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TPR", scope: !1081, file: !1080, line: 54, baseType: !120, size: 32, offset: 2112)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TCR", scope: !1081, file: !1080, line: 55, baseType: !120, size: 32, offset: 2144)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RNPR", scope: !1081, file: !1080, line: 56, baseType: !120, size: 32, offset: 2176)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RNCR", scope: !1081, file: !1080, line: 57, baseType: !120, size: 32, offset: 2208)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TNPR", scope: !1081, file: !1080, line: 58, baseType: !120, size: 32, offset: 2240)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TNCR", scope: !1081, file: !1080, line: 59, baseType: !120, size: 32, offset: 2272)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "UART_PTCR", scope: !1081, file: !1080, line: 60, baseType: !120, size: 32, offset: 2304)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "UART_PTSR", scope: !1081, file: !1080, line: 61, baseType: !124, size: 32, offset: 2336)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !1075, file: !1014, line: 29, baseType: !121, size: 32, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1075, file: !1014, line: 30, baseType: !1108, size: 32, offset: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1075, file: !1014, line: 33, baseType: !1110, size: 32, offset: 96)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !228, line: 150, baseType: !990)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1113, file: !1247, line: 65, type: !120, isLocal: true, isDefinition: true)
!1113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1115, retainedTypes: !1169, globals: !1244, splitDebugInlining: false, nameTableKind: None)
!1114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1115 = !{!1116}
!1116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !1117, line: 57, baseType: !103, size: 32, elements: !1118)
!1117 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/sam3x8e.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1119 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1120 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1121 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1122 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1123 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1124 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1125 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1126 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1127 = !DIEnumerator(name: "SUPC_IRQn", value: 0)
!1128 = !DIEnumerator(name: "RSTC_IRQn", value: 1)
!1129 = !DIEnumerator(name: "RTC_IRQn", value: 2)
!1130 = !DIEnumerator(name: "RTT_IRQn", value: 3)
!1131 = !DIEnumerator(name: "WDT_IRQn", value: 4)
!1132 = !DIEnumerator(name: "PMC_IRQn", value: 5)
!1133 = !DIEnumerator(name: "EFC0_IRQn", value: 6)
!1134 = !DIEnumerator(name: "EFC1_IRQn", value: 7)
!1135 = !DIEnumerator(name: "UART_IRQn", value: 8)
!1136 = !DIEnumerator(name: "SMC_IRQn", value: 9)
!1137 = !DIEnumerator(name: "PIOA_IRQn", value: 11)
!1138 = !DIEnumerator(name: "PIOB_IRQn", value: 12)
!1139 = !DIEnumerator(name: "PIOC_IRQn", value: 13)
!1140 = !DIEnumerator(name: "PIOD_IRQn", value: 14)
!1141 = !DIEnumerator(name: "USART0_IRQn", value: 17)
!1142 = !DIEnumerator(name: "USART1_IRQn", value: 18)
!1143 = !DIEnumerator(name: "USART2_IRQn", value: 19)
!1144 = !DIEnumerator(name: "USART3_IRQn", value: 20)
!1145 = !DIEnumerator(name: "HSMCI_IRQn", value: 21)
!1146 = !DIEnumerator(name: "TWI0_IRQn", value: 22)
!1147 = !DIEnumerator(name: "TWI1_IRQn", value: 23)
!1148 = !DIEnumerator(name: "SPI0_IRQn", value: 24)
!1149 = !DIEnumerator(name: "SSC_IRQn", value: 26)
!1150 = !DIEnumerator(name: "TC0_IRQn", value: 27)
!1151 = !DIEnumerator(name: "TC1_IRQn", value: 28)
!1152 = !DIEnumerator(name: "TC2_IRQn", value: 29)
!1153 = !DIEnumerator(name: "TC3_IRQn", value: 30)
!1154 = !DIEnumerator(name: "TC4_IRQn", value: 31)
!1155 = !DIEnumerator(name: "TC5_IRQn", value: 32)
!1156 = !DIEnumerator(name: "TC6_IRQn", value: 33)
!1157 = !DIEnumerator(name: "TC7_IRQn", value: 34)
!1158 = !DIEnumerator(name: "TC8_IRQn", value: 35)
!1159 = !DIEnumerator(name: "PWM_IRQn", value: 36)
!1160 = !DIEnumerator(name: "ADC_IRQn", value: 37)
!1161 = !DIEnumerator(name: "DACC_IRQn", value: 38)
!1162 = !DIEnumerator(name: "DMAC_IRQn", value: 39)
!1163 = !DIEnumerator(name: "UOTGHS_IRQn", value: 40)
!1164 = !DIEnumerator(name: "TRNG_IRQn", value: 41)
!1165 = !DIEnumerator(name: "EMAC_IRQn", value: 42)
!1166 = !DIEnumerator(name: "CAN0_IRQn", value: 43)
!1167 = !DIEnumerator(name: "CAN1_IRQn", value: 44)
!1168 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 45)
!1169 = !{!219, !1170, !878, !202, !121, !1178, !1211}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !532, line: 712, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 706, size: 128, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1172, file: !532, line: 708, baseType: !120, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1172, file: !532, line: 709, baseType: !120, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1172, file: !532, line: 710, baseType: !120, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1172, file: !532, line: 711, baseType: !124, size: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !532, line: 360, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 345, size: 28704, elements: !1181)
!1181 = !{!1182, !1186, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1201, !1206, !1210}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1180, file: !532, line: 347, baseType: !1183, size: 256)
!1183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1184)
!1184 = !{!1185}
!1185 = !DISubrange(count: 8)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1180, file: !532, line: 348, baseType: !1187, size: 768, offset: 256)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1188)
!1188 = !{!1189}
!1189 = !DISubrange(count: 24)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1180, file: !532, line: 349, baseType: !1183, size: 256, offset: 1024)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1180, file: !532, line: 350, baseType: !1187, size: 768, offset: 1280)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1180, file: !532, line: 351, baseType: !1183, size: 256, offset: 2048)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1180, file: !532, line: 352, baseType: !1187, size: 768, offset: 2304)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1180, file: !532, line: 353, baseType: !1183, size: 256, offset: 3072)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1180, file: !532, line: 354, baseType: !1187, size: 768, offset: 3328)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1180, file: !532, line: 355, baseType: !1183, size: 256, offset: 4096)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1180, file: !532, line: 356, baseType: !1198, size: 1792, offset: 4352)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 56)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1180, file: !532, line: 357, baseType: !1202, size: 1920, offset: 6144)
!1202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 1920, elements: !1204)
!1203 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !202)
!1204 = !{!1205}
!1205 = !DISubrange(count: 240)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1180, file: !532, line: 358, baseType: !1207, size: 20608, offset: 8064)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1208)
!1208 = !{!1209}
!1209 = !DISubrange(count: 644)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1180, file: !532, line: 359, baseType: !120, size: 32, offset: 28672)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1234, !1235, !1236, !1240, !1241, !1243}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1213, file: !532, line: 381, baseType: !124, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1213, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1213, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1213, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1213, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1213, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1213, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1203, size: 96, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 12)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1213, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1213, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1213, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1213, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1213, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1213, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1213, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1213, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!1233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 64, elements: !382)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1213, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1213, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1213, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 128, elements: !1238)
!1238 = !{!1239}
!1239 = !DISubrange(count: 4)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1213, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1213, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !156)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1213, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!1244 = !{!1245, !1271, !1274, !1276, !1278, !1111}
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1113, file: !1247, line: 285, type: !1248, isLocal: true, isDefinition: true, align: 32)
!1247 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !1250)
!1250 = !{!1251, !1270}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1249, file: !180, line: 60, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!103, !1255}
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !1258)
!1258 = !{!1259, !1260, !1261, !1262, !1268, !1269}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1257, file: !189, line: 380, baseType: !192, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1257, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1257, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1257, file: !189, line: 386, baseType: !1263, size: 32, offset: 96)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 32)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !1265)
!1265 = !{!1266, !1267}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1264, file: !189, line: 359, baseType: !202, size: 8)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1264, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1257, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1257, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1249, file: !180, line: 65, baseType: !1255, size: 32, offset: 32)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "lock", scope: !1113, file: !1247, line: 34, type: !1273, isLocal: true, isDefinition: true)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "last_load", scope: !1113, file: !1247, line: 36, type: !121, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1113, file: !1247, line: 48, type: !121, isLocal: true, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1113, file: !1247, line: 54, type: !121, isLocal: true, isDefinition: true)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !1282, file: !1348, line: 21, type: !1349, isLocal: true, isDefinition: true)
!1282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1284, globals: !1345, splitDebugInlining: false, nameTableKind: None)
!1283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1284 = !{!1285}
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pio", file: !1287, line: 96, baseType: !1288)
!1287 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/pio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1287, line: 41, size: 1888, elements: !1289)
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PER", scope: !1288, file: !1287, line: 42, baseType: !120, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDR", scope: !1288, file: !1287, line: 43, baseType: !120, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PSR", scope: !1288, file: !1287, line: 44, baseType: !124, size: 32, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1288, file: !1287, line: 45, baseType: !135, size: 32, offset: 96)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OER", scope: !1288, file: !1287, line: 46, baseType: !120, size: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODR", scope: !1288, file: !1287, line: 47, baseType: !120, size: 32, offset: 160)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OSR", scope: !1288, file: !1287, line: 48, baseType: !124, size: 32, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1288, file: !1287, line: 49, baseType: !135, size: 32, offset: 224)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFER", scope: !1288, file: !1287, line: 50, baseType: !120, size: 32, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDR", scope: !1288, file: !1287, line: 51, baseType: !120, size: 32, offset: 288)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFSR", scope: !1288, file: !1287, line: 52, baseType: !124, size: 32, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1288, file: !1287, line: 53, baseType: !135, size: 32, offset: 352)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SODR", scope: !1288, file: !1287, line: 54, baseType: !120, size: 32, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_CODR", scope: !1288, file: !1287, line: 55, baseType: !120, size: 32, offset: 416)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODSR", scope: !1288, file: !1287, line: 56, baseType: !120, size: 32, offset: 448)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDSR", scope: !1288, file: !1287, line: 57, baseType: !124, size: 32, offset: 480)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IER", scope: !1288, file: !1287, line: 58, baseType: !120, size: 32, offset: 512)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IDR", scope: !1288, file: !1287, line: 59, baseType: !120, size: 32, offset: 544)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IMR", scope: !1288, file: !1287, line: 60, baseType: !124, size: 32, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ISR", scope: !1288, file: !1287, line: 61, baseType: !124, size: 32, offset: 608)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDER", scope: !1288, file: !1287, line: 62, baseType: !120, size: 32, offset: 640)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDDR", scope: !1288, file: !1287, line: 63, baseType: !120, size: 32, offset: 672)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDSR", scope: !1288, file: !1287, line: 64, baseType: !124, size: 32, offset: 704)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1288, file: !1287, line: 65, baseType: !135, size: 32, offset: 736)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUDR", scope: !1288, file: !1287, line: 66, baseType: !120, size: 32, offset: 768)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUER", scope: !1288, file: !1287, line: 67, baseType: !120, size: 32, offset: 800)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUSR", scope: !1288, file: !1287, line: 68, baseType: !124, size: 32, offset: 832)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !1288, file: !1287, line: 69, baseType: !135, size: 32, offset: 864)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ABSR", scope: !1288, file: !1287, line: 70, baseType: !120, size: 32, offset: 896)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !1288, file: !1287, line: 71, baseType: !1320, size: 96, offset: 928)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !124, size: 96, elements: !152)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCIFSR", scope: !1288, file: !1287, line: 72, baseType: !120, size: 32, offset: 1024)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_DIFSR", scope: !1288, file: !1287, line: 73, baseType: !120, size: 32, offset: 1056)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDGSR", scope: !1288, file: !1287, line: 74, baseType: !124, size: 32, offset: 1088)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCDR", scope: !1288, file: !1287, line: 75, baseType: !120, size: 32, offset: 1120)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !1288, file: !1287, line: 76, baseType: !1237, size: 128, offset: 1152)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWER", scope: !1288, file: !1287, line: 77, baseType: !120, size: 32, offset: 1280)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWDR", scope: !1288, file: !1287, line: 78, baseType: !120, size: 32, offset: 1312)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWSR", scope: !1288, file: !1287, line: 79, baseType: !124, size: 32, offset: 1344)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !1288, file: !1287, line: 80, baseType: !135, size: 32, offset: 1376)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMER", scope: !1288, file: !1287, line: 81, baseType: !120, size: 32, offset: 1408)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMDR", scope: !1288, file: !1287, line: 82, baseType: !120, size: 32, offset: 1440)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMMR", scope: !1288, file: !1287, line: 83, baseType: !124, size: 32, offset: 1472)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved9", scope: !1288, file: !1287, line: 84, baseType: !135, size: 32, offset: 1504)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ESR", scope: !1288, file: !1287, line: 85, baseType: !120, size: 32, offset: 1536)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LSR", scope: !1288, file: !1287, line: 86, baseType: !120, size: 32, offset: 1568)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ELSR", scope: !1288, file: !1287, line: 87, baseType: !124, size: 32, offset: 1600)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved10", scope: !1288, file: !1287, line: 88, baseType: !135, size: 32, offset: 1632)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FELLSR", scope: !1288, file: !1287, line: 89, baseType: !120, size: 32, offset: 1664)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_REHLSR", scope: !1288, file: !1287, line: 90, baseType: !120, size: 32, offset: 1696)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FRLHSR", scope: !1288, file: !1287, line: 91, baseType: !124, size: 32, offset: 1728)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved11", scope: !1288, file: !1287, line: 92, baseType: !135, size: 32, offset: 1760)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LOCKSR", scope: !1288, file: !1287, line: 93, baseType: !124, size: 32, offset: 1792)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPMR", scope: !1288, file: !1287, line: 94, baseType: !120, size: 32, offset: 1824)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPSR", scope: !1288, file: !1287, line: 95, baseType: !124, size: 32, offset: 1856)
!1345 = !{!1280, !1346}
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "sam_port_periph_id", scope: !1282, file: !1348, line: 37, type: !1349, isLocal: true, isDefinition: true)
!1348 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1350, size: 160, elements: !156)
!1350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1353, file: !1356, line: 23, type: !287, isLocal: false, isDefinition: true)
!1353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1355, splitDebugInlining: false, nameTableKind: None)
!1354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1355 = !{!1351}
!1356 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1359, file: !1363, line: 86, type: !1610, isLocal: false, isDefinition: true, align: 512)
!1359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1361, retainedTypes: !1370, globals: !1443, splitDebugInlining: false, nameTableKind: None)
!1360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1361 = !{!1362, !30, !1116}
!1362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1363, line: 63, baseType: !32, size: 32, elements: !1364)
!1363 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1364 = !{!1365, !1366, !1367, !1368, !1369}
!1365 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1366 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1367 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1368 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1369 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1370 = !{!223, !102, !103, !1371, !363, !121, !1401, !878, !202, !1426}
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1374, line: 51, size: 64, elements: !1375)
!1374 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1375 = !{!1376, !1396}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1373, file: !1374, line: 52, baseType: !1377, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1374, line: 38, baseType: !1378)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!103, !1381, !286, !448}
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1383)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388, !1394, !1395}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1383, file: !189, line: 380, baseType: !192, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1383, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1383, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1383, file: !189, line: 386, baseType: !1389, size: 32, offset: 96)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 32)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1390, file: !189, line: 359, baseType: !202, size: 8)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1390, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1383, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1383, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1373, file: !1374, line: 53, baseType: !1397, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1374, line: 47, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!103, !1381, !286, !448, !121}
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !1403)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !1404)
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1403, file: !532, line: 381, baseType: !124, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1403, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1403, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1403, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1403, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1403, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1403, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1403, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1403, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1403, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1403, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1403, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1403, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1403, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1403, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1403, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1403, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1403, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1403, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1403, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1403, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !532, line: 360, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 345, size: 28704, elements: !1429)
!1429 = !{!1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1428, file: !532, line: 347, baseType: !1183, size: 256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1428, file: !532, line: 348, baseType: !1187, size: 768, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1428, file: !532, line: 349, baseType: !1183, size: 256, offset: 1024)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1428, file: !532, line: 350, baseType: !1187, size: 768, offset: 1280)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1428, file: !532, line: 351, baseType: !1183, size: 256, offset: 2048)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1428, file: !532, line: 352, baseType: !1187, size: 768, offset: 2304)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1428, file: !532, line: 353, baseType: !1183, size: 256, offset: 3072)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1428, file: !532, line: 354, baseType: !1187, size: 768, offset: 3328)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1428, file: !532, line: 355, baseType: !1183, size: 256, offset: 4096)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1428, file: !532, line: 356, baseType: !1198, size: 1792, offset: 4352)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1428, file: !532, line: 357, baseType: !1202, size: 1920, offset: 6144)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1428, file: !532, line: 358, baseType: !1207, size: 20608, offset: 8064)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1428, file: !532, line: 359, baseType: !120, size: 32, offset: 28672)
!1443 = !{!1444, !1566, !1575, !1577, !1357, !1580, !1582, !1587}
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "_kernel", scope: !1359, file: !1363, line: 40, type: !1446, isLocal: false, isDefinition: true)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !339, line: 158, size: 288, elements: !1447)
!1447 = !{!1448, !1561}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1446, file: !339, line: 159, baseType: !1449, size: 192)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 192, elements: !136)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !339, line: 100, size: 192, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1555, !1556, !1557, !1558}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1450, file: !339, line: 102, baseType: !121, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1450, file: !339, line: 105, baseType: !363, size: 32, offset: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1450, file: !339, line: 108, baseType: !1455, size: 32, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !1457)
!1457 = !{!1458, !1516, !1528, !1529, !1530, !1531, !1537, !1550}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1456, file: !398, line: 247, baseType: !1459, size: 384)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !1460)
!1460 = !{!1461, !1485, !1492, !1493, !1494, !1503, !1504, !1505}
!1461 = !DIDerivedType(tag: DW_TAG_member, scope: !1459, file: !398, line: 60, baseType: !1462, size: 64)
!1462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1459, file: !398, line: 60, size: 64, elements: !1463)
!1463 = !{!1464, !1479}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1462, file: !398, line: 61, baseType: !1465, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !1467)
!1467 = !{!1468, !1474}
!1468 = !DIDerivedType(tag: DW_TAG_member, scope: !1466, file: !344, line: 38, baseType: !1469, size: 32)
!1469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1466, file: !344, line: 38, size: 32, elements: !1470)
!1470 = !{!1471, !1473}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1469, file: !344, line: 39, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1469, file: !344, line: 40, baseType: !1472, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, scope: !1466, file: !344, line: 42, baseType: !1475, size: 32, offset: 32)
!1475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1466, file: !344, line: 42, size: 32, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1475, file: !344, line: 43, baseType: !1472, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1475, file: !344, line: 44, baseType: !1472, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1462, file: !398, line: 62, baseType: !1480, size: 64)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !1481)
!1481 = !{!1482}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1480, file: !423, line: 50, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 64, elements: !382)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1459, file: !398, line: 68, baseType: !1486, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !1489)
!1489 = !{!1490}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1488, file: !339, line: 232, baseType: !1491, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !1466)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1459, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1459, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!1494 = !DIDerivedType(tag: DW_TAG_member, scope: !1459, file: !398, line: 90, baseType: !1495, size: 16, offset: 112)
!1495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1459, file: !398, line: 90, size: 16, elements: !1496)
!1496 = !{!1497, !1502}
!1497 = !DIDerivedType(tag: DW_TAG_member, scope: !1495, file: !398, line: 91, baseType: !1498, size: 16)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1495, file: !398, line: 91, size: 16, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1498, file: !398, line: 96, baseType: !444, size: 8)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1498, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1495, file: !398, line: 100, baseType: !448, size: 16)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1459, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1459, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1459, file: !398, line: 131, baseType: !1506, size: 192, offset: 192)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !1507)
!1507 = !{!1508, !1509, !1515}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1506, file: !339, line: 245, baseType: !1465, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1506, file: !339, line: 246, baseType: !1510, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !1511)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{null, !1514}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1506, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1456, file: !398, line: 250, baseType: !1517, size: 288, offset: 384)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1517, file: !465, line: 26, baseType: !121, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1517, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1517, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1517, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1517, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1517, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1517, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1517, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1517, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1456, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1456, file: !398, line: 256, baseType: !1487, size: 64, offset: 704)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1456, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1456, file: !398, line: 300, baseType: !1532, size: 96, offset: 800)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !1533)
!1533 = !{!1534, !1535, !1536}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1532, file: !398, line: 153, baseType: !22, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1532, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1532, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1456, file: !398, line: 325, baseType: !1538, size: 32, offset: 896)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !1540)
!1540 = !{!1541, !1547, !1548}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1539, file: !315, line: 5074, baseType: !1542, size: 96)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !1543)
!1543 = !{!1544, !1545, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1542, file: !491, line: 57, baseType: !494, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1542, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1542, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1539, file: !315, line: 5075, baseType: !1487, size: 64, offset: 96)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1539, file: !315, line: 5076, baseType: !1549, offset: 160)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1456, file: !398, line: 343, baseType: !1551, size: 64, offset: 928)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1551, file: !465, line: 63, baseType: !121, size: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1551, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1450, file: !339, line: 111, baseType: !1455, size: 32, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1450, file: !339, line: 124, baseType: !103, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1450, file: !339, line: 127, baseType: !202, size: 8, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1450, file: !339, line: 153, baseType: !1559, offset: 168)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1560, line: 33, elements: !336)
!1560 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1446, file: !339, line: 170, baseType: !1562, size: 96, offset: 192)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !339, line: 83, size: 96, elements: !1563)
!1563 = !{!1564, !1565}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1562, file: !339, line: 86, baseType: !1455, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1562, file: !339, line: 90, baseType: !1491, size: 64, offset: 32)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1359, file: !1363, line: 43, type: !1568, isLocal: false, isDefinition: true, align: 512)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1569, size: 8704, elements: !1573)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1570, line: 47, size: 8, elements: !1571)
!1570 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1571 = !{!1572}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1569, file: !1570, line: 48, baseType: !194, size: 8)
!1573 = !{!1574}
!1574 = !DISubrange(count: 1088)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1359, file: !1363, line: 44, type: !1456, isLocal: false, isDefinition: true)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1359, file: !1363, line: 48, type: !1579, isLocal: false, isDefinition: true)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1456, size: 1024, elements: !136)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1359, file: !1363, line: 217, type: !205, isLocal: false, isDefinition: true)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1359, file: !1363, line: 50, type: !1584, isLocal: true, isDefinition: true, align: 512)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1569, size: 2560, elements: !1585)
!1585 = !{!137, !1586}
!1586 = !DISubrange(count: 320)
!1587 = !DIGlobalVariableExpression(var: !1588, expr: !DIExpression())
!1588 = distinct !DIGlobalVariable(name: "levels", scope: !1589, file: !1363, line: 232, type: !1609, isLocal: true, isDefinition: true)
!1589 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1363, file: !1363, line: 230, type: !1590, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !1592)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{null, !1362}
!1592 = !{!1593, !1594, !1604, !1608}
!1593 = !DILocalVariable(name: "level", arg: 1, scope: !1589, file: !1363, line: 230, type: !1362)
!1594 = !DILocalVariable(name: "entry", scope: !1589, file: !1363, line: 244, type: !1595)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !1598)
!1598 = !{!1599, !1603}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1597, file: !180, line: 60, baseType: !1600, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!103, !1381}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1597, file: !180, line: 65, baseType: !1381, size: 32, offset: 32)
!1604 = !DILocalVariable(name: "dev", scope: !1605, file: !1363, line: 247, type: !1381)
!1605 = distinct !DILexicalBlock(scope: !1606, file: !1363, line: 246, column: 64)
!1606 = distinct !DILexicalBlock(scope: !1607, file: !1363, line: 246, column: 2)
!1607 = distinct !DILexicalBlock(scope: !1589, file: !1363, line: 246, column: 2)
!1608 = !DILocalVariable(name: "rc", scope: !1605, file: !1363, line: 248, type: !103)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1595, size: 192, elements: !1016)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1569, size: 16896, elements: !1611)
!1611 = !{!137, !1612}
!1612 = !DISubrange(count: 2112)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "states_str", scope: !1615, file: !1616, line: 276, type: !1740, isLocal: true, isDefinition: true)
!1615 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1616, file: !1616, line: 271, type: !1617, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !1731)
!1616 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!192, !1619, !363, !223}
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !398, line: 347, baseType: !1620)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !1622)
!1622 = !{!1623, !1681, !1693, !1694, !1695, !1696, !1702, !1715}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1621, file: !398, line: 247, baseType: !1624, size: 384)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !1625)
!1625 = !{!1626, !1650, !1657, !1658, !1659, !1668, !1669, !1670}
!1626 = !DIDerivedType(tag: DW_TAG_member, scope: !1624, file: !398, line: 60, baseType: !1627, size: 64)
!1627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1624, file: !398, line: 60, size: 64, elements: !1628)
!1628 = !{!1629, !1644}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1627, file: !398, line: 61, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !1632)
!1632 = !{!1633, !1639}
!1633 = !DIDerivedType(tag: DW_TAG_member, scope: !1631, file: !344, line: 38, baseType: !1634, size: 32)
!1634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1631, file: !344, line: 38, size: 32, elements: !1635)
!1635 = !{!1636, !1638}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1634, file: !344, line: 39, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1634, file: !344, line: 40, baseType: !1637, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, scope: !1631, file: !344, line: 42, baseType: !1640, size: 32, offset: 32)
!1640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1631, file: !344, line: 42, size: 32, elements: !1641)
!1641 = !{!1642, !1643}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1640, file: !344, line: 43, baseType: !1637, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1640, file: !344, line: 44, baseType: !1637, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1627, file: !398, line: 62, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !1646)
!1646 = !{!1647}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1645, file: !423, line: 50, baseType: !1648, size: 64)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, size: 64, elements: !382)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1624, file: !398, line: 68, baseType: !1651, size: 32, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !1654)
!1654 = !{!1655}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1653, file: !339, line: 232, baseType: !1656, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !1631)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1624, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1624, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!1659 = !DIDerivedType(tag: DW_TAG_member, scope: !1624, file: !398, line: 90, baseType: !1660, size: 16, offset: 112)
!1660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1624, file: !398, line: 90, size: 16, elements: !1661)
!1661 = !{!1662, !1667}
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1660, file: !398, line: 91, baseType: !1663, size: 16)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1660, file: !398, line: 91, size: 16, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1663, file: !398, line: 96, baseType: !444, size: 8)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1663, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1660, file: !398, line: 100, baseType: !448, size: 16)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1624, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1624, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1624, file: !398, line: 131, baseType: !1671, size: 192, offset: 192)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !1672)
!1672 = !{!1673, !1674, !1680}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1671, file: !339, line: 245, baseType: !1630, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1671, file: !339, line: 246, baseType: !1675, size: 32, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !1676)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !1679}
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1671, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1621, file: !398, line: 250, baseType: !1682, size: 288, offset: 384)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1682, file: !465, line: 26, baseType: !121, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1682, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1682, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1682, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1682, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1682, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1682, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1682, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1682, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1621, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1621, file: !398, line: 256, baseType: !1652, size: 64, offset: 704)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1621, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1621, file: !398, line: 300, baseType: !1697, size: 96, offset: 800)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !1698)
!1698 = !{!1699, !1700, !1701}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1697, file: !398, line: 153, baseType: !22, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1697, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1697, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1621, file: !398, line: 325, baseType: !1703, size: 32, offset: 896)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !1705)
!1705 = !{!1706, !1712, !1713}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1704, file: !315, line: 5074, baseType: !1707, size: 96)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !1708)
!1708 = !{!1709, !1710, !1711}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1707, file: !491, line: 57, baseType: !494, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1707, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1707, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1704, file: !315, line: 5075, baseType: !1652, size: 64, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1704, file: !315, line: 5076, baseType: !1714, offset: 160)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1621, file: !398, line: 343, baseType: !1716, size: 64, offset: 928)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !1717)
!1717 = !{!1718, !1719}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1716, file: !465, line: 63, baseType: !121, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1716, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!1720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1722, globals: !1726, splitDebugInlining: false, nameTableKind: None)
!1721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1722 = !{!102, !192, !219, !202, !103, !1723, !24, !223, !363, !22, !121, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1725)
!1725 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1726 = !{!1613, !1727}
!1727 = !DIGlobalVariableExpression(var: !1728, expr: !DIExpression())
!1728 = distinct !DIGlobalVariable(name: "states_sz", scope: !1615, file: !1616, line: 279, type: !1729, isLocal: true, isDefinition: true)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 256, elements: !1184)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!1731 = !{!1732, !1733, !1734, !1735, !1736, !1737, !1738}
!1732 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1615, file: !1616, line: 271, type: !1619)
!1733 = !DILocalVariable(name: "buf", arg: 2, scope: !1615, file: !1616, line: 271, type: !363)
!1734 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1615, file: !1616, line: 271, type: !223)
!1735 = !DILocalVariable(name: "off", scope: !1615, file: !1616, line: 273, type: !223)
!1736 = !DILocalVariable(name: "bit", scope: !1615, file: !1616, line: 274, type: !202)
!1737 = !DILocalVariable(name: "thread_state", scope: !1615, file: !1616, line: 275, type: !202)
!1738 = !DILocalVariable(name: "index", scope: !1739, file: !1616, line: 293, type: !202)
!1739 = distinct !DILexicalBlock(scope: !1615, file: !1616, line: 293, column: 2)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !1184)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !1743, file: !1851, line: 56, type: !1840, isLocal: false, isDefinition: true)
!1743 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1744, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1745, globals: !1848, splitDebugInlining: false, nameTableKind: None)
!1744 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1745 = !{!1746, !363, !102, !1846, !286, !219, !878, !103, !121, !1724, !1847}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !1748)
!1748 = !{!1749, !1807, !1819, !1820, !1821, !1822, !1828, !1841}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1747, file: !398, line: 247, baseType: !1750, size: 384)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !1751)
!1751 = !{!1752, !1776, !1783, !1784, !1785, !1794, !1795, !1796}
!1752 = !DIDerivedType(tag: DW_TAG_member, scope: !1750, file: !398, line: 60, baseType: !1753, size: 64)
!1753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1750, file: !398, line: 60, size: 64, elements: !1754)
!1754 = !{!1755, !1770}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1753, file: !398, line: 61, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !1758)
!1758 = !{!1759, !1765}
!1759 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !344, line: 38, baseType: !1760, size: 32)
!1760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1757, file: !344, line: 38, size: 32, elements: !1761)
!1761 = !{!1762, !1764}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1760, file: !344, line: 39, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1760, file: !344, line: 40, baseType: !1763, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1757, file: !344, line: 42, baseType: !1766, size: 32, offset: 32)
!1766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1757, file: !344, line: 42, size: 32, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1766, file: !344, line: 43, baseType: !1763, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1766, file: !344, line: 44, baseType: !1763, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1753, file: !398, line: 62, baseType: !1771, size: 64)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !1772)
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1771, file: !423, line: 50, baseType: !1774, size: 64)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1775, size: 64, elements: !382)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1750, file: !398, line: 68, baseType: !1777, size: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !1779)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !1780)
!1780 = !{!1781}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1779, file: !339, line: 232, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !1757)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1750, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1750, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!1785 = !DIDerivedType(tag: DW_TAG_member, scope: !1750, file: !398, line: 90, baseType: !1786, size: 16, offset: 112)
!1786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1750, file: !398, line: 90, size: 16, elements: !1787)
!1787 = !{!1788, !1793}
!1788 = !DIDerivedType(tag: DW_TAG_member, scope: !1786, file: !398, line: 91, baseType: !1789, size: 16)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1786, file: !398, line: 91, size: 16, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1789, file: !398, line: 96, baseType: !444, size: 8)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1789, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1786, file: !398, line: 100, baseType: !448, size: 16)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1750, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1750, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1750, file: !398, line: 131, baseType: !1797, size: 192, offset: 192)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !1798)
!1798 = !{!1799, !1800, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1797, file: !339, line: 245, baseType: !1756, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1797, file: !339, line: 246, baseType: !1801, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !1802)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{null, !1805}
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1797, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1747, file: !398, line: 250, baseType: !1808, size: 288, offset: 384)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !1809)
!1809 = !{!1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1808, file: !465, line: 26, baseType: !121, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1808, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1808, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1808, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1808, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1808, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1808, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1808, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1808, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1747, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1747, file: !398, line: 256, baseType: !1778, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1747, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1747, file: !398, line: 300, baseType: !1823, size: 96, offset: 800)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !1824)
!1824 = !{!1825, !1826, !1827}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1823, file: !398, line: 153, baseType: !22, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1823, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1823, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1747, file: !398, line: 325, baseType: !1829, size: 32, offset: 896)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !1831)
!1831 = !{!1832, !1838, !1839}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1830, file: !315, line: 5074, baseType: !1833, size: 96)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !1834)
!1834 = !{!1835, !1836, !1837}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1833, file: !491, line: 57, baseType: !494, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1833, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1833, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1830, file: !315, line: 5075, baseType: !1778, size: 64, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1830, file: !315, line: 5076, baseType: !1840, offset: 160)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1747, file: !398, line: 343, baseType: !1842, size: 64, offset: 928)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1842, file: !465, line: 63, baseType: !121, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1842, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1848 = !{!1741, !1849, !1852, !1854}
!1849 = !DIGlobalVariableExpression(var: !1850, expr: !DIExpression())
!1850 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !1743, file: !1851, line: 404, type: !103, isLocal: true, isDefinition: true)
!1851 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1852 = !DIGlobalVariableExpression(var: !1853, expr: !DIExpression())
!1853 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !1743, file: !1851, line: 405, type: !103, isLocal: true, isDefinition: true)
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "pending_current", scope: !1743, file: !1851, line: 425, type: !1746, isLocal: true, isDefinition: true)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "curr_tick", scope: !1858, file: !1888, line: 15, type: !1724, isLocal: true, isDefinition: true)
!1858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1860, globals: !1885, splitDebugInlining: false, nameTableKind: None)
!1859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1860 = !{!219, !102, !878, !121, !1724, !103, !1861, !363, !221}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !1863)
!1863 = !{!1864, !1879, !1884}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1862, file: !339, line: 245, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !1867)
!1867 = !{!1868, !1874}
!1868 = !DIDerivedType(tag: DW_TAG_member, scope: !1866, file: !344, line: 38, baseType: !1869, size: 32)
!1869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1866, file: !344, line: 38, size: 32, elements: !1870)
!1870 = !{!1871, !1873}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1869, file: !344, line: 39, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1869, file: !344, line: 40, baseType: !1872, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, scope: !1866, file: !344, line: 42, baseType: !1875, size: 32, offset: 32)
!1875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1866, file: !344, line: 42, size: 32, elements: !1876)
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1875, file: !344, line: 43, baseType: !1872, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1875, file: !344, line: 44, baseType: !1872, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1862, file: !339, line: 246, baseType: !1880, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !1881)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 32)
!1882 = !DISubroutineType(types: !1883)
!1883 = !{null, !1861}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1862, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!1885 = !{!1856, !1886, !1890, !1892}
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !1858, file: !1888, line: 19, type: !1889, isLocal: true, isDefinition: true)
!1888 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression())
!1891 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !1858, file: !1888, line: 25, type: !103, isLocal: true, isDefinition: true)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "timeout_list", scope: !1858, file: !1888, line: 17, type: !1894, isLocal: true, isDefinition: true)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !1866)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !1897, file: !1916, line: 55, type: !1917, isLocal: true, isDefinition: true, align: 32)
!1897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1899, globals: !1915, splitDebugInlining: false, nameTableKind: None)
!1898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1899 = !{!102, !219, !103, !1900}
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !1903)
!1903 = !{!1904, !1910}
!1904 = !DIDerivedType(tag: DW_TAG_member, scope: !1902, file: !344, line: 38, baseType: !1905, size: 32)
!1905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1902, file: !344, line: 38, size: 32, elements: !1906)
!1906 = !{!1907, !1909}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1905, file: !344, line: 39, baseType: !1908, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1905, file: !344, line: 40, baseType: !1908, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, scope: !1902, file: !344, line: 42, baseType: !1911, size: 32, offset: 32)
!1911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1902, file: !344, line: 42, size: 32, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1911, file: !344, line: 43, baseType: !1908, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1911, file: !344, line: 44, baseType: !1908, size: 32)
!1915 = !{!1895}
!1916 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !180, line: 51, size: 64, elements: !1919)
!1919 = !{!1920, !1927}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1918, file: !180, line: 60, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!103, !1924}
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1926)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !180, line: 48, flags: DIFlagFwdDecl)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1918, file: !180, line: 65, baseType: !1924, size: 32, offset: 32)
!1928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1932 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1933, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1933 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1935, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1936, retainedTypes: !1944, splitDebugInlining: false, nameTableKind: None)
!1935 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1936 = !{!30, !1937}
!1937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !1938, line: 54, baseType: !32, size: 32, elements: !1939)
!1938 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1939 = !{!1940, !1941, !1942, !1943}
!1940 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!1941 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!1942 = !DIEnumerator(name: "FREE_PREV", value: 2)
!1943 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!1944 = !{!102, !223, !286, !24, !1945, !22, !1951, !103, !1966, !1967}
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !1938, line: 58, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1938, line: 58, size: 64, elements: !1948)
!1948 = !{!1949}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1947, file: !1938, line: 58, baseType: !1950, size: 64)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, elements: !1184)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !1938, line: 68, size: 128, elements: !1953)
!1953 = !{!1954, !1957, !1958, !1959}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !1952, file: !1938, line: 69, baseType: !1955, size: 64)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 64, elements: !382)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !1938, line: 61, baseType: !121)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !1952, file: !1938, line: 70, baseType: !1956, size: 32, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !1952, file: !1938, line: 71, baseType: !121, size: 32, offset: 96)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !1952, file: !1938, line: 77, baseType: !1960, offset: 128)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1961, elements: !1964)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !1938, line: 64, size: 32, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1961, file: !1938, line: 65, baseType: !1956, size: 32)
!1964 = !{!1965}
!1965 = !DISubrange(count: 0)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!1968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1969, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1970, retainedTypes: !1990, splitDebugInlining: false, nameTableKind: None)
!1969 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!1970 = !{!1971, !1979}
!1971 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !1972, line: 69, baseType: !32, size: 32, elements: !1973)
!1972 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1973 = !{!1974, !1975, !1976, !1977, !1978}
!1974 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!1975 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!1976 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!1977 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!1978 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!1979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !1972, line: 56, baseType: !32, size: 32, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989}
!1981 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!1982 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!1983 = !DIEnumerator(name: "LENGTH_H", value: 2)
!1984 = !DIEnumerator(name: "LENGTH_L", value: 3)
!1985 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!1986 = !DIEnumerator(name: "LENGTH_J", value: 5)
!1987 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!1988 = !DIEnumerator(name: "LENGTH_T", value: 7)
!1989 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!1990 = !{!103, !1971, !1979, !1991, !445, !212, !1993, !1994, !203, !449, !192, !223, !102, !22, !32, !1996, !1997, !1998, !373, !1999, !222, !2000, !1992, !2001, !2002, !2003, !2004}
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !1972, line: 31, baseType: !1992)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !222)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !224, line: 329, baseType: !32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !1972, line: 32, baseType: !1995)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1725)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !224, line: 145, baseType: !103)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2007 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2008, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2009, splitDebugInlining: false, nameTableKind: None)
!2008 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/common/./soc_pmc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2009 = !{!2010}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pmc", file: !128, line: 75, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !128, line: 41, size: 2176, elements: !2013)
!2013 = !{!2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCER", scope: !2012, file: !128, line: 42, baseType: !120, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCDR", scope: !2012, file: !128, line: 43, baseType: !120, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCSR", scope: !2012, file: !128, line: 44, baseType: !124, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !2012, file: !128, line: 45, baseType: !135, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER0", scope: !2012, file: !128, line: 46, baseType: !120, size: 32, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR0", scope: !2012, file: !128, line: 47, baseType: !120, size: 32, offset: 160)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR0", scope: !2012, file: !128, line: 48, baseType: !124, size: 32, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_UCKR", scope: !2012, file: !128, line: 49, baseType: !120, size: 32, offset: 224)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MOR", scope: !2012, file: !128, line: 50, baseType: !120, size: 32, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MCFR", scope: !2012, file: !128, line: 51, baseType: !124, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_PLLAR", scope: !2012, file: !128, line: 52, baseType: !120, size: 32, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !2012, file: !128, line: 53, baseType: !135, size: 32, offset: 352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_MCKR", scope: !2012, file: !128, line: 54, baseType: !120, size: 32, offset: 384)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !2012, file: !128, line: 55, baseType: !135, size: 32, offset: 416)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_USB", scope: !2012, file: !128, line: 56, baseType: !120, size: 32, offset: 448)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !2012, file: !128, line: 57, baseType: !135, size: 32, offset: 480)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCK", scope: !2012, file: !128, line: 58, baseType: !151, size: 96, offset: 512)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !2012, file: !128, line: 59, baseType: !155, size: 160, offset: 608)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IER", scope: !2012, file: !128, line: 60, baseType: !120, size: 32, offset: 768)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IDR", scope: !2012, file: !128, line: 61, baseType: !120, size: 32, offset: 800)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SR", scope: !2012, file: !128, line: 62, baseType: !124, size: 32, offset: 832)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IMR", scope: !2012, file: !128, line: 63, baseType: !124, size: 32, offset: 864)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSMR", scope: !2012, file: !128, line: 64, baseType: !120, size: 32, offset: 896)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSPR", scope: !2012, file: !128, line: 65, baseType: !120, size: 32, offset: 928)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FOCR", scope: !2012, file: !128, line: 66, baseType: !120, size: 32, offset: 960)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !2012, file: !128, line: 67, baseType: !166, size: 832, offset: 992)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPMR", scope: !2012, file: !128, line: 68, baseType: !120, size: 32, offset: 1824)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPSR", scope: !2012, file: !128, line: 69, baseType: !124, size: 32, offset: 1856)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !2012, file: !128, line: 70, baseType: !155, size: 160, offset: 1888)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER1", scope: !2012, file: !128, line: 71, baseType: !120, size: 32, offset: 2048)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR1", scope: !2012, file: !128, line: 72, baseType: !120, size: 32, offset: 2080)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR1", scope: !2012, file: !128, line: 73, baseType: !124, size: 32, offset: 2112)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCR", scope: !2012, file: !128, line: 74, baseType: !120, size: 32, offset: 2144)
!2047 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2048, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2048 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/common/./soc_gpio.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2051, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2051 = !{!2052, !30}
!2052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2053, line: 27, baseType: !32, size: 32, elements: !2054)
!2053 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2054 = !{!2055, !2056, !2057, !2058, !2059}
!2055 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2056 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2057 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2058 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2059 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2061, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2062, retainedTypes: !2063, splitDebugInlining: false, nameTableKind: None)
!2061 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2062 = !{!1116, !2052, !30}
!2063 = !{!2064, !2065, !102, !103, !878, !121, !202, !2082}
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !1117, line: 113, baseType: !1116)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !532, line: 360, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 345, size: 28704, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2067, file: !532, line: 347, baseType: !1183, size: 256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2067, file: !532, line: 348, baseType: !1187, size: 768, offset: 256)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2067, file: !532, line: 349, baseType: !1183, size: 256, offset: 1024)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2067, file: !532, line: 350, baseType: !1187, size: 768, offset: 1280)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2067, file: !532, line: 351, baseType: !1183, size: 256, offset: 2048)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2067, file: !532, line: 352, baseType: !1187, size: 768, offset: 2304)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2067, file: !532, line: 353, baseType: !1183, size: 256, offset: 3072)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2067, file: !532, line: 354, baseType: !1187, size: 768, offset: 3328)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2067, file: !532, line: 355, baseType: !1183, size: 256, offset: 4096)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2067, file: !532, line: 356, baseType: !1198, size: 1792, offset: 4352)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2067, file: !532, line: 357, baseType: !1202, size: 1920, offset: 6144)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2067, file: !532, line: 358, baseType: !1207, size: 20608, offset: 8064)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2067, file: !532, line: 359, baseType: !120, size: 32, offset: 28672)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2084, file: !532, line: 381, baseType: !124, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2084, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2084, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2084, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2084, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2084, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2084, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2084, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2084, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2084, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2084, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2084, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2084, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2084, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2084, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2084, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2084, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2084, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2084, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2084, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2084, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!2107 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2108, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2108 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2109 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2110, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2111, splitDebugInlining: false, nameTableKind: None)
!2110 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2111 = !{!102, !103, !22, !2112}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !2115)
!2115 = !{!2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2114, file: !532, line: 381, baseType: !124, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2114, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2114, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2114, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2114, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2114, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2114, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2114, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2114, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2114, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2114, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2114, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2114, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2114, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2114, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2114, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2114, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2114, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2114, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2114, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2114, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!2137 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2138, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2139, splitDebugInlining: false, nameTableKind: None)
!2138 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2139 = !{!2140, !102, !103}
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !2142)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2142, file: !532, line: 381, baseType: !124, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2142, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2142, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2142, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2142, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2142, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2142, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2142, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2142, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2142, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2142, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2142, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2142, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2142, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2142, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2142, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2142, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2142, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2142, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2142, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2142, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!2165 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2166, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2167, splitDebugInlining: false, nameTableKind: None)
!2166 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2167 = !{!2168, !121, !102, !103}
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2170, line: 98, size: 256, elements: !2171)
!2170 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2171 = !{!2172, !2177, !2182, !2187, !2192, !2197, !2202, !2207}
!2172 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 99, baseType: !2173, size: 32)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 99, size: 32, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2173, file: !2170, line: 99, baseType: !121, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2173, file: !2170, line: 99, baseType: !121, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 100, baseType: !2178, size: 32, offset: 32)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 100, size: 32, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2178, file: !2170, line: 100, baseType: !121, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2178, file: !2170, line: 100, baseType: !121, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 101, baseType: !2183, size: 32, offset: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 101, size: 32, elements: !2184)
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2183, file: !2170, line: 101, baseType: !121, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2183, file: !2170, line: 101, baseType: !121, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 102, baseType: !2188, size: 32, offset: 96)
!2188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 102, size: 32, elements: !2189)
!2189 = !{!2190, !2191}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2188, file: !2170, line: 102, baseType: !121, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2188, file: !2170, line: 102, baseType: !121, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 103, baseType: !2193, size: 32, offset: 128)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 103, size: 32, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2193, file: !2170, line: 103, baseType: !121, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2193, file: !2170, line: 103, baseType: !121, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 104, baseType: !2198, size: 32, offset: 160)
!2198 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 104, size: 32, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2198, file: !2170, line: 104, baseType: !121, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2198, file: !2170, line: 104, baseType: !121, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, scope: !2169, file: !2170, line: 105, baseType: !2203, size: 32, offset: 192)
!2203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2169, file: !2170, line: 105, size: 32, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2203, file: !2170, line: 105, baseType: !121, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2203, file: !2170, line: 105, baseType: !121, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2169, file: !2170, line: 106, baseType: !121, size: 32, offset: 224)
!2208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2051, retainedTypes: !2210, splitDebugInlining: false, nameTableKind: None)
!2209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2210 = !{!2211, !102, !103, !2236, !1967, !121}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !2214)
!2214 = !{!2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2213, file: !532, line: 381, baseType: !124, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2213, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2213, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2213, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2213, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2213, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2213, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2213, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2213, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2213, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2213, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2213, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2213, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2213, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2213, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2213, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2213, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2213, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2213, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2213, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2213, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2170, line: 141, baseType: !2238)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2170, line: 97, size: 256, elements: !2239)
!2239 = !{!2240}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2238, file: !2170, line: 107, baseType: !2241, size: 256)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2170, line: 98, size: 256, elements: !2242)
!2242 = !{!2243, !2248, !2253, !2258, !2263, !2268, !2273, !2278}
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 99, baseType: !2244, size: 32)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 99, size: 32, elements: !2245)
!2245 = !{!2246, !2247}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2244, file: !2170, line: 99, baseType: !121, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2244, file: !2170, line: 99, baseType: !121, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 100, baseType: !2249, size: 32, offset: 32)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 100, size: 32, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2249, file: !2170, line: 100, baseType: !121, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2249, file: !2170, line: 100, baseType: !121, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 101, baseType: !2254, size: 32, offset: 64)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 101, size: 32, elements: !2255)
!2255 = !{!2256, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2254, file: !2170, line: 101, baseType: !121, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2254, file: !2170, line: 101, baseType: !121, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 102, baseType: !2259, size: 32, offset: 96)
!2259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 102, size: 32, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2259, file: !2170, line: 102, baseType: !121, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2259, file: !2170, line: 102, baseType: !121, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 103, baseType: !2264, size: 32, offset: 128)
!2264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 103, size: 32, elements: !2265)
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2264, file: !2170, line: 103, baseType: !121, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2264, file: !2170, line: 103, baseType: !121, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 104, baseType: !2269, size: 32, offset: 160)
!2269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 104, size: 32, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2269, file: !2170, line: 104, baseType: !121, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2269, file: !2170, line: 104, baseType: !121, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !2170, line: 105, baseType: !2274, size: 32, offset: 192)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !2170, line: 105, size: 32, elements: !2275)
!2275 = !{!2276, !2277}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2274, file: !2170, line: 105, baseType: !121, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2274, file: !2170, line: 105, baseType: !121, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2241, file: !2170, line: 106, baseType: !121, size: 32, offset: 224)
!2279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2280, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1115, retainedTypes: !2281, splitDebugInlining: false, nameTableKind: None)
!2280 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2281 = !{!2064, !878, !202, !121, !2282, !2299}
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !532, line: 360, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 345, size: 28704, elements: !2285)
!2285 = !{!2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2284, file: !532, line: 347, baseType: !1183, size: 256)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2284, file: !532, line: 348, baseType: !1187, size: 768, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2284, file: !532, line: 349, baseType: !1183, size: 256, offset: 1024)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2284, file: !532, line: 350, baseType: !1187, size: 768, offset: 1280)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2284, file: !532, line: 351, baseType: !1183, size: 256, offset: 2048)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2284, file: !532, line: 352, baseType: !1187, size: 768, offset: 2304)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2284, file: !532, line: 353, baseType: !1183, size: 256, offset: 3072)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2284, file: !532, line: 354, baseType: !1187, size: 768, offset: 3328)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2284, file: !532, line: 355, baseType: !1183, size: 256, offset: 4096)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2284, file: !532, line: 356, baseType: !1198, size: 1792, offset: 4352)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2284, file: !532, line: 357, baseType: !1202, size: 1920, offset: 6144)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2284, file: !532, line: 358, baseType: !1207, size: 20608, offset: 8064)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2284, file: !532, line: 359, baseType: !120, size: 32, offset: 28672)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !2301)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2301, file: !532, line: 381, baseType: !124, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2301, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2301, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2301, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2301, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2301, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2301, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2301, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2301, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2301, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2301, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2301, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2301, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2301, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2301, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2301, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2301, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2301, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2301, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2301, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2301, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!2324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2326, splitDebugInlining: false, nameTableKind: None)
!2325 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2326 = !{!2327, !102, !103}
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !532, line: 402, baseType: !2329)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !532, line: 379, size: 1120, elements: !2330)
!2330 = !{!2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2329, file: !532, line: 381, baseType: !124, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2329, file: !532, line: 382, baseType: !120, size: 32, offset: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2329, file: !532, line: 383, baseType: !120, size: 32, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2329, file: !532, line: 384, baseType: !120, size: 32, offset: 96)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2329, file: !532, line: 385, baseType: !120, size: 32, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2329, file: !532, line: 386, baseType: !120, size: 32, offset: 160)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2329, file: !532, line: 387, baseType: !1222, size: 96, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2329, file: !532, line: 388, baseType: !120, size: 32, offset: 288)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2329, file: !532, line: 389, baseType: !120, size: 32, offset: 320)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2329, file: !532, line: 390, baseType: !120, size: 32, offset: 352)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2329, file: !532, line: 391, baseType: !120, size: 32, offset: 384)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2329, file: !532, line: 392, baseType: !120, size: 32, offset: 416)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2329, file: !532, line: 393, baseType: !120, size: 32, offset: 448)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2329, file: !532, line: 394, baseType: !120, size: 32, offset: 480)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2329, file: !532, line: 395, baseType: !1233, size: 64, offset: 512)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2329, file: !532, line: 396, baseType: !124, size: 32, offset: 576)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2329, file: !532, line: 397, baseType: !124, size: 32, offset: 608)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2329, file: !532, line: 398, baseType: !1237, size: 128, offset: 640)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2329, file: !532, line: 399, baseType: !155, size: 160, offset: 768)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2329, file: !532, line: 400, baseType: !1242, size: 160, offset: 928)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2329, file: !532, line: 401, baseType: !120, size: 32, offset: 1088)
!2352 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2353, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2354, splitDebugInlining: false, nameTableKind: None)
!2353 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2354 = !{!194, !363, !223, !249, !2355, !203, !102}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!2357 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2358, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2358 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2361, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2361 = !{!102, !223}
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2364, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2364 = !{!2365, !2372, !30}
!2365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2366, line: 14, baseType: !32, size: 32, elements: !2367)
!2366 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2367 = !{!2368, !2369, !2370, !2371}
!2368 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2369 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2370 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2371 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2366, line: 42, baseType: !32, size: 32, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379}
!2374 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2375 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2376 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2377 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2378 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2379 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2382 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2383, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2384, retainedTypes: !2395, splitDebugInlining: false, nameTableKind: None)
!2383 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2384 = !{!2385, !30}
!2385 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !315, line: 5323, baseType: !32, size: 32, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394}
!2387 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!2388 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!2389 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!2390 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!2391 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!2392 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!2393 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!2394 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!2395 = !{!102, !202, !2396, !363, !2406, !205, !2407, !103, !2408, !331}
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !2398, line: 25, size: 64, elements: !2399)
!2398 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2399 = !{!2400, !2405}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !2398, line: 26, baseType: !2401, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !322, line: 39, baseType: !2402)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !322, line: 35, size: 32, elements: !2403)
!2403 = !{!2404}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !2402, file: !322, line: 36, baseType: !331, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2397, file: !2398, line: 27, baseType: !102, size: 32, offset: 32)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !2410)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !2411)
!2411 = !{!2412, !2418}
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !344, line: 38, baseType: !2413, size: 32)
!2413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2410, file: !344, line: 38, size: 32, elements: !2414)
!2414 = !{!2415, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2413, file: !344, line: 39, baseType: !2416, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2413, file: !344, line: 40, baseType: !2416, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, scope: !2410, file: !344, line: 42, baseType: !2419, size: 32, offset: 32)
!2419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2410, file: !344, line: 42, size: 32, elements: !2420)
!2420 = !{!2421, !2422}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2419, file: !344, line: 43, baseType: !2416, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2419, file: !344, line: 44, baseType: !2416, size: 32)
!2423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2425, splitDebugInlining: false, nameTableKind: None)
!2424 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2425 = !{!22, !102, !103}
!2426 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2427, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2427 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2428 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2429, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2429 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2430 = !{!"Ubuntu clang version 14.0.6"}
!2431 = !{i32 7, !"Dwarf Version", i32 4}
!2432 = !{i32 2, !"Debug Info Version", i32 3}
!2433 = !{i32 1, !"wchar_size", i32 4}
!2434 = !{i32 1, !"min_enum_size", i32 4}
!2435 = !{i32 1, !"branch-target-enforcement", i32 0}
!2436 = !{i32 1, !"sign-return-address", i32 0}
!2437 = !{i32 1, !"sign-return-address-all", i32 0}
!2438 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2439 = !{i32 7, !"frame-pointer", i32 2}
!2440 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2441, file: !2441, line: 26, type: !873, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1928, retainedNodes: !336)
!2441 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2442 = !DILocation(line: 28, column: 1, scope: !2440)
!2443 = !{i64 2151351128, i64 2151351148, i64 2151351211}
!2444 = !DILocation(line: 29, column: 1, scope: !2440)
!2445 = !{i64 2151351543, i64 2151351563, i64 2151351626}
!2446 = !DILocation(line: 30, column: 1, scope: !2440)
!2447 = !{i64 2151351962, i64 2151351982, i64 2151352045}
!2448 = !DILocation(line: 31, column: 1, scope: !2440)
!2449 = !{i64 2151352381, i64 2151352401, i64 2151352464}
!2450 = !DILocation(line: 33, column: 1, scope: !2440)
!2451 = !{i64 2151352673, i64 2151352693, i64 2151352756}
!2452 = !DILocation(line: 35, column: 1, scope: !2440)
!2453 = !{i64 2151352998, i64 2151353018, i64 2151353081}
!2454 = !DILocation(line: 50, column: 1, scope: !2440)
!2455 = !{i64 2151357486, i64 2151357506, i64 2151357569}
!2456 = !DILocation(line: 54, column: 1, scope: !2440)
!2457 = !{i64 2151357925, i64 2151357945, i64 2151358008}
!2458 = !DILocation(line: 61, column: 1, scope: !2440)
!2459 = !{i64 2151358242, i64 2151358262, i64 2151358325}
!2460 = !DILocation(line: 63, column: 1, scope: !2440)
!2461 = !{i64 2151358622, i64 2151358642, i64 2151358705}
!2462 = !DILocation(line: 64, column: 1, scope: !2440)
!2463 = !{i64 2151359144, i64 2151359164, i64 2151359227}
!2464 = !DILocation(line: 65, column: 1, scope: !2440)
!2465 = !{i64 2151359642, i64 2151359662, i64 2151359725}
!2466 = !DILocation(line: 66, column: 1, scope: !2440)
!2467 = !{i64 2151360124, i64 2151360144, i64 2151360207}
!2468 = !DILocation(line: 67, column: 1, scope: !2440)
!2469 = !{i64 2151360631, i64 2151360651, i64 2151360714}
!2470 = !DILocation(line: 68, column: 1, scope: !2440)
!2471 = !{i64 2151361119, i64 2151361139, i64 2151361202}
!2472 = !DILocation(line: 70, column: 1, scope: !2440)
!2473 = !{i64 2151361587, i64 2151361607, i64 2151361670}
!2474 = !DILocation(line: 71, column: 1, scope: !2440)
!2475 = !{i64 2151362029, i64 2151362049, i64 2151362112}
!2476 = !DILocation(line: 72, column: 1, scope: !2440)
!2477 = !{i64 2151362487, i64 2151362507, i64 2151362570}
!2478 = !DILocation(line: 79, column: 1, scope: !2440)
!2479 = !{i64 2151362941, i64 2151362961, i64 2151363024}
!2480 = !DILocation(line: 80, column: 1, scope: !2440)
!2481 = !{i64 2151363452, i64 2151363472, i64 2151363535}
!2482 = !DILocation(line: 82, column: 1, scope: !2440)
!2483 = !{i64 2151363943, i64 2151363963, i64 2151364026}
!2484 = !DILocation(line: 97, column: 1, scope: !2440)
!2485 = !{i64 2151364280, i64 2151364300, i64 2151364363}
!2486 = !DILocation(line: 99, column: 1, scope: !2440)
!2487 = !{i64 2151364498, i64 2151364518, i64 2151364581}
!2488 = !DILocation(line: 102, column: 1, scope: !2440)
!2489 = !{i64 2151364755, i64 2151364775, i64 2151364838}
!2490 = !DILocation(line: 105, column: 1, scope: !2440)
!2491 = !{i64 2151364995, i64 2151365015, i64 2151365078}
!2492 = !DILocation(line: 115, column: 1, scope: !2440)
!2493 = !{i64 2151365334, i64 2151365354, i64 2151365417}
!2494 = !DILocation(line: 118, column: 1, scope: !2440)
!2495 = !{i64 2151365678, i64 2151365698, i64 2151365761}
!2496 = !DILocation(line: 32, column: 1, scope: !2497)
!2497 = !DILexicalBlockFile(scope: !2440, file: !2498, discriminator: 0)
!2498 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2499 = !{i64 2151366034, i64 2151366054, i64 2151366117}
!2500 = !DILocation(line: 33, column: 1, scope: !2497)
!2501 = !{i64 2151366546, i64 2151366566, i64 2151366629}
!2502 = !DILocation(line: 53, column: 1, scope: !2497)
!2503 = !{i64 2151371115, i64 2151371135, i64 2151371198}
!2504 = !DILocation(line: 54, column: 1, scope: !2497)
!2505 = !{i64 2151371533, i64 2151371553, i64 2151371616}
!2506 = !DILocation(line: 55, column: 1, scope: !2497)
!2507 = !{i64 2151371951, i64 2151371971, i64 2151372034}
!2508 = !DILocation(line: 56, column: 1, scope: !2497)
!2509 = !{i64 2151372369, i64 2151372389, i64 2151372452}
!2510 = !DILocation(line: 57, column: 1, scope: !2497)
!2511 = !{i64 2151372787, i64 2151372807, i64 2151372870}
!2512 = !DILocation(line: 58, column: 1, scope: !2497)
!2513 = !{i64 2151373205, i64 2151373225, i64 2151373288}
!2514 = !DILocation(line: 59, column: 1, scope: !2497)
!2515 = !{i64 2151373623, i64 2151373643, i64 2151373706}
!2516 = !DILocation(line: 60, column: 1, scope: !2497)
!2517 = !{i64 2151374047, i64 2151374067, i64 2151374130}
!2518 = !DILocation(line: 61, column: 1, scope: !2497)
!2519 = !{i64 2151374364, i64 2151374384, i64 2151374447}
!2520 = !DILocation(line: 70, column: 1, scope: !2497)
!2521 = !{i64 2151374593, i64 2151374613, i64 2151374676}
!2522 = !DILocation(line: 72, column: 1, scope: !2497)
!2523 = !{i64 2151374925, i64 2151374945, i64 2151375008}
!2524 = !DILocation(line: 73, column: 1, scope: !2497)
!2525 = !{i64 2151375375, i64 2151375395, i64 2151375458}
!2526 = !DILocation(line: 74, column: 1, scope: !2497)
!2527 = !{i64 2151375825, i64 2151375845, i64 2151375908}
!2528 = !DILocation(line: 75, column: 1, scope: !2497)
!2529 = !{i64 2151376275, i64 2151376295, i64 2151376358}
!2530 = !DILocation(line: 76, column: 1, scope: !2497)
!2531 = !{i64 2151376725, i64 2151376745, i64 2151376808}
!2532 = !DILocation(line: 77, column: 1, scope: !2497)
!2533 = !{i64 2151377175, i64 2151377195, i64 2151377258}
!2534 = !DILocation(line: 78, column: 1, scope: !2497)
!2535 = !{i64 2151377625, i64 2151377645, i64 2151377708}
!2536 = !DILocation(line: 79, column: 1, scope: !2497)
!2537 = !{i64 2151378075, i64 2151378095, i64 2151378158}
!2538 = !DILocation(line: 80, column: 1, scope: !2497)
!2539 = !{i64 2151378528, i64 2151378548, i64 2151378611}
!2540 = !DILocation(line: 84, column: 1, scope: !2497)
!2541 = !{i64 2151378860, i64 2151378880, i64 2151378943}
!2542 = !DILocation(line: 91, column: 1, scope: !2497)
!2543 = !{i64 2151379257, i64 2151379277, i64 2151379340}
!2544 = !DILocation(line: 93, column: 1, scope: !2497)
!2545 = !{i64 2151379624, i64 2151379644, i64 2151379707}
!2546 = !DILocation(line: 106, column: 1, scope: !2497)
!2547 = !{i64 2151379894, i64 2151379914, i64 2151379977}
!2548 = !DILocation(line: 11, column: 1, scope: !2549)
!2549 = !DILexicalBlockFile(scope: !2440, file: !2550, discriminator: 0)
!2550 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2551 = distinct !DISubprogram(name: "main", scope: !2552, file: !2552, line: 12, type: !873, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1930, retainedNodes: !2553)
!2552 = !DIFile(filename: "zephyr/samples/subsys/console/getline/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2553 = !{!2554}
!2554 = !DILocalVariable(name: "s", scope: !2555, file: !2552, line: 19, type: !363)
!2555 = distinct !DILexicalBlock(scope: !2551, file: !2552, line: 18, column: 12)
!2556 = !DILocation(line: 14, column: 2, scope: !2551)
!2557 = !DILocation(line: 16, column: 2, scope: !2551)
!2558 = !DILocation(line: 18, column: 2, scope: !2551)
!2559 = !DILocation(line: 19, column: 13, scope: !2555)
!2560 = !DILocation(line: 0, scope: !2555)
!2561 = !DILocation(line: 21, column: 3, scope: !2555)
!2562 = !DILocation(line: 22, column: 37, scope: !2555)
!2563 = !DILocation(line: 22, column: 47, scope: !2555)
!2564 = !DILocation(line: 22, column: 35, scope: !2555)
!2565 = !DILocation(line: 22, column: 3, scope: !2555)
!2566 = distinct !{!2566, !2558, !2567}
!2567 = !DILocation(line: 23, column: 2, scope: !2551)
!2568 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2569)
!2569 = !{!2570}
!2570 = !DILocalVariable(name: "c", arg: 1, scope: !2568, file: !105, line: 45, type: !103)
!2571 = !DILocation(line: 0, scope: !2568)
!2572 = !DILocation(line: 50, column: 2, scope: !2568)
!2573 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !2574, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2576)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !106}
!2576 = !{!2577}
!2577 = !DILocalVariable(name: "fn", arg: 1, scope: !2573, file: !105, line: 63, type: !106)
!2578 = !DILocation(line: 0, scope: !2573)
!2579 = !DILocation(line: 65, column: 12, scope: !2573)
!2580 = !DILocation(line: 66, column: 1, scope: !2573)
!2581 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !2582, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !336)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{!102}
!2584 = !DILocation(line: 78, column: 9, scope: !2581)
!2585 = !DILocation(line: 78, column: 2, scope: !2581)
!2586 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !2587, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2596)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{null, !192, !2589}
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2590, line: 99, baseType: !2591)
!2590 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2590, line: 40, baseType: !2592)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !2593)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2594)
!2594 = !{!2595}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2593, file: !105, line: 79, baseType: !102, size: 32)
!2596 = !{!2597, !2598, !2599}
!2597 = !DILocalVariable(name: "fmt", arg: 1, scope: !2586, file: !105, line: 113, type: !192)
!2598 = !DILocalVariable(name: "ap", arg: 2, scope: !2586, file: !105, line: 113, type: !2589)
!2599 = !DILocalVariable(name: "ctx", scope: !2600, file: !105, line: 121, type: !2602)
!2600 = distinct !DILexicalBlock(scope: !2601, file: !105, line: 120, column: 27)
!2601 = distinct !DILexicalBlock(scope: !2586, file: !105, line: 120, column: 6)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !2603)
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2602, file: !105, line: 85, baseType: !32, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2602, file: !105, line: 86, baseType: !2606, offset: 32)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, elements: !1964)
!2607 = !DILocation(line: 0, scope: !2586)
!2608 = !DILocation(line: 148, column: 3, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2601, file: !105, line: 138, column: 9)
!2610 = !DILocation(line: 155, column: 1, scope: !2586)
!2611 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !2612, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2614)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!103, !103, !102}
!2614 = !{!2615, !2616}
!2615 = !DILocalVariable(name: "c", arg: 1, scope: !2611, file: !105, line: 107, type: !103)
!2616 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2611, file: !105, line: 107, type: !102)
!2617 = !DILocation(line: 0, scope: !2611)
!2618 = !DILocation(line: 110, column: 9, scope: !2611)
!2619 = !DILocation(line: 110, column: 2, scope: !2611)
!2620 = distinct !DISubprogram(name: "cbvprintf", scope: !2621, file: !2621, line: 739, type: !2622, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2628)
!2621 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!103, !2624, !102, !192, !2589}
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2621, line: 297, baseType: !2625)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{!103, null}
!2628 = !{!2629, !2630, !2631, !2632}
!2629 = !DILocalVariable(name: "out", arg: 1, scope: !2620, file: !2621, line: 739, type: !2624)
!2630 = !DILocalVariable(name: "ctx", arg: 2, scope: !2620, file: !2621, line: 739, type: !102)
!2631 = !DILocalVariable(name: "format", arg: 3, scope: !2620, file: !2621, line: 739, type: !192)
!2632 = !DILocalVariable(name: "ap", arg: 4, scope: !2620, file: !2621, line: 739, type: !2589)
!2633 = !DILocation(line: 0, scope: !2620)
!2634 = !DILocation(line: 741, column: 9, scope: !2620)
!2635 = !DILocation(line: 741, column: 2, scope: !2620)
!2636 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !2637, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2639)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{null, !363, !223}
!2639 = !{!2640, !2641, !2642}
!2640 = !DILocalVariable(name: "c", arg: 1, scope: !2636, file: !105, line: 157, type: !363)
!2641 = !DILocalVariable(name: "n", arg: 2, scope: !2636, file: !105, line: 157, type: !223)
!2642 = !DILocalVariable(name: "i", scope: !2636, file: !105, line: 159, type: !223)
!2643 = !DILocation(line: 0, scope: !2636)
!2644 = !DILocation(line: 164, column: 16, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2646, file: !105, line: 164, column: 2)
!2646 = distinct !DILexicalBlock(scope: !2636, file: !105, line: 164, column: 2)
!2647 = !DILocation(line: 164, column: 2, scope: !2646)
!2648 = !DILocation(line: 165, column: 3, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2645, file: !105, line: 164, column: 26)
!2650 = !DILocation(line: 165, column: 13, scope: !2649)
!2651 = !DILocation(line: 164, column: 22, scope: !2645)
!2652 = distinct !{!2652, !2647, !2653}
!2653 = !DILocation(line: 166, column: 2, scope: !2646)
!2654 = !DILocation(line: 171, column: 1, scope: !2636)
!2655 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !2656, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2658)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{null, !192, null}
!2658 = !{!2659, !2660}
!2659 = !DILocalVariable(name: "fmt", arg: 1, scope: !2655, file: !105, line: 203, type: !192)
!2660 = !DILocalVariable(name: "ap", scope: !2655, file: !105, line: 205, type: !2589)
!2661 = !DILocation(line: 0, scope: !2655)
!2662 = !DILocation(line: 205, column: 2, scope: !2655)
!2663 = !DILocation(line: 205, column: 10, scope: !2655)
!2664 = !DILocation(line: 207, column: 2, scope: !2655)
!2665 = !DILocation(line: 209, column: 2, scope: !2655)
!2666 = !DILocation(line: 211, column: 2, scope: !2655)
!2667 = !DILocation(line: 212, column: 1, scope: !2655)
!2668 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !2669, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2671)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!103, !363, !223, !192, null}
!2671 = !{!2672, !2673, !2674, !2675, !2676}
!2672 = !DILocalVariable(name: "str", arg: 1, scope: !2668, file: !105, line: 239, type: !363)
!2673 = !DILocalVariable(name: "size", arg: 2, scope: !2668, file: !105, line: 239, type: !223)
!2674 = !DILocalVariable(name: "fmt", arg: 3, scope: !2668, file: !105, line: 239, type: !192)
!2675 = !DILocalVariable(name: "ap", scope: !2668, file: !105, line: 241, type: !2589)
!2676 = !DILocalVariable(name: "ret", scope: !2668, file: !105, line: 242, type: !103)
!2677 = !DILocation(line: 0, scope: !2668)
!2678 = !DILocation(line: 241, column: 2, scope: !2668)
!2679 = !DILocation(line: 241, column: 10, scope: !2668)
!2680 = !DILocation(line: 244, column: 2, scope: !2668)
!2681 = !DILocation(line: 245, column: 8, scope: !2668)
!2682 = !DILocation(line: 246, column: 2, scope: !2668)
!2683 = !DILocation(line: 249, column: 1, scope: !2668)
!2684 = !DILocation(line: 248, column: 2, scope: !2668)
!2685 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !2686, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2688)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!103, !363, !223, !192, !2589}
!2688 = !{!2689, !2690, !2691, !2692, !2693}
!2689 = !DILocalVariable(name: "str", arg: 1, scope: !2685, file: !105, line: 251, type: !363)
!2690 = !DILocalVariable(name: "size", arg: 2, scope: !2685, file: !105, line: 251, type: !223)
!2691 = !DILocalVariable(name: "fmt", arg: 3, scope: !2685, file: !105, line: 251, type: !192)
!2692 = !DILocalVariable(name: "ap", arg: 4, scope: !2685, file: !105, line: 251, type: !2589)
!2693 = !DILocalVariable(name: "ctx", scope: !2685, file: !105, line: 253, type: !2694)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !2695)
!2695 = !{!2696, !2697, !2698}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2694, file: !105, line: 218, baseType: !363, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2694, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2694, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!2699 = !DILocation(line: 0, scope: !2685)
!2700 = !DILocation(line: 253, column: 2, scope: !2685)
!2701 = !DILocation(line: 253, column: 21, scope: !2685)
!2702 = !DILocation(line: 253, column: 27, scope: !2685)
!2703 = !DILocation(line: 255, column: 2, scope: !2685)
!2704 = !DILocation(line: 257, column: 10, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2685, file: !105, line: 257, column: 6)
!2706 = !DILocation(line: 257, column: 22, scope: !2705)
!2707 = !DILocation(line: 257, column: 16, scope: !2705)
!2708 = !DILocation(line: 257, column: 6, scope: !2685)
!2709 = !DILocation(line: 258, column: 3, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2705, file: !105, line: 257, column: 27)
!2711 = !DILocation(line: 258, column: 18, scope: !2710)
!2712 = !DILocation(line: 259, column: 2, scope: !2710)
!2713 = !DILocation(line: 262, column: 1, scope: !2685)
!2714 = !DILocation(line: 261, column: 2, scope: !2685)
!2715 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !2716, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2719)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!103, !103, !2718}
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2719 = !{!2720, !2721}
!2720 = !DILocalVariable(name: "c", arg: 1, scope: !2715, file: !105, line: 223, type: !103)
!2721 = !DILocalVariable(name: "ctx", arg: 2, scope: !2715, file: !105, line: 223, type: !2718)
!2722 = !DILocation(line: 0, scope: !2715)
!2723 = !DILocation(line: 225, column: 11, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2715, file: !105, line: 225, column: 6)
!2725 = !DILocation(line: 225, column: 15, scope: !2724)
!2726 = !DILocation(line: 0, scope: !2724)
!2727 = !DILocation(line: 225, column: 23, scope: !2724)
!2728 = !DILocation(line: 225, column: 45, scope: !2724)
!2729 = !DILocation(line: 225, column: 37, scope: !2724)
!2730 = !DILocation(line: 225, column: 6, scope: !2715)
!2731 = !DILocation(line: 226, column: 8, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2724, file: !105, line: 225, column: 50)
!2733 = !DILocation(line: 226, column: 13, scope: !2732)
!2734 = !DILocation(line: 227, column: 3, scope: !2732)
!2735 = !DILocation(line: 230, column: 29, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2715, file: !105, line: 230, column: 6)
!2737 = !DILocation(line: 230, column: 17, scope: !2736)
!2738 = !DILocation(line: 230, column: 6, scope: !2715)
!2739 = !DILocation(line: 231, column: 22, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2736, file: !105, line: 230, column: 34)
!2741 = !DILocation(line: 231, column: 3, scope: !2740)
!2742 = !DILocation(line: 231, column: 26, scope: !2740)
!2743 = !DILocation(line: 232, column: 2, scope: !2740)
!2744 = !DILocation(line: 233, column: 28, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2736, file: !105, line: 232, column: 9)
!2746 = !DILocation(line: 233, column: 22, scope: !2745)
!2747 = !DILocation(line: 233, column: 3, scope: !2745)
!2748 = !DILocation(line: 233, column: 26, scope: !2745)
!2749 = !DILocation(line: 237, column: 1, scope: !2715)
!2750 = distinct !DISubprogram(name: "z_thread_entry", scope: !2751, file: !2751, line: 30, type: !2752, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1932, retainedNodes: !2759)
!2751 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2752 = !DISubroutineType(types: !2753)
!2753 = !{null, !2754, !102, !102, !102}
!2754 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !2755, line: 46, baseType: !2756)
!2755 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 32)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{null, !102, !102, !102}
!2759 = !{!2760, !2761, !2762, !2763}
!2760 = !DILocalVariable(name: "entry", arg: 1, scope: !2750, file: !2751, line: 30, type: !2754)
!2761 = !DILocalVariable(name: "p1", arg: 2, scope: !2750, file: !2751, line: 31, type: !102)
!2762 = !DILocalVariable(name: "p2", arg: 3, scope: !2750, file: !2751, line: 31, type: !102)
!2763 = !DILocalVariable(name: "p3", arg: 4, scope: !2750, file: !2751, line: 31, type: !102)
!2764 = !DILocation(line: 0, scope: !2750)
!2765 = !DILocation(line: 36, column: 2, scope: !2750)
!2766 = !DILocation(line: 38, column: 17, scope: !2750)
!2767 = !DILocation(line: 38, column: 2, scope: !2750)
!2768 = !DILocation(line: 45, column: 2, scope: !2750)
!2769 = distinct !DISubprogram(name: "k_current_get", scope: !315, file: !315, line: 530, type: !2770, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1932, retainedNodes: !336)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!2772}
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !398, line: 347, baseType: !2773)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !2775)
!2775 = !{!2776, !2834, !2846, !2847, !2848, !2849, !2855, !2868}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2774, file: !398, line: 247, baseType: !2777, size: 384)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !2778)
!2778 = !{!2779, !2803, !2810, !2811, !2812, !2821, !2822, !2823}
!2779 = !DIDerivedType(tag: DW_TAG_member, scope: !2777, file: !398, line: 60, baseType: !2780, size: 64)
!2780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2777, file: !398, line: 60, size: 64, elements: !2781)
!2781 = !{!2782, !2797}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2780, file: !398, line: 61, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !2784)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !2785)
!2785 = !{!2786, !2792}
!2786 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !344, line: 38, baseType: !2787, size: 32)
!2787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !344, line: 38, size: 32, elements: !2788)
!2788 = !{!2789, !2791}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2787, file: !344, line: 39, baseType: !2790, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2787, file: !344, line: 40, baseType: !2790, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !344, line: 42, baseType: !2793, size: 32, offset: 32)
!2793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !344, line: 42, size: 32, elements: !2794)
!2794 = !{!2795, !2796}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2793, file: !344, line: 43, baseType: !2790, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2793, file: !344, line: 44, baseType: !2790, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2780, file: !398, line: 62, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !2799)
!2799 = !{!2800}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2798, file: !423, line: 50, baseType: !2801, size: 64)
!2801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2802, size: 64, elements: !382)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2777, file: !398, line: 68, baseType: !2804, size: 32, offset: 64)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !2806)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !2807)
!2807 = !{!2808}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2806, file: !339, line: 232, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !2784)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2777, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2777, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!2812 = !DIDerivedType(tag: DW_TAG_member, scope: !2777, file: !398, line: 90, baseType: !2813, size: 16, offset: 112)
!2813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2777, file: !398, line: 90, size: 16, elements: !2814)
!2814 = !{!2815, !2820}
!2815 = !DIDerivedType(tag: DW_TAG_member, scope: !2813, file: !398, line: 91, baseType: !2816, size: 16)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2813, file: !398, line: 91, size: 16, elements: !2817)
!2817 = !{!2818, !2819}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2816, file: !398, line: 96, baseType: !444, size: 8)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2816, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2813, file: !398, line: 100, baseType: !448, size: 16)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2777, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2777, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2777, file: !398, line: 131, baseType: !2824, size: 192, offset: 192)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !2825)
!2825 = !{!2826, !2827, !2833}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2824, file: !339, line: 245, baseType: !2783, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2824, file: !339, line: 246, baseType: !2828, size: 32, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !2829)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 32)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{null, !2832}
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2824, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2774, file: !398, line: 250, baseType: !2835, size: 288, offset: 384)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2835, file: !465, line: 26, baseType: !121, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2835, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2835, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2835, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2835, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2835, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2835, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2835, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2835, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2774, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2774, file: !398, line: 256, baseType: !2805, size: 64, offset: 704)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2774, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2774, file: !398, line: 300, baseType: !2850, size: 96, offset: 800)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !2851)
!2851 = !{!2852, !2853, !2854}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2850, file: !398, line: 153, baseType: !22, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2850, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2850, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2774, file: !398, line: 325, baseType: !2856, size: 32, offset: 896)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !2858)
!2858 = !{!2859, !2865, !2866}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2857, file: !315, line: 5074, baseType: !2860, size: 96)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !2861)
!2861 = !{!2862, !2863, !2864}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2860, file: !491, line: 57, baseType: !494, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2860, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2860, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2857, file: !315, line: 5075, baseType: !2805, size: 64, offset: 96)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2857, file: !315, line: 5076, baseType: !2867, offset: 160)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2774, file: !398, line: 343, baseType: !2869, size: 64, offset: 928)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !2870)
!2870 = !{!2871, !2872}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2869, file: !465, line: 63, baseType: !121, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2869, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!2873 = !DILocation(line: 535, column: 9, scope: !2769)
!2874 = !DILocation(line: 535, column: 2, scope: !2769)
!2875 = distinct !DISubprogram(name: "k_thread_abort", scope: !2876, file: !2876, line: 188, type: !2877, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1932, retainedNodes: !2879)
!2876 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!2877 = !DISubroutineType(types: !2878)
!2878 = !{null, !2772}
!2879 = !{!2880}
!2880 = !DILocalVariable(name: "thread", arg: 1, scope: !2875, file: !2876, line: 188, type: !2772)
!2881 = !DILocation(line: 0, scope: !2875)
!2882 = !DILocation(line: 197, column: 2, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2875, file: !2876, line: 197, column: 2)
!2884 = !{i64 2151085864}
!2885 = !DILocation(line: 198, column: 2, scope: !2875)
!2886 = !DILocation(line: 199, column: 1, scope: !2875)
!2887 = distinct !DISubprogram(name: "z_current_get", scope: !2876, file: !2876, line: 173, type: !2770, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1932, retainedNodes: !336)
!2888 = !DILocation(line: 180, column: 2, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2887, file: !2876, line: 180, column: 2)
!2890 = !{i64 2151085796}
!2891 = !DILocation(line: 181, column: 9, scope: !2887)
!2892 = !DILocation(line: 181, column: 2, scope: !2887)
!2893 = distinct !DISubprogram(name: "sys_heap_free", scope: !2894, file: !2894, line: 163, type: !2895, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2903)
!2894 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2895 = !DISubroutineType(types: !2896)
!2896 = !{null, !2897, !102}
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 32)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !2899)
!2899 = !{!2900, !2901, !2902}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2898, file: !491, line: 57, baseType: !1951, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2898, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2898, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!2903 = !{!2904, !2905, !2906, !2907}
!2904 = !DILocalVariable(name: "heap", arg: 1, scope: !2893, file: !2894, line: 163, type: !2897)
!2905 = !DILocalVariable(name: "mem", arg: 2, scope: !2893, file: !2894, line: 163, type: !102)
!2906 = !DILocalVariable(name: "h", scope: !2893, file: !2894, line: 168, type: !1951)
!2907 = !DILocalVariable(name: "c", scope: !2893, file: !2894, line: 169, type: !1956)
!2908 = !DILocation(line: 0, scope: !2893)
!2909 = !DILocation(line: 165, column: 10, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2893, file: !2894, line: 165, column: 6)
!2911 = !DILocation(line: 165, column: 6, scope: !2893)
!2912 = !DILocation(line: 168, column: 27, scope: !2893)
!2913 = !DILocation(line: 169, column: 16, scope: !2893)
!2914 = !{i32 0, i32 536870912}
!2915 = !DILocation(line: 187, column: 2, scope: !2893)
!2916 = !DILocation(line: 197, column: 2, scope: !2893)
!2917 = !DILocation(line: 198, column: 1, scope: !2893)
!2918 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !2894, file: !2894, line: 157, type: !2919, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2921)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!1956, !1951, !102}
!2921 = !{!2922, !2923, !2924, !2925}
!2922 = !DILocalVariable(name: "h", arg: 1, scope: !2918, file: !2894, line: 157, type: !1951)
!2923 = !DILocalVariable(name: "p", arg: 2, scope: !2918, file: !2894, line: 157, type: !102)
!2924 = !DILocalVariable(name: "mem", scope: !2918, file: !2894, line: 159, type: !286)
!2925 = !DILocalVariable(name: "base", scope: !2918, file: !2894, line: 159, type: !286)
!2926 = !DILocation(line: 0, scope: !2918)
!2927 = !DILocation(line: 159, column: 39, scope: !2918)
!2928 = !DILocation(line: 160, column: 14, scope: !2918)
!2929 = !DILocation(line: 160, column: 38, scope: !2918)
!2930 = !DILocation(line: 160, column: 46, scope: !2918)
!2931 = !DILocation(line: 160, column: 2, scope: !2918)
!2932 = distinct !DISubprogram(name: "set_chunk_used", scope: !1938, file: !1938, line: 147, type: !2933, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2935)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !1951, !1956, !205}
!2935 = !{!2936, !2937, !2938, !2939, !2940}
!2936 = !DILocalVariable(name: "h", arg: 1, scope: !2932, file: !1938, line: 147, type: !1951)
!2937 = !DILocalVariable(name: "c", arg: 2, scope: !2932, file: !1938, line: 147, type: !1956)
!2938 = !DILocalVariable(name: "used", arg: 3, scope: !2932, file: !1938, line: 147, type: !205)
!2939 = !DILocalVariable(name: "buf", scope: !2932, file: !1938, line: 149, type: !1945)
!2940 = !DILocalVariable(name: "cmem", scope: !2932, file: !1938, line: 150, type: !102)
!2941 = !DILocation(line: 0, scope: !2932)
!2942 = !DILocation(line: 149, column: 22, scope: !2932)
!2943 = !DILocation(line: 0, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2945, file: !1938, line: 159, column: 7)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !1938, line: 158, column: 9)
!2946 = distinct !DILexicalBlock(scope: !2932, file: !1938, line: 152, column: 6)
!2947 = !DILocation(line: 159, column: 7, scope: !2945)
!2948 = !DILocation(line: 165, column: 1, scope: !2932)
!2949 = distinct !DISubprogram(name: "free_chunk", scope: !2894, file: !2894, line: 133, type: !2950, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2952)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{null, !1951, !1956}
!2952 = !{!2953, !2954}
!2953 = !DILocalVariable(name: "h", arg: 1, scope: !2949, file: !2894, line: 133, type: !1951)
!2954 = !DILocalVariable(name: "c", arg: 2, scope: !2949, file: !2894, line: 133, type: !1956)
!2955 = !DILocation(line: 0, scope: !2949)
!2956 = !DILocation(line: 136, column: 21, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2949, file: !2894, line: 136, column: 6)
!2958 = !DILocation(line: 136, column: 7, scope: !2957)
!2959 = !DILocation(line: 136, column: 6, scope: !2949)
!2960 = !DILocation(line: 137, column: 3, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2957, file: !2894, line: 136, column: 41)
!2962 = !DILocation(line: 138, column: 22, scope: !2961)
!2963 = !DILocation(line: 138, column: 3, scope: !2961)
!2964 = !DILocation(line: 139, column: 2, scope: !2961)
!2965 = !DILocation(line: 142, column: 21, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2949, file: !2894, line: 142, column: 6)
!2967 = !{i32 -65535, i32 536903678}
!2968 = !DILocation(line: 142, column: 7, scope: !2966)
!2969 = !DILocation(line: 142, column: 6, scope: !2949)
!2970 = !DILocation(line: 143, column: 3, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2966, file: !2894, line: 142, column: 40)
!2972 = !DILocation(line: 144, column: 19, scope: !2971)
!2973 = !DILocation(line: 144, column: 3, scope: !2971)
!2974 = !DILocation(line: 145, column: 7, scope: !2971)
!2975 = !DILocation(line: 146, column: 2, scope: !2971)
!2976 = !DILocation(line: 148, column: 2, scope: !2949)
!2977 = !DILocation(line: 149, column: 1, scope: !2949)
!2978 = distinct !DISubprogram(name: "right_chunk", scope: !1938, file: !1938, line: 204, type: !2979, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!1956, !1951, !1956}
!2981 = !{!2982, !2983}
!2982 = !DILocalVariable(name: "h", arg: 1, scope: !2978, file: !1938, line: 204, type: !1951)
!2983 = !DILocalVariable(name: "c", arg: 2, scope: !2978, file: !1938, line: 204, type: !1956)
!2984 = !DILocation(line: 0, scope: !2978)
!2985 = !DILocation(line: 206, column: 13, scope: !2978)
!2986 = !DILocation(line: 206, column: 11, scope: !2978)
!2987 = !DILocation(line: 206, column: 2, scope: !2978)
!2988 = distinct !DISubprogram(name: "chunk_used", scope: !1938, file: !1938, line: 137, type: !2989, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2991)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!205, !1951, !1956}
!2991 = !{!2992, !2993}
!2992 = !DILocalVariable(name: "h", arg: 1, scope: !2988, file: !1938, line: 137, type: !1951)
!2993 = !DILocalVariable(name: "c", arg: 2, scope: !2988, file: !1938, line: 137, type: !1956)
!2994 = !DILocation(line: 0, scope: !2988)
!2995 = !DILocation(line: 139, column: 9, scope: !2988)
!2996 = !DILocation(line: 139, column: 42, scope: !2988)
!2997 = !DILocation(line: 139, column: 2, scope: !2988)
!2998 = distinct !DISubprogram(name: "free_list_remove", scope: !2894, file: !2894, line: 60, type: !2950, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !2999)
!2999 = !{!3000, !3001, !3002}
!3000 = !DILocalVariable(name: "h", arg: 1, scope: !2998, file: !2894, line: 60, type: !1951)
!3001 = !DILocalVariable(name: "c", arg: 2, scope: !2998, file: !2894, line: 60, type: !1956)
!3002 = !DILocalVariable(name: "bidx", scope: !3003, file: !2894, line: 63, type: !103)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !2894, line: 62, column: 31)
!3004 = distinct !DILexicalBlock(scope: !2998, file: !2894, line: 62, column: 6)
!3005 = !DILocation(line: 0, scope: !2998)
!3006 = !DILocation(line: 63, column: 28, scope: !3003)
!3007 = !{i32 0, i32 32768}
!3008 = !DILocation(line: 63, column: 14, scope: !3003)
!3009 = !DILocation(line: 0, scope: !3003)
!3010 = !DILocation(line: 64, column: 3, scope: !3003)
!3011 = !DILocation(line: 66, column: 1, scope: !2998)
!3012 = distinct !DISubprogram(name: "merge_chunks", scope: !2894, file: !2894, line: 125, type: !3013, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3015)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{null, !1951, !1956, !1956}
!3015 = !{!3016, !3017, !3018, !3019}
!3016 = !DILocalVariable(name: "h", arg: 1, scope: !3012, file: !2894, line: 125, type: !1951)
!3017 = !DILocalVariable(name: "lc", arg: 2, scope: !3012, file: !2894, line: 125, type: !1956)
!3018 = !DILocalVariable(name: "rc", arg: 3, scope: !3012, file: !2894, line: 125, type: !1956)
!3019 = !DILocalVariable(name: "newsz", scope: !3012, file: !2894, line: 127, type: !3020)
!3020 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !1938, line: 62, baseType: !121)
!3021 = !DILocation(line: 0, scope: !3012)
!3022 = !DILocation(line: 127, column: 20, scope: !3012)
!3023 = !DILocation(line: 127, column: 40, scope: !3012)
!3024 = !DILocation(line: 127, column: 38, scope: !3012)
!3025 = !DILocation(line: 129, column: 2, scope: !3012)
!3026 = !DILocation(line: 130, column: 25, scope: !3012)
!3027 = !DILocation(line: 130, column: 2, scope: !3012)
!3028 = !DILocation(line: 131, column: 1, scope: !3012)
!3029 = distinct !DISubprogram(name: "left_chunk", scope: !1938, file: !1938, line: 199, type: !2979, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3030)
!3030 = !{!3031, !3032}
!3031 = !DILocalVariable(name: "h", arg: 1, scope: !3029, file: !1938, line: 199, type: !1951)
!3032 = !DILocalVariable(name: "c", arg: 2, scope: !3029, file: !1938, line: 199, type: !1956)
!3033 = !DILocation(line: 0, scope: !3029)
!3034 = !DILocation(line: 201, column: 13, scope: !3029)
!3035 = !DILocation(line: 201, column: 11, scope: !3029)
!3036 = !DILocation(line: 201, column: 2, scope: !3029)
!3037 = distinct !DISubprogram(name: "free_list_add", scope: !2894, file: !2894, line: 98, type: !2950, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3038)
!3038 = !{!3039, !3040, !3041}
!3039 = !DILocalVariable(name: "h", arg: 1, scope: !3037, file: !2894, line: 98, type: !1951)
!3040 = !DILocalVariable(name: "c", arg: 2, scope: !3037, file: !2894, line: 98, type: !1956)
!3041 = !DILocalVariable(name: "bidx", scope: !3042, file: !2894, line: 101, type: !103)
!3042 = distinct !DILexicalBlock(scope: !3043, file: !2894, line: 100, column: 31)
!3043 = distinct !DILexicalBlock(scope: !3037, file: !2894, line: 100, column: 6)
!3044 = !DILocation(line: 0, scope: !3037)
!3045 = !DILocation(line: 101, column: 28, scope: !3042)
!3046 = !DILocation(line: 101, column: 14, scope: !3042)
!3047 = !DILocation(line: 0, scope: !3042)
!3048 = !DILocation(line: 102, column: 3, scope: !3042)
!3049 = !DILocation(line: 104, column: 1, scope: !3037)
!3050 = distinct !DISubprogram(name: "chunk_size", scope: !1938, file: !1938, line: 142, type: !3051, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3053)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!3020, !1951, !1956}
!3053 = !{!3054, !3055}
!3054 = !DILocalVariable(name: "h", arg: 1, scope: !3050, file: !1938, line: 142, type: !1951)
!3055 = !DILocalVariable(name: "c", arg: 2, scope: !3050, file: !1938, line: 142, type: !1956)
!3056 = !DILocation(line: 0, scope: !3050)
!3057 = !DILocation(line: 144, column: 9, scope: !3050)
!3058 = !DILocation(line: 144, column: 42, scope: !3050)
!3059 = !DILocation(line: 144, column: 2, scope: !3050)
!3060 = distinct !DISubprogram(name: "bucket_idx", scope: !1938, file: !1938, line: 250, type: !3061, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3063)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!103, !1951, !3020}
!3063 = !{!3064, !3065, !3066}
!3064 = !DILocalVariable(name: "h", arg: 1, scope: !3060, file: !1938, line: 250, type: !1951)
!3065 = !DILocalVariable(name: "sz", arg: 2, scope: !3060, file: !1938, line: 250, type: !3020)
!3066 = !DILocalVariable(name: "usable_sz", scope: !3060, file: !1938, line: 252, type: !32)
!3067 = !DILocation(line: 0, scope: !3060)
!3068 = !DILocation(line: 252, column: 32, scope: !3060)
!3069 = !DILocation(line: 252, column: 30, scope: !3060)
!3070 = !DILocation(line: 252, column: 50, scope: !3060)
!3071 = !DILocation(line: 253, column: 14, scope: !3060)
!3072 = !{i32 0, i32 33}
!3073 = !DILocation(line: 253, column: 12, scope: !3060)
!3074 = !DILocation(line: 253, column: 2, scope: !3060)
!3075 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !2894, file: !2894, line: 68, type: !3076, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3078)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{null, !1951, !1956, !103}
!3078 = !{!3079, !3080, !3081, !3082, !3084, !3087}
!3079 = !DILocalVariable(name: "h", arg: 1, scope: !3075, file: !2894, line: 68, type: !1951)
!3080 = !DILocalVariable(name: "c", arg: 2, scope: !3075, file: !2894, line: 68, type: !1956)
!3081 = !DILocalVariable(name: "bidx", arg: 3, scope: !3075, file: !2894, line: 68, type: !103)
!3082 = !DILocalVariable(name: "b", scope: !3075, file: !2894, line: 70, type: !3083)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!3084 = !DILocalVariable(name: "second", scope: !3085, file: !2894, line: 84, type: !1956)
!3085 = distinct !DILexicalBlock(scope: !3086, file: !2894, line: 80, column: 9)
!3086 = distinct !DILexicalBlock(scope: !3075, file: !2894, line: 72, column: 6)
!3087 = !DILocalVariable(name: "first", scope: !3085, file: !2894, line: 85, type: !1956)
!3088 = !DILocation(line: 0, scope: !3075)
!3089 = !DILocation(line: 72, column: 9, scope: !3086)
!3090 = !DILocation(line: 72, column: 14, scope: !3086)
!3091 = !DILocation(line: 72, column: 6, scope: !3075)
!3092 = !DILocation(line: 76, column: 23, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3086, file: !2894, line: 72, column: 21)
!3094 = !DILocation(line: 76, column: 6, scope: !3093)
!3095 = !DILocation(line: 76, column: 20, scope: !3093)
!3096 = !DILocation(line: 77, column: 11, scope: !3093)
!3097 = !DILocation(line: 78, column: 3, scope: !3093)
!3098 = !DILocation(line: 79, column: 3, scope: !3093)
!3099 = !DILocation(line: 80, column: 2, scope: !3093)
!3100 = !DILocation(line: 0, scope: !3085)
!3101 = !DILocation(line: 85, column: 21, scope: !3085)
!3102 = !{i32 0, i32 65536}
!3103 = !DILocation(line: 87, column: 3, scope: !3085)
!3104 = !DILocation(line: 88, column: 3, scope: !3085)
!3105 = !DILocation(line: 89, column: 3, scope: !3085)
!3106 = !DILocation(line: 90, column: 3, scope: !3085)
!3107 = !DILocation(line: 96, column: 1, scope: !3075)
!3108 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !1938, file: !1938, line: 187, type: !3013, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3109)
!3109 = !{!3110, !3111, !3112}
!3110 = !DILocalVariable(name: "h", arg: 1, scope: !3108, file: !1938, line: 187, type: !1951)
!3111 = !DILocalVariable(name: "c", arg: 2, scope: !3108, file: !1938, line: 187, type: !1956)
!3112 = !DILocalVariable(name: "prev", arg: 3, scope: !3108, file: !1938, line: 188, type: !1956)
!3113 = !DILocation(line: 0, scope: !3108)
!3114 = !DILocation(line: 190, column: 2, scope: !3108)
!3115 = !DILocation(line: 191, column: 1, scope: !3108)
!3116 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !1938, file: !1938, line: 193, type: !3013, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3117)
!3117 = !{!3118, !3119, !3120}
!3118 = !DILocalVariable(name: "h", arg: 1, scope: !3116, file: !1938, line: 193, type: !1951)
!3119 = !DILocalVariable(name: "c", arg: 2, scope: !3116, file: !1938, line: 193, type: !1956)
!3120 = !DILocalVariable(name: "next", arg: 3, scope: !3116, file: !1938, line: 194, type: !1956)
!3121 = !DILocation(line: 0, scope: !3116)
!3122 = !DILocation(line: 196, column: 2, scope: !3116)
!3123 = !DILocation(line: 197, column: 1, scope: !3116)
!3124 = distinct !DISubprogram(name: "prev_free_chunk", scope: !1938, file: !1938, line: 177, type: !2979, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3125)
!3125 = !{!3126, !3127}
!3126 = !DILocalVariable(name: "h", arg: 1, scope: !3124, file: !1938, line: 177, type: !1951)
!3127 = !DILocalVariable(name: "c", arg: 2, scope: !3124, file: !1938, line: 177, type: !1956)
!3128 = !DILocation(line: 0, scope: !3124)
!3129 = !DILocation(line: 179, column: 9, scope: !3124)
!3130 = !DILocation(line: 179, column: 2, scope: !3124)
!3131 = distinct !DISubprogram(name: "chunk_field", scope: !1938, file: !1938, line: 107, type: !3132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3134)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!1956, !1951, !1956, !1937}
!3134 = !{!3135, !3136, !3137, !3138, !3139}
!3135 = !DILocalVariable(name: "h", arg: 1, scope: !3131, file: !1938, line: 107, type: !1951)
!3136 = !DILocalVariable(name: "c", arg: 2, scope: !3131, file: !1938, line: 107, type: !1956)
!3137 = !DILocalVariable(name: "f", arg: 3, scope: !3131, file: !1938, line: 108, type: !1937)
!3138 = !DILocalVariable(name: "buf", scope: !3131, file: !1938, line: 110, type: !1945)
!3139 = !DILocalVariable(name: "cmem", scope: !3131, file: !1938, line: 111, type: !102)
!3140 = !DILocation(line: 0, scope: !3131)
!3141 = !DILocation(line: 110, column: 22, scope: !3131)
!3142 = !DILocation(line: 111, column: 15, scope: !3131)
!3143 = !DILocation(line: 116, column: 11, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !1938, line: 115, column: 9)
!3145 = distinct !DILexicalBlock(scope: !3131, file: !1938, line: 113, column: 6)
!3146 = !DILocation(line: 116, column: 10, scope: !3144)
!3147 = !DILocation(line: 118, column: 1, scope: !3131)
!3148 = distinct !DISubprogram(name: "chunk_buf", scope: !1938, file: !1938, line: 101, type: !3149, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3151)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!1945, !1951}
!3151 = !{!3152}
!3152 = !DILocalVariable(name: "h", arg: 1, scope: !3148, file: !1938, line: 101, type: !1951)
!3153 = !DILocation(line: 0, scope: !3148)
!3154 = !DILocation(line: 104, column: 9, scope: !3148)
!3155 = !DILocation(line: 104, column: 2, scope: !3148)
!3156 = distinct !DISubprogram(name: "chunk_set", scope: !1938, file: !1938, line: 120, type: !3157, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3159)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !1951, !1956, !1937, !1956}
!3159 = !{!3160, !3161, !3162, !3163, !3164, !3165}
!3160 = !DILocalVariable(name: "h", arg: 1, scope: !3156, file: !1938, line: 120, type: !1951)
!3161 = !DILocalVariable(name: "c", arg: 2, scope: !3156, file: !1938, line: 120, type: !1956)
!3162 = !DILocalVariable(name: "f", arg: 3, scope: !3156, file: !1938, line: 121, type: !1937)
!3163 = !DILocalVariable(name: "val", arg: 4, scope: !3156, file: !1938, line: 121, type: !1956)
!3164 = !DILocalVariable(name: "buf", scope: !3156, file: !1938, line: 125, type: !1945)
!3165 = !DILocalVariable(name: "cmem", scope: !3156, file: !1938, line: 126, type: !102)
!3166 = !DILocation(line: 0, scope: !3156)
!3167 = !DILocation(line: 125, column: 22, scope: !3156)
!3168 = !DILocation(line: 126, column: 15, scope: !3156)
!3169 = !DILocation(line: 133, column: 27, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3171, file: !1938, line: 131, column: 9)
!3171 = distinct !DILexicalBlock(scope: !3156, file: !1938, line: 128, column: 6)
!3172 = !DILocation(line: 133, column: 4, scope: !3170)
!3173 = !DILocation(line: 133, column: 3, scope: !3170)
!3174 = !DILocation(line: 133, column: 25, scope: !3170)
!3175 = !DILocation(line: 135, column: 1, scope: !3156)
!3176 = distinct !DISubprogram(name: "min_chunk_size", scope: !1938, file: !1938, line: 240, type: !3177, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3179)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!3020, !1951}
!3179 = !{!3180}
!3180 = !DILocalVariable(name: "h", arg: 1, scope: !3176, file: !1938, line: 240, type: !1951)
!3181 = !DILocation(line: 0, scope: !3176)
!3182 = !DILocation(line: 242, column: 9, scope: !3176)
!3183 = !DILocation(line: 242, column: 2, scope: !3176)
!3184 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !1938, file: !1938, line: 235, type: !3185, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!3020, !1951, !223}
!3187 = !{!3188, !3189}
!3188 = !DILocalVariable(name: "h", arg: 1, scope: !3184, file: !1938, line: 235, type: !1951)
!3189 = !DILocalVariable(name: "bytes", arg: 2, scope: !3184, file: !1938, line: 235, type: !223)
!3190 = !DILocation(line: 0, scope: !3184)
!3191 = !DILocation(line: 237, column: 39, scope: !3184)
!3192 = !DILocation(line: 237, column: 9, scope: !3184)
!3193 = !DILocation(line: 237, column: 2, scope: !3184)
!3194 = distinct !DISubprogram(name: "chunksz", scope: !1938, file: !1938, line: 230, type: !3195, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!3020, !223}
!3197 = !{!3198}
!3198 = !DILocalVariable(name: "bytes", arg: 1, scope: !3194, file: !1938, line: 230, type: !223)
!3199 = !DILocation(line: 0, scope: !3194)
!3200 = !DILocation(line: 232, column: 29, scope: !3194)
!3201 = !DILocation(line: 232, column: 35, scope: !3194)
!3202 = !DILocation(line: 232, column: 2, scope: !3194)
!3203 = distinct !DISubprogram(name: "set_chunk_size", scope: !1938, file: !1938, line: 172, type: !3204, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3206)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{null, !1951, !1956, !3020}
!3206 = !{!3207, !3208, !3209}
!3207 = !DILocalVariable(name: "h", arg: 1, scope: !3203, file: !1938, line: 172, type: !1951)
!3208 = !DILocalVariable(name: "c", arg: 2, scope: !3203, file: !1938, line: 172, type: !1956)
!3209 = !DILocalVariable(name: "size", arg: 3, scope: !3203, file: !1938, line: 172, type: !3020)
!3210 = !DILocation(line: 0, scope: !3203)
!3211 = !DILocation(line: 174, column: 38, scope: !3203)
!3212 = !DILocation(line: 174, column: 2, scope: !3203)
!3213 = !DILocation(line: 175, column: 1, scope: !3203)
!3214 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !1938, file: !1938, line: 209, type: !3204, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3215)
!3215 = !{!3216, !3217, !3218}
!3216 = !DILocalVariable(name: "h", arg: 1, scope: !3214, file: !1938, line: 209, type: !1951)
!3217 = !DILocalVariable(name: "c", arg: 2, scope: !3214, file: !1938, line: 209, type: !1956)
!3218 = !DILocalVariable(name: "size", arg: 3, scope: !3214, file: !1938, line: 210, type: !3020)
!3219 = !DILocation(line: 0, scope: !3214)
!3220 = !DILocation(line: 212, column: 2, scope: !3214)
!3221 = !DILocation(line: 213, column: 1, scope: !3214)
!3222 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !2894, file: !2894, line: 34, type: !3076, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3223)
!3223 = !{!3224, !3225, !3226, !3227, !3228, !3231}
!3224 = !DILocalVariable(name: "h", arg: 1, scope: !3222, file: !2894, line: 34, type: !1951)
!3225 = !DILocalVariable(name: "c", arg: 2, scope: !3222, file: !2894, line: 34, type: !1956)
!3226 = !DILocalVariable(name: "bidx", arg: 3, scope: !3222, file: !2894, line: 34, type: !103)
!3227 = !DILocalVariable(name: "b", scope: !3222, file: !2894, line: 36, type: !3083)
!3228 = !DILocalVariable(name: "first", scope: !3229, file: !2894, line: 47, type: !1956)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !2894, line: 46, column: 9)
!3230 = distinct !DILexicalBlock(scope: !3222, file: !2894, line: 42, column: 6)
!3231 = !DILocalVariable(name: "second", scope: !3229, file: !2894, line: 48, type: !1956)
!3232 = !DILocation(line: 0, scope: !3222)
!3233 = !DILocation(line: 36, column: 29, scope: !3222)
!3234 = !DILocation(line: 42, column: 6, scope: !3230)
!3235 = !DILocation(line: 42, column: 28, scope: !3230)
!3236 = !DILocation(line: 42, column: 6, scope: !3222)
!3237 = !DILocation(line: 44, column: 24, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3230, file: !2894, line: 42, column: 34)
!3239 = !DILocation(line: 44, column: 23, scope: !3238)
!3240 = !DILocation(line: 44, column: 6, scope: !3238)
!3241 = !DILocation(line: 44, column: 20, scope: !3238)
!3242 = !DILocation(line: 45, column: 6, scope: !3238)
!3243 = !DILocation(line: 45, column: 11, scope: !3238)
!3244 = !DILocation(line: 46, column: 2, scope: !3238)
!3245 = !DILocation(line: 47, column: 21, scope: !3229)
!3246 = !DILocation(line: 0, scope: !3229)
!3247 = !DILocation(line: 50, column: 6, scope: !3229)
!3248 = !DILocation(line: 50, column: 11, scope: !3229)
!3249 = !DILocation(line: 51, column: 3, scope: !3229)
!3250 = !DILocation(line: 52, column: 3, scope: !3229)
!3251 = !DILocation(line: 58, column: 1, scope: !3222)
!3252 = distinct !DISubprogram(name: "next_free_chunk", scope: !1938, file: !1938, line: 182, type: !2979, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3253)
!3253 = !{!3254, !3255}
!3254 = !DILocalVariable(name: "h", arg: 1, scope: !3252, file: !1938, line: 182, type: !1951)
!3255 = !DILocalVariable(name: "c", arg: 2, scope: !3252, file: !1938, line: 182, type: !1956)
!3256 = !DILocation(line: 0, scope: !3252)
!3257 = !DILocation(line: 184, column: 9, scope: !3252)
!3258 = !DILocation(line: 184, column: 2, scope: !3252)
!3259 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !2894, file: !2894, line: 200, type: !3260, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3262)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!223, !2897, !102}
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269}
!3263 = !DILocalVariable(name: "heap", arg: 1, scope: !3259, file: !2894, line: 200, type: !2897)
!3264 = !DILocalVariable(name: "mem", arg: 2, scope: !3259, file: !2894, line: 200, type: !102)
!3265 = !DILocalVariable(name: "h", scope: !3259, file: !2894, line: 202, type: !1951)
!3266 = !DILocalVariable(name: "c", scope: !3259, file: !2894, line: 203, type: !1956)
!3267 = !DILocalVariable(name: "addr", scope: !3259, file: !2894, line: 204, type: !223)
!3268 = !DILocalVariable(name: "chunk_base", scope: !3259, file: !2894, line: 205, type: !223)
!3269 = !DILocalVariable(name: "chunk_sz", scope: !3259, file: !2894, line: 206, type: !223)
!3270 = !DILocation(line: 0, scope: !3259)
!3271 = !DILocation(line: 202, column: 27, scope: !3259)
!3272 = !DILocation(line: 203, column: 16, scope: !3259)
!3273 = !DILocation(line: 204, column: 16, scope: !3259)
!3274 = !DILocation(line: 205, column: 31, scope: !3259)
!3275 = !DILocation(line: 205, column: 22, scope: !3259)
!3276 = !DILocation(line: 206, column: 20, scope: !3259)
!3277 = !DILocation(line: 206, column: 37, scope: !3259)
!3278 = !DILocation(line: 208, column: 26, scope: !3259)
!3279 = !DILocation(line: 208, column: 18, scope: !3259)
!3280 = !DILocation(line: 208, column: 2, scope: !3259)
!3281 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !2894, file: !2894, line: 263, type: !3282, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3284)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!102, !2897, !223}
!3284 = !{!3285, !3286, !3287, !3288, !3289, !3290}
!3285 = !DILocalVariable(name: "heap", arg: 1, scope: !3281, file: !2894, line: 263, type: !2897)
!3286 = !DILocalVariable(name: "bytes", arg: 2, scope: !3281, file: !2894, line: 263, type: !223)
!3287 = !DILocalVariable(name: "h", scope: !3281, file: !2894, line: 265, type: !1951)
!3288 = !DILocalVariable(name: "mem", scope: !3281, file: !2894, line: 266, type: !102)
!3289 = !DILocalVariable(name: "chunk_sz", scope: !3281, file: !2894, line: 272, type: !3020)
!3290 = !DILocalVariable(name: "c", scope: !3281, file: !2894, line: 273, type: !1956)
!3291 = !DILocation(line: 0, scope: !3281)
!3292 = !DILocation(line: 265, column: 27, scope: !3281)
!3293 = !DILocation(line: 268, column: 12, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3281, file: !2894, line: 268, column: 6)
!3295 = !DILocation(line: 268, column: 18, scope: !3294)
!3296 = !DILocation(line: 268, column: 21, scope: !3294)
!3297 = !DILocation(line: 268, column: 6, scope: !3281)
!3298 = !DILocation(line: 272, column: 23, scope: !3281)
!3299 = !DILocation(line: 273, column: 16, scope: !3281)
!3300 = !DILocation(line: 274, column: 8, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3281, file: !2894, line: 274, column: 6)
!3302 = !DILocation(line: 274, column: 6, scope: !3281)
!3303 = !DILocation(line: 279, column: 6, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3281, file: !2894, line: 279, column: 6)
!3305 = !DILocation(line: 279, column: 23, scope: !3304)
!3306 = !DILocation(line: 279, column: 6, scope: !3281)
!3307 = !DILocation(line: 280, column: 24, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3304, file: !2894, line: 279, column: 35)
!3309 = !DILocation(line: 280, column: 3, scope: !3308)
!3310 = !DILocation(line: 281, column: 3, scope: !3308)
!3311 = !DILocation(line: 282, column: 2, scope: !3308)
!3312 = !DILocation(line: 284, column: 2, scope: !3281)
!3313 = !DILocation(line: 286, column: 8, scope: !3281)
!3314 = !DILocation(line: 298, column: 2, scope: !3281)
!3315 = !DILocation(line: 299, column: 1, scope: !3281)
!3316 = distinct !DISubprogram(name: "size_too_big", scope: !1938, file: !1938, line: 256, type: !3317, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3319)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!205, !1951, !223}
!3319 = !{!3320, !3321}
!3320 = !DILocalVariable(name: "h", arg: 1, scope: !3316, file: !1938, line: 256, type: !1951)
!3321 = !DILocalVariable(name: "bytes", arg: 2, scope: !3316, file: !1938, line: 256, type: !223)
!3322 = !DILocation(line: 0, scope: !3316)
!3323 = !DILocation(line: 262, column: 16, scope: !3316)
!3324 = !DILocation(line: 262, column: 36, scope: !3316)
!3325 = !DILocation(line: 262, column: 30, scope: !3316)
!3326 = !DILocation(line: 262, column: 2, scope: !3316)
!3327 = distinct !DISubprogram(name: "alloc_chunk", scope: !2894, file: !2894, line: 211, type: !3328, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!1956, !1951, !3020}
!3330 = !{!3331, !3332, !3333, !3334, !3335, !3338, !3339, !3341, !3342, !3345}
!3331 = !DILocalVariable(name: "h", arg: 1, scope: !3327, file: !2894, line: 211, type: !1951)
!3332 = !DILocalVariable(name: "sz", arg: 2, scope: !3327, file: !2894, line: 211, type: !3020)
!3333 = !DILocalVariable(name: "bi", scope: !3327, file: !2894, line: 213, type: !103)
!3334 = !DILocalVariable(name: "b", scope: !3327, file: !2894, line: 214, type: !3083)
!3335 = !DILocalVariable(name: "first", scope: !3336, file: !2894, line: 233, type: !1956)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !2894, line: 232, column: 15)
!3337 = distinct !DILexicalBlock(scope: !3327, file: !2894, line: 232, column: 6)
!3338 = !DILocalVariable(name: "i", scope: !3336, file: !2894, line: 234, type: !103)
!3339 = !DILocalVariable(name: "c", scope: !3340, file: !2894, line: 236, type: !1956)
!3340 = distinct !DILexicalBlock(scope: !3336, file: !2894, line: 235, column: 6)
!3341 = !DILocalVariable(name: "bmask", scope: !3327, file: !2894, line: 249, type: !121)
!3342 = !DILocalVariable(name: "minbucket", scope: !3343, file: !2894, line: 252, type: !103)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !2894, line: 251, column: 19)
!3344 = distinct !DILexicalBlock(scope: !3327, file: !2894, line: 251, column: 6)
!3345 = !DILocalVariable(name: "c", scope: !3343, file: !2894, line: 253, type: !1956)
!3346 = !DILocation(line: 0, scope: !3327)
!3347 = !DILocation(line: 213, column: 11, scope: !3327)
!3348 = !DILocation(line: 232, column: 9, scope: !3337)
!3349 = !DILocation(line: 232, column: 6, scope: !3337)
!3350 = !DILocation(line: 232, column: 6, scope: !3327)
!3351 = !DILocation(line: 236, column: 21, scope: !3340)
!3352 = !DILocation(line: 0, scope: !3336)
!3353 = !DILocation(line: 0, scope: !3340)
!3354 = !DILocation(line: 237, column: 8, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3340, file: !2894, line: 237, column: 8)
!3356 = !DILocation(line: 237, column: 25, scope: !3355)
!3357 = !DILocation(line: 237, column: 8, scope: !3340)
!3358 = !DILocation(line: 238, column: 5, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3355, file: !2894, line: 237, column: 32)
!3360 = !DILocation(line: 241, column: 14, scope: !3340)
!3361 = !DILocation(line: 241, column: 12, scope: !3340)
!3362 = !DILocation(line: 243, column: 12, scope: !3336)
!3363 = !DILocation(line: 243, column: 16, scope: !3336)
!3364 = distinct !{!3364, !3365, !3366}
!3365 = !DILocation(line: 235, column: 3, scope: !3336)
!3366 = !DILocation(line: 243, column: 35, scope: !3336)
!3367 = !DILocation(line: 249, column: 22, scope: !3327)
!3368 = !DILocation(line: 249, column: 39, scope: !3327)
!3369 = !DILocation(line: 249, column: 36, scope: !3327)
!3370 = !DILocation(line: 251, column: 12, scope: !3344)
!3371 = !DILocation(line: 251, column: 6, scope: !3327)
!3372 = !DILocation(line: 252, column: 19, scope: !3343)
!3373 = !DILocation(line: 0, scope: !3343)
!3374 = !DILocation(line: 253, column: 39, scope: !3343)
!3375 = !DILocation(line: 255, column: 3, scope: !3343)
!3376 = !DILocation(line: 261, column: 1, scope: !3327)
!3377 = distinct !DISubprogram(name: "split_chunks", scope: !2894, file: !2894, line: 109, type: !3013, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3378)
!3378 = !{!3379, !3380, !3381, !3382, !3383, !3384}
!3379 = !DILocalVariable(name: "h", arg: 1, scope: !3377, file: !2894, line: 109, type: !1951)
!3380 = !DILocalVariable(name: "lc", arg: 2, scope: !3377, file: !2894, line: 109, type: !1956)
!3381 = !DILocalVariable(name: "rc", arg: 3, scope: !3377, file: !2894, line: 109, type: !1956)
!3382 = !DILocalVariable(name: "sz0", scope: !3377, file: !2894, line: 114, type: !3020)
!3383 = !DILocalVariable(name: "lsz", scope: !3377, file: !2894, line: 115, type: !3020)
!3384 = !DILocalVariable(name: "rsz", scope: !3377, file: !2894, line: 116, type: !3020)
!3385 = !DILocation(line: 0, scope: !3377)
!3386 = !DILocation(line: 114, column: 18, scope: !3377)
!3387 = !DILocation(line: 115, column: 21, scope: !3377)
!3388 = !DILocation(line: 116, column: 22, scope: !3377)
!3389 = !DILocation(line: 118, column: 2, scope: !3377)
!3390 = !DILocation(line: 119, column: 2, scope: !3377)
!3391 = !DILocation(line: 120, column: 2, scope: !3377)
!3392 = !DILocation(line: 121, column: 25, scope: !3377)
!3393 = !DILocation(line: 121, column: 2, scope: !3377)
!3394 = !DILocation(line: 122, column: 1, scope: !3377)
!3395 = distinct !DISubprogram(name: "chunk_mem", scope: !2894, file: !2894, line: 24, type: !3396, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!102, !1951, !1956}
!3398 = !{!3399, !3400, !3401, !3402}
!3399 = !DILocalVariable(name: "h", arg: 1, scope: !3395, file: !2894, line: 24, type: !1951)
!3400 = !DILocalVariable(name: "c", arg: 2, scope: !3395, file: !2894, line: 24, type: !1956)
!3401 = !DILocalVariable(name: "buf", scope: !3395, file: !2894, line: 26, type: !1945)
!3402 = !DILocalVariable(name: "ret", scope: !3395, file: !2894, line: 27, type: !286)
!3403 = !DILocation(line: 0, scope: !3395)
!3404 = !DILocation(line: 26, column: 22, scope: !3395)
!3405 = !DILocation(line: 27, column: 38, scope: !3395)
!3406 = !DILocation(line: 31, column: 2, scope: !3395)
!3407 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !2894, file: !2894, line: 301, type: !3408, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!102, !2897, !223, !223}
!3410 = !{!3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422}
!3411 = !DILocalVariable(name: "heap", arg: 1, scope: !3407, file: !2894, line: 301, type: !2897)
!3412 = !DILocalVariable(name: "align", arg: 2, scope: !3407, file: !2894, line: 301, type: !223)
!3413 = !DILocalVariable(name: "bytes", arg: 3, scope: !3407, file: !2894, line: 301, type: !223)
!3414 = !DILocalVariable(name: "h", scope: !3407, file: !2894, line: 303, type: !1951)
!3415 = !DILocalVariable(name: "gap", scope: !3407, file: !2894, line: 304, type: !223)
!3416 = !DILocalVariable(name: "rew", scope: !3407, file: !2894, line: 304, type: !223)
!3417 = !DILocalVariable(name: "padded_sz", scope: !3407, file: !2894, line: 335, type: !3020)
!3418 = !DILocalVariable(name: "c0", scope: !3407, file: !2894, line: 336, type: !1956)
!3419 = !DILocalVariable(name: "mem", scope: !3407, file: !2894, line: 341, type: !286)
!3420 = !DILocalVariable(name: "end", scope: !3407, file: !2894, line: 345, type: !1945)
!3421 = !DILocalVariable(name: "c", scope: !3407, file: !2894, line: 348, type: !1956)
!3422 = !DILocalVariable(name: "c_end", scope: !3407, file: !2894, line: 349, type: !1956)
!3423 = !DILocation(line: 0, scope: !3407)
!3424 = !DILocation(line: 303, column: 27, scope: !3407)
!3425 = !DILocation(line: 313, column: 16, scope: !3407)
!3426 = !DILocation(line: 313, column: 14, scope: !3407)
!3427 = !DILocation(line: 314, column: 12, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3407, file: !2894, line: 314, column: 6)
!3429 = !DILocation(line: 314, column: 6, scope: !3407)
!3430 = !DILocation(line: 315, column: 9, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3428, file: !2894, line: 314, column: 20)
!3432 = !DILocation(line: 316, column: 9, scope: !3431)
!3433 = !DILocation(line: 318, column: 13, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !2894, line: 318, column: 7)
!3435 = distinct !DILexicalBlock(scope: !3428, file: !2894, line: 317, column: 9)
!3436 = !DILocation(line: 318, column: 7, scope: !3435)
!3437 = !DILocation(line: 319, column: 11, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !2894, line: 318, column: 39)
!3439 = !DILocation(line: 319, column: 4, scope: !3438)
!3440 = !DILocation(line: 0, scope: !3428)
!3441 = !DILocation(line: 326, column: 12, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3407, file: !2894, line: 326, column: 6)
!3443 = !DILocation(line: 326, column: 17, scope: !3442)
!3444 = !DILocation(line: 326, column: 20, scope: !3442)
!3445 = !DILocation(line: 326, column: 6, scope: !3407)
!3446 = !DILocation(line: 335, column: 50, scope: !3407)
!3447 = !DILocation(line: 335, column: 58, scope: !3407)
!3448 = !DILocation(line: 335, column: 24, scope: !3407)
!3449 = !DILocation(line: 336, column: 17, scope: !3407)
!3450 = !DILocation(line: 338, column: 9, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3407, file: !2894, line: 338, column: 6)
!3452 = !DILocation(line: 338, column: 6, scope: !3407)
!3453 = !DILocation(line: 341, column: 17, scope: !3407)
!3454 = !DILocation(line: 344, column: 20, scope: !3407)
!3455 = !DILocation(line: 344, column: 8, scope: !3407)
!3456 = !DILocation(line: 344, column: 47, scope: !3407)
!3457 = !DILocation(line: 345, column: 39, scope: !3407)
!3458 = !DILocation(line: 348, column: 16, scope: !3407)
!3459 = !DILocation(line: 349, column: 26, scope: !3407)
!3460 = !DILocation(line: 349, column: 24, scope: !3407)
!3461 = !DILocation(line: 353, column: 8, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3407, file: !2894, line: 353, column: 6)
!3463 = !DILocation(line: 353, column: 6, scope: !3407)
!3464 = !DILocation(line: 354, column: 3, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3462, file: !2894, line: 353, column: 14)
!3466 = !DILocation(line: 355, column: 3, scope: !3465)
!3467 = !DILocation(line: 356, column: 2, scope: !3465)
!3468 = !DILocation(line: 359, column: 6, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3407, file: !2894, line: 359, column: 6)
!3470 = !DILocation(line: 359, column: 24, scope: !3469)
!3471 = !DILocation(line: 359, column: 6, scope: !3407)
!3472 = !DILocation(line: 360, column: 3, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3469, file: !2894, line: 359, column: 33)
!3474 = !DILocation(line: 361, column: 3, scope: !3473)
!3475 = !DILocation(line: 362, column: 2, scope: !3473)
!3476 = !DILocation(line: 364, column: 2, scope: !3407)
!3477 = !DILocation(line: 377, column: 1, scope: !3407)
!3478 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !2894, file: !2894, line: 379, type: !3479, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3481)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!102, !2897, !102, !223, !223}
!3481 = !{!3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3497, !3498}
!3482 = !DILocalVariable(name: "heap", arg: 1, scope: !3478, file: !2894, line: 379, type: !2897)
!3483 = !DILocalVariable(name: "ptr", arg: 2, scope: !3478, file: !2894, line: 379, type: !102)
!3484 = !DILocalVariable(name: "align", arg: 3, scope: !3478, file: !2894, line: 380, type: !223)
!3485 = !DILocalVariable(name: "bytes", arg: 4, scope: !3478, file: !2894, line: 380, type: !223)
!3486 = !DILocalVariable(name: "h", scope: !3478, file: !2894, line: 382, type: !1951)
!3487 = !DILocalVariable(name: "c", scope: !3478, file: !2894, line: 399, type: !1956)
!3488 = !DILocalVariable(name: "rc", scope: !3478, file: !2894, line: 400, type: !1956)
!3489 = !DILocalVariable(name: "align_gap", scope: !3478, file: !2894, line: 401, type: !223)
!3490 = !DILocalVariable(name: "chunks_need", scope: !3478, file: !2894, line: 402, type: !3020)
!3491 = !DILocalVariable(name: "split_size", scope: !3492, file: !2894, line: 435, type: !3020)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !2894, line: 433, column: 61)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !2894, line: 432, column: 13)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !2894, line: 409, column: 13)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !2894, line: 406, column: 13)
!3496 = distinct !DILexicalBlock(scope: !3478, file: !2894, line: 404, column: 6)
!3497 = !DILocalVariable(name: "ptr2", scope: !3478, file: !2894, line: 474, type: !102)
!3498 = !DILocalVariable(name: "prev_size", scope: !3499, file: !2894, line: 477, type: !223)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !2894, line: 476, column: 20)
!3500 = distinct !DILexicalBlock(scope: !3478, file: !2894, line: 476, column: 6)
!3501 = !DILocation(line: 0, scope: !3478)
!3502 = !DILocation(line: 382, column: 27, scope: !3478)
!3503 = !DILocation(line: 385, column: 10, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3478, file: !2894, line: 385, column: 6)
!3505 = !DILocation(line: 385, column: 6, scope: !3478)
!3506 = !DILocation(line: 386, column: 10, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3504, file: !2894, line: 385, column: 19)
!3508 = !DILocation(line: 386, column: 3, scope: !3507)
!3509 = !DILocation(line: 388, column: 12, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3478, file: !2894, line: 388, column: 6)
!3511 = !DILocation(line: 388, column: 6, scope: !3478)
!3512 = !DILocation(line: 389, column: 3, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3510, file: !2894, line: 388, column: 18)
!3514 = !DILocation(line: 390, column: 3, scope: !3513)
!3515 = !DILocation(line: 395, column: 6, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3478, file: !2894, line: 395, column: 6)
!3517 = !DILocation(line: 395, column: 6, scope: !3478)
!3518 = !DILocation(line: 399, column: 16, scope: !3478)
!3519 = !DILocation(line: 400, column: 17, scope: !3478)
!3520 = !DILocation(line: 401, column: 49, scope: !3478)
!3521 = !DILocation(line: 401, column: 36, scope: !3478)
!3522 = !DILocation(line: 402, column: 52, scope: !3478)
!3523 = !DILocation(line: 402, column: 26, scope: !3478)
!3524 = !DILocation(line: 404, column: 6, scope: !3496)
!3525 = !DILocation(line: 404, column: 12, scope: !3496)
!3526 = !DILocation(line: 404, column: 40, scope: !3496)
!3527 = !DILocation(line: 404, column: 31, scope: !3496)
!3528 = !DILocation(line: 404, column: 6, scope: !3478)
!3529 = !DILocation(line: 406, column: 13, scope: !3495)
!3530 = !DILocation(line: 406, column: 30, scope: !3495)
!3531 = !DILocation(line: 406, column: 13, scope: !3496)
!3532 = !DILocation(line: 409, column: 30, scope: !3494)
!3533 = !DILocation(line: 409, column: 13, scope: !3495)
!3534 = !DILocation(line: 420, column: 24, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3494, file: !2894, line: 409, column: 45)
!3536 = !DILocation(line: 420, column: 3, scope: !3535)
!3537 = !DILocation(line: 421, column: 3, scope: !3535)
!3538 = !DILocation(line: 422, column: 3, scope: !3535)
!3539 = !DILocation(line: 431, column: 3, scope: !3535)
!3540 = !DILocation(line: 432, column: 14, scope: !3493)
!3541 = !DILocation(line: 432, column: 32, scope: !3493)
!3542 = !DILocation(line: 433, column: 26, scope: !3493)
!3543 = !DILocation(line: 433, column: 24, scope: !3493)
!3544 = !DILocation(line: 433, column: 44, scope: !3493)
!3545 = !DILocation(line: 432, column: 13, scope: !3494)
!3546 = !DILocation(line: 435, column: 38, scope: !3492)
!3547 = !DILocation(line: 0, scope: !3492)
!3548 = !DILocation(line: 445, column: 3, scope: !3492)
!3549 = !DILocation(line: 447, column: 20, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3492, file: !2894, line: 447, column: 7)
!3551 = !DILocation(line: 447, column: 18, scope: !3550)
!3552 = !DILocation(line: 447, column: 7, scope: !3492)
!3553 = !DILocation(line: 448, column: 27, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3550, file: !2894, line: 447, column: 39)
!3555 = !DILocation(line: 448, column: 4, scope: !3554)
!3556 = !DILocation(line: 449, column: 4, scope: !3554)
!3557 = !DILocation(line: 450, column: 3, scope: !3554)
!3558 = !DILocation(line: 452, column: 3, scope: !3492)
!3559 = !DILocation(line: 453, column: 3, scope: !3492)
!3560 = !DILocation(line: 474, column: 15, scope: !3478)
!3561 = !DILocation(line: 476, column: 11, scope: !3500)
!3562 = !DILocation(line: 476, column: 6, scope: !3478)
!3563 = !DILocation(line: 477, column: 42, scope: !3499)
!3564 = !DILocation(line: 477, column: 22, scope: !3499)
!3565 = !DILocation(line: 477, column: 60, scope: !3499)
!3566 = !DILocation(line: 0, scope: !3499)
!3567 = !DILocation(line: 479, column: 21, scope: !3499)
!3568 = !DILocation(line: 479, column: 3, scope: !3499)
!3569 = !DILocation(line: 480, column: 3, scope: !3499)
!3570 = !DILocation(line: 481, column: 2, scope: !3499)
!3571 = !DILocation(line: 483, column: 1, scope: !3478)
!3572 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !1938, file: !1938, line: 245, type: !3573, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3575)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!223, !1951, !3020}
!3575 = !{!3576, !3577}
!3576 = !DILocalVariable(name: "h", arg: 1, scope: !3572, file: !1938, line: 245, type: !1951)
!3577 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3572, file: !1938, line: 245, type: !3020)
!3578 = !DILocation(line: 0, scope: !3572)
!3579 = !DILocation(line: 247, column: 20, scope: !3572)
!3580 = !DILocation(line: 247, column: 33, scope: !3572)
!3581 = !DILocation(line: 247, column: 2, scope: !3572)
!3582 = distinct !DISubprogram(name: "sys_heap_init", scope: !2894, file: !2894, line: 485, type: !3583, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1934, retainedNodes: !3585)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{null, !2897, !102, !223}
!3585 = !{!3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595}
!3586 = !DILocalVariable(name: "heap", arg: 1, scope: !3582, file: !2894, line: 485, type: !2897)
!3587 = !DILocalVariable(name: "mem", arg: 2, scope: !3582, file: !2894, line: 485, type: !102)
!3588 = !DILocalVariable(name: "bytes", arg: 3, scope: !3582, file: !2894, line: 485, type: !223)
!3589 = !DILocalVariable(name: "addr", scope: !3582, file: !2894, line: 502, type: !22)
!3590 = !DILocalVariable(name: "end", scope: !3582, file: !2894, line: 503, type: !22)
!3591 = !DILocalVariable(name: "heap_sz", scope: !3582, file: !2894, line: 504, type: !3020)
!3592 = !DILocalVariable(name: "h", scope: !3582, file: !2894, line: 509, type: !1951)
!3593 = !DILocalVariable(name: "nb_buckets", scope: !3582, file: !2894, line: 520, type: !103)
!3594 = !DILocalVariable(name: "chunk0_size", scope: !3582, file: !2894, line: 521, type: !3020)
!3595 = !DILocalVariable(name: "i", scope: !3596, file: !2894, line: 526, type: !103)
!3596 = distinct !DILexicalBlock(scope: !3582, file: !2894, line: 526, column: 2)
!3597 = !DILocation(line: 0, scope: !3582)
!3598 = !DILocation(line: 499, column: 8, scope: !3582)
!3599 = !DILocation(line: 502, column: 19, scope: !3582)
!3600 = !DILocation(line: 503, column: 18, scope: !3582)
!3601 = !DILocation(line: 504, column: 27, scope: !3582)
!3602 = !DILocation(line: 504, column: 35, scope: !3582)
!3603 = !DILocation(line: 509, column: 21, scope: !3582)
!3604 = !DILocation(line: 510, column: 8, scope: !3582)
!3605 = !DILocation(line: 510, column: 13, scope: !3582)
!3606 = !DILocation(line: 511, column: 5, scope: !3582)
!3607 = !DILocation(line: 511, column: 15, scope: !3582)
!3608 = !DILocation(line: 512, column: 5, scope: !3582)
!3609 = !DILocation(line: 512, column: 19, scope: !3582)
!3610 = !DILocation(line: 520, column: 19, scope: !3582)
!3611 = !DILocation(line: 522, column: 21, scope: !3582)
!3612 = !DILocation(line: 521, column: 56, scope: !3582)
!3613 = !DILocation(line: 521, column: 26, scope: !3582)
!3614 = !DILocation(line: 0, scope: !3596)
!3615 = !DILocation(line: 526, column: 20, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3596, file: !2894, line: 526, column: 2)
!3617 = !DILocation(line: 526, column: 2, scope: !3596)
!3618 = !DILocation(line: 531, column: 2, scope: !3582)
!3619 = !DILocation(line: 532, column: 2, scope: !3582)
!3620 = !DILocation(line: 533, column: 2, scope: !3582)
!3621 = !DILocation(line: 536, column: 41, scope: !3582)
!3622 = !DILocation(line: 536, column: 2, scope: !3582)
!3623 = !DILocation(line: 537, column: 2, scope: !3582)
!3624 = !DILocation(line: 540, column: 2, scope: !3582)
!3625 = !DILocation(line: 541, column: 2, scope: !3582)
!3626 = !DILocation(line: 542, column: 2, scope: !3582)
!3627 = !DILocation(line: 544, column: 2, scope: !3582)
!3628 = !DILocation(line: 545, column: 1, scope: !3582)
!3629 = !DILocation(line: 527, column: 17, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3616, file: !2894, line: 526, column: 39)
!3631 = !DILocation(line: 527, column: 22, scope: !3630)
!3632 = !DILocation(line: 526, column: 35, scope: !3616)
!3633 = distinct !{!3633, !3617, !3634}
!3634 = !DILocation(line: 528, column: 2, scope: !3596)
!3635 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !1972, file: !1972, line: 1338, type: !3636, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !3644)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!103, !2624, !102, !192, !3638, !121}
!3638 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2590, line: 99, baseType: !3639)
!3639 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2590, line: 40, baseType: !3640)
!3640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1972, baseType: !3641)
!3641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3642)
!3642 = !{!3643}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3641, file: !1972, baseType: !102, size: 32)
!3644 = !{!3645, !3646, !3647, !3648, !3649, !3650, !3654, !3655, !3656, !3658, !3663, !3708, !3711, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3723, !3724, !3725, !3729, !3732, !3734, !3737, !3738, !3739, !3744, !3750, !3753, !3757, !3763, !3767, !3770, !3772, !3775}
!3645 = !DILocalVariable(name: "out", arg: 1, scope: !3635, file: !1972, line: 1338, type: !2624)
!3646 = !DILocalVariable(name: "ctx", arg: 2, scope: !3635, file: !1972, line: 1338, type: !102)
!3647 = !DILocalVariable(name: "fp", arg: 3, scope: !3635, file: !1972, line: 1338, type: !192)
!3648 = !DILocalVariable(name: "ap", arg: 4, scope: !3635, file: !1972, line: 1339, type: !3638)
!3649 = !DILocalVariable(name: "flags", arg: 5, scope: !3635, file: !1972, line: 1339, type: !121)
!3650 = !DILocalVariable(name: "buf", scope: !3635, file: !1972, line: 1341, type: !3651)
!3651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 176, elements: !3652)
!3652 = !{!3653}
!3653 = !DISubrange(count: 22)
!3654 = !DILocalVariable(name: "count", scope: !3635, file: !1972, line: 1342, type: !223)
!3655 = !DILocalVariable(name: "sint", scope: !3635, file: !1972, line: 1343, type: !1991)
!3656 = !DILocalVariable(name: "tagged_ap", scope: !3635, file: !1972, line: 1345, type: !3657)
!3657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !205)
!3658 = !DILocalVariable(name: "rc", scope: !3659, file: !1972, line: 1377, type: !103)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !1972, line: 1377, column: 4)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !1972, line: 1376, column: 19)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1376, column: 7)
!3662 = distinct !DILexicalBlock(scope: !3635, file: !1972, line: 1375, column: 19)
!3663 = !DILocalVariable(name: "state", scope: !3662, file: !1972, line: 1395, type: !3664)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3635, file: !1972, line: 1392, size: 192, elements: !3665)
!3665 = !{!3666, !3676}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3664, file: !1972, line: 1393, baseType: !3667, size: 64)
!3667 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !1972, line: 166, size: 64, elements: !3668)
!3668 = !{!3669, !3670, !3671, !3673, !3675}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3667, file: !1972, line: 168, baseType: !1991, size: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3667, file: !1972, line: 171, baseType: !1994, size: 64)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3667, file: !1972, line: 174, baseType: !3672, size: 64)
!3672 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3667, file: !1972, line: 177, baseType: !3674, size: 64)
!3674 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3667, file: !1972, line: 180, baseType: !102, size: 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3664, file: !1972, line: 1394, baseType: !3677, size: 96, offset: 64)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !1972, line: 189, size: 96, elements: !3678)
!3678 = !{!3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3703}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3677, file: !1972, line: 191, baseType: !205, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3677, file: !1972, line: 194, baseType: !205, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3677, file: !1972, line: 197, baseType: !205, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3677, file: !1972, line: 200, baseType: !205, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3677, file: !1972, line: 203, baseType: !205, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3677, file: !1972, line: 206, baseType: !205, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3677, file: !1972, line: 209, baseType: !205, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3677, file: !1972, line: 212, baseType: !205, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3677, file: !1972, line: 219, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3677, file: !1972, line: 222, baseType: !205, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3677, file: !1972, line: 229, baseType: !205, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3677, file: !1972, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3677, file: !1972, line: 238, baseType: !205, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3677, file: !1972, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3677, file: !1972, line: 244, baseType: !205, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3677, file: !1972, line: 247, baseType: !205, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3677, file: !1972, line: 252, baseType: !205, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3677, file: !1972, line: 257, baseType: !205, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3677, file: !1972, line: 260, baseType: !203, size: 8, offset: 24)
!3698 = !DIDerivedType(tag: DW_TAG_member, scope: !3677, file: !1972, line: 262, baseType: !3699, size: 32, offset: 32)
!3699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3677, file: !1972, line: 262, size: 32, elements: !3700)
!3700 = !{!3701, !3702}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3699, file: !1972, line: 267, baseType: !103, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3699, file: !1972, line: 289, baseType: !103, size: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, scope: !3677, file: !1972, line: 292, baseType: !3704, size: 32, offset: 64)
!3704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3677, file: !1972, line: 292, size: 32, elements: !3705)
!3705 = !{!3706, !3707}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3704, file: !1972, line: 297, baseType: !103, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3704, file: !1972, line: 306, baseType: !103, size: 32)
!3708 = !DILocalVariable(name: "conv", scope: !3662, file: !1972, line: 1400, type: !3709)
!3709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3710)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 32)
!3711 = !DILocalVariable(name: "value", scope: !3662, file: !1972, line: 1401, type: !3712)
!3712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3713)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 32)
!3714 = !DILocalVariable(name: "sp", scope: !3662, file: !1972, line: 1402, type: !192)
!3715 = !DILocalVariable(name: "width", scope: !3662, file: !1972, line: 1403, type: !103)
!3716 = !DILocalVariable(name: "precision", scope: !3662, file: !1972, line: 1404, type: !103)
!3717 = !DILocalVariable(name: "bps", scope: !3662, file: !1972, line: 1405, type: !192)
!3718 = !DILocalVariable(name: "bpe", scope: !3662, file: !1972, line: 1406, type: !192)
!3719 = !DILocalVariable(name: "sign", scope: !3662, file: !1972, line: 1407, type: !194)
!3720 = !DILocalVariable(name: "arg", scope: !3721, file: !1972, line: 1432, type: !103)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !1972, line: 1431, column: 24)
!3722 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1431, column: 7)
!3723 = !DILocalVariable(name: "specifier_cat", scope: !3662, file: !1972, line: 1468, type: !1971)
!3724 = !DILocalVariable(name: "length_mod", scope: !3662, file: !1972, line: 1470, type: !1979)
!3725 = !DILocalVariable(name: "rc", scope: !3726, file: !1972, line: 1575, type: !103)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !1972, line: 1575, column: 4)
!3727 = distinct !DILexicalBlock(scope: !3728, file: !1972, line: 1574, column: 43)
!3728 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1574, column: 7)
!3729 = !DILocalVariable(name: "rc", scope: !3730, file: !1972, line: 1584, type: !103)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1584, column: 4)
!3731 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1582, column: 28)
!3732 = !DILocalVariable(name: "len", scope: !3733, file: !1972, line: 1589, type: !223)
!3733 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1586, column: 13)
!3734 = !DILocalVariable(name: "len", scope: !3735, file: !1972, line: 1641, type: !223)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !1972, line: 1640, column: 24)
!3736 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1640, column: 8)
!3737 = !DILocalVariable(name: "nj_len", scope: !3662, file: !1972, line: 1722, type: !223)
!3738 = !DILocalVariable(name: "pad_len", scope: !3662, file: !1972, line: 1723, type: !103)
!3739 = !DILocalVariable(name: "pad", scope: !3740, file: !1972, line: 1751, type: !194)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !1972, line: 1750, column: 26)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !1972, line: 1750, column: 8)
!3742 = distinct !DILexicalBlock(scope: !3743, file: !1972, line: 1747, column: 18)
!3743 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1747, column: 7)
!3744 = !DILocalVariable(name: "rc", scope: !3745, file: !1972, line: 1758, type: !103)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !1972, line: 1758, column: 7)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !1972, line: 1757, column: 21)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !1972, line: 1757, column: 10)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !1972, line: 1756, column: 26)
!3749 = distinct !DILexicalBlock(scope: !3740, file: !1972, line: 1756, column: 9)
!3750 = !DILocalVariable(name: "rc", scope: !3751, file: !1972, line: 1765, type: !103)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !1972, line: 1765, column: 6)
!3752 = distinct !DILexicalBlock(scope: !3740, file: !1972, line: 1764, column: 25)
!3753 = !DILocalVariable(name: "rc", scope: !3754, file: !1972, line: 1774, type: !103)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !1972, line: 1774, column: 4)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !1972, line: 1773, column: 18)
!3756 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1773, column: 7)
!3757 = !DILocalVariable(name: "rc", scope: !3758, file: !1972, line: 1819, type: !103)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !1972, line: 1819, column: 5)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !1972, line: 1818, column: 44)
!3760 = distinct !DILexicalBlock(scope: !3761, file: !1972, line: 1818, column: 8)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !1972, line: 1817, column: 10)
!3762 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1777, column: 7)
!3763 = !DILocalVariable(name: "rc", scope: !3764, file: !1972, line: 1823, type: !103)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !1972, line: 1823, column: 5)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !1972, line: 1822, column: 26)
!3766 = distinct !DILexicalBlock(scope: !3761, file: !1972, line: 1822, column: 8)
!3767 = !DILocalVariable(name: "rc", scope: !3768, file: !1972, line: 1828, type: !103)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !1972, line: 1828, column: 5)
!3769 = distinct !DILexicalBlock(scope: !3761, file: !1972, line: 1827, column: 26)
!3770 = !DILocalVariable(name: "rc", scope: !3771, file: !1972, line: 1831, type: !103)
!3771 = distinct !DILexicalBlock(scope: !3761, file: !1972, line: 1831, column: 4)
!3772 = !DILocalVariable(name: "rc", scope: !3773, file: !1972, line: 1836, type: !103)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !1972, line: 1836, column: 4)
!3774 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1835, column: 21)
!3775 = !DILabel(scope: !3731, name: "prec_int_pad0", file: !1972, line: 1634)
!3776 = !DILocation(line: 0, scope: !3635)
!3777 = !DILocation(line: 1341, column: 2, scope: !3635)
!3778 = !DILocation(line: 1341, column: 7, scope: !3635)
!3779 = !DILocation(line: 1375, column: 2, scope: !3635)
!3780 = !DILocation(line: 1342, column: 9, scope: !3635)
!3781 = !DILocation(line: 1375, column: 9, scope: !3635)
!3782 = !DILocation(line: 1377, column: 4, scope: !3659)
!3783 = !DILocation(line: 0, scope: !3659)
!3784 = !DILocation(line: 1377, column: 4, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3659, file: !1972, line: 1377, column: 4)
!3786 = distinct !{!3786, !3779, !3787}
!3787 = !DILocation(line: 1839, column: 2, scope: !3635)
!3788 = !DILocation(line: 1392, column: 3, scope: !3662)
!3789 = !DILocation(line: 1395, column: 5, scope: !3662)
!3790 = !DILocation(line: 0, scope: !3662)
!3791 = !DILocation(line: 1409, column: 8, scope: !3662)
!3792 = !DILocation(line: 1414, column: 13, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1414, column: 7)
!3794 = !DILocation(line: 1414, column: 7, scope: !3662)
!3795 = !DILocation(line: 1415, column: 12, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3793, file: !1972, line: 1414, column: 25)
!3797 = !DILocation(line: 1417, column: 14, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3796, file: !1972, line: 1417, column: 8)
!3799 = !DILocation(line: 1417, column: 8, scope: !3796)
!3800 = !DILocation(line: 1418, column: 21, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3798, file: !1972, line: 1417, column: 19)
!3802 = !DILocation(line: 1419, column: 13, scope: !3801)
!3803 = !DILocation(line: 1420, column: 4, scope: !3801)
!3804 = !DILocation(line: 1421, column: 20, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3793, file: !1972, line: 1421, column: 14)
!3806 = !DILocation(line: 1421, column: 14, scope: !3793)
!3807 = !DILocation(line: 1431, column: 13, scope: !3722)
!3808 = !DILocation(line: 1431, column: 7, scope: !3662)
!3809 = !DILocation(line: 1432, column: 14, scope: !3721)
!3810 = !DILocation(line: 0, scope: !3721)
!3811 = !DILocation(line: 1434, column: 12, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3721, file: !1972, line: 1434, column: 8)
!3813 = !DILocation(line: 1434, column: 8, scope: !3721)
!3814 = !DILocation(line: 1435, column: 24, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3812, file: !1972, line: 1434, column: 17)
!3816 = !DILocation(line: 1436, column: 4, scope: !3815)
!3817 = !DILocation(line: 1439, column: 20, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3722, file: !1972, line: 1439, column: 14)
!3819 = !DILocation(line: 1439, column: 14, scope: !3722)
!3820 = !DILocation(line: 1469, column: 37, scope: !3662)
!3821 = !DILocation(line: 1448, column: 20, scope: !3662)
!3822 = !DILocation(line: 1449, column: 22, scope: !3662)
!3823 = !DILocation(line: 1471, column: 34, scope: !3662)
!3824 = !DILocation(line: 1478, column: 7, scope: !3662)
!3825 = !DILocation(line: 1479, column: 4, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !1972, line: 1478, column: 40)
!3827 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1478, column: 7)
!3828 = !DILocation(line: 1484, column: 19, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3826, file: !1972, line: 1479, column: 24)
!3830 = !DILocation(line: 1484, column: 17, scope: !3829)
!3831 = !DILocation(line: 1485, column: 5, scope: !3829)
!3832 = !DILocation(line: 1492, column: 20, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !1972, line: 1491, column: 12)
!3834 = distinct !DILexicalBlock(scope: !3829, file: !1972, line: 1487, column: 9)
!3835 = !DILocation(line: 1492, column: 18, scope: !3833)
!3836 = !DILocation(line: 1494, column: 5, scope: !3829)
!3837 = !DILocation(line: 1497, column: 23, scope: !3829)
!3838 = !DILocation(line: 1496, column: 17, scope: !3829)
!3839 = !DILocation(line: 1498, column: 5, scope: !3829)
!3840 = !DILocation(line: 1501, column: 23, scope: !3829)
!3841 = !DILocation(line: 1500, column: 17, scope: !3829)
!3842 = !DILocation(line: 1502, column: 5, scope: !3829)
!3843 = !DILocation(line: 1513, column: 23, scope: !3829)
!3844 = !DILocation(line: 1513, column: 6, scope: !3829)
!3845 = !DILocation(line: 1512, column: 17, scope: !3829)
!3846 = !DILocation(line: 1514, column: 5, scope: !3829)
!3847 = !DILocation(line: 0, scope: !3829)
!3848 = !DILocation(line: 1516, column: 8, scope: !3826)
!3849 = !DILocation(line: 1517, column: 19, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !1972, line: 1516, column: 33)
!3851 = distinct !DILexicalBlock(scope: !3826, file: !1972, line: 1516, column: 8)
!3852 = !DILocation(line: 1517, column: 17, scope: !3850)
!3853 = !DILocation(line: 1518, column: 4, scope: !3850)
!3854 = !DILocation(line: 1519, column: 19, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !1972, line: 1518, column: 39)
!3856 = distinct !DILexicalBlock(scope: !3851, file: !1972, line: 1518, column: 15)
!3857 = !DILocation(line: 1519, column: 17, scope: !3855)
!3858 = !DILocation(line: 1520, column: 4, scope: !3855)
!3859 = !DILocation(line: 1522, column: 4, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !1972, line: 1521, column: 47)
!3861 = distinct !DILexicalBlock(scope: !3827, file: !1972, line: 1521, column: 14)
!3862 = !DILocation(line: 1527, column: 19, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3860, file: !1972, line: 1522, column: 24)
!3864 = !DILocation(line: 1527, column: 17, scope: !3863)
!3865 = !DILocation(line: 1528, column: 5, scope: !3863)
!3866 = !DILocation(line: 0, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3863, file: !1972, line: 1530, column: 9)
!3868 = !DILocation(line: 1540, column: 23, scope: !3863)
!3869 = !DILocation(line: 1539, column: 17, scope: !3863)
!3870 = !DILocation(line: 1542, column: 5, scope: !3863)
!3871 = !DILocation(line: 1545, column: 23, scope: !3863)
!3872 = !DILocation(line: 1544, column: 17, scope: !3863)
!3873 = !DILocation(line: 1547, column: 5, scope: !3863)
!3874 = !DILocation(line: 1551, column: 23, scope: !3863)
!3875 = !DILocation(line: 1551, column: 6, scope: !3863)
!3876 = !DILocation(line: 1550, column: 17, scope: !3863)
!3877 = !DILocation(line: 1552, column: 5, scope: !3863)
!3878 = !DILocation(line: 0, scope: !3863)
!3879 = !DILocation(line: 1554, column: 8, scope: !3860)
!3880 = !DILocation(line: 1555, column: 19, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !1972, line: 1554, column: 33)
!3882 = distinct !DILexicalBlock(scope: !3860, file: !1972, line: 1554, column: 8)
!3883 = !DILocation(line: 1555, column: 17, scope: !3881)
!3884 = !DILocation(line: 1556, column: 4, scope: !3881)
!3885 = !DILocation(line: 1557, column: 19, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3887, file: !1972, line: 1556, column: 39)
!3887 = distinct !DILexicalBlock(scope: !3882, file: !1972, line: 1556, column: 15)
!3888 = !DILocation(line: 1557, column: 17, scope: !3886)
!3889 = !DILocation(line: 1558, column: 4, scope: !3886)
!3890 = !DILocation(line: 0, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !1972, line: 1560, column: 8)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !1972, line: 1559, column: 45)
!3893 = distinct !DILexicalBlock(scope: !3861, file: !1972, line: 1559, column: 14)
!3894 = !DILocation(line: 1566, column: 17, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !1972, line: 1565, column: 46)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !1972, line: 1565, column: 14)
!3897 = !DILocation(line: 1566, column: 15, scope: !3895)
!3898 = !DILocation(line: 1567, column: 3, scope: !3895)
!3899 = !DILocation(line: 1574, column: 21, scope: !3728)
!3900 = !DILocation(line: 1575, column: 4, scope: !3726)
!3901 = !DILocation(line: 0, scope: !3726)
!3902 = !DILocation(line: 1575, column: 4, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3726, file: !1972, line: 1575, column: 4)
!3904 = !DILocation(line: 1582, column: 17, scope: !3662)
!3905 = !DILocation(line: 1582, column: 3, scope: !3662)
!3906 = !DILocation(line: 1584, column: 4, scope: !3730)
!3907 = !DILocation(line: 0, scope: !3730)
!3908 = !DILocation(line: 1584, column: 4, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3730, file: !1972, line: 1584, column: 4)
!3910 = !DILocation(line: 1587, column: 31, scope: !3733)
!3911 = !DILocation(line: 1591, column: 18, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3733, file: !1972, line: 1591, column: 8)
!3913 = !DILocation(line: 1591, column: 8, scope: !3733)
!3914 = !DILocation(line: 1592, column: 11, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3912, file: !1972, line: 1591, column: 24)
!3916 = !DILocation(line: 0, scope: !3733)
!3917 = !DILocation(line: 1593, column: 4, scope: !3915)
!3918 = !DILocation(line: 1594, column: 11, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3912, file: !1972, line: 1593, column: 11)
!3920 = !DILocation(line: 1604, column: 51, scope: !3731)
!3921 = !DILocation(line: 1604, column: 13, scope: !3731)
!3922 = !DILocation(line: 1604, column: 11, scope: !3731)
!3923 = !DILocation(line: 1606, column: 4, scope: !3731)
!3924 = !DILocation(line: 1609, column: 14, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1609, column: 8)
!3926 = !DILocation(line: 1609, column: 8, scope: !3731)
!3927 = !DILocation(line: 1619, column: 18, scope: !3731)
!3928 = !DILocation(line: 1620, column: 13, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1620, column: 8)
!3930 = !DILocation(line: 1620, column: 8, scope: !3731)
!3931 = !DILocation(line: 1622, column: 36, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3929, file: !1972, line: 1620, column: 18)
!3933 = !DILocation(line: 1622, column: 17, scope: !3932)
!3934 = !DILocation(line: 1623, column: 4, scope: !3932)
!3935 = !DILocation(line: 1632, column: 29, scope: !3731)
!3936 = !DILocation(line: 1632, column: 10, scope: !3731)
!3937 = !DILocation(line: 1632, column: 4, scope: !3731)
!3938 = !DILocation(line: 1407, column: 8, scope: !3662)
!3939 = !DILocation(line: 0, scope: !3731)
!3940 = !DILocation(line: 1634, column: 3, scope: !3731)
!3941 = !DILocation(line: 1640, column: 18, scope: !3736)
!3942 = !DILocation(line: 1640, column: 8, scope: !3731)
!3943 = !DILocation(line: 1729, column: 13, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1729, column: 7)
!3945 = !DILocation(line: 1641, column: 22, scope: !3735)
!3946 = !DILocation(line: 0, scope: !3735)
!3947 = !DILocation(line: 1646, column: 21, scope: !3735)
!3948 = !DILocation(line: 1649, column: 13, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3735, file: !1972, line: 1649, column: 9)
!3950 = !DILocation(line: 1649, column: 9, scope: !3735)
!3951 = !DILocation(line: 1650, column: 35, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3949, file: !1972, line: 1649, column: 34)
!3953 = !DILocation(line: 1650, column: 23, scope: !3952)
!3954 = !DILocation(line: 1651, column: 5, scope: !3952)
!3955 = !DILocation(line: 1660, column: 15, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1660, column: 8)
!3957 = !DILocation(line: 1660, column: 19, scope: !3956)
!3958 = !DILocation(line: 1660, column: 8, scope: !3731)
!3959 = !DILocation(line: 1661, column: 23, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3956, file: !1972, line: 1660, column: 28)
!3961 = !DILocation(line: 1661, column: 11, scope: !3960)
!3962 = !DILocation(line: 1665, column: 22, scope: !3960)
!3963 = !DILocation(line: 1666, column: 21, scope: !3960)
!3964 = !DILocation(line: 1668, column: 5, scope: !3960)
!3965 = !DILocation(line: 1677, column: 30, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !1972, line: 1676, column: 49)
!3967 = distinct !DILexicalBlock(scope: !3731, file: !1972, line: 1676, column: 8)
!3968 = !DILocation(line: 1677, column: 5, scope: !3966)
!3969 = !DILocation(line: 1680, column: 4, scope: !3731)
!3970 = !DILocation(line: 0, scope: !3912)
!3971 = !DILocation(line: 1597, column: 14, scope: !3733)
!3972 = !DILocation(line: 1699, column: 11, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1699, column: 7)
!3974 = !DILocation(line: 1699, column: 7, scope: !3662)
!3975 = !DILocation(line: 1725, column: 7, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1725, column: 7)
!3977 = !DILocation(line: 1725, column: 12, scope: !3976)
!3978 = !DILocation(line: 1747, column: 13, scope: !3743)
!3979 = !DILocation(line: 1747, column: 7, scope: !3662)
!3980 = !DILocation(line: 1722, column: 24, scope: !3662)
!3981 = !DILocation(line: 1725, column: 7, scope: !3662)
!3982 = !DILocation(line: 1729, column: 7, scope: !3662)
!3983 = !DILocation(line: 1736, column: 13, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3662, file: !1972, line: 1736, column: 7)
!3985 = !DILocation(line: 1735, column: 19, scope: !3662)
!3986 = !DILocation(line: 1736, column: 7, scope: !3662)
!3987 = !DILocation(line: 1748, column: 10, scope: !3742)
!3988 = !DILocation(line: 1750, column: 15, scope: !3741)
!3989 = !DILocation(line: 1750, column: 8, scope: !3742)
!3990 = !DILocation(line: 0, scope: !3740)
!3991 = !DILocation(line: 1756, column: 15, scope: !3749)
!3992 = !DILocation(line: 1756, column: 9, scope: !3740)
!3993 = !DILocation(line: 1758, column: 7, scope: !3745)
!3994 = !DILocation(line: 0, scope: !3745)
!3995 = !DILocation(line: 1758, column: 7, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3745, file: !1972, line: 1758, column: 7)
!3997 = !DILocation(line: 1764, column: 5, scope: !3740)
!3998 = !DILocation(line: 0, scope: !3742)
!3999 = !DILocation(line: 1764, column: 20, scope: !3740)
!4000 = !DILocation(line: 1764, column: 17, scope: !3740)
!4001 = !DILocation(line: 1765, column: 6, scope: !3751)
!4002 = !DILocation(line: 0, scope: !3751)
!4003 = !DILocation(line: 1765, column: 6, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3751, file: !1972, line: 1765, column: 6)
!4005 = distinct !{!4005, !3997, !4006}
!4006 = !DILocation(line: 1766, column: 5, scope: !3740)
!4007 = !DILocation(line: 1773, column: 12, scope: !3756)
!4008 = !DILocation(line: 1773, column: 7, scope: !3662)
!4009 = !DILocation(line: 1773, column: 7, scope: !3756)
!4010 = !DILocation(line: 1774, column: 4, scope: !3754)
!4011 = !DILocation(line: 0, scope: !3754)
!4012 = !DILocation(line: 1774, column: 4, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3754, file: !1972, line: 1774, column: 4)
!4014 = !DILocation(line: 1818, column: 8, scope: !3760)
!4015 = !DILocation(line: 1818, column: 27, scope: !3760)
!4016 = !DILocation(line: 1818, column: 25, scope: !3760)
!4017 = !DILocation(line: 1818, column: 8, scope: !3761)
!4018 = !DILocation(line: 1819, column: 5, scope: !3758)
!4019 = !DILocation(line: 0, scope: !3758)
!4020 = !DILocation(line: 1819, column: 5, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !3758, file: !1972, line: 1819, column: 5)
!4022 = !DILocation(line: 1822, column: 14, scope: !3766)
!4023 = !DILocation(line: 1822, column: 8, scope: !3761)
!4024 = !DILocation(line: 1823, column: 5, scope: !3764)
!4025 = !DILocation(line: 0, scope: !3764)
!4026 = !DILocation(line: 1823, column: 5, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3764, file: !1972, line: 1823, column: 5)
!4028 = !DILocation(line: 1826, column: 20, scope: !3761)
!4029 = !DILocation(line: 1827, column: 4, scope: !3761)
!4030 = !DILocation(line: 0, scope: !3761)
!4031 = !DILocation(line: 1827, column: 21, scope: !3761)
!4032 = !DILocation(line: 1827, column: 18, scope: !3761)
!4033 = !DILocation(line: 1828, column: 5, scope: !3768)
!4034 = !DILocation(line: 0, scope: !3768)
!4035 = !DILocation(line: 1828, column: 5, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3768, file: !1972, line: 1828, column: 5)
!4037 = distinct !{!4037, !4029, !4038}
!4038 = !DILocation(line: 1829, column: 4, scope: !3761)
!4039 = !DILocation(line: 1831, column: 4, scope: !3771)
!4040 = !DILocation(line: 0, scope: !3771)
!4041 = !DILocation(line: 1831, column: 4, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3771, file: !1972, line: 1831, column: 4)
!4043 = !DILocation(line: 1835, column: 16, scope: !3662)
!4044 = !DILocation(line: 1835, column: 3, scope: !3662)
!4045 = !DILocation(line: 1836, column: 4, scope: !3773)
!4046 = !DILocation(line: 0, scope: !3773)
!4047 = !DILocation(line: 1836, column: 4, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3773, file: !1972, line: 1836, column: 4)
!4049 = !DILocation(line: 1837, column: 4, scope: !3774)
!4050 = distinct !{!4050, !4044, !4051}
!4051 = !DILocation(line: 1838, column: 3, scope: !3662)
!4052 = !DILocation(line: 1844, column: 1, scope: !3635)
!4053 = distinct !DISubprogram(name: "extract_conversion", scope: !1972, file: !1972, line: 642, type: !4054, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4056)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!192, !3710, !192}
!4056 = !{!4057, !4058}
!4057 = !DILocalVariable(name: "conv", arg: 1, scope: !4053, file: !1972, line: 642, type: !3710)
!4058 = !DILocalVariable(name: "sp", arg: 2, scope: !4053, file: !1972, line: 643, type: !192)
!4059 = !DILocation(line: 0, scope: !4053)
!4060 = !DILocation(line: 645, column: 10, scope: !4053)
!4061 = !DILocation(line: 653, column: 2, scope: !4053)
!4062 = !DILocation(line: 654, column: 6, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4053, file: !1972, line: 654, column: 6)
!4064 = !DILocation(line: 654, column: 10, scope: !4063)
!4065 = !DILocation(line: 654, column: 6, scope: !4053)
!4066 = !DILocation(line: 655, column: 24, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4063, file: !1972, line: 654, column: 18)
!4068 = !DILocation(line: 655, column: 19, scope: !4067)
!4069 = !DILocation(line: 656, column: 3, scope: !4067)
!4070 = !DILocation(line: 659, column: 7, scope: !4053)
!4071 = !DILocation(line: 660, column: 7, scope: !4053)
!4072 = !DILocation(line: 661, column: 7, scope: !4053)
!4073 = !DILocation(line: 662, column: 7, scope: !4053)
!4074 = !DILocation(line: 663, column: 7, scope: !4053)
!4075 = !DILocation(line: 665, column: 2, scope: !4053)
!4076 = !DILocation(line: 666, column: 1, scope: !4053)
!4077 = distinct !DISubprogram(name: "outs", scope: !1972, file: !1972, line: 1319, type: !4078, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4080)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!103, !2624, !102, !192, !192}
!4080 = !{!4081, !4082, !4083, !4084, !4085, !4086}
!4081 = !DILocalVariable(name: "out", arg: 1, scope: !4077, file: !1972, line: 1319, type: !2624)
!4082 = !DILocalVariable(name: "ctx", arg: 2, scope: !4077, file: !1972, line: 1320, type: !102)
!4083 = !DILocalVariable(name: "sp", arg: 3, scope: !4077, file: !1972, line: 1321, type: !192)
!4084 = !DILocalVariable(name: "ep", arg: 4, scope: !4077, file: !1972, line: 1322, type: !192)
!4085 = !DILocalVariable(name: "count", scope: !4077, file: !1972, line: 1324, type: !223)
!4086 = !DILocalVariable(name: "rc", scope: !4087, file: !1972, line: 1327, type: !103)
!4087 = distinct !DILexicalBlock(scope: !4077, file: !1972, line: 1326, column: 45)
!4088 = !DILocation(line: 0, scope: !4077)
!4089 = !DILocation(line: 1326, column: 2, scope: !4077)
!4090 = !DILocation(line: 1324, column: 9, scope: !4077)
!4091 = !DILocation(line: 1326, column: 13, scope: !4077)
!4092 = !DILocation(line: 1326, column: 19, scope: !4077)
!4093 = !DILocation(line: 1327, column: 21, scope: !4087)
!4094 = !DILocation(line: 1326, column: 36, scope: !4077)
!4095 = !DILocation(line: 1326, column: 39, scope: !4077)
!4096 = !DILocation(line: 1327, column: 24, scope: !4087)
!4097 = !DILocation(line: 1327, column: 16, scope: !4087)
!4098 = !DILocation(line: 1327, column: 12, scope: !4087)
!4099 = !DILocation(line: 0, scope: !4087)
!4100 = !DILocation(line: 1329, column: 10, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4087, file: !1972, line: 1329, column: 7)
!4102 = !DILocation(line: 1329, column: 7, scope: !4087)
!4103 = distinct !{!4103, !4089, !4104}
!4104 = !DILocation(line: 1333, column: 2, scope: !4077)
!4105 = !DILocation(line: 1336, column: 1, scope: !4077)
!4106 = distinct !DISubprogram(name: "encode_uint", scope: !1972, file: !1972, line: 788, type: !4107, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4109)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!363, !1994, !3710, !363, !192}
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4117, !4118}
!4110 = !DILocalVariable(name: "value", arg: 1, scope: !4106, file: !1972, line: 788, type: !1994)
!4111 = !DILocalVariable(name: "conv", arg: 2, scope: !4106, file: !1972, line: 789, type: !3710)
!4112 = !DILocalVariable(name: "bps", arg: 3, scope: !4106, file: !1972, line: 790, type: !363)
!4113 = !DILocalVariable(name: "bpe", arg: 4, scope: !4106, file: !1972, line: 791, type: !192)
!4114 = !DILocalVariable(name: "upcase", scope: !4106, file: !1972, line: 793, type: !205)
!4115 = !DILocalVariable(name: "radix", scope: !4106, file: !1972, line: 794, type: !4116)
!4116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4117 = !DILocalVariable(name: "bp", scope: !4106, file: !1972, line: 795, type: !363)
!4118 = !DILocalVariable(name: "lsv", scope: !4119, file: !1972, line: 798, type: !32)
!4119 = distinct !DILexicalBlock(scope: !4106, file: !1972, line: 797, column: 5)
!4120 = !DILocation(line: 0, scope: !4106)
!4121 = !DILocation(line: 793, column: 35, scope: !4106)
!4122 = !DILocation(line: 793, column: 24, scope: !4106)
!4123 = !DILocation(line: 793, column: 16, scope: !4106)
!4124 = !DILocation(line: 794, column: 29, scope: !4106)
!4125 = !DILocation(line: 795, column: 24, scope: !4106)
!4126 = !DILocation(line: 795, column: 17, scope: !4106)
!4127 = !DILocation(line: 797, column: 2, scope: !4106)
!4128 = !DILocation(line: 802, column: 9, scope: !4119)
!4129 = !DILocation(line: 798, column: 22, scope: !4119)
!4130 = !DILocation(line: 0, scope: !4119)
!4131 = !DILocation(line: 800, column: 16, scope: !4119)
!4132 = !DILocation(line: 800, column: 11, scope: !4119)
!4133 = !DILocation(line: 800, column: 4, scope: !4119)
!4134 = !DILocation(line: 800, column: 9, scope: !4119)
!4135 = !DILocation(line: 803, column: 18, scope: !4106)
!4136 = !DILocation(line: 803, column: 24, scope: !4106)
!4137 = !DILocation(line: 803, column: 2, scope: !4119)
!4138 = distinct !{!4138, !4127, !4139}
!4139 = !DILocation(line: 803, column: 37, scope: !4106)
!4140 = !DILocation(line: 808, column: 12, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4106, file: !1972, line: 808, column: 6)
!4142 = !DILocation(line: 808, column: 6, scope: !4106)
!4143 = !DILocation(line: 809, column: 7, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4141, file: !1972, line: 808, column: 23)
!4145 = !DILocation(line: 813, column: 3, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !1972, line: 811, column: 27)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !1972, line: 811, column: 14)
!4148 = distinct !DILexicalBlock(scope: !4144, file: !1972, line: 809, column: 7)
!4149 = !DILocation(line: 0, scope: !4148)
!4150 = !DILocation(line: 818, column: 2, scope: !4106)
!4151 = distinct !DISubprogram(name: "store_count", scope: !1972, file: !1972, line: 1280, type: !4152, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4156)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{null, !4154, !102, !103}
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 32)
!4155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3677)
!4156 = !{!4157, !4158, !4159}
!4157 = !DILocalVariable(name: "conv", arg: 1, scope: !4151, file: !1972, line: 1280, type: !4154)
!4158 = !DILocalVariable(name: "dp", arg: 2, scope: !4151, file: !1972, line: 1281, type: !102)
!4159 = !DILocalVariable(name: "count", arg: 3, scope: !4151, file: !1972, line: 1282, type: !103)
!4160 = !DILocation(line: 0, scope: !4151)
!4161 = !DILocation(line: 1284, column: 38, scope: !4151)
!4162 = !DILocation(line: 1284, column: 2, scope: !4151)
!4163 = !DILocation(line: 1286, column: 4, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4151, file: !1972, line: 1284, column: 50)
!4165 = !DILocation(line: 1286, column: 14, scope: !4164)
!4166 = !DILocation(line: 1287, column: 3, scope: !4164)
!4167 = !DILocation(line: 1289, column: 24, scope: !4164)
!4168 = !DILocation(line: 1289, column: 22, scope: !4164)
!4169 = !DILocation(line: 1290, column: 3, scope: !4164)
!4170 = !DILocation(line: 1292, column: 18, scope: !4164)
!4171 = !DILocation(line: 1292, column: 4, scope: !4164)
!4172 = !DILocation(line: 1292, column: 16, scope: !4164)
!4173 = !DILocation(line: 1293, column: 3, scope: !4164)
!4174 = !DILocation(line: 1295, column: 4, scope: !4164)
!4175 = !DILocation(line: 1295, column: 15, scope: !4164)
!4176 = !DILocation(line: 1296, column: 3, scope: !4164)
!4177 = !DILocation(line: 1298, column: 22, scope: !4164)
!4178 = !DILocation(line: 1298, column: 4, scope: !4164)
!4179 = !DILocation(line: 1298, column: 20, scope: !4164)
!4180 = !DILocation(line: 1299, column: 3, scope: !4164)
!4181 = !DILocation(line: 1301, column: 21, scope: !4164)
!4182 = !DILocation(line: 1301, column: 4, scope: !4164)
!4183 = !DILocation(line: 1301, column: 19, scope: !4164)
!4184 = !DILocation(line: 1302, column: 3, scope: !4164)
!4185 = !DILocation(line: 1304, column: 4, scope: !4164)
!4186 = !DILocation(line: 1304, column: 17, scope: !4164)
!4187 = !DILocation(line: 1305, column: 3, scope: !4164)
!4188 = !DILocation(line: 1307, column: 4, scope: !4164)
!4189 = !DILocation(line: 1307, column: 20, scope: !4164)
!4190 = !DILocation(line: 1308, column: 3, scope: !4164)
!4191 = !DILocation(line: 1316, column: 1, scope: !4151)
!4192 = distinct !DISubprogram(name: "isupper", scope: !4193, file: !4193, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4194)
!4193 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4194 = !{!4195}
!4195 = !DILocalVariable(name: "a", arg: 1, scope: !4192, file: !4193, line: 16, type: !103)
!4196 = !DILocation(line: 0, scope: !4192)
!4197 = !DILocation(line: 18, column: 29, scope: !4192)
!4198 = !DILocation(line: 18, column: 45, scope: !4192)
!4199 = !DILocation(line: 18, column: 2, scope: !4192)
!4200 = distinct !DISubprogram(name: "conversion_radix", scope: !1972, file: !1972, line: 761, type: !4201, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4203)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!223, !194}
!4203 = !{!4204}
!4204 = !DILocalVariable(name: "specifier", arg: 1, scope: !4200, file: !1972, line: 761, type: !194)
!4205 = !DILocation(line: 0, scope: !4200)
!4206 = !DILocation(line: 763, column: 2, scope: !4200)
!4207 = !DILocation(line: 770, column: 3, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4200, file: !1972, line: 763, column: 21)
!4209 = !DILocation(line: 774, column: 3, scope: !4208)
!4210 = !DILocation(line: 0, scope: !4208)
!4211 = !DILocation(line: 776, column: 1, scope: !4200)
!4212 = distinct !DISubprogram(name: "extract_flags", scope: !1972, file: !1972, line: 339, type: !4054, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4213)
!4213 = !{!4214, !4215, !4216}
!4214 = !DILocalVariable(name: "conv", arg: 1, scope: !4212, file: !1972, line: 339, type: !3710)
!4215 = !DILocalVariable(name: "sp", arg: 2, scope: !4212, file: !1972, line: 340, type: !192)
!4216 = !DILocalVariable(name: "loop", scope: !4212, file: !1972, line: 342, type: !205)
!4217 = !DILocation(line: 0, scope: !4212)
!4218 = !DILocation(line: 344, column: 2, scope: !4212)
!4219 = !DILocation(line: 345, column: 11, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4212, file: !1972, line: 344, column: 5)
!4221 = !DILocation(line: 345, column: 3, scope: !4220)
!4222 = !DILocation(line: 351, column: 4, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4220, file: !1972, line: 345, column: 16)
!4224 = !DILocation(line: 354, column: 4, scope: !4223)
!4225 = !DILocation(line: 357, column: 4, scope: !4223)
!4226 = !DILocation(line: 360, column: 4, scope: !4223)
!4227 = !DILocation(line: 0, scope: !4223)
!4228 = !DILocation(line: 370, column: 12, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4212, file: !1972, line: 370, column: 6)
!4230 = !DILocation(line: 370, column: 22, scope: !4229)
!4231 = !DILocation(line: 371, column: 19, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4229, file: !1972, line: 370, column: 42)
!4233 = !DILocation(line: 372, column: 2, scope: !4232)
!4234 = !DILocation(line: 376, column: 2, scope: !4212)
!4235 = distinct !DISubprogram(name: "extract_width", scope: !1972, file: !1972, line: 388, type: !4054, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4236)
!4236 = !{!4237, !4238, !4239, !4240}
!4237 = !DILocalVariable(name: "conv", arg: 1, scope: !4235, file: !1972, line: 388, type: !3710)
!4238 = !DILocalVariable(name: "sp", arg: 2, scope: !4235, file: !1972, line: 389, type: !192)
!4239 = !DILocalVariable(name: "wp", scope: !4235, file: !1972, line: 398, type: !192)
!4240 = !DILocalVariable(name: "width", scope: !4235, file: !1972, line: 399, type: !223)
!4241 = !DILocation(line: 0, scope: !4235)
!4242 = !DILocation(line: 391, column: 8, scope: !4235)
!4243 = !DILocation(line: 391, column: 22, scope: !4235)
!4244 = !DILocation(line: 393, column: 6, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4235, file: !1972, line: 393, column: 6)
!4246 = !DILocation(line: 393, column: 10, scope: !4245)
!4247 = !DILocation(line: 393, column: 6, scope: !4235)
!4248 = !DILocation(line: 394, column: 20, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4245, file: !1972, line: 393, column: 18)
!4250 = !DILocation(line: 395, column: 10, scope: !4249)
!4251 = !DILocation(line: 395, column: 3, scope: !4249)
!4252 = !DILocation(line: 399, column: 17, scope: !4235)
!4253 = !DILocation(line: 401, column: 6, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4235, file: !1972, line: 401, column: 6)
!4255 = !DILocation(line: 401, column: 9, scope: !4254)
!4256 = !DILocation(line: 401, column: 6, scope: !4235)
!4257 = !DILocation(line: 402, column: 23, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !1972, line: 401, column: 16)
!4259 = !DILocation(line: 403, column: 9, scope: !4258)
!4260 = !DILocation(line: 403, column: 21, scope: !4258)
!4261 = !DILocation(line: 405, column: 11, scope: !4258)
!4262 = !DILocation(line: 404, column: 21, scope: !4258)
!4263 = !DILocation(line: 406, column: 2, scope: !4258)
!4264 = !DILocation(line: 409, column: 1, scope: !4235)
!4265 = distinct !DISubprogram(name: "extract_prec", scope: !1972, file: !1972, line: 420, type: !4054, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4266)
!4266 = !{!4267, !4268, !4269}
!4267 = !DILocalVariable(name: "conv", arg: 1, scope: !4265, file: !1972, line: 420, type: !3710)
!4268 = !DILocalVariable(name: "sp", arg: 2, scope: !4265, file: !1972, line: 421, type: !192)
!4269 = !DILocalVariable(name: "prec", scope: !4265, file: !1972, line: 435, type: !223)
!4270 = !DILocation(line: 0, scope: !4265)
!4271 = !DILocation(line: 423, column: 24, scope: !4265)
!4272 = !DILocation(line: 423, column: 28, scope: !4265)
!4273 = !DILocation(line: 423, column: 8, scope: !4265)
!4274 = !DILocation(line: 423, column: 21, scope: !4265)
!4275 = !DILocation(line: 425, column: 6, scope: !4265)
!4276 = !DILocation(line: 428, column: 2, scope: !4265)
!4277 = !DILocation(line: 430, column: 6, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4265, file: !1972, line: 430, column: 6)
!4279 = !DILocation(line: 430, column: 10, scope: !4278)
!4280 = !DILocation(line: 430, column: 6, scope: !4265)
!4281 = !DILocation(line: 431, column: 19, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !1972, line: 430, column: 18)
!4283 = !DILocation(line: 432, column: 10, scope: !4282)
!4284 = !DILocation(line: 432, column: 3, scope: !4282)
!4285 = !DILocation(line: 435, column: 16, scope: !4265)
!4286 = !DILocation(line: 437, column: 8, scope: !4265)
!4287 = !DILocation(line: 437, column: 19, scope: !4265)
!4288 = !DILocation(line: 439, column: 10, scope: !4265)
!4289 = !DILocation(line: 438, column: 20, scope: !4265)
!4290 = !DILocation(line: 441, column: 9, scope: !4265)
!4291 = !DILocation(line: 442, column: 1, scope: !4265)
!4292 = distinct !DISubprogram(name: "extract_length", scope: !1972, file: !1972, line: 453, type: !4054, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4293)
!4293 = !{!4294, !4295}
!4294 = !DILocalVariable(name: "conv", arg: 1, scope: !4292, file: !1972, line: 453, type: !3710)
!4295 = !DILocalVariable(name: "sp", arg: 2, scope: !4292, file: !1972, line: 454, type: !192)
!4296 = !DILocation(line: 0, scope: !4292)
!4297 = !DILocation(line: 456, column: 10, scope: !4292)
!4298 = !DILocation(line: 456, column: 2, scope: !4292)
!4299 = !DILocation(line: 458, column: 8, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !1972, line: 458, column: 7)
!4301 = distinct !DILexicalBlock(scope: !4292, file: !1972, line: 456, column: 15)
!4302 = !DILocation(line: 458, column: 7, scope: !4300)
!4303 = !DILocation(line: 458, column: 13, scope: !4300)
!4304 = !DILocation(line: 0, scope: !4300)
!4305 = !DILocation(line: 458, column: 7, scope: !4301)
!4306 = !DILocation(line: 459, column: 21, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4300, file: !1972, line: 458, column: 21)
!4308 = !DILocation(line: 460, column: 4, scope: !4307)
!4309 = !DILocation(line: 461, column: 3, scope: !4307)
!4310 = !DILocation(line: 462, column: 21, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4300, file: !1972, line: 461, column: 10)
!4312 = !DILocation(line: 466, column: 8, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4301, file: !1972, line: 466, column: 7)
!4314 = !DILocation(line: 466, column: 7, scope: !4313)
!4315 = !DILocation(line: 466, column: 13, scope: !4313)
!4316 = !DILocation(line: 0, scope: !4313)
!4317 = !DILocation(line: 466, column: 7, scope: !4301)
!4318 = !DILocation(line: 467, column: 21, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4313, file: !1972, line: 466, column: 21)
!4320 = !DILocation(line: 468, column: 4, scope: !4319)
!4321 = !DILocation(line: 469, column: 3, scope: !4319)
!4322 = !DILocation(line: 470, column: 21, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4313, file: !1972, line: 469, column: 10)
!4324 = !DILocation(line: 474, column: 9, scope: !4301)
!4325 = !DILocation(line: 474, column: 20, scope: !4301)
!4326 = !DILocation(line: 475, column: 3, scope: !4301)
!4327 = !DILocation(line: 476, column: 3, scope: !4301)
!4328 = !DILocation(line: 478, column: 9, scope: !4301)
!4329 = !DILocation(line: 478, column: 20, scope: !4301)
!4330 = !DILocation(line: 479, column: 3, scope: !4301)
!4331 = !DILocation(line: 480, column: 3, scope: !4301)
!4332 = !DILocation(line: 482, column: 9, scope: !4301)
!4333 = !DILocation(line: 482, column: 20, scope: !4301)
!4334 = !DILocation(line: 483, column: 3, scope: !4301)
!4335 = !DILocation(line: 484, column: 3, scope: !4301)
!4336 = !DILocation(line: 486, column: 9, scope: !4301)
!4337 = !DILocation(line: 486, column: 20, scope: !4301)
!4338 = !DILocation(line: 487, column: 3, scope: !4301)
!4339 = !DILocation(line: 492, column: 21, scope: !4301)
!4340 = !DILocation(line: 493, column: 3, scope: !4301)
!4341 = !DILocation(line: 495, column: 9, scope: !4301)
!4342 = !DILocation(line: 495, column: 20, scope: !4301)
!4343 = !DILocation(line: 496, column: 3, scope: !4301)
!4344 = !DILocation(line: 498, column: 2, scope: !4292)
!4345 = distinct !DISubprogram(name: "extract_specifier", scope: !1972, file: !1972, line: 513, type: !4054, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4346)
!4346 = !{!4347, !4348, !4349, !4350}
!4347 = !DILocalVariable(name: "conv", arg: 1, scope: !4345, file: !1972, line: 513, type: !3710)
!4348 = !DILocalVariable(name: "sp", arg: 2, scope: !4345, file: !1972, line: 514, type: !192)
!4349 = !DILocalVariable(name: "unsupported", scope: !4345, file: !1972, line: 516, type: !205)
!4350 = !DILabel(scope: !4351, name: "int_conv", file: !1972, line: 526)
!4351 = distinct !DILexicalBlock(scope: !4345, file: !1972, line: 520, column: 27)
!4352 = !DILocation(line: 0, scope: !4345)
!4353 = !DILocation(line: 518, column: 20, scope: !4345)
!4354 = !DILocation(line: 518, column: 8, scope: !4345)
!4355 = !DILocation(line: 518, column: 18, scope: !4345)
!4356 = !DILocation(line: 520, column: 2, scope: !4345)
!4357 = !DILocation(line: 525, column: 3, scope: !4351)
!4358 = !DILocation(line: 0, scope: !4351)
!4359 = !DILocation(line: 526, column: 1, scope: !4351)
!4360 = !DILocation(line: 528, column: 24, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4351, file: !1972, line: 528, column: 7)
!4362 = !DILocation(line: 528, column: 7, scope: !4351)
!4363 = !DILocation(line: 535, column: 23, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4351, file: !1972, line: 535, column: 7)
!4365 = !DILocation(line: 535, column: 7, scope: !4351)
!4366 = !DILocation(line: 536, column: 36, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4364, file: !1972, line: 535, column: 31)
!4368 = !DILocation(line: 537, column: 3, scope: !4367)
!4369 = !DILocation(line: 570, column: 9, scope: !4351)
!4370 = !DILocation(line: 570, column: 23, scope: !4351)
!4371 = !DILocation(line: 575, column: 4, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !1972, line: 573, column: 48)
!4373 = distinct !DILexicalBlock(scope: !4351, file: !1972, line: 573, column: 7)
!4374 = !DILocation(line: 603, column: 9, scope: !4351)
!4375 = !DILocation(line: 603, column: 23, scope: !4351)
!4376 = !DILocation(line: 605, column: 24, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4351, file: !1972, line: 605, column: 7)
!4378 = !DILocation(line: 605, column: 7, scope: !4351)
!4379 = !DILocation(line: 612, column: 9, scope: !4351)
!4380 = !DILocation(line: 612, column: 23, scope: !4351)
!4381 = !DILocation(line: 619, column: 24, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4351, file: !1972, line: 619, column: 7)
!4383 = !DILocation(line: 619, column: 7, scope: !4351)
!4384 = !DILocation(line: 625, column: 9, scope: !4351)
!4385 = !DILocation(line: 625, column: 17, scope: !4351)
!4386 = !DILocation(line: 626, column: 3, scope: !4351)
!4387 = !DILocation(line: 629, column: 20, scope: !4345)
!4388 = !DILocation(line: 629, column: 8, scope: !4345)
!4389 = !DILocation(line: 518, column: 23, scope: !4345)
!4390 = !DILocation(line: 631, column: 2, scope: !4345)
!4391 = distinct !DISubprogram(name: "extract_decimal", scope: !1972, file: !1972, line: 318, type: !4392, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4395)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!223, !4394}
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!4395 = !{!4396, !4397, !4398}
!4396 = !DILocalVariable(name: "str", arg: 1, scope: !4391, file: !1972, line: 318, type: !4394)
!4397 = !DILocalVariable(name: "sp", scope: !4391, file: !1972, line: 320, type: !192)
!4398 = !DILocalVariable(name: "val", scope: !4391, file: !1972, line: 321, type: !223)
!4399 = !DILocation(line: 0, scope: !4391)
!4400 = !DILocation(line: 320, column: 19, scope: !4391)
!4401 = !DILocation(line: 323, column: 37, scope: !4391)
!4402 = !DILocation(line: 323, column: 17, scope: !4391)
!4403 = !DILocation(line: 323, column: 9, scope: !4391)
!4404 = !DILocation(line: 323, column: 2, scope: !4391)
!4405 = !DILocation(line: 324, column: 13, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4391, file: !1972, line: 323, column: 43)
!4407 = !DILocation(line: 324, column: 24, scope: !4406)
!4408 = !DILocation(line: 324, column: 19, scope: !4406)
!4409 = !DILocation(line: 324, column: 27, scope: !4406)
!4410 = distinct !{!4410, !4404, !4411}
!4411 = !DILocation(line: 325, column: 2, scope: !4391)
!4412 = !DILocation(line: 326, column: 7, scope: !4391)
!4413 = !DILocation(line: 327, column: 2, scope: !4391)
!4414 = distinct !DISubprogram(name: "isdigit", scope: !4193, file: !4193, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1968, retainedNodes: !4415)
!4415 = !{!4416}
!4416 = !DILocalVariable(name: "a", arg: 1, scope: !4414, file: !4193, line: 43, type: !103)
!4417 = !DILocation(line: 0, scope: !4414)
!4418 = !DILocation(line: 45, column: 29, scope: !4414)
!4419 = !DILocation(line: 45, column: 45, scope: !4414)
!4420 = !DILocation(line: 45, column: 2, scope: !4414)
!4421 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4422, file: !4422, line: 9, type: !873, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2005, retainedNodes: !336)
!4422 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!4423 = !DILocation(line: 11, column: 1, scope: !4421)
!4424 = !{i64 2147557345, i64 2147557388, i64 2147557428}
!4425 = !DILocation(line: 12, column: 1, scope: !4421)
!4426 = !{i64 2147561584, i64 2147561627, i64 2147561667}
!4427 = !DILocation(line: 13, column: 1, scope: !4421)
!4428 = !{i64 2147561801, i64 2147561844, i64 2147561884}
!4429 = !DILocation(line: 14, column: 1, scope: !4421)
!4430 = !{i64 2147561970, i64 2147562013, i64 2147562053}
!4431 = !DILocation(line: 15, column: 1, scope: !4421)
!4432 = !{i64 2147562154, i64 2147562197, i64 2147562237}
!4433 = !DILocation(line: 16, column: 1, scope: !4421)
!4434 = !{i64 2147562333, i64 2147562376, i64 2147562416}
!4435 = !DILocation(line: 17, column: 1, scope: !4421)
!4436 = !{i64 2147562575, i64 2147562618, i64 2147562658}
!4437 = !DILocation(line: 18, column: 1, scope: !4421)
!4438 = !{i64 2147562761, i64 2147562804, i64 2147562844}
!4439 = !DILocation(line: 19, column: 1, scope: !4421)
!4440 = !{i64 2147562975, i64 2147563018, i64 2147563058}
!4441 = !DILocation(line: 20, column: 1, scope: !4421)
!4442 = !{i64 2147563178, i64 2147563221, i64 2147563261}
!4443 = !DILocation(line: 21, column: 1, scope: !4421)
!4444 = !{i64 2147563381, i64 2147563424, i64 2147563464}
!4445 = !DILocation(line: 22, column: 1, scope: !4421)
!4446 = !{i64 2147563580, i64 2147563623, i64 2147563663}
!4447 = !DILocation(line: 23, column: 1, scope: !4421)
!4448 = !{i64 2147563755, i64 2147563798, i64 2147563838}
!4449 = !DILocation(line: 24, column: 1, scope: !4421)
!4450 = !{i64 2147563963, i64 2147564006, i64 2147564046}
!4451 = !DILocation(line: 25, column: 1, scope: !4421)
!4452 = !{i64 2147564167, i64 2147564210, i64 2147564250}
!4453 = !DILocation(line: 26, column: 1, scope: !4421)
!4454 = !{i64 2147564369, i64 2147564412, i64 2147564452}
!4455 = !DILocation(line: 27, column: 1, scope: !4421)
!4456 = !{i64 2147564596, i64 2147564639, i64 2147564679}
!4457 = !DILocation(line: 28, column: 1, scope: !4421)
!4458 = !{i64 2147564811, i64 2147564854, i64 2147564894}
!4459 = !DILocation(line: 29, column: 1, scope: !4421)
!4460 = !{i64 2147564983, i64 2147565026, i64 2147565066}
!4461 = !DILocation(line: 30, column: 1, scope: !4421)
!4462 = !{i64 2147565185, i64 2147565228, i64 2147565268}
!4463 = !DILocation(line: 31, column: 1, scope: !4421)
!4464 = !{i64 2147565384, i64 2147565427, i64 2147565467}
!4465 = !DILocation(line: 32, column: 1, scope: !4421)
!4466 = !{i64 2147565559, i64 2147565602, i64 2147565642}
!4467 = !DILocation(line: 33, column: 1, scope: !4421)
!4468 = !{i64 2147565812, i64 2147565855, i64 2147565895}
!4469 = !DILocation(line: 34, column: 1, scope: !4421)
!4470 = !{i64 2147566050, i64 2147566093, i64 2147566133}
!4471 = !DILocation(line: 35, column: 1, scope: !4421)
!4472 = !{i64 2147566285, i64 2147566328, i64 2147566368}
!4473 = !DILocation(line: 36, column: 1, scope: !4421)
!4474 = !{i64 2147566526, i64 2147566569, i64 2147566609}
!4475 = !DILocation(line: 37, column: 1, scope: !4421)
!4476 = !{i64 2147566776, i64 2147566819, i64 2147566859}
!4477 = !DILocation(line: 38, column: 1, scope: !4421)
!4478 = !{i64 2147567026, i64 2147567069, i64 2147567109}
!4479 = !DILocation(line: 39, column: 1, scope: !4421)
!4480 = !{i64 2147567267, i64 2147567310, i64 2147567350}
!4481 = !DILocation(line: 40, column: 1, scope: !4421)
!4482 = !{i64 2147567520, i64 2147567563, i64 2147567603}
!4483 = !DILocation(line: 41, column: 1, scope: !4421)
!4484 = !{i64 2147567746, i64 2147567789, i64 2147567829}
!4485 = !DILocation(line: 42, column: 1, scope: !4421)
!4486 = !{i64 2147567972, i64 2147568015, i64 2147568055}
!4487 = !DILocation(line: 43, column: 1, scope: !4421)
!4488 = !{i64 2147568207, i64 2147568250, i64 2147568290}
!4489 = !DILocation(line: 44, column: 1, scope: !4421)
!4490 = !{i64 2147568436, i64 2147568479, i64 2147568519}
!4491 = !DILocation(line: 45, column: 1, scope: !4421)
!4492 = !{i64 2147568644, i64 2147568687, i64 2147568727}
!4493 = !DILocation(line: 46, column: 1, scope: !4421)
!4494 = !{i64 2147568855, i64 2147568898, i64 2147568938}
!4495 = !DILocation(line: 47, column: 1, scope: !4421)
!4496 = !{i64 2147569090, i64 2147569133, i64 2147569173}
!4497 = !DILocation(line: 48, column: 1, scope: !4421)
!4498 = !{i64 2147569319, i64 2147569362, i64 2147569402}
!4499 = !DILocation(line: 49, column: 1, scope: !4421)
!4500 = !{i64 2147569557, i64 2147569600, i64 2147569640}
!4501 = !DILocation(line: 50, column: 1, scope: !4421)
!4502 = !{i64 2147569789, i64 2147569832, i64 2147569872}
!4503 = !DILocation(line: 51, column: 1, scope: !4421)
!4504 = !{i64 2147570015, i64 2147570058, i64 2147570098}
!4505 = !DILocation(line: 52, column: 1, scope: !4421)
!4506 = !{i64 2147574293, i64 2147574336, i64 2147574376}
!4507 = !DILocation(line: 53, column: 1, scope: !4421)
!4508 = !{i64 2147574525, i64 2147574568, i64 2147574608}
!4509 = !DILocation(line: 54, column: 1, scope: !4421)
!4510 = !{i64 2147574751, i64 2147574794, i64 2147574834}
!4511 = !DILocation(line: 55, column: 1, scope: !4421)
!4512 = !{i64 2147574965, i64 2147575008, i64 2147575048}
!4513 = !DILocation(line: 56, column: 1, scope: !4421)
!4514 = !{i64 2147575185, i64 2147575228, i64 2147575268}
!4515 = !DILocation(line: 57, column: 1, scope: !4421)
!4516 = !{i64 2147575417, i64 2147575460, i64 2147575500}
!4517 = !DILocation(line: 58, column: 1, scope: !4421)
!4518 = !{i64 2147575625, i64 2147575668, i64 2147575708}
!4519 = !DILocation(line: 59, column: 1, scope: !4421)
!4520 = !{i64 2147575830, i64 2147575873, i64 2147575913}
!4521 = !DILocation(line: 60, column: 1, scope: !4421)
!4522 = !{i64 2147576047, i64 2147576090, i64 2147576130}
!4523 = !DILocation(line: 61, column: 1, scope: !4421)
!4524 = !{i64 2147576261, i64 2147576304, i64 2147576344}
!4525 = !DILocation(line: 62, column: 1, scope: !4421)
!4526 = !{i64 2147576487, i64 2147576530, i64 2147576570}
!4527 = !DILocation(line: 63, column: 1, scope: !4421)
!4528 = !{i64 2147576707, i64 2147576750, i64 2147576790}
!4529 = !DILocation(line: 64, column: 1, scope: !4421)
!4530 = !{i64 2147576912, i64 2147576955, i64 2147576995}
!4531 = !DILocation(line: 65, column: 1, scope: !4421)
!4532 = !{i64 2147577144, i64 2147577187, i64 2147577227}
!4533 = !DILocation(line: 66, column: 1, scope: !4421)
!4534 = !{i64 2147577379, i64 2147577422, i64 2147577462}
!4535 = !DILocation(line: 67, column: 1, scope: !4421)
!4536 = !{i64 2147577629, i64 2147577672, i64 2147577712}
!4537 = !DILocation(line: 68, column: 1, scope: !4421)
!4538 = !{i64 2147577879, i64 2147577922, i64 2147577962}
!4539 = !DILocation(line: 69, column: 1, scope: !4421)
!4540 = !{i64 2147578117, i64 2147578160, i64 2147578200}
!4541 = !DILocation(line: 70, column: 1, scope: !4421)
!4542 = !{i64 2147578328, i64 2147578371, i64 2147578411}
!4543 = !DILocation(line: 71, column: 1, scope: !4421)
!4544 = !{i64 2147578545, i64 2147578588, i64 2147578628}
!4545 = !DILocation(line: 72, column: 1, scope: !4421)
!4546 = !{i64 2147578708, i64 2147578751, i64 2147578791}
!4547 = !DILocation(line: 73, column: 1, scope: !4421)
!4548 = !{i64 2147578904, i64 2147578947, i64 2147578987}
!4549 = !DILocation(line: 74, column: 1, scope: !4421)
!4550 = !{i64 2147579106, i64 2147579149, i64 2147579189}
!4551 = !DILocation(line: 75, column: 1, scope: !4421)
!4552 = !{i64 2147579302, i64 2147579345, i64 2147579385}
!4553 = !DILocation(line: 76, column: 1, scope: !4421)
!4554 = !{i64 2147579507, i64 2147579550, i64 2147579590}
!4555 = !DILocation(line: 77, column: 1, scope: !4421)
!4556 = !{i64 2147579709, i64 2147579752, i64 2147579792}
!4557 = !DILocation(line: 78, column: 1, scope: !4421)
!4558 = !{i64 2147579908, i64 2147579951, i64 2147579991}
!4559 = !DILocation(line: 79, column: 1, scope: !4421)
!4560 = !{i64 2147580092, i64 2147580135, i64 2147580175}
!4561 = !DILocation(line: 80, column: 1, scope: !4421)
!4562 = !{i64 2147580288, i64 2147580331, i64 2147580371}
!4563 = !DILocation(line: 81, column: 1, scope: !4421)
!4564 = !{i64 2147580511, i64 2147580554, i64 2147580594}
!4565 = !DILocation(line: 82, column: 1, scope: !4421)
!4566 = !{i64 2147580743, i64 2147580786, i64 2147580826}
!4567 = !DILocation(line: 83, column: 1, scope: !4421)
!4568 = !{i64 2147580975, i64 2147581018, i64 2147581058}
!4569 = !DILocation(line: 84, column: 1, scope: !4421)
!4570 = !{i64 2147581207, i64 2147581250, i64 2147581290}
!4571 = !DILocation(line: 85, column: 1, scope: !4421)
!4572 = !{i64 2147581373, i64 2147581416, i64 2147581456}
!4573 = !DILocation(line: 86, column: 1, scope: !4421)
!4574 = !{i64 2147581557, i64 2147581600, i64 2147581640}
!4575 = !DILocation(line: 87, column: 1, scope: !4421)
!4576 = !{i64 2147581747, i64 2147581790, i64 2147581830}
!4577 = !DILocation(line: 88, column: 1, scope: !4421)
!4578 = !{i64 2147581931, i64 2147581974, i64 2147582014}
!4579 = !DILocation(line: 89, column: 1, scope: !4421)
!4580 = !{i64 2147582145, i64 2147582188, i64 2147582228}
!4581 = !DILocation(line: 90, column: 1, scope: !4421)
!4582 = !{i64 2147582356, i64 2147582399, i64 2147582439}
!4583 = !DILocation(line: 91, column: 1, scope: !4421)
!4584 = !{i64 2147582579, i64 2147582622, i64 2147582662}
!4585 = !DILocation(line: 92, column: 1, scope: !4421)
!4586 = !{i64 2147582763, i64 2147582806, i64 2147582846}
!4587 = !DILocation(line: 93, column: 1, scope: !4421)
!4588 = !{i64 2147582977, i64 2147583020, i64 2147583060}
!4589 = !DILocation(line: 94, column: 1, scope: !4421)
!4590 = !{i64 2147583143, i64 2147583186, i64 2147583226}
!4591 = !DILocation(line: 95, column: 1, scope: !4421)
!4592 = !{i64 2147587385, i64 2147587428, i64 2147587468}
!4593 = !DILocation(line: 96, column: 1, scope: !4421)
!4594 = !{i64 2147587578, i64 2147587621, i64 2147587661}
!4595 = !DILocation(line: 97, column: 1, scope: !4421)
!4596 = !{i64 2147587804, i64 2147587847, i64 2147587887}
!4597 = !DILocation(line: 98, column: 1, scope: !4421)
!4598 = !{i64 2147588018, i64 2147588061, i64 2147588101}
!4599 = !DILocation(line: 99, column: 1, scope: !4421)
!4600 = !{i64 2147588244, i64 2147588287, i64 2147588327}
!4601 = !DILocation(line: 100, column: 1, scope: !4421)
!4602 = !{i64 2147588461, i64 2147588504, i64 2147588544}
!4603 = !DILocation(line: 101, column: 1, scope: !4421)
!4604 = !{i64 2147588738, i64 2147588781, i64 2147588821}
!4605 = !DILocation(line: 102, column: 1, scope: !4421)
!4606 = !{i64 2147588964, i64 2147589007, i64 2147589047}
!4607 = !DILocation(line: 103, column: 1, scope: !4421)
!4608 = !{i64 2147589160, i64 2147589203, i64 2147589243}
!4609 = !DILocation(line: 104, column: 1, scope: !4421)
!4610 = !{i64 2147589425, i64 2147589468, i64 2147589508}
!4611 = !DILocation(line: 105, column: 1, scope: !4421)
!4612 = !{i64 2147589639, i64 2147589682, i64 2147589722}
!4613 = !DILocation(line: 106, column: 1, scope: !4421)
!4614 = !{i64 2147589814, i64 2147589857, i64 2147589897}
!4615 = !DILocation(line: 107, column: 1, scope: !4421)
!4616 = !{i64 2147590068, i64 2147590111, i64 2147590151}
!4617 = !DILocation(line: 108, column: 1, scope: !4421)
!4618 = !{i64 2147590267, i64 2147590310, i64 2147590350}
!4619 = !DILocation(line: 109, column: 1, scope: !4421)
!4620 = !{i64 2147590509, i64 2147590552, i64 2147590592}
!4621 = !DILocation(line: 110, column: 1, scope: !4421)
!4622 = !{i64 2147590672, i64 2147590715, i64 2147590755}
!4623 = !DILocation(line: 111, column: 1, scope: !4421)
!4624 = !{i64 2147590859, i64 2147590902, i64 2147590942}
!4625 = !DILocation(line: 112, column: 1, scope: !4421)
!4626 = !{i64 2147591052, i64 2147591095, i64 2147591135}
!4627 = !DILocation(line: 113, column: 1, scope: !4421)
!4628 = !{i64 2147591234, i64 2147591277, i64 2147591317}
!4629 = !DILocation(line: 114, column: 1, scope: !4421)
!4630 = !{i64 2147591448, i64 2147591491, i64 2147591531}
!4631 = !DILocation(line: 115, column: 1, scope: !4421)
!4632 = !{i64 2147591659, i64 2147591702, i64 2147591742}
!4633 = !DILocation(line: 116, column: 1, scope: !4421)
!4634 = !{i64 2147591879, i64 2147591922, i64 2147591962}
!4635 = !DILocation(line: 117, column: 1, scope: !4421)
!4636 = !{i64 2147592086, i64 2147592129, i64 2147592169}
!4637 = !DILocation(line: 118, column: 1, scope: !4421)
!4638 = !{i64 2147592359, i64 2147592402, i64 2147592442}
!4639 = !DILocation(line: 119, column: 1, scope: !4421)
!4640 = !{i64 2147592607, i64 2147592650, i64 2147592690}
!4641 = !DILocation(line: 120, column: 1, scope: !4421)
!4642 = !{i64 2147592806, i64 2147592849, i64 2147592889}
!4643 = !DILocation(line: 121, column: 1, scope: !4421)
!4644 = !{i64 2147593041, i64 2147593084, i64 2147593124}
!4645 = !DILocation(line: 122, column: 1, scope: !4421)
!4646 = !{i64 2147593291, i64 2147593334, i64 2147593374}
!4647 = !DILocation(line: 123, column: 1, scope: !4421)
!4648 = !{i64 2147593493, i64 2147593536, i64 2147593576}
!4649 = !DILocation(line: 124, column: 1, scope: !4421)
!4650 = !{i64 2147593716, i64 2147593759, i64 2147593799}
!4651 = !DILocation(line: 125, column: 1, scope: !4421)
!4652 = !{i64 2147593930, i64 2147593973, i64 2147594013}
!4653 = !DILocation(line: 126, column: 1, scope: !4421)
!4654 = !{i64 2147594174, i64 2147594217, i64 2147594257}
!4655 = !DILocation(line: 127, column: 1, scope: !4421)
!4656 = !{i64 2147594403, i64 2147594446, i64 2147594486}
!4657 = !DILocation(line: 128, column: 1, scope: !4421)
!4658 = !{i64 2147594632, i64 2147594675, i64 2147594715}
!4659 = !DILocation(line: 129, column: 1, scope: !4421)
!4660 = !{i64 2147594840, i64 2147594883, i64 2147594923}
!4661 = !DILocation(line: 130, column: 1, scope: !4421)
!4662 = !{i64 2147595078, i64 2147595121, i64 2147595161}
!4663 = !DILocation(line: 131, column: 1, scope: !4421)
!4664 = !{i64 2147595304, i64 2147595347, i64 2147595387}
!4665 = !DILocation(line: 132, column: 1, scope: !4421)
!4666 = !{i64 2147595563, i64 2147595606, i64 2147595646}
!4667 = !DILocation(line: 133, column: 1, scope: !4421)
!4668 = !{i64 2147595783, i64 2147595826, i64 2147595866}
!4669 = !DILocation(line: 134, column: 1, scope: !4421)
!4670 = !{i64 2147600076, i64 2147600119, i64 2147600159}
!4671 = !DILocation(line: 135, column: 1, scope: !4421)
!4672 = !{i64 2147600317, i64 2147600360, i64 2147600400}
!4673 = !DILocation(line: 136, column: 1, scope: !4421)
!4674 = !{i64 2147600558, i64 2147600601, i64 2147600641}
!4675 = !DILocation(line: 137, column: 1, scope: !4421)
!4676 = !{i64 2147600781, i64 2147600824, i64 2147600864}
!4677 = !DILocation(line: 138, column: 1, scope: !4421)
!4678 = !{i64 2147600998, i64 2147601041, i64 2147601081}
!4679 = !DILocation(line: 139, column: 1, scope: !4421)
!4680 = !{i64 2147601239, i64 2147601282, i64 2147601322}
!4681 = !DILocation(line: 140, column: 1, scope: !4421)
!4682 = !{i64 2147601426, i64 2147601469, i64 2147601509}
!4683 = !DILocation(line: 141, column: 1, scope: !4421)
!4684 = !{i64 2147601589, i64 2147601632, i64 2147601672}
!4685 = !DILocation(line: 142, column: 1, scope: !4421)
!4686 = !{i64 2147601848, i64 2147601891, i64 2147601931}
!4687 = !DILocation(line: 143, column: 1, scope: !4421)
!4688 = !{i64 2147602071, i64 2147602114, i64 2147602154}
!4689 = !DILocation(line: 144, column: 1, scope: !4421)
!4690 = !{i64 2147602300, i64 2147602343, i64 2147602383}
!4691 = !DILocation(line: 145, column: 1, scope: !4421)
!4692 = !{i64 2147602496, i64 2147602539, i64 2147602579}
!4693 = !DILocation(line: 146, column: 1, scope: !4421)
!4694 = !{i64 2147602708, i64 2147602751, i64 2147602791}
!4695 = !DILocation(line: 147, column: 1, scope: !4421)
!4696 = !{i64 2147602929, i64 2147602972, i64 2147603012}
!4697 = !DILocation(line: 148, column: 1, scope: !4421)
!4698 = !{i64 2147603143, i64 2147603186, i64 2147603226}
!4699 = !DILocation(line: 149, column: 1, scope: !4421)
!4700 = !{i64 2147603333, i64 2147603376, i64 2147603416}
!4701 = !DILocation(line: 150, column: 1, scope: !4421)
!4702 = !{i64 2147603532, i64 2147603575, i64 2147603615}
!4703 = !DILocation(line: 151, column: 1, scope: !4421)
!4704 = !{i64 2147603737, i64 2147603780, i64 2147603820}
!4705 = !DILocation(line: 152, column: 1, scope: !4421)
!4706 = !{i64 2147603957, i64 2147604000, i64 2147604040}
!4707 = !DILocation(line: 153, column: 1, scope: !4421)
!4708 = !{i64 2147604158, i64 2147604201, i64 2147604241}
!4709 = !DILocation(line: 154, column: 1, scope: !4421)
!4710 = !{i64 2147604357, i64 2147604400, i64 2147604440}
!4711 = !DILocation(line: 155, column: 1, scope: !4421)
!4712 = !{i64 2147604562, i64 2147604605, i64 2147604645}
!4713 = !DILocation(line: 156, column: 1, scope: !4421)
!4714 = !{i64 2147604731, i64 2147604774, i64 2147604814}
!4715 = !DILocation(line: 157, column: 1, scope: !4421)
!4716 = !{i64 2147604915, i64 2147604958, i64 2147604998}
!4717 = !DILocation(line: 158, column: 1, scope: !4421)
!4718 = !{i64 2147605099, i64 2147605142, i64 2147605182}
!4719 = !DILocation(line: 159, column: 1, scope: !4421)
!4720 = !{i64 2147605286, i64 2147605329, i64 2147605369}
!4721 = !DILocation(line: 160, column: 1, scope: !4421)
!4722 = !{i64 2147605470, i64 2147605513, i64 2147605553}
!4723 = !DILocation(line: 161, column: 1, scope: !4421)
!4724 = !{i64 2147605708, i64 2147605751, i64 2147605791}
!4725 = !DILocation(line: 162, column: 1, scope: !4421)
!4726 = !{i64 2147605938, i64 2147605981, i64 2147606021}
!4727 = !DILocation(line: 163, column: 1, scope: !4421)
!4728 = !{i64 2147606167, i64 2147606210, i64 2147606250}
!4729 = !DILocation(line: 164, column: 1, scope: !4421)
!4730 = !{i64 2147606354, i64 2147606397, i64 2147606437}
!4731 = !DILocation(line: 165, column: 1, scope: !4421)
!4732 = !{i64 2147606550, i64 2147606593, i64 2147606633}
!4733 = !DILocation(line: 166, column: 1, scope: !4421)
!4734 = !{i64 2147606758, i64 2147606801, i64 2147606841}
!4735 = !DILocation(line: 167, column: 1, scope: !4421)
!4736 = !{i64 2147606970, i64 2147607013, i64 2147607053}
!4737 = !DILocation(line: 168, column: 1, scope: !4421)
!4738 = !{i64 2147607169, i64 2147607212, i64 2147607252}
!4739 = !DILocation(line: 169, column: 1, scope: !4421)
!4740 = !{i64 2147607407, i64 2147607450, i64 2147607490}
!4741 = !DILocation(line: 170, column: 1, scope: !4421)
!4742 = !{i64 2147607603, i64 2147607646, i64 2147607686}
!4743 = !DILocation(line: 171, column: 1, scope: !4421)
!4744 = !{i64 2147607805, i64 2147607848, i64 2147607888}
!4745 = !DILocation(line: 172, column: 1, scope: !4421)
!4746 = !{i64 2147607998, i64 2147608041, i64 2147608081}
!4747 = !DILocation(line: 173, column: 1, scope: !4421)
!4748 = !{i64 2147608232, i64 2147608275, i64 2147608315}
!4749 = !DILocation(line: 174, column: 1, scope: !4421)
!4750 = !{i64 2147608395, i64 2147608438, i64 2147608478}
!4751 = !DILocation(line: 175, column: 1, scope: !4421)
!4752 = !{i64 2147608634, i64 2147608677, i64 2147608717}
!4753 = !DILocation(line: 176, column: 1, scope: !4421)
!4754 = !{i64 2147608873, i64 2147608916, i64 2147608956}
!4755 = !DILocation(line: 177, column: 1, scope: !4421)
!4756 = !{i64 2147613170, i64 2147613213, i64 2147613253}
!4757 = !DILocation(line: 178, column: 1, scope: !4421)
!4758 = !{i64 2147613400, i64 2147613443, i64 2147613483}
!4759 = !DILocation(line: 179, column: 1, scope: !4421)
!4760 = !{i64 2147613587, i64 2147613630, i64 2147613670}
!4761 = !DILocation(line: 180, column: 1, scope: !4421)
!4762 = !{i64 2147613786, i64 2147613829, i64 2147613869}
!4763 = !DILocation(line: 181, column: 1, scope: !4421)
!4764 = !{i64 2147614057, i64 2147614100, i64 2147614140}
!4765 = !DILocation(line: 182, column: 1, scope: !4421)
!4766 = !{i64 2147614232, i64 2147614275, i64 2147614315}
!4767 = !DILocation(line: 183, column: 1, scope: !4421)
!4768 = !{i64 2147614466, i64 2147614509, i64 2147614549}
!4769 = !DILocation(line: 184, column: 1, scope: !4421)
!4770 = !{i64 2147614674, i64 2147614717, i64 2147614757}
!4771 = !DILocation(line: 185, column: 1, scope: !4421)
!4772 = !{i64 2147614873, i64 2147614916, i64 2147614956}
!4773 = !DILocation(line: 186, column: 1, scope: !4421)
!4774 = !{i64 2147615091, i64 2147615134, i64 2147615174}
!4775 = !DILocation(line: 187, column: 1, scope: !4421)
!4776 = !{i64 2147615281, i64 2147615324, i64 2147615364}
!4777 = !DILocation(line: 188, column: 1, scope: !4421)
!4778 = !{i64 2147615477, i64 2147615520, i64 2147615560}
!4779 = !DILocation(line: 189, column: 1, scope: !4421)
!4780 = !{i64 2147615683, i64 2147615726, i64 2147615766}
!4781 = !DILocation(line: 190, column: 1, scope: !4421)
!4782 = !{i64 2147615888, i64 2147615931, i64 2147615971}
!4783 = !DILocation(line: 191, column: 1, scope: !4421)
!4784 = !{i64 2147616114, i64 2147616157, i64 2147616197}
!4785 = !DILocation(line: 192, column: 1, scope: !4421)
!4786 = !{i64 2147616346, i64 2147616389, i64 2147616429}
!4787 = !DILocation(line: 193, column: 1, scope: !4421)
!4788 = !{i64 2147616524, i64 2147616567, i64 2147616607}
!4789 = !DILocation(line: 194, column: 1, scope: !4421)
!4790 = !{i64 2147616733, i64 2147616776, i64 2147616816}
!4791 = !DILocation(line: 195, column: 1, scope: !4421)
!4792 = !{i64 2147616965, i64 2147617008, i64 2147617048}
!4793 = !DILocation(line: 196, column: 1, scope: !4421)
!4794 = !{i64 2147617167, i64 2147617210, i64 2147617250}
!4795 = !DILocation(line: 197, column: 1, scope: !4421)
!4796 = !{i64 2147617417, i64 2147617460, i64 2147617500}
!4797 = !DILocation(line: 198, column: 1, scope: !4421)
!4798 = !{i64 2147617655, i64 2147617698, i64 2147617738}
!4799 = !DILocation(line: 199, column: 1, scope: !4421)
!4800 = !{i64 2147617866, i64 2147617909, i64 2147617949}
!4801 = !DILocation(line: 200, column: 1, scope: !4421)
!4802 = !{i64 2147618041, i64 2147618084, i64 2147618124}
!4803 = !DILocation(line: 201, column: 1, scope: !4421)
!4804 = !{i64 2147618228, i64 2147618271, i64 2147618311}
!4805 = !DILocation(line: 202, column: 1, scope: !4421)
!4806 = !{i64 2147618442, i64 2147618485, i64 2147618525}
!4807 = !DILocation(line: 203, column: 1, scope: !4421)
!4808 = !{i64 2147618650, i64 2147618693, i64 2147618733}
!4809 = !DILocation(line: 204, column: 1, scope: !4421)
!4810 = !{i64 2147618840, i64 2147618883, i64 2147618923}
!4811 = !DILocation(line: 205, column: 1, scope: !4421)
!4812 = !{i64 2147619054, i64 2147619097, i64 2147619137}
!4813 = !DILocation(line: 206, column: 1, scope: !4421)
!4814 = !{i64 2147619316, i64 2147619359, i64 2147619399}
!4815 = !DILocation(line: 207, column: 1, scope: !4421)
!4816 = !{i64 2147619527, i64 2147619570, i64 2147619610}
!4817 = !DILocation(line: 208, column: 1, scope: !4421)
!4818 = !{i64 2147619771, i64 2147619814, i64 2147619854}
!4819 = !DILocation(line: 209, column: 1, scope: !4421)
!4820 = !{i64 2147619982, i64 2147620025, i64 2147620065}
!4821 = !DILocation(line: 210, column: 1, scope: !4421)
!4822 = !{i64 2147620211, i64 2147620254, i64 2147620294}
!4823 = !DILocation(line: 211, column: 1, scope: !4421)
!4824 = !{i64 2147620476, i64 2147620519, i64 2147620559}
!4825 = !DILocation(line: 212, column: 1, scope: !4421)
!4826 = !{i64 2147620681, i64 2147620724, i64 2147620764}
!4827 = !DILocation(line: 213, column: 1, scope: !4421)
!4828 = !{i64 2147620877, i64 2147620920, i64 2147620960}
!4829 = !DILocation(line: 214, column: 1, scope: !4421)
!4830 = !{i64 2147621100, i64 2147621143, i64 2147621183}
!4831 = !DILocation(line: 215, column: 1, scope: !4421)
!4832 = !{i64 2147621263, i64 2147621306, i64 2147621346}
!4833 = !DILocation(line: 216, column: 1, scope: !4421)
!4834 = !{i64 2147621468, i64 2147621511, i64 2147621551}
!4835 = !DILocation(line: 217, column: 1, scope: !4421)
!4836 = !{i64 2147621688, i64 2147621731, i64 2147621771}
!4837 = !DILocation(line: 218, column: 1, scope: !4421)
!4838 = !{i64 2147621902, i64 2147621945, i64 2147621985}
!4839 = !DILocation(line: 219, column: 1, scope: !4421)
!4840 = !{i64 2147626177, i64 2147626220, i64 2147626260}
!4841 = !DILocation(line: 220, column: 1, scope: !4421)
!4842 = !{i64 2147626388, i64 2147626431, i64 2147626471}
!4843 = !DILocation(line: 221, column: 1, scope: !4421)
!4844 = !{i64 2147626581, i64 2147626624, i64 2147626664}
!4845 = !DILocation(line: 222, column: 1, scope: !4421)
!4846 = !{i64 2147626780, i64 2147626823, i64 2147626863}
!4847 = !DILocation(line: 223, column: 1, scope: !4421)
!4848 = !{i64 2147626976, i64 2147627019, i64 2147627059}
!4849 = !DILocation(line: 224, column: 1, scope: !4421)
!4850 = !{i64 2147627175, i64 2147627218, i64 2147627258}
!4851 = !DILocation(line: 225, column: 1, scope: !4421)
!4852 = !{i64 2147627347, i64 2147627390, i64 2147627430}
!4853 = !DILocation(line: 226, column: 1, scope: !4421)
!4854 = !{i64 2147627540, i64 2147627583, i64 2147627623}
!4855 = !DILocation(line: 227, column: 1, scope: !4421)
!4856 = !{i64 2147627736, i64 2147627779, i64 2147627819}
!4857 = !DILocation(line: 228, column: 1, scope: !4421)
!4858 = !{i64 2147627963, i64 2147628006, i64 2147628046}
!4859 = !DILocation(line: 229, column: 1, scope: !4421)
!4860 = !{i64 2147628180, i64 2147628223, i64 2147628263}
!4861 = !DILocation(line: 230, column: 1, scope: !4421)
!4862 = !{i64 2147628472, i64 2147628515, i64 2147628555}
!4863 = !DILocation(line: 231, column: 1, scope: !4421)
!4864 = !{i64 2147628704, i64 2147628747, i64 2147628787}
!4865 = !DILocation(line: 232, column: 1, scope: !4421)
!4866 = !{i64 2147628921, i64 2147628964, i64 2147629004}
!4867 = !DILocation(line: 233, column: 1, scope: !4421)
!4868 = !{i64 2147629128, i64 2147629171, i64 2147629211}
!4869 = !DILocation(line: 234, column: 1, scope: !4421)
!4870 = !{i64 2147629329, i64 2147629372, i64 2147629412}
!4871 = !DILocation(line: 235, column: 1, scope: !4421)
!4872 = !{i64 2147629561, i64 2147629604, i64 2147629644}
!4873 = !DILocation(line: 236, column: 1, scope: !4421)
!4874 = !{i64 2147629769, i64 2147629812, i64 2147629852}
!4875 = !DILocation(line: 237, column: 1, scope: !4421)
!4876 = !{i64 2147629959, i64 2147630002, i64 2147630042}
!4877 = !DILocation(line: 238, column: 1, scope: !4421)
!4878 = !{i64 2147630185, i64 2147630228, i64 2147630268}
!4879 = !DILocation(line: 239, column: 1, scope: !4421)
!4880 = !{i64 2147630374, i64 2147630417, i64 2147630457}
!4881 = !DILocation(line: 240, column: 1, scope: !4421)
!4882 = !{i64 2147630645, i64 2147630688, i64 2147630728}
!4883 = !DILocation(line: 241, column: 1, scope: !4421)
!4884 = !{i64 2147630865, i64 2147630908, i64 2147630948}
!4885 = !DILocation(line: 242, column: 1, scope: !4421)
!4886 = !{i64 2147631118, i64 2147631161, i64 2147631201}
!4887 = !DILocation(line: 243, column: 1, scope: !4421)
!4888 = !{i64 2147631326, i64 2147631369, i64 2147631409}
!4889 = !DILocation(line: 244, column: 1, scope: !4421)
!4890 = !{i64 2147631558, i64 2147631601, i64 2147631641}
!4891 = !DILocation(line: 245, column: 1, scope: !4421)
!4892 = !{i64 2147631769, i64 2147631812, i64 2147631852}
!4893 = !DILocation(line: 246, column: 1, scope: !4421)
!4894 = !{i64 2147631959, i64 2147632002, i64 2147632042}
!4895 = !DILocation(line: 247, column: 1, scope: !4421)
!4896 = !{i64 2147632173, i64 2147632216, i64 2147632256}
!4897 = !DILocation(line: 248, column: 1, scope: !4421)
!4898 = !{i64 2147632372, i64 2147632415, i64 2147632455}
!4899 = !DILocation(line: 249, column: 1, scope: !4421)
!4900 = !{i64 2147632559, i64 2147632602, i64 2147632642}
!4901 = !DILocation(line: 250, column: 1, scope: !4421)
!4902 = !{i64 2147632767, i64 2147632810, i64 2147632850}
!4903 = !DILocation(line: 251, column: 1, scope: !4421)
!4904 = !{i64 2147632996, i64 2147633039, i64 2147633079}
!4905 = !DILocation(line: 252, column: 1, scope: !4421)
!4906 = !{i64 2147633198, i64 2147633241, i64 2147633281}
!4907 = !DILocation(line: 253, column: 1, scope: !4421)
!4908 = !{i64 2147633397, i64 2147633440, i64 2147633480}
!4909 = !DILocation(line: 254, column: 1, scope: !4421)
!4910 = !{i64 2147633614, i64 2147633657, i64 2147633697}
!4911 = !DILocation(line: 256, column: 1, scope: !4421)
!4912 = distinct !DISubprogram(name: "atmel_sam3x_init", scope: !177, file: !177, line: 205, type: !184, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4913)
!4913 = !{!4914, !4915}
!4914 = !DILocalVariable(name: "arg", arg: 1, scope: !4912, file: !177, line: 205, type: !186)
!4915 = !DILocalVariable(name: "key", scope: !4912, file: !177, line: 207, type: !121)
!4916 = !DILocation(line: 0, scope: !4912)
!4917 = !DILocation(line: 55, column: 2, scope: !4918, inlinedAt: !4925)
!4918 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4922)
!4919 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!32}
!4922 = !{!4923, !4924}
!4923 = !DILocalVariable(name: "key", scope: !4918, file: !4919, line: 44, type: !32)
!4924 = !DILocalVariable(name: "tmp", scope: !4918, file: !4919, line: 53, type: !32)
!4925 = distinct !DILocation(line: 211, column: 8, scope: !4912)
!4926 = !{i64 1322970}
!4927 = !DILocation(line: 0, scope: !4918, inlinedAt: !4925)
!4928 = !DILocation(line: 219, column: 17, scope: !4912)
!4929 = !DILocation(line: 220, column: 17, scope: !4912)
!4930 = !DILocation(line: 65, column: 16, scope: !4931, inlinedAt: !4934)
!4931 = distinct !DISubprogram(name: "clock_init", scope: !177, file: !177, line: 45, type: !873, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4932)
!4932 = !{!4933}
!4933 = !DILocalVariable(name: "reg_val", scope: !4931, file: !177, line: 47, type: !121)
!4934 = distinct !DILocation(line: 223, column: 2, scope: !4912)
!4935 = !DILocation(line: 78, column: 2, scope: !4931, inlinedAt: !4934)
!4936 = !DILocation(line: 78, column: 16, scope: !4931, inlinedAt: !4934)
!4937 = !DILocation(line: 78, column: 23, scope: !4931, inlinedAt: !4934)
!4938 = !DILocation(line: 78, column: 9, scope: !4931, inlinedAt: !4934)
!4939 = distinct !{!4939, !4935, !4940}
!4940 = !DILocation(line: 80, column: 2, scope: !4931, inlinedAt: !4934)
!4941 = !DILocation(line: 83, column: 16, scope: !4931, inlinedAt: !4934)
!4942 = !DILocation(line: 91, column: 2, scope: !4931, inlinedAt: !4934)
!4943 = !DILocation(line: 91, column: 16, scope: !4931, inlinedAt: !4934)
!4944 = !DILocation(line: 91, column: 23, scope: !4931, inlinedAt: !4934)
!4945 = !DILocation(line: 91, column: 9, scope: !4931, inlinedAt: !4934)
!4946 = distinct !{!4946, !4942, !4947}
!4947 = !DILocation(line: 93, column: 2, scope: !4931, inlinedAt: !4934)
!4948 = !DILocation(line: 96, column: 16, scope: !4931, inlinedAt: !4934)
!4949 = !DILocation(line: 102, column: 2, scope: !4931, inlinedAt: !4934)
!4950 = !DILocation(line: 102, column: 14, scope: !4931, inlinedAt: !4934)
!4951 = !DILocation(line: 102, column: 21, scope: !4931, inlinedAt: !4934)
!4952 = distinct !{!4952, !4949, !4953}
!4953 = !DILocation(line: 104, column: 2, scope: !4931, inlinedAt: !4934)
!4954 = !DILocation(line: 143, column: 17, scope: !4931, inlinedAt: !4934)
!4955 = !DILocation(line: 143, column: 26, scope: !4931, inlinedAt: !4934)
!4956 = !DILocation(line: 0, scope: !4931, inlinedAt: !4934)
!4957 = !DILocation(line: 144, column: 26, scope: !4931, inlinedAt: !4934)
!4958 = !DILocation(line: 144, column: 16, scope: !4931, inlinedAt: !4934)
!4959 = !DILocation(line: 147, column: 2, scope: !4931, inlinedAt: !4934)
!4960 = !DILocation(line: 147, column: 16, scope: !4931, inlinedAt: !4934)
!4961 = !DILocation(line: 147, column: 23, scope: !4931, inlinedAt: !4934)
!4962 = !DILocation(line: 147, column: 9, scope: !4931, inlinedAt: !4934)
!4963 = distinct !{!4963, !4959, !4964}
!4964 = !DILocation(line: 149, column: 2, scope: !4931, inlinedAt: !4934)
!4965 = !DILocation(line: 152, column: 18, scope: !4931, inlinedAt: !4934)
!4966 = !DILocation(line: 164, column: 2, scope: !4931, inlinedAt: !4934)
!4967 = !DILocation(line: 164, column: 16, scope: !4931, inlinedAt: !4934)
!4968 = !DILocation(line: 164, column: 23, scope: !4931, inlinedAt: !4934)
!4969 = !DILocation(line: 164, column: 9, scope: !4931, inlinedAt: !4934)
!4970 = distinct !{!4970, !4966, !4971}
!4971 = !DILocation(line: 166, column: 2, scope: !4931, inlinedAt: !4934)
!4972 = !DILocation(line: 179, column: 17, scope: !4931, inlinedAt: !4934)
!4973 = !DILocation(line: 179, column: 26, scope: !4931, inlinedAt: !4934)
!4974 = !DILocation(line: 180, column: 16, scope: !4931, inlinedAt: !4934)
!4975 = !DILocation(line: 183, column: 2, scope: !4931, inlinedAt: !4934)
!4976 = !DILocation(line: 183, column: 16, scope: !4931, inlinedAt: !4934)
!4977 = !DILocation(line: 183, column: 23, scope: !4931, inlinedAt: !4934)
!4978 = !DILocation(line: 183, column: 9, scope: !4931, inlinedAt: !4934)
!4979 = distinct !{!4979, !4975, !4980}
!4980 = !DILocation(line: 185, column: 2, scope: !4931, inlinedAt: !4934)
!4981 = !DILocation(line: 188, column: 17, scope: !4931, inlinedAt: !4934)
!4982 = !DILocation(line: 188, column: 26, scope: !4931, inlinedAt: !4934)
!4983 = !DILocation(line: 189, column: 26, scope: !4931, inlinedAt: !4934)
!4984 = !DILocation(line: 189, column: 16, scope: !4931, inlinedAt: !4934)
!4985 = !DILocation(line: 192, column: 2, scope: !4931, inlinedAt: !4934)
!4986 = !DILocation(line: 192, column: 16, scope: !4931, inlinedAt: !4934)
!4987 = !DILocation(line: 192, column: 23, scope: !4931, inlinedAt: !4934)
!4988 = !DILocation(line: 192, column: 9, scope: !4931, inlinedAt: !4934)
!4989 = distinct !{!4989, !4985, !4990}
!4990 = !DILocation(line: 194, column: 2, scope: !4931, inlinedAt: !4934)
!4991 = !DILocalVariable(name: "key", arg: 1, scope: !4992, file: !4919, line: 84, type: !32)
!4992 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4995)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{null, !32}
!4995 = !{!4991}
!4996 = !DILocation(line: 0, scope: !4992, inlinedAt: !4997)
!4997 = distinct !DILocation(line: 230, column: 2, scope: !4912)
!4998 = !DILocation(line: 95, column: 2, scope: !4992, inlinedAt: !4997)
!4999 = !{i64 1323787}
!5000 = !DILocation(line: 232, column: 2, scope: !4912)
!5001 = distinct !DISubprogram(name: "soc_pmc_peripheral_enable", scope: !5002, file: !5002, line: 19, type: !5003, scopeLine: 20, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2007, retainedNodes: !5005)
!5002 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/common/soc_pmc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5003 = !DISubroutineType(types: !5004)
!5004 = !{null, !121}
!5005 = !{!5006}
!5006 = !DILocalVariable(name: "id", arg: 1, scope: !5001, file: !5002, line: 19, type: !121)
!5007 = !DILocation(line: 0, scope: !5001)
!5008 = !DILocation(line: 23, column: 9, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5001, file: !5002, line: 23, column: 6)
!5010 = !DILocation(line: 23, column: 6, scope: !5001)
!5011 = !DILocation(line: 24, column: 20, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5009, file: !5002, line: 23, column: 15)
!5013 = !DILocation(line: 24, column: 18, scope: !5012)
!5014 = !DILocation(line: 26, column: 2, scope: !5012)
!5015 = !DILocation(line: 26, column: 16, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5009, file: !5002, line: 26, column: 13)
!5017 = !DILocation(line: 26, column: 13, scope: !5009)
!5018 = !DILocation(line: 27, column: 20, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !5002, line: 26, column: 22)
!5020 = !DILocation(line: 27, column: 18, scope: !5019)
!5021 = !DILocation(line: 33, column: 2, scope: !5019)
!5022 = !DILocation(line: 34, column: 1, scope: !5001)
!5023 = distinct !DISubprogram(name: "soc_pmc_peripheral_disable", scope: !5002, file: !5002, line: 36, type: !5003, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2007, retainedNodes: !5024)
!5024 = !{!5025}
!5025 = !DILocalVariable(name: "id", arg: 1, scope: !5023, file: !5002, line: 36, type: !121)
!5026 = !DILocation(line: 0, scope: !5023)
!5027 = !DILocation(line: 40, column: 9, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5023, file: !5002, line: 40, column: 6)
!5029 = !DILocation(line: 40, column: 6, scope: !5023)
!5030 = !DILocation(line: 43, column: 16, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !5002, line: 43, column: 13)
!5032 = !DILocation(line: 43, column: 13, scope: !5028)
!5033 = !DILocation(line: 44, column: 20, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !5002, line: 43, column: 22)
!5035 = !DILocation(line: 50, column: 2, scope: !5034)
!5036 = !DILocation(line: 0, scope: !5028)
!5037 = !DILocation(line: 51, column: 1, scope: !5023)
!5038 = distinct !DISubprogram(name: "soc_pmc_peripheral_is_enabled", scope: !5002, file: !5002, line: 53, type: !5039, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2007, retainedNodes: !5041)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!121, !121}
!5041 = !{!5042}
!5042 = !DILocalVariable(name: "id", arg: 1, scope: !5038, file: !5002, line: 53, type: !121)
!5043 = !DILocation(line: 0, scope: !5038)
!5044 = !DILocation(line: 57, column: 9, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5038, file: !5002, line: 57, column: 6)
!5046 = !DILocation(line: 57, column: 6, scope: !5038)
!5047 = !DILocation(line: 58, column: 16, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5045, file: !5002, line: 57, column: 15)
!5049 = !DILocation(line: 58, column: 28, scope: !5048)
!5050 = !DILocation(line: 58, column: 26, scope: !5048)
!5051 = !DILocation(line: 58, column: 37, scope: !5048)
!5052 = !DILocation(line: 58, column: 3, scope: !5048)
!5053 = !DILocation(line: 60, column: 16, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5045, file: !5002, line: 60, column: 13)
!5055 = !DILocation(line: 60, column: 13, scope: !5045)
!5056 = !DILocation(line: 61, column: 16, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5054, file: !5002, line: 60, column: 22)
!5058 = !DILocation(line: 61, column: 28, scope: !5057)
!5059 = !DILocation(line: 61, column: 26, scope: !5057)
!5060 = !DILocation(line: 61, column: 44, scope: !5057)
!5061 = !DILocation(line: 61, column: 3, scope: !5057)
!5062 = !DILocation(line: 70, column: 1, scope: !5038)
!5063 = distinct !DISubprogram(name: "soc_gpio_configure", scope: !5064, file: !5064, line: 116, type: !5065, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !5134)
!5064 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/common/soc_gpio.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !5067}
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 32)
!5068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5069)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_gpio_pin", file: !5070, line: 85, size: 128, elements: !5071)
!5070 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/sam3x/../common/soc_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5071 = !{!5072, !5073, !5132, !5133}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5069, file: !5070, line: 86, baseType: !121, size: 32)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5069, file: !5070, line: 90, baseType: !5074, size: 32, offset: 32)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 32)
!5075 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pio", file: !1287, line: 96, baseType: !5076)
!5076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1287, line: 41, size: 1888, elements: !5077)
!5077 = !{!5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PER", scope: !5076, file: !1287, line: 42, baseType: !120, size: 32)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDR", scope: !5076, file: !1287, line: 43, baseType: !120, size: 32, offset: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PSR", scope: !5076, file: !1287, line: 44, baseType: !124, size: 32, offset: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !5076, file: !1287, line: 45, baseType: !135, size: 32, offset: 96)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OER", scope: !5076, file: !1287, line: 46, baseType: !120, size: 32, offset: 128)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODR", scope: !5076, file: !1287, line: 47, baseType: !120, size: 32, offset: 160)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OSR", scope: !5076, file: !1287, line: 48, baseType: !124, size: 32, offset: 192)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !5076, file: !1287, line: 49, baseType: !135, size: 32, offset: 224)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFER", scope: !5076, file: !1287, line: 50, baseType: !120, size: 32, offset: 256)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDR", scope: !5076, file: !1287, line: 51, baseType: !120, size: 32, offset: 288)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFSR", scope: !5076, file: !1287, line: 52, baseType: !124, size: 32, offset: 320)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !5076, file: !1287, line: 53, baseType: !135, size: 32, offset: 352)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SODR", scope: !5076, file: !1287, line: 54, baseType: !120, size: 32, offset: 384)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_CODR", scope: !5076, file: !1287, line: 55, baseType: !120, size: 32, offset: 416)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODSR", scope: !5076, file: !1287, line: 56, baseType: !120, size: 32, offset: 448)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDSR", scope: !5076, file: !1287, line: 57, baseType: !124, size: 32, offset: 480)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IER", scope: !5076, file: !1287, line: 58, baseType: !120, size: 32, offset: 512)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IDR", scope: !5076, file: !1287, line: 59, baseType: !120, size: 32, offset: 544)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IMR", scope: !5076, file: !1287, line: 60, baseType: !124, size: 32, offset: 576)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ISR", scope: !5076, file: !1287, line: 61, baseType: !124, size: 32, offset: 608)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDER", scope: !5076, file: !1287, line: 62, baseType: !120, size: 32, offset: 640)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDDR", scope: !5076, file: !1287, line: 63, baseType: !120, size: 32, offset: 672)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDSR", scope: !5076, file: !1287, line: 64, baseType: !124, size: 32, offset: 704)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !5076, file: !1287, line: 65, baseType: !135, size: 32, offset: 736)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUDR", scope: !5076, file: !1287, line: 66, baseType: !120, size: 32, offset: 768)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUER", scope: !5076, file: !1287, line: 67, baseType: !120, size: 32, offset: 800)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUSR", scope: !5076, file: !1287, line: 68, baseType: !124, size: 32, offset: 832)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !5076, file: !1287, line: 69, baseType: !135, size: 32, offset: 864)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ABSR", scope: !5076, file: !1287, line: 70, baseType: !120, size: 32, offset: 896)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !5076, file: !1287, line: 71, baseType: !1320, size: 96, offset: 928)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCIFSR", scope: !5076, file: !1287, line: 72, baseType: !120, size: 32, offset: 1024)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_DIFSR", scope: !5076, file: !1287, line: 73, baseType: !120, size: 32, offset: 1056)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDGSR", scope: !5076, file: !1287, line: 74, baseType: !124, size: 32, offset: 1088)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCDR", scope: !5076, file: !1287, line: 75, baseType: !120, size: 32, offset: 1120)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !5076, file: !1287, line: 76, baseType: !1237, size: 128, offset: 1152)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWER", scope: !5076, file: !1287, line: 77, baseType: !120, size: 32, offset: 1280)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWDR", scope: !5076, file: !1287, line: 78, baseType: !120, size: 32, offset: 1312)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWSR", scope: !5076, file: !1287, line: 79, baseType: !124, size: 32, offset: 1344)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !5076, file: !1287, line: 80, baseType: !135, size: 32, offset: 1376)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMER", scope: !5076, file: !1287, line: 81, baseType: !120, size: 32, offset: 1408)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMDR", scope: !5076, file: !1287, line: 82, baseType: !120, size: 32, offset: 1440)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMMR", scope: !5076, file: !1287, line: 83, baseType: !124, size: 32, offset: 1472)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved9", scope: !5076, file: !1287, line: 84, baseType: !135, size: 32, offset: 1504)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ESR", scope: !5076, file: !1287, line: 85, baseType: !120, size: 32, offset: 1536)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LSR", scope: !5076, file: !1287, line: 86, baseType: !120, size: 32, offset: 1568)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ELSR", scope: !5076, file: !1287, line: 87, baseType: !124, size: 32, offset: 1600)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved10", scope: !5076, file: !1287, line: 88, baseType: !135, size: 32, offset: 1632)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FELLSR", scope: !5076, file: !1287, line: 89, baseType: !120, size: 32, offset: 1664)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_REHLSR", scope: !5076, file: !1287, line: 90, baseType: !120, size: 32, offset: 1696)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FRLHSR", scope: !5076, file: !1287, line: 91, baseType: !124, size: 32, offset: 1728)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved11", scope: !5076, file: !1287, line: 92, baseType: !135, size: 32, offset: 1760)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LOCKSR", scope: !5076, file: !1287, line: 93, baseType: !124, size: 32, offset: 1792)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPMR", scope: !5076, file: !1287, line: 94, baseType: !120, size: 32, offset: 1824)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPSR", scope: !5076, file: !1287, line: 95, baseType: !124, size: 32, offset: 1856)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !5069, file: !5070, line: 92, baseType: !202, size: 8, offset: 64)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5069, file: !5070, line: 93, baseType: !121, size: 32, offset: 96)
!5134 = !{!5135, !5136, !5137, !5138, !5139, !5140}
!5135 = !DILocalVariable(name: "pin", arg: 1, scope: !5063, file: !5064, line: 116, type: !5067)
!5136 = !DILocalVariable(name: "mask", scope: !5063, file: !5064, line: 118, type: !121)
!5137 = !DILocalVariable(name: "pio", scope: !5063, file: !5064, line: 119, type: !5074)
!5138 = !DILocalVariable(name: "periph_id", scope: !5063, file: !5064, line: 120, type: !202)
!5139 = !DILocalVariable(name: "flags", scope: !5063, file: !5064, line: 121, type: !121)
!5140 = !DILocalVariable(name: "type", scope: !5063, file: !5064, line: 122, type: !121)
!5141 = !DILocation(line: 0, scope: !5063)
!5142 = !DILocation(line: 118, column: 23, scope: !5063)
!5143 = !DILocation(line: 119, column: 18, scope: !5063)
!5144 = !DILocation(line: 120, column: 27, scope: !5063)
!5145 = !DILocation(line: 121, column: 24, scope: !5063)
!5146 = !DILocation(line: 122, column: 29, scope: !5063)
!5147 = !DILocation(line: 125, column: 2, scope: !5063)
!5148 = !DILocation(line: 127, column: 2, scope: !5063)
!5149 = !DILocation(line: 133, column: 20, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5063, file: !5064, line: 127, column: 16)
!5151 = !DILocation(line: 133, column: 8, scope: !5150)
!5152 = !DILocation(line: 133, column: 17, scope: !5150)
!5153 = !DILocation(line: 136, column: 8, scope: !5150)
!5154 = !DILocation(line: 137, column: 3, scope: !5150)
!5155 = !DILocation(line: 144, column: 8, scope: !5150)
!5156 = !DILocation(line: 144, column: 17, scope: !5150)
!5157 = !DILocation(line: 147, column: 8, scope: !5150)
!5158 = !DILocation(line: 148, column: 3, scope: !5150)
!5159 = !DILocation(line: 168, column: 29, scope: !5150)
!5160 = !DILocation(line: 168, column: 3, scope: !5150)
!5161 = !DILocation(line: 170, column: 3, scope: !5150)
!5162 = !DILocation(line: 172, column: 8, scope: !5150)
!5163 = !DILocation(line: 172, column: 16, scope: !5150)
!5164 = !DILocation(line: 173, column: 8, scope: !5150)
!5165 = !DILocation(line: 174, column: 3, scope: !5150)
!5166 = !DILocation(line: 179, column: 12, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5150, file: !5064, line: 179, column: 7)
!5168 = !DILocation(line: 179, column: 7, scope: !5150)
!5169 = !DILocation(line: 0, scope: !5167)
!5170 = !DILocation(line: 186, column: 3, scope: !5150)
!5171 = !DILocation(line: 188, column: 8, scope: !5150)
!5172 = !DILocation(line: 188, column: 16, scope: !5150)
!5173 = !DILocation(line: 189, column: 8, scope: !5150)
!5174 = !DILocation(line: 190, column: 3, scope: !5150)
!5175 = !DILocation(line: 0, scope: !5150)
!5176 = !DILocation(line: 196, column: 1, scope: !5063)
!5177 = distinct !DISubprogram(name: "configure_common_attr", scope: !5064, file: !5064, line: 24, type: !5178, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !5180)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{null, !5074, !121, !121}
!5180 = !{!5181, !5182, !5183}
!5181 = !DILocalVariable(name: "pio", arg: 1, scope: !5177, file: !5064, line: 24, type: !5074)
!5182 = !DILocalVariable(name: "mask", arg: 2, scope: !5177, file: !5064, line: 24, type: !121)
!5183 = !DILocalVariable(name: "flags", arg: 3, scope: !5177, file: !5064, line: 24, type: !121)
!5184 = !DILocation(line: 0, scope: !5177)
!5185 = !DILocation(line: 27, column: 7, scope: !5177)
!5186 = !DILocation(line: 27, column: 15, scope: !5177)
!5187 = !DILocation(line: 30, column: 12, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5177, file: !5064, line: 30, column: 6)
!5189 = !DILocation(line: 30, column: 6, scope: !5177)
!5190 = !DILocation(line: 0, scope: !5188)
!5191 = !DILocation(line: 47, column: 12, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5177, file: !5064, line: 47, column: 6)
!5193 = !DILocation(line: 47, column: 6, scope: !5177)
!5194 = !DILocation(line: 0, scope: !5192)
!5195 = !DILocation(line: 52, column: 1, scope: !5177)
!5196 = distinct !DISubprogram(name: "configure_input_attr", scope: !5064, file: !5064, line: 54, type: !5178, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !5197)
!5197 = !{!5198, !5199, !5200}
!5198 = !DILocalVariable(name: "pio", arg: 1, scope: !5196, file: !5064, line: 54, type: !5074)
!5199 = !DILocalVariable(name: "mask", arg: 2, scope: !5196, file: !5064, line: 54, type: !121)
!5200 = !DILocalVariable(name: "flags", arg: 3, scope: !5196, file: !5064, line: 54, type: !121)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 57, column: 13, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5196, file: !5064, line: 57, column: 6)
!5204 = !DILocation(line: 57, column: 6, scope: !5196)
!5205 = !DILocation(line: 63, column: 9, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5207, file: !5064, line: 58, column: 73)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !5064, line: 58, column: 7)
!5208 = distinct !DILexicalBlock(scope: !5203, file: !5064, line: 57, column: 47)
!5209 = !DILocation(line: 65, column: 3, scope: !5206)
!5210 = !DILocation(line: 70, column: 9, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !5064, line: 65, column: 10)
!5212 = !DILocation(line: 0, scope: !5207)
!5213 = !DILocation(line: 73, column: 8, scope: !5208)
!5214 = !DILocation(line: 74, column: 2, scope: !5208)
!5215 = !DILocation(line: 75, column: 8, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5203, file: !5064, line: 74, column: 9)
!5217 = !DILocation(line: 0, scope: !5203)
!5218 = !DILocation(line: 79, column: 12, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5196, file: !5064, line: 79, column: 6)
!5220 = !DILocation(line: 79, column: 6, scope: !5196)
!5221 = !DILocation(line: 80, column: 7, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !5064, line: 79, column: 35)
!5223 = !DILocation(line: 82, column: 9, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !5064, line: 80, column: 74)
!5225 = distinct !DILexicalBlock(scope: !5222, file: !5064, line: 80, column: 7)
!5226 = !DILocation(line: 83, column: 3, scope: !5224)
!5227 = !DILocation(line: 87, column: 10, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !5064, line: 85, column: 68)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !5064, line: 85, column: 8)
!5230 = distinct !DILexicalBlock(scope: !5225, file: !5064, line: 83, column: 10)
!5231 = !DILocation(line: 88, column: 4, scope: !5228)
!5232 = !DILocation(line: 90, column: 10, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !5064, line: 88, column: 11)
!5234 = !DILocation(line: 0, scope: !5229)
!5235 = !DILocation(line: 93, column: 14, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5230, file: !5064, line: 93, column: 8)
!5237 = !DILocation(line: 93, column: 8, scope: !5230)
!5238 = !DILocation(line: 0, scope: !5236)
!5239 = !DILocation(line: 99, column: 9, scope: !5230)
!5240 = !DILocation(line: 0, scope: !5225)
!5241 = !DILocation(line: 102, column: 8, scope: !5222)
!5242 = !DILocation(line: 102, column: 16, scope: !5222)
!5243 = !DILocation(line: 103, column: 2, scope: !5222)
!5244 = !DILocation(line: 108, column: 1, scope: !5196)
!5245 = distinct !DISubprogram(name: "configure_output_attr", scope: !5064, file: !5064, line: 110, type: !5178, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !5246)
!5246 = !{!5247, !5248, !5249}
!5247 = !DILocalVariable(name: "pio", arg: 1, scope: !5245, file: !5064, line: 110, type: !5074)
!5248 = !DILocalVariable(name: "mask", arg: 2, scope: !5245, file: !5064, line: 110, type: !121)
!5249 = !DILocalVariable(name: "flags", arg: 3, scope: !5245, file: !5064, line: 110, type: !121)
!5250 = !DILocation(line: 0, scope: !5245)
!5251 = !DILocation(line: 113, column: 7, scope: !5245)
!5252 = !DILocation(line: 113, column: 16, scope: !5245)
!5253 = !DILocation(line: 114, column: 1, scope: !5245)
!5254 = distinct !DISubprogram(name: "soc_gpio_list_configure", scope: !5064, file: !5064, line: 198, type: !5255, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2047, retainedNodes: !5257)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{null, !5067, !32}
!5257 = !{!5258, !5259, !5260}
!5258 = !DILocalVariable(name: "pins", arg: 1, scope: !5254, file: !5064, line: 198, type: !5067)
!5259 = !DILocalVariable(name: "size", arg: 2, scope: !5254, file: !5064, line: 199, type: !32)
!5260 = !DILocalVariable(name: "i", scope: !5261, file: !5064, line: 201, type: !103)
!5261 = distinct !DILexicalBlock(scope: !5254, file: !5064, line: 201, column: 2)
!5262 = !DILocation(line: 0, scope: !5254)
!5263 = !DILocation(line: 0, scope: !5261)
!5264 = !DILocation(line: 201, column: 20, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5261, file: !5064, line: 201, column: 2)
!5266 = !DILocation(line: 201, column: 2, scope: !5261)
!5267 = !DILocation(line: 204, column: 1, scope: !5254)
!5268 = !DILocation(line: 202, column: 23, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5265, file: !5064, line: 201, column: 33)
!5270 = !DILocation(line: 202, column: 3, scope: !5269)
!5271 = !DILocation(line: 201, column: 29, scope: !5265)
!5272 = distinct !{!5272, !5266, !5273}
!5273 = !DILocation(line: 203, column: 2, scope: !5261)
!5274 = !DILocation(line: 25, column: 6, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !360, file: !313, line: 25, column: 6)
!5276 = !DILocation(line: 25, column: 10, scope: !5275)
!5277 = !DILocation(line: 25, column: 6, scope: !360)
!5278 = !DILocation(line: 26, column: 3, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5280, file: !313, line: 26, column: 3)
!5280 = distinct !DILexicalBlock(scope: !5275, file: !313, line: 25, column: 19)
!5281 = !DILocation(line: 27, column: 2, scope: !5280)
!5282 = !DILocation(line: 29, column: 8, scope: !366)
!5283 = !DILocation(line: 0, scope: !366)
!5284 = !DILocation(line: 29, column: 6, scope: !360)
!5285 = !DILocation(line: 30, column: 14, scope: !360)
!5286 = !DILocation(line: 30, column: 2, scope: !360)
!5287 = distinct !DISubprogram(name: "k_queue_get", scope: !2876, file: !2876, line: 649, type: !5288, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !216, retainedNodes: !5295)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{!102, !5290, !5291}
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 32)
!5291 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !5292)
!5292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !5293)
!5293 = !{!5294}
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5292, file: !220, line: 66, baseType: !219, size: 64)
!5295 = !{!5296, !5297}
!5296 = !DILocalVariable(name: "queue", arg: 1, scope: !5287, file: !2876, line: 649, type: !5290)
!5297 = !DILocalVariable(name: "timeout", arg: 2, scope: !5287, file: !2876, line: 649, type: !5291)
!5298 = !DILocation(line: 0, scope: !5287)
!5299 = !DILocation(line: 658, column: 2, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5287, file: !2876, line: 658, column: 2)
!5301 = !{i64 2151087615}
!5302 = !DILocation(line: 659, column: 9, scope: !5287)
!5303 = !DILocation(line: 659, column: 2, scope: !5287)
!5304 = distinct !DISubprogram(name: "console_getline_init", scope: !313, file: !313, line: 33, type: !873, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !216, retainedNodes: !5305)
!5305 = !{!5306}
!5306 = !DILocalVariable(name: "i", scope: !5304, file: !313, line: 35, type: !103)
!5307 = !DILocation(line: 0, scope: !5304)
!5308 = !DILocation(line: 38, column: 3, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !313, line: 38, column: 3)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !313, line: 37, column: 46)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !313, line: 37, column: 2)
!5312 = distinct !DILexicalBlock(scope: !5304, file: !313, line: 37, column: 2)
!5313 = !DILocation(line: 45, column: 2, scope: !5304)
!5314 = !DILocation(line: 46, column: 1, scope: !5304)
!5315 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5316, file: !5316, line: 57, type: !5317, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !5363)
!5316 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5317 = !DISubroutineType(types: !5318)
!5318 = !{null, !32, !5319}
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 32)
!5320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5321)
!5321 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2170, line: 141, baseType: !5322)
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2170, line: 97, size: 256, elements: !5323)
!5323 = !{!5324}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5322, file: !2170, line: 107, baseType: !5325, size: 256)
!5325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2170, line: 98, size: 256, elements: !5326)
!5326 = !{!5327, !5332, !5337, !5342, !5347, !5352, !5357, !5362}
!5327 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 99, baseType: !5328, size: 32)
!5328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 99, size: 32, elements: !5329)
!5329 = !{!5330, !5331}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5328, file: !2170, line: 99, baseType: !121, size: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5328, file: !2170, line: 99, baseType: !121, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 100, baseType: !5333, size: 32, offset: 32)
!5333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 100, size: 32, elements: !5334)
!5334 = !{!5335, !5336}
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5333, file: !2170, line: 100, baseType: !121, size: 32)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5333, file: !2170, line: 100, baseType: !121, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 101, baseType: !5338, size: 32, offset: 64)
!5338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 101, size: 32, elements: !5339)
!5339 = !{!5340, !5341}
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5338, file: !2170, line: 101, baseType: !121, size: 32)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5338, file: !2170, line: 101, baseType: !121, size: 32)
!5342 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 102, baseType: !5343, size: 32, offset: 96)
!5343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 102, size: 32, elements: !5344)
!5344 = !{!5345, !5346}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5343, file: !2170, line: 102, baseType: !121, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5343, file: !2170, line: 102, baseType: !121, size: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 103, baseType: !5348, size: 32, offset: 128)
!5348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 103, size: 32, elements: !5349)
!5349 = !{!5350, !5351}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5348, file: !2170, line: 103, baseType: !121, size: 32)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5348, file: !2170, line: 103, baseType: !121, size: 32)
!5352 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 104, baseType: !5353, size: 32, offset: 160)
!5353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 104, size: 32, elements: !5354)
!5354 = !{!5355, !5356}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5353, file: !2170, line: 104, baseType: !121, size: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5353, file: !2170, line: 104, baseType: !121, size: 32)
!5357 = !DIDerivedType(tag: DW_TAG_member, scope: !5325, file: !2170, line: 105, baseType: !5358, size: 32, offset: 192)
!5358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5325, file: !2170, line: 105, size: 32, elements: !5359)
!5359 = !{!5360, !5361}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5358, file: !2170, line: 105, baseType: !121, size: 32)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5358, file: !2170, line: 105, baseType: !121, size: 32)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5325, file: !2170, line: 106, baseType: !121, size: 32, offset: 224)
!5363 = !{!5364, !5365}
!5364 = !DILocalVariable(name: "reason", arg: 1, scope: !5315, file: !5316, line: 57, type: !32)
!5365 = !DILocalVariable(name: "esf", arg: 2, scope: !5315, file: !5316, line: 57, type: !5319)
!5366 = !DILocation(line: 0, scope: !5315)
!5367 = !DILocation(line: 63, column: 2, scope: !5315)
!5368 = !DILocation(line: 64, column: 1, scope: !5315)
!5369 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5316, file: !5316, line: 82, type: !5370, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !5385)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{null, !5319, !5372}
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5373, size: 32)
!5373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !465, line: 37, baseType: !5374)
!5374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !5375)
!5375 = !{!5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5374, file: !465, line: 26, baseType: !121, size: 32)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5374, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5374, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5374, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5374, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5374, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5374, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5374, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5374, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!5385 = !{!5386, !5387, !5388}
!5386 = !DILocalVariable(name: "esf", arg: 1, scope: !5369, file: !5316, line: 82, type: !5319)
!5387 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5369, file: !5316, line: 82, type: !5372)
!5388 = !DILocalVariable(name: "reason", scope: !5369, file: !5316, line: 88, type: !32)
!5389 = !DILocation(line: 0, scope: !5369)
!5390 = !DILocation(line: 88, column: 35, scope: !5369)
!5391 = !DILocation(line: 108, column: 2, scope: !5369)
!5392 = !DILocation(line: 131, column: 1, scope: !5369)
!5393 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5316, file: !5316, line: 133, type: !5394, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !5396)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{null, !102}
!5396 = !{!5397, !5398, !5399}
!5397 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5393, file: !5316, line: 133, type: !102)
!5398 = !DILocalVariable(name: "ssf_contents", scope: !5393, file: !5316, line: 135, type: !1966)
!5399 = !DILocalVariable(name: "oops_esf", scope: !5393, file: !5316, line: 136, type: !5321)
!5400 = !DILocation(line: 0, scope: !5393)
!5401 = !DILocation(line: 136, column: 2, scope: !5393)
!5402 = !DILocation(line: 136, column: 15, scope: !5393)
!5403 = !DILocation(line: 139, column: 22, scope: !5393)
!5404 = !DILocation(line: 139, column: 17, scope: !5393)
!5405 = !DILocation(line: 139, column: 20, scope: !5393)
!5406 = !DILocation(line: 141, column: 2, scope: !5393)
!5407 = !DILocation(line: 142, column: 2, scope: !5393)
!5408 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5409, file: !5409, line: 40, type: !4993, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5410)
!5409 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5410 = !{!5411}
!5411 = !DILocalVariable(name: "irq", arg: 1, scope: !5408, file: !5409, line: 40, type: !32)
!5412 = !DILocation(line: 0, scope: !5408)
!5413 = !DILocation(line: 42, column: 2, scope: !5408)
!5414 = !DILocation(line: 43, column: 1, scope: !5408)
!5415 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !532, file: !532, line: 1508, type: !5416, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5418)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{null, !2064}
!5418 = !{!5419}
!5419 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5415, file: !532, line: 1508, type: !2064)
!5420 = !DILocation(line: 0, scope: !5415)
!5421 = !DILocation(line: 1510, column: 23, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5415, file: !532, line: 1510, column: 7)
!5423 = !DILocation(line: 1510, column: 7, scope: !5415)
!5424 = !DILocation(line: 1512, column: 5, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5422, file: !532, line: 1511, column: 3)
!5426 = !{i64 2149085112}
!5427 = !DILocation(line: 1513, column: 81, scope: !5425)
!5428 = !DILocation(line: 1513, column: 60, scope: !5425)
!5429 = !DILocation(line: 1513, column: 34, scope: !5425)
!5430 = !DILocation(line: 1513, column: 5, scope: !5425)
!5431 = !DILocation(line: 1513, column: 43, scope: !5425)
!5432 = !DILocation(line: 1514, column: 5, scope: !5425)
!5433 = !{i64 2149085226}
!5434 = !DILocation(line: 1515, column: 3, scope: !5425)
!5435 = !DILocation(line: 1516, column: 1, scope: !5415)
!5436 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5409, file: !5409, line: 45, type: !4993, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5437)
!5437 = !{!5438}
!5438 = !DILocalVariable(name: "irq", arg: 1, scope: !5436, file: !5409, line: 45, type: !32)
!5439 = !DILocation(line: 0, scope: !5436)
!5440 = !DILocation(line: 47, column: 2, scope: !5436)
!5441 = !DILocation(line: 48, column: 1, scope: !5436)
!5442 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !532, file: !532, line: 1546, type: !5416, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5443)
!5443 = !{!5444}
!5444 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5442, file: !532, line: 1546, type: !2064)
!5445 = !DILocation(line: 0, scope: !5442)
!5446 = !DILocation(line: 1548, column: 23, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5442, file: !532, line: 1548, column: 7)
!5448 = !DILocation(line: 1548, column: 7, scope: !5442)
!5449 = !DILocation(line: 1550, column: 81, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5447, file: !532, line: 1549, column: 3)
!5451 = !DILocation(line: 1550, column: 60, scope: !5450)
!5452 = !DILocation(line: 1550, column: 34, scope: !5450)
!5453 = !DILocation(line: 1550, column: 5, scope: !5450)
!5454 = !DILocation(line: 1550, column: 43, scope: !5450)
!5455 = !DILocation(line: 271, column: 3, scope: !5456, inlinedAt: !5458)
!5456 = distinct !DISubprogram(name: "__DSB", scope: !5457, file: !5457, line: 269, type: !873, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !336)
!5457 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5458 = distinct !DILocation(line: 1551, column: 5, scope: !5450)
!5459 = !{i64 1542616}
!5460 = !DILocation(line: 260, column: 3, scope: !5461, inlinedAt: !5462)
!5461 = distinct !DISubprogram(name: "__ISB", scope: !5457, file: !5457, line: 258, type: !873, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !336)
!5462 = distinct !DILocation(line: 1552, column: 5, scope: !5450)
!5463 = !{i64 1542333}
!5464 = !DILocation(line: 1553, column: 3, scope: !5450)
!5465 = !DILocation(line: 1554, column: 1, scope: !5442)
!5466 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5409, file: !5409, line: 50, type: !5467, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5469)
!5467 = !DISubroutineType(types: !5468)
!5468 = !{!103, !32}
!5469 = !{!5470}
!5470 = !DILocalVariable(name: "irq", arg: 1, scope: !5466, file: !5409, line: 50, type: !32)
!5471 = !DILocation(line: 0, scope: !5466)
!5472 = !DILocation(line: 52, column: 20, scope: !5466)
!5473 = !DILocation(line: 52, column: 9, scope: !5466)
!5474 = !DILocation(line: 52, column: 41, scope: !5466)
!5475 = !DILocation(line: 52, column: 39, scope: !5466)
!5476 = !DILocation(line: 52, column: 2, scope: !5466)
!5477 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5409, file: !5409, line: 64, type: !5478, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5480)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{null, !32, !32, !121}
!5480 = !{!5481, !5482, !5483}
!5481 = !DILocalVariable(name: "irq", arg: 1, scope: !5477, file: !5409, line: 64, type: !32)
!5482 = !DILocalVariable(name: "prio", arg: 2, scope: !5477, file: !5409, line: 64, type: !32)
!5483 = !DILocalVariable(name: "flags", arg: 3, scope: !5477, file: !5409, line: 64, type: !121)
!5484 = !DILocation(line: 0, scope: !5477)
!5485 = !DILocation(line: 83, column: 8, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !5409, line: 82, column: 9)
!5487 = distinct !DILexicalBlock(scope: !5477, file: !5409, line: 76, column: 6)
!5488 = !DILocation(line: 95, column: 2, scope: !5477)
!5489 = !DILocation(line: 96, column: 1, scope: !5477)
!5490 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !532, file: !532, line: 1638, type: !5491, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5493)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{null, !2064, !121}
!5493 = !{!5494, !5495}
!5494 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5490, file: !532, line: 1638, type: !2064)
!5495 = !DILocalVariable(name: "priority", arg: 2, scope: !5490, file: !532, line: 1638, type: !121)
!5496 = !DILocation(line: 0, scope: !5490)
!5497 = !DILocation(line: 0, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5490, file: !532, line: 1640, column: 7)
!5499 = !DILocation(line: 1640, column: 7, scope: !5490)
!5500 = !DILocation(line: 1648, column: 1, scope: !5490)
!5501 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5409, file: !5409, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2060, retainedNodes: !5502)
!5502 = !{!5503}
!5503 = !DILocalVariable(name: "unused", arg: 1, scope: !5501, file: !5409, line: 155, type: !13)
!5504 = !DILocation(line: 0, scope: !5501)
!5505 = !DILocation(line: 159, column: 2, scope: !5501)
!5506 = !DILocation(line: 160, column: 1, scope: !5501)
!5507 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5508, file: !5508, line: 87, type: !873, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2107, retainedNodes: !336)
!5508 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5509 = !DILocation(line: 89, column: 2, scope: !5507)
!5510 = !DILocation(line: 90, column: 2, scope: !5507)
!5511 = !DILocation(line: 91, column: 1, scope: !5507)
!5512 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5508, file: !5508, line: 23, type: !873, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!5513 = !DISubprogram(name: "z_arm_int_exit", scope: !5514, file: !5514, line: 153, type: !873, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!5514 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5515 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5516, file: !5516, line: 256, type: !873, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2109, retainedNodes: !336)
!5516 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5517 = !DILocation(line: 258, column: 2, scope: !5515)
!5518 = !DILocation(line: 262, column: 2, scope: !5515)
!5519 = !DILocation(line: 263, column: 2, scope: !5515)
!5520 = !DILocation(line: 267, column: 2, scope: !5515)
!5521 = !DILocation(line: 268, column: 2, scope: !5515)
!5522 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5516, file: !5516, line: 53, type: !873, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2109, retainedNodes: !336)
!5523 = !DILocation(line: 55, column: 12, scope: !5522)
!5524 = !DILocation(line: 271, column: 3, scope: !5525, inlinedAt: !5526)
!5525 = distinct !DISubprogram(name: "__DSB", scope: !5457, file: !5457, line: 269, type: !873, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2109, retainedNodes: !336)
!5526 = distinct !DILocation(line: 56, column: 2, scope: !5522)
!5527 = !{i64 1541287}
!5528 = !DILocation(line: 260, column: 3, scope: !5529, inlinedAt: !5530)
!5529 = distinct !DISubprogram(name: "__ISB", scope: !5457, file: !5457, line: 258, type: !873, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2109, retainedNodes: !336)
!5530 = distinct !DILocation(line: 57, column: 2, scope: !5522)
!5531 = !{i64 1541004}
!5532 = !DILocation(line: 58, column: 1, scope: !5522)
!5533 = distinct !DISubprogram(name: "arch_swap", scope: !5534, file: !5534, line: 33, type: !5467, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2137, retainedNodes: !5535)
!5534 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5535 = !{!5536}
!5536 = !DILocalVariable(name: "key", arg: 1, scope: !5533, file: !5534, line: 33, type: !32)
!5537 = !DILocation(line: 0, scope: !5533)
!5538 = !DILocation(line: 36, column: 2, scope: !5533)
!5539 = !DILocation(line: 36, column: 17, scope: !5533)
!5540 = !DILocation(line: 36, column: 25, scope: !5533)
!5541 = !DILocation(line: 37, column: 37, scope: !5533)
!5542 = !DILocation(line: 37, column: 17, scope: !5533)
!5543 = !DILocation(line: 37, column: 35, scope: !5533)
!5544 = !DILocation(line: 41, column: 12, scope: !5533)
!5545 = !DILocalVariable(name: "key", arg: 1, scope: !5546, file: !4919, line: 84, type: !32)
!5546 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2137, retainedNodes: !5547)
!5547 = !{!5545}
!5548 = !DILocation(line: 0, scope: !5546, inlinedAt: !5549)
!5549 = distinct !DILocation(line: 44, column: 2, scope: !5533)
!5550 = !DILocation(line: 95, column: 2, scope: !5546, inlinedAt: !5549)
!5551 = !{i64 1319962}
!5552 = !DILocation(line: 53, column: 9, scope: !5533)
!5553 = !DILocation(line: 53, column: 24, scope: !5533)
!5554 = !DILocation(line: 53, column: 2, scope: !5533)
!5555 = distinct !DISubprogram(name: "arch_new_thread", scope: !5556, file: !5556, line: 56, type: !5557, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2165, retainedNodes: !5664)
!5556 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5557 = !DISubroutineType(types: !5558)
!5558 = !{null, !5559, !5659, !363, !2754, !102, !102, !102}
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 32)
!5560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !5561)
!5561 = !{!5562, !5620, !5632, !5633, !5634, !5635, !5641, !5654}
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5560, file: !398, line: 247, baseType: !5563, size: 384)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !5564)
!5564 = !{!5565, !5589, !5596, !5597, !5598, !5607, !5608, !5609}
!5565 = !DIDerivedType(tag: DW_TAG_member, scope: !5563, file: !398, line: 60, baseType: !5566, size: 64)
!5566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5563, file: !398, line: 60, size: 64, elements: !5567)
!5567 = !{!5568, !5583}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5566, file: !398, line: 61, baseType: !5569, size: 64)
!5569 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !5570)
!5570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !5571)
!5571 = !{!5572, !5578}
!5572 = !DIDerivedType(tag: DW_TAG_member, scope: !5570, file: !344, line: 38, baseType: !5573, size: 32)
!5573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5570, file: !344, line: 38, size: 32, elements: !5574)
!5574 = !{!5575, !5577}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5573, file: !344, line: 39, baseType: !5576, size: 32)
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 32)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5573, file: !344, line: 40, baseType: !5576, size: 32)
!5578 = !DIDerivedType(tag: DW_TAG_member, scope: !5570, file: !344, line: 42, baseType: !5579, size: 32, offset: 32)
!5579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5570, file: !344, line: 42, size: 32, elements: !5580)
!5580 = !{!5581, !5582}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5579, file: !344, line: 43, baseType: !5576, size: 32)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5579, file: !344, line: 44, baseType: !5576, size: 32)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5566, file: !398, line: 62, baseType: !5584, size: 64)
!5584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !5585)
!5585 = !{!5586}
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5584, file: !423, line: 50, baseType: !5587, size: 64)
!5587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5588, size: 64, elements: !382)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 32)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5563, file: !398, line: 68, baseType: !5590, size: 32, offset: 64)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 32)
!5591 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !5592)
!5592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !5593)
!5593 = !{!5594}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5592, file: !339, line: 232, baseType: !5595, size: 64)
!5595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !5570)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5563, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5563, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!5598 = !DIDerivedType(tag: DW_TAG_member, scope: !5563, file: !398, line: 90, baseType: !5599, size: 16, offset: 112)
!5599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5563, file: !398, line: 90, size: 16, elements: !5600)
!5600 = !{!5601, !5606}
!5601 = !DIDerivedType(tag: DW_TAG_member, scope: !5599, file: !398, line: 91, baseType: !5602, size: 16)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5599, file: !398, line: 91, size: 16, elements: !5603)
!5603 = !{!5604, !5605}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5602, file: !398, line: 96, baseType: !444, size: 8)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5602, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5599, file: !398, line: 100, baseType: !448, size: 16)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5563, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5563, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5563, file: !398, line: 131, baseType: !5610, size: 192, offset: 192)
!5610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !5611)
!5611 = !{!5612, !5613, !5619}
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5610, file: !339, line: 245, baseType: !5569, size: 64)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5610, file: !339, line: 246, baseType: !5614, size: 32, offset: 64)
!5614 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !5615)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 32)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{null, !5618}
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5610, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5560, file: !398, line: 250, baseType: !5621, size: 288, offset: 384)
!5621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !5622)
!5622 = !{!5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5621, file: !465, line: 26, baseType: !121, size: 32)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5621, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5621, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5621, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5621, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5621, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5621, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5621, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5621, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5560, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5560, file: !398, line: 256, baseType: !5591, size: 64, offset: 704)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5560, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5560, file: !398, line: 300, baseType: !5636, size: 96, offset: 800)
!5636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !5637)
!5637 = !{!5638, !5639, !5640}
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5636, file: !398, line: 153, baseType: !22, size: 32)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5636, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5636, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5560, file: !398, line: 325, baseType: !5642, size: 32, offset: 896)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 32)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !5644)
!5644 = !{!5645, !5651, !5652}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5643, file: !315, line: 5074, baseType: !5646, size: 96)
!5646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !5647)
!5647 = !{!5648, !5649, !5650}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5646, file: !491, line: 57, baseType: !494, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5646, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5646, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5643, file: !315, line: 5075, baseType: !5591, size: 64, offset: 96)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5643, file: !315, line: 5076, baseType: !5653, offset: 160)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5560, file: !398, line: 343, baseType: !5655, size: 64, offset: 928)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !5656)
!5656 = !{!5657, !5658}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5655, file: !465, line: 63, baseType: !121, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5655, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 32)
!5660 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2755, line: 44, baseType: !5661)
!5661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1570, line: 47, size: 8, elements: !5662)
!5662 = !{!5663}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5661, file: !1570, line: 48, baseType: !194, size: 8)
!5664 = !{!5665, !5666, !5667, !5668, !5669, !5670, !5671, !5672}
!5665 = !DILocalVariable(name: "thread", arg: 1, scope: !5555, file: !5556, line: 56, type: !5559)
!5666 = !DILocalVariable(name: "stack", arg: 2, scope: !5555, file: !5556, line: 56, type: !5659)
!5667 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5555, file: !5556, line: 57, type: !363)
!5668 = !DILocalVariable(name: "entry", arg: 4, scope: !5555, file: !5556, line: 57, type: !2754)
!5669 = !DILocalVariable(name: "p1", arg: 5, scope: !5555, file: !5556, line: 58, type: !102)
!5670 = !DILocalVariable(name: "p2", arg: 6, scope: !5555, file: !5556, line: 58, type: !102)
!5671 = !DILocalVariable(name: "p3", arg: 7, scope: !5555, file: !5556, line: 58, type: !102)
!5672 = !DILocalVariable(name: "iframe", scope: !5555, file: !5556, line: 60, type: !2168)
!5673 = !DILocation(line: 0, scope: !5555)
!5674 = !DILocation(line: 85, column: 11, scope: !5555)
!5675 = !DILocation(line: 93, column: 10, scope: !5555)
!5676 = !DILocation(line: 98, column: 13, scope: !5555)
!5677 = !DILocation(line: 100, column: 15, scope: !5555)
!5678 = !DILocation(line: 100, column: 10, scope: !5555)
!5679 = !DILocation(line: 100, column: 13, scope: !5555)
!5680 = !DILocation(line: 101, column: 15, scope: !5555)
!5681 = !DILocation(line: 101, column: 10, scope: !5555)
!5682 = !DILocation(line: 101, column: 13, scope: !5555)
!5683 = !DILocation(line: 102, column: 15, scope: !5555)
!5684 = !DILocation(line: 102, column: 10, scope: !5555)
!5685 = !DILocation(line: 102, column: 13, scope: !5555)
!5686 = !DILocation(line: 103, column: 15, scope: !5555)
!5687 = !DILocation(line: 103, column: 10, scope: !5555)
!5688 = !DILocation(line: 103, column: 13, scope: !5555)
!5689 = !DILocation(line: 106, column: 10, scope: !5555)
!5690 = !DILocation(line: 106, column: 15, scope: !5555)
!5691 = !DILocation(line: 122, column: 29, scope: !5555)
!5692 = !DILocation(line: 122, column: 23, scope: !5555)
!5693 = !DILocation(line: 122, column: 27, scope: !5555)
!5694 = !DILocation(line: 123, column: 15, scope: !5555)
!5695 = !DILocation(line: 123, column: 23, scope: !5555)
!5696 = !DILocation(line: 143, column: 1, scope: !5555)
!5697 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5556, file: !5556, line: 385, type: !5698, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2165, retainedNodes: !5700)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!121, !1350, !1350}
!5700 = !{!5701, !5702, !5703, !5706}
!5701 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5697, file: !5556, line: 385, type: !1350)
!5702 = !DILocalVariable(name: "psp", arg: 2, scope: !5697, file: !5556, line: 385, type: !1350)
!5703 = !DILocalVariable(name: "thread", scope: !5697, file: !5556, line: 388, type: !5704)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 32)
!5705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5560)
!5706 = !DILocalVariable(name: "guard_len", scope: !5697, file: !5556, line: 405, type: !121)
!5707 = !DILocation(line: 0, scope: !5697)
!5708 = !DILocation(line: 388, column: 34, scope: !5697)
!5709 = !DILocation(line: 390, column: 13, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5697, file: !5556, line: 390, column: 6)
!5711 = !DILocation(line: 390, column: 6, scope: !5697)
!5712 = !DILocation(line: 438, column: 6, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5697, file: !5556, line: 438, column: 6)
!5714 = !DILocation(line: 438, column: 6, scope: !5697)
!5715 = !DILocation(line: 442, column: 3, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5713, file: !5556, line: 440, column: 22)
!5717 = !DILocation(line: 455, column: 1, scope: !5697)
!5718 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5556, file: !5556, line: 530, type: !5719, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2165, retainedNodes: !5721)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{null, !5559, !363, !2754}
!5721 = !{!5722, !5723, !5724}
!5722 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5718, file: !5556, line: 530, type: !5559)
!5723 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5718, file: !5556, line: 530, type: !363)
!5724 = !DILocalVariable(name: "_main", arg: 3, scope: !5718, file: !5556, line: 531, type: !2754)
!5725 = !DILocation(line: 0, scope: !5718)
!5726 = !DILocation(line: 535, column: 11, scope: !5718)
!5727 = !DILocation(line: 560, column: 2, scope: !5718)
!5728 = !DILocation(line: 576, column: 2, scope: !5718)
!5729 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5730 = !DILocation(line: 603, column: 2, scope: !5718)
!5731 = distinct !DISubprogram(name: "z_arm_fault", scope: !5732, file: !5732, line: 1036, type: !5733, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5748)
!5732 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5733 = !DISubroutineType(types: !5734)
!5734 = !{null, !121, !121, !121, !5735}
!5735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 32)
!5736 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !465, line: 37, baseType: !5737)
!5737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !5738)
!5738 = !{!5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747}
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5737, file: !465, line: 26, baseType: !121, size: 32)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5737, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5737, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5737, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5737, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5737, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5737, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5737, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5737, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!5748 = !{!5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758}
!5749 = !DILocalVariable(name: "msp", arg: 1, scope: !5731, file: !5732, line: 1036, type: !121)
!5750 = !DILocalVariable(name: "psp", arg: 2, scope: !5731, file: !5732, line: 1036, type: !121)
!5751 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5731, file: !5732, line: 1036, type: !121)
!5752 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5731, file: !5732, line: 1037, type: !5735)
!5753 = !DILocalVariable(name: "reason", scope: !5731, file: !5732, line: 1039, type: !121)
!5754 = !DILocalVariable(name: "fault", scope: !5731, file: !5732, line: 1040, type: !103)
!5755 = !DILocalVariable(name: "recoverable", scope: !5731, file: !5732, line: 1041, type: !205)
!5756 = !DILocalVariable(name: "nested_exc", scope: !5731, file: !5732, line: 1041, type: !205)
!5757 = !DILocalVariable(name: "esf", scope: !5731, file: !5732, line: 1042, type: !2236)
!5758 = !DILocalVariable(name: "esf_copy", scope: !5731, file: !5732, line: 1047, type: !2237)
!5759 = !DILocation(line: 0, scope: !5731)
!5760 = !DILocation(line: 1040, column: 19, scope: !5731)
!5761 = !DILocation(line: 1040, column: 24, scope: !5731)
!5762 = !DILocation(line: 1041, column: 2, scope: !5731)
!5763 = !DILocation(line: 1047, column: 2, scope: !5731)
!5764 = !DILocation(line: 1047, column: 15, scope: !5731)
!5765 = !DILocalVariable(name: "key", arg: 1, scope: !5766, file: !4919, line: 84, type: !32)
!5766 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5767)
!5767 = !{!5765}
!5768 = !DILocation(line: 0, scope: !5766, inlinedAt: !5769)
!5769 = distinct !DILocation(line: 1050, column: 2, scope: !5731)
!5770 = !DILocation(line: 95, column: 2, scope: !5766, inlinedAt: !5769)
!5771 = !{i64 1353206}
!5772 = !DILocation(line: 1055, column: 9, scope: !5731)
!5773 = !DILocation(line: 1063, column: 11, scope: !5731)
!5774 = !DILocation(line: 1064, column: 6, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5731, file: !5732, line: 1064, column: 6)
!5776 = !{i8 0, i8 2}
!5777 = !DILocation(line: 1064, column: 6, scope: !5731)
!5778 = !DILocation(line: 1070, column: 20, scope: !5731)
!5779 = !DILocation(line: 1070, column: 2, scope: !5731)
!5780 = !DILocation(line: 1089, column: 6, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5731, file: !5732, line: 1089, column: 6)
!5782 = !DILocation(line: 0, scope: !5781)
!5783 = !DILocation(line: 1089, column: 6, scope: !5731)
!5784 = !DILocation(line: 1090, column: 28, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !5732, line: 1090, column: 7)
!5786 = distinct !DILexicalBlock(scope: !5781, file: !5732, line: 1089, column: 18)
!5787 = !DILocation(line: 1090, column: 44, scope: !5785)
!5788 = !DILocation(line: 1090, column: 7, scope: !5786)
!5789 = !DILocation(line: 1091, column: 24, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5785, file: !5732, line: 1090, column: 50)
!5791 = !DILocation(line: 1092, column: 3, scope: !5790)
!5792 = !DILocation(line: 1094, column: 23, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5781, file: !5732, line: 1093, column: 9)
!5794 = !DILocation(line: 1097, column: 2, scope: !5731)
!5795 = !DILocation(line: 1098, column: 1, scope: !5731)
!5796 = distinct !DISubprogram(name: "get_esf", scope: !5732, file: !5732, line: 894, type: !5797, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5800)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!2236, !121, !121, !121, !5799}
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!5800 = !{!5801, !5802, !5803, !5804, !5805, !5806}
!5801 = !DILocalVariable(name: "msp", arg: 1, scope: !5796, file: !5732, line: 894, type: !121)
!5802 = !DILocalVariable(name: "psp", arg: 2, scope: !5796, file: !5732, line: 894, type: !121)
!5803 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5796, file: !5732, line: 894, type: !121)
!5804 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5796, file: !5732, line: 895, type: !5799)
!5805 = !DILocalVariable(name: "alternative_state_exc", scope: !5796, file: !5732, line: 897, type: !205)
!5806 = !DILocalVariable(name: "ptr_esf", scope: !5796, file: !5732, line: 898, type: !2236)
!5807 = !DILocation(line: 0, scope: !5796)
!5808 = !DILocation(line: 900, column: 14, scope: !5796)
!5809 = !DILocation(line: 902, column: 49, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5796, file: !5732, line: 902, column: 6)
!5811 = !DILocation(line: 902, column: 6, scope: !5796)
!5812 = !DILocation(line: 983, column: 18, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5796, file: !5732, line: 983, column: 6)
!5814 = !DILocation(line: 991, column: 7, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !5732, line: 990, column: 30)
!5816 = distinct !DILexicalBlock(scope: !5796, file: !5732, line: 990, column: 6)
!5817 = !DILocation(line: 998, column: 16, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !5732, line: 995, column: 10)
!5819 = distinct !DILexicalBlock(scope: !5815, file: !5732, line: 991, column: 7)
!5820 = !DILocation(line: 1002, column: 2, scope: !5796)
!5821 = !DILocation(line: 1003, column: 1, scope: !5796)
!5822 = distinct !DISubprogram(name: "fault_handle", scope: !5732, file: !5732, line: 786, type: !5823, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5825)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{!121, !2236, !103, !5799}
!5825 = !{!5826, !5827, !5828, !5829}
!5826 = !DILocalVariable(name: "esf", arg: 1, scope: !5822, file: !5732, line: 786, type: !2236)
!5827 = !DILocalVariable(name: "fault", arg: 2, scope: !5822, file: !5732, line: 786, type: !103)
!5828 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5822, file: !5732, line: 786, type: !5799)
!5829 = !DILocalVariable(name: "reason", scope: !5822, file: !5732, line: 788, type: !121)
!5830 = !DILocation(line: 0, scope: !5822)
!5831 = !DILocation(line: 790, column: 15, scope: !5822)
!5832 = !DILocation(line: 792, column: 2, scope: !5822)
!5833 = !DILocation(line: 794, column: 12, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5822, file: !5732, line: 792, column: 17)
!5835 = !DILocation(line: 795, column: 3, scope: !5834)
!5836 = !DILocation(line: 800, column: 12, scope: !5834)
!5837 = !DILocation(line: 801, column: 3, scope: !5834)
!5838 = !DILocation(line: 803, column: 12, scope: !5834)
!5839 = !DILocation(line: 804, column: 3, scope: !5834)
!5840 = !DILocation(line: 806, column: 12, scope: !5834)
!5841 = !DILocation(line: 807, column: 3, scope: !5834)
!5842 = !DILocation(line: 814, column: 3, scope: !5834)
!5843 = !DILocation(line: 815, column: 3, scope: !5834)
!5844 = !DILocation(line: 829, column: 2, scope: !5822)
!5845 = distinct !DISubprogram(name: "hard_fault", scope: !5732, file: !5732, line: 709, type: !5846, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!121, !2236, !5799}
!5848 = !{!5849, !5850, !5851}
!5849 = !DILocalVariable(name: "esf", arg: 1, scope: !5845, file: !5732, line: 709, type: !2236)
!5850 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5845, file: !5732, line: 709, type: !5799)
!5851 = !DILocalVariable(name: "reason", scope: !5845, file: !5732, line: 711, type: !121)
!5852 = !DILocation(line: 0, scope: !5845)
!5853 = !DILocation(line: 732, column: 15, scope: !5845)
!5854 = !DILocation(line: 734, column: 12, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5845, file: !5732, line: 734, column: 6)
!5856 = !DILocation(line: 734, column: 17, scope: !5855)
!5857 = !DILocation(line: 734, column: 41, scope: !5855)
!5858 = !DILocation(line: 734, column: 6, scope: !5845)
!5859 = !DILocation(line: 736, column: 19, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5855, file: !5732, line: 736, column: 13)
!5861 = !DILocation(line: 736, column: 49, scope: !5860)
!5862 = !DILocation(line: 736, column: 13, scope: !5855)
!5863 = !DILocation(line: 738, column: 19, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5860, file: !5732, line: 738, column: 13)
!5865 = !DILocation(line: 738, column: 24, scope: !5864)
!5866 = !DILocation(line: 738, column: 47, scope: !5864)
!5867 = !DILocation(line: 738, column: 13, scope: !5860)
!5868 = !DILocation(line: 740, column: 7, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !5732, line: 740, column: 7)
!5870 = distinct !DILexicalBlock(scope: !5864, file: !5732, line: 738, column: 53)
!5871 = !DILocation(line: 740, column: 7, scope: !5870)
!5872 = !DILocation(line: 742, column: 24, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5869, file: !5732, line: 740, column: 38)
!5874 = !DILocation(line: 743, column: 3, scope: !5873)
!5875 = !DILocation(line: 743, column: 20, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5869, file: !5732, line: 743, column: 14)
!5877 = !DILocation(line: 743, column: 25, scope: !5876)
!5878 = !DILocation(line: 743, column: 52, scope: !5876)
!5879 = !DILocation(line: 743, column: 14, scope: !5869)
!5880 = !DILocation(line: 744, column: 13, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5876, file: !5732, line: 743, column: 58)
!5882 = !DILocation(line: 745, column: 3, scope: !5881)
!5883 = !DILocation(line: 745, column: 20, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5876, file: !5732, line: 745, column: 14)
!5885 = !DILocation(line: 745, column: 25, scope: !5884)
!5886 = !DILocation(line: 745, column: 52, scope: !5884)
!5887 = !DILocation(line: 745, column: 14, scope: !5876)
!5888 = !DILocation(line: 746, column: 13, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5884, file: !5732, line: 745, column: 58)
!5890 = !DILocation(line: 747, column: 3, scope: !5889)
!5891 = !DILocation(line: 747, column: 20, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5884, file: !5732, line: 747, column: 14)
!5893 = !DILocation(line: 747, column: 52, scope: !5892)
!5894 = !DILocation(line: 747, column: 14, scope: !5884)
!5895 = !DILocation(line: 748, column: 13, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5892, file: !5732, line: 747, column: 58)
!5897 = !DILocation(line: 753, column: 3, scope: !5896)
!5898 = !DILocation(line: 766, column: 2, scope: !5845)
!5899 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5732, file: !5732, line: 229, type: !5823, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5900)
!5900 = !{!5901, !5902, !5903, !5904, !5905, !5906, !5909}
!5901 = !DILocalVariable(name: "esf", arg: 1, scope: !5899, file: !5732, line: 229, type: !2236)
!5902 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5899, file: !5732, line: 229, type: !103)
!5903 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5899, file: !5732, line: 230, type: !5799)
!5904 = !DILocalVariable(name: "reason", scope: !5899, file: !5732, line: 232, type: !121)
!5905 = !DILocalVariable(name: "mmfar", scope: !5899, file: !5732, line: 233, type: !121)
!5906 = !DILocalVariable(name: "temp", scope: !5907, file: !5732, line: 254, type: !121)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !5732, line: 244, column: 48)
!5908 = distinct !DILexicalBlock(scope: !5899, file: !5732, line: 244, column: 6)
!5909 = !DILocalVariable(name: "min_stack_ptr", scope: !5910, file: !5732, line: 309, type: !121)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !5732, line: 308, column: 43)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !5732, line: 308, column: 7)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !5732, line: 289, column: 40)
!5913 = distinct !DILexicalBlock(scope: !5899, file: !5732, line: 288, column: 6)
!5914 = !DILocation(line: 0, scope: !5899)
!5915 = !DILocation(line: 237, column: 12, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5899, file: !5732, line: 237, column: 6)
!5917 = !DILocation(line: 241, column: 12, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5899, file: !5732, line: 241, column: 6)
!5919 = !DILocation(line: 244, column: 12, scope: !5908)
!5920 = !DILocation(line: 244, column: 17, scope: !5908)
!5921 = !DILocation(line: 244, column: 42, scope: !5908)
!5922 = !DILocation(line: 244, column: 6, scope: !5899)
!5923 = !DILocation(line: 254, column: 24, scope: !5907)
!5924 = !DILocation(line: 0, scope: !5907)
!5925 = !DILocation(line: 256, column: 13, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5907, file: !5732, line: 256, column: 7)
!5927 = !DILocation(line: 256, column: 18, scope: !5926)
!5928 = !DILocation(line: 256, column: 44, scope: !5926)
!5929 = !DILocation(line: 256, column: 7, scope: !5907)
!5930 = !DILocation(line: 259, column: 24, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !5732, line: 259, column: 8)
!5932 = distinct !DILexicalBlock(scope: !5926, file: !5732, line: 256, column: 50)
!5933 = !DILocation(line: 259, column: 8, scope: !5932)
!5934 = !DILocation(line: 261, column: 15, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !5732, line: 259, column: 30)
!5936 = !DILocation(line: 262, column: 4, scope: !5935)
!5937 = !DILocation(line: 265, column: 12, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5899, file: !5732, line: 265, column: 6)
!5939 = !DILocation(line: 288, column: 12, scope: !5913)
!5940 = !DILocation(line: 288, column: 17, scope: !5913)
!5941 = !DILocation(line: 288, column: 41, scope: !5913)
!5942 = !DILocation(line: 289, column: 9, scope: !5913)
!5943 = !DILocation(line: 289, column: 14, scope: !5913)
!5944 = !DILocation(line: 288, column: 6, scope: !5899)
!5945 = !DILocation(line: 308, column: 12, scope: !5911)
!5946 = !DILocation(line: 308, column: 17, scope: !5911)
!5947 = !DILocation(line: 308, column: 7, scope: !5912)
!5948 = !DILocation(line: 310, column: 6, scope: !5910)
!5949 = !DILocation(line: 309, column: 29, scope: !5910)
!5950 = !DILocation(line: 0, scope: !5910)
!5951 = !DILocation(line: 312, column: 8, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5910, file: !5732, line: 312, column: 8)
!5953 = !DILocation(line: 312, column: 8, scope: !5910)
!5954 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5955, file: !5457, line: 1099, type: !121)
!5955 = distinct !DISubprogram(name: "__set_PSP", scope: !5457, file: !5457, line: 1099, type: !5003, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5956)
!5956 = !{!5954}
!5957 = !DILocation(line: 0, scope: !5955, inlinedAt: !5958)
!5958 = distinct !DILocation(line: 338, column: 5, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5952, file: !5732, line: 312, column: 23)
!5960 = !DILocation(line: 1101, column: 3, scope: !5955, inlinedAt: !5958)
!5961 = !{i64 1592256}
!5962 = !DILocation(line: 341, column: 4, scope: !5959)
!5963 = !DILocation(line: 366, column: 12, scope: !5899)
!5964 = !DILocation(line: 369, column: 15, scope: !5899)
!5965 = !DILocation(line: 371, column: 2, scope: !5899)
!5966 = distinct !DISubprogram(name: "bus_fault", scope: !5732, file: !5732, line: 383, type: !5967, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !5969)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!103, !2236, !103, !5799}
!5969 = !{!5970, !5971, !5972, !5973, !5974}
!5970 = !DILocalVariable(name: "esf", arg: 1, scope: !5966, file: !5732, line: 383, type: !2236)
!5971 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5966, file: !5732, line: 383, type: !103)
!5972 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5966, file: !5732, line: 383, type: !5799)
!5973 = !DILocalVariable(name: "reason", scope: !5966, file: !5732, line: 385, type: !121)
!5974 = !DILocalVariable(name: "bfar", scope: !5975, file: !5732, line: 405, type: !121)
!5975 = distinct !DILexicalBlock(scope: !5976, file: !5732, line: 395, column: 42)
!5976 = distinct !DILexicalBlock(scope: !5966, file: !5732, line: 395, column: 6)
!5977 = !DILocation(line: 0, scope: !5966)
!5978 = !DILocation(line: 389, column: 11, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5966, file: !5732, line: 389, column: 6)
!5980 = !DILocation(line: 392, column: 11, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5966, file: !5732, line: 392, column: 6)
!5982 = !DILocation(line: 395, column: 11, scope: !5976)
!5983 = !DILocation(line: 395, column: 16, scope: !5976)
!5984 = !DILocation(line: 395, column: 6, scope: !5966)
!5985 = !DILocation(line: 405, column: 3, scope: !5975)
!5986 = !DILocation(line: 0, scope: !5975)
!5987 = !DILocation(line: 407, column: 13, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5975, file: !5732, line: 407, column: 7)
!5989 = !DILocation(line: 407, column: 18, scope: !5988)
!5990 = !DILocation(line: 407, column: 44, scope: !5988)
!5991 = !DILocation(line: 407, column: 7, scope: !5975)
!5992 = !DILocation(line: 411, column: 15, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5994, file: !5732, line: 409, column: 30)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !5732, line: 409, column: 8)
!5995 = distinct !DILexicalBlock(scope: !5988, file: !5732, line: 407, column: 50)
!5996 = !DILocation(line: 412, column: 4, scope: !5993)
!5997 = !DILocation(line: 415, column: 11, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5966, file: !5732, line: 415, column: 6)
!5999 = !DILocation(line: 418, column: 12, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5966, file: !5732, line: 418, column: 6)
!6001 = !DILocation(line: 524, column: 12, scope: !5966)
!6002 = !DILocation(line: 526, column: 15, scope: !5966)
!6003 = !DILocation(line: 528, column: 2, scope: !5966)
!6004 = distinct !DISubprogram(name: "usage_fault", scope: !5732, file: !5732, line: 539, type: !6005, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !6009)
!6005 = !DISubroutineType(types: !6006)
!6006 = !{!121, !6007}
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 32)
!6008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2237)
!6009 = !{!6010, !6011}
!6010 = !DILocalVariable(name: "esf", arg: 1, scope: !6004, file: !5732, line: 539, type: !6007)
!6011 = !DILocalVariable(name: "reason", scope: !6004, file: !5732, line: 541, type: !121)
!6012 = !DILocation(line: 0, scope: !6004)
!6013 = !DILocation(line: 546, column: 12, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6004, file: !5732, line: 546, column: 6)
!6015 = !DILocation(line: 549, column: 12, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6004, file: !5732, line: 549, column: 6)
!6017 = !DILocation(line: 567, column: 12, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6004, file: !5732, line: 567, column: 6)
!6019 = !DILocation(line: 570, column: 12, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6004, file: !5732, line: 570, column: 6)
!6021 = !DILocation(line: 573, column: 12, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6004, file: !5732, line: 573, column: 6)
!6023 = !DILocation(line: 576, column: 12, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6004, file: !5732, line: 576, column: 6)
!6025 = !DILocation(line: 581, column: 12, scope: !6004)
!6026 = !DILocation(line: 583, column: 2, scope: !6004)
!6027 = distinct !DISubprogram(name: "debug_monitor", scope: !5732, file: !5732, line: 632, type: !6028, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !6030)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{null, !2236, !5799}
!6030 = !{!6031, !6032}
!6031 = !DILocalVariable(name: "esf", arg: 1, scope: !6027, file: !5732, line: 632, type: !2236)
!6032 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6027, file: !5732, line: 632, type: !5799)
!6033 = !DILocation(line: 0, scope: !6027)
!6034 = !DILocation(line: 634, column: 15, scope: !6027)
!6035 = !DILocation(line: 652, column: 1, scope: !6027)
!6036 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5732, file: !5732, line: 658, type: !6037, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !6039)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!205, !2236}
!6039 = !{!6040, !6041, !6042}
!6040 = !DILocalVariable(name: "esf", arg: 1, scope: !6036, file: !5732, line: 658, type: !2236)
!6041 = !DILocalVariable(name: "ret_addr", scope: !6036, file: !5732, line: 660, type: !1967)
!6042 = !DILocalVariable(name: "fault_insn", scope: !6036, file: !5732, line: 686, type: !448)
!6043 = !DILocation(line: 0, scope: !6036)
!6044 = !DILocation(line: 660, column: 46, scope: !6036)
!6045 = !DILocation(line: 660, column: 23, scope: !6036)
!6046 = !DILocation(line: 682, column: 11, scope: !6036)
!6047 = !DILocation(line: 271, column: 3, scope: !6048, inlinedAt: !6049)
!6048 = distinct !DISubprogram(name: "__DSB", scope: !5457, file: !5457, line: 269, type: !873, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !336)
!6049 = distinct !DILocation(line: 683, column: 2, scope: !6036)
!6050 = !{i64 1568391}
!6051 = !DILocation(line: 260, column: 3, scope: !6052, inlinedAt: !6053)
!6052 = distinct !DISubprogram(name: "__ISB", scope: !5457, file: !5457, line: 258, type: !873, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !336)
!6053 = distinct !DILocation(line: 684, column: 2, scope: !6036)
!6054 = !{i64 1568108}
!6055 = !DILocation(line: 686, column: 35, scope: !6036)
!6056 = !DILocation(line: 686, column: 24, scope: !6036)
!6057 = !DILocation(line: 688, column: 11, scope: !6036)
!6058 = !DILocation(line: 271, column: 3, scope: !6048, inlinedAt: !6059)
!6059 = distinct !DILocation(line: 689, column: 2, scope: !6036)
!6060 = !DILocation(line: 260, column: 3, scope: !6052, inlinedAt: !6061)
!6061 = distinct !DILocation(line: 690, column: 2, scope: !6036)
!6062 = !DILocation(line: 693, column: 45, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6036, file: !5732, line: 693, column: 6)
!6064 = !DILocation(line: 699, column: 1, scope: !6036)
!6065 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5732, file: !5732, line: 1107, type: !873, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !336)
!6066 = !DILocation(line: 1111, column: 11, scope: !6065)
!6067 = !DILocation(line: 1136, column: 1, scope: !6065)
!6068 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6069, file: !6069, line: 26, type: !873, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2279, retainedNodes: !6070)
!6069 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6070 = !{!6071}
!6071 = !DILocalVariable(name: "irq", scope: !6068, file: !6069, line: 28, type: !103)
!6072 = !DILocation(line: 0, scope: !6068)
!6073 = !DILocation(line: 30, column: 2, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6068, file: !6069, line: 30, column: 2)
!6075 = !DILocation(line: 31, column: 3, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !6069, line: 30, column: 39)
!6077 = distinct !DILexicalBlock(scope: !6074, file: !6069, line: 30, column: 2)
!6078 = !DILocation(line: 30, column: 35, scope: !6077)
!6079 = !DILocation(line: 30, column: 13, scope: !6077)
!6080 = distinct !{!6080, !6073, !6081}
!6081 = !DILocation(line: 32, column: 2, scope: !6074)
!6082 = !DILocation(line: 33, column: 1, scope: !6068)
!6083 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !532, file: !532, line: 1638, type: !5491, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2279, retainedNodes: !6084)
!6084 = !{!6085, !6086}
!6085 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6083, file: !532, line: 1638, type: !2064)
!6086 = !DILocalVariable(name: "priority", arg: 2, scope: !6083, file: !532, line: 1638, type: !121)
!6087 = !DILocation(line: 0, scope: !6083)
!6088 = !DILocation(line: 1640, column: 7, scope: !6083)
!6089 = !DILocation(line: 0, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6083, file: !532, line: 1640, column: 7)
!6091 = !DILocation(line: 1648, column: 1, scope: !6083)
!6092 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6093, file: !6093, line: 27, type: !6094, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !6197)
!6093 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6094 = !DISubroutineType(types: !6095)
!6095 = !{null, !6096}
!6096 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !398, line: 347, baseType: !6097)
!6097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6098, size: 32)
!6098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !6099)
!6099 = !{!6100, !6158, !6170, !6171, !6172, !6173, !6179, !6192}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6098, file: !398, line: 247, baseType: !6101, size: 384)
!6101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !6102)
!6102 = !{!6103, !6127, !6134, !6135, !6136, !6145, !6146, !6147}
!6103 = !DIDerivedType(tag: DW_TAG_member, scope: !6101, file: !398, line: 60, baseType: !6104, size: 64)
!6104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6101, file: !398, line: 60, size: 64, elements: !6105)
!6105 = !{!6106, !6121}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6104, file: !398, line: 61, baseType: !6107, size: 64)
!6107 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !6108)
!6108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !6109)
!6109 = !{!6110, !6116}
!6110 = !DIDerivedType(tag: DW_TAG_member, scope: !6108, file: !344, line: 38, baseType: !6111, size: 32)
!6111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6108, file: !344, line: 38, size: 32, elements: !6112)
!6112 = !{!6113, !6115}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6111, file: !344, line: 39, baseType: !6114, size: 32)
!6114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6108, size: 32)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6111, file: !344, line: 40, baseType: !6114, size: 32)
!6116 = !DIDerivedType(tag: DW_TAG_member, scope: !6108, file: !344, line: 42, baseType: !6117, size: 32, offset: 32)
!6117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6108, file: !344, line: 42, size: 32, elements: !6118)
!6118 = !{!6119, !6120}
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6117, file: !344, line: 43, baseType: !6114, size: 32)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6117, file: !344, line: 44, baseType: !6114, size: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6104, file: !398, line: 62, baseType: !6122, size: 64)
!6122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !6123)
!6123 = !{!6124}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6122, file: !423, line: 50, baseType: !6125, size: 64)
!6125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6126, size: 64, elements: !382)
!6126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6101, file: !398, line: 68, baseType: !6128, size: 32, offset: 64)
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 32)
!6129 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !6130)
!6130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !6131)
!6131 = !{!6132}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6130, file: !339, line: 232, baseType: !6133, size: 64)
!6133 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !6108)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6101, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6101, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!6136 = !DIDerivedType(tag: DW_TAG_member, scope: !6101, file: !398, line: 90, baseType: !6137, size: 16, offset: 112)
!6137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6101, file: !398, line: 90, size: 16, elements: !6138)
!6138 = !{!6139, !6144}
!6139 = !DIDerivedType(tag: DW_TAG_member, scope: !6137, file: !398, line: 91, baseType: !6140, size: 16)
!6140 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6137, file: !398, line: 91, size: 16, elements: !6141)
!6141 = !{!6142, !6143}
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6140, file: !398, line: 96, baseType: !444, size: 8)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6140, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6137, file: !398, line: 100, baseType: !448, size: 16)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6101, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6101, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6101, file: !398, line: 131, baseType: !6148, size: 192, offset: 192)
!6148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !6149)
!6149 = !{!6150, !6151, !6157}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6148, file: !339, line: 245, baseType: !6107, size: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6148, file: !339, line: 246, baseType: !6152, size: 32, offset: 64)
!6152 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !6153)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6154, size: 32)
!6154 = !DISubroutineType(types: !6155)
!6155 = !{null, !6156}
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 32)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6148, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6098, file: !398, line: 250, baseType: !6159, size: 288, offset: 384)
!6159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !6160)
!6160 = !{!6161, !6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169}
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6159, file: !465, line: 26, baseType: !121, size: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6159, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6159, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6159, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6159, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6159, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6159, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6159, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6159, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6098, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6098, file: !398, line: 256, baseType: !6129, size: 64, offset: 704)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6098, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6098, file: !398, line: 300, baseType: !6174, size: 96, offset: 800)
!6174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !6175)
!6175 = !{!6176, !6177, !6178}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6174, file: !398, line: 153, baseType: !22, size: 32)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6174, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6174, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6098, file: !398, line: 325, baseType: !6180, size: 32, offset: 896)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 32)
!6181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !6182)
!6182 = !{!6183, !6189, !6190}
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6181, file: !315, line: 5074, baseType: !6184, size: 96)
!6184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !6185)
!6185 = !{!6186, !6187, !6188}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6184, file: !491, line: 57, baseType: !494, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6184, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6184, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6181, file: !315, line: 5075, baseType: !6129, size: 64, offset: 96)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6181, file: !315, line: 5076, baseType: !6191, offset: 160)
!6191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6098, file: !398, line: 343, baseType: !6193, size: 64, offset: 928)
!6193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !6194)
!6194 = !{!6195, !6196}
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6193, file: !465, line: 63, baseType: !121, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6193, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!6197 = !{!6198}
!6198 = !DILocalVariable(name: "thread", arg: 1, scope: !6092, file: !6093, line: 27, type: !6096)
!6199 = !DILocation(line: 0, scope: !6092)
!6200 = !DILocation(line: 29, column: 6, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6092, file: !6093, line: 29, column: 6)
!6202 = !DILocation(line: 29, column: 15, scope: !6201)
!6203 = !DILocation(line: 29, column: 6, scope: !6092)
!6204 = !DILocation(line: 1031, column: 3, scope: !6205, inlinedAt: !6210)
!6205 = distinct !DISubprogram(name: "__get_IPSR", scope: !5457, file: !5457, line: 1027, type: !6206, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !6208)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{!121}
!6208 = !{!6209}
!6209 = !DILocalVariable(name: "result", scope: !6205, file: !5457, line: 1029, type: !121)
!6210 = distinct !DILocation(line: 48, column: 10, scope: !6211, inlinedAt: !6215)
!6211 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6212, file: !6212, line: 46, type: !6213, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !336)
!6212 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!205}
!6215 = distinct !DILocation(line: 30, column: 7, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6217, file: !6093, line: 30, column: 7)
!6217 = distinct !DILexicalBlock(scope: !6201, file: !6093, line: 29, column: 26)
!6218 = !{i64 1557239}
!6219 = !DILocation(line: 0, scope: !6205, inlinedAt: !6210)
!6220 = !DILocation(line: 48, column: 9, scope: !6211, inlinedAt: !6215)
!6221 = !DILocation(line: 30, column: 7, scope: !6217)
!6222 = !DILocation(line: 42, column: 14, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6216, file: !6093, line: 30, column: 25)
!6224 = !DILocation(line: 48, column: 15, scope: !6223)
!6225 = !DILocation(line: 49, column: 3, scope: !6223)
!6226 = !DILocation(line: 52, column: 2, scope: !6092)
!6227 = !DILocation(line: 53, column: 1, scope: !6092)
!6228 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !393, file: !393, line: 127, type: !873, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !336)
!6229 = !DILocation(line: 134, column: 2, scope: !6228)
!6230 = !DILocation(line: 156, column: 1, scope: !6228)
!6231 = !DILocation(line: 0, scope: !392)
!6232 = !DILocation(line: 289, column: 36, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !392, file: !393, line: 285, column: 2)
!6234 = !DILocation(line: 289, column: 42, scope: !6233)
!6235 = !DILocation(line: 300, column: 36, scope: !392)
!6236 = !DILocation(line: 301, column: 35, scope: !392)
!6237 = !DILocation(line: 302, column: 37, scope: !392)
!6238 = !DILocation(line: 311, column: 2, scope: !392)
!6239 = !DILocation(line: 316, column: 1, scope: !392)
!6240 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !559, file: !559, line: 180, type: !873, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !336)
!6241 = !DILocation(line: 188, column: 12, scope: !6240)
!6242 = !DILocation(line: 271, column: 3, scope: !6243, inlinedAt: !6244)
!6243 = distinct !DISubprogram(name: "__DSB", scope: !5457, file: !5457, line: 269, type: !873, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !336)
!6244 = distinct !DILocation(line: 192, column: 2, scope: !6240)
!6245 = !{i64 1707670}
!6246 = !DILocation(line: 260, column: 3, scope: !6247, inlinedAt: !6248)
!6247 = distinct !DISubprogram(name: "__ISB", scope: !5457, file: !5457, line: 258, type: !873, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !336)
!6248 = distinct !DILocation(line: 193, column: 2, scope: !6240)
!6249 = !{i64 1707387}
!6250 = !DILocation(line: 194, column: 1, scope: !6240)
!6251 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !559, file: !559, line: 199, type: !873, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !336)
!6252 = !DILocation(line: 282, column: 3, scope: !6253, inlinedAt: !6254)
!6253 = distinct !DISubprogram(name: "__DMB", scope: !5457, file: !5457, line: 280, type: !873, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !336)
!6254 = distinct !DILocation(line: 202, column: 2, scope: !6251)
!6255 = !{i64 1707946}
!6256 = !DILocation(line: 205, column: 12, scope: !6251)
!6257 = !DILocation(line: 206, column: 1, scope: !6251)
!6258 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !559, file: !559, line: 275, type: !6259, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6272)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !6261, !281, !1350, !1350}
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6263)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !513, line: 52, size: 96, elements: !6264)
!6264 = !{!6265, !6266, !6267}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6263, file: !513, line: 53, baseType: !22, size: 32)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6263, file: !513, line: 54, baseType: !223, size: 32, offset: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6263, file: !513, line: 55, baseType: !6268, size: 32, offset: 64)
!6268 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !519, line: 151, baseType: !6269)
!6269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !519, line: 149, size: 32, elements: !6270)
!6270 = !{!6271}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6269, file: !519, line: 150, baseType: !121, size: 32)
!6272 = !{!6273, !6274, !6275, !6276}
!6273 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6258, file: !559, line: 276, type: !6261)
!6274 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6258, file: !559, line: 276, type: !281)
!6275 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6258, file: !559, line: 277, type: !1350)
!6276 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6258, file: !559, line: 277, type: !1350)
!6277 = !DILocation(line: 0, scope: !6258)
!6278 = !DILocation(line: 279, column: 6, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6258, file: !559, line: 279, column: 6)
!6280 = !DILocation(line: 285, column: 1, scope: !6258)
!6281 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6282, file: !6282, line: 220, type: !6283, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6285)
!6282 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6283 = !DISubroutineType(types: !6284)
!6284 = !{!103, !6261, !281, !1350, !1350}
!6285 = !{!6286, !6287, !6288, !6289, !6290}
!6286 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6281, file: !6282, line: 221, type: !6261)
!6287 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6281, file: !6282, line: 221, type: !281)
!6288 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6281, file: !6282, line: 222, type: !1350)
!6289 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6281, file: !6282, line: 223, type: !1350)
!6290 = !DILocalVariable(name: "mpu_reg_index", scope: !6281, file: !6282, line: 225, type: !103)
!6291 = !DILocation(line: 0, scope: !6281)
!6292 = !DILocation(line: 225, column: 22, scope: !6281)
!6293 = !DILocation(line: 233, column: 18, scope: !6281)
!6294 = !DILocation(line: 236, column: 23, scope: !6281)
!6295 = !DILocation(line: 236, column: 21, scope: !6281)
!6296 = !DILocation(line: 238, column: 2, scope: !6281)
!6297 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !559, file: !559, line: 105, type: !6298, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6300)
!6298 = !DISubroutineType(types: !6299)
!6299 = !{!103, !6261, !202, !202, !205}
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306}
!6301 = !DILocalVariable(name: "regions", arg: 1, scope: !6297, file: !559, line: 106, type: !6261)
!6302 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6297, file: !559, line: 106, type: !202)
!6303 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6297, file: !559, line: 106, type: !202)
!6304 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6297, file: !559, line: 107, type: !205)
!6305 = !DILocalVariable(name: "i", scope: !6297, file: !559, line: 109, type: !103)
!6306 = !DILocalVariable(name: "reg_index", scope: !6297, file: !559, line: 110, type: !103)
!6307 = !DILocation(line: 0, scope: !6297)
!6308 = !DILocation(line: 110, column: 18, scope: !6297)
!6309 = !DILocation(line: 112, column: 16, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !559, line: 112, column: 2)
!6311 = distinct !DILexicalBlock(scope: !6297, file: !559, line: 112, column: 2)
!6312 = !DILocation(line: 112, column: 2, scope: !6311)
!6313 = !DILocation(line: 113, column: 7, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !559, line: 113, column: 7)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !559, line: 112, column: 36)
!6316 = !DILocation(line: 113, column: 18, scope: !6314)
!6317 = !DILocation(line: 113, column: 23, scope: !6314)
!6318 = !DILocation(line: 113, column: 7, scope: !6315)
!6319 = !DILocation(line: 118, column: 23, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6315, file: !559, line: 118, column: 7)
!6321 = !DILocation(line: 119, column: 7, scope: !6320)
!6322 = !DILocation(line: 118, column: 7, scope: !6315)
!6323 = !DILocation(line: 124, column: 36, scope: !6315)
!6324 = !DILocation(line: 124, column: 15, scope: !6315)
!6325 = !DILocation(line: 126, column: 17, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6315, file: !559, line: 126, column: 7)
!6327 = !DILocation(line: 126, column: 7, scope: !6315)
!6328 = !DILocation(line: 131, column: 12, scope: !6315)
!6329 = !DILocation(line: 132, column: 2, scope: !6315)
!6330 = !DILocation(line: 112, column: 32, scope: !6310)
!6331 = distinct !{!6331, !6312, !6332}
!6332 = !DILocation(line: 132, column: 2, scope: !6311)
!6333 = !DILocation(line: 135, column: 1, scope: !6297)
!6334 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6282, file: !6282, line: 63, type: !6335, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6337)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!103, !6261}
!6337 = !{!6338, !6339}
!6338 = !DILocalVariable(name: "part", arg: 1, scope: !6334, file: !6282, line: 63, type: !6261)
!6339 = !DILocalVariable(name: "partition_is_valid", scope: !6334, file: !6282, line: 70, type: !103)
!6340 = !DILocation(line: 0, scope: !6334)
!6341 = !DILocation(line: 71, column: 11, scope: !6334)
!6342 = !DILocation(line: 71, column: 37, scope: !6334)
!6343 = !DILocation(line: 72, column: 3, scope: !6334)
!6344 = !DILocation(line: 71, column: 30, scope: !6334)
!6345 = !DILocation(line: 75, column: 11, scope: !6334)
!6346 = !DILocation(line: 75, column: 17, scope: !6334)
!6347 = !DILocation(line: 75, column: 38, scope: !6334)
!6348 = !DILocation(line: 77, column: 2, scope: !6334)
!6349 = distinct !DISubprogram(name: "mpu_configure_region", scope: !559, file: !559, line: 79, type: !6350, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6352)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!103, !281, !6261}
!6352 = !{!6353, !6354, !6355}
!6353 = !DILocalVariable(name: "index", arg: 1, scope: !6349, file: !559, line: 79, type: !281)
!6354 = !DILocalVariable(name: "new_region", arg: 2, scope: !6349, file: !559, line: 80, type: !6261)
!6355 = !DILocalVariable(name: "region_conf", scope: !6349, file: !559, line: 82, type: !548)
!6356 = !DILocation(line: 0, scope: !6349)
!6357 = !DILocation(line: 82, column: 2, scope: !6349)
!6358 = !DILocation(line: 82, column: 24, scope: !6349)
!6359 = !DILocation(line: 87, column: 33, scope: !6349)
!6360 = !DILocation(line: 87, column: 14, scope: !6349)
!6361 = !DILocation(line: 87, column: 19, scope: !6349)
!6362 = !DILocation(line: 91, column: 55, scope: !6349)
!6363 = !DILocation(line: 92, column: 16, scope: !6349)
!6364 = !DILocation(line: 92, column: 53, scope: !6349)
!6365 = !DILocation(line: 91, column: 2, scope: !6349)
!6366 = !DILocation(line: 95, column: 9, scope: !6349)
!6367 = !DILocation(line: 97, column: 1, scope: !6349)
!6368 = !DILocation(line: 95, column: 2, scope: !6349)
!6369 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6282, file: !6282, line: 113, type: !6370, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6375)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{null, !6372, !6373, !121, !121}
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 32)
!6373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6374, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6268)
!6375 = !{!6376, !6377, !6378, !6379}
!6376 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6369, file: !6282, line: 114, type: !6372)
!6377 = !DILocalVariable(name: "attr", arg: 2, scope: !6369, file: !6282, line: 115, type: !6373)
!6378 = !DILocalVariable(name: "base", arg: 3, scope: !6369, file: !6282, line: 115, type: !121)
!6379 = !DILocalVariable(name: "size", arg: 4, scope: !6369, file: !6282, line: 115, type: !121)
!6380 = !DILocation(line: 0, scope: !6369)
!6381 = !DILocation(line: 127, column: 23, scope: !6369)
!6382 = !DILocation(line: 127, column: 35, scope: !6369)
!6383 = !DILocation(line: 127, column: 33, scope: !6369)
!6384 = !DILocation(line: 127, column: 10, scope: !6369)
!6385 = !DILocation(line: 127, column: 15, scope: !6369)
!6386 = !DILocation(line: 129, column: 1, scope: !6369)
!6387 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !559, file: !559, line: 57, type: !6388, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6390)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{!103, !281, !546}
!6390 = !{!6391, !6392}
!6391 = !DILocalVariable(name: "index", arg: 1, scope: !6387, file: !559, line: 57, type: !281)
!6392 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6387, file: !559, line: 58, type: !546)
!6393 = !DILocation(line: 0, scope: !6387)
!6394 = !DILocation(line: 61, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6387, file: !559, line: 61, column: 6)
!6396 = !DILocation(line: 61, column: 12, scope: !6395)
!6397 = !DILocation(line: 61, column: 6, scope: !6387)
!6398 = !DILocation(line: 71, column: 2, scope: !6387)
!6399 = !DILocation(line: 73, column: 2, scope: !6387)
!6400 = !DILocation(line: 74, column: 1, scope: !6387)
!6401 = distinct !DISubprogram(name: "region_init", scope: !6282, file: !6282, line: 29, type: !6402, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6404)
!6402 = !DISubroutineType(types: !6403)
!6403 = !{null, !1350, !546}
!6404 = !{!6405, !6406}
!6405 = !DILocalVariable(name: "index", arg: 1, scope: !6401, file: !6282, line: 29, type: !1350)
!6406 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6401, file: !6282, line: 30, type: !546)
!6407 = !DILocation(line: 0, scope: !6401)
!6408 = !DILocation(line: 33, column: 2, scope: !6401)
!6409 = !DILocation(line: 47, column: 28, scope: !6401)
!6410 = !DILocation(line: 47, column: 33, scope: !6401)
!6411 = !DILocation(line: 48, column: 26, scope: !6401)
!6412 = !DILocation(line: 47, column: 12, scope: !6401)
!6413 = !DILocation(line: 49, column: 32, scope: !6401)
!6414 = !DILocation(line: 49, column: 37, scope: !6401)
!6415 = !DILocation(line: 49, column: 12, scope: !6401)
!6416 = !DILocation(line: 53, column: 1, scope: !6401)
!6417 = distinct !DISubprogram(name: "set_region_number", scope: !6418, file: !6418, line: 32, type: !5003, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6419)
!6418 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6419 = !{!6420}
!6420 = !DILocalVariable(name: "index", arg: 1, scope: !6417, file: !6418, line: 32, type: !121)
!6421 = !DILocation(line: 0, scope: !6417)
!6422 = !DILocation(line: 34, column: 11, scope: !6417)
!6423 = !DILocation(line: 35, column: 1, scope: !6417)
!6424 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6282, file: !6282, line: 88, type: !5039, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6425)
!6425 = !{!6426}
!6426 = !DILocalVariable(name: "size", arg: 1, scope: !6424, file: !6282, line: 88, type: !121)
!6427 = !DILocation(line: 0, scope: !6424)
!6428 = !DILocation(line: 91, column: 11, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6424, file: !6282, line: 91, column: 6)
!6430 = !DILocation(line: 91, column: 6, scope: !6424)
!6431 = !DILocation(line: 100, column: 11, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6424, file: !6282, line: 100, column: 6)
!6433 = !DILocation(line: 100, column: 6, scope: !6424)
!6434 = !DILocation(line: 104, column: 35, scope: !6424)
!6435 = !DILocation(line: 104, column: 16, scope: !6424)
!6436 = !DILocation(line: 104, column: 50, scope: !6424)
!6437 = !DILocation(line: 104, column: 72, scope: !6424)
!6438 = !DILocation(line: 104, column: 2, scope: !6424)
!6439 = !DILocation(line: 106, column: 1, scope: !6424)
!6440 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !559, file: !559, line: 307, type: !6441, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6443)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{null, !6261, !202}
!6443 = !{!6444, !6445}
!6444 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6440, file: !559, line: 308, type: !6261)
!6445 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6440, file: !559, line: 308, type: !202)
!6446 = !DILocation(line: 0, scope: !6440)
!6447 = !DILocation(line: 310, column: 6, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6440, file: !559, line: 310, column: 6)
!6449 = !DILocation(line: 316, column: 1, scope: !6440)
!6450 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6282, file: !6282, line: 249, type: !6451, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!103, !6261, !202}
!6453 = !{!6454, !6455, !6456, !6457}
!6454 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6450, file: !6282, line: 250, type: !6261)
!6455 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6450, file: !6282, line: 250, type: !202)
!6456 = !DILocalVariable(name: "mpu_reg_index", scope: !6450, file: !6282, line: 252, type: !103)
!6457 = !DILocalVariable(name: "i", scope: !6458, file: !6282, line: 264, type: !103)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !6282, line: 264, column: 3)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !6282, line: 261, column: 32)
!6460 = distinct !DILexicalBlock(scope: !6450, file: !6282, line: 261, column: 6)
!6461 = !DILocation(line: 0, scope: !6450)
!6462 = !DILocation(line: 252, column: 22, scope: !6450)
!6463 = !DILocation(line: 258, column: 18, scope: !6450)
!6464 = !DILocation(line: 261, column: 20, scope: !6460)
!6465 = !DILocation(line: 261, column: 6, scope: !6450)
!6466 = !DILocation(line: 0, scope: !6458)
!6467 = !DILocation(line: 265, column: 4, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !6282, line: 264, column: 59)
!6469 = distinct !DILexicalBlock(scope: !6458, file: !6282, line: 264, column: 3)
!6470 = !DILocation(line: 264, column: 55, scope: !6469)
!6471 = !DILocation(line: 264, column: 33, scope: !6469)
!6472 = !DILocation(line: 264, column: 3, scope: !6458)
!6473 = distinct !{!6473, !6472, !6474}
!6474 = !DILocation(line: 266, column: 3, scope: !6458)
!6475 = !DILocation(line: 269, column: 2, scope: !6450)
!6476 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6477, file: !6477, line: 218, type: !5003, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6478)
!6477 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6478 = !{!6479}
!6479 = !DILocalVariable(name: "rnr", arg: 1, scope: !6476, file: !6477, line: 218, type: !121)
!6480 = !DILocation(line: 0, scope: !6476)
!6481 = !DILocation(line: 220, column: 12, scope: !6476)
!6482 = !DILocation(line: 221, column: 13, scope: !6476)
!6483 = !DILocation(line: 222, column: 1, scope: !6476)
!6484 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !559, file: !559, line: 326, type: !6485, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !527, retainedNodes: !6487)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{!103}
!6487 = !{!6488}
!6488 = !DILocalVariable(name: "r_index", scope: !6484, file: !559, line: 328, type: !121)
!6489 = !DILocation(line: 330, column: 17, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6484, file: !559, line: 330, column: 6)
!6491 = !DILocation(line: 330, column: 29, scope: !6490)
!6492 = !DILocation(line: 330, column: 6, scope: !6484)
!6493 = !DILocation(line: 347, column: 2, scope: !6484)
!6494 = !DILocation(line: 0, scope: !6484)
!6495 = !DILocation(line: 364, column: 29, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6497, file: !559, line: 364, column: 2)
!6497 = distinct !DILexicalBlock(scope: !6484, file: !559, line: 364, column: 2)
!6498 = !DILocation(line: 364, column: 2, scope: !6497)
!6499 = !DILocation(line: 365, column: 25, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6496, file: !559, line: 364, column: 66)
!6501 = !DILocation(line: 365, column: 3, scope: !6500)
!6502 = !DILocation(line: 364, column: 62, scope: !6496)
!6503 = distinct !{!6503, !6498, !6504}
!6504 = !DILocation(line: 366, column: 2, scope: !6497)
!6505 = !DILocation(line: 369, column: 23, scope: !6484)
!6506 = !DILocation(line: 369, column: 21, scope: !6484)
!6507 = !DILocation(line: 372, column: 2, scope: !6484)
!6508 = !DILocation(line: 443, column: 2, scope: !6484)
!6509 = !DILocation(line: 444, column: 1, scope: !6484)
!6510 = distinct !DISubprogram(name: "strcpy", scope: !6511, file: !6511, line: 20, type: !6512, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6516)
!6511 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6512 = !DISubroutineType(types: !6513)
!6513 = !{!363, !6514, !6515}
!6514 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !363)
!6515 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !192)
!6516 = !{!6517, !6518, !6519}
!6517 = !DILocalVariable(name: "d", arg: 1, scope: !6510, file: !6511, line: 20, type: !6514)
!6518 = !DILocalVariable(name: "s", arg: 2, scope: !6510, file: !6511, line: 20, type: !6515)
!6519 = !DILocalVariable(name: "dest", scope: !6510, file: !6511, line: 22, type: !363)
!6520 = !DILocation(line: 0, scope: !6510)
!6521 = !DILocation(line: 24, column: 9, scope: !6510)
!6522 = !DILocation(line: 24, column: 12, scope: !6510)
!6523 = !DILocation(line: 24, column: 2, scope: !6510)
!6524 = !DILocation(line: 25, column: 6, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6510, file: !6511, line: 24, column: 21)
!6526 = !DILocation(line: 26, column: 4, scope: !6525)
!6527 = !DILocation(line: 27, column: 4, scope: !6525)
!6528 = distinct !{!6528, !6523, !6529}
!6529 = !DILocation(line: 28, column: 2, scope: !6510)
!6530 = !DILocation(line: 30, column: 5, scope: !6510)
!6531 = !DILocation(line: 32, column: 2, scope: !6510)
!6532 = distinct !DISubprogram(name: "strncpy", scope: !6511, file: !6511, line: 42, type: !6533, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6535)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!363, !6514, !6515, !223}
!6535 = !{!6536, !6537, !6538, !6539}
!6536 = !DILocalVariable(name: "d", arg: 1, scope: !6532, file: !6511, line: 42, type: !6514)
!6537 = !DILocalVariable(name: "s", arg: 2, scope: !6532, file: !6511, line: 42, type: !6515)
!6538 = !DILocalVariable(name: "n", arg: 3, scope: !6532, file: !6511, line: 42, type: !223)
!6539 = !DILocalVariable(name: "dest", scope: !6532, file: !6511, line: 44, type: !363)
!6540 = !DILocation(line: 0, scope: !6532)
!6541 = !DILocation(line: 46, column: 12, scope: !6532)
!6542 = !DILocation(line: 46, column: 17, scope: !6532)
!6543 = !DILocation(line: 46, column: 20, scope: !6532)
!6544 = !DILocation(line: 46, column: 23, scope: !6532)
!6545 = !DILocation(line: 46, column: 2, scope: !6532)
!6546 = !DILocation(line: 47, column: 6, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6532, file: !6511, line: 46, column: 32)
!6548 = !DILocation(line: 48, column: 4, scope: !6547)
!6549 = !DILocation(line: 49, column: 4, scope: !6547)
!6550 = !DILocation(line: 50, column: 4, scope: !6547)
!6551 = distinct !{!6551, !6545, !6552}
!6552 = !DILocation(line: 51, column: 2, scope: !6532)
!6553 = !DILocation(line: 54, column: 6, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6532, file: !6511, line: 53, column: 16)
!6555 = !DILocation(line: 55, column: 4, scope: !6554)
!6556 = !DILocation(line: 56, column: 4, scope: !6554)
!6557 = !DILocation(line: 53, column: 11, scope: !6532)
!6558 = !DILocation(line: 53, column: 2, scope: !6532)
!6559 = distinct !{!6559, !6558, !6560}
!6560 = !DILocation(line: 57, column: 2, scope: !6532)
!6561 = !DILocation(line: 59, column: 2, scope: !6532)
!6562 = distinct !DISubprogram(name: "strchr", scope: !6511, file: !6511, line: 69, type: !6563, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6565)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{!363, !192, !103}
!6565 = !{!6566, !6567, !6568}
!6566 = !DILocalVariable(name: "s", arg: 1, scope: !6562, file: !6511, line: 69, type: !192)
!6567 = !DILocalVariable(name: "c", arg: 2, scope: !6562, file: !6511, line: 69, type: !103)
!6568 = !DILocalVariable(name: "tmp", scope: !6562, file: !6511, line: 71, type: !194)
!6569 = !DILocation(line: 0, scope: !6562)
!6570 = !DILocation(line: 73, column: 2, scope: !6562)
!6571 = !DILocation(line: 73, column: 10, scope: !6562)
!6572 = !DILocation(line: 73, column: 13, scope: !6562)
!6573 = !DILocation(line: 73, column: 21, scope: !6562)
!6574 = !DILocation(line: 74, column: 4, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6562, file: !6511, line: 73, column: 38)
!6576 = distinct !{!6576, !6570, !6577}
!6577 = !DILocation(line: 75, column: 2, scope: !6562)
!6578 = !DILocation(line: 77, column: 9, scope: !6562)
!6579 = !DILocation(line: 77, column: 2, scope: !6562)
!6580 = distinct !DISubprogram(name: "strrchr", scope: !6511, file: !6511, line: 87, type: !6563, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6581)
!6581 = !{!6582, !6583, !6584}
!6582 = !DILocalVariable(name: "s", arg: 1, scope: !6580, file: !6511, line: 87, type: !192)
!6583 = !DILocalVariable(name: "c", arg: 2, scope: !6580, file: !6511, line: 87, type: !103)
!6584 = !DILocalVariable(name: "match", scope: !6580, file: !6511, line: 89, type: !363)
!6585 = !DILocation(line: 0, scope: !6580)
!6586 = !DILocation(line: 91, column: 2, scope: !6580)
!6587 = !DILocation(line: 92, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !6511, line: 92, column: 7)
!6589 = distinct !DILexicalBlock(scope: !6580, file: !6511, line: 91, column: 5)
!6590 = !DILocation(line: 92, column: 10, scope: !6588)
!6591 = !DILocation(line: 92, column: 7, scope: !6589)
!6592 = !DILocation(line: 95, column: 13, scope: !6580)
!6593 = !DILocation(line: 95, column: 2, scope: !6589)
!6594 = distinct !{!6594, !6586, !6595}
!6595 = !DILocation(line: 95, column: 15, scope: !6580)
!6596 = !DILocation(line: 97, column: 2, scope: !6580)
!6597 = distinct !DISubprogram(name: "strlen", scope: !6511, file: !6511, line: 107, type: !6598, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6600)
!6598 = !DISubroutineType(types: !6599)
!6599 = !{!223, !192}
!6600 = !{!6601, !6602}
!6601 = !DILocalVariable(name: "s", arg: 1, scope: !6597, file: !6511, line: 107, type: !192)
!6602 = !DILocalVariable(name: "n", scope: !6597, file: !6511, line: 109, type: !223)
!6603 = !DILocation(line: 0, scope: !6597)
!6604 = !DILocation(line: 111, column: 9, scope: !6597)
!6605 = !DILocation(line: 111, column: 12, scope: !6597)
!6606 = !DILocation(line: 111, column: 2, scope: !6597)
!6607 = !DILocation(line: 112, column: 4, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6597, file: !6511, line: 111, column: 21)
!6609 = !DILocation(line: 113, column: 4, scope: !6608)
!6610 = distinct !{!6610, !6606, !6611}
!6611 = !DILocation(line: 114, column: 2, scope: !6597)
!6612 = !DILocation(line: 116, column: 2, scope: !6597)
!6613 = distinct !DISubprogram(name: "strnlen", scope: !6511, file: !6511, line: 126, type: !6614, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6616)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!223, !192, !223}
!6616 = !{!6617, !6618, !6619}
!6617 = !DILocalVariable(name: "s", arg: 1, scope: !6613, file: !6511, line: 126, type: !192)
!6618 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6613, file: !6511, line: 126, type: !223)
!6619 = !DILocalVariable(name: "n", scope: !6613, file: !6511, line: 128, type: !223)
!6620 = !DILocation(line: 0, scope: !6613)
!6621 = !DILocation(line: 130, column: 9, scope: !6613)
!6622 = !DILocation(line: 130, column: 12, scope: !6613)
!6623 = !DILocation(line: 130, column: 20, scope: !6613)
!6624 = !DILocation(line: 130, column: 2, scope: !6613)
!6625 = !DILocation(line: 131, column: 4, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6613, file: !6511, line: 130, column: 35)
!6627 = !DILocation(line: 132, column: 4, scope: !6626)
!6628 = distinct !{!6628, !6624, !6629}
!6629 = !DILocation(line: 133, column: 2, scope: !6613)
!6630 = !DILocation(line: 135, column: 2, scope: !6613)
!6631 = distinct !DISubprogram(name: "strcmp", scope: !6511, file: !6511, line: 145, type: !6632, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6634)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!103, !192, !192}
!6634 = !{!6635, !6636}
!6635 = !DILocalVariable(name: "s1", arg: 1, scope: !6631, file: !6511, line: 145, type: !192)
!6636 = !DILocalVariable(name: "s2", arg: 2, scope: !6631, file: !6511, line: 145, type: !192)
!6637 = !DILocation(line: 0, scope: !6631)
!6638 = !DILocation(line: 147, column: 10, scope: !6631)
!6639 = !DILocation(line: 147, column: 17, scope: !6631)
!6640 = !DILocation(line: 147, column: 14, scope: !6631)
!6641 = !DILocation(line: 147, column: 22, scope: !6631)
!6642 = !DILocation(line: 148, column: 5, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6631, file: !6511, line: 147, column: 40)
!6644 = !DILocation(line: 149, column: 5, scope: !6643)
!6645 = distinct !{!6645, !6646, !6647}
!6646 = !DILocation(line: 147, column: 2, scope: !6631)
!6647 = !DILocation(line: 150, column: 2, scope: !6631)
!6648 = !DILocation(line: 152, column: 9, scope: !6631)
!6649 = !DILocation(line: 152, column: 15, scope: !6631)
!6650 = !DILocation(line: 152, column: 13, scope: !6631)
!6651 = !DILocation(line: 152, column: 2, scope: !6631)
!6652 = distinct !DISubprogram(name: "strncmp", scope: !6511, file: !6511, line: 162, type: !6653, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6655)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!103, !192, !192, !223}
!6655 = !{!6656, !6657, !6658}
!6656 = !DILocalVariable(name: "s1", arg: 1, scope: !6652, file: !6511, line: 162, type: !192)
!6657 = !DILocalVariable(name: "s2", arg: 2, scope: !6652, file: !6511, line: 162, type: !192)
!6658 = !DILocalVariable(name: "n", arg: 3, scope: !6652, file: !6511, line: 162, type: !223)
!6659 = !DILocation(line: 0, scope: !6652)
!6660 = !DILocation(line: 164, column: 17, scope: !6652)
!6661 = !DILocation(line: 164, column: 21, scope: !6652)
!6662 = !DILocation(line: 164, column: 28, scope: !6652)
!6663 = !DILocation(line: 164, column: 25, scope: !6652)
!6664 = !DILocation(line: 164, column: 33, scope: !6652)
!6665 = !DILocation(line: 165, column: 5, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6652, file: !6511, line: 164, column: 51)
!6667 = !DILocation(line: 166, column: 5, scope: !6666)
!6668 = !DILocation(line: 167, column: 4, scope: !6666)
!6669 = distinct !{!6669, !6670, !6671}
!6670 = !DILocation(line: 164, column: 2, scope: !6652)
!6671 = !DILocation(line: 168, column: 2, scope: !6652)
!6672 = !DILocation(line: 170, column: 25, scope: !6652)
!6673 = !DILocation(line: 170, column: 31, scope: !6652)
!6674 = !DILocation(line: 170, column: 29, scope: !6652)
!6675 = !DILocation(line: 170, column: 9, scope: !6652)
!6676 = !DILocation(line: 170, column: 2, scope: !6652)
!6677 = distinct !DISubprogram(name: "strtok_r", scope: !6511, file: !6511, line: 180, type: !6678, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6681)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!363, !363, !192, !6680}
!6680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 32)
!6681 = !{!6682, !6683, !6684, !6685, !6686}
!6682 = !DILocalVariable(name: "str", arg: 1, scope: !6677, file: !6511, line: 180, type: !363)
!6683 = !DILocalVariable(name: "sep", arg: 2, scope: !6677, file: !6511, line: 180, type: !192)
!6684 = !DILocalVariable(name: "state", arg: 3, scope: !6677, file: !6511, line: 180, type: !6680)
!6685 = !DILocalVariable(name: "start", scope: !6677, file: !6511, line: 182, type: !363)
!6686 = !DILocalVariable(name: "end", scope: !6677, file: !6511, line: 182, type: !363)
!6687 = !DILocation(line: 0, scope: !6677)
!6688 = !DILocation(line: 184, column: 10, scope: !6677)
!6689 = !DILocation(line: 184, column: 22, scope: !6677)
!6690 = !DILocation(line: 187, column: 9, scope: !6677)
!6691 = !DILocation(line: 187, column: 16, scope: !6677)
!6692 = !DILocation(line: 187, column: 19, scope: !6677)
!6693 = !DILocation(line: 187, column: 2, scope: !6677)
!6694 = !DILocation(line: 188, column: 8, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6677, file: !6511, line: 187, column: 40)
!6696 = distinct !{!6696, !6693, !6697}
!6697 = !DILocation(line: 189, column: 2, scope: !6677)
!6698 = !DILocation(line: 198, column: 9, scope: !6677)
!6699 = !DILocation(line: 198, column: 18, scope: !6677)
!6700 = !DILocation(line: 198, column: 17, scope: !6677)
!6701 = !DILocation(line: 198, column: 2, scope: !6677)
!6702 = !DILocation(line: 199, column: 6, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6677, file: !6511, line: 198, column: 37)
!6704 = !DILocation(line: 198, column: 14, scope: !6677)
!6705 = distinct !{!6705, !6701, !6706}
!6706 = !DILocation(line: 200, column: 2, scope: !6677)
!6707 = !DILocation(line: 203, column: 8, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !6511, line: 202, column: 20)
!6709 = distinct !DILexicalBlock(scope: !6677, file: !6511, line: 202, column: 6)
!6710 = !DILocation(line: 204, column: 16, scope: !6708)
!6711 = !DILocation(line: 205, column: 2, scope: !6708)
!6712 = !DILocation(line: 210, column: 1, scope: !6677)
!6713 = distinct !DISubprogram(name: "strcat", scope: !6511, file: !6511, line: 212, type: !6512, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6714)
!6714 = !{!6715, !6716}
!6715 = !DILocalVariable(name: "dest", arg: 1, scope: !6713, file: !6511, line: 212, type: !6514)
!6716 = !DILocalVariable(name: "src", arg: 2, scope: !6713, file: !6511, line: 212, type: !6515)
!6717 = !DILocation(line: 0, scope: !6713)
!6718 = !DILocation(line: 214, column: 16, scope: !6713)
!6719 = !DILocation(line: 214, column: 14, scope: !6713)
!6720 = !DILocation(line: 214, column: 2, scope: !6713)
!6721 = !DILocation(line: 215, column: 2, scope: !6713)
!6722 = distinct !DISubprogram(name: "strncat", scope: !6511, file: !6511, line: 218, type: !6533, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6723)
!6723 = !{!6724, !6725, !6726, !6727, !6728}
!6724 = !DILocalVariable(name: "dest", arg: 1, scope: !6722, file: !6511, line: 218, type: !6514)
!6725 = !DILocalVariable(name: "src", arg: 2, scope: !6722, file: !6511, line: 218, type: !6515)
!6726 = !DILocalVariable(name: "n", arg: 3, scope: !6722, file: !6511, line: 219, type: !223)
!6727 = !DILocalVariable(name: "orig_dest", scope: !6722, file: !6511, line: 221, type: !363)
!6728 = !DILocalVariable(name: "len", scope: !6722, file: !6511, line: 222, type: !223)
!6729 = !DILocation(line: 0, scope: !6722)
!6730 = !DILocation(line: 222, column: 15, scope: !6722)
!6731 = !DILocation(line: 224, column: 7, scope: !6722)
!6732 = !DILocation(line: 225, column: 14, scope: !6722)
!6733 = !DILocation(line: 225, column: 19, scope: !6722)
!6734 = !DILocation(line: 225, column: 11, scope: !6722)
!6735 = !DILocation(line: 225, column: 23, scope: !6722)
!6736 = !DILocation(line: 225, column: 28, scope: !6722)
!6737 = !DILocation(line: 225, column: 2, scope: !6722)
!6738 = !DILocation(line: 226, column: 17, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6722, file: !6511, line: 225, column: 38)
!6740 = !DILocation(line: 226, column: 8, scope: !6739)
!6741 = !DILocation(line: 226, column: 11, scope: !6739)
!6742 = distinct !{!6742, !6737, !6743}
!6743 = !DILocation(line: 227, column: 2, scope: !6722)
!6744 = !DILocation(line: 228, column: 8, scope: !6722)
!6745 = !DILocation(line: 230, column: 2, scope: !6722)
!6746 = distinct !DISubprogram(name: "memcmp", scope: !6511, file: !6511, line: 239, type: !6747, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6749)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{!103, !13, !13, !223}
!6749 = !{!6750, !6751, !6752, !6753, !6754}
!6750 = !DILocalVariable(name: "m1", arg: 1, scope: !6746, file: !6511, line: 239, type: !13)
!6751 = !DILocalVariable(name: "m2", arg: 2, scope: !6746, file: !6511, line: 239, type: !13)
!6752 = !DILocalVariable(name: "n", arg: 3, scope: !6746, file: !6511, line: 239, type: !223)
!6753 = !DILocalVariable(name: "c1", scope: !6746, file: !6511, line: 241, type: !192)
!6754 = !DILocalVariable(name: "c2", scope: !6746, file: !6511, line: 242, type: !192)
!6755 = !DILocation(line: 0, scope: !6746)
!6756 = !DILocation(line: 244, column: 7, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6746, file: !6511, line: 244, column: 6)
!6758 = !DILocation(line: 244, column: 6, scope: !6746)
!6759 = !DILocation(line: 248, column: 10, scope: !6746)
!6760 = !DILocation(line: 248, column: 14, scope: !6746)
!6761 = !DILocation(line: 248, column: 19, scope: !6746)
!6762 = !DILocation(line: 248, column: 2, scope: !6746)
!6763 = !DILocation(line: 248, column: 23, scope: !6746)
!6764 = !DILocation(line: 248, column: 30, scope: !6746)
!6765 = !DILocation(line: 248, column: 27, scope: !6746)
!6766 = !DILocation(line: 249, column: 5, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6746, file: !6511, line: 248, column: 36)
!6768 = !DILocation(line: 250, column: 5, scope: !6767)
!6769 = distinct !{!6769, !6762, !6770}
!6770 = !DILocation(line: 251, column: 2, scope: !6746)
!6771 = !DILocation(line: 253, column: 9, scope: !6746)
!6772 = !DILocation(line: 253, column: 15, scope: !6746)
!6773 = !DILocation(line: 253, column: 13, scope: !6746)
!6774 = !DILocation(line: 253, column: 2, scope: !6746)
!6775 = !DILocation(line: 254, column: 1, scope: !6746)
!6776 = distinct !DISubprogram(name: "memmove", scope: !6511, file: !6511, line: 263, type: !6777, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6779)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!102, !102, !13, !223}
!6779 = !{!6780, !6781, !6782, !6783, !6784}
!6780 = !DILocalVariable(name: "d", arg: 1, scope: !6776, file: !6511, line: 263, type: !102)
!6781 = !DILocalVariable(name: "s", arg: 2, scope: !6776, file: !6511, line: 263, type: !13)
!6782 = !DILocalVariable(name: "n", arg: 3, scope: !6776, file: !6511, line: 263, type: !223)
!6783 = !DILocalVariable(name: "dest", scope: !6776, file: !6511, line: 265, type: !363)
!6784 = !DILocalVariable(name: "src", scope: !6776, file: !6511, line: 266, type: !192)
!6785 = !DILocation(line: 0, scope: !6776)
!6786 = !DILocation(line: 268, column: 21, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6776, file: !6511, line: 268, column: 6)
!6788 = !DILocation(line: 268, column: 28, scope: !6787)
!6789 = !DILocation(line: 268, column: 6, scope: !6776)
!6790 = !DILocation(line: 280, column: 12, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6787, file: !6511, line: 278, column: 9)
!6792 = !DILocation(line: 280, column: 3, scope: !6791)
!6793 = !DILocation(line: 275, column: 5, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6511, line: 274, column: 17)
!6795 = distinct !DILexicalBlock(scope: !6787, file: !6511, line: 268, column: 33)
!6796 = !DILocation(line: 276, column: 14, scope: !6794)
!6797 = !DILocation(line: 276, column: 4, scope: !6794)
!6798 = !DILocation(line: 276, column: 12, scope: !6794)
!6799 = !DILocation(line: 274, column: 12, scope: !6795)
!6800 = !DILocation(line: 274, column: 3, scope: !6795)
!6801 = distinct !{!6801, !6800, !6802}
!6802 = !DILocation(line: 277, column: 3, scope: !6795)
!6803 = !DILocation(line: 281, column: 12, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6791, file: !6511, line: 280, column: 17)
!6805 = !DILocation(line: 281, column: 10, scope: !6804)
!6806 = !DILocation(line: 282, column: 8, scope: !6804)
!6807 = !DILocation(line: 283, column: 7, scope: !6804)
!6808 = !DILocation(line: 284, column: 5, scope: !6804)
!6809 = distinct !{!6809, !6792, !6810}
!6810 = !DILocation(line: 285, column: 3, scope: !6791)
!6811 = !DILocation(line: 288, column: 2, scope: !6776)
!6812 = distinct !DISubprogram(name: "memcpy", scope: !6511, file: !6511, line: 298, type: !6813, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6817)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{!102, !6815, !6816, !223}
!6815 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6816 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6817 = !{!6818, !6819, !6820, !6821, !6822}
!6818 = !DILocalVariable(name: "d", arg: 1, scope: !6812, file: !6511, line: 298, type: !6815)
!6819 = !DILocalVariable(name: "s", arg: 2, scope: !6812, file: !6511, line: 298, type: !6816)
!6820 = !DILocalVariable(name: "n", arg: 3, scope: !6812, file: !6511, line: 298, type: !223)
!6821 = !DILocalVariable(name: "d_byte", scope: !6812, file: !6511, line: 302, type: !249)
!6822 = !DILocalVariable(name: "s_byte", scope: !6812, file: !6511, line: 303, type: !2355)
!6823 = !DILocation(line: 0, scope: !6812)
!6824 = !DILocation(line: 337, column: 11, scope: !6812)
!6825 = !DILocation(line: 337, column: 2, scope: !6812)
!6826 = !DILocation(line: 338, column: 25, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6812, file: !6511, line: 337, column: 16)
!6828 = !DILocation(line: 338, column: 17, scope: !6827)
!6829 = !DILocation(line: 338, column: 11, scope: !6827)
!6830 = !DILocation(line: 338, column: 15, scope: !6827)
!6831 = !DILocation(line: 339, column: 4, scope: !6827)
!6832 = distinct !{!6832, !6825, !6833}
!6833 = !DILocation(line: 340, column: 2, scope: !6812)
!6834 = !DILocation(line: 342, column: 2, scope: !6812)
!6835 = distinct !DISubprogram(name: "memset", scope: !6511, file: !6511, line: 352, type: !6836, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6838)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!102, !102, !103, !223}
!6838 = !{!6839, !6840, !6841, !6842, !6843}
!6839 = !DILocalVariable(name: "buf", arg: 1, scope: !6835, file: !6511, line: 352, type: !102)
!6840 = !DILocalVariable(name: "c", arg: 2, scope: !6835, file: !6511, line: 352, type: !103)
!6841 = !DILocalVariable(name: "n", arg: 3, scope: !6835, file: !6511, line: 352, type: !223)
!6842 = !DILocalVariable(name: "d_byte", scope: !6835, file: !6511, line: 356, type: !249)
!6843 = !DILocalVariable(name: "c_byte", scope: !6835, file: !6511, line: 357, type: !203)
!6844 = !DILocation(line: 0, scope: !6835)
!6845 = !DILocation(line: 357, column: 25, scope: !6835)
!6846 = !DILocation(line: 389, column: 11, scope: !6835)
!6847 = !DILocation(line: 389, column: 2, scope: !6835)
!6848 = !DILocation(line: 390, column: 11, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6835, file: !6511, line: 389, column: 16)
!6850 = !DILocation(line: 390, column: 15, scope: !6849)
!6851 = !DILocation(line: 391, column: 4, scope: !6849)
!6852 = distinct !{!6852, !6847, !6853}
!6853 = !DILocation(line: 392, column: 2, scope: !6835)
!6854 = !DILocation(line: 394, column: 2, scope: !6835)
!6855 = distinct !DISubprogram(name: "memchr", scope: !6511, file: !6511, line: 404, type: !6856, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2352, retainedNodes: !6858)
!6856 = !DISubroutineType(types: !6857)
!6857 = !{!102, !13, !103, !223}
!6858 = !{!6859, !6860, !6861, !6862}
!6859 = !DILocalVariable(name: "s", arg: 1, scope: !6855, file: !6511, line: 404, type: !13)
!6860 = !DILocalVariable(name: "c", arg: 2, scope: !6855, file: !6511, line: 404, type: !103)
!6861 = !DILocalVariable(name: "n", arg: 3, scope: !6855, file: !6511, line: 404, type: !223)
!6862 = !DILocalVariable(name: "p", scope: !6863, file: !6511, line: 407, type: !2355)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !6511, line: 406, column: 14)
!6864 = distinct !DILexicalBlock(scope: !6855, file: !6511, line: 406, column: 6)
!6865 = !DILocation(line: 0, scope: !6855)
!6866 = !DILocation(line: 406, column: 8, scope: !6864)
!6867 = !DILocation(line: 406, column: 6, scope: !6855)
!6868 = !DILocation(line: 409, column: 3, scope: !6863)
!6869 = !DILocation(line: 0, scope: !6863)
!6870 = !DILocation(line: 410, column: 8, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6511, line: 410, column: 8)
!6872 = distinct !DILexicalBlock(scope: !6863, file: !6511, line: 409, column: 6)
!6873 = !DILocation(line: 410, column: 13, scope: !6871)
!6874 = !DILocation(line: 410, column: 8, scope: !6872)
!6875 = distinct !{!6875, !6868, !6876}
!6876 = !DILocation(line: 414, column: 20, scope: !6863)
!6877 = !DILocation(line: 417, column: 2, scope: !6855)
!6878 = !DILocation(line: 418, column: 1, scope: !6855)
!6879 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !569, file: !569, line: 23, type: !2574, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6880)
!6880 = !{!6881}
!6881 = !DILocalVariable(name: "hook", arg: 1, scope: !6879, file: !569, line: 23, type: !106)
!6882 = !DILocation(line: 0, scope: !6879)
!6883 = !DILocation(line: 25, column: 15, scope: !6879)
!6884 = !DILocation(line: 26, column: 1, scope: !6879)
!6885 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !569, file: !569, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6886)
!6886 = !{!6887}
!6887 = !DILocalVariable(name: "c", arg: 1, scope: !6885, file: !569, line: 14, type: !103)
!6888 = !DILocation(line: 0, scope: !6885)
!6889 = !DILocation(line: 18, column: 2, scope: !6885)
!6890 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !569, file: !569, line: 28, type: !6891, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6893)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{!103, !103, !565}
!6893 = !{!6894, !6895}
!6894 = !DILocalVariable(name: "c", arg: 1, scope: !6890, file: !569, line: 28, type: !103)
!6895 = !DILocalVariable(name: "stream", arg: 2, scope: !6890, file: !569, line: 28, type: !565)
!6896 = !DILocation(line: 0, scope: !6890)
!6897 = !DILocation(line: 30, column: 27, scope: !6890)
!6898 = !DILocation(line: 30, column: 50, scope: !6890)
!6899 = !DILocation(line: 30, column: 9, scope: !6890)
!6900 = !DILocation(line: 30, column: 2, scope: !6890)
!6901 = distinct !DISubprogram(name: "fputc", scope: !569, file: !569, line: 41, type: !6891, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6902)
!6902 = !{!6903, !6904}
!6903 = !DILocalVariable(name: "c", arg: 1, scope: !6901, file: !569, line: 41, type: !103)
!6904 = !DILocalVariable(name: "stream", arg: 2, scope: !6901, file: !569, line: 41, type: !565)
!6905 = !DILocation(line: 0, scope: !6901)
!6906 = !DILocation(line: 43, column: 9, scope: !6901)
!6907 = !DILocation(line: 43, column: 2, scope: !6901)
!6908 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6909, file: !6909, line: 72, type: !6891, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6910)
!6909 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!6910 = !{!6911, !6912}
!6911 = !DILocalVariable(name: "c", arg: 1, scope: !6908, file: !6909, line: 72, type: !103)
!6912 = !DILocalVariable(name: "stream", arg: 2, scope: !6908, file: !6909, line: 72, type: !565)
!6913 = !DILocation(line: 0, scope: !6908)
!6914 = !DILocation(line: 81, column: 2, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6908, file: !6909, line: 81, column: 2)
!6916 = !{i64 2151151413}
!6917 = !DILocation(line: 82, column: 9, scope: !6908)
!6918 = !DILocation(line: 82, column: 2, scope: !6908)
!6919 = distinct !DISubprogram(name: "fputs", scope: !569, file: !569, line: 46, type: !6920, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6923)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{!103, !6515, !6922}
!6922 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !565)
!6923 = !{!6924, !6925, !6926, !6927}
!6924 = !DILocalVariable(name: "s", arg: 1, scope: !6919, file: !569, line: 46, type: !6515)
!6925 = !DILocalVariable(name: "stream", arg: 2, scope: !6919, file: !569, line: 46, type: !6922)
!6926 = !DILocalVariable(name: "len", scope: !6919, file: !569, line: 48, type: !103)
!6927 = !DILocalVariable(name: "ret", scope: !6919, file: !569, line: 49, type: !103)
!6928 = !DILocation(line: 0, scope: !6919)
!6929 = !DILocation(line: 48, column: 12, scope: !6919)
!6930 = !DILocation(line: 51, column: 8, scope: !6919)
!6931 = !DILocation(line: 53, column: 13, scope: !6919)
!6932 = !DILocation(line: 53, column: 9, scope: !6919)
!6933 = !DILocation(line: 53, column: 2, scope: !6919)
!6934 = distinct !DISubprogram(name: "fwrite", scope: !569, file: !569, line: 99, type: !6935, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6937)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{!223, !6816, !223, !223, !6922}
!6937 = !{!6938, !6939, !6940, !6941}
!6938 = !DILocalVariable(name: "ptr", arg: 1, scope: !6934, file: !569, line: 99, type: !6816)
!6939 = !DILocalVariable(name: "size", arg: 2, scope: !6934, file: !569, line: 99, type: !223)
!6940 = !DILocalVariable(name: "nitems", arg: 3, scope: !6934, file: !569, line: 99, type: !223)
!6941 = !DILocalVariable(name: "stream", arg: 4, scope: !6934, file: !569, line: 100, type: !6922)
!6942 = !DILocation(line: 0, scope: !6934)
!6943 = !DILocation(line: 102, column: 9, scope: !6934)
!6944 = !DILocation(line: 102, column: 2, scope: !6934)
!6945 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6909, file: !6909, line: 96, type: !6935, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6946)
!6946 = !{!6947, !6948, !6949, !6950}
!6947 = !DILocalVariable(name: "ptr", arg: 1, scope: !6945, file: !6909, line: 96, type: !6816)
!6948 = !DILocalVariable(name: "size", arg: 2, scope: !6945, file: !6909, line: 96, type: !223)
!6949 = !DILocalVariable(name: "nitems", arg: 3, scope: !6945, file: !6909, line: 96, type: !223)
!6950 = !DILocalVariable(name: "stream", arg: 4, scope: !6945, file: !6909, line: 96, type: !6922)
!6951 = !DILocation(line: 0, scope: !6945)
!6952 = !DILocation(line: 107, column: 2, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6945, file: !6909, line: 107, column: 2)
!6954 = !{i64 2151151517}
!6955 = !DILocation(line: 108, column: 9, scope: !6945)
!6956 = !DILocation(line: 108, column: 2, scope: !6945)
!6957 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !569, file: !569, line: 56, type: !6935, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !6958)
!6958 = !{!6959, !6960, !6961, !6962, !6963, !6964, !6965, !6966}
!6959 = !DILocalVariable(name: "ptr", arg: 1, scope: !6957, file: !569, line: 56, type: !6816)
!6960 = !DILocalVariable(name: "size", arg: 2, scope: !6957, file: !569, line: 56, type: !223)
!6961 = !DILocalVariable(name: "nitems", arg: 3, scope: !6957, file: !569, line: 57, type: !223)
!6962 = !DILocalVariable(name: "stream", arg: 4, scope: !6957, file: !569, line: 57, type: !6922)
!6963 = !DILocalVariable(name: "i", scope: !6957, file: !569, line: 59, type: !223)
!6964 = !DILocalVariable(name: "j", scope: !6957, file: !569, line: 60, type: !223)
!6965 = !DILocalVariable(name: "p", scope: !6957, file: !569, line: 61, type: !2355)
!6966 = !DILabel(scope: !6957, name: "done", file: !569, line: 82)
!6967 = !DILocation(line: 0, scope: !6957)
!6968 = !DILocation(line: 63, column: 14, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6957, file: !569, line: 63, column: 6)
!6970 = !DILocation(line: 63, column: 24, scope: !6969)
!6971 = !DILocation(line: 72, column: 3, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6957, file: !569, line: 70, column: 5)
!6973 = !DILocation(line: 0, scope: !6972)
!6974 = !DILocation(line: 73, column: 8, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !569, line: 73, column: 8)
!6976 = distinct !DILexicalBlock(scope: !6972, file: !569, line: 72, column: 6)
!6977 = !DILocation(line: 73, column: 29, scope: !6975)
!6978 = !DILocation(line: 73, column: 27, scope: !6975)
!6979 = !DILocation(line: 73, column: 21, scope: !6975)
!6980 = !DILocation(line: 73, column: 33, scope: !6975)
!6981 = !DILocation(line: 73, column: 8, scope: !6976)
!6982 = !DILocation(line: 76, column: 5, scope: !6976)
!6983 = !DILocation(line: 77, column: 14, scope: !6972)
!6984 = !DILocation(line: 77, column: 3, scope: !6976)
!6985 = distinct !{!6985, !6971, !6986}
!6986 = !DILocation(line: 77, column: 17, scope: !6972)
!6987 = !DILocation(line: 79, column: 4, scope: !6972)
!6988 = !DILocation(line: 80, column: 13, scope: !6957)
!6989 = !DILocation(line: 80, column: 2, scope: !6972)
!6990 = distinct !{!6990, !6991, !6992}
!6991 = !DILocation(line: 70, column: 2, scope: !6957)
!6992 = !DILocation(line: 80, column: 16, scope: !6957)
!6993 = !DILocation(line: 82, column: 1, scope: !6957)
!6994 = !DILocation(line: 83, column: 17, scope: !6957)
!6995 = !DILocation(line: 83, column: 2, scope: !6957)
!6996 = !DILocation(line: 84, column: 1, scope: !6957)
!6997 = distinct !DISubprogram(name: "puts", scope: !569, file: !569, line: 106, type: !6998, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !562, retainedNodes: !7000)
!6998 = !DISubroutineType(types: !6999)
!6999 = !{!103, !192}
!7000 = !{!7001}
!7001 = !DILocalVariable(name: "s", arg: 1, scope: !6997, file: !569, line: 106, type: !192)
!7002 = !DILocation(line: 0, scope: !6997)
!7003 = !DILocation(line: 108, column: 6, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6997, file: !569, line: 108, column: 6)
!7005 = !DILocation(line: 108, column: 23, scope: !7004)
!7006 = !DILocation(line: 108, column: 6, scope: !6997)
!7007 = !DILocation(line: 112, column: 9, scope: !6997)
!7008 = !DILocation(line: 112, column: 29, scope: !6997)
!7009 = !DILocation(line: 112, column: 2, scope: !6997)
!7010 = !DILocation(line: 113, column: 1, scope: !6997)
!7011 = distinct !DISubprogram(name: "uart_console_init", scope: !601, file: !601, line: 588, type: !638, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7012)
!7012 = !{!7013}
!7013 = !DILocalVariable(name: "arg", arg: 1, scope: !7011, file: !601, line: 588, type: !617)
!7014 = !DILocation(line: 0, scope: !7011)
!7015 = !DILocation(line: 593, column: 7, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7011, file: !601, line: 593, column: 6)
!7017 = !DILocation(line: 593, column: 6, scope: !7011)
!7018 = !DILocation(line: 597, column: 2, scope: !7011)
!7019 = !DILocation(line: 599, column: 2, scope: !7011)
!7020 = !DILocation(line: 600, column: 1, scope: !7011)
!7021 = distinct !DISubprogram(name: "device_is_ready", scope: !7022, file: !7022, line: 47, type: !7023, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7025)
!7022 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!7023 = !DISubroutineType(types: !7024)
!7024 = !{!205, !617}
!7025 = !{!7026}
!7026 = !DILocalVariable(name: "dev", arg: 1, scope: !7021, file: !7022, line: 47, type: !617)
!7027 = !DILocation(line: 0, scope: !7021)
!7028 = !DILocation(line: 55, column: 2, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7021, file: !7022, line: 55, column: 2)
!7030 = !{i64 2151277035}
!7031 = !DILocation(line: 56, column: 9, scope: !7021)
!7032 = !DILocation(line: 56, column: 2, scope: !7021)
!7033 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !601, file: !601, line: 573, type: !873, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !336)
!7034 = !DILocation(line: 576, column: 2, scope: !7033)
!7035 = !DILocation(line: 579, column: 2, scope: !7033)
!7036 = !DILocation(line: 581, column: 1, scope: !7033)
!7037 = distinct !DISubprogram(name: "console_out", scope: !601, file: !601, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7038)
!7038 = !{!7039}
!7039 = !DILocalVariable(name: "c", arg: 1, scope: !7037, file: !601, line: 77, type: !103)
!7040 = !DILocation(line: 0, scope: !7037)
!7041 = !DILocation(line: 89, column: 11, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7037, file: !601, line: 89, column: 6)
!7043 = !DILocation(line: 89, column: 6, scope: !7037)
!7044 = !DILocation(line: 90, column: 3, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7042, file: !601, line: 89, column: 17)
!7046 = !DILocation(line: 91, column: 2, scope: !7045)
!7047 = !DILocation(line: 92, column: 34, scope: !7037)
!7048 = !DILocation(line: 92, column: 2, scope: !7037)
!7049 = !DILocation(line: 94, column: 2, scope: !7037)
!7050 = distinct !DISubprogram(name: "uart_poll_out", scope: !7051, file: !7051, line: 95, type: !634, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7052)
!7051 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/subsys/console/getline")
!7052 = !{!7053, !7054}
!7053 = !DILocalVariable(name: "dev", arg: 1, scope: !7050, file: !7051, line: 95, type: !617)
!7054 = !DILocalVariable(name: "out_char", arg: 2, scope: !7050, file: !7051, line: 95, type: !203)
!7055 = !DILocation(line: 0, scope: !7050)
!7056 = !DILocation(line: 105, column: 2, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7050, file: !7051, line: 105, column: 2)
!7058 = !{i64 2151360280}
!7059 = !DILocation(line: 106, column: 2, scope: !7050)
!7060 = !DILocation(line: 107, column: 1, scope: !7050)
!7061 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !228, file: !228, line: 574, type: !634, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7062)
!7062 = !{!7063, !7064, !7065}
!7063 = !DILocalVariable(name: "dev", arg: 1, scope: !7061, file: !228, line: 574, type: !617)
!7064 = !DILocalVariable(name: "out_char", arg: 2, scope: !7061, file: !228, line: 575, type: !203)
!7065 = !DILocalVariable(name: "api", scope: !7061, file: !228, line: 577, type: !609)
!7066 = !DILocation(line: 0, scope: !7061)
!7067 = !DILocation(line: 578, column: 40, scope: !7061)
!7068 = !DILocation(line: 580, column: 7, scope: !7061)
!7069 = !DILocation(line: 580, column: 2, scope: !7061)
!7070 = !DILocation(line: 581, column: 1, scope: !7061)
!7071 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !189, file: !189, line: 730, type: !7023, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7072)
!7072 = !{!7073}
!7073 = !DILocalVariable(name: "dev", arg: 1, scope: !7071, file: !189, line: 730, type: !617)
!7074 = !DILocation(line: 0, scope: !7071)
!7075 = !DILocation(line: 732, column: 9, scope: !7071)
!7076 = !DILocation(line: 732, column: 2, scope: !7071)
!7077 = distinct !DISubprogram(name: "uart_register_input", scope: !601, file: !601, line: 549, type: !7078, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7080)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{null, !698, !698, !738}
!7080 = !{!7081, !7082, !7083}
!7081 = !DILocalVariable(name: "avail", arg: 1, scope: !7077, file: !601, line: 549, type: !698)
!7082 = !DILocalVariable(name: "lines", arg: 2, scope: !7077, file: !601, line: 549, type: !698)
!7083 = !DILocalVariable(name: "completion", arg: 3, scope: !7077, file: !601, line: 550, type: !738)
!7084 = !DILocation(line: 0, scope: !7077)
!7085 = !DILocation(line: 552, column: 14, scope: !7077)
!7086 = !DILocation(line: 553, column: 14, scope: !7077)
!7087 = !DILocation(line: 554, column: 16, scope: !7077)
!7088 = !DILocation(line: 556, column: 2, scope: !7077)
!7089 = !DILocation(line: 557, column: 1, scope: !7077)
!7090 = distinct !DISubprogram(name: "console_input_init", scope: !601, file: !601, line: 532, type: !873, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7091)
!7091 = !{!7092}
!7092 = !DILocalVariable(name: "c", scope: !7090, file: !601, line: 534, type: !202)
!7093 = !DILocation(line: 534, column: 2, scope: !7090)
!7094 = !DILocation(line: 536, column: 2, scope: !7090)
!7095 = !DILocation(line: 537, column: 2, scope: !7090)
!7096 = !DILocation(line: 539, column: 2, scope: !7090)
!7097 = !DILocation(line: 542, column: 9, scope: !7090)
!7098 = !DILocation(line: 542, column: 2, scope: !7090)
!7099 = !DILocation(line: 0, scope: !7090)
!7100 = !DILocation(line: 543, column: 3, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7090, file: !601, line: 542, column: 46)
!7102 = distinct !{!7102, !7098, !7103}
!7103 = !DILocation(line: 544, column: 2, scope: !7090)
!7104 = !DILocation(line: 546, column: 2, scope: !7090)
!7105 = !DILocation(line: 547, column: 1, scope: !7090)
!7106 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !7051, file: !7051, line: 265, type: !668, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7107)
!7107 = !{!7108}
!7108 = !DILocalVariable(name: "dev", arg: 1, scope: !7106, file: !7051, line: 265, type: !617)
!7109 = !DILocation(line: 0, scope: !7106)
!7110 = !DILocation(line: 274, column: 2, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7106, file: !7051, line: 274, column: 2)
!7112 = !{i64 2151360756}
!7113 = !DILocation(line: 275, column: 2, scope: !7106)
!7114 = !DILocation(line: 276, column: 1, scope: !7106)
!7115 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !7051, file: !7051, line: 217, type: !668, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7116)
!7116 = !{!7117}
!7117 = !DILocalVariable(name: "dev", arg: 1, scope: !7115, file: !7051, line: 217, type: !617)
!7118 = !DILocation(line: 0, scope: !7115)
!7119 = !DILocation(line: 226, column: 2, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7115, file: !7051, line: 226, column: 2)
!7121 = !{i64 2151360620}
!7122 = !DILocation(line: 227, column: 2, scope: !7115)
!7123 = !DILocation(line: 228, column: 1, scope: !7115)
!7124 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !228, file: !228, line: 1190, type: !7125, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7127)
!7125 = !DISubroutineType(types: !7126)
!7126 = !{null, !617, !684}
!7127 = !{!7128, !7129}
!7128 = !DILocalVariable(name: "dev", arg: 1, scope: !7124, file: !228, line: 1190, type: !617)
!7129 = !DILocalVariable(name: "cb", arg: 2, scope: !7124, file: !228, line: 1191, type: !684)
!7130 = !DILocation(line: 0, scope: !7124)
!7131 = !DILocation(line: 1193, column: 2, scope: !7124)
!7132 = !DILocation(line: 1194, column: 1, scope: !7124)
!7133 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !228, file: !228, line: 1024, type: !638, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7134)
!7134 = !{!7135, !7136}
!7135 = !DILocalVariable(name: "dev", arg: 1, scope: !7133, file: !228, line: 1024, type: !617)
!7136 = !DILocalVariable(name: "api", scope: !7133, file: !228, line: 1027, type: !609)
!7137 = !DILocation(line: 0, scope: !7133)
!7138 = !DILocation(line: 1028, column: 40, scope: !7133)
!7139 = !DILocation(line: 1030, column: 11, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7133, file: !228, line: 1030, column: 6)
!7141 = !DILocation(line: 1030, column: 24, scope: !7140)
!7142 = !DILocation(line: 1030, column: 6, scope: !7133)
!7143 = !DILocation(line: 1033, column: 9, scope: !7133)
!7144 = !DILocation(line: 1033, column: 2, scope: !7133)
!7145 = !DILocation(line: 1038, column: 1, scope: !7133)
!7146 = distinct !DISubprogram(name: "uart_fifo_read", scope: !228, file: !228, line: 785, type: !664, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7147)
!7147 = !{!7148, !7149, !7150, !7151}
!7148 = !DILocalVariable(name: "dev", arg: 1, scope: !7146, file: !228, line: 785, type: !617)
!7149 = !DILocalVariable(name: "rx_data", arg: 2, scope: !7146, file: !228, line: 785, type: !286)
!7150 = !DILocalVariable(name: "size", arg: 3, scope: !7146, file: !228, line: 786, type: !287)
!7151 = !DILocalVariable(name: "api", scope: !7146, file: !228, line: 789, type: !609)
!7152 = !DILocation(line: 0, scope: !7146)
!7153 = !DILocation(line: 790, column: 40, scope: !7146)
!7154 = !DILocation(line: 792, column: 11, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7146, file: !228, line: 792, column: 6)
!7156 = !DILocation(line: 792, column: 21, scope: !7155)
!7157 = !DILocation(line: 792, column: 6, scope: !7146)
!7158 = !DILocation(line: 796, column: 9, scope: !7146)
!7159 = !DILocation(line: 796, column: 2, scope: !7146)
!7160 = !DILocation(line: 803, column: 1, scope: !7146)
!7161 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !7051, file: !7051, line: 241, type: !668, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7162)
!7162 = !{!7163}
!7163 = !DILocalVariable(name: "dev", arg: 1, scope: !7161, file: !7051, line: 241, type: !617)
!7164 = !DILocation(line: 0, scope: !7161)
!7165 = !DILocation(line: 250, column: 2, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7161, file: !7051, line: 250, column: 2)
!7167 = !{i64 2151360688}
!7168 = !DILocation(line: 251, column: 2, scope: !7161)
!7169 = !DILocation(line: 252, column: 1, scope: !7161)
!7170 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !228, file: !228, line: 934, type: !668, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7171)
!7171 = !{!7172, !7173}
!7172 = !DILocalVariable(name: "dev", arg: 1, scope: !7170, file: !228, line: 934, type: !617)
!7173 = !DILocalVariable(name: "api", scope: !7170, file: !228, line: 937, type: !609)
!7174 = !DILocation(line: 0, scope: !7170)
!7175 = !DILocation(line: 938, column: 40, scope: !7170)
!7176 = !DILocation(line: 940, column: 11, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7170, file: !228, line: 940, column: 6)
!7178 = !DILocation(line: 940, column: 25, scope: !7177)
!7179 = !DILocation(line: 940, column: 6, scope: !7170)
!7180 = !DILocation(line: 941, column: 3, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7177, file: !228, line: 940, column: 34)
!7182 = !DILocation(line: 942, column: 2, scope: !7181)
!7183 = !DILocation(line: 946, column: 1, scope: !7170)
!7184 = !DILocation(line: 0, scope: !746)
!7185 = !DILocation(line: 433, column: 9, scope: !746)
!7186 = !DILocation(line: 433, column: 43, scope: !746)
!7187 = !DILocation(line: 434, column: 9, scope: !746)
!7188 = !DILocation(line: 433, column: 2, scope: !746)
!7189 = !DILocation(line: 436, column: 3, scope: !751)
!7190 = !DILocation(line: 439, column: 8, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !751, file: !601, line: 439, column: 7)
!7192 = !DILocation(line: 439, column: 7, scope: !751)
!7193 = distinct !{!7193, !7188, !7194}
!7194 = !DILocation(line: 529, column: 2, scope: !746)
!7195 = !DILocation(line: 0, scope: !751)
!7196 = !DILocation(line: 445, column: 8, scope: !751)
!7197 = !DILocation(line: 446, column: 10, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !751, file: !601, line: 446, column: 7)
!7199 = !DILocation(line: 446, column: 7, scope: !751)
!7200 = !DILocation(line: 460, column: 8, scope: !756)
!7201 = !DILocation(line: 460, column: 7, scope: !751)
!7202 = !DILocation(line: 461, column: 10, scope: !754)
!7203 = !DILocation(line: 0, scope: !754)
!7204 = !DILocation(line: 461, column: 8, scope: !755)
!7205 = !DILocation(line: 462, column: 9, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !755, file: !601, line: 462, column: 8)
!7207 = !DILocation(line: 462, column: 8, scope: !755)
!7208 = !DILocation(line: 477, column: 7, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !751, file: !601, line: 477, column: 7)
!7210 = !DILocation(line: 477, column: 7, scope: !751)
!7211 = !DILocation(line: 478, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7209, file: !601, line: 477, column: 46)
!7213 = !DILocation(line: 478, column: 22, scope: !7212)
!7214 = !DILocation(line: 478, column: 4, scope: !7212)
!7215 = !DILocation(line: 479, column: 4, scope: !7212)
!7216 = !DILocation(line: 483, column: 7, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !751, file: !601, line: 483, column: 7)
!7218 = !DILocation(line: 483, column: 7, scope: !751)
!7219 = !DILocation(line: 484, column: 13, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !601, line: 484, column: 8)
!7221 = distinct !DILexicalBlock(scope: !7217, file: !601, line: 483, column: 55)
!7222 = !DILocation(line: 484, column: 8, scope: !7221)
!7223 = !DILocation(line: 485, column: 5, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7220, file: !601, line: 484, column: 26)
!7225 = !DILocation(line: 486, column: 5, scope: !7224)
!7226 = !DILocation(line: 487, column: 4, scope: !7224)
!7227 = !DILocation(line: 493, column: 16, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !751, file: !601, line: 493, column: 7)
!7229 = !DILocation(line: 493, column: 8, scope: !7228)
!7230 = !DILocation(line: 493, column: 7, scope: !751)
!7231 = !DILocation(line: 494, column: 4, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !601, line: 493, column: 23)
!7233 = !DILocation(line: 497, column: 9, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !601, line: 497, column: 9)
!7235 = distinct !DILexicalBlock(scope: !7232, file: !601, line: 494, column: 18)
!7236 = !DILocation(line: 497, column: 13, scope: !7234)
!7237 = !DILocation(line: 497, column: 9, scope: !7235)
!7238 = !DILocation(line: 498, column: 16, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7234, file: !601, line: 497, column: 18)
!7240 = !DILocation(line: 498, column: 26, scope: !7239)
!7241 = !DILocation(line: 498, column: 34, scope: !7239)
!7242 = !DILocation(line: 498, column: 6, scope: !7239)
!7243 = !DILocation(line: 499, column: 5, scope: !7239)
!7244 = !DILocation(line: 502, column: 5, scope: !7235)
!7245 = !DILocation(line: 503, column: 5, scope: !7235)
!7246 = !DILocation(line: 505, column: 5, scope: !7235)
!7247 = !DILocation(line: 505, column: 15, scope: !7235)
!7248 = !DILocation(line: 505, column: 21, scope: !7235)
!7249 = !DILocation(line: 505, column: 19, scope: !7235)
!7250 = !DILocation(line: 505, column: 26, scope: !7235)
!7251 = !DILocation(line: 506, column: 5, scope: !7235)
!7252 = !DILocation(line: 507, column: 5, scope: !7235)
!7253 = !DILocation(line: 508, column: 9, scope: !7235)
!7254 = !DILocation(line: 509, column: 9, scope: !7235)
!7255 = !DILocation(line: 510, column: 5, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7235, file: !601, line: 510, column: 5)
!7257 = !DILocation(line: 511, column: 9, scope: !7235)
!7258 = !DILocation(line: 512, column: 5, scope: !7235)
!7259 = !DILocation(line: 514, column: 9, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7235, file: !601, line: 514, column: 9)
!7261 = !DILocation(line: 514, column: 23, scope: !7260)
!7262 = !DILocation(line: 515, column: 27, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7260, file: !601, line: 514, column: 32)
!7264 = !DILocation(line: 515, column: 38, scope: !7263)
!7265 = !DILocation(line: 515, column: 13, scope: !7263)
!7266 = !DILocation(line: 515, column: 10, scope: !7263)
!7267 = !DILocation(line: 516, column: 5, scope: !7263)
!7268 = !DILocation(line: 526, column: 7, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !751, file: !601, line: 526, column: 7)
!7270 = !DILocation(line: 526, column: 13, scope: !7269)
!7271 = !DILocation(line: 526, column: 11, scope: !7269)
!7272 = !DILocation(line: 526, column: 17, scope: !7269)
!7273 = !DILocation(line: 526, column: 7, scope: !751)
!7274 = !DILocation(line: 527, column: 17, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7269, file: !601, line: 526, column: 42)
!7276 = !DILocation(line: 527, column: 30, scope: !7275)
!7277 = !DILocation(line: 527, column: 4, scope: !7275)
!7278 = !DILocation(line: 528, column: 3, scope: !7275)
!7279 = !DILocation(line: 530, column: 1, scope: !746)
!7280 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !228, file: !228, line: 1163, type: !682, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7281)
!7281 = !{!7282, !7283, !7284, !7285}
!7282 = !DILocalVariable(name: "dev", arg: 1, scope: !7280, file: !228, line: 1163, type: !617)
!7283 = !DILocalVariable(name: "cb", arg: 2, scope: !7280, file: !228, line: 1164, type: !684)
!7284 = !DILocalVariable(name: "user_data", arg: 3, scope: !7280, file: !228, line: 1165, type: !102)
!7285 = !DILocalVariable(name: "api", scope: !7280, file: !228, line: 1168, type: !609)
!7286 = !DILocation(line: 0, scope: !7280)
!7287 = !DILocation(line: 1169, column: 40, scope: !7280)
!7288 = !DILocation(line: 1171, column: 11, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7280, file: !228, line: 1171, column: 6)
!7290 = !DILocation(line: 1171, column: 20, scope: !7289)
!7291 = !DILocation(line: 1171, column: 29, scope: !7289)
!7292 = !DILocation(line: 1171, column: 46, scope: !7289)
!7293 = !DILocation(line: 1171, column: 6, scope: !7280)
!7294 = !DILocation(line: 1172, column: 3, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7289, file: !228, line: 1171, column: 56)
!7296 = !DILocation(line: 1173, column: 2, scope: !7295)
!7297 = !DILocation(line: 1179, column: 1, scope: !7280)
!7298 = distinct !DISubprogram(name: "uart_irq_update", scope: !7051, file: !7051, line: 360, type: !638, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7299)
!7299 = !{!7300}
!7300 = !DILocalVariable(name: "dev", arg: 1, scope: !7298, file: !7051, line: 360, type: !617)
!7301 = !DILocation(line: 0, scope: !7298)
!7302 = !DILocation(line: 368, column: 2, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7298, file: !7051, line: 368, column: 2)
!7304 = !{i64 2151361028}
!7305 = !DILocation(line: 369, column: 9, scope: !7298)
!7306 = !DILocation(line: 369, column: 2, scope: !7298)
!7307 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !7051, file: !7051, line: 337, type: !638, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7308)
!7308 = !{!7309}
!7309 = !DILocalVariable(name: "dev", arg: 1, scope: !7307, file: !7051, line: 337, type: !617)
!7310 = !DILocation(line: 0, scope: !7307)
!7311 = !DILocation(line: 345, column: 2, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7307, file: !7051, line: 345, column: 2)
!7313 = !{i64 2151360960}
!7314 = !DILocation(line: 346, column: 9, scope: !7307)
!7315 = !DILocation(line: 346, column: 2, scope: !7307)
!7316 = distinct !DISubprogram(name: "read_uart", scope: !601, file: !601, line: 127, type: !7317, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7319)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!103, !617, !286, !32}
!7319 = !{!7320, !7321, !7322, !7323}
!7320 = !DILocalVariable(name: "uart", arg: 1, scope: !7316, file: !601, line: 127, type: !617)
!7321 = !DILocalVariable(name: "buf", arg: 2, scope: !7316, file: !601, line: 127, type: !286)
!7322 = !DILocalVariable(name: "size", arg: 3, scope: !7316, file: !601, line: 128, type: !32)
!7323 = !DILocalVariable(name: "rx", scope: !7316, file: !601, line: 130, type: !103)
!7324 = !DILocation(line: 0, scope: !7316)
!7325 = !DILocation(line: 132, column: 7, scope: !7316)
!7326 = !DILocation(line: 133, column: 9, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7316, file: !601, line: 133, column: 6)
!7328 = !DILocation(line: 133, column: 6, scope: !7316)
!7329 = !DILocation(line: 135, column: 3, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7327, file: !601, line: 133, column: 14)
!7331 = !DILocation(line: 137, column: 3, scope: !7330)
!7332 = !DILocation(line: 141, column: 1, scope: !7316)
!7333 = distinct !DISubprogram(name: "k_queue_get", scope: !2876, file: !2876, line: 649, type: !7334, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7341)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{!102, !7336, !7337}
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !7338)
!7338 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !7339)
!7339 = !{!7340}
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !7338, file: !220, line: 66, baseType: !219, size: 64)
!7341 = !{!7342, !7343}
!7342 = !DILocalVariable(name: "queue", arg: 1, scope: !7333, file: !2876, line: 649, type: !7336)
!7343 = !DILocalVariable(name: "timeout", arg: 2, scope: !7333, file: !2876, line: 649, type: !7337)
!7344 = !DILocation(line: 0, scope: !7333)
!7345 = !DILocation(line: 658, column: 2, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7333, file: !2876, line: 658, column: 2)
!7347 = !{i64 2151099183}
!7348 = !DILocation(line: 659, column: 9, scope: !7333)
!7349 = !DILocation(line: 659, column: 2, scope: !7333)
!7350 = distinct !DISubprogram(name: "atomic_test_bit", scope: !766, file: !766, line: 131, type: !7351, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7355)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{!205, !7353, !103}
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 32)
!7354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !765)
!7355 = !{!7356, !7357, !7358}
!7356 = !DILocalVariable(name: "target", arg: 1, scope: !7350, file: !766, line: 131, type: !7353)
!7357 = !DILocalVariable(name: "bit", arg: 2, scope: !7350, file: !766, line: 131, type: !103)
!7358 = !DILocalVariable(name: "val", scope: !7350, file: !766, line: 133, type: !7359)
!7359 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !766, line: 23, baseType: !765)
!7360 = !DILocation(line: 0, scope: !7350)
!7361 = !DILocation(line: 133, column: 21, scope: !7350)
!7362 = !DILocation(line: 135, column: 27, scope: !7350)
!7363 = !DILocation(line: 135, column: 50, scope: !7350)
!7364 = !DILocation(line: 135, column: 2, scope: !7350)
!7365 = distinct !DISubprogram(name: "handle_ansi", scope: !601, file: !601, line: 232, type: !7366, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7368)
!7366 = !DISubroutineType(types: !7367)
!7367 = !{null, !202, !363}
!7368 = !{!7369, !7370, !7371}
!7369 = !DILocalVariable(name: "byte", arg: 1, scope: !7365, file: !601, line: 232, type: !202)
!7370 = !DILocalVariable(name: "line", arg: 2, scope: !7365, file: !601, line: 232, type: !363)
!7371 = !DILabel(scope: !7365, name: "ansi_cmd", file: !601, line: 268)
!7372 = !DILocation(line: 0, scope: !7365)
!7373 = !DILocation(line: 234, column: 6, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7365, file: !601, line: 234, column: 6)
!7375 = !DILocation(line: 234, column: 6, scope: !7365)
!7376 = !DILocation(line: 235, column: 16, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !601, line: 235, column: 7)
!7378 = distinct !DILexicalBlock(scope: !7374, file: !601, line: 234, column: 61)
!7379 = !DILocation(line: 235, column: 8, scope: !7377)
!7380 = !DILocation(line: 235, column: 7, scope: !7378)
!7381 = !DILocation(line: 236, column: 13, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !601, line: 235, column: 23)
!7383 = !DILocation(line: 237, column: 4, scope: !7382)
!7384 = !DILocation(line: 240, column: 3, scope: !7378)
!7385 = !DILocation(line: 241, column: 19, scope: !7378)
!7386 = !DILocation(line: 241, column: 12, scope: !7378)
!7387 = !DILocation(line: 242, column: 14, scope: !7378)
!7388 = !DILocation(line: 243, column: 3, scope: !7378)
!7389 = !DILocation(line: 246, column: 6, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7365, file: !601, line: 246, column: 6)
!7391 = !DILocation(line: 246, column: 6, scope: !7365)
!7392 = !DILocation(line: 247, column: 15, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !601, line: 247, column: 7)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !601, line: 246, column: 49)
!7395 = !DILocation(line: 247, column: 7, scope: !7393)
!7396 = !DILocation(line: 247, column: 7, scope: !7394)
!7397 = !DILocation(line: 248, column: 8, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7399, file: !601, line: 248, column: 8)
!7399 = distinct !DILexicalBlock(scope: !7393, file: !601, line: 247, column: 22)
!7400 = !DILocation(line: 248, column: 8, scope: !7399)
!7401 = !DILocation(line: 249, column: 16, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7398, file: !601, line: 248, column: 53)
!7403 = !DILocation(line: 250, column: 24, scope: !7402)
!7404 = !DILocation(line: 250, column: 16, scope: !7402)
!7405 = !DILocation(line: 251, column: 4, scope: !7402)
!7406 = !DILocation(line: 252, column: 14, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7398, file: !601, line: 251, column: 11)
!7408 = !DILocation(line: 253, column: 22, scope: !7407)
!7409 = !DILocation(line: 253, column: 14, scope: !7407)
!7410 = !DILocation(line: 259, column: 12, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7394, file: !601, line: 259, column: 7)
!7412 = !DILocation(line: 259, column: 19, scope: !7411)
!7413 = !DILocation(line: 260, column: 8, scope: !7411)
!7414 = !DILocation(line: 259, column: 7, scope: !7394)
!7415 = !DILocation(line: 264, column: 3, scope: !7394)
!7416 = !DILocation(line: 265, column: 3, scope: !7394)
!7417 = !DILocation(line: 266, column: 2, scope: !7394)
!7418 = !DILocation(line: 268, column: 1, scope: !7365)
!7419 = !DILocation(line: 269, column: 2, scope: !7365)
!7420 = !DILocation(line: 271, column: 7, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !601, line: 271, column: 7)
!7422 = distinct !DILexicalBlock(scope: !7365, file: !601, line: 269, column: 16)
!7423 = !DILocation(line: 271, column: 18, scope: !7421)
!7424 = !DILocation(line: 271, column: 16, scope: !7421)
!7425 = !DILocation(line: 271, column: 7, scope: !7422)
!7426 = !DILocation(line: 275, column: 7, scope: !7422)
!7427 = !DILocation(line: 276, column: 7, scope: !7422)
!7428 = !DILocation(line: 277, column: 3, scope: !7422)
!7429 = !DILocation(line: 278, column: 3, scope: !7422)
!7430 = !DILocation(line: 280, column: 7, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7422, file: !601, line: 280, column: 7)
!7432 = !DILocation(line: 280, column: 18, scope: !7431)
!7433 = !DILocation(line: 280, column: 16, scope: !7431)
!7434 = !DILocation(line: 280, column: 7, scope: !7422)
!7435 = !DILocation(line: 284, column: 7, scope: !7422)
!7436 = !DILocation(line: 285, column: 7, scope: !7422)
!7437 = !DILocation(line: 286, column: 3, scope: !7422)
!7438 = !DILocation(line: 287, column: 3, scope: !7422)
!7439 = !DILocation(line: 289, column: 8, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7422, file: !601, line: 289, column: 7)
!7441 = !DILocation(line: 289, column: 7, scope: !7422)
!7442 = !DILocation(line: 293, column: 19, scope: !7422)
!7443 = !DILocation(line: 293, column: 3, scope: !7422)
!7444 = !DILocation(line: 294, column: 10, scope: !7422)
!7445 = !DILocation(line: 294, column: 7, scope: !7422)
!7446 = !DILocation(line: 295, column: 7, scope: !7422)
!7447 = !DILocation(line: 296, column: 3, scope: !7422)
!7448 = !DILocation(line: 298, column: 8, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7422, file: !601, line: 298, column: 7)
!7450 = !DILocation(line: 298, column: 7, scope: !7422)
!7451 = !DILocation(line: 302, column: 18, scope: !7422)
!7452 = !DILocation(line: 302, column: 3, scope: !7422)
!7453 = !DILocation(line: 303, column: 10, scope: !7422)
!7454 = !DILocation(line: 303, column: 7, scope: !7422)
!7455 = !DILocation(line: 304, column: 7, scope: !7422)
!7456 = !DILocation(line: 305, column: 3, scope: !7422)
!7457 = !DILocation(line: 307, column: 8, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7422, file: !601, line: 307, column: 7)
!7459 = !DILocation(line: 307, column: 7, scope: !7422)
!7460 = !DILocation(line: 311, column: 3, scope: !7422)
!7461 = !DILocation(line: 312, column: 18, scope: !7422)
!7462 = !DILocation(line: 312, column: 13, scope: !7422)
!7463 = !DILocation(line: 312, column: 24, scope: !7422)
!7464 = !DILocation(line: 312, column: 3, scope: !7422)
!7465 = !DILocation(line: 313, column: 3, scope: !7422)
!7466 = !DILocation(line: 318, column: 2, scope: !7365)
!7467 = !DILocation(line: 319, column: 1, scope: !7365)
!7468 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !766, file: !766, line: 152, type: !7469, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7472)
!7469 = !DISubroutineType(types: !7470)
!7470 = !{!205, !7471, !103}
!7471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!7472 = !{!7473, !7474, !7475, !7476}
!7473 = !DILocalVariable(name: "target", arg: 1, scope: !7468, file: !766, line: 152, type: !7471)
!7474 = !DILocalVariable(name: "bit", arg: 2, scope: !7468, file: !766, line: 152, type: !103)
!7475 = !DILocalVariable(name: "mask", scope: !7468, file: !766, line: 154, type: !7359)
!7476 = !DILocalVariable(name: "old", scope: !7468, file: !766, line: 155, type: !7359)
!7477 = !DILocation(line: 0, scope: !7468)
!7478 = !DILocation(line: 154, column: 22, scope: !7468)
!7479 = !DILocation(line: 157, column: 45, scope: !7468)
!7480 = !DILocation(line: 157, column: 8, scope: !7468)
!7481 = !DILocation(line: 159, column: 14, scope: !7468)
!7482 = !DILocation(line: 159, column: 22, scope: !7468)
!7483 = !DILocation(line: 159, column: 2, scope: !7468)
!7484 = distinct !DISubprogram(name: "atomic_set_bit", scope: !766, file: !766, line: 217, type: !7485, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7487)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{null, !7471, !103}
!7487 = !{!7488, !7489, !7490}
!7488 = !DILocalVariable(name: "target", arg: 1, scope: !7484, file: !766, line: 217, type: !7471)
!7489 = !DILocalVariable(name: "bit", arg: 2, scope: !7484, file: !766, line: 217, type: !103)
!7490 = !DILocalVariable(name: "mask", scope: !7484, file: !766, line: 219, type: !7359)
!7491 = !DILocation(line: 0, scope: !7484)
!7492 = !DILocation(line: 219, column: 22, scope: !7484)
!7493 = !DILocation(line: 221, column: 8, scope: !7484)
!7494 = !DILocation(line: 222, column: 1, scope: !7484)
!7495 = distinct !DISubprogram(name: "isprint", scope: !4193, file: !4193, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7496)
!7496 = !{!7497}
!7497 = !DILocalVariable(name: "c", arg: 1, scope: !7495, file: !4193, line: 37, type: !103)
!7498 = !DILocation(line: 0, scope: !7495)
!7499 = !DILocation(line: 39, column: 38, scope: !7495)
!7500 = !DILocation(line: 39, column: 2, scope: !7495)
!7501 = distinct !DISubprogram(name: "del_char", scope: !601, file: !601, line: 191, type: !7502, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7504)
!7502 = !DISubroutineType(types: !7503)
!7503 = !{null, !363, !202}
!7504 = !{!7505, !7506}
!7505 = !DILocalVariable(name: "pos", arg: 1, scope: !7501, file: !601, line: 191, type: !363)
!7506 = !DILocalVariable(name: "end", arg: 2, scope: !7501, file: !601, line: 191, type: !202)
!7507 = !DILocation(line: 0, scope: !7501)
!7508 = !DILocation(line: 193, column: 2, scope: !7501)
!7509 = !DILocation(line: 195, column: 10, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7501, file: !601, line: 195, column: 6)
!7511 = !DILocation(line: 195, column: 6, scope: !7501)
!7512 = !DILocation(line: 196, column: 3, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7510, file: !601, line: 195, column: 17)
!7514 = !DILocation(line: 197, column: 3, scope: !7513)
!7515 = !DILocation(line: 198, column: 3, scope: !7513)
!7516 = !DILocation(line: 201, column: 2, scope: !7501)
!7517 = !DILocation(line: 203, column: 2, scope: !7501)
!7518 = !DILocation(line: 203, column: 12, scope: !7501)
!7519 = !DILocation(line: 204, column: 16, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7501, file: !601, line: 203, column: 20)
!7521 = !DILocation(line: 204, column: 10, scope: !7520)
!7522 = !DILocation(line: 204, column: 8, scope: !7520)
!7523 = !DILocation(line: 205, column: 3, scope: !7520)
!7524 = !DILocation(line: 203, column: 15, scope: !7501)
!7525 = distinct !{!7525, !7517, !7526}
!7526 = !DILocation(line: 206, column: 2, scope: !7501)
!7527 = !DILocation(line: 208, column: 2, scope: !7501)
!7528 = !DILocation(line: 211, column: 2, scope: !7501)
!7529 = !DILocation(line: 212, column: 1, scope: !7501)
!7530 = distinct !DISubprogram(name: "insert_char", scope: !601, file: !601, line: 163, type: !7531, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7533)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{null, !363, !194, !202}
!7533 = !{!7534, !7535, !7536, !7537}
!7534 = !DILocalVariable(name: "pos", arg: 1, scope: !7530, file: !601, line: 163, type: !363)
!7535 = !DILocalVariable(name: "c", arg: 2, scope: !7530, file: !601, line: 163, type: !194)
!7536 = !DILocalVariable(name: "end", arg: 3, scope: !7530, file: !601, line: 163, type: !202)
!7537 = !DILocalVariable(name: "tmp", scope: !7530, file: !601, line: 165, type: !194)
!7538 = !DILocation(line: 0, scope: !7530)
!7539 = !DILocation(line: 168, column: 2, scope: !7530)
!7540 = !DILocation(line: 170, column: 10, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7530, file: !601, line: 170, column: 6)
!7542 = !DILocation(line: 170, column: 6, scope: !7530)
!7543 = !DILocation(line: 171, column: 8, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7541, file: !601, line: 170, column: 17)
!7545 = !DILocation(line: 172, column: 3, scope: !7544)
!7546 = !DILocation(line: 175, column: 8, scope: !7530)
!7547 = !DILocation(line: 176, column: 11, scope: !7530)
!7548 = !DILocation(line: 178, column: 2, scope: !7530)
!7549 = !DILocation(line: 180, column: 2, scope: !7530)
!7550 = !DILocation(line: 180, column: 12, scope: !7530)
!7551 = !DILocation(line: 181, column: 3, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7530, file: !601, line: 180, column: 20)
!7553 = !DILocation(line: 182, column: 7, scope: !7552)
!7554 = !DILocation(line: 183, column: 12, scope: !7552)
!7555 = !DILocation(line: 180, column: 15, scope: !7530)
!7556 = distinct !{!7556, !7549, !7557}
!7557 = !DILocation(line: 185, column: 2, scope: !7530)
!7558 = !DILocation(line: 188, column: 2, scope: !7530)
!7559 = !DILocation(line: 189, column: 1, scope: !7530)
!7560 = distinct !DISubprogram(name: "cursor_save", scope: !601, file: !601, line: 153, type: !873, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !336)
!7561 = !DILocation(line: 155, column: 2, scope: !7560)
!7562 = !DILocation(line: 156, column: 1, scope: !7560)
!7563 = distinct !DISubprogram(name: "cursor_restore", scope: !601, file: !601, line: 158, type: !873, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !336)
!7564 = !DILocation(line: 160, column: 2, scope: !7563)
!7565 = !DILocation(line: 161, column: 1, scope: !7563)
!7566 = distinct !DISubprogram(name: "atomic_or", scope: !7567, file: !7567, line: 279, type: !7568, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7570)
!7567 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!7359, !7471, !7359}
!7570 = !{!7571, !7572}
!7571 = !DILocalVariable(name: "target", arg: 1, scope: !7566, file: !7567, line: 279, type: !7471)
!7572 = !DILocalVariable(name: "value", arg: 2, scope: !7566, file: !7567, line: 279, type: !7359)
!7573 = !DILocation(line: 0, scope: !7566)
!7574 = !DILocation(line: 281, column: 9, scope: !7566)
!7575 = !DILocation(line: 281, column: 2, scope: !7566)
!7576 = distinct !DISubprogram(name: "atomic_and", scope: !7567, file: !7567, line: 319, type: !7568, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7577)
!7577 = !{!7578, !7579}
!7578 = !DILocalVariable(name: "target", arg: 1, scope: !7576, file: !7567, line: 319, type: !7471)
!7579 = !DILocalVariable(name: "value", arg: 2, scope: !7576, file: !7567, line: 319, type: !7359)
!7580 = !DILocation(line: 0, scope: !7576)
!7581 = !DILocation(line: 321, column: 9, scope: !7576)
!7582 = !DILocation(line: 321, column: 2, scope: !7576)
!7583 = distinct !DISubprogram(name: "isdigit", scope: !4193, file: !4193, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7584)
!7584 = !{!7585}
!7585 = !DILocalVariable(name: "a", arg: 1, scope: !7583, file: !4193, line: 43, type: !103)
!7586 = !DILocation(line: 0, scope: !7583)
!7587 = !DILocation(line: 45, column: 29, scope: !7583)
!7588 = !DILocation(line: 45, column: 45, scope: !7583)
!7589 = !DILocation(line: 45, column: 2, scope: !7583)
!7590 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !766, file: !766, line: 176, type: !7469, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7591)
!7591 = !{!7592, !7593, !7594, !7595}
!7592 = !DILocalVariable(name: "target", arg: 1, scope: !7590, file: !766, line: 176, type: !7471)
!7593 = !DILocalVariable(name: "bit", arg: 2, scope: !7590, file: !766, line: 176, type: !103)
!7594 = !DILocalVariable(name: "mask", scope: !7590, file: !766, line: 178, type: !7359)
!7595 = !DILocalVariable(name: "old", scope: !7590, file: !766, line: 179, type: !7359)
!7596 = !DILocation(line: 0, scope: !7590)
!7597 = !DILocation(line: 181, column: 8, scope: !7590)
!7598 = !DILocation(line: 183, column: 14, scope: !7590)
!7599 = !DILocation(line: 183, column: 22, scope: !7590)
!7600 = !DILocation(line: 183, column: 2, scope: !7590)
!7601 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !766, file: !766, line: 198, type: !7485, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7602)
!7602 = !{!7603, !7604, !7605}
!7603 = !DILocalVariable(name: "target", arg: 1, scope: !7601, file: !766, line: 198, type: !7471)
!7604 = !DILocalVariable(name: "bit", arg: 2, scope: !7601, file: !766, line: 198, type: !103)
!7605 = !DILocalVariable(name: "mask", scope: !7601, file: !766, line: 200, type: !7359)
!7606 = !DILocation(line: 0, scope: !7601)
!7607 = !DILocation(line: 200, column: 22, scope: !7601)
!7608 = !DILocation(line: 202, column: 45, scope: !7601)
!7609 = !DILocation(line: 202, column: 8, scope: !7601)
!7610 = !DILocation(line: 203, column: 1, scope: !7601)
!7611 = distinct !DISubprogram(name: "cursor_backward", scope: !601, file: !601, line: 148, type: !4993, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7612)
!7612 = !{!7613}
!7613 = !DILocalVariable(name: "count", arg: 1, scope: !7611, file: !601, line: 148, type: !32)
!7614 = !DILocation(line: 0, scope: !7611)
!7615 = !DILocation(line: 150, column: 2, scope: !7611)
!7616 = !DILocation(line: 151, column: 1, scope: !7611)
!7617 = distinct !DISubprogram(name: "cursor_forward", scope: !601, file: !601, line: 143, type: !4993, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7618)
!7618 = !{!7619}
!7619 = !DILocalVariable(name: "count", arg: 1, scope: !7617, file: !601, line: 143, type: !32)
!7620 = !DILocation(line: 0, scope: !7617)
!7621 = !DILocation(line: 145, column: 2, scope: !7617)
!7622 = !DILocation(line: 146, column: 1, scope: !7617)
!7623 = distinct !DISubprogram(name: "atomic_get", scope: !7567, file: !7567, line: 159, type: !7624, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7626)
!7624 = !DISubroutineType(types: !7625)
!7625 = !{!7359, !7353}
!7626 = !{!7627}
!7627 = !DILocalVariable(name: "target", arg: 1, scope: !7623, file: !7567, line: 159, type: !7353)
!7628 = !DILocation(line: 0, scope: !7623)
!7629 = !DILocation(line: 161, column: 9, scope: !7623)
!7630 = !DILocation(line: 161, column: 2, scope: !7623)
!7631 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !228, file: !228, line: 1093, type: !638, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7632)
!7632 = !{!7633, !7634}
!7633 = !DILocalVariable(name: "dev", arg: 1, scope: !7631, file: !228, line: 1093, type: !617)
!7634 = !DILocalVariable(name: "api", scope: !7631, file: !228, line: 1096, type: !609)
!7635 = !DILocation(line: 0, scope: !7631)
!7636 = !DILocation(line: 1097, column: 40, scope: !7631)
!7637 = !DILocation(line: 1099, column: 11, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7631, file: !228, line: 1099, column: 6)
!7639 = !DILocation(line: 1099, column: 26, scope: !7638)
!7640 = !DILocation(line: 1099, column: 6, scope: !7631)
!7641 = !DILocation(line: 1102, column: 9, scope: !7631)
!7642 = !DILocation(line: 1102, column: 2, scope: !7631)
!7643 = !DILocation(line: 1107, column: 1, scope: !7631)
!7644 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !228, file: !228, line: 1136, type: !638, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7645)
!7645 = !{!7646, !7647}
!7646 = !DILocalVariable(name: "dev", arg: 1, scope: !7644, file: !228, line: 1136, type: !617)
!7647 = !DILocalVariable(name: "api", scope: !7644, file: !228, line: 1139, type: !609)
!7648 = !DILocation(line: 0, scope: !7644)
!7649 = !DILocation(line: 1140, column: 40, scope: !7644)
!7650 = !DILocation(line: 1142, column: 11, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7644, file: !228, line: 1142, column: 6)
!7652 = !DILocation(line: 1142, column: 22, scope: !7651)
!7653 = !DILocation(line: 1142, column: 6, scope: !7644)
!7654 = !DILocation(line: 1145, column: 9, scope: !7644)
!7655 = !DILocation(line: 1145, column: 2, scope: !7644)
!7656 = !DILocation(line: 1150, column: 1, scope: !7644)
!7657 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !228, file: !228, line: 878, type: !668, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7658)
!7658 = !{!7659, !7660}
!7659 = !DILocalVariable(name: "dev", arg: 1, scope: !7657, file: !228, line: 878, type: !617)
!7660 = !DILocalVariable(name: "api", scope: !7657, file: !228, line: 881, type: !609)
!7661 = !DILocation(line: 0, scope: !7657)
!7662 = !DILocation(line: 882, column: 40, scope: !7657)
!7663 = !DILocation(line: 884, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7657, file: !228, line: 884, column: 6)
!7665 = !DILocation(line: 884, column: 26, scope: !7664)
!7666 = !DILocation(line: 884, column: 6, scope: !7657)
!7667 = !DILocation(line: 885, column: 3, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7664, file: !228, line: 884, column: 35)
!7669 = !DILocation(line: 886, column: 2, scope: !7668)
!7670 = !DILocation(line: 890, column: 1, scope: !7657)
!7671 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !228, file: !228, line: 955, type: !668, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !597, retainedNodes: !7672)
!7672 = !{!7673, !7674}
!7673 = !DILocalVariable(name: "dev", arg: 1, scope: !7671, file: !228, line: 955, type: !617)
!7674 = !DILocalVariable(name: "api", scope: !7671, file: !228, line: 958, type: !609)
!7675 = !DILocation(line: 0, scope: !7671)
!7676 = !DILocation(line: 959, column: 40, scope: !7671)
!7677 = !DILocation(line: 961, column: 11, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7671, file: !228, line: 961, column: 6)
!7679 = !DILocation(line: 961, column: 26, scope: !7678)
!7680 = !DILocation(line: 961, column: 6, scope: !7671)
!7681 = !DILocation(line: 962, column: 3, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7678, file: !228, line: 961, column: 35)
!7683 = !DILocation(line: 963, column: 2, scope: !7682)
!7684 = !DILocation(line: 967, column: 1, scope: !7671)
!7685 = distinct !DISubprogram(name: "wdt_sam_setup", scope: !847, file: !847, line: 108, type: !797, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7686)
!7686 = !{!7687, !7688, !7689, !7691, !7693}
!7687 = !DILocalVariable(name: "dev", arg: 1, scope: !7685, file: !847, line: 108, type: !799)
!7688 = !DILocalVariable(name: "options", arg: 2, scope: !7685, file: !847, line: 108, type: !202)
!7689 = !DILocalVariable(name: "config", scope: !7685, file: !847, line: 110, type: !7690)
!7690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!7691 = !DILocalVariable(name: "wdt", scope: !7685, file: !847, line: 112, type: !7692)
!7692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !886)
!7693 = !DILocalVariable(name: "data", scope: !7685, file: !847, line: 113, type: !7694)
!7694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!7695 = !DILocation(line: 0, scope: !7685)
!7696 = !DILocation(line: 110, column: 46, scope: !7685)
!7697 = !DILocation(line: 112, column: 28, scope: !7685)
!7698 = !DILocation(line: 113, column: 39, scope: !7685)
!7699 = !DILocation(line: 115, column: 13, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7685, file: !847, line: 115, column: 6)
!7701 = !DILocation(line: 115, column: 6, scope: !7685)
!7702 = !DILocation(line: 123, column: 12, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7685, file: !847, line: 123, column: 6)
!7704 = !DILocation(line: 123, column: 6, scope: !7685)
!7705 = !DILocation(line: 127, column: 7, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7685, file: !847, line: 127, column: 6)
!7707 = !DILocation(line: 127, column: 15, scope: !7706)
!7708 = !DILocation(line: 127, column: 41, scope: !7706)
!7709 = !DILocation(line: 127, column: 6, scope: !7685)
!7710 = !DILocation(line: 128, column: 9, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7706, file: !847, line: 127, column: 68)
!7712 = !DILocation(line: 128, column: 14, scope: !7711)
!7713 = !DILocation(line: 129, column: 2, scope: !7711)
!7714 = !DILocation(line: 131, column: 15, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7685, file: !847, line: 131, column: 6)
!7716 = !DILocation(line: 131, column: 46, scope: !7715)
!7717 = !DILocation(line: 131, column: 6, scope: !7685)
!7718 = !DILocation(line: 133, column: 14, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7715, file: !847, line: 132, column: 35)
!7720 = !DILocation(line: 134, column: 2, scope: !7719)
!7721 = !DILocation(line: 136, column: 22, scope: !7685)
!7722 = !DILocation(line: 136, column: 7, scope: !7685)
!7723 = !DILocation(line: 136, column: 14, scope: !7685)
!7724 = !DILocation(line: 137, column: 17, scope: !7685)
!7725 = !DILocation(line: 139, column: 2, scope: !7685)
!7726 = !DILocation(line: 140, column: 1, scope: !7685)
!7727 = distinct !DISubprogram(name: "wdt_sam_disable", scope: !847, file: !847, line: 83, type: !817, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7728)
!7728 = !{!7729, !7730, !7731, !7732}
!7729 = !DILocalVariable(name: "dev", arg: 1, scope: !7727, file: !847, line: 83, type: !799)
!7730 = !DILocalVariable(name: "config", scope: !7727, file: !847, line: 85, type: !7690)
!7731 = !DILocalVariable(name: "wdt", scope: !7727, file: !847, line: 87, type: !7692)
!7732 = !DILocalVariable(name: "data", scope: !7727, file: !847, line: 88, type: !7694)
!7733 = !DILocation(line: 0, scope: !7727)
!7734 = !DILocation(line: 88, column: 39, scope: !7727)
!7735 = !DILocation(line: 93, column: 12, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7727, file: !847, line: 93, column: 6)
!7737 = !DILocation(line: 93, column: 6, scope: !7727)
!7738 = !DILocation(line: 85, column: 46, scope: !7727)
!7739 = !DILocation(line: 87, column: 28, scope: !7727)
!7740 = !DILocation(line: 102, column: 7, scope: !7727)
!7741 = !DILocation(line: 102, column: 14, scope: !7727)
!7742 = !DILocation(line: 103, column: 17, scope: !7727)
!7743 = !DILocation(line: 105, column: 2, scope: !7727)
!7744 = !DILocation(line: 106, column: 1, scope: !7727)
!7745 = distinct !DISubprogram(name: "wdt_sam_install_timeout", scope: !847, file: !847, line: 142, type: !822, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7746)
!7746 = !{!7747, !7748, !7749, !7750, !7751}
!7747 = !DILocalVariable(name: "dev", arg: 1, scope: !7745, file: !847, line: 142, type: !799)
!7748 = !DILocalVariable(name: "cfg", arg: 2, scope: !7745, file: !847, line: 143, type: !824)
!7749 = !DILocalVariable(name: "wdt_mode", scope: !7745, file: !847, line: 145, type: !121)
!7750 = !DILocalVariable(name: "timeout_value", scope: !7745, file: !847, line: 146, type: !103)
!7751 = !DILocalVariable(name: "data", scope: !7745, file: !847, line: 148, type: !7694)
!7752 = !DILocation(line: 0, scope: !7745)
!7753 = !DILocation(line: 148, column: 39, scope: !7745)
!7754 = !DILocation(line: 150, column: 12, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7745, file: !847, line: 150, column: 6)
!7756 = !DILocation(line: 150, column: 6, scope: !7745)
!7757 = !DILocation(line: 155, column: 18, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7745, file: !847, line: 155, column: 6)
!7759 = !DILocation(line: 155, column: 22, scope: !7758)
!7760 = !DILocation(line: 155, column: 6, scope: !7745)
!7761 = !DILocation(line: 164, column: 54, scope: !7745)
!7762 = !DILocation(line: 164, column: 18, scope: !7745)
!7763 = !DILocation(line: 167, column: 20, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7745, file: !847, line: 167, column: 6)
!7765 = !DILocation(line: 167, column: 6, scope: !7745)
!7766 = !DILocation(line: 171, column: 15, scope: !7745)
!7767 = !DILocation(line: 171, column: 2, scope: !7745)
!7768 = !DILocation(line: 179, column: 12, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !847, line: 179, column: 7)
!7770 = distinct !DILexicalBlock(scope: !7745, file: !847, line: 171, column: 22)
!7771 = !DILocation(line: 179, column: 7, scope: !7769)
!7772 = !DILocation(line: 179, column: 7, scope: !7770)
!7773 = !DILocation(line: 181, column: 10, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7769, file: !847, line: 179, column: 22)
!7775 = !DILocation(line: 181, column: 13, scope: !7774)
!7776 = !DILocation(line: 186, column: 3, scope: !7770)
!7777 = !DILocation(line: 195, column: 3, scope: !7770)
!7778 = !DILocation(line: 0, scope: !7770)
!7779 = !DILocation(line: 203, column: 8, scope: !7745)
!7780 = !DILocation(line: 204, column: 8, scope: !7745)
!7781 = !DILocation(line: 202, column: 24, scope: !7745)
!7782 = !DILocation(line: 203, column: 34, scope: !7745)
!7783 = !DILocation(line: 202, column: 8, scope: !7745)
!7784 = !DILocation(line: 202, column: 13, scope: !7745)
!7785 = !DILocation(line: 206, column: 22, scope: !7745)
!7786 = !DILocation(line: 208, column: 2, scope: !7745)
!7787 = !DILocation(line: 209, column: 1, scope: !7745)
!7788 = distinct !DISubprogram(name: "wdt_sam_feed", scope: !847, file: !847, line: 211, type: !842, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7789)
!7789 = !{!7790, !7791, !7792, !7793}
!7790 = !DILocalVariable(name: "dev", arg: 1, scope: !7788, file: !847, line: 211, type: !799)
!7791 = !DILocalVariable(name: "channel_id", arg: 2, scope: !7788, file: !847, line: 211, type: !103)
!7792 = !DILocalVariable(name: "config", scope: !7788, file: !847, line: 213, type: !7690)
!7793 = !DILocalVariable(name: "wdt", scope: !7788, file: !847, line: 220, type: !7692)
!7794 = !DILocation(line: 0, scope: !7788)
!7795 = !DILocation(line: 213, column: 46, scope: !7788)
!7796 = !DILocation(line: 220, column: 28, scope: !7788)
!7797 = !DILocation(line: 222, column: 7, scope: !7788)
!7798 = !DILocation(line: 222, column: 14, scope: !7788)
!7799 = !DILocation(line: 224, column: 2, scope: !7788)
!7800 = distinct !DISubprogram(name: "wdt_sam_convert_timeout", scope: !847, file: !847, line: 67, type: !7801, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7803)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!103, !121, !121}
!7803 = !{!7804, !7805, !7806, !7807}
!7804 = !DILocalVariable(name: "timeout", arg: 1, scope: !7800, file: !847, line: 67, type: !121)
!7805 = !DILocalVariable(name: "sclk", arg: 2, scope: !7800, file: !847, line: 67, type: !121)
!7806 = !DILocalVariable(name: "max", scope: !7800, file: !847, line: 69, type: !121)
!7807 = !DILocalVariable(name: "min", scope: !7800, file: !847, line: 69, type: !121)
!7808 = !DILocation(line: 0, scope: !7800)
!7809 = !DILocation(line: 71, column: 20, scope: !7800)
!7810 = !DILocation(line: 72, column: 35, scope: !7800)
!7811 = !DILocation(line: 74, column: 15, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7800, file: !847, line: 74, column: 6)
!7813 = !DILocation(line: 74, column: 22, scope: !7812)
!7814 = !DILocation(line: 80, column: 9, scope: !7800)
!7815 = !DILocation(line: 80, column: 2, scope: !7800)
!7816 = !DILocation(line: 81, column: 1, scope: !7800)
!7817 = distinct !DISubprogram(name: "wdt_sam_isr", scope: !847, file: !847, line: 47, type: !7818, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7820)
!7818 = !DISubroutineType(types: !7819)
!7819 = !{null, !799}
!7820 = !{!7821, !7822, !7823, !7824, !7825}
!7821 = !DILocalVariable(name: "dev", arg: 1, scope: !7817, file: !847, line: 47, type: !799)
!7822 = !DILocalVariable(name: "config", scope: !7817, file: !847, line: 49, type: !7690)
!7823 = !DILocalVariable(name: "wdt_sr", scope: !7817, file: !847, line: 50, type: !121)
!7824 = !DILocalVariable(name: "wdt", scope: !7817, file: !847, line: 51, type: !7692)
!7825 = !DILocalVariable(name: "data", scope: !7817, file: !847, line: 52, type: !7694)
!7826 = !DILocation(line: 0, scope: !7817)
!7827 = !DILocation(line: 49, column: 46, scope: !7817)
!7828 = !DILocation(line: 51, column: 28, scope: !7817)
!7829 = !DILocation(line: 52, column: 39, scope: !7817)
!7830 = !DILocation(line: 55, column: 16, scope: !7817)
!7831 = !DILocation(line: 57, column: 8, scope: !7817)
!7832 = !DILocation(line: 57, column: 2, scope: !7817)
!7833 = !DILocation(line: 58, column: 1, scope: !7817)
!7834 = distinct !DISubprogram(name: "wdt_sam_init", scope: !847, file: !847, line: 246, type: !817, scopeLine: 247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !786, retainedNodes: !7835)
!7835 = !{!7836}
!7836 = !DILocalVariable(name: "dev", arg: 1, scope: !7834, file: !847, line: 246, type: !799)
!7837 = !DILocation(line: 0, scope: !7834)
!7838 = !DILocation(line: 249, column: 2, scope: !7834)
!7839 = !DILocation(line: 252, column: 2, scope: !7834)
!7840 = !DILocation(line: 253, column: 2, scope: !7834)
!7841 = !DILocation(line: 240, column: 2, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !872, file: !847, line: 240, column: 2)
!7843 = !DILocation(line: 243, column: 2, scope: !872)
!7844 = !DILocation(line: 244, column: 1, scope: !872)
!7845 = distinct !DISubprogram(name: "uart_sam_poll_in", scope: !1014, file: !1014, line: 47, type: !938, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7846)
!7846 = !{!7847, !7848, !7849, !7852}
!7847 = !DILocalVariable(name: "dev", arg: 1, scope: !7845, file: !1014, line: 47, type: !940)
!7848 = !DILocalVariable(name: "c", arg: 2, scope: !7845, file: !1014, line: 47, type: !249)
!7849 = !DILocalVariable(name: "cfg", scope: !7845, file: !1014, line: 49, type: !7850)
!7850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7851)
!7851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!7852 = !DILocalVariable(name: "uart", scope: !7845, file: !1014, line: 51, type: !7853)
!7853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!7854 = !DILocation(line: 0, scope: !7845)
!7855 = !DILocation(line: 49, column: 50, scope: !7845)
!7856 = !DILocation(line: 51, column: 27, scope: !7845)
!7857 = !DILocation(line: 53, column: 14, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7845, file: !1014, line: 53, column: 6)
!7859 = !DILocation(line: 53, column: 22, scope: !7858)
!7860 = !DILocation(line: 53, column: 6, scope: !7845)
!7861 = !DILocation(line: 58, column: 28, scope: !7845)
!7862 = !DILocation(line: 58, column: 7, scope: !7845)
!7863 = !DILocation(line: 58, column: 5, scope: !7845)
!7864 = !DILocation(line: 60, column: 2, scope: !7845)
!7865 = !DILocation(line: 61, column: 1, scope: !7845)
!7866 = distinct !DISubprogram(name: "uart_sam_poll_out", scope: !1014, file: !1014, line: 63, type: !957, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7867)
!7867 = !{!7868, !7869, !7870, !7871}
!7868 = !DILocalVariable(name: "dev", arg: 1, scope: !7866, file: !1014, line: 63, type: !940)
!7869 = !DILocalVariable(name: "c", arg: 2, scope: !7866, file: !1014, line: 63, type: !203)
!7870 = !DILocalVariable(name: "cfg", scope: !7866, file: !1014, line: 65, type: !7850)
!7871 = !DILocalVariable(name: "uart", scope: !7866, file: !1014, line: 67, type: !7853)
!7872 = !DILocation(line: 0, scope: !7866)
!7873 = !DILocation(line: 65, column: 50, scope: !7866)
!7874 = !DILocation(line: 67, column: 27, scope: !7866)
!7875 = !DILocation(line: 70, column: 2, scope: !7866)
!7876 = !DILocation(line: 70, column: 17, scope: !7866)
!7877 = !DILocation(line: 70, column: 25, scope: !7866)
!7878 = !DILocation(line: 70, column: 9, scope: !7866)
!7879 = distinct !{!7879, !7875, !7880}
!7880 = !DILocation(line: 71, column: 2, scope: !7866)
!7881 = !DILocation(line: 74, column: 19, scope: !7866)
!7882 = !DILocation(line: 74, column: 8, scope: !7866)
!7883 = !DILocation(line: 74, column: 17, scope: !7866)
!7884 = !DILocation(line: 75, column: 1, scope: !7866)
!7885 = distinct !DISubprogram(name: "uart_sam_err_check", scope: !1014, file: !1014, line: 77, type: !961, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7886)
!7886 = !{!7887, !7888, !7889, !7893}
!7887 = !DILocalVariable(name: "dev", arg: 1, scope: !7885, file: !1014, line: 77, type: !940)
!7888 = !DILocalVariable(name: "cfg", scope: !7885, file: !1014, line: 79, type: !7850)
!7889 = !DILocalVariable(name: "uart", scope: !7885, file: !1014, line: 81, type: !7890)
!7890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7891)
!7891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7892, size: 32)
!7892 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1079)
!7893 = !DILocalVariable(name: "errors", scope: !7885, file: !1014, line: 82, type: !103)
!7894 = !DILocation(line: 0, scope: !7885)
!7895 = !DILocation(line: 79, column: 50, scope: !7885)
!7896 = !DILocation(line: 81, column: 36, scope: !7885)
!7897 = !DILocation(line: 84, column: 12, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7885, file: !1014, line: 84, column: 6)
!7899 = !DILocation(line: 84, column: 6, scope: !7885)
!7900 = !DILocation(line: 88, column: 12, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7885, file: !1014, line: 88, column: 6)
!7902 = !DILocation(line: 88, column: 6, scope: !7885)
!7903 = !DILocation(line: 92, column: 12, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7885, file: !1014, line: 92, column: 6)
!7905 = !DILocation(line: 92, column: 6, scope: !7885)
!7906 = !DILocation(line: 96, column: 2, scope: !7885)
!7907 = distinct !DISubprogram(name: "uart_sam_configure", scope: !1014, file: !1014, line: 164, type: !965, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7908)
!7908 = !{!7909, !7910, !7911, !7912, !7913}
!7909 = !DILocalVariable(name: "dev", arg: 1, scope: !7907, file: !1014, line: 164, type: !940)
!7910 = !DILocalVariable(name: "cfg", arg: 2, scope: !7907, file: !1014, line: 165, type: !967)
!7911 = !DILocalVariable(name: "retval", scope: !7907, file: !1014, line: 167, type: !103)
!7912 = !DILocalVariable(name: "config", scope: !7907, file: !1014, line: 169, type: !7850)
!7913 = !DILocalVariable(name: "uart", scope: !7907, file: !1014, line: 171, type: !7890)
!7914 = !DILocation(line: 0, scope: !7907)
!7915 = !DILocation(line: 169, column: 53, scope: !7907)
!7916 = !DILocation(line: 171, column: 39, scope: !7907)
!7917 = !DILocation(line: 174, column: 11, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7907, file: !1014, line: 174, column: 6)
!7919 = !DILocation(line: 174, column: 21, scope: !7918)
!7920 = !DILocation(line: 174, column: 45, scope: !7918)
!7921 = !DILocation(line: 175, column: 8, scope: !7918)
!7922 = !DILocation(line: 175, column: 18, scope: !7918)
!7923 = !DILocation(line: 175, column: 42, scope: !7918)
!7924 = !DILocation(line: 176, column: 8, scope: !7918)
!7925 = !DILocation(line: 176, column: 18, scope: !7918)
!7926 = !DILocation(line: 174, column: 6, scope: !7907)
!7927 = !DILocation(line: 181, column: 8, scope: !7907)
!7928 = !DILocation(line: 181, column: 16, scope: !7907)
!7929 = !DILocation(line: 189, column: 40, scope: !7907)
!7930 = !DILocation(line: 189, column: 11, scope: !7907)
!7931 = !DILocation(line: 188, column: 8, scope: !7907)
!7932 = !DILocation(line: 188, column: 16, scope: !7907)
!7933 = !DILocation(line: 192, column: 43, scope: !7907)
!7934 = !DILocation(line: 192, column: 11, scope: !7907)
!7935 = !DILocation(line: 193, column: 13, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7907, file: !1014, line: 193, column: 6)
!7937 = !DILocation(line: 193, column: 6, scope: !7907)
!7938 = !DILocation(line: 198, column: 16, scope: !7907)
!7939 = !DILocation(line: 200, column: 2, scope: !7907)
!7940 = !DILocation(line: 201, column: 1, scope: !7907)
!7941 = distinct !DISubprogram(name: "uart_sam_config_get", scope: !1014, file: !1014, line: 203, type: !978, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7942)
!7942 = !{!7943, !7944, !7945}
!7943 = !DILocalVariable(name: "dev", arg: 1, scope: !7941, file: !1014, line: 203, type: !940)
!7944 = !DILocalVariable(name: "cfg", arg: 2, scope: !7941, file: !1014, line: 204, type: !980)
!7945 = !DILocalVariable(name: "dev_data", scope: !7941, file: !1014, line: 206, type: !7946)
!7946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7947)
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 32)
!7948 = !DILocation(line: 0, scope: !7941)
!7949 = !DILocation(line: 206, column: 50, scope: !7941)
!7950 = !DILocation(line: 208, column: 28, scope: !7941)
!7951 = !DILocation(line: 208, column: 7, scope: !7941)
!7952 = !DILocation(line: 208, column: 16, scope: !7941)
!7953 = !DILocation(line: 209, column: 16, scope: !7941)
!7954 = !DILocation(line: 209, column: 7, scope: !7941)
!7955 = !DILocation(line: 209, column: 14, scope: !7941)
!7956 = !DILocation(line: 211, column: 7, scope: !7941)
!7957 = !DILocation(line: 211, column: 17, scope: !7941)
!7958 = !DILocation(line: 212, column: 7, scope: !7941)
!7959 = !DILocation(line: 212, column: 17, scope: !7941)
!7960 = !DILocation(line: 213, column: 7, scope: !7941)
!7961 = !DILocation(line: 213, column: 17, scope: !7941)
!7962 = !DILocation(line: 215, column: 2, scope: !7941)
!7963 = distinct !DISubprogram(name: "uart_sam_fifo_fill", scope: !1014, file: !1014, line: 220, type: !983, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7964)
!7964 = !{!7965, !7966, !7967, !7968, !7969}
!7965 = !DILocalVariable(name: "dev", arg: 1, scope: !7963, file: !1014, line: 220, type: !940)
!7966 = !DILocalVariable(name: "tx_data", arg: 2, scope: !7963, file: !1014, line: 221, type: !280)
!7967 = !DILocalVariable(name: "size", arg: 3, scope: !7963, file: !1014, line: 222, type: !103)
!7968 = !DILocalVariable(name: "cfg", scope: !7963, file: !1014, line: 224, type: !7850)
!7969 = !DILocalVariable(name: "uart", scope: !7963, file: !1014, line: 226, type: !7890)
!7970 = !DILocation(line: 0, scope: !7963)
!7971 = !DILocation(line: 224, column: 50, scope: !7963)
!7972 = !DILocation(line: 226, column: 36, scope: !7963)
!7973 = !DILocation(line: 229, column: 2, scope: !7963)
!7974 = !DILocation(line: 229, column: 16, scope: !7963)
!7975 = !DILocation(line: 229, column: 24, scope: !7963)
!7976 = !DILocation(line: 229, column: 41, scope: !7963)
!7977 = distinct !{!7977, !7973, !7978}
!7978 = !DILocation(line: 230, column: 2, scope: !7963)
!7979 = !DILocation(line: 232, column: 19, scope: !7963)
!7980 = !DILocation(line: 232, column: 8, scope: !7963)
!7981 = !DILocation(line: 232, column: 17, scope: !7963)
!7982 = !DILocation(line: 234, column: 2, scope: !7963)
!7983 = distinct !DISubprogram(name: "uart_sam_fifo_read", scope: !1014, file: !1014, line: 237, type: !987, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !7984)
!7984 = !{!7985, !7986, !7987, !7988, !7989, !7990}
!7985 = !DILocalVariable(name: "dev", arg: 1, scope: !7983, file: !1014, line: 237, type: !940)
!7986 = !DILocalVariable(name: "rx_data", arg: 2, scope: !7983, file: !1014, line: 237, type: !286)
!7987 = !DILocalVariable(name: "size", arg: 3, scope: !7983, file: !1014, line: 238, type: !287)
!7988 = !DILocalVariable(name: "cfg", scope: !7983, file: !1014, line: 240, type: !7850)
!7989 = !DILocalVariable(name: "uart", scope: !7983, file: !1014, line: 242, type: !7890)
!7990 = !DILocalVariable(name: "bytes_read", scope: !7983, file: !1014, line: 243, type: !103)
!7991 = !DILocation(line: 0, scope: !7983)
!7992 = !DILocation(line: 240, column: 50, scope: !7983)
!7993 = !DILocation(line: 242, column: 36, scope: !7983)
!7994 = !DILocation(line: 248, column: 13, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !1014, line: 248, column: 7)
!7996 = distinct !DILexicalBlock(scope: !7983, file: !1014, line: 247, column: 28)
!7997 = !DILocation(line: 247, column: 20, scope: !7983)
!7998 = !DILocation(line: 247, column: 2, scope: !7983)
!7999 = !DILocation(line: 248, column: 21, scope: !7995)
!8000 = !DILocation(line: 248, column: 7, scope: !7996)
!8001 = !DILocation(line: 249, column: 32, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7995, file: !1014, line: 248, column: 38)
!8003 = !DILocation(line: 249, column: 26, scope: !8002)
!8004 = !DILocation(line: 249, column: 4, scope: !8002)
!8005 = !DILocation(line: 249, column: 24, scope: !8002)
!8006 = !DILocation(line: 250, column: 14, scope: !8002)
!8007 = distinct !{!8007, !7998, !8008}
!8008 = !DILocation(line: 254, column: 2, scope: !7983)
!8009 = !DILocation(line: 256, column: 2, scope: !7983)
!8010 = distinct !DISubprogram(name: "uart_sam_irq_tx_enable", scope: !1014, file: !1014, line: 259, type: !991, scopeLine: 260, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8011)
!8011 = !{!8012, !8013, !8014}
!8012 = !DILocalVariable(name: "dev", arg: 1, scope: !8010, file: !1014, line: 259, type: !940)
!8013 = !DILocalVariable(name: "cfg", scope: !8010, file: !1014, line: 261, type: !7850)
!8014 = !DILocalVariable(name: "uart", scope: !8010, file: !1014, line: 263, type: !7890)
!8015 = !DILocation(line: 0, scope: !8010)
!8016 = !DILocation(line: 261, column: 50, scope: !8010)
!8017 = !DILocation(line: 263, column: 36, scope: !8010)
!8018 = !DILocation(line: 265, column: 8, scope: !8010)
!8019 = !DILocation(line: 265, column: 17, scope: !8010)
!8020 = !DILocation(line: 266, column: 1, scope: !8010)
!8021 = distinct !DISubprogram(name: "uart_sam_irq_tx_disable", scope: !1014, file: !1014, line: 268, type: !991, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8022)
!8022 = !{!8023, !8024, !8025}
!8023 = !DILocalVariable(name: "dev", arg: 1, scope: !8021, file: !1014, line: 268, type: !940)
!8024 = !DILocalVariable(name: "cfg", scope: !8021, file: !1014, line: 270, type: !7850)
!8025 = !DILocalVariable(name: "uart", scope: !8021, file: !1014, line: 272, type: !7890)
!8026 = !DILocation(line: 0, scope: !8021)
!8027 = !DILocation(line: 270, column: 50, scope: !8021)
!8028 = !DILocation(line: 272, column: 36, scope: !8021)
!8029 = !DILocation(line: 274, column: 8, scope: !8021)
!8030 = !DILocation(line: 274, column: 17, scope: !8021)
!8031 = !DILocation(line: 275, column: 1, scope: !8021)
!8032 = distinct !DISubprogram(name: "uart_sam_irq_tx_ready", scope: !1014, file: !1014, line: 277, type: !961, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8033)
!8033 = !{!8034, !8035, !8036}
!8034 = !DILocalVariable(name: "dev", arg: 1, scope: !8032, file: !1014, line: 277, type: !940)
!8035 = !DILocalVariable(name: "cfg", scope: !8032, file: !1014, line: 279, type: !7850)
!8036 = !DILocalVariable(name: "uart", scope: !8032, file: !1014, line: 281, type: !7890)
!8037 = !DILocation(line: 0, scope: !8032)
!8038 = !DILocation(line: 279, column: 50, scope: !8032)
!8039 = !DILocation(line: 281, column: 36, scope: !8032)
!8040 = !DILocation(line: 286, column: 16, scope: !8032)
!8041 = !DILocation(line: 286, column: 24, scope: !8032)
!8042 = !DILocation(line: 286, column: 40, scope: !8032)
!8043 = !DILocation(line: 287, column: 9, scope: !8032)
!8044 = !DILocation(line: 286, column: 2, scope: !8032)
!8045 = distinct !DISubprogram(name: "uart_sam_irq_rx_enable", scope: !1014, file: !1014, line: 290, type: !991, scopeLine: 291, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8046)
!8046 = !{!8047, !8048, !8049}
!8047 = !DILocalVariable(name: "dev", arg: 1, scope: !8045, file: !1014, line: 290, type: !940)
!8048 = !DILocalVariable(name: "cfg", scope: !8045, file: !1014, line: 292, type: !7850)
!8049 = !DILocalVariable(name: "uart", scope: !8045, file: !1014, line: 294, type: !7890)
!8050 = !DILocation(line: 0, scope: !8045)
!8051 = !DILocation(line: 292, column: 50, scope: !8045)
!8052 = !DILocation(line: 294, column: 36, scope: !8045)
!8053 = !DILocation(line: 296, column: 8, scope: !8045)
!8054 = !DILocation(line: 296, column: 17, scope: !8045)
!8055 = !DILocation(line: 297, column: 1, scope: !8045)
!8056 = distinct !DISubprogram(name: "uart_sam_irq_rx_disable", scope: !1014, file: !1014, line: 299, type: !991, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8057)
!8057 = !{!8058, !8059, !8060}
!8058 = !DILocalVariable(name: "dev", arg: 1, scope: !8056, file: !1014, line: 299, type: !940)
!8059 = !DILocalVariable(name: "cfg", scope: !8056, file: !1014, line: 301, type: !7850)
!8060 = !DILocalVariable(name: "uart", scope: !8056, file: !1014, line: 303, type: !7890)
!8061 = !DILocation(line: 0, scope: !8056)
!8062 = !DILocation(line: 301, column: 50, scope: !8056)
!8063 = !DILocation(line: 303, column: 36, scope: !8056)
!8064 = !DILocation(line: 305, column: 8, scope: !8056)
!8065 = !DILocation(line: 305, column: 17, scope: !8056)
!8066 = !DILocation(line: 306, column: 1, scope: !8056)
!8067 = distinct !DISubprogram(name: "uart_sam_irq_tx_complete", scope: !1014, file: !1014, line: 308, type: !961, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8068)
!8068 = !{!8069, !8070, !8071}
!8069 = !DILocalVariable(name: "dev", arg: 1, scope: !8067, file: !1014, line: 308, type: !940)
!8070 = !DILocalVariable(name: "cfg", scope: !8067, file: !1014, line: 310, type: !7850)
!8071 = !DILocalVariable(name: "uart", scope: !8067, file: !1014, line: 312, type: !7890)
!8072 = !DILocation(line: 0, scope: !8067)
!8073 = !DILocation(line: 310, column: 50, scope: !8067)
!8074 = !DILocation(line: 312, column: 36, scope: !8067)
!8075 = !DILocation(line: 314, column: 16, scope: !8067)
!8076 = !DILocation(line: 314, column: 24, scope: !8067)
!8077 = !DILocation(line: 314, column: 40, scope: !8067)
!8078 = !DILocation(line: 315, column: 9, scope: !8067)
!8079 = !DILocation(line: 314, column: 2, scope: !8067)
!8080 = distinct !DISubprogram(name: "uart_sam_irq_rx_ready", scope: !1014, file: !1014, line: 318, type: !961, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8081)
!8081 = !{!8082, !8083, !8084}
!8082 = !DILocalVariable(name: "dev", arg: 1, scope: !8080, file: !1014, line: 318, type: !940)
!8083 = !DILocalVariable(name: "cfg", scope: !8080, file: !1014, line: 320, type: !7850)
!8084 = !DILocalVariable(name: "uart", scope: !8080, file: !1014, line: 322, type: !7890)
!8085 = !DILocation(line: 0, scope: !8080)
!8086 = !DILocation(line: 320, column: 50, scope: !8080)
!8087 = !DILocation(line: 322, column: 36, scope: !8080)
!8088 = !DILocation(line: 324, column: 16, scope: !8080)
!8089 = !DILocation(line: 324, column: 24, scope: !8080)
!8090 = !DILocation(line: 324, column: 2, scope: !8080)
!8091 = distinct !DISubprogram(name: "uart_sam_irq_err_enable", scope: !1014, file: !1014, line: 327, type: !991, scopeLine: 328, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8092)
!8092 = !{!8093, !8094, !8095}
!8093 = !DILocalVariable(name: "dev", arg: 1, scope: !8091, file: !1014, line: 327, type: !940)
!8094 = !DILocalVariable(name: "cfg", scope: !8091, file: !1014, line: 329, type: !7850)
!8095 = !DILocalVariable(name: "uart", scope: !8091, file: !1014, line: 331, type: !7890)
!8096 = !DILocation(line: 0, scope: !8091)
!8097 = !DILocation(line: 329, column: 50, scope: !8091)
!8098 = !DILocation(line: 331, column: 36, scope: !8091)
!8099 = !DILocation(line: 333, column: 8, scope: !8091)
!8100 = !DILocation(line: 333, column: 17, scope: !8091)
!8101 = !DILocation(line: 334, column: 1, scope: !8091)
!8102 = distinct !DISubprogram(name: "uart_sam_irq_err_disable", scope: !1014, file: !1014, line: 336, type: !991, scopeLine: 337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8103)
!8103 = !{!8104, !8105, !8106}
!8104 = !DILocalVariable(name: "dev", arg: 1, scope: !8102, file: !1014, line: 336, type: !940)
!8105 = !DILocalVariable(name: "cfg", scope: !8102, file: !1014, line: 338, type: !7850)
!8106 = !DILocalVariable(name: "uart", scope: !8102, file: !1014, line: 340, type: !7890)
!8107 = !DILocation(line: 0, scope: !8102)
!8108 = !DILocation(line: 338, column: 50, scope: !8102)
!8109 = !DILocation(line: 340, column: 36, scope: !8102)
!8110 = !DILocation(line: 342, column: 8, scope: !8102)
!8111 = !DILocation(line: 342, column: 17, scope: !8102)
!8112 = !DILocation(line: 343, column: 1, scope: !8102)
!8113 = distinct !DISubprogram(name: "uart_sam_irq_is_pending", scope: !1014, file: !1014, line: 345, type: !961, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8114)
!8114 = !{!8115, !8116, !8117}
!8115 = !DILocalVariable(name: "dev", arg: 1, scope: !8113, file: !1014, line: 345, type: !940)
!8116 = !DILocalVariable(name: "cfg", scope: !8113, file: !1014, line: 347, type: !7850)
!8117 = !DILocalVariable(name: "uart", scope: !8113, file: !1014, line: 349, type: !7890)
!8118 = !DILocation(line: 0, scope: !8113)
!8119 = !DILocation(line: 347, column: 50, scope: !8113)
!8120 = !DILocation(line: 349, column: 36, scope: !8113)
!8121 = !DILocation(line: 351, column: 16, scope: !8113)
!8122 = !DILocation(line: 352, column: 10, scope: !8113)
!8123 = !DILocation(line: 352, column: 18, scope: !8113)
!8124 = !DILocation(line: 351, column: 62, scope: !8113)
!8125 = !DILocation(line: 351, column: 2, scope: !8113)
!8126 = distinct !DISubprogram(name: "uart_sam_irq_update", scope: !1014, file: !1014, line: 355, type: !961, scopeLine: 356, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8127)
!8127 = !{!8128}
!8128 = !DILocalVariable(name: "dev", arg: 1, scope: !8126, file: !1014, line: 355, type: !940)
!8129 = !DILocation(line: 0, scope: !8126)
!8130 = !DILocation(line: 359, column: 2, scope: !8126)
!8131 = distinct !DISubprogram(name: "uart_sam_irq_callback_set", scope: !1014, file: !1014, line: 362, type: !1005, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8132)
!8132 = !{!8133, !8134, !8135, !8136}
!8133 = !DILocalVariable(name: "dev", arg: 1, scope: !8131, file: !1014, line: 362, type: !940)
!8134 = !DILocalVariable(name: "cb", arg: 2, scope: !8131, file: !1014, line: 363, type: !1007)
!8135 = !DILocalVariable(name: "cb_data", arg: 3, scope: !8131, file: !1014, line: 364, type: !102)
!8136 = !DILocalVariable(name: "dev_data", scope: !8131, file: !1014, line: 366, type: !7946)
!8137 = !DILocation(line: 0, scope: !8131)
!8138 = !DILocation(line: 366, column: 50, scope: !8131)
!8139 = !DILocation(line: 368, column: 12, scope: !8131)
!8140 = !DILocation(line: 368, column: 19, scope: !8131)
!8141 = !DILocation(line: 369, column: 12, scope: !8131)
!8142 = !DILocation(line: 369, column: 24, scope: !8131)
!8143 = !DILocation(line: 370, column: 1, scope: !8131)
!8144 = distinct !DISubprogram(name: "uart_sam_get_parity", scope: !1014, file: !1014, line: 143, type: !8145, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8147)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{!202, !940}
!8147 = !{!8148, !8149, !8150}
!8148 = !DILocalVariable(name: "dev", arg: 1, scope: !8144, file: !1014, line: 143, type: !940)
!8149 = !DILocalVariable(name: "cfg", scope: !8144, file: !1014, line: 145, type: !7850)
!8150 = !DILocalVariable(name: "uart", scope: !8144, file: !1014, line: 147, type: !7890)
!8151 = !DILocation(line: 0, scope: !8144)
!8152 = !DILocation(line: 145, column: 50, scope: !8144)
!8153 = !DILocation(line: 147, column: 36, scope: !8144)
!8154 = !DILocation(line: 149, column: 16, scope: !8144)
!8155 = !DILocation(line: 149, column: 2, scope: !8144)
!8156 = !DILocation(line: 162, column: 1, scope: !8144)
!8157 = distinct !DISubprogram(name: "uart_sam_cfg2sam_parity", scope: !1014, file: !1014, line: 126, type: !8158, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!121, !202}
!8160 = !{!8161}
!8161 = !DILocalVariable(name: "parity", arg: 1, scope: !8157, file: !1014, line: 126, type: !202)
!8162 = !DILocation(line: 0, scope: !8157)
!8163 = !DILocation(line: 128, column: 2, scope: !8157)
!8164 = !DILocation(line: 0, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8157, file: !1014, line: 128, column: 18)
!8166 = !DILocation(line: 141, column: 1, scope: !8157)
!8167 = distinct !DISubprogram(name: "uart_sam_baudrate_set", scope: !1014, file: !1014, line: 99, type: !8168, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!103, !940, !121}
!8170 = !{!8171, !8172, !8173, !8174, !8175, !8176}
!8171 = !DILocalVariable(name: "dev", arg: 1, scope: !8167, file: !1014, line: 99, type: !940)
!8172 = !DILocalVariable(name: "baudrate", arg: 2, scope: !8167, file: !1014, line: 99, type: !121)
!8173 = !DILocalVariable(name: "dev_data", scope: !8167, file: !1014, line: 101, type: !7946)
!8174 = !DILocalVariable(name: "cfg", scope: !8167, file: !1014, line: 103, type: !7850)
!8175 = !DILocalVariable(name: "uart", scope: !8167, file: !1014, line: 105, type: !7890)
!8176 = !DILocalVariable(name: "divisor", scope: !8167, file: !1014, line: 107, type: !121)
!8177 = !DILocation(line: 0, scope: !8167)
!8178 = !DILocation(line: 116, column: 14, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8167, file: !1014, line: 116, column: 6)
!8180 = !DILocation(line: 116, column: 6, scope: !8167)
!8181 = !DILocation(line: 114, column: 44, scope: !8167)
!8182 = !DILocation(line: 103, column: 50, scope: !8167)
!8183 = !DILocation(line: 105, column: 36, scope: !8167)
!8184 = !DILocation(line: 101, column: 50, scope: !8167)
!8185 = !DILocation(line: 120, column: 8, scope: !8167)
!8186 = !DILocation(line: 120, column: 18, scope: !8167)
!8187 = !DILocation(line: 121, column: 12, scope: !8167)
!8188 = !DILocation(line: 121, column: 22, scope: !8167)
!8189 = !DILocation(line: 123, column: 2, scope: !8167)
!8190 = !DILocation(line: 124, column: 1, scope: !8167)
!8191 = !DILocation(line: 0, scope: !1065)
!8192 = !DILocation(line: 494, column: 1, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !1065, file: !1014, line: 494, column: 1)
!8194 = !DILocation(line: 494, column: 1, scope: !1065)
!8195 = distinct !DISubprogram(name: "uart_sam_isr", scope: !1014, file: !1014, line: 372, type: !991, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8196)
!8196 = !{!8197, !8198}
!8197 = !DILocalVariable(name: "dev", arg: 1, scope: !8195, file: !1014, line: 372, type: !940)
!8198 = !DILocalVariable(name: "dev_data", scope: !8195, file: !1014, line: 374, type: !7946)
!8199 = !DILocation(line: 0, scope: !8195)
!8200 = !DILocation(line: 374, column: 50, scope: !8195)
!8201 = !DILocation(line: 376, column: 16, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8195, file: !1014, line: 376, column: 6)
!8203 = !DILocation(line: 376, column: 6, scope: !8202)
!8204 = !DILocation(line: 376, column: 6, scope: !8195)
!8205 = !DILocation(line: 377, column: 35, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8202, file: !1014, line: 376, column: 24)
!8207 = !DILocation(line: 377, column: 3, scope: !8206)
!8208 = !DILocation(line: 378, column: 2, scope: !8206)
!8209 = !DILocation(line: 379, column: 1, scope: !8195)
!8210 = distinct !DISubprogram(name: "uart_sam_init", scope: !1014, file: !1014, line: 383, type: !961, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8211)
!8211 = !{!8212, !8213, !8214, !8215, !8216, !8217}
!8212 = !DILocalVariable(name: "dev", arg: 1, scope: !8210, file: !1014, line: 383, type: !940)
!8213 = !DILocalVariable(name: "retval", scope: !8210, file: !1014, line: 385, type: !103)
!8214 = !DILocalVariable(name: "cfg", scope: !8210, file: !1014, line: 387, type: !7850)
!8215 = !DILocalVariable(name: "dev_data", scope: !8210, file: !1014, line: 389, type: !7946)
!8216 = !DILocalVariable(name: "uart", scope: !8210, file: !1014, line: 391, type: !7853)
!8217 = !DILocalVariable(name: "uart_config", scope: !8210, file: !1014, line: 409, type: !969)
!8218 = !DILocation(line: 0, scope: !8210)
!8219 = !DILocation(line: 387, column: 50, scope: !8210)
!8220 = !DILocation(line: 389, column: 50, scope: !8210)
!8221 = !DILocation(line: 391, column: 27, scope: !8210)
!8222 = !DILocation(line: 394, column: 33, scope: !8210)
!8223 = !DILocation(line: 394, column: 2, scope: !8210)
!8224 = !DILocation(line: 397, column: 36, scope: !8210)
!8225 = !DILocation(line: 397, column: 11, scope: !8210)
!8226 = !DILocation(line: 398, column: 13, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8210, file: !1014, line: 398, column: 6)
!8228 = !DILocation(line: 398, column: 6, scope: !8210)
!8229 = !DILocation(line: 403, column: 8, scope: !8210)
!8230 = !DILocation(line: 403, column: 17, scope: !8210)
!8231 = !DILocation(line: 406, column: 7, scope: !8210)
!8232 = !DILocation(line: 406, column: 2, scope: !8210)
!8233 = !DILocation(line: 409, column: 2, scope: !8210)
!8234 = !DILocation(line: 409, column: 21, scope: !8210)
!8235 = !DILocation(line: 409, column: 35, scope: !8210)
!8236 = !DILocation(line: 410, column: 25, scope: !8210)
!8237 = !DILocation(line: 416, column: 9, scope: !8210)
!8238 = !DILocation(line: 417, column: 1, scope: !8210)
!8239 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1042, file: !1042, line: 342, type: !8240, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8242)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!103, !1108, !202}
!8242 = !{!8243, !8244, !8245, !8246}
!8243 = !DILocalVariable(name: "config", arg: 1, scope: !8239, file: !1042, line: 342, type: !1108)
!8244 = !DILocalVariable(name: "id", arg: 2, scope: !8239, file: !1042, line: 343, type: !202)
!8245 = !DILocalVariable(name: "ret", scope: !8239, file: !1042, line: 345, type: !103)
!8246 = !DILocalVariable(name: "state", scope: !8239, file: !1042, line: 346, type: !1045)
!8247 = !DILocation(line: 0, scope: !8239)
!8248 = !DILocation(line: 346, column: 2, scope: !8239)
!8249 = !DILocation(line: 348, column: 8, scope: !8239)
!8250 = !DILocation(line: 349, column: 10, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8239, file: !1042, line: 349, column: 6)
!8252 = !DILocation(line: 349, column: 6, scope: !8239)
!8253 = !DILocation(line: 353, column: 44, scope: !8239)
!8254 = !DILocation(line: 353, column: 9, scope: !8239)
!8255 = !DILocation(line: 353, column: 2, scope: !8239)
!8256 = !DILocation(line: 354, column: 1, scope: !8239)
!8257 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1042, file: !1042, line: 316, type: !8258, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !896, retainedNodes: !8260)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!103, !1108, !1045}
!8260 = !{!8261, !8262, !8263}
!8261 = !DILocalVariable(name: "config", arg: 1, scope: !8257, file: !1042, line: 317, type: !1108)
!8262 = !DILocalVariable(name: "state", arg: 2, scope: !8257, file: !1042, line: 318, type: !1045)
!8263 = !DILocalVariable(name: "reg", scope: !8257, file: !1042, line: 320, type: !22)
!8264 = !DILocation(line: 0, scope: !8257)
!8265 = !DILocation(line: 329, column: 39, scope: !8257)
!8266 = !DILocation(line: 329, column: 52, scope: !8257)
!8267 = !DILocation(line: 329, column: 9, scope: !8257)
!8268 = !DILocation(line: 329, column: 2, scope: !8257)
!8269 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1247, file: !1247, line: 270, type: !1253, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8270)
!8270 = !{!8271}
!8271 = !DILocalVariable(name: "dev", arg: 1, scope: !8269, file: !1247, line: 270, type: !1255)
!8272 = !DILocation(line: 0, scope: !8269)
!8273 = !DILocation(line: 274, column: 2, scope: !8269)
!8274 = !DILocation(line: 275, column: 12, scope: !8269)
!8275 = !DILocation(line: 276, column: 15, scope: !8269)
!8276 = !DILocation(line: 277, column: 16, scope: !8269)
!8277 = !DILocation(line: 278, column: 15, scope: !8269)
!8278 = !DILocation(line: 279, column: 16, scope: !8269)
!8279 = !DILocation(line: 282, column: 2, scope: !8269)
!8280 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !532, file: !532, line: 1638, type: !5491, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8281)
!8281 = !{!8282, !8283}
!8282 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8280, file: !532, line: 1638, type: !2064)
!8283 = !DILocalVariable(name: "priority", arg: 2, scope: !8280, file: !532, line: 1638, type: !121)
!8284 = !DILocation(line: 0, scope: !8280)
!8285 = !DILocation(line: 1646, column: 46, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8287, file: !532, line: 1645, column: 3)
!8287 = distinct !DILexicalBlock(scope: !8280, file: !532, line: 1640, column: 7)
!8288 = !DILocation(line: 1648, column: 1, scope: !8280)
!8289 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1247, file: !1247, line: 118, type: !5394, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8290)
!8290 = !{!8291, !8292}
!8291 = !DILocalVariable(name: "arg", arg: 1, scope: !8289, file: !1247, line: 118, type: !102)
!8292 = !DILocalVariable(name: "dticks", scope: !8289, file: !1247, line: 121, type: !121)
!8293 = !DILocation(line: 0, scope: !8289)
!8294 = !DILocation(line: 124, column: 2, scope: !8289)
!8295 = !DILocation(line: 129, column: 17, scope: !8289)
!8296 = !DILocation(line: 129, column: 14, scope: !8289)
!8297 = !DILocation(line: 130, column: 15, scope: !8289)
!8298 = !DILocation(line: 145, column: 27, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !1247, line: 132, column: 16)
!8300 = distinct !DILexicalBlock(scope: !8289, file: !1247, line: 132, column: 6)
!8301 = !DILocation(line: 145, column: 25, scope: !8299)
!8302 = !DILocation(line: 145, column: 45, scope: !8299)
!8303 = !DILocation(line: 146, column: 30, scope: !8299)
!8304 = !DILocation(line: 146, column: 20, scope: !8299)
!8305 = !DILocation(line: 147, column: 3, scope: !8299)
!8306 = !DILocation(line: 151, column: 2, scope: !8289)
!8307 = !DILocation(line: 152, column: 1, scope: !8289)
!8308 = distinct !DISubprogram(name: "elapsed", scope: !1247, file: !1247, line: 85, type: !6206, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8309)
!8309 = !{!8310, !8311, !8312}
!8310 = !DILocalVariable(name: "val1", scope: !8308, file: !1247, line: 87, type: !121)
!8311 = !DILocalVariable(name: "ctrl", scope: !8308, file: !1247, line: 88, type: !121)
!8312 = !DILocalVariable(name: "val2", scope: !8308, file: !1247, line: 89, type: !121)
!8313 = !DILocation(line: 87, column: 27, scope: !8308)
!8314 = !DILocation(line: 0, scope: !8308)
!8315 = !DILocation(line: 88, column: 27, scope: !8308)
!8316 = !DILocation(line: 89, column: 27, scope: !8308)
!8317 = !DILocation(line: 105, column: 12, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8308, file: !1247, line: 105, column: 6)
!8319 = !DILocation(line: 106, column: 6, scope: !8318)
!8320 = !DILocation(line: 107, column: 16, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8318, file: !1247, line: 106, column: 24)
!8322 = !DILocation(line: 111, column: 18, scope: !8321)
!8323 = !DILocation(line: 112, column: 2, scope: !8321)
!8324 = !DILocation(line: 114, column: 20, scope: !8308)
!8325 = !DILocation(line: 114, column: 30, scope: !8308)
!8326 = !DILocation(line: 114, column: 28, scope: !8308)
!8327 = !DILocation(line: 114, column: 2, scope: !8308)
!8328 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1247, file: !1247, line: 154, type: !8329, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8331)
!8329 = !DISubroutineType(types: !8330)
!8330 = !{null, !878, !205}
!8331 = !{!8332, !8333, !8334, !8335, !8336, !8337, !8338, !8343, !8344}
!8332 = !DILocalVariable(name: "ticks", arg: 1, scope: !8328, file: !1247, line: 154, type: !878)
!8333 = !DILocalVariable(name: "idle", arg: 2, scope: !8328, file: !1247, line: 154, type: !205)
!8334 = !DILocalVariable(name: "delay", scope: !8328, file: !1247, line: 169, type: !121)
!8335 = !DILocalVariable(name: "val1", scope: !8328, file: !1247, line: 170, type: !121)
!8336 = !DILocalVariable(name: "val2", scope: !8328, file: !1247, line: 170, type: !121)
!8337 = !DILocalVariable(name: "last_load_", scope: !8328, file: !1247, line: 171, type: !121)
!8338 = !DILocalVariable(name: "key", scope: !8328, file: !1247, line: 176, type: !8339)
!8339 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !335, line: 106, baseType: !8340)
!8340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !335, line: 32, size: 32, elements: !8341)
!8341 = !{!8342}
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8340, file: !335, line: 33, baseType: !103, size: 32)
!8343 = !DILocalVariable(name: "pending", scope: !8328, file: !1247, line: 178, type: !121)
!8344 = !DILocalVariable(name: "unannounced", scope: !8328, file: !1247, line: 185, type: !121)
!8345 = !DILocation(line: 0, scope: !8328)
!8346 = !DILocation(line: 162, column: 49, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8328, file: !1247, line: 162, column: 6)
!8348 = !DILocation(line: 163, column: 17, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8347, file: !1247, line: 162, column: 78)
!8350 = !DILocation(line: 164, column: 13, scope: !8349)
!8351 = !DILocation(line: 165, column: 3, scope: !8349)
!8352 = !DILocation(line: 171, column: 24, scope: !8328)
!8353 = !DILocation(line: 173, column: 10, scope: !8328)
!8354 = !DILocation(line: 174, column: 10, scope: !8328)
!8355 = !DILocalVariable(name: "l", arg: 1, scope: !8356, file: !335, line: 136, type: !8359)
!8356 = distinct !DISubprogram(name: "k_spin_lock", scope: !335, file: !335, line: 136, type: !8357, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8360)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{!8339, !8359}
!8359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!8360 = !{!8355, !8361}
!8361 = !DILocalVariable(name: "k", scope: !8356, file: !335, line: 139, type: !8339)
!8362 = !DILocation(line: 0, scope: !8356, inlinedAt: !8363)
!8363 = distinct !DILocation(line: 176, column: 25, scope: !8328)
!8364 = !DILocation(line: 55, column: 2, scope: !8365, inlinedAt: !8369)
!8365 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8366)
!8366 = !{!8367, !8368}
!8367 = !DILocalVariable(name: "key", scope: !8365, file: !4919, line: 44, type: !32)
!8368 = !DILocalVariable(name: "tmp", scope: !8365, file: !4919, line: 53, type: !32)
!8369 = distinct !DILocation(line: 145, column: 10, scope: !8356, inlinedAt: !8363)
!8370 = !{i64 1283701}
!8371 = !DILocation(line: 0, scope: !8365, inlinedAt: !8369)
!8372 = !DILocation(line: 178, column: 21, scope: !8328)
!8373 = !DILocation(line: 180, column: 18, scope: !8328)
!8374 = !DILocation(line: 182, column: 14, scope: !8328)
!8375 = !DILocation(line: 183, column: 15, scope: !8328)
!8376 = !DILocation(line: 185, column: 39, scope: !8328)
!8377 = !DILocation(line: 185, column: 37, scope: !8328)
!8378 = !DILocation(line: 187, column: 27, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8328, file: !1247, line: 187, column: 6)
!8380 = !DILocation(line: 187, column: 6, scope: !8328)
!8381 = !DILocation(line: 202, column: 27, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8379, file: !1247, line: 195, column: 9)
!8383 = !DILocation(line: 202, column: 48, scope: !8382)
!8384 = !DILocation(line: 203, column: 9, scope: !8382)
!8385 = !DILocation(line: 204, column: 11, scope: !8382)
!8386 = !DILocation(line: 205, column: 13, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8382, file: !1247, line: 205, column: 7)
!8388 = !DILocation(line: 205, column: 7, scope: !8382)
!8389 = !DILocation(line: 0, scope: !8379)
!8390 = !DILocation(line: 212, column: 18, scope: !8328)
!8391 = !DILocation(line: 214, column: 28, scope: !8328)
!8392 = !DILocation(line: 214, column: 16, scope: !8328)
!8393 = !DILocation(line: 215, column: 15, scope: !8328)
!8394 = !DILocation(line: 227, column: 11, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8328, file: !1247, line: 227, column: 6)
!8396 = !DILocation(line: 227, column: 6, scope: !8328)
!8397 = !DILocation(line: 228, column: 15, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8395, file: !1247, line: 227, column: 19)
!8399 = !DILocation(line: 228, column: 38, scope: !8398)
!8400 = !DILocation(line: 228, column: 24, scope: !8398)
!8401 = !DILocation(line: 229, column: 2, scope: !8398)
!8402 = !DILocation(line: 230, column: 24, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8395, file: !1247, line: 229, column: 9)
!8404 = !DILocation(line: 230, column: 15, scope: !8403)
!8405 = !DILocation(line: 0, scope: !8395)
!8406 = !DILocalVariable(name: "key", arg: 2, scope: !8407, file: !335, line: 190, type: !8339)
!8407 = distinct !DISubprogram(name: "k_spin_unlock", scope: !335, file: !335, line: 189, type: !8408, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8410)
!8408 = !DISubroutineType(types: !8409)
!8409 = !{null, !8359, !8339}
!8410 = !{!8411, !8406}
!8411 = !DILocalVariable(name: "l", arg: 1, scope: !8407, file: !335, line: 189, type: !8359)
!8412 = !DILocation(line: 0, scope: !8407, inlinedAt: !8413)
!8413 = distinct !DILocation(line: 232, column: 2, scope: !8328)
!8414 = !DILocalVariable(name: "key", arg: 1, scope: !8415, file: !4919, line: 84, type: !32)
!8415 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8416)
!8416 = !{!8414}
!8417 = !DILocation(line: 0, scope: !8415, inlinedAt: !8418)
!8418 = distinct !DILocation(line: 215, column: 2, scope: !8407, inlinedAt: !8413)
!8419 = !DILocation(line: 95, column: 2, scope: !8415, inlinedAt: !8418)
!8420 = !{i64 1284518}
!8421 = !DILocation(line: 234, column: 1, scope: !8328)
!8422 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1247, file: !1247, line: 236, type: !6206, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8423)
!8423 = !{!8424, !8425}
!8424 = !DILocalVariable(name: "key", scope: !8422, file: !1247, line: 242, type: !8339)
!8425 = !DILocalVariable(name: "cyc", scope: !8422, file: !1247, line: 243, type: !121)
!8426 = !DILocation(line: 0, scope: !8356, inlinedAt: !8427)
!8427 = distinct !DILocation(line: 242, column: 25, scope: !8422)
!8428 = !DILocation(line: 55, column: 2, scope: !8365, inlinedAt: !8429)
!8429 = distinct !DILocation(line: 145, column: 10, scope: !8356, inlinedAt: !8427)
!8430 = !DILocation(line: 0, scope: !8365, inlinedAt: !8429)
!8431 = !DILocation(line: 0, scope: !8422)
!8432 = !DILocation(line: 243, column: 17, scope: !8422)
!8433 = !DILocation(line: 243, column: 29, scope: !8422)
!8434 = !DILocation(line: 243, column: 27, scope: !8422)
!8435 = !DILocation(line: 243, column: 43, scope: !8422)
!8436 = !DILocation(line: 243, column: 41, scope: !8422)
!8437 = !DILocation(line: 0, scope: !8407, inlinedAt: !8438)
!8438 = distinct !DILocation(line: 245, column: 2, scope: !8422)
!8439 = !DILocation(line: 0, scope: !8415, inlinedAt: !8440)
!8440 = distinct !DILocation(line: 215, column: 2, scope: !8407, inlinedAt: !8438)
!8441 = !DILocation(line: 95, column: 2, scope: !8415, inlinedAt: !8440)
!8442 = !DILocation(line: 246, column: 13, scope: !8422)
!8443 = !DILocation(line: 246, column: 2, scope: !8422)
!8444 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1247, file: !1247, line: 249, type: !6206, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !8445)
!8445 = !{!8446, !8447}
!8446 = !DILocalVariable(name: "key", scope: !8444, file: !1247, line: 251, type: !8339)
!8447 = !DILocalVariable(name: "ret", scope: !8444, file: !1247, line: 252, type: !121)
!8448 = !DILocation(line: 0, scope: !8356, inlinedAt: !8449)
!8449 = distinct !DILocation(line: 251, column: 25, scope: !8444)
!8450 = !DILocation(line: 55, column: 2, scope: !8365, inlinedAt: !8451)
!8451 = distinct !DILocation(line: 145, column: 10, scope: !8356, inlinedAt: !8449)
!8452 = !DILocation(line: 0, scope: !8365, inlinedAt: !8451)
!8453 = !DILocation(line: 0, scope: !8444)
!8454 = !DILocation(line: 252, column: 17, scope: !8444)
!8455 = !DILocation(line: 252, column: 29, scope: !8444)
!8456 = !DILocation(line: 252, column: 27, scope: !8444)
!8457 = !DILocation(line: 0, scope: !8407, inlinedAt: !8458)
!8458 = distinct !DILocation(line: 254, column: 2, scope: !8444)
!8459 = !DILocation(line: 0, scope: !8415, inlinedAt: !8460)
!8460 = distinct !DILocation(line: 215, column: 2, scope: !8407, inlinedAt: !8458)
!8461 = !DILocation(line: 95, column: 2, scope: !8415, inlinedAt: !8460)
!8462 = !DILocation(line: 255, column: 2, scope: !8444)
!8463 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1247, file: !1247, line: 258, type: !873, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !336)
!8464 = !DILocation(line: 260, column: 6, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8463, file: !1247, line: 260, column: 6)
!8466 = !DILocation(line: 260, column: 16, scope: !8465)
!8467 = !DILocation(line: 260, column: 6, scope: !8463)
!8468 = !DILocation(line: 261, column: 17, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8465, file: !1247, line: 260, column: 34)
!8470 = !DILocation(line: 262, column: 2, scope: !8469)
!8471 = !DILocation(line: 263, column: 1, scope: !8463)
!8472 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1247, file: !1247, line: 265, type: !873, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1113, retainedNodes: !336)
!8473 = !DILocation(line: 267, column: 16, scope: !8472)
!8474 = !DILocation(line: 268, column: 1, scope: !8472)
!8475 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8476, file: !8476, line: 9, type: !8477, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2357, retainedNodes: !8493)
!8476 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!103, !8479, !202, !8492}
!8479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8480, size: 32)
!8480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8481)
!8481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1042, line: 60, size: 64, elements: !8482)
!8482 = !{!8483, !8491}
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8481, file: !1042, line: 69, baseType: !8484, size: 32)
!8484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8485, size: 32)
!8485 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8486)
!8486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1042, line: 50, size: 64, elements: !8487)
!8487 = !{!8488, !8489, !8490}
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8486, file: !1042, line: 52, baseType: !1050, size: 32)
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8486, file: !1042, line: 54, baseType: !202, size: 8, offset: 32)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8486, file: !1042, line: 56, baseType: !202, size: 8, offset: 40)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8481, file: !1042, line: 71, baseType: !202, size: 8, offset: 32)
!8492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8484, size: 32)
!8493 = !{!8494, !8495, !8496}
!8494 = !DILocalVariable(name: "config", arg: 1, scope: !8475, file: !8476, line: 9, type: !8479)
!8495 = !DILocalVariable(name: "id", arg: 2, scope: !8475, file: !8476, line: 9, type: !202)
!8496 = !DILocalVariable(name: "state", arg: 3, scope: !8475, file: !8476, line: 10, type: !8492)
!8497 = !DILocation(line: 0, scope: !8475)
!8498 = !DILocation(line: 12, column: 20, scope: !8475)
!8499 = !DILocation(line: 13, column: 27, scope: !8475)
!8500 = !DILocation(line: 13, column: 42, scope: !8475)
!8501 = !DILocation(line: 13, column: 19, scope: !8475)
!8502 = !DILocation(line: 13, column: 16, scope: !8475)
!8503 = !DILocation(line: 13, column: 2, scope: !8475)
!8504 = distinct !{!8504, !8503, !8505}
!8505 = !DILocation(line: 19, column: 2, scope: !8475)
!8506 = !DILocation(line: 14, column: 23, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8508, file: !8476, line: 14, column: 7)
!8508 = distinct !DILexicalBlock(scope: !8475, file: !8476, line: 13, column: 54)
!8509 = !DILocation(line: 14, column: 10, scope: !8507)
!8510 = !DILocation(line: 18, column: 11, scope: !8508)
!8511 = !DILocation(line: 14, column: 7, scope: !8508)
!8512 = !DILocation(line: 22, column: 1, scope: !8475)
!8513 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1348, file: !1348, line: 78, type: !8514, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1282, retainedNodes: !8516)
!8514 = !DISubroutineType(types: !8515)
!8515 = !{!103, !1050, !202, !22}
!8516 = !{!8517, !8518, !8519, !8520}
!8517 = !DILocalVariable(name: "pins", arg: 1, scope: !8513, file: !1348, line: 78, type: !1050)
!8518 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8513, file: !1348, line: 78, type: !202)
!8519 = !DILocalVariable(name: "reg", arg: 3, scope: !8513, file: !1348, line: 79, type: !22)
!8520 = !DILocalVariable(name: "i", scope: !8521, file: !1348, line: 83, type: !202)
!8521 = distinct !DILexicalBlock(scope: !8513, file: !1348, line: 83, column: 2)
!8522 = !DILocation(line: 0, scope: !8513)
!8523 = !DILocation(line: 0, scope: !8521)
!8524 = !DILocation(line: 83, column: 25, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8521, file: !1348, line: 83, column: 2)
!8526 = !DILocation(line: 83, column: 2, scope: !8521)
!8527 = !DILocation(line: 87, column: 2, scope: !8513)
!8528 = !DILocation(line: 84, column: 30, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8525, file: !1348, line: 83, column: 41)
!8530 = !DILocation(line: 84, column: 25, scope: !8529)
!8531 = !DILocation(line: 84, column: 3, scope: !8529)
!8532 = !DILocation(line: 83, column: 37, scope: !8525)
!8533 = distinct !{!8533, !8526, !8534}
!8534 = !DILocation(line: 85, column: 2, scope: !8521)
!8535 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !1348, file: !1348, line: 52, type: !8536, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1282, retainedNodes: !8538)
!8536 = !DISubroutineType(types: !8537)
!8537 = !{null, !1052}
!8538 = !{!8539, !8540, !8547, !8548}
!8539 = !DILocalVariable(name: "pin", arg: 1, scope: !8535, file: !1348, line: 52, type: !1052)
!8540 = !DILocalVariable(name: "soc_pin", scope: !8535, file: !1348, line: 54, type: !8541)
!8541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_gpio_pin", file: !5070, line: 85, size: 128, elements: !8542)
!8542 = !{!8543, !8544, !8545, !8546}
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8541, file: !5070, line: 86, baseType: !121, size: 32)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !8541, file: !5070, line: 90, baseType: !1285, size: 32, offset: 32)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !8541, file: !5070, line: 92, baseType: !202, size: 8, offset: 64)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8541, file: !5070, line: 93, baseType: !121, size: 32, offset: 96)
!8547 = !DILocalVariable(name: "port_idx", scope: !8535, file: !1348, line: 55, type: !202)
!8548 = !DILocalVariable(name: "port_func", scope: !8535, file: !1348, line: 55, type: !202)
!8549 = !DILocation(line: 0, scope: !8535)
!8550 = !DILocation(line: 54, column: 2, scope: !8535)
!8551 = !DILocation(line: 54, column: 22, scope: !8535)
!8552 = !DILocation(line: 57, column: 13, scope: !8535)
!8553 = !DILocation(line: 64, column: 25, scope: !8535)
!8554 = !DILocation(line: 64, column: 17, scope: !8535)
!8555 = !DILocation(line: 64, column: 10, scope: !8535)
!8556 = !DILocation(line: 64, column: 15, scope: !8535)
!8557 = !DILocation(line: 66, column: 22, scope: !8535)
!8558 = !DILocation(line: 66, column: 10, scope: !8535)
!8559 = !DILocation(line: 66, column: 20, scope: !8535)
!8560 = !DILocation(line: 67, column: 22, scope: !8535)
!8561 = !DILocation(line: 67, column: 19, scope: !8535)
!8562 = !DILocation(line: 67, column: 10, scope: !8535)
!8563 = !DILocation(line: 67, column: 15, scope: !8535)
!8564 = !DILocation(line: 68, column: 18, scope: !8535)
!8565 = !DILocation(line: 70, column: 16, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8535, file: !1348, line: 70, column: 6)
!8567 = !DILocation(line: 70, column: 6, scope: !8535)
!8568 = !DILocation(line: 68, column: 10, scope: !8535)
!8569 = !DILocation(line: 75, column: 2, scope: !8535)
!8570 = !DILocation(line: 76, column: 1, scope: !8535)
!8571 = distinct !DISubprogram(name: "z_device_state_init", scope: !8572, file: !8572, line: 23, type: !873, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8573)
!8572 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8573 = !{!8574}
!8574 = !DILocalVariable(name: "dev", scope: !8571, file: !8572, line: 25, type: !8575)
!8575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8576, size: 32)
!8576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8577)
!8577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !189, line: 378, size: 192, elements: !8578)
!8578 = !{!8579, !8580, !8581, !8582, !8588, !8589}
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8577, file: !189, line: 380, baseType: !192, size: 32)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !8577, file: !189, line: 382, baseType: !13, size: 32, offset: 32)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8577, file: !189, line: 384, baseType: !13, size: 32, offset: 64)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8577, file: !189, line: 386, baseType: !8583, size: 32, offset: 96)
!8583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8584, size: 32)
!8584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !189, line: 351, size: 16, elements: !8585)
!8585 = !{!8586, !8587}
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !8584, file: !189, line: 359, baseType: !202, size: 8)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !8584, file: !189, line: 364, baseType: !205, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8577, file: !189, line: 388, baseType: !102, size: 32, offset: 128)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !8577, file: !189, line: 396, baseType: !208, size: 32, offset: 160)
!8590 = !DILocation(line: 0, scope: !8571)
!8591 = !DILocation(line: 31, column: 1, scope: !8571)
!8592 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !8572, file: !8572, line: 33, type: !8593, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8595)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!8575, !192}
!8595 = !{!8596, !8597}
!8596 = !DILocalVariable(name: "name", arg: 1, scope: !8592, file: !8572, line: 33, type: !192)
!8597 = !DILocalVariable(name: "dev", scope: !8592, file: !8572, line: 35, type: !8575)
!8598 = !DILocation(line: 0, scope: !8592)
!8599 = !DILocation(line: 40, column: 12, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8592, file: !8572, line: 40, column: 6)
!8601 = !DILocation(line: 40, column: 21, scope: !8600)
!8602 = !DILocation(line: 40, column: 25, scope: !8600)
!8603 = !DILocation(line: 40, column: 33, scope: !8600)
!8604 = !DILocation(line: 40, column: 6, scope: !8592)
!8605 = !DILocation(line: 55, column: 2, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8592, file: !8572, line: 55, column: 2)
!8607 = !DILocation(line: 50, column: 7, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !8572, line: 50, column: 7)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !8572, line: 49, column: 57)
!8610 = distinct !DILexicalBlock(scope: !8611, file: !8572, line: 49, column: 2)
!8611 = distinct !DILexicalBlock(scope: !8592, file: !8572, line: 49, column: 2)
!8612 = !DILocation(line: 50, column: 30, scope: !8608)
!8613 = !DILocation(line: 50, column: 39, scope: !8608)
!8614 = !DILocation(line: 50, column: 44, scope: !8608)
!8615 = !DILocation(line: 50, column: 7, scope: !8609)
!8616 = !DILocation(line: 49, column: 53, scope: !8610)
!8617 = !DILocation(line: 49, column: 33, scope: !8610)
!8618 = !DILocation(line: 49, column: 2, scope: !8611)
!8619 = distinct !{!8619, !8618, !8620}
!8620 = !DILocation(line: 53, column: 2, scope: !8611)
!8621 = !DILocation(line: 56, column: 7, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8572, line: 56, column: 7)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !8572, line: 55, column: 57)
!8624 = distinct !DILexicalBlock(scope: !8606, file: !8572, line: 55, column: 2)
!8625 = !DILocation(line: 56, column: 30, scope: !8622)
!8626 = !DILocation(line: 56, column: 52, scope: !8622)
!8627 = !DILocation(line: 56, column: 34, scope: !8622)
!8628 = !DILocation(line: 56, column: 58, scope: !8622)
!8629 = !DILocation(line: 56, column: 7, scope: !8623)
!8630 = !DILocation(line: 55, column: 53, scope: !8624)
!8631 = !DILocation(line: 55, column: 33, scope: !8624)
!8632 = distinct !{!8632, !8605, !8633}
!8633 = !DILocation(line: 59, column: 2, scope: !8606)
!8634 = !DILocation(line: 62, column: 1, scope: !8592)
!8635 = distinct !DISubprogram(name: "z_device_is_ready", scope: !8572, file: !8572, line: 93, type: !8636, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8638)
!8636 = !DISubroutineType(types: !8637)
!8637 = !{!205, !8575}
!8638 = !{!8639}
!8639 = !DILocalVariable(name: "dev", arg: 1, scope: !8635, file: !8572, line: 93, type: !8575)
!8640 = !DILocation(line: 0, scope: !8635)
!8641 = !DILocation(line: 99, column: 10, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8635, file: !8572, line: 99, column: 6)
!8643 = !DILocation(line: 99, column: 6, scope: !8635)
!8644 = !DILocation(line: 103, column: 14, scope: !8635)
!8645 = !DILocation(line: 103, column: 21, scope: !8635)
!8646 = !DILocation(line: 103, column: 33, scope: !8635)
!8647 = !DILocation(line: 103, column: 49, scope: !8635)
!8648 = !DILocation(line: 103, column: 58, scope: !8635)
!8649 = !DILocation(line: 104, column: 1, scope: !8635)
!8650 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !8572, file: !8572, line: 87, type: !8651, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8654)
!8651 = !DISubroutineType(types: !8652)
!8652 = !{!223, !8653}
!8653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 32)
!8654 = !{!8655}
!8655 = !DILocalVariable(name: "devices", arg: 1, scope: !8650, file: !8572, line: 87, type: !8653)
!8656 = !DILocation(line: 0, scope: !8650)
!8657 = !DILocation(line: 89, column: 11, scope: !8650)
!8658 = !DILocation(line: 90, column: 2, scope: !8650)
!8659 = distinct !DISubprogram(name: "device_required_foreach", scope: !8572, file: !8572, line: 125, type: !8660, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8666)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{!103, !8575, !8662, !102}
!8662 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !189, line: 471, baseType: !8663)
!8663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8664, size: 32)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!103, !8575, !102}
!8666 = !{!8667, !8668, !8669, !8670, !8671}
!8667 = !DILocalVariable(name: "dev", arg: 1, scope: !8659, file: !8572, line: 125, type: !8575)
!8668 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !8659, file: !8572, line: 126, type: !8662)
!8669 = !DILocalVariable(name: "context", arg: 3, scope: !8659, file: !8572, line: 127, type: !102)
!8670 = !DILocalVariable(name: "handle_count", scope: !8659, file: !8572, line: 129, type: !223)
!8671 = !DILocalVariable(name: "handles", scope: !8659, file: !8572, line: 130, type: !208)
!8672 = !DILocation(line: 0, scope: !8659)
!8673 = !DILocation(line: 129, column: 2, scope: !8659)
!8674 = !DILocation(line: 129, column: 9, scope: !8659)
!8675 = !DILocation(line: 130, column: 35, scope: !8659)
!8676 = !DILocation(line: 132, column: 33, scope: !8659)
!8677 = !DILocation(line: 132, column: 9, scope: !8659)
!8678 = !DILocation(line: 133, column: 1, scope: !8659)
!8679 = !DILocation(line: 132, column: 2, scope: !8659)
!8680 = distinct !DISubprogram(name: "device_required_handles_get", scope: !189, file: !189, line: 493, type: !8681, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8683)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{!208, !8575, !2002}
!8683 = !{!8684, !8685, !8686, !8687}
!8684 = !DILocalVariable(name: "dev", arg: 1, scope: !8680, file: !189, line: 493, type: !8575)
!8685 = !DILocalVariable(name: "count", arg: 2, scope: !8680, file: !189, line: 493, type: !2002)
!8686 = !DILocalVariable(name: "rv", scope: !8680, file: !189, line: 495, type: !208)
!8687 = !DILocalVariable(name: "i", scope: !8688, file: !189, line: 498, type: !223)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !189, line: 497, column: 18)
!8689 = distinct !DILexicalBlock(scope: !8680, file: !189, line: 497, column: 6)
!8690 = !DILocation(line: 0, scope: !8680)
!8691 = !DILocation(line: 495, column: 35, scope: !8680)
!8692 = !DILocation(line: 497, column: 9, scope: !8689)
!8693 = !DILocation(line: 497, column: 6, scope: !8680)
!8694 = !DILocation(line: 0, scope: !8688)
!8695 = !DILocation(line: 500, column: 11, scope: !8688)
!8696 = !DILocation(line: 500, column: 40, scope: !8688)
!8697 = !DILocation(line: 502, column: 4, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8688, file: !189, line: 501, column: 40)
!8699 = distinct !{!8699, !8700, !8701}
!8700 = !DILocation(line: 500, column: 3, scope: !8688)
!8701 = !DILocation(line: 503, column: 3, scope: !8688)
!8702 = !DILocation(line: 504, column: 10, scope: !8688)
!8703 = !DILocation(line: 505, column: 2, scope: !8688)
!8704 = !DILocation(line: 507, column: 2, scope: !8680)
!8705 = distinct !DISubprogram(name: "device_visitor", scope: !8572, file: !8572, line: 106, type: !8706, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8708)
!8706 = !DISubroutineType(types: !8707)
!8707 = !{!103, !208, !223, !8662, !102}
!8708 = !{!8709, !8710, !8711, !8712, !8713, !8715, !8718, !8719}
!8709 = !DILocalVariable(name: "handles", arg: 1, scope: !8705, file: !8572, line: 106, type: !208)
!8710 = !DILocalVariable(name: "handle_count", arg: 2, scope: !8705, file: !8572, line: 107, type: !223)
!8711 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !8705, file: !8572, line: 108, type: !8662)
!8712 = !DILocalVariable(name: "context", arg: 4, scope: !8705, file: !8572, line: 109, type: !102)
!8713 = !DILocalVariable(name: "i", scope: !8714, file: !8572, line: 112, type: !223)
!8714 = distinct !DILexicalBlock(scope: !8705, file: !8572, line: 112, column: 2)
!8715 = !DILocalVariable(name: "dh", scope: !8716, file: !8572, line: 113, type: !210)
!8716 = distinct !DILexicalBlock(scope: !8717, file: !8572, line: 112, column: 44)
!8717 = distinct !DILexicalBlock(scope: !8714, file: !8572, line: 112, column: 2)
!8718 = !DILocalVariable(name: "rdev", scope: !8716, file: !8572, line: 114, type: !8575)
!8719 = !DILocalVariable(name: "rc", scope: !8716, file: !8572, line: 115, type: !103)
!8720 = !DILocation(line: 0, scope: !8705)
!8721 = !DILocation(line: 0, scope: !8714)
!8722 = !DILocation(line: 112, column: 23, scope: !8717)
!8723 = !DILocation(line: 112, column: 2, scope: !8714)
!8724 = distinct !{!8724, !8723, !8725}
!8725 = !DILocation(line: 120, column: 2, scope: !8714)
!8726 = !DILocation(line: 113, column: 24, scope: !8716)
!8727 = !DILocation(line: 0, scope: !8716)
!8728 = !DILocation(line: 114, column: 31, scope: !8716)
!8729 = !DILocation(line: 115, column: 12, scope: !8716)
!8730 = !DILocation(line: 117, column: 10, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8716, file: !8572, line: 117, column: 7)
!8732 = !DILocation(line: 112, column: 39, scope: !8717)
!8733 = !DILocation(line: 123, column: 1, scope: !8705)
!8734 = distinct !DISubprogram(name: "device_from_handle", scope: !189, file: !189, line: 439, type: !8735, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8737)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!8575, !210}
!8737 = !{!8738, !8739, !8740}
!8738 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !8734, file: !189, line: 439, type: !210)
!8739 = !DILocalVariable(name: "dev", scope: !8734, file: !189, line: 443, type: !8575)
!8740 = !DILocalVariable(name: "numdev", scope: !8734, file: !189, line: 444, type: !223)
!8741 = !DILocation(line: 0, scope: !8734)
!8742 = !DILocation(line: 446, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8734, file: !189, line: 446, column: 6)
!8744 = !DILocation(line: 446, column: 18, scope: !8743)
!8745 = !DILocation(line: 446, column: 23, scope: !8743)
!8746 = !DILocation(line: 450, column: 2, scope: !8734)
!8747 = distinct !DISubprogram(name: "device_supported_foreach", scope: !8572, file: !8572, line: 135, type: !8660, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8748)
!8748 = !{!8749, !8750, !8751, !8752, !8753}
!8749 = !DILocalVariable(name: "dev", arg: 1, scope: !8747, file: !8572, line: 135, type: !8575)
!8750 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !8747, file: !8572, line: 136, type: !8662)
!8751 = !DILocalVariable(name: "context", arg: 3, scope: !8747, file: !8572, line: 137, type: !102)
!8752 = !DILocalVariable(name: "handle_count", scope: !8747, file: !8572, line: 139, type: !223)
!8753 = !DILocalVariable(name: "handles", scope: !8747, file: !8572, line: 140, type: !208)
!8754 = !DILocation(line: 0, scope: !8747)
!8755 = !DILocation(line: 139, column: 2, scope: !8747)
!8756 = !DILocation(line: 139, column: 9, scope: !8747)
!8757 = !DILocation(line: 140, column: 35, scope: !8747)
!8758 = !DILocation(line: 142, column: 33, scope: !8747)
!8759 = !DILocation(line: 142, column: 9, scope: !8747)
!8760 = !DILocation(line: 143, column: 1, scope: !8747)
!8761 = !DILocation(line: 142, column: 2, scope: !8747)
!8762 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !189, file: !189, line: 573, type: !8681, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !8763)
!8763 = !{!8764, !8765, !8766, !8767, !8768}
!8764 = !DILocalVariable(name: "dev", arg: 1, scope: !8762, file: !189, line: 573, type: !8575)
!8765 = !DILocalVariable(name: "count", arg: 2, scope: !8762, file: !189, line: 573, type: !2002)
!8766 = !DILocalVariable(name: "rv", scope: !8762, file: !189, line: 575, type: !208)
!8767 = !DILocalVariable(name: "region", scope: !8762, file: !189, line: 576, type: !223)
!8768 = !DILocalVariable(name: "i", scope: !8762, file: !189, line: 577, type: !223)
!8769 = !DILocation(line: 0, scope: !8762)
!8770 = !DILocation(line: 575, column: 35, scope: !8762)
!8771 = !DILocation(line: 579, column: 9, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8762, file: !189, line: 579, column: 6)
!8773 = !DILocation(line: 579, column: 6, scope: !8762)
!8774 = !DILocation(line: 582, column: 8, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8776, file: !189, line: 582, column: 8)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !189, line: 581, column: 23)
!8777 = distinct !DILexicalBlock(scope: !8772, file: !189, line: 579, column: 18)
!8778 = !DILocation(line: 582, column: 12, scope: !8775)
!8779 = !DILocation(line: 585, column: 6, scope: !8776)
!8780 = !DILocation(line: 0, scope: !8777)
!8781 = !DILocation(line: 581, column: 17, scope: !8777)
!8782 = !DILocation(line: 581, column: 3, scope: !8777)
!8783 = !DILocation(line: 588, column: 10, scope: !8777)
!8784 = !DILocation(line: 588, column: 16, scope: !8777)
!8785 = !DILocation(line: 589, column: 4, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8777, file: !189, line: 588, column: 39)
!8787 = !DILocation(line: 588, column: 3, scope: !8777)
!8788 = distinct !{!8788, !8787, !8789}
!8789 = !DILocation(line: 590, column: 3, scope: !8777)
!8790 = !DILocation(line: 591, column: 10, scope: !8777)
!8791 = !DILocation(line: 592, column: 2, scope: !8777)
!8792 = !DILocation(line: 575, column: 25, scope: !8762)
!8793 = !DILocation(line: 594, column: 2, scope: !8762)
!8794 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1356, file: !1356, line: 49, type: !8795, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !336)
!8795 = !DISubroutineType(types: !8796)
!8796 = !{!1996}
!8797 = !DILocation(line: 51, column: 10, scope: !8794)
!8798 = !DILocation(line: 51, column: 20, scope: !8794)
!8799 = !DILocation(line: 51, column: 2, scope: !8794)
!8800 = distinct !DISubprogram(name: "coredump", scope: !2366, file: !2366, line: 209, type: !8801, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8947)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{null, !32, !8803, !8847}
!8803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8804, size: 32)
!8804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8805)
!8805 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2170, line: 141, baseType: !8806)
!8806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2170, line: 97, size: 256, elements: !8807)
!8807 = !{!8808}
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8806, file: !2170, line: 107, baseType: !8809, size: 256)
!8809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2170, line: 98, size: 256, elements: !8810)
!8810 = !{!8811, !8816, !8821, !8826, !8831, !8836, !8841, !8846}
!8811 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 99, baseType: !8812, size: 32)
!8812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 99, size: 32, elements: !8813)
!8813 = !{!8814, !8815}
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8812, file: !2170, line: 99, baseType: !121, size: 32)
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8812, file: !2170, line: 99, baseType: !121, size: 32)
!8816 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 100, baseType: !8817, size: 32, offset: 32)
!8817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 100, size: 32, elements: !8818)
!8818 = !{!8819, !8820}
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8817, file: !2170, line: 100, baseType: !121, size: 32)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8817, file: !2170, line: 100, baseType: !121, size: 32)
!8821 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 101, baseType: !8822, size: 32, offset: 64)
!8822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 101, size: 32, elements: !8823)
!8823 = !{!8824, !8825}
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8822, file: !2170, line: 101, baseType: !121, size: 32)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8822, file: !2170, line: 101, baseType: !121, size: 32)
!8826 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 102, baseType: !8827, size: 32, offset: 96)
!8827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 102, size: 32, elements: !8828)
!8828 = !{!8829, !8830}
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8827, file: !2170, line: 102, baseType: !121, size: 32)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8827, file: !2170, line: 102, baseType: !121, size: 32)
!8831 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 103, baseType: !8832, size: 32, offset: 128)
!8832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 103, size: 32, elements: !8833)
!8833 = !{!8834, !8835}
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8832, file: !2170, line: 103, baseType: !121, size: 32)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8832, file: !2170, line: 103, baseType: !121, size: 32)
!8836 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 104, baseType: !8837, size: 32, offset: 160)
!8837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 104, size: 32, elements: !8838)
!8838 = !{!8839, !8840}
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8837, file: !2170, line: 104, baseType: !121, size: 32)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8837, file: !2170, line: 104, baseType: !121, size: 32)
!8841 = !DIDerivedType(tag: DW_TAG_member, scope: !8809, file: !2170, line: 105, baseType: !8842, size: 32, offset: 192)
!8842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8809, file: !2170, line: 105, size: 32, elements: !8843)
!8843 = !{!8844, !8845}
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8842, file: !2170, line: 105, baseType: !121, size: 32)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8842, file: !2170, line: 105, baseType: !121, size: 32)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8809, file: !2170, line: 106, baseType: !121, size: 32, offset: 224)
!8847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8848, size: 32)
!8848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !8849)
!8849 = !{!8850, !8908, !8920, !8921, !8922, !8923, !8929, !8942}
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8848, file: !398, line: 247, baseType: !8851, size: 384)
!8851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !8852)
!8852 = !{!8853, !8877, !8884, !8885, !8886, !8895, !8896, !8897}
!8853 = !DIDerivedType(tag: DW_TAG_member, scope: !8851, file: !398, line: 60, baseType: !8854, size: 64)
!8854 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8851, file: !398, line: 60, size: 64, elements: !8855)
!8855 = !{!8856, !8871}
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8854, file: !398, line: 61, baseType: !8857, size: 64)
!8857 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !344, line: 49, baseType: !8858)
!8858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !8859)
!8859 = !{!8860, !8866}
!8860 = !DIDerivedType(tag: DW_TAG_member, scope: !8858, file: !344, line: 38, baseType: !8861, size: 32)
!8861 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8858, file: !344, line: 38, size: 32, elements: !8862)
!8862 = !{!8863, !8865}
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8861, file: !344, line: 39, baseType: !8864, size: 32)
!8864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8858, size: 32)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8861, file: !344, line: 40, baseType: !8864, size: 32)
!8866 = !DIDerivedType(tag: DW_TAG_member, scope: !8858, file: !344, line: 42, baseType: !8867, size: 32, offset: 32)
!8867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8858, file: !344, line: 42, size: 32, elements: !8868)
!8868 = !{!8869, !8870}
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8867, file: !344, line: 43, baseType: !8864, size: 32)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8867, file: !344, line: 44, baseType: !8864, size: 32)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8854, file: !398, line: 62, baseType: !8872, size: 64)
!8872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !8873)
!8873 = !{!8874}
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8872, file: !423, line: 50, baseType: !8875, size: 64)
!8875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8876, size: 64, elements: !382)
!8876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8872, size: 32)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8851, file: !398, line: 68, baseType: !8878, size: 32, offset: 64)
!8878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8879, size: 32)
!8879 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !8880)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !8881)
!8881 = !{!8882}
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8880, file: !339, line: 232, baseType: !8883, size: 64)
!8883 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !8858)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8851, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8851, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!8886 = !DIDerivedType(tag: DW_TAG_member, scope: !8851, file: !398, line: 90, baseType: !8887, size: 16, offset: 112)
!8887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8851, file: !398, line: 90, size: 16, elements: !8888)
!8888 = !{!8889, !8894}
!8889 = !DIDerivedType(tag: DW_TAG_member, scope: !8887, file: !398, line: 91, baseType: !8890, size: 16)
!8890 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8887, file: !398, line: 91, size: 16, elements: !8891)
!8891 = !{!8892, !8893}
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8890, file: !398, line: 96, baseType: !444, size: 8)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8890, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8887, file: !398, line: 100, baseType: !448, size: 16)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8851, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8851, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8851, file: !398, line: 131, baseType: !8898, size: 192, offset: 192)
!8898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !8899)
!8899 = !{!8900, !8901, !8907}
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8898, file: !339, line: 245, baseType: !8857, size: 64)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8898, file: !339, line: 246, baseType: !8902, size: 32, offset: 64)
!8902 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !8903)
!8903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8904, size: 32)
!8904 = !DISubroutineType(types: !8905)
!8905 = !{null, !8906}
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8898, size: 32)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8898, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8848, file: !398, line: 250, baseType: !8909, size: 288, offset: 384)
!8909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !8910)
!8910 = !{!8911, !8912, !8913, !8914, !8915, !8916, !8917, !8918, !8919}
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8909, file: !465, line: 26, baseType: !121, size: 32)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8909, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8909, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8909, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8909, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8909, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8909, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!8918 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8909, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8909, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8848, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8848, file: !398, line: 256, baseType: !8879, size: 64, offset: 704)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8848, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8848, file: !398, line: 300, baseType: !8924, size: 96, offset: 800)
!8924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !8925)
!8925 = !{!8926, !8927, !8928}
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8924, file: !398, line: 153, baseType: !22, size: 32)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8924, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8924, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8848, file: !398, line: 325, baseType: !8930, size: 32, offset: 896)
!8930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8931, size: 32)
!8931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !8932)
!8932 = !{!8933, !8939, !8940}
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8931, file: !315, line: 5074, baseType: !8934, size: 96)
!8934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !8935)
!8935 = !{!8936, !8937, !8938}
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8934, file: !491, line: 57, baseType: !494, size: 32)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8934, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8934, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8931, file: !315, line: 5075, baseType: !8879, size: 64, offset: 96)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8931, file: !315, line: 5076, baseType: !8941, offset: 160)
!8941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8848, file: !398, line: 343, baseType: !8943, size: 64, offset: 928)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !8944)
!8944 = !{!8945, !8946}
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8943, file: !465, line: 63, baseType: !121, size: 32)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8943, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!8947 = !{!8948, !8949, !8950}
!8948 = !DILocalVariable(name: "reason", arg: 1, scope: !8800, file: !2366, line: 209, type: !32)
!8949 = !DILocalVariable(name: "esf", arg: 2, scope: !8800, file: !2366, line: 209, type: !8803)
!8950 = !DILocalVariable(name: "thread", arg: 3, scope: !8800, file: !2366, line: 210, type: !8847)
!8951 = !DILocation(line: 0, scope: !8800)
!8952 = !DILocation(line: 212, column: 1, scope: !8800)
!8953 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2366, file: !2366, line: 214, type: !8954, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8956)
!8954 = !DISubroutineType(types: !8955)
!8955 = !{null, !22, !22}
!8956 = !{!8957, !8958}
!8957 = !DILocalVariable(name: "start_addr", arg: 1, scope: !8953, file: !2366, line: 214, type: !22)
!8958 = !DILocalVariable(name: "end_addr", arg: 2, scope: !8953, file: !2366, line: 214, type: !22)
!8959 = !DILocation(line: 0, scope: !8953)
!8960 = !DILocation(line: 216, column: 1, scope: !8953)
!8961 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2366, file: !2366, line: 218, type: !8962, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8964)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{null, !286, !223}
!8964 = !{!8965, !8966}
!8965 = !DILocalVariable(name: "buf", arg: 1, scope: !8961, file: !2366, line: 218, type: !286)
!8966 = !DILocalVariable(name: "buflen", arg: 2, scope: !8961, file: !2366, line: 218, type: !223)
!8967 = !DILocation(line: 0, scope: !8961)
!8968 = !DILocation(line: 220, column: 1, scope: !8961)
!8969 = distinct !DISubprogram(name: "coredump_query", scope: !2366, file: !2366, line: 222, type: !8970, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{!103, !2365, !102}
!8972 = !{!8973, !8974}
!8973 = !DILocalVariable(name: "query_id", arg: 1, scope: !8969, file: !2366, line: 222, type: !2365)
!8974 = !DILocalVariable(name: "arg", arg: 2, scope: !8969, file: !2366, line: 222, type: !102)
!8975 = !DILocation(line: 0, scope: !8969)
!8976 = !DILocation(line: 224, column: 2, scope: !8969)
!8977 = distinct !DISubprogram(name: "coredump_cmd", scope: !2366, file: !2366, line: 227, type: !8978, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8980)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!103, !2372, !102}
!8980 = !{!8981, !8982}
!8981 = !DILocalVariable(name: "query_id", arg: 1, scope: !8977, file: !2366, line: 227, type: !2372)
!8982 = !DILocalVariable(name: "arg", arg: 2, scope: !8977, file: !2366, line: 227, type: !102)
!8983 = !DILocation(line: 0, scope: !8977)
!8984 = !DILocation(line: 229, column: 2, scope: !8977)
!8985 = distinct !DISubprogram(name: "arch_system_halt", scope: !8986, file: !8986, line: 23, type: !4993, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8987)
!8986 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8987 = !{!8988}
!8988 = !DILocalVariable(name: "reason", arg: 1, scope: !8985, file: !8986, line: 23, type: !32)
!8989 = !DILocation(line: 0, scope: !8985)
!8990 = !DILocation(line: 55, column: 2, scope: !8991, inlinedAt: !8995)
!8991 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !8992)
!8992 = !{!8993, !8994}
!8993 = !DILocalVariable(name: "key", scope: !8991, file: !4919, line: 44, type: !32)
!8994 = !DILocalVariable(name: "tmp", scope: !8991, file: !4919, line: 53, type: !32)
!8995 = distinct !DILocation(line: 31, column: 8, scope: !8985)
!8996 = !{i64 1322123}
!8997 = !DILocation(line: 0, scope: !8991, inlinedAt: !8995)
!8998 = !DILocation(line: 32, column: 2, scope: !8985)
!8999 = !DILocation(line: 32, column: 2, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !8986, line: 32, column: 2)
!9001 = distinct !DILexicalBlock(scope: !8985, file: !8986, line: 32, column: 2)
!9002 = distinct !{!9002, !9003, !9004}
!9003 = !DILocation(line: 32, column: 2, scope: !9001)
!9004 = !DILocation(line: 34, column: 2, scope: !9001)
!9005 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !8986, file: !8986, line: 39, type: !9006, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !9008)
!9006 = !DISubroutineType(types: !9007)
!9007 = !{null, !32, !8803}
!9008 = !{!9009, !9010}
!9009 = !DILocalVariable(name: "reason", arg: 1, scope: !9005, file: !8986, line: 39, type: !32)
!9010 = !DILocalVariable(name: "esf", arg: 2, scope: !9005, file: !8986, line: 40, type: !8803)
!9011 = !DILocation(line: 0, scope: !9005)
!9012 = !DILocation(line: 46, column: 2, scope: !9005)
!9013 = distinct !DISubprogram(name: "k_fatal_halt", scope: !8986, file: !8986, line: 81, type: !4993, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !9014)
!9014 = !{!9015}
!9015 = !DILocalVariable(name: "reason", arg: 1, scope: !9013, file: !8986, line: 81, type: !32)
!9016 = !DILocation(line: 0, scope: !9013)
!9017 = !DILocation(line: 83, column: 2, scope: !9013)
!9018 = distinct !DISubprogram(name: "z_fatal_error", scope: !8986, file: !8986, line: 96, type: !9006, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !9019)
!9019 = !{!9020, !9021, !9022, !9023}
!9020 = !DILocalVariable(name: "reason", arg: 1, scope: !9018, file: !8986, line: 96, type: !32)
!9021 = !DILocalVariable(name: "esf", arg: 2, scope: !9018, file: !8986, line: 96, type: !8803)
!9022 = !DILocalVariable(name: "key", scope: !9018, file: !8986, line: 102, type: !32)
!9023 = !DILocalVariable(name: "thread", scope: !9018, file: !8986, line: 103, type: !8847)
!9024 = !DILocation(line: 0, scope: !9018)
!9025 = !DILocation(line: 55, column: 2, scope: !8991, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 102, column: 21, scope: !9018)
!9027 = !DILocation(line: 0, scope: !8991, inlinedAt: !9026)
!9028 = !DILocation(line: 119, column: 11, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9018, file: !8986, line: 119, column: 6)
!9030 = !DILocation(line: 119, column: 20, scope: !9029)
!9031 = !DILocation(line: 131, column: 2, scope: !9018)
!9032 = !DILocation(line: 151, column: 7, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !8986, line: 146, column: 32)
!9034 = distinct !DILexicalBlock(scope: !9018, file: !8986, line: 146, column: 6)
!9035 = !DILocation(line: 151, column: 21, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9033, file: !8986, line: 151, column: 7)
!9037 = !DILocation(line: 104, column: 4, scope: !9018)
!9038 = !DILocalVariable(name: "key", arg: 1, scope: !9039, file: !4919, line: 84, type: !32)
!9039 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !9040)
!9040 = !{!9038}
!9041 = !DILocation(line: 0, scope: !9039, inlinedAt: !9042)
!9042 = distinct !DILocation(line: 186, column: 2, scope: !9018)
!9043 = !DILocation(line: 95, column: 2, scope: !9039, inlinedAt: !9042)
!9044 = !{i64 1322940}
!9045 = !DILocation(line: 189, column: 3, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !8986, line: 188, column: 41)
!9047 = distinct !DILexicalBlock(scope: !9018, file: !8986, line: 188, column: 6)
!9048 = !DILocation(line: 191, column: 1, scope: !9018)
!9049 = distinct !DISubprogram(name: "k_current_get", scope: !315, file: !315, line: 530, type: !9050, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !336)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{!9052}
!9052 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !398, line: 347, baseType: !8847)
!9053 = !DILocation(line: 535, column: 9, scope: !9049)
!9054 = !DILocation(line: 535, column: 2, scope: !9049)
!9055 = distinct !DISubprogram(name: "k_thread_abort", scope: !2876, file: !2876, line: 188, type: !9056, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !9058)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{null, !9052}
!9058 = !{!9059}
!9059 = !DILocalVariable(name: "thread", arg: 1, scope: !9055, file: !2876, line: 188, type: !9052)
!9060 = !DILocation(line: 0, scope: !9055)
!9061 = !DILocation(line: 197, column: 2, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9055, file: !2876, line: 197, column: 2)
!9063 = !{i64 2151089569}
!9064 = !DILocation(line: 198, column: 2, scope: !9055)
!9065 = !DILocation(line: 199, column: 1, scope: !9055)
!9066 = distinct !DISubprogram(name: "z_current_get", scope: !2876, file: !2876, line: 173, type: !9050, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !336)
!9067 = !DILocation(line: 180, column: 2, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9066, file: !2876, line: 180, column: 2)
!9069 = !{i64 2151089501}
!9070 = !DILocation(line: 181, column: 9, scope: !9066)
!9071 = !DILocation(line: 181, column: 2, scope: !9066)
!9072 = distinct !DISubprogram(name: "z_early_memset", scope: !1363, file: !1363, line: 108, type: !9073, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9075)
!9073 = !DISubroutineType(types: !9074)
!9074 = !{null, !102, !103, !223}
!9075 = !{!9076, !9077, !9078}
!9076 = !DILocalVariable(name: "dst", arg: 1, scope: !9072, file: !1363, line: 108, type: !102)
!9077 = !DILocalVariable(name: "c", arg: 2, scope: !9072, file: !1363, line: 108, type: !103)
!9078 = !DILocalVariable(name: "n", arg: 3, scope: !9072, file: !1363, line: 108, type: !223)
!9079 = !DILocation(line: 0, scope: !9072)
!9080 = !DILocation(line: 110, column: 9, scope: !9072)
!9081 = !DILocation(line: 111, column: 1, scope: !9072)
!9082 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1363, file: !1363, line: 121, type: !9083, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9085)
!9083 = !DISubroutineType(types: !9084)
!9084 = !{null, !102, !13, !223}
!9085 = !{!9086, !9087, !9088}
!9086 = !DILocalVariable(name: "dst", arg: 1, scope: !9082, file: !1363, line: 121, type: !102)
!9087 = !DILocalVariable(name: "src", arg: 2, scope: !9082, file: !1363, line: 121, type: !13)
!9088 = !DILocalVariable(name: "n", arg: 3, scope: !9082, file: !1363, line: 121, type: !223)
!9089 = !DILocation(line: 0, scope: !9082)
!9090 = !DILocation(line: 123, column: 9, scope: !9082)
!9091 = !DILocation(line: 124, column: 1, scope: !9082)
!9092 = distinct !DISubprogram(name: "z_bss_zero", scope: !1363, file: !1363, line: 132, type: !873, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !336)
!9093 = !DILocation(line: 143, column: 2, scope: !9092)
!9094 = !DILocation(line: 168, column: 1, scope: !9092)
!9095 = distinct !DISubprogram(name: "z_init_cpu", scope: !1363, file: !1363, line: 372, type: !9096, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9098)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{null, !103}
!9098 = !{!9099}
!9099 = !DILocalVariable(name: "id", arg: 1, scope: !9095, file: !1363, line: 372, type: !103)
!9100 = !DILocation(line: 0, scope: !9095)
!9101 = !DILocation(line: 374, column: 2, scope: !9095)
!9102 = !DILocation(line: 375, column: 34, scope: !9095)
!9103 = !DILocation(line: 375, column: 19, scope: !9095)
!9104 = !DILocation(line: 375, column: 31, scope: !9095)
!9105 = !DILocation(line: 376, column: 24, scope: !9095)
!9106 = !DILocation(line: 376, column: 19, scope: !9095)
!9107 = !DILocation(line: 376, column: 22, scope: !9095)
!9108 = !DILocation(line: 378, column: 26, scope: !9095)
!9109 = !DILocation(line: 378, column: 4, scope: !9095)
!9110 = !DILocation(line: 378, column: 50, scope: !9095)
!9111 = !DILocation(line: 377, column: 19, scope: !9095)
!9112 = !DILocation(line: 377, column: 29, scope: !9095)
!9113 = !DILocation(line: 384, column: 1, scope: !9095)
!9114 = distinct !DISubprogram(name: "init_idle_thread", scope: !1363, file: !1363, line: 343, type: !9096, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118, !9121}
!9116 = !DILocalVariable(name: "i", arg: 1, scope: !9114, file: !1363, line: 343, type: !103)
!9117 = !DILocalVariable(name: "thread", scope: !9114, file: !1363, line: 345, type: !1455)
!9118 = !DILocalVariable(name: "stack", scope: !9114, file: !1363, line: 346, type: !9119)
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9120, size: 32)
!9120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2755, line: 44, baseType: !1569)
!9121 = !DILocalVariable(name: "tname", scope: !9114, file: !1363, line: 358, type: !363)
!9122 = !DILocation(line: 0, scope: !9114)
!9123 = !DILocation(line: 345, column: 29, scope: !9114)
!9124 = !DILocation(line: 346, column: 28, scope: !9114)
!9125 = !DILocation(line: 362, column: 37, scope: !9114)
!9126 = !DILocation(line: 362, column: 36, scope: !9114)
!9127 = !DILocation(line: 361, column: 2, scope: !9114)
!9128 = !DILocation(line: 365, column: 2, scope: !9114)
!9129 = !DILocation(line: 370, column: 1, scope: !9114)
!9130 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1570, file: !1570, line: 331, type: !9131, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9133)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!363, !9119}
!9133 = !{!9134}
!9134 = !DILocalVariable(name: "sym", arg: 1, scope: !9130, file: !1570, line: 331, type: !9119)
!9135 = !DILocation(line: 0, scope: !9130)
!9136 = !DILocation(line: 333, column: 21, scope: !9130)
!9137 = !DILocation(line: 333, column: 2, scope: !9130)
!9138 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !9139, file: !9139, line: 155, type: !9140, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9142)
!9139 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9140 = !DISubroutineType(types: !9141)
!9141 = !{null, !1455}
!9142 = !{!9143}
!9143 = !DILocalVariable(name: "thread", arg: 1, scope: !9138, file: !9139, line: 155, type: !1455)
!9144 = !DILocation(line: 0, scope: !9138)
!9145 = !DILocation(line: 157, column: 15, scope: !9138)
!9146 = !DILocation(line: 157, column: 28, scope: !9138)
!9147 = !DILocation(line: 158, column: 1, scope: !9138)
!9148 = distinct !DISubprogram(name: "z_cstart", scope: !1363, file: !1363, line: 501, type: !873, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9149)
!9149 = !{!9150}
!9150 = !DILocalVariable(name: "dummy_thread", scope: !9148, file: !1363, line: 518, type: !1456)
!9151 = !DILocation(line: 507, column: 2, scope: !9148)
!9152 = !DILocation(line: 43, column: 14, scope: !9153, inlinedAt: !9157)
!9153 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !9154, file: !9154, line: 40, type: !873, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9155)
!9154 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9155 = !{!9156}
!9156 = !DILocalVariable(name: "msp", scope: !9153, file: !9154, line: 42, type: !121)
!9157 = distinct !DILocation(line: 44, column: 2, scope: !9158, inlinedAt: !9160)
!9158 = distinct !DISubprogram(name: "arch_kernel_init", scope: !9159, file: !9159, line: 42, type: !873, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !336)
!9159 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9160 = distinct !DILocation(line: 510, column: 2, scope: !9148)
!9161 = !DILocation(line: 43, column: 3, scope: !9153, inlinedAt: !9157)
!9162 = !DILocation(line: 43, column: 60, scope: !9153, inlinedAt: !9157)
!9163 = !DILocation(line: 0, scope: !9153, inlinedAt: !9157)
!9164 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !9165, file: !5457, line: 1153, type: !121)
!9165 = distinct !DISubprogram(name: "__set_MSP", scope: !5457, file: !5457, line: 1153, type: !5003, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9166)
!9166 = !{!9164}
!9167 = !DILocation(line: 0, scope: !9165, inlinedAt: !9168)
!9168 = distinct !DILocation(line: 46, column: 2, scope: !9153, inlinedAt: !9157)
!9169 = !DILocation(line: 1155, column: 3, scope: !9165, inlinedAt: !9168)
!9170 = !{i64 1579888}
!9171 = !DILocation(line: 62, column: 11, scope: !9153, inlinedAt: !9157)
!9172 = !DILocation(line: 102, column: 2, scope: !9173, inlinedAt: !9174)
!9173 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6212, file: !6212, line: 97, type: !873, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !336)
!9174 = distinct !DILocation(line: 45, column: 2, scope: !9158, inlinedAt: !9160)
!9175 = !DILocation(line: 108, column: 2, scope: !9173, inlinedAt: !9174)
!9176 = !DILocation(line: 112, column: 2, scope: !9173, inlinedAt: !9174)
!9177 = !DILocation(line: 113, column: 2, scope: !9173, inlinedAt: !9174)
!9178 = !DILocation(line: 114, column: 2, scope: !9173, inlinedAt: !9174)
!9179 = !DILocation(line: 116, column: 2, scope: !9173, inlinedAt: !9174)
!9180 = !DILocation(line: 123, column: 13, scope: !9173, inlinedAt: !9174)
!9181 = !DILocation(line: 46, column: 2, scope: !9158, inlinedAt: !9160)
!9182 = !DILocation(line: 47, column: 2, scope: !9158, inlinedAt: !9160)
!9183 = !DILocation(line: 174, column: 12, scope: !9184, inlinedAt: !9185)
!9184 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6212, file: !6212, line: 169, type: !873, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !336)
!9185 = distinct !DILocation(line: 48, column: 2, scope: !9158, inlinedAt: !9160)
!9186 = !DILocation(line: 179, column: 12, scope: !9184, inlinedAt: !9185)
!9187 = !DILocation(line: 50, column: 2, scope: !9158, inlinedAt: !9160)
!9188 = !DILocation(line: 57, column: 2, scope: !9158, inlinedAt: !9160)
!9189 = !DILocation(line: 518, column: 2, scope: !9148)
!9190 = !DILocation(line: 518, column: 18, scope: !9148)
!9191 = !DILocation(line: 520, column: 2, scope: !9148)
!9192 = !DILocation(line: 523, column: 2, scope: !9148)
!9193 = !DILocation(line: 526, column: 2, scope: !9148)
!9194 = !DILocation(line: 527, column: 2, scope: !9148)
!9195 = !DILocation(line: 543, column: 24, scope: !9148)
!9196 = !DILocation(line: 543, column: 2, scope: !9148)
!9197 = !DILocation(line: 0, scope: !1589)
!9198 = !DILocation(line: 246, column: 15, scope: !1607)
!9199 = !DILocation(line: 246, column: 36, scope: !1606)
!9200 = !DILocation(line: 246, column: 2, scope: !1607)
!9201 = !DILocation(line: 247, column: 37, scope: !1605)
!9202 = !DILocation(line: 0, scope: !1605)
!9203 = !DILocation(line: 248, column: 19, scope: !1605)
!9204 = !DILocation(line: 248, column: 12, scope: !1605)
!9205 = !DILocation(line: 250, column: 11, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !1605, file: !1363, line: 250, column: 7)
!9207 = !DILocation(line: 250, column: 7, scope: !1605)
!9208 = !DILocation(line: 254, column: 11, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !1363, line: 254, column: 8)
!9210 = distinct !DILexicalBlock(scope: !9206, file: !1363, line: 250, column: 20)
!9211 = !DILocation(line: 254, column: 8, scope: !9210)
!9212 = !DILocation(line: 255, column: 9, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9209, file: !1363, line: 254, column: 17)
!9214 = !DILocation(line: 258, column: 9, scope: !9213)
!9215 = !DILocation(line: 261, column: 28, scope: !9213)
!9216 = !DILocation(line: 261, column: 10, scope: !9213)
!9217 = !DILocation(line: 261, column: 17, scope: !9213)
!9218 = !DILocation(line: 261, column: 26, scope: !9213)
!9219 = !DILocation(line: 262, column: 4, scope: !9213)
!9220 = !DILocation(line: 263, column: 9, scope: !9210)
!9221 = !DILocation(line: 263, column: 16, scope: !9210)
!9222 = !DILocation(line: 263, column: 28, scope: !9210)
!9223 = !DILocation(line: 264, column: 3, scope: !9210)
!9224 = !DILocation(line: 246, column: 60, scope: !1606)
!9225 = distinct !{!9225, !9200, !9226}
!9226 = !DILocation(line: 265, column: 2, scope: !1607)
!9227 = !DILocation(line: 266, column: 1, scope: !1589)
!9228 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !532, file: !532, line: 1638, type: !5491, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9229)
!9229 = !{!9230, !9231}
!9230 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9228, file: !532, line: 1638, type: !2064)
!9231 = !DILocalVariable(name: "priority", arg: 2, scope: !9228, file: !532, line: 1638, type: !121)
!9232 = !DILocation(line: 0, scope: !9228)
!9233 = !DILocation(line: 1646, column: 48, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !532, line: 1645, column: 3)
!9235 = distinct !DILexicalBlock(scope: !9228, file: !532, line: 1640, column: 7)
!9236 = !DILocation(line: 1646, column: 32, scope: !9234)
!9237 = !DILocation(line: 1646, column: 40, scope: !9234)
!9238 = !DILocation(line: 1646, column: 5, scope: !9234)
!9239 = !DILocation(line: 1646, column: 46, scope: !9234)
!9240 = !DILocation(line: 1648, column: 1, scope: !9228)
!9241 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !9159, file: !9159, line: 32, type: !873, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!9242 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !9243, file: !9243, line: 215, type: !9140, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9244)
!9243 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9244 = !{!9245}
!9245 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !9242, file: !9243, line: 215, type: !1455)
!9246 = !DILocation(line: 0, scope: !9242)
!9247 = !DILocation(line: 217, column: 21, scope: !9242)
!9248 = !DILocation(line: 217, column: 34, scope: !9242)
!9249 = !DILocation(line: 221, column: 21, scope: !9242)
!9250 = !DILocation(line: 221, column: 34, scope: !9242)
!9251 = !DILocation(line: 223, column: 27, scope: !9242)
!9252 = !DILocation(line: 223, column: 33, scope: !9242)
!9253 = !DILocation(line: 224, column: 27, scope: !9242)
!9254 = !DILocation(line: 224, column: 32, scope: !9242)
!9255 = !DILocation(line: 232, column: 16, scope: !9242)
!9256 = !DILocation(line: 232, column: 30, scope: !9242)
!9257 = !DILocation(line: 239, column: 24, scope: !9242)
!9258 = !DILocation(line: 240, column: 1, scope: !9242)
!9259 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1363, file: !1363, line: 399, type: !361, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9260)
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "stack_ptr", scope: !9259, file: !1363, line: 401, type: !363)
!9262 = !DILocation(line: 404, column: 2, scope: !9259)
!9263 = !DILocation(line: 416, column: 24, scope: !9259)
!9264 = !DILocation(line: 418, column: 14, scope: !9259)
!9265 = !DILocation(line: 0, scope: !9259)
!9266 = !DILocation(line: 423, column: 2, scope: !9259)
!9267 = !DILocation(line: 424, column: 2, scope: !9259)
!9268 = !DILocation(line: 426, column: 2, scope: !9259)
!9269 = !DILocation(line: 428, column: 2, scope: !9259)
!9270 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1363, file: !1363, line: 432, type: !9271, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9273)
!9271 = !DISubroutineType(types: !9272)
!9272 = !{null, !363}
!9273 = !{!9274}
!9274 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !9270, file: !1363, line: 432, type: !363)
!9275 = !DILocation(line: 0, scope: !9270)
!9276 = !DILocation(line: 435, column: 2, scope: !9270)
!9277 = !DILocation(line: 445, column: 2, scope: !9270)
!9278 = distinct !DISubprogram(name: "bg_thread_main", scope: !1363, file: !1363, line: 277, type: !2757, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1359, retainedNodes: !9279)
!9279 = !{!9280, !9281, !9282}
!9280 = !DILocalVariable(name: "unused1", arg: 1, scope: !9278, file: !1363, line: 277, type: !102)
!9281 = !DILocalVariable(name: "unused2", arg: 2, scope: !9278, file: !1363, line: 277, type: !102)
!9282 = !DILocalVariable(name: "unused3", arg: 3, scope: !9278, file: !1363, line: 277, type: !102)
!9283 = !DILocation(line: 0, scope: !9278)
!9284 = !DILocation(line: 291, column: 20, scope: !9278)
!9285 = !DILocation(line: 293, column: 2, scope: !9278)
!9286 = !DILocation(line: 297, column: 2, scope: !9278)
!9287 = !DILocation(line: 305, column: 2, scope: !9278)
!9288 = !DILocation(line: 307, column: 2, scope: !9278)
!9289 = !DILocation(line: 330, column: 8, scope: !9278)
!9290 = !DILocation(line: 333, column: 34, scope: !9278)
!9291 = !DILocation(line: 339, column: 1, scope: !9278)
!9292 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1616, file: !1616, line: 45, type: !9293, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9301)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{null, !9295, !102}
!9295 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !315, line: 103, baseType: !9296)
!9296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9297, size: 32)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{null, !9299, !102}
!9299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9300, size: 32)
!9300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!9301 = !{!9302, !9303}
!9302 = !DILocalVariable(name: "user_cb", arg: 1, scope: !9292, file: !1616, line: 45, type: !9295)
!9303 = !DILocalVariable(name: "user_data", arg: 2, scope: !9292, file: !1616, line: 45, type: !102)
!9304 = !DILocation(line: 0, scope: !9292)
!9305 = !DILocation(line: 71, column: 1, scope: !9292)
!9306 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1616, file: !1616, line: 73, type: !9293, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9307)
!9307 = !{!9308, !9309}
!9308 = !DILocalVariable(name: "user_cb", arg: 1, scope: !9306, file: !1616, line: 73, type: !9295)
!9309 = !DILocalVariable(name: "user_data", arg: 2, scope: !9306, file: !1616, line: 73, type: !102)
!9310 = !DILocation(line: 0, scope: !9306)
!9311 = !DILocation(line: 95, column: 1, scope: !9306)
!9312 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1616, file: !1616, line: 97, type: !6213, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !336)
!9313 = !DILocation(line: 1031, column: 3, scope: !9314, inlinedAt: !9317)
!9314 = distinct !DISubprogram(name: "__get_IPSR", scope: !5457, file: !5457, line: 1027, type: !6206, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9315)
!9315 = !{!9316}
!9316 = !DILocalVariable(name: "result", scope: !9314, file: !5457, line: 1029, type: !121)
!9317 = distinct !DILocation(line: 48, column: 10, scope: !9318, inlinedAt: !9319)
!9318 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6212, file: !6212, line: 46, type: !6213, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !336)
!9319 = distinct !DILocation(line: 99, column: 9, scope: !9312)
!9320 = !{i64 1585539}
!9321 = !DILocation(line: 0, scope: !9314, inlinedAt: !9317)
!9322 = !DILocation(line: 48, column: 9, scope: !9318, inlinedAt: !9319)
!9323 = !DILocation(line: 99, column: 2, scope: !9312)
!9324 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1616, file: !1616, line: 106, type: !873, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !336)
!9325 = !DILocation(line: 108, column: 2, scope: !9324)
!9326 = !DILocation(line: 108, column: 17, scope: !9324)
!9327 = !DILocation(line: 108, column: 30, scope: !9324)
!9328 = !DILocation(line: 109, column: 1, scope: !9324)
!9329 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1616, file: !1616, line: 116, type: !873, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !336)
!9330 = !DILocation(line: 118, column: 2, scope: !9329)
!9331 = !DILocation(line: 118, column: 17, scope: !9329)
!9332 = !DILocation(line: 118, column: 30, scope: !9329)
!9333 = !DILocation(line: 119, column: 1, scope: !9329)
!9334 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1616, file: !1616, line: 126, type: !6213, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !336)
!9335 = !DILocation(line: 128, column: 10, scope: !9334)
!9336 = !DILocation(line: 128, column: 25, scope: !9334)
!9337 = !DILocation(line: 128, column: 38, scope: !9334)
!9338 = !DILocation(line: 128, column: 53, scope: !9334)
!9339 = !DILocation(line: 128, column: 2, scope: !9334)
!9340 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1616, file: !1616, line: 187, type: !9341, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!103, !1620, !192}
!9343 = !{!9344, !9345}
!9344 = !DILocalVariable(name: "thread", arg: 1, scope: !9340, file: !1616, line: 187, type: !1620)
!9345 = !DILocalVariable(name: "value", arg: 2, scope: !9340, file: !1616, line: 187, type: !192)
!9346 = !DILocation(line: 0, scope: !9340)
!9347 = !DILocation(line: 206, column: 2, scope: !9340)
!9348 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1616, file: !1616, line: 238, type: !9349, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9351)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!192, !1620}
!9351 = !{!9352}
!9352 = !DILocalVariable(name: "thread", arg: 1, scope: !9348, file: !1616, line: 238, type: !1620)
!9353 = !DILocation(line: 0, scope: !9348)
!9354 = !DILocation(line: 244, column: 2, scope: !9348)
!9355 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1616, file: !1616, line: 248, type: !9356, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9358)
!9356 = !DISubroutineType(types: !9357)
!9357 = !{!103, !1619, !363, !223}
!9358 = !{!9359, !9360, !9361}
!9359 = !DILocalVariable(name: "thread", arg: 1, scope: !9355, file: !1616, line: 248, type: !1619)
!9360 = !DILocalVariable(name: "buf", arg: 2, scope: !9355, file: !1616, line: 248, type: !363)
!9361 = !DILocalVariable(name: "size", arg: 3, scope: !9355, file: !1616, line: 248, type: !223)
!9362 = !DILocation(line: 0, scope: !9355)
!9363 = !DILocation(line: 257, column: 2, scope: !9355)
!9364 = !DILocation(line: 0, scope: !1615)
!9365 = !DILocation(line: 281, column: 11, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !1615, file: !1616, line: 281, column: 6)
!9367 = !DILocation(line: 281, column: 20, scope: !9366)
!9368 = !DILocation(line: 275, column: 45, scope: !1615)
!9369 = !DILocation(line: 285, column: 10, scope: !1615)
!9370 = !DILocation(line: 0, scope: !1739)
!9371 = !DILocation(line: 293, column: 39, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !1739, file: !1616, line: 293, column: 2)
!9373 = !DILocation(line: 293, column: 2, scope: !1739)
!9374 = !DILocation(line: 273, column: 14, scope: !1615)
!9375 = !DILocation(line: 309, column: 2, scope: !1615)
!9376 = !DILocation(line: 309, column: 11, scope: !1615)
!9377 = !DILocation(line: 311, column: 2, scope: !1615)
!9378 = !DILocation(line: 293, column: 26, scope: !9372)
!9379 = !DILocation(line: 294, column: 9, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9372, file: !1616, line: 293, column: 54)
!9381 = !DILocation(line: 295, column: 21, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9380, file: !1616, line: 295, column: 7)
!9383 = !DILocation(line: 295, column: 28, scope: !9382)
!9384 = !DILocation(line: 295, column: 7, scope: !9380)
!9385 = !DILocation(line: 299, column: 25, scope: !9380)
!9386 = !DILocation(line: 299, column: 41, scope: !9380)
!9387 = !DILocation(line: 300, column: 7, scope: !9380)
!9388 = !DILocation(line: 300, column: 26, scope: !9380)
!9389 = !DILocation(line: 299, column: 10, scope: !9380)
!9390 = !DILocation(line: 299, column: 7, scope: !9380)
!9391 = !DILocation(line: 302, column: 16, scope: !9380)
!9392 = !DILocation(line: 304, column: 20, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9380, file: !1616, line: 304, column: 7)
!9394 = !DILocation(line: 304, column: 7, scope: !9380)
!9395 = !DILocation(line: 305, column: 26, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9393, file: !1616, line: 304, column: 26)
!9397 = !DILocation(line: 305, column: 42, scope: !9396)
!9398 = !DILocation(line: 305, column: 11, scope: !9396)
!9399 = !DILocation(line: 305, column: 8, scope: !9396)
!9400 = !DILocation(line: 306, column: 3, scope: !9396)
!9401 = !DILocation(line: 293, column: 50, scope: !9372)
!9402 = !DILocation(line: 312, column: 1, scope: !1615)
!9403 = distinct !DISubprogram(name: "copy_bytes", scope: !1616, file: !1616, line: 261, type: !9404, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9406)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{!223, !363, !223, !192, !223}
!9406 = !{!9407, !9408, !9409, !9410, !9411}
!9407 = !DILocalVariable(name: "dest", arg: 1, scope: !9403, file: !1616, line: 261, type: !363)
!9408 = !DILocalVariable(name: "dest_size", arg: 2, scope: !9403, file: !1616, line: 261, type: !223)
!9409 = !DILocalVariable(name: "src", arg: 3, scope: !9403, file: !1616, line: 261, type: !192)
!9410 = !DILocalVariable(name: "src_size", arg: 4, scope: !9403, file: !1616, line: 261, type: !223)
!9411 = !DILocalVariable(name: "bytes_to_copy", scope: !9403, file: !1616, line: 263, type: !223)
!9412 = !DILocation(line: 0, scope: !9403)
!9413 = !DILocation(line: 265, column: 18, scope: !9403)
!9414 = !DILocation(line: 266, column: 2, scope: !9403)
!9415 = !DILocation(line: 268, column: 2, scope: !9403)
!9416 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1616, file: !1616, line: 383, type: !9417, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9419)
!9417 = !DISubroutineType(types: !9418)
!9418 = !{null, !1620}
!9419 = !{!9420}
!9420 = !DILocalVariable(name: "thread", arg: 1, scope: !9416, file: !1616, line: 383, type: !1620)
!9421 = !DILocation(line: 0, scope: !9416)
!9422 = !DILocation(line: 387, column: 2, scope: !9416)
!9423 = !DILocation(line: 388, column: 1, scope: !9416)
!9424 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1616, file: !1616, line: 528, type: !9425, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9432)
!9425 = !DISubroutineType(types: !9426)
!9426 = !{!363, !1620, !9427, !223, !2754, !102, !102, !102, !103, !121, !192}
!9427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9428, size: 32)
!9428 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2755, line: 44, baseType: !9429)
!9429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1570, line: 47, size: 8, elements: !9430)
!9430 = !{!9431}
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9429, file: !1570, line: 48, baseType: !194, size: 8)
!9432 = !{!9433, !9434, !9435, !9436, !9437, !9438, !9439, !9440, !9441, !9442, !9443}
!9433 = !DILocalVariable(name: "new_thread", arg: 1, scope: !9424, file: !1616, line: 528, type: !1620)
!9434 = !DILocalVariable(name: "stack", arg: 2, scope: !9424, file: !1616, line: 529, type: !9427)
!9435 = !DILocalVariable(name: "stack_size", arg: 3, scope: !9424, file: !1616, line: 529, type: !223)
!9436 = !DILocalVariable(name: "entry", arg: 4, scope: !9424, file: !1616, line: 530, type: !2754)
!9437 = !DILocalVariable(name: "p1", arg: 5, scope: !9424, file: !1616, line: 531, type: !102)
!9438 = !DILocalVariable(name: "p2", arg: 6, scope: !9424, file: !1616, line: 531, type: !102)
!9439 = !DILocalVariable(name: "p3", arg: 7, scope: !9424, file: !1616, line: 531, type: !102)
!9440 = !DILocalVariable(name: "prio", arg: 8, scope: !9424, file: !1616, line: 532, type: !103)
!9441 = !DILocalVariable(name: "options", arg: 9, scope: !9424, file: !1616, line: 532, type: !121)
!9442 = !DILocalVariable(name: "name", arg: 10, scope: !9424, file: !1616, line: 532, type: !192)
!9443 = !DILocalVariable(name: "stack_ptr", scope: !9424, file: !1616, line: 534, type: !363)
!9444 = !DILocation(line: 0, scope: !9424)
!9445 = !DILocation(line: 550, column: 28, scope: !9424)
!9446 = !DILocation(line: 550, column: 2, scope: !9424)
!9447 = !DILocation(line: 553, column: 34, scope: !9424)
!9448 = !DILocation(line: 553, column: 2, scope: !9424)
!9449 = !DILocation(line: 554, column: 14, scope: !9424)
!9450 = !DILocation(line: 564, column: 2, scope: !9424)
!9451 = !DILocation(line: 567, column: 14, scope: !9424)
!9452 = !DILocation(line: 567, column: 24, scope: !9424)
!9453 = !DILocation(line: 612, column: 7, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9424, file: !1616, line: 612, column: 6)
!9455 = !DILocation(line: 612, column: 6, scope: !9424)
!9456 = !DILocation(line: 627, column: 40, scope: !9424)
!9457 = !DILocation(line: 637, column: 2, scope: !9424)
!9458 = !DILocation(line: 613, column: 15, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9454, file: !1616, line: 612, column: 17)
!9460 = !DILocation(line: 613, column: 29, scope: !9459)
!9461 = !DILocation(line: 638, column: 1, scope: !9424)
!9462 = distinct !DISubprogram(name: "z_waitq_init", scope: !9463, file: !9463, line: 47, type: !9464, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9466)
!9463 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9464 = !DISubroutineType(types: !9465)
!9465 = !{null, !1651}
!9466 = !{!9467}
!9467 = !DILocalVariable(name: "w", arg: 1, scope: !9462, file: !9463, line: 47, type: !1651)
!9468 = !DILocation(line: 0, scope: !9462)
!9469 = !DILocation(line: 49, column: 21, scope: !9462)
!9470 = !DILocation(line: 49, column: 2, scope: !9462)
!9471 = !DILocation(line: 50, column: 1, scope: !9462)
!9472 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1616, file: !1616, line: 791, type: !9473, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9476)
!9473 = !DISubroutineType(types: !9474)
!9474 = !{null, !9475, !103, !121, !32}
!9475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 32)
!9476 = !{!9477, !9478, !9479, !9480}
!9477 = !DILocalVariable(name: "thread_base", arg: 1, scope: !9472, file: !1616, line: 791, type: !9475)
!9478 = !DILocalVariable(name: "priority", arg: 2, scope: !9472, file: !1616, line: 791, type: !103)
!9479 = !DILocalVariable(name: "initial_state", arg: 3, scope: !9472, file: !1616, line: 792, type: !121)
!9480 = !DILocalVariable(name: "options", arg: 4, scope: !9472, file: !1616, line: 792, type: !32)
!9481 = !DILocation(line: 0, scope: !9472)
!9482 = !DILocation(line: 795, column: 15, scope: !9472)
!9483 = !DILocation(line: 795, column: 25, scope: !9472)
!9484 = !DILocation(line: 796, column: 30, scope: !9472)
!9485 = !DILocation(line: 796, column: 15, scope: !9472)
!9486 = !DILocation(line: 796, column: 28, scope: !9472)
!9487 = !DILocation(line: 797, column: 30, scope: !9472)
!9488 = !DILocation(line: 797, column: 15, scope: !9472)
!9489 = !DILocation(line: 797, column: 28, scope: !9472)
!9490 = !DILocation(line: 799, column: 22, scope: !9472)
!9491 = !DILocation(line: 799, column: 15, scope: !9472)
!9492 = !DILocation(line: 799, column: 20, scope: !9472)
!9493 = !DILocation(line: 801, column: 15, scope: !9472)
!9494 = !DILocation(line: 801, column: 28, scope: !9472)
!9495 = !DILocation(line: 814, column: 2, scope: !9472)
!9496 = !DILocation(line: 815, column: 1, scope: !9472)
!9497 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1616, file: !1616, line: 449, type: !9498, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9500)
!9498 = !DISubroutineType(types: !9499)
!9499 = !{!363, !1620, !9427, !223}
!9500 = !{!9501, !9502, !9503, !9504, !9505, !9506, !9507, !9508}
!9501 = !DILocalVariable(name: "new_thread", arg: 1, scope: !9497, file: !1616, line: 449, type: !1620)
!9502 = !DILocalVariable(name: "stack", arg: 2, scope: !9497, file: !1616, line: 450, type: !9427)
!9503 = !DILocalVariable(name: "stack_size", arg: 3, scope: !9497, file: !1616, line: 450, type: !223)
!9504 = !DILocalVariable(name: "stack_obj_size", scope: !9497, file: !1616, line: 452, type: !223)
!9505 = !DILocalVariable(name: "stack_buf_size", scope: !9497, file: !1616, line: 452, type: !223)
!9506 = !DILocalVariable(name: "stack_ptr", scope: !9497, file: !1616, line: 453, type: !363)
!9507 = !DILocalVariable(name: "stack_buf_start", scope: !9497, file: !1616, line: 453, type: !363)
!9508 = !DILocalVariable(name: "delta", scope: !9497, file: !1616, line: 454, type: !223)
!9509 = !DILocation(line: 0, scope: !9497)
!9510 = !DILocation(line: 465, column: 20, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9497, file: !1616, line: 463, column: 2)
!9512 = !DILocation(line: 466, column: 21, scope: !9511)
!9513 = !DILocation(line: 473, column: 28, scope: !9497)
!9514 = !DILocation(line: 514, column: 33, scope: !9497)
!9515 = !DILocation(line: 514, column: 25, scope: !9497)
!9516 = !DILocation(line: 514, column: 31, scope: !9497)
!9517 = !DILocation(line: 515, column: 25, scope: !9497)
!9518 = !DILocation(line: 515, column: 30, scope: !9497)
!9519 = !DILocation(line: 516, column: 25, scope: !9497)
!9520 = !DILocation(line: 516, column: 31, scope: !9497)
!9521 = !DILocation(line: 520, column: 2, scope: !9497)
!9522 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1570, file: !1570, line: 331, type: !9523, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9525)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{!363, !9427}
!9525 = !{!9526}
!9526 = !DILocalVariable(name: "sym", arg: 1, scope: !9522, file: !1570, line: 331, type: !9427)
!9527 = !DILocation(line: 0, scope: !9522)
!9528 = !DILocation(line: 333, column: 21, scope: !9522)
!9529 = !DILocation(line: 333, column: 2, scope: !9522)
!9530 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !9531, file: !9531, line: 40, type: !9532, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9534)
!9531 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9532 = !DISubroutineType(types: !9533)
!9533 = !{null, !9475}
!9534 = !{!9535}
!9535 = !DILocalVariable(name: "thread_base", arg: 1, scope: !9530, file: !9531, line: 40, type: !9475)
!9536 = !DILocation(line: 0, scope: !9530)
!9537 = !DILocation(line: 42, column: 31, scope: !9530)
!9538 = !DILocation(line: 42, column: 2, scope: !9530)
!9539 = !DILocation(line: 43, column: 1, scope: !9530)
!9540 = distinct !DISubprogram(name: "z_init_timeout", scope: !9531, file: !9531, line: 25, type: !1677, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9541)
!9541 = !{!9542}
!9542 = !DILocalVariable(name: "to", arg: 1, scope: !9540, file: !9531, line: 25, type: !1679)
!9543 = !DILocation(line: 0, scope: !9540)
!9544 = !DILocation(line: 27, column: 22, scope: !9540)
!9545 = !DILocation(line: 27, column: 2, scope: !9540)
!9546 = !DILocation(line: 28, column: 1, scope: !9540)
!9547 = distinct !DISubprogram(name: "sys_dnode_init", scope: !344, file: !344, line: 211, type: !9548, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9550)
!9548 = !DISubroutineType(types: !9549)
!9549 = !{null, !1723}
!9550 = !{!9551}
!9551 = !DILocalVariable(name: "node", arg: 1, scope: !9547, file: !344, line: 211, type: !1723)
!9552 = !DILocation(line: 0, scope: !9547)
!9553 = !DILocation(line: 213, column: 8, scope: !9547)
!9554 = !DILocation(line: 213, column: 13, scope: !9547)
!9555 = !DILocation(line: 214, column: 8, scope: !9547)
!9556 = !DILocation(line: 214, column: 13, scope: !9547)
!9557 = !DILocation(line: 215, column: 1, scope: !9547)
!9558 = distinct !DISubprogram(name: "sys_dlist_init", scope: !344, file: !344, line: 197, type: !9559, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9562)
!9559 = !DISubroutineType(types: !9560)
!9560 = !{null, !9561}
!9561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!9562 = !{!9563}
!9563 = !DILocalVariable(name: "list", arg: 1, scope: !9558, file: !344, line: 197, type: !9561)
!9564 = !DILocation(line: 0, scope: !9558)
!9565 = !DILocation(line: 199, column: 8, scope: !9558)
!9566 = !DILocation(line: 199, column: 13, scope: !9558)
!9567 = !DILocation(line: 200, column: 8, scope: !9558)
!9568 = !DILocation(line: 200, column: 13, scope: !9558)
!9569 = !DILocation(line: 201, column: 1, scope: !9558)
!9570 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1616, file: !1616, line: 641, type: !9571, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9577)
!9571 = !DISubroutineType(types: !9572)
!9572 = !{!1619, !1620, !9427, !223, !2754, !102, !102, !102, !103, !121, !9573}
!9573 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !9574)
!9574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !9575)
!9575 = !{!9576}
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9574, file: !220, line: 66, baseType: !219, size: 64)
!9577 = !{!9578, !9579, !9580, !9581, !9582, !9583, !9584, !9585, !9586, !9587}
!9578 = !DILocalVariable(name: "new_thread", arg: 1, scope: !9570, file: !1616, line: 641, type: !1620)
!9579 = !DILocalVariable(name: "stack", arg: 2, scope: !9570, file: !1616, line: 642, type: !9427)
!9580 = !DILocalVariable(name: "stack_size", arg: 3, scope: !9570, file: !1616, line: 643, type: !223)
!9581 = !DILocalVariable(name: "entry", arg: 4, scope: !9570, file: !1616, line: 643, type: !2754)
!9582 = !DILocalVariable(name: "p1", arg: 5, scope: !9570, file: !1616, line: 644, type: !102)
!9583 = !DILocalVariable(name: "p2", arg: 6, scope: !9570, file: !1616, line: 644, type: !102)
!9584 = !DILocalVariable(name: "p3", arg: 7, scope: !9570, file: !1616, line: 644, type: !102)
!9585 = !DILocalVariable(name: "prio", arg: 8, scope: !9570, file: !1616, line: 645, type: !103)
!9586 = !DILocalVariable(name: "options", arg: 9, scope: !9570, file: !1616, line: 645, type: !121)
!9587 = !DILocalVariable(name: "delay", arg: 10, scope: !9570, file: !1616, line: 645, type: !9573)
!9588 = !DILocation(line: 0, scope: !9570)
!9589 = !DILocation(line: 649, column: 2, scope: !9570)
!9590 = !DILocation(line: 652, column: 7, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9570, file: !1616, line: 652, column: 6)
!9592 = !DILocation(line: 652, column: 6, scope: !9570)
!9593 = !DILocation(line: 653, column: 3, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9591, file: !1616, line: 652, column: 39)
!9595 = !DILocation(line: 654, column: 2, scope: !9594)
!9596 = !DILocation(line: 656, column: 2, scope: !9570)
!9597 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1616, file: !1616, line: 401, type: !9598, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9600)
!9598 = !DISubroutineType(types: !9599)
!9599 = !{null, !1620, !9573}
!9600 = !{!9601, !9602}
!9601 = !DILocalVariable(name: "thread", arg: 1, scope: !9597, file: !1616, line: 401, type: !1620)
!9602 = !DILocalVariable(name: "delay", arg: 2, scope: !9597, file: !1616, line: 401, type: !9573)
!9603 = !DILocation(line: 0, scope: !9597)
!9604 = !DILocation(line: 404, column: 6, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9597, file: !1616, line: 404, column: 6)
!9606 = !DILocation(line: 404, column: 6, scope: !9597)
!9607 = !DILocation(line: 405, column: 3, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9605, file: !1616, line: 404, column: 38)
!9609 = !DILocation(line: 406, column: 2, scope: !9608)
!9610 = !DILocation(line: 407, column: 3, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9605, file: !1616, line: 406, column: 9)
!9612 = !DILocation(line: 413, column: 1, scope: !9597)
!9613 = distinct !DISubprogram(name: "k_thread_start", scope: !2876, file: !2876, line: 205, type: !9614, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9616)
!9614 = !DISubroutineType(types: !9615)
!9615 = !{null, !1619}
!9616 = !{!9617}
!9617 = !DILocalVariable(name: "thread", arg: 1, scope: !9613, file: !2876, line: 205, type: !1619)
!9618 = !DILocation(line: 0, scope: !9613)
!9619 = !DILocation(line: 214, column: 2, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9613, file: !2876, line: 214, column: 2)
!9621 = !{i64 2151114793}
!9622 = !DILocation(line: 215, column: 2, scope: !9613)
!9623 = !DILocation(line: 216, column: 1, scope: !9613)
!9624 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !9531, file: !9531, line: 47, type: !9598, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9625)
!9625 = !{!9626, !9627}
!9626 = !DILocalVariable(name: "thread", arg: 1, scope: !9624, file: !9531, line: 47, type: !1620)
!9627 = !DILocalVariable(name: "ticks", arg: 2, scope: !9624, file: !9531, line: 47, type: !9573)
!9628 = !DILocation(line: 0, scope: !9624)
!9629 = !DILocation(line: 49, column: 30, scope: !9624)
!9630 = !DILocation(line: 49, column: 2, scope: !9624)
!9631 = !DILocation(line: 50, column: 1, scope: !9624)
!9632 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1616, file: !1616, line: 748, type: !873, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9633)
!9633 = !{!9634, !9652}
!9634 = !DILocalVariable(name: "thread_data", scope: !9635, file: !1616, line: 750, type: !9636)
!9635 = distinct !DILexicalBlock(scope: !9632, file: !1616, line: 750, column: 2)
!9636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9637, size: 32)
!9637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !315, line: 620, size: 384, elements: !9638)
!9638 = !{!9639, !9640, !9641, !9642, !9643, !9644, !9645, !9646, !9647, !9648, !9649, !9651}
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !9637, file: !315, line: 621, baseType: !1620, size: 32)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !9637, file: !315, line: 622, baseType: !9427, size: 32, offset: 32)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !9637, file: !315, line: 623, baseType: !32, size: 32, offset: 64)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !9637, file: !315, line: 624, baseType: !2754, size: 32, offset: 96)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !9637, file: !315, line: 625, baseType: !102, size: 32, offset: 128)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !9637, file: !315, line: 626, baseType: !102, size: 32, offset: 160)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !9637, file: !315, line: 627, baseType: !102, size: 32, offset: 192)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !9637, file: !315, line: 628, baseType: !103, size: 32, offset: 224)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !9637, file: !315, line: 629, baseType: !121, size: 32, offset: 256)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !9637, file: !315, line: 630, baseType: !878, size: 32, offset: 288)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !9637, file: !315, line: 631, baseType: !9650, size: 32, offset: 320)
!9650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !9637, file: !315, line: 632, baseType: !192, size: 32, offset: 352)
!9652 = !DILocalVariable(name: "thread_data", scope: !9653, file: !1616, line: 781, type: !9636)
!9653 = distinct !DILexicalBlock(scope: !9632, file: !1616, line: 781, column: 2)
!9654 = !DILocation(line: 0, scope: !9635)
!9655 = !DILocation(line: 750, column: 2, scope: !9635)
!9656 = !DILocation(line: 780, column: 2, scope: !9632)
!9657 = !DILocation(line: 0, scope: !9653)
!9658 = !DILocation(line: 781, column: 2, scope: !9653)
!9659 = !DILocation(line: 752, column: 17, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !1616, line: 750, column: 38)
!9661 = distinct !DILexicalBlock(scope: !9635, file: !1616, line: 750, column: 2)
!9662 = !DILocation(line: 753, column: 17, scope: !9660)
!9663 = !DILocation(line: 754, column: 17, scope: !9660)
!9664 = !DILocation(line: 755, column: 17, scope: !9660)
!9665 = !DILocation(line: 756, column: 17, scope: !9660)
!9666 = !DILocation(line: 757, column: 17, scope: !9660)
!9667 = !DILocation(line: 758, column: 17, scope: !9660)
!9668 = !DILocation(line: 759, column: 17, scope: !9660)
!9669 = !DILocation(line: 760, column: 17, scope: !9660)
!9670 = !DILocation(line: 751, column: 3, scope: !9660)
!9671 = !DILocation(line: 763, column: 16, scope: !9660)
!9672 = !DILocation(line: 763, column: 29, scope: !9660)
!9673 = !DILocation(line: 763, column: 39, scope: !9660)
!9674 = !DILocation(line: 750, column: 2, scope: !9661)
!9675 = !DILocation(line: 750, column: 2, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9661, file: !1616, line: 750, column: 2)
!9677 = distinct !{!9677, !9655, !9678}
!9678 = !DILocation(line: 764, column: 2, scope: !9635)
!9679 = !DILocation(line: 787, column: 2, scope: !9632)
!9680 = !DILocation(line: 788, column: 1, scope: !9632)
!9681 = !DILocation(line: 782, column: 20, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !1616, line: 782, column: 7)
!9683 = distinct !DILexicalBlock(scope: !9684, file: !1616, line: 781, column: 38)
!9684 = distinct !DILexicalBlock(scope: !9653, file: !1616, line: 781, column: 2)
!9685 = !DILocation(line: 782, column: 31, scope: !9682)
!9686 = !DILocation(line: 782, column: 7, scope: !9683)
!9687 = !DILocation(line: 783, column: 37, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9682, file: !1616, line: 782, column: 51)
!9689 = !DILocation(line: 784, column: 10, scope: !9688)
!9690 = !DILocation(line: 783, column: 4, scope: !9688)
!9691 = !DILocation(line: 785, column: 3, scope: !9688)
!9692 = !DILocation(line: 781, column: 2, scope: !9684)
!9693 = !DILocation(line: 781, column: 2, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9684, file: !1616, line: 781, column: 2)
!9695 = distinct !{!9695, !9658, !9696}
!9696 = !DILocation(line: 786, column: 2, scope: !9653)
!9697 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !9698, file: !9698, line: 403, type: !9699, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9701)
!9698 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9699 = !DISubroutineType(types: !9700)
!9700 = !{!1724, !1724}
!9701 = !{!9702}
!9702 = !DILocalVariable(name: "t", arg: 1, scope: !9697, file: !9698, line: 403, type: !1724)
!9703 = !DILocation(line: 0, scope: !9697)
!9704 = !DILocalVariable(name: "t", arg: 1, scope: !9705, file: !9698, line: 102, type: !1724)
!9705 = distinct !DISubprogram(name: "z_tmcvt", scope: !9698, file: !9698, line: 102, type: !9706, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9708)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!1724, !1724, !121, !121, !205, !205, !205, !205}
!9708 = !{!9704, !9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9718}
!9709 = !DILocalVariable(name: "from_hz", arg: 2, scope: !9705, file: !9698, line: 102, type: !121)
!9710 = !DILocalVariable(name: "to_hz", arg: 3, scope: !9705, file: !9698, line: 103, type: !121)
!9711 = !DILocalVariable(name: "const_hz", arg: 4, scope: !9705, file: !9698, line: 103, type: !205)
!9712 = !DILocalVariable(name: "result32", arg: 5, scope: !9705, file: !9698, line: 104, type: !205)
!9713 = !DILocalVariable(name: "round_up", arg: 6, scope: !9705, file: !9698, line: 104, type: !205)
!9714 = !DILocalVariable(name: "round_off", arg: 7, scope: !9705, file: !9698, line: 105, type: !205)
!9715 = !DILocalVariable(name: "mul_ratio", scope: !9705, file: !9698, line: 107, type: !205)
!9716 = !DILocalVariable(name: "div_ratio", scope: !9705, file: !9698, line: 109, type: !205)
!9717 = !DILocalVariable(name: "off", scope: !9705, file: !9698, line: 116, type: !1724)
!9718 = !DILocalVariable(name: "rdivisor", scope: !9719, file: !9698, line: 119, type: !121)
!9719 = distinct !DILexicalBlock(scope: !9720, file: !9698, line: 118, column: 18)
!9720 = distinct !DILexicalBlock(scope: !9705, file: !9698, line: 118, column: 6)
!9721 = !DILocation(line: 0, scope: !9705, inlinedAt: !9722)
!9722 = distinct !DILocation(line: 406, column: 9, scope: !9697)
!9723 = !DILocation(line: 145, column: 13, scope: !9724, inlinedAt: !9722)
!9724 = distinct !DILexicalBlock(scope: !9725, file: !9698, line: 144, column: 10)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !9698, line: 142, column: 7)
!9726 = distinct !DILexicalBlock(scope: !9727, file: !9698, line: 141, column: 24)
!9727 = distinct !DILexicalBlock(scope: !9728, file: !9698, line: 141, column: 13)
!9728 = distinct !DILexicalBlock(scope: !9705, file: !9698, line: 134, column: 6)
!9729 = !DILocation(line: 406, column: 2, scope: !9697)
!9730 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1616, file: !1616, line: 817, type: !2752, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9731)
!9731 = !{!9732, !9733, !9734, !9735}
!9732 = !DILocalVariable(name: "entry", arg: 1, scope: !9730, file: !1616, line: 817, type: !2754)
!9733 = !DILocalVariable(name: "p1", arg: 2, scope: !9730, file: !1616, line: 818, type: !102)
!9734 = !DILocalVariable(name: "p2", arg: 3, scope: !9730, file: !1616, line: 818, type: !102)
!9735 = !DILocalVariable(name: "p3", arg: 4, scope: !9730, file: !1616, line: 818, type: !102)
!9736 = !DILocation(line: 0, scope: !9730)
!9737 = !DILocation(line: 822, column: 2, scope: !9730)
!9738 = !DILocation(line: 822, column: 17, scope: !9730)
!9739 = !DILocation(line: 822, column: 30, scope: !9730)
!9740 = !DILocation(line: 823, column: 2, scope: !9730)
!9741 = !DILocation(line: 845, column: 2, scope: !9730)
!9742 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1616, file: !1616, line: 888, type: !9743, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9745)
!9743 = !DISubroutineType(types: !9744)
!9744 = !{!103, !1620}
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "thread", arg: 1, scope: !9742, file: !1616, line: 888, type: !1620)
!9747 = !DILocation(line: 0, scope: !9742)
!9748 = !DILocation(line: 893, column: 2, scope: !9742)
!9749 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1616, file: !1616, line: 897, type: !9750, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9752)
!9750 = !DISubroutineType(types: !9751)
!9751 = !{!103, !1620, !32}
!9752 = !{!9753, !9754}
!9753 = !DILocalVariable(name: "thread", arg: 1, scope: !9749, file: !1616, line: 897, type: !1620)
!9754 = !DILocalVariable(name: "options", arg: 2, scope: !9749, file: !1616, line: 897, type: !32)
!9755 = !DILocation(line: 0, scope: !9749)
!9756 = !DILocation(line: 902, column: 2, scope: !9749)
!9757 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1616, file: !1616, line: 1072, type: !9758, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9763)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{!103, !1619, !9760}
!9760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9761, size: 32)
!9761 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !398, line: 234, baseType: !9762)
!9762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !398, line: 192, elements: !336)
!9763 = !{!9764, !9765}
!9764 = !DILocalVariable(name: "thread", arg: 1, scope: !9757, file: !1616, line: 1072, type: !1619)
!9765 = !DILocalVariable(name: "stats", arg: 2, scope: !9757, file: !1616, line: 1073, type: !9760)
!9766 = !DILocation(line: 0, scope: !9757)
!9767 = !DILocation(line: 1075, column: 14, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9757, file: !1616, line: 1075, column: 6)
!9769 = !DILocation(line: 1075, column: 23, scope: !9768)
!9770 = !DILocation(line: 1086, column: 1, scope: !9757)
!9771 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1616, file: !1616, line: 1088, type: !9772, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1720, retainedNodes: !9774)
!9772 = !DISubroutineType(types: !9773)
!9773 = !{!103, !9760}
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "stats", arg: 1, scope: !9771, file: !1616, line: 1088, type: !9760)
!9776 = !DILocation(line: 0, scope: !9771)
!9777 = !DILocation(line: 1094, column: 12, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9771, file: !1616, line: 1094, column: 6)
!9779 = !DILocation(line: 1120, column: 1, scope: !9771)
!9780 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !9781, file: !9781, line: 20, type: !873, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !336)
!9781 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9782 = !DILocation(line: 30, column: 2, scope: !9780)
!9783 = !DILocation(line: 31, column: 1, scope: !9780)
!9784 = distinct !DISubprogram(name: "idle", scope: !9781, file: !9781, line: 33, type: !2757, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !9785)
!9785 = !{!9786, !9787, !9788}
!9786 = !DILocalVariable(name: "unused1", arg: 1, scope: !9784, file: !9781, line: 33, type: !102)
!9787 = !DILocalVariable(name: "unused2", arg: 2, scope: !9784, file: !9781, line: 33, type: !102)
!9788 = !DILocalVariable(name: "unused3", arg: 3, scope: !9784, file: !9781, line: 33, type: !102)
!9789 = !DILocation(line: 0, scope: !9784)
!9790 = !DILocation(line: 41, column: 2, scope: !9784)
!9791 = !DILocation(line: 55, column: 2, scope: !9792, inlinedAt: !9796)
!9792 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !9793)
!9793 = !{!9794, !9795}
!9794 = !DILocalVariable(name: "key", scope: !9792, file: !4919, line: 44, type: !32)
!9795 = !DILocalVariable(name: "tmp", scope: !9792, file: !4919, line: 53, type: !32)
!9796 = distinct !DILocation(line: 62, column: 10, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9784, file: !9781, line: 41, column: 15)
!9798 = !{i64 1320465}
!9799 = !DILocation(line: 0, scope: !9792, inlinedAt: !9796)
!9800 = !DILocation(line: 86, column: 3, scope: !9797)
!9801 = distinct !{!9801, !9790, !9802}
!9802 = !DILocation(line: 105, column: 2, scope: !9784)
!9803 = distinct !DISubprogram(name: "k_cpu_idle", scope: !315, file: !315, line: 5627, type: !873, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !336)
!9804 = !DILocation(line: 5629, column: 2, scope: !9803)
!9805 = !DILocation(line: 5630, column: 1, scope: !9803)
!9806 = !DISubprogram(name: "arch_cpu_idle", scope: !2755, file: !2755, line: 167, type: !873, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!9807 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !2398, file: !2398, line: 30, type: !9808, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9810)
!9808 = !DISubroutineType(types: !9809)
!9809 = !{!102, !2407, !205}
!9810 = !{!9811, !9812, !9813, !9814}
!9811 = !DILocalVariable(name: "node", arg: 1, scope: !9807, file: !2398, line: 30, type: !2407)
!9812 = !DILocalVariable(name: "needs_free", arg: 2, scope: !9807, file: !2398, line: 30, type: !205)
!9813 = !DILocalVariable(name: "ret", scope: !9807, file: !2398, line: 32, type: !102)
!9814 = !DILocalVariable(name: "anode", scope: !9815, file: !2398, line: 40, type: !2396)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !2398, line: 34, column: 68)
!9816 = distinct !DILexicalBlock(scope: !9807, file: !2398, line: 34, column: 6)
!9817 = !DILocation(line: 0, scope: !9807)
!9818 = !DILocation(line: 34, column: 12, scope: !9816)
!9819 = !DILocation(line: 34, column: 21, scope: !9816)
!9820 = !DILocation(line: 34, column: 25, scope: !9816)
!9821 = !DILocation(line: 34, column: 52, scope: !9816)
!9822 = !DILocation(line: 34, column: 6, scope: !9807)
!9823 = !DILocation(line: 0, scope: !9815)
!9824 = !DILocation(line: 43, column: 16, scope: !9815)
!9825 = !DILocation(line: 44, column: 7, scope: !9815)
!9826 = !DILocation(line: 42, column: 11, scope: !9815)
!9827 = !DILocation(line: 45, column: 4, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !2398, line: 44, column: 19)
!9829 = distinct !DILexicalBlock(scope: !9815, file: !2398, line: 44, column: 7)
!9830 = !DILocation(line: 46, column: 3, scope: !9828)
!9831 = !DILocation(line: 52, column: 9, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9816, file: !2398, line: 47, column: 9)
!9833 = !DILocation(line: 0, scope: !9816)
!9834 = !DILocation(line: 55, column: 2, scope: !9807)
!9835 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !322, file: !322, line: 270, type: !9836, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9838)
!9836 = !DISubroutineType(types: !9837)
!9837 = !{!202, !2407}
!9838 = !{!9839}
!9839 = !DILocalVariable(name: "node", arg: 1, scope: !9835, file: !322, line: 270, type: !2407)
!9840 = !DILocation(line: 0, scope: !9835)
!9841 = !DILocation(line: 272, column: 15, scope: !9835)
!9842 = !DILocation(line: 272, column: 9, scope: !9835)
!9843 = !DILocation(line: 272, column: 2, scope: !9835)
!9844 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !2398, file: !2398, line: 58, type: !9845, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9864)
!9845 = !DISubroutineType(types: !9846)
!9846 = !{null, !9847}
!9847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9848, size: 32)
!9848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !315, line: 1709, size: 128, elements: !9849)
!9849 = !{!9850, !9856, !9858}
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9848, file: !315, line: 1710, baseType: !9851, size: 64)
!9851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !322, line: 46, baseType: !9852)
!9852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !322, line: 41, size: 64, elements: !9853)
!9853 = !{!9854, !9855}
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9852, file: !322, line: 42, baseType: !2407, size: 32)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9852, file: !322, line: 43, baseType: !2407, size: 32, offset: 32)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9848, file: !315, line: 1711, baseType: !9857, offset: 64)
!9857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9848, file: !315, line: 1712, baseType: !9859, size: 64, offset: 64)
!9859 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !9860)
!9860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !9861)
!9861 = !{!9862}
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9860, file: !339, line: 232, baseType: !9863, size: 64)
!9863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !2410)
!9864 = !{!9865}
!9865 = !DILocalVariable(name: "queue", arg: 1, scope: !9844, file: !2398, line: 58, type: !9847)
!9866 = !DILocation(line: 0, scope: !9844)
!9867 = !DILocation(line: 60, column: 26, scope: !9844)
!9868 = !DILocation(line: 60, column: 2, scope: !9844)
!9869 = !DILocation(line: 62, column: 23, scope: !9844)
!9870 = !DILocation(line: 62, column: 2, scope: !9844)
!9871 = !DILocation(line: 70, column: 1, scope: !9844)
!9872 = distinct !DISubprogram(name: "sys_sflist_init", scope: !322, file: !322, line: 202, type: !9873, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9876)
!9873 = !DISubroutineType(types: !9874)
!9874 = !{null, !9875}
!9875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9851, size: 32)
!9876 = !{!9877}
!9877 = !DILocalVariable(name: "list", arg: 1, scope: !9872, file: !322, line: 202, type: !9875)
!9878 = !DILocation(line: 0, scope: !9872)
!9879 = !DILocation(line: 204, column: 8, scope: !9872)
!9880 = !DILocation(line: 204, column: 13, scope: !9872)
!9881 = !DILocation(line: 205, column: 8, scope: !9872)
!9882 = !DILocation(line: 205, column: 13, scope: !9872)
!9883 = !DILocation(line: 206, column: 1, scope: !9872)
!9884 = distinct !DISubprogram(name: "z_waitq_init", scope: !9463, file: !9463, line: 47, type: !9885, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9888)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{null, !9887}
!9887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9859, size: 32)
!9888 = !{!9889}
!9889 = !DILocalVariable(name: "w", arg: 1, scope: !9884, file: !9463, line: 47, type: !9887)
!9890 = !DILocation(line: 0, scope: !9884)
!9891 = !DILocation(line: 49, column: 21, scope: !9884)
!9892 = !DILocation(line: 49, column: 2, scope: !9884)
!9893 = !DILocation(line: 50, column: 1, scope: !9884)
!9894 = distinct !DISubprogram(name: "sys_dlist_init", scope: !344, file: !344, line: 197, type: !9895, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9898)
!9895 = !DISubroutineType(types: !9896)
!9896 = !{null, !9897}
!9897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9863, size: 32)
!9898 = !{!9899}
!9899 = !DILocalVariable(name: "list", arg: 1, scope: !9894, file: !344, line: 197, type: !9897)
!9900 = !DILocation(line: 0, scope: !9894)
!9901 = !DILocation(line: 199, column: 8, scope: !9894)
!9902 = !DILocation(line: 199, column: 13, scope: !9894)
!9903 = !DILocation(line: 200, column: 8, scope: !9894)
!9904 = !DILocation(line: 200, column: 13, scope: !9894)
!9905 = !DILocation(line: 201, column: 1, scope: !9894)
!9906 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !2398, file: !2398, line: 94, type: !9845, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !9907)
!9907 = !{!9908, !9909, !9914}
!9908 = !DILocalVariable(name: "queue", arg: 1, scope: !9906, file: !2398, line: 94, type: !9847)
!9909 = !DILocalVariable(name: "key", scope: !9906, file: !2398, line: 98, type: !9910)
!9910 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !335, line: 106, baseType: !9911)
!9911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !335, line: 32, size: 32, elements: !9912)
!9912 = !{!9913}
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9911, file: !335, line: 33, baseType: !103, size: 32)
!9914 = !DILocalVariable(name: "first_pending_thread", scope: !9906, file: !2398, line: 99, type: !9915)
!9915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9916, size: 32)
!9916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !398, line: 245, size: 1024, elements: !9917)
!9917 = !{!9918, !9956, !9968, !9969, !9970, !9971, !9977, !9989}
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9916, file: !398, line: 247, baseType: !9919, size: 384)
!9919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !398, line: 57, size: 384, elements: !9920)
!9920 = !{!9921, !9931, !9932, !9933, !9934, !9943, !9944, !9945}
!9921 = !DIDerivedType(tag: DW_TAG_member, scope: !9919, file: !398, line: 60, baseType: !9922, size: 64)
!9922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9919, file: !398, line: 60, size: 64, elements: !9923)
!9923 = !{!9924, !9925}
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9922, file: !398, line: 61, baseType: !2409, size: 64)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9922, file: !398, line: 62, baseType: !9926, size: 64)
!9926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !423, line: 49, size: 64, elements: !9927)
!9927 = !{!9928}
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9926, file: !423, line: 50, baseType: !9929, size: 64)
!9929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9930, size: 64, elements: !382)
!9930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9926, size: 32)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9919, file: !398, line: 68, baseType: !9887, size: 32, offset: 64)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9919, file: !398, line: 71, baseType: !202, size: 8, offset: 96)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9919, file: !398, line: 74, baseType: !202, size: 8, offset: 104)
!9934 = !DIDerivedType(tag: DW_TAG_member, scope: !9919, file: !398, line: 90, baseType: !9935, size: 16, offset: 112)
!9935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9919, file: !398, line: 90, size: 16, elements: !9936)
!9936 = !{!9937, !9942}
!9937 = !DIDerivedType(tag: DW_TAG_member, scope: !9935, file: !398, line: 91, baseType: !9938, size: 16)
!9938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9935, file: !398, line: 91, size: 16, elements: !9939)
!9939 = !{!9940, !9941}
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9938, file: !398, line: 96, baseType: !444, size: 8)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9938, file: !398, line: 97, baseType: !202, size: 8, offset: 8)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9935, file: !398, line: 100, baseType: !448, size: 16)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9919, file: !398, line: 107, baseType: !121, size: 32, offset: 128)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9919, file: !398, line: 127, baseType: !102, size: 32, offset: 160)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9919, file: !398, line: 131, baseType: !9946, size: 192, offset: 192)
!9946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !339, line: 244, size: 192, elements: !9947)
!9947 = !{!9948, !9949, !9955}
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9946, file: !339, line: 245, baseType: !2409, size: 64)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9946, file: !339, line: 246, baseType: !9950, size: 32, offset: 64)
!9950 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !339, line: 242, baseType: !9951)
!9951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 32)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{null, !9954}
!9954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9946, size: 32)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9946, file: !339, line: 249, baseType: !221, size: 64, offset: 128)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9916, file: !398, line: 250, baseType: !9957, size: 288, offset: 384)
!9957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !465, line: 25, size: 288, elements: !9958)
!9958 = !{!9959, !9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967}
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9957, file: !465, line: 26, baseType: !121, size: 32)
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9957, file: !465, line: 27, baseType: !121, size: 32, offset: 32)
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9957, file: !465, line: 28, baseType: !121, size: 32, offset: 64)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9957, file: !465, line: 29, baseType: !121, size: 32, offset: 96)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9957, file: !465, line: 30, baseType: !121, size: 32, offset: 128)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9957, file: !465, line: 31, baseType: !121, size: 32, offset: 160)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9957, file: !465, line: 32, baseType: !121, size: 32, offset: 192)
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9957, file: !465, line: 33, baseType: !121, size: 32, offset: 224)
!9967 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9957, file: !465, line: 34, baseType: !121, size: 32, offset: 256)
!9968 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9916, file: !398, line: 253, baseType: !102, size: 32, offset: 672)
!9969 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9916, file: !398, line: 256, baseType: !9859, size: 64, offset: 704)
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9916, file: !398, line: 294, baseType: !103, size: 32, offset: 768)
!9971 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9916, file: !398, line: 300, baseType: !9972, size: 96, offset: 800)
!9972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !398, line: 149, size: 96, elements: !9973)
!9973 = !{!9974, !9975, !9976}
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9972, file: !398, line: 153, baseType: !22, size: 32)
!9975 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9972, file: !398, line: 162, baseType: !223, size: 32, offset: 32)
!9976 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9972, file: !398, line: 168, baseType: !223, size: 32, offset: 64)
!9977 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9916, file: !398, line: 325, baseType: !9978, size: 32, offset: 896)
!9978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9979, size: 32)
!9979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !9980)
!9980 = !{!9981, !9987, !9988}
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9979, file: !315, line: 5074, baseType: !9982, size: 96)
!9982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !9983)
!9983 = !{!9984, !9985, !9986}
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9982, file: !491, line: 57, baseType: !494, size: 32)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9982, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9982, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9979, file: !315, line: 5075, baseType: !9859, size: 64, offset: 96)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9979, file: !315, line: 5076, baseType: !9857, offset: 160)
!9989 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9916, file: !398, line: 343, baseType: !9990, size: 64, offset: 928)
!9990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !465, line: 60, size: 64, elements: !9991)
!9991 = !{!9992, !9993}
!9992 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9990, file: !465, line: 63, baseType: !121, size: 32)
!9993 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9990, file: !465, line: 66, baseType: !121, size: 32, offset: 32)
!9994 = !DILocation(line: 0, scope: !9906)
!9995 = !DILocalVariable(name: "l", arg: 1, scope: !9996, file: !335, line: 136, type: !9999)
!9996 = distinct !DISubprogram(name: "k_spin_lock", scope: !335, file: !335, line: 136, type: !9997, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10000)
!9997 = !DISubroutineType(types: !9998)
!9998 = !{!9910, !9999}
!9999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9857, size: 32)
!10000 = !{!9995, !10001}
!10001 = !DILocalVariable(name: "k", scope: !9996, file: !335, line: 139, type: !9910)
!10002 = !DILocation(line: 0, scope: !9996, inlinedAt: !10003)
!10003 = distinct !DILocation(line: 98, column: 25, scope: !9906)
!10004 = !DILocation(line: 55, column: 2, scope: !10005, inlinedAt: !10009)
!10005 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10006)
!10006 = !{!10007, !10008}
!10007 = !DILocalVariable(name: "key", scope: !10005, file: !4919, line: 44, type: !32)
!10008 = !DILocalVariable(name: "tmp", scope: !10005, file: !4919, line: 53, type: !32)
!10009 = distinct !DILocation(line: 145, column: 10, scope: !9996, inlinedAt: !10003)
!10010 = !{i64 1328206}
!10011 = !DILocation(line: 0, scope: !10005, inlinedAt: !10009)
!10012 = !DILocation(line: 101, column: 55, scope: !9906)
!10013 = !DILocation(line: 101, column: 25, scope: !9906)
!10014 = !DILocation(line: 103, column: 27, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9906, file: !2398, line: 103, column: 6)
!10016 = !DILocation(line: 103, column: 6, scope: !9906)
!10017 = !DILocation(line: 104, column: 3, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10015, file: !2398, line: 103, column: 36)
!10019 = !DILocation(line: 105, column: 2, scope: !10018)
!10020 = !DILocation(line: 98, column: 45, scope: !9906)
!10021 = !DILocation(line: 108, column: 2, scope: !9906)
!10022 = !DILocation(line: 109, column: 1, scope: !9906)
!10023 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !2398, file: !2398, line: 81, type: !10024, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10026)
!10024 = !DISubroutineType(types: !10025)
!10025 = !{null, !9915, !102}
!10026 = !{!10027, !10028}
!10027 = !DILocalVariable(name: "thread", arg: 1, scope: !10023, file: !2398, line: 81, type: !9915)
!10028 = !DILocalVariable(name: "data", arg: 2, scope: !10023, file: !2398, line: 81, type: !102)
!10029 = !DILocation(line: 0, scope: !10023)
!10030 = !DILocalVariable(name: "thread", arg: 1, scope: !10031, file: !10032, line: 134, type: !9915)
!10031 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !10032, file: !10032, line: 134, type: !10033, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10035)
!10032 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10033 = !DISubroutineType(types: !10034)
!10034 = !{null, !9915, !32, !102}
!10035 = !{!10030, !10036, !10037}
!10036 = !DILocalVariable(name: "value", arg: 2, scope: !10031, file: !10032, line: 135, type: !32)
!10037 = !DILocalVariable(name: "data", arg: 3, scope: !10031, file: !10032, line: 136, type: !102)
!10038 = !DILocation(line: 0, scope: !10031, inlinedAt: !10039)
!10039 = distinct !DILocation(line: 83, column: 2, scope: !10023)
!10040 = !DILocalVariable(name: "thread", arg: 1, scope: !10041, file: !9159, line: 65, type: !9915)
!10041 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !9159, file: !9159, line: 65, type: !10042, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10044)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{null, !9915, !32}
!10044 = !{!10040, !10045}
!10045 = !DILocalVariable(name: "value", arg: 2, scope: !10041, file: !9159, line: 65, type: !32)
!10046 = !DILocation(line: 0, scope: !10041, inlinedAt: !10047)
!10047 = distinct !DILocation(line: 138, column: 2, scope: !10031, inlinedAt: !10039)
!10048 = !DILocation(line: 67, column: 15, scope: !10041, inlinedAt: !10047)
!10049 = !DILocation(line: 67, column: 33, scope: !10041, inlinedAt: !10047)
!10050 = !DILocation(line: 139, column: 15, scope: !10031, inlinedAt: !10039)
!10051 = !DILocation(line: 139, column: 25, scope: !10031, inlinedAt: !10039)
!10052 = !DILocation(line: 84, column: 2, scope: !10023)
!10053 = !DILocation(line: 85, column: 1, scope: !10023)
!10054 = distinct !DISubprogram(name: "k_queue_insert", scope: !2398, file: !2398, line: 175, type: !10055, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10057)
!10055 = !DISubroutineType(types: !10056)
!10056 = !{null, !9847, !102, !102}
!10057 = !{!10058, !10059, !10060}
!10058 = !DILocalVariable(name: "queue", arg: 1, scope: !10054, file: !2398, line: 175, type: !9847)
!10059 = !DILocalVariable(name: "prev", arg: 2, scope: !10054, file: !2398, line: 175, type: !102)
!10060 = !DILocalVariable(name: "data", arg: 3, scope: !10054, file: !2398, line: 175, type: !102)
!10061 = !DILocation(line: 0, scope: !10054)
!10062 = !DILocation(line: 179, column: 8, scope: !10054)
!10063 = !DILocation(line: 182, column: 1, scope: !10054)
!10064 = distinct !DISubprogram(name: "queue_insert", scope: !2398, file: !2398, line: 120, type: !10065, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!878, !9847, !102, !102, !205, !205}
!10067 = !{!10068, !10069, !10070, !10071, !10072, !10073, !10074, !10075}
!10068 = !DILocalVariable(name: "queue", arg: 1, scope: !10064, file: !2398, line: 120, type: !9847)
!10069 = !DILocalVariable(name: "prev", arg: 2, scope: !10064, file: !2398, line: 120, type: !102)
!10070 = !DILocalVariable(name: "data", arg: 3, scope: !10064, file: !2398, line: 120, type: !102)
!10071 = !DILocalVariable(name: "alloc", arg: 4, scope: !10064, file: !2398, line: 121, type: !205)
!10072 = !DILocalVariable(name: "is_append", arg: 5, scope: !10064, file: !2398, line: 121, type: !205)
!10073 = !DILocalVariable(name: "first_pending_thread", scope: !10064, file: !2398, line: 123, type: !9915)
!10074 = !DILocalVariable(name: "key", scope: !10064, file: !2398, line: 124, type: !9910)
!10075 = !DILocalVariable(name: "anode", scope: !10076, file: !2398, line: 146, type: !2396)
!10076 = distinct !DILexicalBlock(scope: !10077, file: !2398, line: 145, column: 13)
!10077 = distinct !DILexicalBlock(scope: !10064, file: !2398, line: 145, column: 6)
!10078 = !DILocation(line: 0, scope: !10064)
!10079 = !DILocation(line: 124, column: 45, scope: !10064)
!10080 = !DILocation(line: 0, scope: !9996, inlinedAt: !10081)
!10081 = distinct !DILocation(line: 124, column: 25, scope: !10064)
!10082 = !DILocation(line: 55, column: 2, scope: !10005, inlinedAt: !10083)
!10083 = distinct !DILocation(line: 145, column: 10, scope: !9996, inlinedAt: !10081)
!10084 = !DILocation(line: 0, scope: !10005, inlinedAt: !10083)
!10085 = !DILocation(line: 128, column: 6, scope: !10064)
!10086 = !DILocation(line: 129, column: 39, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !2398, line: 128, column: 17)
!10088 = distinct !DILexicalBlock(scope: !10064, file: !2398, line: 128, column: 6)
!10089 = !DILocation(line: 129, column: 10, scope: !10087)
!10090 = !DILocation(line: 130, column: 2, scope: !10087)
!10091 = !DILocation(line: 131, column: 55, scope: !10064)
!10092 = !DILocation(line: 131, column: 25, scope: !10064)
!10093 = !DILocation(line: 133, column: 27, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10064, file: !2398, line: 133, column: 6)
!10095 = !DILocation(line: 133, column: 6, scope: !10064)
!10096 = !DILocation(line: 136, column: 3, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10094, file: !2398, line: 133, column: 36)
!10098 = !DILocation(line: 137, column: 3, scope: !10097)
!10099 = !DILocation(line: 141, column: 3, scope: !10097)
!10100 = !DILocation(line: 145, column: 6, scope: !10064)
!10101 = !DILocation(line: 148, column: 11, scope: !10076)
!10102 = !DILocation(line: 0, scope: !10076)
!10103 = !DILocation(line: 149, column: 13, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10076, file: !2398, line: 149, column: 7)
!10105 = !DILocation(line: 149, column: 7, scope: !10076)
!10106 = !DILocalVariable(name: "key", arg: 2, scope: !10107, file: !335, line: 190, type: !9910)
!10107 = distinct !DISubprogram(name: "k_spin_unlock", scope: !335, file: !335, line: 189, type: !10108, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10110)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{null, !9999, !9910}
!10110 = !{!10111, !10106}
!10111 = !DILocalVariable(name: "l", arg: 1, scope: !10107, file: !335, line: 189, type: !9999)
!10112 = !DILocation(line: 0, scope: !10107, inlinedAt: !10113)
!10113 = distinct !DILocation(line: 150, column: 4, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10104, file: !2398, line: 149, column: 22)
!10115 = !DILocalVariable(name: "key", arg: 1, scope: !10116, file: !4919, line: 84, type: !32)
!10116 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10117)
!10117 = !{!10115}
!10118 = !DILocation(line: 0, scope: !10116, inlinedAt: !10119)
!10119 = distinct !DILocation(line: 215, column: 2, scope: !10107, inlinedAt: !10113)
!10120 = !DILocation(line: 95, column: 2, scope: !10116, inlinedAt: !10119)
!10121 = !{i64 1329023}
!10122 = !DILocation(line: 157, column: 10, scope: !10076)
!10123 = !DILocation(line: 157, column: 15, scope: !10076)
!10124 = !DILocation(line: 158, column: 27, scope: !10076)
!10125 = !DILocation(line: 158, column: 3, scope: !10076)
!10126 = !DILocation(line: 161, column: 19, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10077, file: !2398, line: 160, column: 9)
!10128 = !DILocation(line: 161, column: 3, scope: !10127)
!10129 = !DILocation(line: 166, column: 42, scope: !10064)
!10130 = !DILocation(line: 166, column: 28, scope: !10064)
!10131 = !DILocation(line: 166, column: 36, scope: !10064)
!10132 = !DILocation(line: 166, column: 2, scope: !10064)
!10133 = !DILocation(line: 168, column: 2, scope: !10064)
!10134 = !DILocation(line: 172, column: 2, scope: !10064)
!10135 = !DILocation(line: 173, column: 1, scope: !10064)
!10136 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !322, file: !322, line: 255, type: !10137, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10139)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!2407, !9875}
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "list", arg: 1, scope: !10136, file: !322, line: 255, type: !9875)
!10141 = !DILocation(line: 0, scope: !10136)
!10142 = !DILocation(line: 257, column: 15, scope: !10136)
!10143 = !DILocation(line: 257, column: 2, scope: !10136)
!10144 = distinct !DISubprogram(name: "z_thread_malloc", scope: !10032, file: !10032, line: 102, type: !10145, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10146)
!10145 = !DISubroutineType(types: !2361)
!10146 = !{!10147}
!10147 = !DILocalVariable(name: "size", arg: 1, scope: !10144, file: !10032, line: 102, type: !223)
!10148 = !DILocation(line: 0, scope: !10144)
!10149 = !DILocation(line: 104, column: 9, scope: !10144)
!10150 = !DILocation(line: 104, column: 2, scope: !10144)
!10151 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !322, file: !322, line: 288, type: !10152, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{null, !2407, !202}
!10154 = !{!10155, !10156}
!10155 = !DILocalVariable(name: "node", arg: 1, scope: !10151, file: !322, line: 288, type: !2407)
!10156 = !DILocalVariable(name: "flags", arg: 2, scope: !10151, file: !322, line: 288, type: !202)
!10157 = !DILocation(line: 0, scope: !10151)
!10158 = !DILocation(line: 291, column: 25, scope: !10151)
!10159 = !DILocation(line: 291, column: 8, scope: !10151)
!10160 = !DILocation(line: 291, column: 23, scope: !10151)
!10161 = !DILocation(line: 292, column: 1, scope: !10151)
!10162 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !322, file: !322, line: 420, type: !10163, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10165)
!10163 = !DISubroutineType(types: !10164)
!10164 = !{null, !9875, !2407, !2407}
!10165 = !{!10166, !10167, !10168}
!10166 = !DILocalVariable(name: "list", arg: 1, scope: !10162, file: !322, line: 420, type: !9875)
!10167 = !DILocalVariable(name: "prev", arg: 2, scope: !10162, file: !322, line: 420, type: !2407)
!10168 = !DILocalVariable(name: "node", arg: 3, scope: !10162, file: !322, line: 420, type: !2407)
!10169 = !DILocation(line: 0, scope: !10162)
!10170 = !DILocation(line: 420, column: 1, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10162, file: !322, line: 420, column: 1)
!10172 = !DILocation(line: 420, column: 1, scope: !10162)
!10173 = !DILocation(line: 420, column: 1, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10171, file: !322, line: 420, column: 1)
!10175 = !DILocation(line: 420, column: 1, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10171, file: !322, line: 420, column: 1)
!10177 = !DILocation(line: 420, column: 1, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10176, file: !322, line: 420, column: 1)
!10179 = !DILocation(line: 420, column: 1, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10176, file: !322, line: 420, column: 1)
!10181 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !322, file: !322, line: 360, type: !10182, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10184)
!10182 = !DISubroutineType(types: !10183)
!10183 = !{null, !9875, !2407}
!10184 = !{!10185, !10186}
!10185 = !DILocalVariable(name: "list", arg: 1, scope: !10181, file: !322, line: 360, type: !9875)
!10186 = !DILocalVariable(name: "node", arg: 2, scope: !10181, file: !322, line: 360, type: !2407)
!10187 = !DILocation(line: 0, scope: !10181)
!10188 = !DILocation(line: 360, column: 1, scope: !10181)
!10189 = !DILocation(line: 360, column: 1, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10181, file: !322, line: 360, column: 1)
!10191 = !DILocation(line: 360, column: 1, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10190, file: !322, line: 360, column: 1)
!10193 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !322, file: !322, line: 211, type: !10194, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10196)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{!2407, !2407}
!10196 = !{!10197}
!10197 = !DILocalVariable(name: "node", arg: 1, scope: !10193, file: !322, line: 211, type: !2407)
!10198 = !DILocation(line: 0, scope: !10193)
!10199 = !DILocation(line: 213, column: 32, scope: !10193)
!10200 = !DILocation(line: 213, column: 47, scope: !10193)
!10201 = !DILocation(line: 213, column: 9, scope: !10193)
!10202 = !DILocation(line: 213, column: 2, scope: !10193)
!10203 = distinct !DISubprogram(name: "sys_sflist_append", scope: !322, file: !322, line: 373, type: !10182, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10204)
!10204 = !{!10205, !10206}
!10205 = !DILocalVariable(name: "list", arg: 1, scope: !10203, file: !322, line: 373, type: !9875)
!10206 = !DILocalVariable(name: "node", arg: 2, scope: !10203, file: !322, line: 373, type: !2407)
!10207 = !DILocation(line: 0, scope: !10203)
!10208 = !DILocation(line: 373, column: 1, scope: !10203)
!10209 = !DILocation(line: 373, column: 1, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10203, file: !322, line: 373, column: 1)
!10211 = !DILocation(line: 373, column: 1, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10210, file: !322, line: 373, column: 1)
!10213 = !DILocation(line: 373, column: 1, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !322, line: 373, column: 1)
!10215 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !322, file: !322, line: 218, type: !10216, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10218)
!10216 = !DISubroutineType(types: !10217)
!10217 = !{null, !2407, !2407}
!10218 = !{!10219, !10220, !10221}
!10219 = !DILocalVariable(name: "parent", arg: 1, scope: !10215, file: !322, line: 218, type: !2407)
!10220 = !DILocalVariable(name: "child", arg: 2, scope: !10215, file: !322, line: 219, type: !2407)
!10221 = !DILocalVariable(name: "cur_flags", scope: !10215, file: !322, line: 221, type: !202)
!10222 = !DILocation(line: 0, scope: !10215)
!10223 = !DILocation(line: 221, column: 22, scope: !10215)
!10224 = !DILocation(line: 223, column: 27, scope: !10215)
!10225 = !DILocation(line: 223, column: 39, scope: !10215)
!10226 = !DILocation(line: 223, column: 37, scope: !10215)
!10227 = !DILocation(line: 223, column: 10, scope: !10215)
!10228 = !DILocation(line: 223, column: 25, scope: !10215)
!10229 = !DILocation(line: 224, column: 1, scope: !10215)
!10230 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !322, file: !322, line: 231, type: !10182, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10231)
!10231 = !{!10232, !10233}
!10232 = !DILocalVariable(name: "list", arg: 1, scope: !10230, file: !322, line: 231, type: !9875)
!10233 = !DILocalVariable(name: "node", arg: 2, scope: !10230, file: !322, line: 231, type: !2407)
!10234 = !DILocation(line: 0, scope: !10230)
!10235 = !DILocation(line: 233, column: 8, scope: !10230)
!10236 = !DILocation(line: 233, column: 13, scope: !10230)
!10237 = !DILocation(line: 234, column: 1, scope: !10230)
!10238 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !322, file: !322, line: 226, type: !10182, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10239)
!10239 = !{!10240, !10241}
!10240 = !DILocalVariable(name: "list", arg: 1, scope: !10238, file: !322, line: 226, type: !9875)
!10241 = !DILocalVariable(name: "node", arg: 2, scope: !10238, file: !322, line: 226, type: !2407)
!10242 = !DILocation(line: 0, scope: !10238)
!10243 = !DILocation(line: 228, column: 8, scope: !10238)
!10244 = !DILocation(line: 228, column: 13, scope: !10238)
!10245 = !DILocation(line: 229, column: 1, scope: !10238)
!10246 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !322, file: !322, line: 243, type: !10137, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10247)
!10247 = !{!10248}
!10248 = !DILocalVariable(name: "list", arg: 1, scope: !10246, file: !322, line: 243, type: !9875)
!10249 = !DILocation(line: 0, scope: !10246)
!10250 = !DILocation(line: 245, column: 15, scope: !10246)
!10251 = !DILocation(line: 245, column: 2, scope: !10246)
!10252 = distinct !DISubprogram(name: "k_queue_append", scope: !2398, file: !2398, line: 184, type: !10253, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !9847, !102}
!10255 = !{!10256, !10257}
!10256 = !DILocalVariable(name: "queue", arg: 1, scope: !10252, file: !2398, line: 184, type: !9847)
!10257 = !DILocalVariable(name: "data", arg: 2, scope: !10252, file: !2398, line: 184, type: !102)
!10258 = !DILocation(line: 0, scope: !10252)
!10259 = !DILocation(line: 188, column: 8, scope: !10252)
!10260 = !DILocation(line: 191, column: 1, scope: !10252)
!10261 = distinct !DISubprogram(name: "k_queue_prepend", scope: !2398, file: !2398, line: 193, type: !10253, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10262)
!10262 = !{!10263, !10264}
!10263 = !DILocalVariable(name: "queue", arg: 1, scope: !10261, file: !2398, line: 193, type: !9847)
!10264 = !DILocalVariable(name: "data", arg: 2, scope: !10261, file: !2398, line: 193, type: !102)
!10265 = !DILocation(line: 0, scope: !10261)
!10266 = !DILocation(line: 197, column: 8, scope: !10261)
!10267 = !DILocation(line: 200, column: 1, scope: !10261)
!10268 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !2398, file: !2398, line: 202, type: !10269, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10271)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{!878, !9847, !102}
!10271 = !{!10272, !10273, !10274}
!10272 = !DILocalVariable(name: "queue", arg: 1, scope: !10268, file: !2398, line: 202, type: !9847)
!10273 = !DILocalVariable(name: "data", arg: 2, scope: !10268, file: !2398, line: 202, type: !102)
!10274 = !DILocalVariable(name: "ret", scope: !10268, file: !2398, line: 206, type: !878)
!10275 = !DILocation(line: 0, scope: !10268)
!10276 = !DILocation(line: 206, column: 16, scope: !10268)
!10277 = !DILocation(line: 210, column: 2, scope: !10268)
!10278 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !2398, file: !2398, line: 223, type: !10269, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10279)
!10279 = !{!10280, !10281, !10282}
!10280 = !DILocalVariable(name: "queue", arg: 1, scope: !10278, file: !2398, line: 223, type: !9847)
!10281 = !DILocalVariable(name: "data", arg: 2, scope: !10278, file: !2398, line: 223, type: !102)
!10282 = !DILocalVariable(name: "ret", scope: !10278, file: !2398, line: 227, type: !878)
!10283 = !DILocation(line: 0, scope: !10278)
!10284 = !DILocation(line: 227, column: 16, scope: !10278)
!10285 = !DILocation(line: 231, column: 2, scope: !10278)
!10286 = distinct !DISubprogram(name: "k_queue_append_list", scope: !2398, file: !2398, line: 244, type: !10287, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10289)
!10287 = !DISubroutineType(types: !10288)
!10288 = !{!103, !9847, !102, !102}
!10289 = !{!10290, !10291, !10292, !10293, !10294}
!10290 = !DILocalVariable(name: "queue", arg: 1, scope: !10286, file: !2398, line: 244, type: !9847)
!10291 = !DILocalVariable(name: "head", arg: 2, scope: !10286, file: !2398, line: 244, type: !102)
!10292 = !DILocalVariable(name: "tail", arg: 3, scope: !10286, file: !2398, line: 244, type: !102)
!10293 = !DILocalVariable(name: "key", scope: !10286, file: !2398, line: 255, type: !9910)
!10294 = !DILocalVariable(name: "thread", scope: !10286, file: !2398, line: 256, type: !9915)
!10295 = !DILocation(line: 0, scope: !10286)
!10296 = !DILocation(line: 249, column: 2, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10286, file: !2398, line: 249, column: 2)
!10298 = !DILocation(line: 255, column: 45, scope: !10286)
!10299 = !DILocation(line: 0, scope: !9996, inlinedAt: !10300)
!10300 = distinct !DILocation(line: 255, column: 25, scope: !10286)
!10301 = !DILocation(line: 55, column: 2, scope: !10005, inlinedAt: !10302)
!10302 = distinct !DILocation(line: 145, column: 10, scope: !9996, inlinedAt: !10300)
!10303 = !DILocation(line: 0, scope: !10005, inlinedAt: !10302)
!10304 = !DILocation(line: 259, column: 42, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !2398, line: 258, column: 20)
!10306 = distinct !DILexicalBlock(scope: !10286, file: !2398, line: 258, column: 6)
!10307 = !DILocation(line: 259, column: 12, scope: !10305)
!10308 = !DILocation(line: 262, column: 24, scope: !10286)
!10309 = !DILocation(line: 262, column: 2, scope: !10286)
!10310 = !DILocation(line: 263, column: 3, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10286, file: !2398, line: 262, column: 45)
!10312 = !DILocation(line: 264, column: 11, scope: !10311)
!10313 = !DILocation(line: 264, column: 10, scope: !10311)
!10314 = !DILocation(line: 265, column: 12, scope: !10311)
!10315 = !DILocation(line: 262, column: 15, scope: !10286)
!10316 = distinct !{!10316, !10309, !10317}
!10317 = !DILocation(line: 266, column: 2, scope: !10286)
!10318 = !DILocation(line: 268, column: 6, scope: !10286)
!10319 = !DILocation(line: 269, column: 34, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10321, file: !2398, line: 268, column: 20)
!10321 = distinct !DILexicalBlock(scope: !10286, file: !2398, line: 268, column: 6)
!10322 = !DILocation(line: 269, column: 3, scope: !10320)
!10323 = !DILocation(line: 270, column: 2, scope: !10320)
!10324 = !DILocation(line: 275, column: 2, scope: !10286)
!10325 = !DILocation(line: 277, column: 1, scope: !10286)
!10326 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !322, file: !322, line: 391, type: !10327, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10329)
!10327 = !DISubroutineType(types: !10328)
!10328 = !{null, !9875, !102, !102}
!10329 = !{!10330, !10331, !10332}
!10330 = !DILocalVariable(name: "list", arg: 1, scope: !10326, file: !322, line: 391, type: !9875)
!10331 = !DILocalVariable(name: "head", arg: 2, scope: !10326, file: !322, line: 391, type: !102)
!10332 = !DILocalVariable(name: "tail", arg: 3, scope: !10326, file: !322, line: 391, type: !102)
!10333 = !DILocation(line: 0, scope: !10326)
!10334 = !DILocation(line: 391, column: 1, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10326, file: !322, line: 391, column: 1)
!10336 = !DILocation(line: 391, column: 1, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !322, line: 391, column: 1)
!10338 = distinct !DILexicalBlock(scope: !10335, file: !322, line: 391, column: 1)
!10339 = !DILocation(line: 0, scope: !10337)
!10340 = !DILocation(line: 391, column: 1, scope: !10338)
!10341 = !DILocation(line: 391, column: 1, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10337, file: !322, line: 391, column: 1)
!10343 = !DILocation(line: 391, column: 1, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10337, file: !322, line: 391, column: 1)
!10345 = !DILocation(line: 391, column: 1, scope: !10326)
!10346 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !2398, file: !2398, line: 279, type: !10347, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10362)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{!103, !9847, !10349}
!10349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10350, size: 32)
!10350 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !10351, line: 40, baseType: !10352)
!10351 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !10351, line: 35, size: 64, elements: !10353)
!10353 = !{!10354, !10361}
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10352, file: !10351, line: 36, baseType: !10355, size: 32)
!10355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10356, size: 32)
!10356 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !10351, line: 33, baseType: !10357)
!10357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !10351, line: 29, size: 32, elements: !10358)
!10358 = !{!10359}
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10357, file: !10351, line: 30, baseType: !10360, size: 32)
!10360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10357, size: 32)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10352, file: !10351, line: 37, baseType: !10355, size: 32, offset: 32)
!10362 = !{!10363, !10364, !10365}
!10363 = !DILocalVariable(name: "queue", arg: 1, scope: !10346, file: !2398, line: 279, type: !9847)
!10364 = !DILocalVariable(name: "list", arg: 2, scope: !10346, file: !2398, line: 279, type: !10349)
!10365 = !DILocalVariable(name: "ret", scope: !10346, file: !2398, line: 281, type: !103)
!10366 = !DILocation(line: 0, scope: !10346)
!10367 = !DILocation(line: 286, column: 2, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10346, file: !2398, line: 286, column: 2)
!10369 = !DILocation(line: 286, column: 2, scope: !10346)
!10370 = !DILocation(line: 301, column: 41, scope: !10346)
!10371 = !DILocation(line: 301, column: 53, scope: !10346)
!10372 = !DILocation(line: 301, column: 8, scope: !10346)
!10373 = !DILocation(line: 302, column: 2, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10346, file: !2398, line: 302, column: 2)
!10375 = !DILocation(line: 302, column: 2, scope: !10346)
!10376 = !DILocation(line: 307, column: 2, scope: !10346)
!10377 = !DILocation(line: 311, column: 2, scope: !10346)
!10378 = !DILocation(line: 312, column: 1, scope: !10346)
!10379 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !10351, file: !10351, line: 261, type: !10380, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10382)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{!205, !10349}
!10382 = !{!10383}
!10383 = !DILocalVariable(name: "list", arg: 1, scope: !10379, file: !10351, line: 261, type: !10349)
!10384 = !DILocation(line: 0, scope: !10379)
!10385 = !DILocation(line: 261, column: 1, scope: !10379)
!10386 = distinct !DISubprogram(name: "sys_slist_init", scope: !10351, file: !10351, line: 196, type: !10387, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10389)
!10387 = !DISubroutineType(types: !10388)
!10388 = !{null, !10349}
!10389 = !{!10390}
!10390 = !DILocalVariable(name: "list", arg: 1, scope: !10386, file: !10351, line: 196, type: !10349)
!10391 = !DILocation(line: 0, scope: !10386)
!10392 = !DILocation(line: 198, column: 8, scope: !10386)
!10393 = !DILocation(line: 198, column: 13, scope: !10386)
!10394 = !DILocation(line: 199, column: 8, scope: !10386)
!10395 = !DILocation(line: 199, column: 13, scope: !10386)
!10396 = !DILocation(line: 200, column: 1, scope: !10386)
!10397 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !10351, file: !10351, line: 231, type: !10398, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10400)
!10398 = !DISubroutineType(types: !10399)
!10399 = !{!10355, !10349}
!10400 = !{!10401}
!10401 = !DILocalVariable(name: "list", arg: 1, scope: !10397, file: !10351, line: 231, type: !10349)
!10402 = !DILocation(line: 0, scope: !10397)
!10403 = !DILocation(line: 233, column: 15, scope: !10397)
!10404 = !DILocation(line: 233, column: 2, scope: !10397)
!10405 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !2398, file: !2398, line: 314, type: !10406, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10412)
!10406 = !DISubroutineType(types: !10407)
!10407 = !{!102, !9847, !10408}
!10408 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !10409)
!10409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !10410)
!10410 = !{!10411}
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10409, file: !220, line: 66, baseType: !219, size: 64)
!10412 = !{!10413, !10414, !10415, !10416, !10417, !10420}
!10413 = !DILocalVariable(name: "queue", arg: 1, scope: !10405, file: !2398, line: 314, type: !9847)
!10414 = !DILocalVariable(name: "timeout", arg: 2, scope: !10405, file: !2398, line: 314, type: !10408)
!10415 = !DILocalVariable(name: "key", scope: !10405, file: !2398, line: 316, type: !9910)
!10416 = !DILocalVariable(name: "data", scope: !10405, file: !2398, line: 317, type: !102)
!10417 = !DILocalVariable(name: "node", scope: !10418, file: !2398, line: 322, type: !2407)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !2398, line: 321, column: 52)
!10419 = distinct !DILexicalBlock(scope: !10405, file: !2398, line: 321, column: 6)
!10420 = !DILocalVariable(name: "ret", scope: !10405, file: !2398, line: 343, type: !103)
!10421 = !DILocation(line: 0, scope: !10405)
!10422 = !DILocation(line: 316, column: 45, scope: !10405)
!10423 = !DILocation(line: 0, scope: !9996, inlinedAt: !10424)
!10424 = distinct !DILocation(line: 316, column: 25, scope: !10405)
!10425 = !DILocation(line: 55, column: 2, scope: !10005, inlinedAt: !10426)
!10426 = distinct !DILocation(line: 145, column: 10, scope: !9996, inlinedAt: !10424)
!10427 = !DILocation(line: 0, scope: !10005, inlinedAt: !10426)
!10428 = !DILocation(line: 321, column: 6, scope: !10419)
!10429 = !DILocation(line: 321, column: 6, scope: !10405)
!10430 = !{!"branch_weights", i32 1, i32 2000}
!10431 = !DILocation(line: 324, column: 10, scope: !10418)
!10432 = !DILocation(line: 0, scope: !10418)
!10433 = !DILocation(line: 325, column: 10, scope: !10418)
!10434 = !DILocation(line: 0, scope: !10107, inlinedAt: !10435)
!10435 = distinct !DILocation(line: 326, column: 3, scope: !10418)
!10436 = !DILocation(line: 0, scope: !10116, inlinedAt: !10437)
!10437 = distinct !DILocation(line: 215, column: 2, scope: !10107, inlinedAt: !10435)
!10438 = !DILocation(line: 95, column: 2, scope: !10116, inlinedAt: !10437)
!10439 = !DILocation(line: 335, column: 6, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10405, file: !2398, line: 335, column: 6)
!10441 = !DILocation(line: 335, column: 6, scope: !10405)
!10442 = !DILocation(line: 0, scope: !10107, inlinedAt: !10443)
!10443 = distinct !DILocation(line: 336, column: 3, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10440, file: !2398, line: 335, column: 40)
!10445 = !DILocation(line: 0, scope: !10116, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 215, column: 2, scope: !10107, inlinedAt: !10443)
!10447 = !DILocation(line: 95, column: 2, scope: !10116, inlinedAt: !10446)
!10448 = !DILocation(line: 340, column: 3, scope: !10444)
!10449 = !DILocation(line: 343, column: 51, scope: !10405)
!10450 = !DILocation(line: 343, column: 12, scope: !10405)
!10451 = !DILocation(line: 348, column: 14, scope: !10405)
!10452 = !DILocation(line: 348, column: 9, scope: !10405)
!10453 = !DILocation(line: 348, column: 29, scope: !10405)
!10454 = !DILocation(line: 348, column: 44, scope: !10405)
!10455 = !DILocation(line: 349, column: 1, scope: !10405)
!10456 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !322, file: !322, line: 323, type: !10457, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10459)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{!205, !9875}
!10459 = !{!10460}
!10460 = !DILocalVariable(name: "list", arg: 1, scope: !10456, file: !322, line: 323, type: !9875)
!10461 = !DILocation(line: 0, scope: !10456)
!10462 = !DILocation(line: 323, column: 1, scope: !10456)
!10463 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !322, file: !322, line: 434, type: !10137, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10464)
!10464 = !{!10465, !10466}
!10465 = !DILocalVariable(name: "list", arg: 1, scope: !10463, file: !322, line: 434, type: !9875)
!10466 = !DILocalVariable(name: "node", scope: !10463, file: !322, line: 434, type: !2407)
!10467 = !DILocation(line: 0, scope: !10463)
!10468 = !DILocation(line: 434, column: 1, scope: !10463)
!10469 = !DILocation(line: 434, column: 1, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10463, file: !322, line: 434, column: 1)
!10471 = !DILocation(line: 434, column: 1, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10470, file: !322, line: 434, column: 1)
!10473 = distinct !DISubprogram(name: "k_queue_remove", scope: !2398, file: !2398, line: 351, type: !10474, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10476)
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!205, !9847, !102}
!10476 = !{!10477, !10478, !10479}
!10477 = !DILocalVariable(name: "queue", arg: 1, scope: !10473, file: !2398, line: 351, type: !9847)
!10478 = !DILocalVariable(name: "data", arg: 2, scope: !10473, file: !2398, line: 351, type: !102)
!10479 = !DILocalVariable(name: "ret", scope: !10473, file: !2398, line: 355, type: !205)
!10480 = !DILocation(line: 0, scope: !10473)
!10481 = !DILocation(line: 355, column: 48, scope: !10473)
!10482 = !DILocation(line: 355, column: 56, scope: !10473)
!10483 = !DILocation(line: 355, column: 13, scope: !10473)
!10484 = !DILocation(line: 359, column: 2, scope: !10473)
!10485 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !322, file: !322, line: 478, type: !10486, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10488)
!10486 = !DISubroutineType(types: !10487)
!10487 = !{!205, !9875, !2407}
!10488 = !{!10489, !10490, !10491, !10492}
!10489 = !DILocalVariable(name: "list", arg: 1, scope: !10485, file: !322, line: 478, type: !9875)
!10490 = !DILocalVariable(name: "node", arg: 2, scope: !10485, file: !322, line: 478, type: !2407)
!10491 = !DILocalVariable(name: "prev", scope: !10485, file: !322, line: 478, type: !2407)
!10492 = !DILocalVariable(name: "test", scope: !10485, file: !322, line: 478, type: !2407)
!10493 = !DILocation(line: 0, scope: !10485)
!10494 = !DILocation(line: 478, column: 1, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10485, file: !322, line: 478, column: 1)
!10496 = !DILocation(line: 478, column: 1, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10495, file: !322, line: 478, column: 1)
!10498 = !DILocation(line: 478, column: 1, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !322, line: 478, column: 1)
!10500 = distinct !DILexicalBlock(scope: !10497, file: !322, line: 478, column: 1)
!10501 = !DILocation(line: 478, column: 1, scope: !10500)
!10502 = distinct !{!10502, !10494, !10494}
!10503 = !DILocation(line: 478, column: 1, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10499, file: !322, line: 478, column: 1)
!10505 = !DILocation(line: 478, column: 1, scope: !10485)
!10506 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !322, file: !322, line: 463, type: !10163, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10507)
!10507 = !{!10508, !10509, !10510}
!10508 = !DILocalVariable(name: "list", arg: 1, scope: !10506, file: !322, line: 463, type: !9875)
!10509 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10506, file: !322, line: 463, type: !2407)
!10510 = !DILocalVariable(name: "node", arg: 3, scope: !10506, file: !322, line: 463, type: !2407)
!10511 = !DILocation(line: 0, scope: !10506)
!10512 = !DILocation(line: 463, column: 1, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10506, file: !322, line: 463, column: 1)
!10514 = !DILocation(line: 0, scope: !10513)
!10515 = !DILocation(line: 463, column: 1, scope: !10506)
!10516 = !DILocation(line: 463, column: 1, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10513, file: !322, line: 463, column: 1)
!10518 = !DILocation(line: 463, column: 1, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10517, file: !322, line: 463, column: 1)
!10520 = !DILocation(line: 463, column: 1, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10519, file: !322, line: 463, column: 1)
!10522 = !DILocation(line: 463, column: 1, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10513, file: !322, line: 463, column: 1)
!10524 = !DILocation(line: 463, column: 1, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10523, file: !322, line: 463, column: 1)
!10526 = !DILocation(line: 463, column: 1, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10525, file: !322, line: 463, column: 1)
!10528 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !322, file: !322, line: 347, type: !10194, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10529)
!10529 = !{!10530}
!10530 = !DILocalVariable(name: "node", arg: 1, scope: !10528, file: !322, line: 347, type: !2407)
!10531 = !DILocation(line: 0, scope: !10528)
!10532 = !DILocation(line: 347, column: 1, scope: !10528)
!10533 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !322, file: !322, line: 336, type: !10194, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10534)
!10534 = !{!10535}
!10535 = !DILocalVariable(name: "node", arg: 1, scope: !10533, file: !322, line: 336, type: !2407)
!10536 = !DILocation(line: 0, scope: !10533)
!10537 = !DILocation(line: 336, column: 1, scope: !10533)
!10538 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !2398, file: !2398, line: 362, type: !10474, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10539)
!10539 = !{!10540, !10541, !10542}
!10540 = !DILocalVariable(name: "queue", arg: 1, scope: !10538, file: !2398, line: 362, type: !9847)
!10541 = !DILocalVariable(name: "data", arg: 2, scope: !10538, file: !2398, line: 362, type: !102)
!10542 = !DILocalVariable(name: "test", scope: !10538, file: !2398, line: 366, type: !2407)
!10543 = !DILocation(line: 0, scope: !10538)
!10544 = !DILocation(line: 368, column: 2, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10538, file: !2398, line: 368, column: 2)
!10546 = !DILocation(line: 368, column: 2, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10545, file: !2398, line: 368, column: 2)
!10548 = !DILocation(line: 369, column: 12, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10550, file: !2398, line: 369, column: 7)
!10550 = distinct !DILexicalBlock(scope: !10547, file: !2398, line: 368, column: 49)
!10551 = !DILocation(line: 369, column: 7, scope: !10550)
!10552 = distinct !{!10552, !10544, !10553}
!10553 = !DILocation(line: 374, column: 2, scope: !10545)
!10554 = !DILocation(line: 376, column: 2, scope: !10538)
!10555 = !DILocation(line: 380, column: 2, scope: !10538)
!10556 = !DILocation(line: 381, column: 1, scope: !10538)
!10557 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !2398, file: !2398, line: 383, type: !10558, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10560)
!10558 = !DISubroutineType(types: !10559)
!10559 = !{!102, !9847}
!10560 = !{!10561, !10562}
!10561 = !DILocalVariable(name: "queue", arg: 1, scope: !10557, file: !2398, line: 383, type: !9847)
!10562 = !DILocalVariable(name: "ret", scope: !10557, file: !2398, line: 385, type: !102)
!10563 = !DILocation(line: 0, scope: !10557)
!10564 = !DILocation(line: 385, column: 61, scope: !10557)
!10565 = !DILocation(line: 385, column: 32, scope: !10557)
!10566 = !DILocation(line: 385, column: 14, scope: !10557)
!10567 = !DILocation(line: 389, column: 2, scope: !10557)
!10568 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !2398, file: !2398, line: 392, type: !10558, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !10569)
!10569 = !{!10570, !10571}
!10570 = !DILocalVariable(name: "queue", arg: 1, scope: !10568, file: !2398, line: 392, type: !9847)
!10571 = !DILocalVariable(name: "ret", scope: !10568, file: !2398, line: 394, type: !102)
!10572 = !DILocation(line: 0, scope: !10568)
!10573 = !DILocation(line: 394, column: 61, scope: !10568)
!10574 = !DILocation(line: 394, column: 32, scope: !10568)
!10575 = !DILocation(line: 394, column: 14, scope: !10568)
!10576 = !DILocation(line: 398, column: 2, scope: !10568)
!10577 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !1851, file: !1851, line: 93, type: !10578, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10580)
!10578 = !DISubroutineType(types: !10579)
!10579 = !{!878, !1746, !1746}
!10580 = !{!10581, !10582, !10583, !10584}
!10581 = !DILocalVariable(name: "thread_1", arg: 1, scope: !10577, file: !1851, line: 93, type: !1746)
!10582 = !DILocalVariable(name: "thread_2", arg: 2, scope: !10577, file: !1851, line: 94, type: !1746)
!10583 = !DILocalVariable(name: "b1", scope: !10577, file: !1851, line: 97, type: !878)
!10584 = !DILocalVariable(name: "b2", scope: !10577, file: !1851, line: 98, type: !878)
!10585 = !DILocation(line: 0, scope: !10577)
!10586 = !DILocation(line: 97, column: 30, scope: !10577)
!10587 = !DILocation(line: 98, column: 30, scope: !10577)
!10588 = !DILocation(line: 100, column: 9, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10577, file: !1851, line: 100, column: 6)
!10590 = !DILocation(line: 100, column: 6, scope: !10577)
!10591 = !DILocation(line: 125, column: 1, scope: !10577)
!10592 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !1851, file: !1851, line: 428, type: !10593, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10595)
!10593 = !DISubroutineType(types: !10594)
!10594 = !{null, !1746}
!10595 = !{!10596}
!10596 = !DILocalVariable(name: "curr", arg: 1, scope: !10592, file: !1851, line: 428, type: !1746)
!10597 = !DILocation(line: 0, scope: !10592)
!10598 = !DILocation(line: 434, column: 6, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10592, file: !1851, line: 434, column: 6)
!10600 = !DILocation(line: 434, column: 23, scope: !10599)
!10601 = !DILocation(line: 434, column: 6, scope: !10592)
!10602 = !DILocation(line: 435, column: 50, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10599, file: !1851, line: 434, column: 29)
!10604 = !DILocation(line: 435, column: 48, scope: !10603)
!10605 = !DILocation(line: 435, column: 29, scope: !10603)
!10606 = !DILocation(line: 436, column: 24, scope: !10603)
!10607 = !DILocation(line: 436, column: 3, scope: !10603)
!10608 = !DILocation(line: 437, column: 2, scope: !10603)
!10609 = !DILocation(line: 438, column: 1, scope: !10592)
!10610 = distinct !DISubprogram(name: "slice_time", scope: !1851, file: !1851, line: 407, type: !10611, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10613)
!10611 = !DISubroutineType(types: !10612)
!10612 = !{!103, !1746}
!10613 = !{!10614, !10615}
!10614 = !DILocalVariable(name: "curr", arg: 1, scope: !10610, file: !1851, line: 407, type: !1746)
!10615 = !DILocalVariable(name: "ret", scope: !10610, file: !1851, line: 409, type: !103)
!10616 = !DILocation(line: 0, scope: !10610)
!10617 = !DILocation(line: 409, column: 12, scope: !10610)
!10618 = !DILocation(line: 416, column: 2, scope: !10610)
!10619 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !1851, file: !1851, line: 440, type: !10620, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10622)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{null, !878, !103}
!10622 = !{!10623, !10624, !10625, !10631}
!10623 = !DILocalVariable(name: "slice", arg: 1, scope: !10619, file: !1851, line: 440, type: !878)
!10624 = !DILocalVariable(name: "prio", arg: 2, scope: !10619, file: !1851, line: 440, type: !103)
!10625 = !DILocalVariable(name: "__i", scope: !10626, file: !1851, line: 442, type: !10627)
!10626 = distinct !DILexicalBlock(scope: !10619, file: !1851, line: 442, column: 2)
!10627 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !335, line: 106, baseType: !10628)
!10628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !335, line: 32, size: 32, elements: !10629)
!10629 = !{!10630}
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10628, file: !335, line: 33, baseType: !103, size: 32)
!10631 = !DILocalVariable(name: "__key", scope: !10626, file: !1851, line: 442, type: !10627)
!10632 = !DILocation(line: 0, scope: !10619)
!10633 = !DILocation(line: 0, scope: !10626)
!10634 = !DILocalVariable(name: "l", arg: 1, scope: !10635, file: !335, line: 136, type: !10638)
!10635 = distinct !DISubprogram(name: "k_spin_lock", scope: !335, file: !335, line: 136, type: !10636, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10639)
!10636 = !DISubroutineType(types: !10637)
!10637 = !{!10627, !10638}
!10638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!10639 = !{!10634, !10640}
!10640 = !DILocalVariable(name: "k", scope: !10635, file: !335, line: 139, type: !10627)
!10641 = !DILocation(line: 0, scope: !10635, inlinedAt: !10642)
!10642 = distinct !DILocation(line: 442, column: 2, scope: !10626)
!10643 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !10648)
!10644 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10645)
!10645 = !{!10646, !10647}
!10646 = !DILocalVariable(name: "key", scope: !10644, file: !4919, line: 44, type: !32)
!10647 = !DILocalVariable(name: "tmp", scope: !10644, file: !4919, line: 53, type: !32)
!10648 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !10642)
!10649 = !{i64 1364436}
!10650 = !DILocation(line: 0, scope: !10644, inlinedAt: !10648)
!10651 = !DILocation(line: 443, column: 29, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !1851, line: 442, column: 26)
!10653 = distinct !DILexicalBlock(scope: !10626, file: !1851, line: 442, column: 2)
!10654 = !DILocation(line: 444, column: 17, scope: !10652)
!10655 = !DILocation(line: 445, column: 51, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10652, file: !1851, line: 445, column: 7)
!10657 = !DILocation(line: 445, column: 7, scope: !10652)
!10658 = !DILocation(line: 0, scope: !10652)
!10659 = !DILocation(line: 451, column: 18, scope: !10652)
!10660 = !DILocation(line: 452, column: 3, scope: !10652)
!10661 = !DILocalVariable(name: "key", arg: 2, scope: !10662, file: !335, line: 190, type: !10627)
!10662 = distinct !DISubprogram(name: "k_spin_unlock", scope: !335, file: !335, line: 189, type: !10663, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10665)
!10663 = !DISubroutineType(types: !10664)
!10664 = !{null, !10638, !10627}
!10665 = !{!10666, !10661}
!10666 = !DILocalVariable(name: "l", arg: 1, scope: !10662, file: !335, line: 189, type: !10638)
!10667 = !DILocation(line: 0, scope: !10662, inlinedAt: !10668)
!10668 = distinct !DILocation(line: 442, column: 2, scope: !10653)
!10669 = !DILocalVariable(name: "key", arg: 1, scope: !10670, file: !4919, line: 84, type: !32)
!10670 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10671)
!10671 = !{!10669}
!10672 = !DILocation(line: 0, scope: !10670, inlinedAt: !10673)
!10673 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !10668)
!10674 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !10673)
!10675 = !{i64 1365253}
!10676 = !DILocation(line: 454, column: 1, scope: !10619)
!10677 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !9698, file: !9698, line: 389, type: !5039, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10678)
!10678 = !{!10679}
!10679 = !DILocalVariable(name: "t", arg: 1, scope: !10677, file: !9698, line: 389, type: !121)
!10680 = !DILocation(line: 0, scope: !10677)
!10681 = !DILocalVariable(name: "t", arg: 1, scope: !10682, file: !9698, line: 102, type: !1724)
!10682 = distinct !DISubprogram(name: "z_tmcvt", scope: !9698, file: !9698, line: 102, type: !9706, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10683)
!10683 = !{!10681, !10684, !10685, !10686, !10687, !10688, !10689, !10690, !10691, !10692, !10693}
!10684 = !DILocalVariable(name: "from_hz", arg: 2, scope: !10682, file: !9698, line: 102, type: !121)
!10685 = !DILocalVariable(name: "to_hz", arg: 3, scope: !10682, file: !9698, line: 103, type: !121)
!10686 = !DILocalVariable(name: "const_hz", arg: 4, scope: !10682, file: !9698, line: 103, type: !205)
!10687 = !DILocalVariable(name: "result32", arg: 5, scope: !10682, file: !9698, line: 104, type: !205)
!10688 = !DILocalVariable(name: "round_up", arg: 6, scope: !10682, file: !9698, line: 104, type: !205)
!10689 = !DILocalVariable(name: "round_off", arg: 7, scope: !10682, file: !9698, line: 105, type: !205)
!10690 = !DILocalVariable(name: "mul_ratio", scope: !10682, file: !9698, line: 107, type: !205)
!10691 = !DILocalVariable(name: "div_ratio", scope: !10682, file: !9698, line: 109, type: !205)
!10692 = !DILocalVariable(name: "off", scope: !10682, file: !9698, line: 116, type: !1724)
!10693 = !DILocalVariable(name: "rdivisor", scope: !10694, file: !9698, line: 119, type: !121)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !9698, line: 118, column: 18)
!10695 = distinct !DILexicalBlock(scope: !10682, file: !9698, line: 118, column: 6)
!10696 = !DILocation(line: 0, scope: !10682, inlinedAt: !10697)
!10697 = distinct !DILocation(line: 392, column: 9, scope: !10677)
!10698 = !DILocation(line: 143, column: 25, scope: !10699, inlinedAt: !10697)
!10699 = distinct !DILexicalBlock(scope: !10700, file: !9698, line: 142, column: 17)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !9698, line: 142, column: 7)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !9698, line: 141, column: 24)
!10702 = distinct !DILexicalBlock(scope: !10703, file: !9698, line: 141, column: 13)
!10703 = distinct !DILexicalBlock(scope: !10682, file: !9698, line: 134, column: 6)
!10704 = !DILocation(line: 392, column: 2, scope: !10677)
!10705 = distinct !DISubprogram(name: "z_time_slice", scope: !1851, file: !1851, line: 502, type: !9096, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10706)
!10706 = !{!10707, !10708}
!10707 = !DILocalVariable(name: "ticks", arg: 1, scope: !10705, file: !1851, line: 502, type: !103)
!10708 = !DILocalVariable(name: "key", scope: !10705, file: !1851, line: 511, type: !10627)
!10709 = !DILocation(line: 0, scope: !10705)
!10710 = !DILocation(line: 0, scope: !10635, inlinedAt: !10711)
!10711 = distinct !DILocation(line: 511, column: 25, scope: !10705)
!10712 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !10713)
!10713 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !10711)
!10714 = !DILocation(line: 0, scope: !10644, inlinedAt: !10713)
!10715 = !DILocation(line: 514, column: 6, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10705, file: !1851, line: 514, column: 6)
!10717 = !DILocation(line: 514, column: 25, scope: !10716)
!10718 = !DILocation(line: 514, column: 22, scope: !10716)
!10719 = !DILocation(line: 514, column: 6, scope: !10705)
!10720 = !DILocation(line: 515, column: 3, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10716, file: !1851, line: 514, column: 35)
!10722 = !DILocation(line: 0, scope: !10662, inlinedAt: !10723)
!10723 = distinct !DILocation(line: 516, column: 3, scope: !10721)
!10724 = !DILocation(line: 0, scope: !10670, inlinedAt: !10725)
!10725 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !10723)
!10726 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !10725)
!10727 = !DILocation(line: 517, column: 3, scope: !10721)
!10728 = !DILocation(line: 519, column: 18, scope: !10705)
!10729 = !DILocation(line: 522, column: 6, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10705, file: !1851, line: 522, column: 6)
!10731 = !DILocation(line: 522, column: 27, scope: !10730)
!10732 = !DILocation(line: 522, column: 30, scope: !10730)
!10733 = !DILocation(line: 522, column: 6, scope: !10705)
!10734 = !DILocation(line: 523, column: 30, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !1851, line: 523, column: 7)
!10736 = distinct !DILexicalBlock(scope: !10730, file: !1851, line: 522, column: 51)
!10737 = !DILocation(line: 523, column: 13, scope: !10735)
!10738 = !DILocation(line: 523, column: 7, scope: !10736)
!10739 = !DILocation(line: 530, column: 10, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10735, file: !1851, line: 523, column: 43)
!10741 = !DILocation(line: 531, column: 3, scope: !10740)
!10742 = !DILocation(line: 532, column: 30, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10735, file: !1851, line: 531, column: 10)
!10744 = !DILocation(line: 535, column: 29, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10730, file: !1851, line: 534, column: 9)
!10746 = !DILocation(line: 0, scope: !10662, inlinedAt: !10747)
!10747 = distinct !DILocation(line: 537, column: 2, scope: !10705)
!10748 = !DILocation(line: 0, scope: !10670, inlinedAt: !10749)
!10749 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !10747)
!10750 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !10749)
!10751 = !DILocation(line: 538, column: 1, scope: !10705)
!10752 = distinct !DISubprogram(name: "sliceable", scope: !1851, file: !1851, line: 468, type: !10753, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10755)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{!205, !1746}
!10755 = !{!10756, !10757}
!10756 = !DILocalVariable(name: "thread", arg: 1, scope: !10752, file: !1851, line: 468, type: !1746)
!10757 = !DILocalVariable(name: "ret", scope: !10752, file: !1851, line: 470, type: !205)
!10758 = !DILocation(line: 0, scope: !10752)
!10759 = !DILocation(line: 470, column: 13, scope: !10752)
!10760 = !DILocation(line: 471, column: 3, scope: !10752)
!10761 = !DILocation(line: 471, column: 7, scope: !10752)
!10762 = !DILocation(line: 472, column: 3, scope: !10752)
!10763 = !DILocation(line: 472, column: 37, scope: !10752)
!10764 = !DILocation(line: 472, column: 24, scope: !10752)
!10765 = !DILocation(line: 472, column: 43, scope: !10752)
!10766 = !DILocation(line: 472, column: 7, scope: !10752)
!10767 = !DILocation(line: 473, column: 3, scope: !10752)
!10768 = !DILocation(line: 473, column: 7, scope: !10752)
!10769 = !DILocation(line: 473, column: 6, scope: !10752)
!10770 = !DILocation(line: 479, column: 2, scope: !10752)
!10771 = distinct !DISubprogram(name: "slice_expired_locked", scope: !1851, file: !1851, line: 482, type: !10772, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{!10627, !10627}
!10774 = !{!10775, !10776}
!10775 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !10771, file: !1851, line: 482, type: !10627)
!10776 = !DILocalVariable(name: "curr", scope: !10771, file: !1851, line: 484, type: !1746)
!10777 = !DILocation(line: 0, scope: !10771)
!10778 = !DILocation(line: 484, column: 26, scope: !10771)
!10779 = !DILocation(line: 493, column: 7, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10771, file: !1851, line: 493, column: 6)
!10781 = !DILocation(line: 493, column: 6, scope: !10771)
!10782 = !DILocation(line: 494, column: 3, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10780, file: !1851, line: 493, column: 49)
!10784 = !DILocation(line: 495, column: 2, scope: !10783)
!10785 = !DILocation(line: 496, column: 2, scope: !10771)
!10786 = !DILocation(line: 499, column: 1, scope: !10771)
!10787 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !9139, file: !9139, line: 106, type: !10753, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10788)
!10788 = !{!10789, !10790}
!10789 = !DILocalVariable(name: "thread", arg: 1, scope: !10787, file: !9139, line: 106, type: !1746)
!10790 = !DILocalVariable(name: "state", scope: !10787, file: !9139, line: 108, type: !202)
!10791 = !DILocation(line: 0, scope: !10787)
!10792 = !DILocation(line: 108, column: 31, scope: !10787)
!10793 = !DILocation(line: 110, column: 16, scope: !10787)
!10794 = !DILocation(line: 111, column: 41, scope: !10787)
!10795 = !DILocation(line: 110, column: 2, scope: !10787)
!10796 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !1851, file: !1851, line: 393, type: !10593, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10797)
!10797 = !{!10798}
!10798 = !DILocalVariable(name: "thread", arg: 1, scope: !10796, file: !1851, line: 393, type: !1746)
!10799 = !DILocation(line: 0, scope: !10796)
!10800 = !DILocation(line: 395, column: 6, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10796, file: !1851, line: 395, column: 6)
!10802 = !DILocation(line: 395, column: 6, scope: !10796)
!10803 = !DILocalVariable(name: "thread", arg: 1, scope: !10804, file: !1851, line: 264, type: !1746)
!10804 = distinct !DISubprogram(name: "dequeue_thread", scope: !1851, file: !1851, line: 264, type: !10593, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10805)
!10805 = !{!10803}
!10806 = !DILocation(line: 0, scope: !10804, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 396, column: 3, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10801, file: !1851, line: 395, column: 34)
!10809 = !DILocation(line: 266, column: 15, scope: !10804, inlinedAt: !10807)
!10810 = !DILocation(line: 266, column: 28, scope: !10804, inlinedAt: !10807)
!10811 = !DILocalVariable(name: "thread", arg: 1, scope: !10812, file: !1851, line: 232, type: !1746)
!10812 = distinct !DISubprogram(name: "runq_remove", scope: !1851, file: !1851, line: 232, type: !10593, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10813)
!10813 = !{!10811}
!10814 = !DILocation(line: 0, scope: !10812, inlinedAt: !10815)
!10815 = distinct !DILocation(line: 268, column: 3, scope: !10816, inlinedAt: !10807)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !1851, line: 267, column: 35)
!10817 = distinct !DILexicalBlock(scope: !10804, file: !1851, line: 267, column: 6)
!10818 = !DILocation(line: 234, column: 2, scope: !10812, inlinedAt: !10815)
!10819 = !DILocation(line: 397, column: 2, scope: !10808)
!10820 = !DILocalVariable(name: "thread", arg: 1, scope: !10821, file: !1851, line: 250, type: !1746)
!10821 = distinct !DISubprogram(name: "queue_thread", scope: !1851, file: !1851, line: 250, type: !10593, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10822)
!10822 = !{!10820}
!10823 = !DILocation(line: 0, scope: !10821, inlinedAt: !10824)
!10824 = distinct !DILocation(line: 398, column: 2, scope: !10796)
!10825 = !DILocation(line: 252, column: 15, scope: !10821, inlinedAt: !10824)
!10826 = !DILocation(line: 252, column: 28, scope: !10821, inlinedAt: !10824)
!10827 = !DILocalVariable(name: "thread", arg: 1, scope: !10828, file: !1851, line: 227, type: !1746)
!10828 = distinct !DISubprogram(name: "runq_add", scope: !1851, file: !1851, line: 227, type: !10593, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10829)
!10829 = !{!10827}
!10830 = !DILocation(line: 0, scope: !10828, inlinedAt: !10831)
!10831 = distinct !DILocation(line: 254, column: 3, scope: !10832, inlinedAt: !10824)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !1851, line: 253, column: 35)
!10833 = distinct !DILexicalBlock(scope: !10821, file: !1851, line: 253, column: 6)
!10834 = !DILocalVariable(name: "pq", arg: 1, scope: !10835, file: !1851, line: 181, type: !10838)
!10835 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !1851, file: !1851, line: 181, type: !10836, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10839)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{null, !10838, !1746}
!10838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!10839 = !{!10834, !10840, !10841}
!10840 = !DILocalVariable(name: "thread", arg: 2, scope: !10835, file: !1851, line: 182, type: !1746)
!10841 = !DILocalVariable(name: "t", scope: !10835, file: !1851, line: 184, type: !1746)
!10842 = !DILocation(line: 0, scope: !10835, inlinedAt: !10843)
!10843 = distinct !DILocation(line: 229, column: 2, scope: !10828, inlinedAt: !10831)
!10844 = !DILocation(line: 188, column: 2, scope: !10845, inlinedAt: !10843)
!10845 = distinct !DILexicalBlock(scope: !10835, file: !1851, line: 188, column: 2)
!10846 = !DILocation(line: 188, column: 2, scope: !10847, inlinedAt: !10843)
!10847 = distinct !DILexicalBlock(scope: !10845, file: !1851, line: 188, column: 2)
!10848 = !DILocation(line: 0, scope: !10845, inlinedAt: !10843)
!10849 = !DILocation(line: 189, column: 7, scope: !10850, inlinedAt: !10843)
!10850 = distinct !DILexicalBlock(scope: !10851, file: !1851, line: 189, column: 7)
!10851 = distinct !DILexicalBlock(scope: !10847, file: !1851, line: 188, column: 56)
!10852 = !DILocation(line: 189, column: 35, scope: !10850, inlinedAt: !10843)
!10853 = !DILocation(line: 189, column: 7, scope: !10851, inlinedAt: !10843)
!10854 = !DILocation(line: 191, column: 21, scope: !10855, inlinedAt: !10843)
!10855 = distinct !DILexicalBlock(scope: !10850, file: !1851, line: 189, column: 40)
!10856 = !DILocation(line: 190, column: 4, scope: !10855, inlinedAt: !10843)
!10857 = !DILocation(line: 192, column: 4, scope: !10855, inlinedAt: !10843)
!10858 = distinct !{!10858, !10844, !10859}
!10859 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !10843)
!10860 = !DILocation(line: 196, column: 37, scope: !10835, inlinedAt: !10843)
!10861 = !DILocation(line: 196, column: 2, scope: !10835, inlinedAt: !10843)
!10862 = !DILocation(line: 197, column: 1, scope: !10835, inlinedAt: !10843)
!10863 = !DILocation(line: 399, column: 25, scope: !10796)
!10864 = !DILocation(line: 399, column: 22, scope: !10796)
!10865 = !DILocation(line: 399, column: 2, scope: !10796)
!10866 = !DILocation(line: 400, column: 1, scope: !10796)
!10867 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !9139, file: !9139, line: 136, type: !10753, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10868)
!10868 = !{!10869}
!10869 = !DILocalVariable(name: "thread", arg: 1, scope: !10867, file: !9139, line: 136, type: !1746)
!10870 = !DILocation(line: 0, scope: !10867)
!10871 = !DILocation(line: 138, column: 9, scope: !10867)
!10872 = !DILocation(line: 138, column: 2, scope: !10867)
!10873 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !1851, file: !1851, line: 1137, type: !10836, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10874)
!10874 = !{!10875, !10876}
!10875 = !DILocalVariable(name: "pq", arg: 1, scope: !10873, file: !1851, line: 1137, type: !10838)
!10876 = !DILocalVariable(name: "thread", arg: 2, scope: !10873, file: !1851, line: 1137, type: !1746)
!10877 = !DILocation(line: 0, scope: !10873)
!10878 = !DILocation(line: 1141, column: 33, scope: !10873)
!10879 = !DILocation(line: 1141, column: 2, scope: !10873)
!10880 = !DILocation(line: 1142, column: 1, scope: !10873)
!10881 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !344, file: !344, line: 294, type: !10882, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10884)
!10882 = !DISubroutineType(types: !10883)
!10883 = !{!1847, !10838}
!10884 = !{!10885}
!10885 = !DILocalVariable(name: "list", arg: 1, scope: !10881, file: !344, line: 294, type: !10838)
!10886 = !DILocation(line: 0, scope: !10881)
!10887 = !DILocation(line: 296, column: 9, scope: !10881)
!10888 = !DILocation(line: 296, column: 49, scope: !10881)
!10889 = !DILocation(line: 296, column: 2, scope: !10881)
!10890 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !344, file: !344, line: 443, type: !10891, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10893)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{null, !1847, !1847}
!10893 = !{!10894, !10895, !10896}
!10894 = !DILocalVariable(name: "successor", arg: 1, scope: !10890, file: !344, line: 443, type: !1847)
!10895 = !DILocalVariable(name: "node", arg: 2, scope: !10890, file: !344, line: 443, type: !1847)
!10896 = !DILocalVariable(name: "prev", scope: !10890, file: !344, line: 445, type: !10897)
!10897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1847)
!10898 = !DILocation(line: 0, scope: !10890)
!10899 = !DILocation(line: 445, column: 39, scope: !10890)
!10900 = !DILocation(line: 447, column: 8, scope: !10890)
!10901 = !DILocation(line: 447, column: 13, scope: !10890)
!10902 = !DILocation(line: 448, column: 8, scope: !10890)
!10903 = !DILocation(line: 448, column: 13, scope: !10890)
!10904 = !DILocation(line: 449, column: 8, scope: !10890)
!10905 = !DILocation(line: 449, column: 13, scope: !10890)
!10906 = !DILocation(line: 450, column: 18, scope: !10890)
!10907 = !DILocation(line: 451, column: 1, scope: !10890)
!10908 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !344, file: !344, line: 341, type: !10909, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10911)
!10909 = !DISubroutineType(types: !10910)
!10910 = !{!1847, !10838, !1847}
!10911 = !{!10912, !10913}
!10912 = !DILocalVariable(name: "list", arg: 1, scope: !10908, file: !344, line: 341, type: !10838)
!10913 = !DILocalVariable(name: "node", arg: 2, scope: !10908, file: !344, line: 342, type: !1847)
!10914 = !DILocation(line: 0, scope: !10908)
!10915 = !DILocation(line: 344, column: 15, scope: !10908)
!10916 = !DILocation(line: 344, column: 9, scope: !10908)
!10917 = !DILocation(line: 344, column: 26, scope: !10908)
!10918 = !DILocation(line: 344, column: 2, scope: !10908)
!10919 = distinct !DISubprogram(name: "sys_dlist_append", scope: !344, file: !344, line: 404, type: !10920, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10922)
!10920 = !DISubroutineType(types: !10921)
!10921 = !{null, !10838, !1847}
!10922 = !{!10923, !10924, !10925}
!10923 = !DILocalVariable(name: "list", arg: 1, scope: !10919, file: !344, line: 404, type: !10838)
!10924 = !DILocalVariable(name: "node", arg: 2, scope: !10919, file: !344, line: 404, type: !1847)
!10925 = !DILocalVariable(name: "tail", scope: !10919, file: !344, line: 406, type: !10897)
!10926 = !DILocation(line: 0, scope: !10919)
!10927 = !DILocation(line: 406, column: 34, scope: !10919)
!10928 = !DILocation(line: 408, column: 8, scope: !10919)
!10929 = !DILocation(line: 408, column: 13, scope: !10919)
!10930 = !DILocation(line: 409, column: 8, scope: !10919)
!10931 = !DILocation(line: 409, column: 13, scope: !10919)
!10932 = !DILocation(line: 411, column: 8, scope: !10919)
!10933 = !DILocation(line: 411, column: 13, scope: !10919)
!10934 = !DILocation(line: 412, column: 13, scope: !10919)
!10935 = !DILocation(line: 413, column: 1, scope: !10919)
!10936 = distinct !DISubprogram(name: "update_cache", scope: !1851, file: !1851, line: 559, type: !9096, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10937)
!10937 = !{!10938, !10939}
!10938 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !10936, file: !1851, line: 559, type: !103)
!10939 = !DILocalVariable(name: "thread", scope: !10936, file: !1851, line: 562, type: !1746)
!10940 = !DILocation(line: 0, scope: !10936)
!10941 = !DILocation(line: 239, column: 9, scope: !10942, inlinedAt: !10945)
!10942 = distinct !DISubprogram(name: "runq_best", scope: !1851, file: !1851, line: 237, type: !10943, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!10943 = !DISubroutineType(types: !10944)
!10944 = !{!1746}
!10945 = distinct !DILocation(line: 314, column: 28, scope: !10946, inlinedAt: !10949)
!10946 = distinct !DISubprogram(name: "next_up", scope: !1851, file: !1851, line: 312, type: !10943, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10947)
!10947 = !{!10948}
!10948 = !DILocalVariable(name: "thread", scope: !10946, file: !1851, line: 314, type: !1746)
!10949 = distinct !DILocation(line: 562, column: 28, scope: !10936)
!10950 = !DILocation(line: 0, scope: !10946, inlinedAt: !10949)
!10951 = !DILocation(line: 340, column: 17, scope: !10946, inlinedAt: !10949)
!10952 = !DILocation(line: 340, column: 9, scope: !10946, inlinedAt: !10949)
!10953 = !DILocalVariable(name: "thread", arg: 1, scope: !10954, file: !1851, line: 127, type: !1746)
!10954 = distinct !DISubprogram(name: "should_preempt", scope: !1851, file: !1851, line: 127, type: !10955, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10957)
!10955 = !DISubroutineType(types: !10956)
!10956 = !{!205, !1746, !103}
!10957 = !{!10953, !10958}
!10958 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !10954, file: !1851, line: 128, type: !103)
!10959 = !DILocation(line: 0, scope: !10954, inlinedAt: !10960)
!10960 = distinct !DILocation(line: 564, column: 6, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10936, file: !1851, line: 564, column: 6)
!10962 = !DILocation(line: 133, column: 17, scope: !10963, inlinedAt: !10960)
!10963 = distinct !DILexicalBlock(scope: !10954, file: !1851, line: 133, column: 6)
!10964 = !DILocation(line: 0, scope: !10961)
!10965 = !DILocation(line: 133, column: 6, scope: !10954, inlinedAt: !10960)
!10966 = !DILocation(line: 140, column: 6, scope: !10967, inlinedAt: !10960)
!10967 = distinct !DILexicalBlock(scope: !10954, file: !1851, line: 140, column: 6)
!10968 = !DILocation(line: 140, column: 6, scope: !10954, inlinedAt: !10960)
!10969 = !DILocation(line: 150, column: 9, scope: !10970, inlinedAt: !10960)
!10970 = distinct !DILexicalBlock(scope: !10954, file: !1851, line: 149, column: 6)
!10971 = !DILocation(line: 149, column: 6, scope: !10954, inlinedAt: !10960)
!10972 = !DILocation(line: 157, column: 6, scope: !10973, inlinedAt: !10960)
!10973 = distinct !DILexicalBlock(scope: !10954, file: !1851, line: 157, column: 6)
!10974 = !DILocation(line: 564, column: 6, scope: !10936)
!10975 = !DILocation(line: 566, column: 14, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !1851, line: 566, column: 7)
!10977 = distinct !DILexicalBlock(scope: !10961, file: !1851, line: 564, column: 42)
!10978 = !DILocation(line: 566, column: 7, scope: !10977)
!10979 = !DILocation(line: 567, column: 4, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10976, file: !1851, line: 566, column: 27)
!10981 = !DILocation(line: 568, column: 3, scope: !10980)
!10982 = !DILocation(line: 585, column: 1, scope: !10936)
!10983 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !1851, file: !1851, line: 1144, type: !10984, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10986)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!1746, !10838}
!10986 = !{!10987, !10988, !10989}
!10987 = !DILocalVariable(name: "pq", arg: 1, scope: !10983, file: !1851, line: 1144, type: !10838)
!10988 = !DILocalVariable(name: "thread", scope: !10983, file: !1851, line: 1146, type: !1746)
!10989 = !DILocalVariable(name: "n", scope: !10983, file: !1851, line: 1147, type: !1847)
!10990 = !DILocation(line: 0, scope: !10983)
!10991 = !DILocation(line: 1147, column: 19, scope: !10983)
!10992 = !DILocation(line: 1152, column: 2, scope: !10983)
!10993 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !9139, file: !9139, line: 115, type: !10753, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !10994)
!10994 = !{!10995}
!10995 = !DILocalVariable(name: "thread", arg: 1, scope: !10993, file: !9139, line: 115, type: !1746)
!10996 = !DILocation(line: 0, scope: !10993)
!10997 = !DILocation(line: 117, column: 46, scope: !10993)
!10998 = !DILocation(line: 117, column: 10, scope: !10993)
!10999 = !DILocation(line: 117, column: 9, scope: !10993)
!11000 = !DILocation(line: 117, column: 2, scope: !10993)
!11001 = distinct !DISubprogram(name: "is_preempt", scope: !1851, file: !1851, line: 62, type: !10611, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11002)
!11002 = !{!11003}
!11003 = !DILocalVariable(name: "thread", arg: 1, scope: !11001, file: !1851, line: 62, type: !1746)
!11004 = !DILocation(line: 0, scope: !11001)
!11005 = !DILocation(line: 65, column: 22, scope: !11001)
!11006 = !DILocation(line: 65, column: 30, scope: !11001)
!11007 = !DILocation(line: 65, column: 2, scope: !11001)
!11008 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !9531, file: !9531, line: 35, type: !11009, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11013)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{!205, !11011}
!11011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11012, size: 32)
!11012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!11013 = !{!11014}
!11014 = !DILocalVariable(name: "to", arg: 1, scope: !11008, file: !9531, line: 35, type: !11011)
!11015 = !DILocation(line: 0, scope: !11008)
!11016 = !DILocation(line: 37, column: 35, scope: !11008)
!11017 = !DILocation(line: 37, column: 10, scope: !11008)
!11018 = !DILocation(line: 37, column: 9, scope: !11008)
!11019 = !DILocation(line: 37, column: 2, scope: !11008)
!11020 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !344, file: !344, line: 225, type: !11021, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11025)
!11021 = !DISubroutineType(types: !11022)
!11022 = !{!205, !11023}
!11023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11024, size: 32)
!11024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!11025 = !{!11026}
!11026 = !DILocalVariable(name: "node", arg: 1, scope: !11020, file: !344, line: 225, type: !11023)
!11027 = !DILocation(line: 0, scope: !11020)
!11028 = !DILocation(line: 227, column: 15, scope: !11020)
!11029 = !DILocation(line: 227, column: 20, scope: !11020)
!11030 = !DILocation(line: 227, column: 2, scope: !11020)
!11031 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !344, file: !344, line: 325, type: !10909, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11032)
!11032 = !{!11033, !11034}
!11033 = !DILocalVariable(name: "list", arg: 1, scope: !11031, file: !344, line: 325, type: !10838)
!11034 = !DILocalVariable(name: "node", arg: 2, scope: !11031, file: !344, line: 326, type: !1847)
!11035 = !DILocation(line: 0, scope: !11031)
!11036 = !DILocation(line: 328, column: 24, scope: !11031)
!11037 = !DILocation(line: 328, column: 15, scope: !11031)
!11038 = !DILocation(line: 328, column: 9, scope: !11031)
!11039 = !DILocation(line: 328, column: 45, scope: !11031)
!11040 = !DILocation(line: 328, column: 2, scope: !11031)
!11041 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !344, file: !344, line: 266, type: !11042, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11044)
!11042 = !DISubroutineType(types: !11043)
!11043 = !{!205, !10838}
!11044 = !{!11045}
!11045 = !DILocalVariable(name: "list", arg: 1, scope: !11041, file: !344, line: 266, type: !10838)
!11046 = !DILocation(line: 0, scope: !11041)
!11047 = !DILocation(line: 268, column: 15, scope: !11041)
!11048 = !DILocation(line: 268, column: 20, scope: !11041)
!11049 = !DILocation(line: 268, column: 2, scope: !11041)
!11050 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !344, file: !344, line: 496, type: !11051, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11053)
!11051 = !DISubroutineType(types: !11052)
!11052 = !{null, !1847}
!11053 = !{!11054, !11055, !11056}
!11054 = !DILocalVariable(name: "node", arg: 1, scope: !11050, file: !344, line: 496, type: !1847)
!11055 = !DILocalVariable(name: "prev", scope: !11050, file: !344, line: 498, type: !10897)
!11056 = !DILocalVariable(name: "next", scope: !11050, file: !344, line: 499, type: !10897)
!11057 = !DILocation(line: 0, scope: !11050)
!11058 = !DILocation(line: 498, column: 34, scope: !11050)
!11059 = !DILocation(line: 499, column: 34, scope: !11050)
!11060 = !DILocation(line: 501, column: 8, scope: !11050)
!11061 = !DILocation(line: 501, column: 13, scope: !11050)
!11062 = !DILocation(line: 502, column: 8, scope: !11050)
!11063 = !DILocation(line: 502, column: 13, scope: !11050)
!11064 = !DILocation(line: 503, column: 2, scope: !11050)
!11065 = !DILocation(line: 504, column: 1, scope: !11050)
!11066 = distinct !DISubprogram(name: "sys_dnode_init", scope: !344, file: !344, line: 211, type: !11051, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11067)
!11067 = !{!11068}
!11068 = !DILocalVariable(name: "node", arg: 1, scope: !11066, file: !344, line: 211, type: !1847)
!11069 = !DILocation(line: 0, scope: !11066)
!11070 = !DILocation(line: 213, column: 8, scope: !11066)
!11071 = !DILocation(line: 213, column: 13, scope: !11066)
!11072 = !DILocation(line: 214, column: 8, scope: !11066)
!11073 = !DILocation(line: 214, column: 13, scope: !11066)
!11074 = !DILocation(line: 215, column: 1, scope: !11066)
!11075 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !9139, file: !9139, line: 131, type: !11076, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11078)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!205, !1746, !121}
!11078 = !{!11079, !11080}
!11079 = !DILocalVariable(name: "thread", arg: 1, scope: !11075, file: !9139, line: 131, type: !1746)
!11080 = !DILocalVariable(name: "state", arg: 2, scope: !11075, file: !9139, line: 131, type: !121)
!11081 = !DILocation(line: 0, scope: !11075)
!11082 = !DILocation(line: 133, column: 23, scope: !11075)
!11083 = !DILocation(line: 133, column: 45, scope: !11075)
!11084 = !DILocation(line: 133, column: 2, scope: !11075)
!11085 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !9139, file: !9139, line: 211, type: !11086, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11088)
!11086 = !DISubroutineType(types: !11087)
!11087 = !{!205, !103, !103}
!11088 = !{!11089, !11090}
!11089 = !DILocalVariable(name: "prio", arg: 1, scope: !11085, file: !9139, line: 211, type: !103)
!11090 = !DILocalVariable(name: "test_prio", arg: 2, scope: !11085, file: !9139, line: 211, type: !103)
!11091 = !DILocation(line: 0, scope: !11085)
!11092 = !DILocation(line: 213, column: 9, scope: !11085)
!11093 = !DILocation(line: 213, column: 2, scope: !11085)
!11094 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !9139, file: !9139, line: 83, type: !10753, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11095)
!11095 = !{!11096}
!11096 = !DILocalVariable(name: "thread", arg: 1, scope: !11094, file: !9139, line: 83, type: !1746)
!11097 = !DILocation(line: 0, scope: !11094)
!11098 = !DILocation(line: 89, column: 16, scope: !11094)
!11099 = !DILocation(line: 89, column: 2, scope: !11094)
!11100 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !9139, file: !9139, line: 206, type: !11086, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11101)
!11101 = !{!11102, !11103}
!11102 = !DILocalVariable(name: "prio1", arg: 1, scope: !11100, file: !9139, line: 206, type: !103)
!11103 = !DILocalVariable(name: "prio2", arg: 2, scope: !11100, file: !9139, line: 206, type: !103)
!11104 = !DILocation(line: 0, scope: !11100)
!11105 = !DILocation(line: 208, column: 15, scope: !11100)
!11106 = !DILocation(line: 208, column: 2, scope: !11100)
!11107 = distinct !DISubprogram(name: "z_ready_thread", scope: !1851, file: !1851, line: 635, type: !10593, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11108)
!11108 = !{!11109, !11110, !11112}
!11109 = !DILocalVariable(name: "thread", arg: 1, scope: !11107, file: !1851, line: 635, type: !1746)
!11110 = !DILocalVariable(name: "__i", scope: !11111, file: !1851, line: 637, type: !10627)
!11111 = distinct !DILexicalBlock(scope: !11107, file: !1851, line: 637, column: 2)
!11112 = !DILocalVariable(name: "__key", scope: !11111, file: !1851, line: 637, type: !10627)
!11113 = !DILocation(line: 0, scope: !11107)
!11114 = !DILocation(line: 0, scope: !11111)
!11115 = !DILocation(line: 0, scope: !10635, inlinedAt: !11116)
!11116 = distinct !DILocation(line: 637, column: 2, scope: !11111)
!11117 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11118)
!11118 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11116)
!11119 = !DILocation(line: 0, scope: !10644, inlinedAt: !11118)
!11120 = !DILocation(line: 639, column: 4, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11122, file: !1851, line: 638, column: 41)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !1851, line: 638, column: 7)
!11123 = distinct !DILexicalBlock(scope: !11124, file: !1851, line: 637, column: 26)
!11124 = distinct !DILexicalBlock(scope: !11111, file: !1851, line: 637, column: 2)
!11125 = !DILocation(line: 0, scope: !10662, inlinedAt: !11126)
!11126 = distinct !DILocation(line: 637, column: 2, scope: !11124)
!11127 = !DILocation(line: 0, scope: !10670, inlinedAt: !11128)
!11128 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11126)
!11129 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11128)
!11130 = !DILocation(line: 642, column: 1, scope: !11107)
!11131 = distinct !DISubprogram(name: "ready_thread", scope: !1851, file: !1851, line: 617, type: !10593, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11132)
!11132 = !{!11133}
!11133 = !DILocalVariable(name: "thread", arg: 1, scope: !11131, file: !1851, line: 617, type: !1746)
!11134 = !DILocation(line: 0, scope: !11131)
!11135 = !DILocation(line: 626, column: 7, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11131, file: !1851, line: 626, column: 6)
!11137 = !DILocation(line: 626, column: 34, scope: !11136)
!11138 = !DILocation(line: 626, column: 37, scope: !11136)
!11139 = !DILocation(line: 626, column: 6, scope: !11131)
!11140 = !DILocation(line: 0, scope: !10821, inlinedAt: !11141)
!11141 = distinct !DILocation(line: 629, column: 3, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11136, file: !1851, line: 626, column: 64)
!11143 = !DILocation(line: 252, column: 15, scope: !10821, inlinedAt: !11141)
!11144 = !DILocation(line: 252, column: 28, scope: !10821, inlinedAt: !11141)
!11145 = !DILocation(line: 0, scope: !10828, inlinedAt: !11146)
!11146 = distinct !DILocation(line: 254, column: 3, scope: !10832, inlinedAt: !11141)
!11147 = !DILocation(line: 0, scope: !10835, inlinedAt: !11148)
!11148 = distinct !DILocation(line: 229, column: 2, scope: !10828, inlinedAt: !11146)
!11149 = !DILocation(line: 188, column: 2, scope: !10845, inlinedAt: !11148)
!11150 = !DILocation(line: 188, column: 2, scope: !10847, inlinedAt: !11148)
!11151 = !DILocation(line: 0, scope: !10845, inlinedAt: !11148)
!11152 = !DILocation(line: 189, column: 7, scope: !10850, inlinedAt: !11148)
!11153 = !DILocation(line: 189, column: 35, scope: !10850, inlinedAt: !11148)
!11154 = !DILocation(line: 189, column: 7, scope: !10851, inlinedAt: !11148)
!11155 = !DILocation(line: 191, column: 21, scope: !10855, inlinedAt: !11148)
!11156 = !DILocation(line: 190, column: 4, scope: !10855, inlinedAt: !11148)
!11157 = !DILocation(line: 192, column: 4, scope: !10855, inlinedAt: !11148)
!11158 = distinct !{!11158, !11149, !11159}
!11159 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !11148)
!11160 = !DILocation(line: 196, column: 37, scope: !10835, inlinedAt: !11148)
!11161 = !DILocation(line: 196, column: 2, scope: !10835, inlinedAt: !11148)
!11162 = !DILocation(line: 197, column: 1, scope: !10835, inlinedAt: !11148)
!11163 = !DILocation(line: 630, column: 3, scope: !11142)
!11164 = !DILocation(line: 632, column: 2, scope: !11142)
!11165 = !DILocation(line: 633, column: 1, scope: !11131)
!11166 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !9139, file: !9139, line: 120, type: !10753, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11167)
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "thread", arg: 1, scope: !11166, file: !9139, line: 120, type: !1746)
!11169 = !DILocation(line: 0, scope: !11166)
!11170 = !DILocation(line: 122, column: 12, scope: !11166)
!11171 = !DILocation(line: 122, column: 62, scope: !11166)
!11172 = !DILocation(line: 123, column: 4, scope: !11166)
!11173 = !DILocation(line: 122, column: 2, scope: !11166)
!11174 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !1851, file: !1851, line: 644, type: !10593, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11175)
!11175 = !{!11176, !11177, !11179}
!11176 = !DILocalVariable(name: "thread", arg: 1, scope: !11174, file: !1851, line: 644, type: !1746)
!11177 = !DILocalVariable(name: "__i", scope: !11178, file: !1851, line: 646, type: !10627)
!11178 = distinct !DILexicalBlock(scope: !11174, file: !1851, line: 646, column: 2)
!11179 = !DILocalVariable(name: "__key", scope: !11178, file: !1851, line: 646, type: !10627)
!11180 = !DILocation(line: 0, scope: !11174)
!11181 = !DILocation(line: 0, scope: !11178)
!11182 = !DILocation(line: 0, scope: !10635, inlinedAt: !11183)
!11183 = distinct !DILocation(line: 646, column: 2, scope: !11178)
!11184 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11185)
!11185 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11183)
!11186 = !DILocation(line: 0, scope: !10644, inlinedAt: !11185)
!11187 = !DILocation(line: 647, column: 3, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !1851, line: 646, column: 26)
!11189 = distinct !DILexicalBlock(scope: !11178, file: !1851, line: 646, column: 2)
!11190 = !DILocation(line: 0, scope: !10662, inlinedAt: !11191)
!11191 = distinct !DILocation(line: 646, column: 2, scope: !11189)
!11192 = !DILocation(line: 0, scope: !10670, inlinedAt: !11193)
!11193 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11191)
!11194 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11193)
!11195 = !DILocation(line: 649, column: 1, scope: !11174)
!11196 = distinct !DISubprogram(name: "z_sched_start", scope: !1851, file: !1851, line: 651, type: !10593, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11197)
!11197 = !{!11198, !11199}
!11198 = !DILocalVariable(name: "thread", arg: 1, scope: !11196, file: !1851, line: 651, type: !1746)
!11199 = !DILocalVariable(name: "key", scope: !11196, file: !1851, line: 653, type: !10627)
!11200 = !DILocation(line: 0, scope: !11196)
!11201 = !DILocation(line: 0, scope: !10635, inlinedAt: !11202)
!11202 = distinct !DILocation(line: 653, column: 25, scope: !11196)
!11203 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11204)
!11204 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11202)
!11205 = !DILocation(line: 0, scope: !10644, inlinedAt: !11204)
!11206 = !DILocation(line: 655, column: 6, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11196, file: !1851, line: 655, column: 6)
!11208 = !DILocation(line: 655, column: 6, scope: !11196)
!11209 = !DILocation(line: 0, scope: !10662, inlinedAt: !11210)
!11210 = distinct !DILocation(line: 656, column: 3, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11207, file: !1851, line: 655, column: 36)
!11212 = !DILocation(line: 0, scope: !10670, inlinedAt: !11213)
!11213 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11210)
!11214 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11213)
!11215 = !DILocation(line: 657, column: 3, scope: !11211)
!11216 = !DILocation(line: 660, column: 2, scope: !11196)
!11217 = !DILocation(line: 661, column: 2, scope: !11196)
!11218 = !DILocation(line: 662, column: 2, scope: !11196)
!11219 = !DILocation(line: 663, column: 1, scope: !11196)
!11220 = distinct !DISubprogram(name: "z_has_thread_started", scope: !9139, file: !9139, line: 126, type: !10753, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11221)
!11221 = !{!11222}
!11222 = !DILocalVariable(name: "thread", arg: 1, scope: !11220, file: !9139, line: 126, type: !1746)
!11223 = !DILocation(line: 0, scope: !11220)
!11224 = !DILocation(line: 128, column: 23, scope: !11220)
!11225 = !DILocation(line: 128, column: 36, scope: !11220)
!11226 = !DILocation(line: 128, column: 56, scope: !11220)
!11227 = !DILocation(line: 128, column: 2, scope: !11220)
!11228 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !9139, file: !9139, line: 155, type: !10593, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11229)
!11229 = !{!11230}
!11230 = !DILocalVariable(name: "thread", arg: 1, scope: !11228, file: !9139, line: 155, type: !1746)
!11231 = !DILocation(line: 0, scope: !11228)
!11232 = !DILocation(line: 157, column: 15, scope: !11228)
!11233 = !DILocation(line: 157, column: 28, scope: !11228)
!11234 = !DILocation(line: 158, column: 1, scope: !11228)
!11235 = distinct !DISubprogram(name: "z_reschedule", scope: !1851, file: !1851, line: 967, type: !10663, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11236)
!11236 = !{!11237, !11238}
!11237 = !DILocalVariable(name: "lock", arg: 1, scope: !11235, file: !1851, line: 967, type: !10638)
!11238 = !DILocalVariable(name: "key", arg: 2, scope: !11235, file: !1851, line: 967, type: !10627)
!11239 = !DILocation(line: 0, scope: !11235)
!11240 = !DILocation(line: 969, column: 6, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11235, file: !1851, line: 969, column: 6)
!11242 = !DILocation(line: 969, column: 23, scope: !11241)
!11243 = !DILocation(line: 969, column: 26, scope: !11241)
!11244 = !DILocation(line: 969, column: 6, scope: !11235)
!11245 = !DILocalVariable(name: "key", arg: 2, scope: !11246, file: !9243, line: 193, type: !10627)
!11246 = distinct !DISubprogram(name: "z_swap", scope: !9243, file: !9243, line: 193, type: !11247, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11249)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{!103, !10638, !10627}
!11249 = !{!11250, !11245}
!11250 = !DILocalVariable(name: "lock", arg: 1, scope: !11246, file: !9243, line: 193, type: !10638)
!11251 = !DILocation(line: 0, scope: !11246, inlinedAt: !11252)
!11252 = distinct !DILocation(line: 970, column: 3, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11241, file: !1851, line: 969, column: 39)
!11254 = !DILocation(line: 196, column: 9, scope: !11246, inlinedAt: !11252)
!11255 = !DILocation(line: 971, column: 2, scope: !11253)
!11256 = !DILocation(line: 0, scope: !10662, inlinedAt: !11257)
!11257 = distinct !DILocation(line: 972, column: 3, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11241, file: !1851, line: 971, column: 9)
!11259 = !DILocation(line: 0, scope: !10670, inlinedAt: !11260)
!11260 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11257)
!11261 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11260)
!11262 = !DILocation(line: 975, column: 1, scope: !11235)
!11263 = distinct !DISubprogram(name: "resched", scope: !1851, file: !1851, line: 940, type: !11264, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11266)
!11264 = !DISubroutineType(types: !11265)
!11265 = !{!205, !121}
!11266 = !{!11267}
!11267 = !DILocalVariable(name: "key", arg: 1, scope: !11263, file: !1851, line: 940, type: !121)
!11268 = !DILocation(line: 0, scope: !11263)
!11269 = !DILocalVariable(name: "key", arg: 1, scope: !11270, file: !4919, line: 112, type: !32)
!11270 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4919, file: !4919, line: 112, type: !11271, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11273)
!11271 = !DISubroutineType(types: !11272)
!11272 = !{!205, !32}
!11273 = !{!11269}
!11274 = !DILocation(line: 0, scope: !11270, inlinedAt: !11275)
!11275 = distinct !DILocation(line: 946, column: 9, scope: !11263)
!11276 = !DILocation(line: 115, column: 13, scope: !11270, inlinedAt: !11275)
!11277 = !DILocation(line: 946, column: 32, scope: !11263)
!11278 = !DILocation(line: 1031, column: 3, scope: !11279, inlinedAt: !11282)
!11279 = distinct !DISubprogram(name: "__get_IPSR", scope: !5457, file: !5457, line: 1027, type: !6206, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11280)
!11280 = !{!11281}
!11281 = !DILocalVariable(name: "result", scope: !11279, file: !5457, line: 1029, type: !121)
!11282 = distinct !DILocation(line: 48, column: 10, scope: !11283, inlinedAt: !11284)
!11283 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6212, file: !6212, line: 46, type: !6213, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!11284 = distinct !DILocation(line: 946, column: 36, scope: !11263)
!11285 = !{i64 1602696}
!11286 = !DILocation(line: 0, scope: !11279, inlinedAt: !11282)
!11287 = !DILocation(line: 48, column: 9, scope: !11283, inlinedAt: !11284)
!11288 = !DILocation(line: 946, column: 2, scope: !11263)
!11289 = distinct !DISubprogram(name: "need_swap", scope: !1851, file: !1851, line: 953, type: !6213, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11290)
!11290 = !{!11291}
!11291 = !DILocalVariable(name: "new_thread", scope: !11289, file: !1851, line: 959, type: !1746)
!11292 = !DILocation(line: 962, column: 31, scope: !11289)
!11293 = !DILocation(line: 0, scope: !11289)
!11294 = !DILocation(line: 963, column: 23, scope: !11289)
!11295 = !DILocation(line: 963, column: 20, scope: !11289)
!11296 = !DILocation(line: 963, column: 2, scope: !11289)
!11297 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !9243, file: !9243, line: 181, type: !5467, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11298)
!11298 = !{!11299, !11300}
!11299 = !DILocalVariable(name: "key", arg: 1, scope: !11297, file: !9243, line: 181, type: !32)
!11300 = !DILocalVariable(name: "ret", scope: !11297, file: !9243, line: 183, type: !103)
!11301 = !DILocation(line: 0, scope: !11297)
!11302 = !DILocation(line: 185, column: 8, scope: !11297)
!11303 = !DILocation(line: 186, column: 2, scope: !11297)
!11304 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !1851, file: !1851, line: 665, type: !10593, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11305)
!11305 = !{!11306, !11307, !11309}
!11306 = !DILocalVariable(name: "thread", arg: 1, scope: !11304, file: !1851, line: 665, type: !1746)
!11307 = !DILocalVariable(name: "__i", scope: !11308, file: !1851, line: 671, type: !10627)
!11308 = distinct !DILexicalBlock(scope: !11304, file: !1851, line: 671, column: 2)
!11309 = !DILocalVariable(name: "__key", scope: !11308, file: !1851, line: 671, type: !10627)
!11310 = !DILocation(line: 0, scope: !11304)
!11311 = !DILocation(line: 669, column: 8, scope: !11304)
!11312 = !DILocation(line: 0, scope: !11308)
!11313 = !DILocation(line: 0, scope: !10635, inlinedAt: !11314)
!11314 = distinct !DILocation(line: 671, column: 2, scope: !11308)
!11315 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11316)
!11316 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11314)
!11317 = !DILocation(line: 0, scope: !10644, inlinedAt: !11316)
!11318 = !DILocation(line: 672, column: 7, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11320, file: !1851, line: 672, column: 7)
!11320 = distinct !DILexicalBlock(scope: !11321, file: !1851, line: 671, column: 26)
!11321 = distinct !DILexicalBlock(scope: !11308, file: !1851, line: 671, column: 2)
!11322 = !DILocation(line: 672, column: 7, scope: !11320)
!11323 = !DILocation(line: 0, scope: !10804, inlinedAt: !11324)
!11324 = distinct !DILocation(line: 673, column: 4, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11319, file: !1851, line: 672, column: 35)
!11326 = !DILocation(line: 266, column: 15, scope: !10804, inlinedAt: !11324)
!11327 = !DILocation(line: 266, column: 28, scope: !10804, inlinedAt: !11324)
!11328 = !DILocation(line: 0, scope: !10812, inlinedAt: !11329)
!11329 = distinct !DILocation(line: 268, column: 3, scope: !10816, inlinedAt: !11324)
!11330 = !DILocation(line: 234, column: 2, scope: !10812, inlinedAt: !11329)
!11331 = !DILocation(line: 674, column: 3, scope: !11325)
!11332 = !DILocation(line: 675, column: 3, scope: !11320)
!11333 = !DILocation(line: 676, column: 26, scope: !11320)
!11334 = !DILocation(line: 676, column: 23, scope: !11320)
!11335 = !DILocation(line: 676, column: 3, scope: !11320)
!11336 = !DILocation(line: 0, scope: !10662, inlinedAt: !11337)
!11337 = distinct !DILocation(line: 671, column: 2, scope: !11321)
!11338 = !DILocation(line: 0, scope: !10670, inlinedAt: !11339)
!11339 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11337)
!11340 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11339)
!11341 = !DILocation(line: 679, column: 16, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11304, file: !1851, line: 679, column: 6)
!11343 = !DILocation(line: 679, column: 13, scope: !11342)
!11344 = !DILocation(line: 679, column: 6, scope: !11304)
!11345 = !DILocation(line: 680, column: 3, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11342, file: !1851, line: 679, column: 26)
!11347 = !DILocation(line: 681, column: 2, scope: !11346)
!11348 = !DILocation(line: 684, column: 1, scope: !11304)
!11349 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !9531, file: !9531, line: 52, type: !10611, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11350)
!11350 = !{!11351}
!11351 = !DILocalVariable(name: "thread", arg: 1, scope: !11349, file: !9531, line: 52, type: !1746)
!11352 = !DILocation(line: 0, scope: !11349)
!11353 = !DILocation(line: 54, column: 39, scope: !11349)
!11354 = !DILocation(line: 54, column: 9, scope: !11349)
!11355 = !DILocation(line: 54, column: 2, scope: !11349)
!11356 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !9139, file: !9139, line: 141, type: !10593, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11357)
!11357 = !{!11358}
!11358 = !DILocalVariable(name: "thread", arg: 1, scope: !11356, file: !9139, line: 141, type: !1746)
!11359 = !DILocation(line: 0, scope: !11356)
!11360 = !DILocation(line: 143, column: 15, scope: !11356)
!11361 = !DILocation(line: 143, column: 28, scope: !11356)
!11362 = !DILocation(line: 146, column: 1, scope: !11356)
!11363 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !9139, file: !9139, line: 73, type: !873, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!11364 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11365)
!11365 = distinct !DILocation(line: 75, column: 30, scope: !11363)
!11366 = !DILocation(line: 0, scope: !10644, inlinedAt: !11365)
!11367 = !DILocation(line: 75, column: 9, scope: !11363)
!11368 = !DILocation(line: 76, column: 1, scope: !11363)
!11369 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !1851, file: !1851, line: 977, type: !5003, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11370)
!11370 = !{!11371}
!11371 = !DILocalVariable(name: "key", arg: 1, scope: !11369, file: !1851, line: 977, type: !121)
!11372 = !DILocation(line: 0, scope: !11369)
!11373 = !DILocation(line: 979, column: 6, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11369, file: !1851, line: 979, column: 6)
!11375 = !DILocation(line: 979, column: 6, scope: !11369)
!11376 = !DILocation(line: 980, column: 3, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11374, file: !1851, line: 979, column: 20)
!11378 = !DILocation(line: 981, column: 2, scope: !11377)
!11379 = !DILocation(line: 0, scope: !10670, inlinedAt: !11380)
!11380 = distinct !DILocation(line: 982, column: 3, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11374, file: !1851, line: 981, column: 9)
!11382 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11380)
!11383 = !DILocation(line: 985, column: 1, scope: !11369)
!11384 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !1851, file: !1851, line: 695, type: !10593, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11385)
!11385 = !{!11386, !11387}
!11386 = !DILocalVariable(name: "thread", arg: 1, scope: !11384, file: !1851, line: 695, type: !1746)
!11387 = !DILocalVariable(name: "key", scope: !11384, file: !1851, line: 699, type: !10627)
!11388 = !DILocation(line: 0, scope: !11384)
!11389 = !DILocation(line: 0, scope: !10635, inlinedAt: !11390)
!11390 = distinct !DILocation(line: 699, column: 25, scope: !11384)
!11391 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11392)
!11392 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11390)
!11393 = !DILocation(line: 0, scope: !10644, inlinedAt: !11392)
!11394 = !DILocation(line: 702, column: 7, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11384, file: !1851, line: 702, column: 6)
!11396 = !DILocation(line: 702, column: 6, scope: !11384)
!11397 = !DILocation(line: 0, scope: !10662, inlinedAt: !11398)
!11398 = distinct !DILocation(line: 703, column: 3, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !1851, line: 702, column: 38)
!11400 = !DILocation(line: 0, scope: !10670, inlinedAt: !11401)
!11401 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11398)
!11402 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11401)
!11403 = !DILocation(line: 704, column: 3, scope: !11399)
!11404 = !DILocation(line: 707, column: 2, scope: !11384)
!11405 = !DILocation(line: 708, column: 2, scope: !11384)
!11406 = !DILocation(line: 710, column: 2, scope: !11384)
!11407 = !DILocation(line: 713, column: 1, scope: !11384)
!11408 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !9139, file: !9139, line: 96, type: !10753, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11409)
!11409 = !{!11410}
!11410 = !DILocalVariable(name: "thread", arg: 1, scope: !11408, file: !9139, line: 96, type: !1746)
!11411 = !DILocation(line: 0, scope: !11408)
!11412 = !DILocation(line: 98, column: 23, scope: !11408)
!11413 = !DILocation(line: 98, column: 36, scope: !11408)
!11414 = !DILocation(line: 98, column: 57, scope: !11408)
!11415 = !DILocation(line: 98, column: 2, scope: !11408)
!11416 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !9139, file: !9139, line: 148, type: !10593, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11417)
!11417 = !{!11418}
!11418 = !DILocalVariable(name: "thread", arg: 1, scope: !11416, file: !9139, line: 148, type: !1746)
!11419 = !DILocation(line: 0, scope: !11416)
!11420 = !DILocation(line: 150, column: 15, scope: !11416)
!11421 = !DILocation(line: 150, column: 28, scope: !11416)
!11422 = !DILocation(line: 153, column: 1, scope: !11416)
!11423 = distinct !DISubprogram(name: "z_pend_thread", scope: !1851, file: !1851, line: 770, type: !11424, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11430)
!11424 = !DISubroutineType(types: !11425)
!11425 = !{null, !1746, !1777, !11426}
!11426 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !11427)
!11427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !11428)
!11428 = !{!11429}
!11429 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11427, file: !220, line: 66, baseType: !219, size: 64)
!11430 = !{!11431, !11432, !11433, !11434, !11436}
!11431 = !DILocalVariable(name: "thread", arg: 1, scope: !11423, file: !1851, line: 770, type: !1746)
!11432 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11423, file: !1851, line: 770, type: !1777)
!11433 = !DILocalVariable(name: "timeout", arg: 3, scope: !11423, file: !1851, line: 771, type: !11426)
!11434 = !DILocalVariable(name: "__i", scope: !11435, file: !1851, line: 774, type: !10627)
!11435 = distinct !DILexicalBlock(scope: !11423, file: !1851, line: 774, column: 2)
!11436 = !DILocalVariable(name: "__key", scope: !11435, file: !1851, line: 774, type: !10627)
!11437 = !DILocation(line: 0, scope: !11423)
!11438 = !DILocation(line: 0, scope: !11435)
!11439 = !DILocation(line: 0, scope: !10635, inlinedAt: !11440)
!11440 = distinct !DILocation(line: 774, column: 2, scope: !11435)
!11441 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11442)
!11442 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11440)
!11443 = !DILocation(line: 0, scope: !10644, inlinedAt: !11442)
!11444 = !DILocation(line: 775, column: 3, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !1851, line: 774, column: 26)
!11446 = distinct !DILexicalBlock(scope: !11435, file: !1851, line: 774, column: 2)
!11447 = !DILocation(line: 0, scope: !10662, inlinedAt: !11448)
!11448 = distinct !DILocation(line: 774, column: 2, scope: !11446)
!11449 = !DILocation(line: 0, scope: !10670, inlinedAt: !11450)
!11450 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11448)
!11451 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11450)
!11452 = !DILocation(line: 777, column: 1, scope: !11423)
!11453 = distinct !DISubprogram(name: "pend_locked", scope: !1851, file: !1851, line: 760, type: !11424, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11454)
!11454 = !{!11455, !11456, !11457}
!11455 = !DILocalVariable(name: "thread", arg: 1, scope: !11453, file: !1851, line: 760, type: !1746)
!11456 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11453, file: !1851, line: 760, type: !1777)
!11457 = !DILocalVariable(name: "timeout", arg: 3, scope: !11453, file: !1851, line: 761, type: !11426)
!11458 = !DILocation(line: 0, scope: !11453)
!11459 = !DILocation(line: 766, column: 2, scope: !11453)
!11460 = !DILocation(line: 767, column: 2, scope: !11453)
!11461 = !DILocation(line: 768, column: 1, scope: !11453)
!11462 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !1851, file: !1851, line: 740, type: !11463, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11465)
!11463 = !DISubroutineType(types: !11464)
!11464 = !{null, !1746, !1777}
!11465 = !{!11466, !11467}
!11466 = !DILocalVariable(name: "thread", arg: 1, scope: !11462, file: !1851, line: 740, type: !1746)
!11467 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11462, file: !1851, line: 740, type: !1777)
!11468 = !DILocation(line: 0, scope: !11462)
!11469 = !DILocation(line: 742, column: 2, scope: !11462)
!11470 = !DILocation(line: 743, column: 2, scope: !11462)
!11471 = !DILocation(line: 747, column: 13, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11462, file: !1851, line: 747, column: 6)
!11473 = !DILocation(line: 747, column: 6, scope: !11462)
!11474 = !DILocation(line: 748, column: 16, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11472, file: !1851, line: 747, column: 22)
!11476 = !DILocation(line: 748, column: 26, scope: !11475)
!11477 = !DILocation(line: 749, column: 28, scope: !11475)
!11478 = !DILocation(line: 0, scope: !10835, inlinedAt: !11479)
!11479 = distinct !DILocation(line: 749, column: 3, scope: !11475)
!11480 = !DILocation(line: 188, column: 2, scope: !10845, inlinedAt: !11479)
!11481 = !DILocation(line: 188, column: 2, scope: !10847, inlinedAt: !11479)
!11482 = !DILocation(line: 0, scope: !10845, inlinedAt: !11479)
!11483 = !DILocation(line: 189, column: 7, scope: !10850, inlinedAt: !11479)
!11484 = !DILocation(line: 189, column: 35, scope: !10850, inlinedAt: !11479)
!11485 = !DILocation(line: 189, column: 7, scope: !10851, inlinedAt: !11479)
!11486 = !DILocation(line: 191, column: 21, scope: !10855, inlinedAt: !11479)
!11487 = !DILocation(line: 190, column: 4, scope: !10855, inlinedAt: !11479)
!11488 = !DILocation(line: 192, column: 4, scope: !10855, inlinedAt: !11479)
!11489 = distinct !{!11489, !11480, !11490}
!11490 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !11479)
!11491 = !DILocation(line: 196, column: 37, scope: !10835, inlinedAt: !11479)
!11492 = !DILocation(line: 196, column: 2, scope: !10835, inlinedAt: !11479)
!11493 = !DILocation(line: 197, column: 1, scope: !10835, inlinedAt: !11479)
!11494 = !DILocation(line: 751, column: 1, scope: !11462)
!11495 = distinct !DISubprogram(name: "add_thread_timeout", scope: !1851, file: !1851, line: 753, type: !11496, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11498)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !1746, !11426}
!11498 = !{!11499, !11500}
!11499 = !DILocalVariable(name: "thread", arg: 1, scope: !11495, file: !1851, line: 753, type: !1746)
!11500 = !DILocalVariable(name: "timeout", arg: 2, scope: !11495, file: !1851, line: 753, type: !11426)
!11501 = !DILocation(line: 0, scope: !11495)
!11502 = !DILocation(line: 755, column: 7, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11495, file: !1851, line: 755, column: 6)
!11504 = !DILocation(line: 755, column: 6, scope: !11495)
!11505 = !DILocation(line: 756, column: 3, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11503, file: !1851, line: 755, column: 41)
!11507 = !DILocation(line: 757, column: 2, scope: !11506)
!11508 = !DILocation(line: 758, column: 1, scope: !11495)
!11509 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !9531, file: !9531, line: 47, type: !11496, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11510)
!11510 = !{!11511, !11512}
!11511 = !DILocalVariable(name: "thread", arg: 1, scope: !11509, file: !9531, line: 47, type: !1746)
!11512 = !DILocalVariable(name: "ticks", arg: 2, scope: !11509, file: !9531, line: 47, type: !11426)
!11513 = !DILocation(line: 0, scope: !11509)
!11514 = !DILocation(line: 49, column: 30, scope: !11509)
!11515 = !DILocation(line: 49, column: 2, scope: !11509)
!11516 = !DILocation(line: 50, column: 1, scope: !11509)
!11517 = distinct !DISubprogram(name: "z_thread_timeout", scope: !1851, file: !1851, line: 795, type: !1803, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11518)
!11518 = !{!11519, !11520, !11521, !11523, !11524}
!11519 = !DILocalVariable(name: "timeout", arg: 1, scope: !11517, file: !1851, line: 795, type: !1805)
!11520 = !DILocalVariable(name: "thread", scope: !11517, file: !1851, line: 797, type: !1746)
!11521 = !DILocalVariable(name: "__i", scope: !11522, file: !1851, line: 800, type: !10627)
!11522 = distinct !DILexicalBlock(scope: !11517, file: !1851, line: 800, column: 2)
!11523 = !DILocalVariable(name: "__key", scope: !11522, file: !1851, line: 800, type: !10627)
!11524 = !DILocalVariable(name: "killed", scope: !11525, file: !1851, line: 801, type: !205)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !1851, line: 800, column: 26)
!11526 = distinct !DILexicalBlock(scope: !11522, file: !1851, line: 800, column: 2)
!11527 = !DILocation(line: 0, scope: !11517)
!11528 = !DILocation(line: 797, column: 28, scope: !11517)
!11529 = !DILocation(line: 0, scope: !11522)
!11530 = !DILocation(line: 0, scope: !10635, inlinedAt: !11531)
!11531 = distinct !DILocation(line: 800, column: 2, scope: !11522)
!11532 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11533)
!11533 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11531)
!11534 = !DILocation(line: 0, scope: !10644, inlinedAt: !11533)
!11535 = !DILocation(line: 801, column: 27, scope: !11525)
!11536 = !DILocation(line: 801, column: 32, scope: !11525)
!11537 = !DILocation(line: 801, column: 61, scope: !11525)
!11538 = !DILocation(line: 0, scope: !11525)
!11539 = !DILocation(line: 804, column: 7, scope: !11525)
!11540 = !DILocation(line: 805, column: 21, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !1851, line: 805, column: 8)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !1851, line: 804, column: 16)
!11543 = distinct !DILexicalBlock(scope: !11525, file: !1851, line: 804, column: 7)
!11544 = !DILocation(line: 805, column: 31, scope: !11541)
!11545 = !DILocation(line: 805, column: 8, scope: !11542)
!11546 = !DILocation(line: 806, column: 5, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11541, file: !1851, line: 805, column: 40)
!11548 = !DILocation(line: 807, column: 4, scope: !11547)
!11549 = !DILocation(line: 808, column: 4, scope: !11542)
!11550 = !DILocation(line: 809, column: 4, scope: !11542)
!11551 = !DILocation(line: 810, column: 4, scope: !11542)
!11552 = !DILocation(line: 811, column: 3, scope: !11542)
!11553 = !DILocation(line: 0, scope: !10662, inlinedAt: !11554)
!11554 = distinct !DILocation(line: 800, column: 2, scope: !11526)
!11555 = !DILocation(line: 0, scope: !10670, inlinedAt: !11556)
!11556 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11554)
!11557 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11556)
!11558 = !DILocation(line: 813, column: 1, scope: !11517)
!11559 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !1851, file: !1851, line: 779, type: !10593, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11560)
!11560 = !{!11561}
!11561 = !DILocalVariable(name: "thread", arg: 1, scope: !11559, file: !1851, line: 779, type: !1746)
!11562 = !DILocation(line: 0, scope: !11559)
!11563 = !DILocation(line: 781, column: 2, scope: !11559)
!11564 = !DILocation(line: 782, column: 2, scope: !11559)
!11565 = !DILocation(line: 783, column: 15, scope: !11559)
!11566 = !DILocation(line: 783, column: 25, scope: !11559)
!11567 = !DILocation(line: 784, column: 1, scope: !11559)
!11568 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !9139, file: !9139, line: 165, type: !10593, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11569)
!11569 = !{!11570}
!11570 = !DILocalVariable(name: "thread", arg: 1, scope: !11568, file: !9139, line: 165, type: !1746)
!11571 = !DILocation(line: 0, scope: !11568)
!11572 = !DILocation(line: 167, column: 15, scope: !11568)
!11573 = !DILocation(line: 167, column: 28, scope: !11568)
!11574 = !DILocation(line: 168, column: 1, scope: !11568)
!11575 = distinct !DISubprogram(name: "unready_thread", scope: !1851, file: !1851, line: 731, type: !10593, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11576)
!11576 = !{!11577}
!11577 = !DILocalVariable(name: "thread", arg: 1, scope: !11575, file: !1851, line: 731, type: !1746)
!11578 = !DILocation(line: 0, scope: !11575)
!11579 = !DILocation(line: 733, column: 6, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11575, file: !1851, line: 733, column: 6)
!11581 = !DILocation(line: 733, column: 6, scope: !11575)
!11582 = !DILocation(line: 0, scope: !10804, inlinedAt: !11583)
!11583 = distinct !DILocation(line: 734, column: 3, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11580, file: !1851, line: 733, column: 34)
!11585 = !DILocation(line: 266, column: 15, scope: !10804, inlinedAt: !11583)
!11586 = !DILocation(line: 266, column: 28, scope: !10804, inlinedAt: !11583)
!11587 = !DILocation(line: 0, scope: !10812, inlinedAt: !11588)
!11588 = distinct !DILocation(line: 268, column: 3, scope: !10816, inlinedAt: !11583)
!11589 = !DILocation(line: 234, column: 2, scope: !10812, inlinedAt: !11588)
!11590 = !DILocation(line: 735, column: 2, scope: !11584)
!11591 = !DILocation(line: 736, column: 25, scope: !11575)
!11592 = !DILocation(line: 736, column: 22, scope: !11575)
!11593 = !DILocation(line: 736, column: 2, scope: !11575)
!11594 = !DILocation(line: 737, column: 1, scope: !11575)
!11595 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !9139, file: !9139, line: 160, type: !10593, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11596)
!11596 = !{!11597}
!11597 = !DILocalVariable(name: "thread", arg: 1, scope: !11595, file: !9139, line: 160, type: !1746)
!11598 = !DILocation(line: 0, scope: !11595)
!11599 = !DILocation(line: 162, column: 15, scope: !11595)
!11600 = !DILocation(line: 162, column: 28, scope: !11595)
!11601 = !DILocation(line: 163, column: 1, scope: !11595)
!11602 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !1851, file: !1851, line: 786, type: !10593, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11603)
!11603 = !{!11604, !11605, !11607}
!11604 = !DILocalVariable(name: "thread", arg: 1, scope: !11602, file: !1851, line: 786, type: !1746)
!11605 = !DILocalVariable(name: "__i", scope: !11606, file: !1851, line: 788, type: !10627)
!11606 = distinct !DILexicalBlock(scope: !11602, file: !1851, line: 788, column: 2)
!11607 = !DILocalVariable(name: "__key", scope: !11606, file: !1851, line: 788, type: !10627)
!11608 = !DILocation(line: 0, scope: !11602)
!11609 = !DILocation(line: 0, scope: !11606)
!11610 = !DILocation(line: 0, scope: !10635, inlinedAt: !11611)
!11611 = distinct !DILocation(line: 788, column: 2, scope: !11606)
!11612 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11613)
!11613 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11611)
!11614 = !DILocation(line: 0, scope: !10644, inlinedAt: !11613)
!11615 = !DILocation(line: 789, column: 3, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !1851, line: 788, column: 26)
!11617 = distinct !DILexicalBlock(scope: !11606, file: !1851, line: 788, column: 2)
!11618 = !DILocation(line: 0, scope: !10662, inlinedAt: !11619)
!11619 = distinct !DILocation(line: 788, column: 2, scope: !11617)
!11620 = !DILocation(line: 0, scope: !10670, inlinedAt: !11621)
!11621 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11619)
!11622 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11621)
!11623 = !DILocation(line: 791, column: 1, scope: !11602)
!11624 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !1851, file: !1851, line: 816, type: !11625, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11627)
!11625 = !DISubroutineType(types: !11626)
!11626 = !{!103, !121, !1777, !11426}
!11627 = !{!11628, !11629, !11630, !11631, !11632, !11634}
!11628 = !DILocalVariable(name: "key", arg: 1, scope: !11624, file: !1851, line: 816, type: !121)
!11629 = !DILocalVariable(name: "wait_q", arg: 2, scope: !11624, file: !1851, line: 816, type: !1777)
!11630 = !DILocalVariable(name: "timeout", arg: 3, scope: !11624, file: !1851, line: 816, type: !11426)
!11631 = !DILocalVariable(name: "ret", scope: !11624, file: !1851, line: 828, type: !103)
!11632 = !DILocalVariable(name: "__i", scope: !11633, file: !1851, line: 829, type: !10627)
!11633 = distinct !DILexicalBlock(scope: !11624, file: !1851, line: 829, column: 2)
!11634 = !DILocalVariable(name: "__key", scope: !11633, file: !1851, line: 829, type: !10627)
!11635 = !DILocation(line: 0, scope: !11624)
!11636 = !DILocation(line: 823, column: 14, scope: !11624)
!11637 = !DILocation(line: 823, column: 2, scope: !11624)
!11638 = !DILocation(line: 826, column: 20, scope: !11624)
!11639 = !DILocation(line: 826, column: 18, scope: !11624)
!11640 = !DILocation(line: 828, column: 12, scope: !11624)
!11641 = !DILocation(line: 0, scope: !11633)
!11642 = !DILocation(line: 0, scope: !10635, inlinedAt: !11643)
!11643 = distinct !DILocation(line: 829, column: 2, scope: !11633)
!11644 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11645)
!11645 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11643)
!11646 = !DILocation(line: 0, scope: !10644, inlinedAt: !11645)
!11647 = !DILocation(line: 830, column: 7, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !1851, line: 830, column: 7)
!11649 = distinct !DILexicalBlock(scope: !11650, file: !1851, line: 829, column: 26)
!11650 = distinct !DILexicalBlock(scope: !11633, file: !1851, line: 829, column: 2)
!11651 = !DILocation(line: 830, column: 26, scope: !11648)
!11652 = !DILocation(line: 830, column: 23, scope: !11648)
!11653 = !DILocation(line: 830, column: 7, scope: !11649)
!11654 = !DILocation(line: 831, column: 20, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11648, file: !1851, line: 830, column: 36)
!11656 = !DILocation(line: 832, column: 3, scope: !11655)
!11657 = !DILocation(line: 0, scope: !10662, inlinedAt: !11658)
!11658 = distinct !DILocation(line: 829, column: 2, scope: !11650)
!11659 = !DILocation(line: 0, scope: !10670, inlinedAt: !11660)
!11660 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11658)
!11661 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11660)
!11662 = !DILocation(line: 834, column: 2, scope: !11624)
!11663 = distinct !DISubprogram(name: "z_pend_curr", scope: !1851, file: !1851, line: 840, type: !11664, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11666)
!11664 = !DISubroutineType(types: !11665)
!11665 = !{!103, !10638, !10627, !1777, !11426}
!11666 = !{!11667, !11668, !11669, !11670}
!11667 = !DILocalVariable(name: "lock", arg: 1, scope: !11663, file: !1851, line: 840, type: !10638)
!11668 = !DILocalVariable(name: "key", arg: 2, scope: !11663, file: !1851, line: 840, type: !10627)
!11669 = !DILocalVariable(name: "wait_q", arg: 3, scope: !11663, file: !1851, line: 841, type: !1777)
!11670 = !DILocalVariable(name: "timeout", arg: 4, scope: !11663, file: !1851, line: 841, type: !11426)
!11671 = !DILocation(line: 0, scope: !11663)
!11672 = !DILocation(line: 844, column: 20, scope: !11663)
!11673 = !DILocation(line: 844, column: 18, scope: !11663)
!11674 = !DILocation(line: 0, scope: !10635, inlinedAt: !11675)
!11675 = distinct !DILocation(line: 856, column: 9, scope: !11663)
!11676 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11677)
!11677 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11675)
!11678 = !DILocation(line: 0, scope: !10644, inlinedAt: !11677)
!11679 = !DILocation(line: 857, column: 14, scope: !11663)
!11680 = !DILocation(line: 857, column: 2, scope: !11663)
!11681 = !DILocation(line: 0, scope: !11246, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 859, column: 9, scope: !11663)
!11683 = !DILocation(line: 196, column: 9, scope: !11246, inlinedAt: !11682)
!11684 = !DILocation(line: 859, column: 2, scope: !11663)
!11685 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !1851, file: !1851, line: 862, type: !11686, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11688)
!11686 = !DISubroutineType(types: !11687)
!11687 = !{!1746, !1777}
!11688 = !{!11689, !11690, !11691, !11693}
!11689 = !DILocalVariable(name: "wait_q", arg: 1, scope: !11685, file: !1851, line: 862, type: !1777)
!11690 = !DILocalVariable(name: "thread", scope: !11685, file: !1851, line: 864, type: !1746)
!11691 = !DILocalVariable(name: "__i", scope: !11692, file: !1851, line: 866, type: !10627)
!11692 = distinct !DILexicalBlock(scope: !11685, file: !1851, line: 866, column: 2)
!11693 = !DILocalVariable(name: "__key", scope: !11692, file: !1851, line: 866, type: !10627)
!11694 = !DILocation(line: 0, scope: !11685)
!11695 = !DILocation(line: 0, scope: !11692)
!11696 = !DILocation(line: 0, scope: !10635, inlinedAt: !11697)
!11697 = distinct !DILocation(line: 866, column: 2, scope: !11692)
!11698 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11699)
!11699 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11697)
!11700 = !DILocation(line: 0, scope: !10644, inlinedAt: !11699)
!11701 = !DILocation(line: 867, column: 12, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !1851, line: 866, column: 26)
!11703 = distinct !DILexicalBlock(scope: !11692, file: !1851, line: 866, column: 2)
!11704 = !DILocation(line: 869, column: 14, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11702, file: !1851, line: 869, column: 7)
!11706 = !DILocation(line: 869, column: 7, scope: !11702)
!11707 = !DILocation(line: 870, column: 4, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11705, file: !1851, line: 869, column: 23)
!11709 = !DILocation(line: 871, column: 3, scope: !11708)
!11710 = !DILocation(line: 0, scope: !10662, inlinedAt: !11711)
!11711 = distinct !DILocation(line: 866, column: 2, scope: !11703)
!11712 = !DILocation(line: 0, scope: !10670, inlinedAt: !11713)
!11713 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11711)
!11714 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11713)
!11715 = !DILocation(line: 874, column: 2, scope: !11685)
!11716 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !1851, file: !1851, line: 877, type: !11686, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11717)
!11717 = !{!11718, !11719, !11720, !11722}
!11718 = !DILocalVariable(name: "wait_q", arg: 1, scope: !11716, file: !1851, line: 877, type: !1777)
!11719 = !DILocalVariable(name: "thread", scope: !11716, file: !1851, line: 879, type: !1746)
!11720 = !DILocalVariable(name: "__i", scope: !11721, file: !1851, line: 881, type: !10627)
!11721 = distinct !DILexicalBlock(scope: !11716, file: !1851, line: 881, column: 2)
!11722 = !DILocalVariable(name: "__key", scope: !11721, file: !1851, line: 881, type: !10627)
!11723 = !DILocation(line: 0, scope: !11716)
!11724 = !DILocation(line: 0, scope: !11721)
!11725 = !DILocation(line: 0, scope: !10635, inlinedAt: !11726)
!11726 = distinct !DILocation(line: 881, column: 2, scope: !11721)
!11727 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11728)
!11728 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11726)
!11729 = !DILocation(line: 0, scope: !10644, inlinedAt: !11728)
!11730 = !DILocation(line: 882, column: 12, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11732, file: !1851, line: 881, column: 26)
!11732 = distinct !DILexicalBlock(scope: !11721, file: !1851, line: 881, column: 2)
!11733 = !DILocation(line: 884, column: 14, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11731, file: !1851, line: 884, column: 7)
!11735 = !DILocation(line: 884, column: 7, scope: !11731)
!11736 = !DILocation(line: 885, column: 4, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11734, file: !1851, line: 884, column: 23)
!11738 = !DILocation(line: 886, column: 10, scope: !11737)
!11739 = !DILocation(line: 887, column: 3, scope: !11737)
!11740 = !DILocation(line: 0, scope: !10662, inlinedAt: !11741)
!11741 = distinct !DILocation(line: 881, column: 2, scope: !11732)
!11742 = !DILocation(line: 0, scope: !10670, inlinedAt: !11743)
!11743 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11741)
!11744 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11743)
!11745 = !DILocation(line: 890, column: 2, scope: !11716)
!11746 = distinct !DISubprogram(name: "z_unpend_thread", scope: !1851, file: !1851, line: 893, type: !10593, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11747)
!11747 = !{!11748}
!11748 = !DILocalVariable(name: "thread", arg: 1, scope: !11746, file: !1851, line: 893, type: !1746)
!11749 = !DILocation(line: 0, scope: !11746)
!11750 = !DILocation(line: 0, scope: !11602, inlinedAt: !11751)
!11751 = distinct !DILocation(line: 895, column: 2, scope: !11746)
!11752 = !DILocation(line: 0, scope: !11606, inlinedAt: !11751)
!11753 = !DILocation(line: 0, scope: !10635, inlinedAt: !11754)
!11754 = distinct !DILocation(line: 788, column: 2, scope: !11606, inlinedAt: !11751)
!11755 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11756)
!11756 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11754)
!11757 = !DILocation(line: 0, scope: !10644, inlinedAt: !11756)
!11758 = !DILocation(line: 789, column: 3, scope: !11616, inlinedAt: !11751)
!11759 = !DILocation(line: 0, scope: !10662, inlinedAt: !11760)
!11760 = distinct !DILocation(line: 788, column: 2, scope: !11617, inlinedAt: !11751)
!11761 = !DILocation(line: 0, scope: !10670, inlinedAt: !11762)
!11762 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11760)
!11763 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11762)
!11764 = !DILocation(line: 896, column: 8, scope: !11746)
!11765 = !DILocation(line: 897, column: 1, scope: !11746)
!11766 = distinct !DISubprogram(name: "z_set_prio", scope: !1851, file: !1851, line: 902, type: !10955, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11767)
!11767 = !{!11768, !11769, !11770, !11771, !11773}
!11768 = !DILocalVariable(name: "thread", arg: 1, scope: !11766, file: !1851, line: 902, type: !1746)
!11769 = !DILocalVariable(name: "prio", arg: 2, scope: !11766, file: !1851, line: 902, type: !103)
!11770 = !DILocalVariable(name: "need_sched", scope: !11766, file: !1851, line: 904, type: !205)
!11771 = !DILocalVariable(name: "__i", scope: !11772, file: !1851, line: 906, type: !10627)
!11772 = distinct !DILexicalBlock(scope: !11766, file: !1851, line: 906, column: 2)
!11773 = !DILocalVariable(name: "__key", scope: !11772, file: !1851, line: 906, type: !10627)
!11774 = !DILocation(line: 0, scope: !11766)
!11775 = !DILocation(line: 0, scope: !11772)
!11776 = !DILocation(line: 0, scope: !10635, inlinedAt: !11777)
!11777 = distinct !DILocation(line: 906, column: 2, scope: !11772)
!11778 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11779)
!11779 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11777)
!11780 = !DILocation(line: 0, scope: !10644, inlinedAt: !11779)
!11781 = !DILocation(line: 907, column: 16, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !1851, line: 906, column: 26)
!11783 = distinct !DILexicalBlock(scope: !11772, file: !1851, line: 906, column: 2)
!11784 = !DILocation(line: 909, column: 7, scope: !11782)
!11785 = !DILocation(line: 0, scope: !10804, inlinedAt: !11786)
!11786 = distinct !DILocation(line: 912, column: 5, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !1851, line: 911, column: 63)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !1851, line: 911, column: 8)
!11789 = distinct !DILexicalBlock(scope: !11790, file: !1851, line: 909, column: 19)
!11790 = distinct !DILexicalBlock(scope: !11782, file: !1851, line: 909, column: 7)
!11791 = !DILocation(line: 266, column: 28, scope: !10804, inlinedAt: !11786)
!11792 = !DILocation(line: 0, scope: !10812, inlinedAt: !11793)
!11793 = distinct !DILocation(line: 268, column: 3, scope: !10816, inlinedAt: !11786)
!11794 = !DILocation(line: 234, column: 2, scope: !10812, inlinedAt: !11793)
!11795 = !DILocation(line: 913, column: 23, scope: !11787)
!11796 = !DILocation(line: 0, scope: !10821, inlinedAt: !11797)
!11797 = distinct !DILocation(line: 914, column: 5, scope: !11787)
!11798 = !DILocation(line: 252, column: 28, scope: !10821, inlinedAt: !11797)
!11799 = !DILocation(line: 0, scope: !10828, inlinedAt: !11800)
!11800 = distinct !DILocation(line: 254, column: 3, scope: !10832, inlinedAt: !11797)
!11801 = !DILocation(line: 0, scope: !10835, inlinedAt: !11802)
!11802 = distinct !DILocation(line: 229, column: 2, scope: !10828, inlinedAt: !11800)
!11803 = !DILocation(line: 188, column: 2, scope: !10845, inlinedAt: !11802)
!11804 = !DILocation(line: 188, column: 2, scope: !10847, inlinedAt: !11802)
!11805 = !DILocation(line: 0, scope: !10845, inlinedAt: !11802)
!11806 = !DILocation(line: 189, column: 7, scope: !10850, inlinedAt: !11802)
!11807 = !DILocation(line: 189, column: 35, scope: !10850, inlinedAt: !11802)
!11808 = !DILocation(line: 189, column: 7, scope: !10851, inlinedAt: !11802)
!11809 = !DILocation(line: 190, column: 4, scope: !10855, inlinedAt: !11802)
!11810 = !DILocation(line: 192, column: 4, scope: !10855, inlinedAt: !11802)
!11811 = distinct !{!11811, !11803, !11812}
!11812 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !11802)
!11813 = !DILocation(line: 196, column: 2, scope: !10835, inlinedAt: !11802)
!11814 = !DILocation(line: 197, column: 1, scope: !10835, inlinedAt: !11802)
!11815 = !DILocation(line: 918, column: 4, scope: !11789)
!11816 = !DILocation(line: 919, column: 3, scope: !11789)
!11817 = !DILocation(line: 920, column: 22, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11790, file: !1851, line: 919, column: 10)
!11819 = !DILocation(line: 0, scope: !10662, inlinedAt: !11820)
!11820 = distinct !DILocation(line: 906, column: 2, scope: !11783)
!11821 = !DILocation(line: 0, scope: !10670, inlinedAt: !11822)
!11822 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11820)
!11823 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11822)
!11824 = !DILocation(line: 926, column: 2, scope: !11766)
!11825 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !1851, file: !1851, line: 929, type: !11826, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11828)
!11826 = !DISubroutineType(types: !11827)
!11827 = !{null, !1746, !103}
!11828 = !{!11829, !11830, !11831}
!11829 = !DILocalVariable(name: "thread", arg: 1, scope: !11825, file: !1851, line: 929, type: !1746)
!11830 = !DILocalVariable(name: "prio", arg: 2, scope: !11825, file: !1851, line: 929, type: !103)
!11831 = !DILocalVariable(name: "need_sched", scope: !11825, file: !1851, line: 931, type: !205)
!11832 = !DILocation(line: 0, scope: !11825)
!11833 = !DILocation(line: 931, column: 20, scope: !11825)
!11834 = !DILocation(line: 935, column: 17, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11825, file: !1851, line: 935, column: 6)
!11836 = !DILocation(line: 935, column: 20, scope: !11835)
!11837 = !DILocation(line: 935, column: 35, scope: !11835)
!11838 = !DILocation(line: 935, column: 48, scope: !11835)
!11839 = !DILocation(line: 935, column: 6, scope: !11825)
!11840 = !DILocation(line: 936, column: 3, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11835, file: !1851, line: 935, column: 55)
!11842 = !DILocation(line: 937, column: 2, scope: !11841)
!11843 = !DILocation(line: 938, column: 1, scope: !11825)
!11844 = distinct !DISubprogram(name: "k_sched_lock", scope: !1851, file: !1851, line: 987, type: !873, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11845)
!11845 = !{!11846, !11848}
!11846 = !DILocalVariable(name: "__i", scope: !11847, file: !1851, line: 989, type: !10627)
!11847 = distinct !DILexicalBlock(scope: !11844, file: !1851, line: 989, column: 2)
!11848 = !DILocalVariable(name: "__key", scope: !11847, file: !1851, line: 989, type: !10627)
!11849 = !DILocation(line: 0, scope: !11847)
!11850 = !DILocation(line: 0, scope: !10635, inlinedAt: !11851)
!11851 = distinct !DILocation(line: 989, column: 2, scope: !11847)
!11852 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11851)
!11854 = !DILocation(line: 0, scope: !10644, inlinedAt: !11853)
!11855 = !DILocation(line: 992, column: 3, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !1851, line: 989, column: 26)
!11857 = distinct !DILexicalBlock(scope: !11847, file: !1851, line: 989, column: 2)
!11858 = !DILocation(line: 0, scope: !10662, inlinedAt: !11859)
!11859 = distinct !DILocation(line: 989, column: 2, scope: !11857)
!11860 = !DILocation(line: 0, scope: !10670, inlinedAt: !11861)
!11861 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11859)
!11862 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11861)
!11863 = !DILocation(line: 994, column: 1, scope: !11844)
!11864 = distinct !DISubprogram(name: "z_sched_lock", scope: !9139, file: !9139, line: 251, type: !873, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!11865 = !DILocation(line: 256, column: 4, scope: !11864)
!11866 = !DILocation(line: 256, column: 19, scope: !11864)
!11867 = !DILocation(line: 256, column: 2, scope: !11864)
!11868 = !DILocation(line: 258, column: 2, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11864, file: !9139, line: 258, column: 2)
!11870 = !{i64 2151213969}
!11871 = !DILocation(line: 259, column: 1, scope: !11864)
!11872 = distinct !DISubprogram(name: "k_sched_unlock", scope: !1851, file: !1851, line: 996, type: !873, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11873)
!11873 = !{!11874, !11876}
!11874 = !DILocalVariable(name: "__i", scope: !11875, file: !1851, line: 998, type: !10627)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !1851, line: 998, column: 2)
!11876 = !DILocalVariable(name: "__key", scope: !11875, file: !1851, line: 998, type: !10627)
!11877 = !DILocation(line: 0, scope: !11875)
!11878 = !DILocation(line: 0, scope: !10635, inlinedAt: !11879)
!11879 = distinct !DILocation(line: 998, column: 2, scope: !11875)
!11880 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !11881)
!11881 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !11879)
!11882 = !DILocation(line: 0, scope: !10644, inlinedAt: !11881)
!11883 = !DILocation(line: 1002, column: 5, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11885, file: !1851, line: 998, column: 26)
!11885 = distinct !DILexicalBlock(scope: !11875, file: !1851, line: 998, column: 2)
!11886 = !DILocation(line: 1002, column: 20, scope: !11884)
!11887 = !DILocation(line: 1002, column: 3, scope: !11884)
!11888 = !DILocation(line: 1003, column: 3, scope: !11884)
!11889 = !DILocation(line: 0, scope: !10662, inlinedAt: !11890)
!11890 = distinct !DILocation(line: 998, column: 2, scope: !11885)
!11891 = !DILocation(line: 0, scope: !10670, inlinedAt: !11892)
!11892 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !11890)
!11893 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !11892)
!11894 = !DILocation(line: 1011, column: 2, scope: !11872)
!11895 = !DILocation(line: 1012, column: 1, scope: !11872)
!11896 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !1851, file: !1851, line: 1014, type: !10943, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!11897 = !DILocation(line: 1028, column: 25, scope: !11896)
!11898 = !DILocation(line: 1028, column: 2, scope: !11896)
!11899 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !1851, file: !1851, line: 1155, type: !11900, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11902)
!11900 = !DISubroutineType(types: !11901)
!11901 = !{!205, !1775, !1775}
!11902 = !{!11903, !11904, !11905, !11906, !11907}
!11903 = !DILocalVariable(name: "a", arg: 1, scope: !11899, file: !1851, line: 1155, type: !1775)
!11904 = !DILocalVariable(name: "b", arg: 2, scope: !11899, file: !1851, line: 1155, type: !1775)
!11905 = !DILocalVariable(name: "thread_a", scope: !11899, file: !1851, line: 1157, type: !1746)
!11906 = !DILocalVariable(name: "thread_b", scope: !11899, file: !1851, line: 1157, type: !1746)
!11907 = !DILocalVariable(name: "cmp", scope: !11899, file: !1851, line: 1158, type: !878)
!11908 = !DILocation(line: 0, scope: !11899)
!11909 = !DILocation(line: 1160, column: 13, scope: !11899)
!11910 = !DILocation(line: 1161, column: 13, scope: !11899)
!11911 = !DILocation(line: 1163, column: 8, scope: !11899)
!11912 = !DILocation(line: 1165, column: 10, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11899, file: !1851, line: 1165, column: 6)
!11914 = !DILocation(line: 1165, column: 6, scope: !11899)
!11915 = !DILocation(line: 1167, column: 17, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11913, file: !1851, line: 1167, column: 13)
!11917 = !DILocation(line: 1167, column: 13, scope: !11913)
!11918 = !DILocation(line: 1170, column: 25, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11916, file: !1851, line: 1169, column: 9)
!11920 = !DILocation(line: 1170, column: 52, scope: !11919)
!11921 = !DILocation(line: 1170, column: 35, scope: !11919)
!11922 = !DILocation(line: 1170, column: 3, scope: !11919)
!11923 = !DILocation(line: 0, scope: !11913)
!11924 = !DILocation(line: 1173, column: 1, scope: !11899)
!11925 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !1851, file: !1851, line: 1175, type: !11926, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11941)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{null, !11928, !1746}
!11928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11929, size: 32)
!11929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !11930, line: 37, size: 128, elements: !11931)
!11930 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11931 = !{!11932, !11940}
!11932 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !11929, file: !11930, line: 38, baseType: !11933, size: 96)
!11933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !423, line: 83, size: 96, elements: !11934)
!11934 = !{!11935, !11936, !11939}
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !11933, file: !423, line: 84, baseType: !1775, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !11933, file: !423, line: 85, baseType: !11937, size: 32, offset: 32)
!11937 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !423, line: 81, baseType: !11938)
!11938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11900, size: 32)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !11933, file: !423, line: 86, baseType: !103, size: 32, offset: 64)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !11929, file: !11930, line: 39, baseType: !103, size: 32, offset: 96)
!11941 = !{!11942, !11943, !11944, !11945, !11954}
!11942 = !DILocalVariable(name: "pq", arg: 1, scope: !11925, file: !1851, line: 1175, type: !11928)
!11943 = !DILocalVariable(name: "thread", arg: 2, scope: !11925, file: !1851, line: 1175, type: !1746)
!11944 = !DILocalVariable(name: "t", scope: !11925, file: !1851, line: 1177, type: !1746)
!11945 = !DILocalVariable(name: "__f", scope: !11946, file: !1851, line: 1190, type: !11949)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !1851, line: 1190, column: 3)
!11947 = distinct !DILexicalBlock(scope: !11948, file: !1851, line: 1189, column: 27)
!11948 = distinct !DILexicalBlock(scope: !11925, file: !1851, line: 1189, column: 6)
!11949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !423, line: 155, size: 96, elements: !11950)
!11950 = !{!11951, !11952, !11953}
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !11949, file: !423, line: 156, baseType: !1846, size: 32)
!11952 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !11949, file: !423, line: 157, baseType: !286, size: 32, offset: 32)
!11953 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !11949, file: !423, line: 158, baseType: !878, size: 32, offset: 64)
!11954 = !DILocalVariable(name: "n", scope: !11955, file: !1851, line: 1190, type: !1775)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !1851, line: 1190, column: 3)
!11956 = distinct !DILexicalBlock(scope: !11946, file: !1851, line: 1190, column: 3)
!11957 = !DILocation(line: 0, scope: !11925)
!11958 = !DILocation(line: 1181, column: 31, scope: !11925)
!11959 = !DILocation(line: 1181, column: 45, scope: !11925)
!11960 = !DILocation(line: 1181, column: 15, scope: !11925)
!11961 = !DILocation(line: 1181, column: 25, scope: !11925)
!11962 = !DILocation(line: 1189, column: 11, scope: !11948)
!11963 = !DILocation(line: 1189, column: 7, scope: !11948)
!11964 = !DILocation(line: 1189, column: 6, scope: !11925)
!11965 = !DILocation(line: 1190, column: 3, scope: !11946)
!11966 = !DILocation(line: 1190, column: 3, scope: !11955)
!11967 = !DILocation(line: 0, scope: !11955)
!11968 = !DILocation(line: 1190, column: 3, scope: !11956)
!11969 = !DILocation(line: 1193, column: 2, scope: !11947)
!11970 = !DILocation(line: 1191, column: 42, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11956, file: !1851, line: 1190, column: 54)
!11972 = !DILocation(line: 1191, column: 12, scope: !11971)
!11973 = !DILocation(line: 1191, column: 22, scope: !11971)
!11974 = distinct !{!11974, !11965, !11975}
!11975 = !DILocation(line: 1192, column: 3, scope: !11946)
!11976 = !DILocation(line: 1195, column: 17, scope: !11925)
!11977 = !DILocation(line: 1195, column: 37, scope: !11925)
!11978 = !DILocation(line: 1195, column: 2, scope: !11925)
!11979 = !DILocation(line: 1196, column: 1, scope: !11925)
!11980 = !DISubprogram(name: "z_rb_foreach_next", scope: !423, file: !423, line: 176, type: !11981, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!1775, !11983, !11984}
!11983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11933, size: 32)
!11984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11949, size: 32)
!11985 = !DISubprogram(name: "rb_insert", scope: !423, file: !423, line: 105, type: !11986, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!11986 = !DISubroutineType(types: !11987)
!11987 = !{null, !11983, !1775}
!11988 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !1851, file: !1851, line: 1198, type: !11926, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !11989)
!11989 = !{!11990, !11991}
!11990 = !DILocalVariable(name: "pq", arg: 1, scope: !11988, file: !1851, line: 1198, type: !11928)
!11991 = !DILocalVariable(name: "thread", arg: 2, scope: !11988, file: !1851, line: 1198, type: !1746)
!11992 = !DILocation(line: 0, scope: !11988)
!11993 = !DILocation(line: 1202, column: 17, scope: !11988)
!11994 = !DILocation(line: 1202, column: 37, scope: !11988)
!11995 = !DILocation(line: 1202, column: 2, scope: !11988)
!11996 = !DILocation(line: 1204, column: 16, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11988, file: !1851, line: 1204, column: 6)
!11998 = !DILocation(line: 1204, column: 7, scope: !11997)
!11999 = !DILocation(line: 1204, column: 6, scope: !11988)
!12000 = !DILocation(line: 1205, column: 7, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11997, file: !1851, line: 1204, column: 22)
!12002 = !DILocation(line: 1205, column: 22, scope: !12001)
!12003 = !DILocation(line: 1206, column: 2, scope: !12001)
!12004 = !DILocation(line: 1207, column: 1, scope: !11988)
!12005 = !DISubprogram(name: "rb_remove", scope: !423, file: !423, line: 110, type: !11986, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!12006 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !1851, file: !1851, line: 1209, type: !12007, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12009)
!12007 = !DISubroutineType(types: !12008)
!12008 = !{!1746, !11928}
!12009 = !{!12010, !12011, !12012}
!12010 = !DILocalVariable(name: "pq", arg: 1, scope: !12006, file: !1851, line: 1209, type: !11928)
!12011 = !DILocalVariable(name: "thread", scope: !12006, file: !1851, line: 1211, type: !1746)
!12012 = !DILocalVariable(name: "n", scope: !12006, file: !1851, line: 1212, type: !1775)
!12013 = !DILocation(line: 0, scope: !12006)
!12014 = !DILocation(line: 1212, column: 37, scope: !12006)
!12015 = !DILocation(line: 1212, column: 21, scope: !12006)
!12016 = !DILocation(line: 1217, column: 2, scope: !12006)
!12017 = distinct !DISubprogram(name: "rb_get_min", scope: !423, file: !423, line: 115, type: !12018, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12020)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{!1775, !11983}
!12020 = !{!12021}
!12021 = !DILocalVariable(name: "tree", arg: 1, scope: !12017, file: !423, line: 115, type: !11983)
!12022 = !DILocation(line: 0, scope: !12017)
!12023 = !DILocation(line: 117, column: 9, scope: !12017)
!12024 = !DILocation(line: 117, column: 2, scope: !12017)
!12025 = !DISubprogram(name: "z_rb_get_minmax", scope: !423, file: !423, line: 100, type: !12026, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !336)
!12026 = !DISubroutineType(types: !12027)
!12027 = !{!1775, !11983, !202}
!12028 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !1851, file: !1851, line: 1246, type: !12029, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12039)
!12029 = !DISubroutineType(types: !12030)
!12030 = !{!1746, !12031}
!12031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12032, size: 32)
!12032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !11930, line: 53, size: 2080, elements: !12033)
!12033 = !{!12034, !12038}
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !12032, file: !11930, line: 54, baseType: !12035, size: 2048)
!12035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1782, size: 2048, elements: !12036)
!12036 = !{!12037}
!12037 = !DISubrange(count: 32)
!12038 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !12032, file: !11930, line: 55, baseType: !32, size: 32, offset: 2048)
!12039 = !{!12040, !12041, !12042, !12043}
!12040 = !DILocalVariable(name: "pq", arg: 1, scope: !12028, file: !1851, line: 1246, type: !12031)
!12041 = !DILocalVariable(name: "thread", scope: !12028, file: !1851, line: 1252, type: !1746)
!12042 = !DILocalVariable(name: "l", scope: !12028, file: !1851, line: 1253, type: !10838)
!12043 = !DILocalVariable(name: "n", scope: !12028, file: !1851, line: 1254, type: !1847)
!12044 = !DILocation(line: 0, scope: !12028)
!12045 = !DILocation(line: 1248, column: 11, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12028, file: !1851, line: 1248, column: 6)
!12047 = !DILocation(line: 1248, column: 7, scope: !12046)
!12048 = !DILocation(line: 1248, column: 6, scope: !12028)
!12049 = !DILocation(line: 1253, column: 31, scope: !12028)
!12050 = !DILocation(line: 1253, column: 20, scope: !12028)
!12051 = !DILocation(line: 1254, column: 19, scope: !12028)
!12052 = !DILocation(line: 1260, column: 1, scope: !12028)
!12053 = distinct !DISubprogram(name: "z_unpend_all", scope: !1851, file: !1851, line: 1262, type: !12054, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12056)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!103, !1777}
!12056 = !{!12057, !12058, !12059}
!12057 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12053, file: !1851, line: 1262, type: !1777)
!12058 = !DILocalVariable(name: "need_sched", scope: !12053, file: !1851, line: 1264, type: !103)
!12059 = !DILocalVariable(name: "thread", scope: !12053, file: !1851, line: 1265, type: !1746)
!12060 = !DILocation(line: 0, scope: !12053)
!12061 = !DILocation(line: 1267, column: 19, scope: !12053)
!12062 = !DILocation(line: 1267, column: 41, scope: !12053)
!12063 = !DILocation(line: 1267, column: 2, scope: !12053)
!12064 = !DILocation(line: 1268, column: 3, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12053, file: !1851, line: 1267, column: 50)
!12066 = !DILocation(line: 1269, column: 3, scope: !12065)
!12067 = distinct !{!12067, !12063, !12068}
!12068 = !DILocation(line: 1271, column: 2, scope: !12053)
!12069 = !DILocation(line: 1273, column: 2, scope: !12053)
!12070 = distinct !DISubprogram(name: "z_waitq_head", scope: !9463, file: !9463, line: 52, type: !11686, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12071)
!12071 = !{!12072}
!12072 = !DILocalVariable(name: "w", arg: 1, scope: !12070, file: !9463, line: 52, type: !1777)
!12073 = !DILocation(line: 0, scope: !12070)
!12074 = !DILocation(line: 54, column: 52, scope: !12070)
!12075 = !DILocation(line: 54, column: 28, scope: !12070)
!12076 = !DILocation(line: 54, column: 9, scope: !12070)
!12077 = !DILocation(line: 54, column: 2, scope: !12070)
!12078 = distinct !DISubprogram(name: "init_ready_q", scope: !1851, file: !1851, line: 1276, type: !12079, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12086)
!12079 = !DISubroutineType(types: !12080)
!12080 = !{null, !12081}
!12081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12082, size: 32)
!12082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !339, line: 83, size: 96, elements: !12083)
!12083 = !{!12084, !12085}
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !12082, file: !339, line: 86, baseType: !1746, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !12082, file: !339, line: 90, baseType: !1782, size: 64, offset: 32)
!12086 = !{!12087}
!12087 = !DILocalVariable(name: "rq", arg: 1, scope: !12078, file: !1851, line: 1276, type: !12081)
!12088 = !DILocation(line: 0, scope: !12078)
!12089 = !DILocation(line: 1289, column: 22, scope: !12078)
!12090 = !DILocation(line: 1289, column: 2, scope: !12078)
!12091 = !DILocation(line: 1291, column: 1, scope: !12078)
!12092 = distinct !DISubprogram(name: "sys_dlist_init", scope: !344, file: !344, line: 197, type: !12093, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12095)
!12093 = !DISubroutineType(types: !12094)
!12094 = !{null, !10838}
!12095 = !{!12096}
!12096 = !DILocalVariable(name: "list", arg: 1, scope: !12092, file: !344, line: 197, type: !10838)
!12097 = !DILocation(line: 0, scope: !12092)
!12098 = !DILocation(line: 199, column: 8, scope: !12092)
!12099 = !DILocation(line: 199, column: 13, scope: !12092)
!12100 = !DILocation(line: 200, column: 8, scope: !12092)
!12101 = !DILocation(line: 200, column: 13, scope: !12092)
!12102 = !DILocation(line: 201, column: 1, scope: !12092)
!12103 = distinct !DISubprogram(name: "z_sched_init", scope: !1851, file: !1851, line: 1293, type: !873, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!12104 = !DILocation(line: 1302, column: 2, scope: !12103)
!12105 = !DILocation(line: 1306, column: 2, scope: !12103)
!12106 = !DILocation(line: 1309, column: 1, scope: !12103)
!12107 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !1851, file: !1851, line: 1311, type: !12108, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12111)
!12108 = !DISubroutineType(types: !12109)
!12109 = !{!103, !12110}
!12110 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !398, line: 347, baseType: !1746)
!12111 = !{!12112}
!12112 = !DILocalVariable(name: "thread", arg: 1, scope: !12107, file: !1851, line: 1311, type: !12110)
!12113 = !DILocation(line: 0, scope: !12107)
!12114 = !DILocation(line: 1313, column: 22, scope: !12107)
!12115 = !DILocation(line: 1313, column: 9, scope: !12107)
!12116 = !DILocation(line: 1313, column: 2, scope: !12107)
!12117 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !1851, file: !1851, line: 1325, type: !12118, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12120)
!12118 = !DISubroutineType(types: !12119)
!12119 = !{null, !12110, !103}
!12120 = !{!12121, !12122, !12123}
!12121 = !DILocalVariable(name: "thread", arg: 1, scope: !12117, file: !1851, line: 1325, type: !12110)
!12122 = !DILocalVariable(name: "prio", arg: 2, scope: !12117, file: !1851, line: 1325, type: !103)
!12123 = !DILocalVariable(name: "th", scope: !12117, file: !1851, line: 1334, type: !1746)
!12124 = !DILocation(line: 0, scope: !12117)
!12125 = !DILocation(line: 1336, column: 2, scope: !12117)
!12126 = !DILocation(line: 1337, column: 1, scope: !12117)
!12127 = distinct !DISubprogram(name: "k_can_yield", scope: !1851, file: !1851, line: 1384, type: !6213, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!12128 = !DILocation(line: 1386, column: 11, scope: !12127)
!12129 = !DILocation(line: 1386, column: 29, scope: !12127)
!12130 = !DILocation(line: 1386, column: 32, scope: !12127)
!12131 = !DILocation(line: 1386, column: 46, scope: !12127)
!12132 = !DILocation(line: 1387, column: 28, scope: !12127)
!12133 = !DILocation(line: 1387, column: 4, scope: !12127)
!12134 = !DILocation(line: 1386, column: 2, scope: !12127)
!12135 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !315, file: !315, line: 989, type: !6213, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!12136 = !DILocation(line: 993, column: 10, scope: !12135)
!12137 = !DILocation(line: 993, column: 2, scope: !12135)
!12138 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !1851, file: !1851, line: 1390, type: !873, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12139)
!12139 = !{!12140}
!12140 = !DILocalVariable(name: "key", scope: !12138, file: !1851, line: 1396, type: !10627)
!12141 = !DILocation(line: 0, scope: !10635, inlinedAt: !12142)
!12142 = distinct !DILocation(line: 1396, column: 25, scope: !12138)
!12143 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !12144)
!12144 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !12142)
!12145 = !DILocation(line: 0, scope: !10644, inlinedAt: !12144)
!12146 = !DILocation(line: 0, scope: !12138)
!12147 = !DILocation(line: 1400, column: 18, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12149, file: !1851, line: 1399, column: 36)
!12149 = distinct !DILexicalBlock(scope: !12138, file: !1851, line: 1398, column: 6)
!12150 = !DILocation(line: 0, scope: !10804, inlinedAt: !12151)
!12151 = distinct !DILocation(line: 1400, column: 3, scope: !12148)
!12152 = !DILocation(line: 266, column: 15, scope: !10804, inlinedAt: !12151)
!12153 = !DILocation(line: 266, column: 28, scope: !10804, inlinedAt: !12151)
!12154 = !DILocation(line: 0, scope: !10812, inlinedAt: !12155)
!12155 = distinct !DILocation(line: 268, column: 3, scope: !10816, inlinedAt: !12151)
!12156 = !DILocation(line: 234, column: 2, scope: !10812, inlinedAt: !12155)
!12157 = !DILocation(line: 1402, column: 15, scope: !12138)
!12158 = !DILocation(line: 0, scope: !10821, inlinedAt: !12159)
!12159 = distinct !DILocation(line: 1402, column: 2, scope: !12138)
!12160 = !DILocation(line: 252, column: 15, scope: !10821, inlinedAt: !12159)
!12161 = !DILocation(line: 252, column: 28, scope: !10821, inlinedAt: !12159)
!12162 = !DILocation(line: 0, scope: !10828, inlinedAt: !12163)
!12163 = distinct !DILocation(line: 254, column: 3, scope: !10832, inlinedAt: !12159)
!12164 = !DILocation(line: 0, scope: !10835, inlinedAt: !12165)
!12165 = distinct !DILocation(line: 229, column: 2, scope: !10828, inlinedAt: !12163)
!12166 = !DILocation(line: 188, column: 2, scope: !10845, inlinedAt: !12165)
!12167 = !DILocation(line: 188, column: 2, scope: !10847, inlinedAt: !12165)
!12168 = !DILocation(line: 0, scope: !10845, inlinedAt: !12165)
!12169 = !DILocation(line: 189, column: 7, scope: !10850, inlinedAt: !12165)
!12170 = !DILocation(line: 189, column: 35, scope: !10850, inlinedAt: !12165)
!12171 = !DILocation(line: 189, column: 7, scope: !10851, inlinedAt: !12165)
!12172 = !DILocation(line: 191, column: 21, scope: !10855, inlinedAt: !12165)
!12173 = !DILocation(line: 190, column: 4, scope: !10855, inlinedAt: !12165)
!12174 = !DILocation(line: 192, column: 4, scope: !10855, inlinedAt: !12165)
!12175 = distinct !{!12175, !12166, !12176}
!12176 = !DILocation(line: 194, column: 2, scope: !10845, inlinedAt: !12165)
!12177 = !DILocation(line: 196, column: 37, scope: !10835, inlinedAt: !12165)
!12178 = !DILocation(line: 196, column: 2, scope: !10835, inlinedAt: !12165)
!12179 = !DILocation(line: 197, column: 1, scope: !10835, inlinedAt: !12165)
!12180 = !DILocation(line: 1403, column: 2, scope: !12138)
!12181 = !DILocation(line: 0, scope: !11246, inlinedAt: !12182)
!12182 = distinct !DILocation(line: 1404, column: 2, scope: !12138)
!12183 = !DILocation(line: 196, column: 9, scope: !11246, inlinedAt: !12182)
!12184 = !DILocation(line: 1405, column: 1, scope: !12138)
!12185 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !1851, file: !1851, line: 1459, type: !12186, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12188)
!12186 = !DISubroutineType(types: !12187)
!12187 = !{!878, !11426}
!12188 = !{!12189, !12190, !12191}
!12189 = !DILocalVariable(name: "timeout", arg: 1, scope: !12185, file: !1851, line: 1459, type: !11426)
!12190 = !DILocalVariable(name: "ticks", scope: !12185, file: !1851, line: 1461, type: !219)
!12191 = !DILocalVariable(name: "ret", scope: !12185, file: !1851, line: 1480, type: !878)
!12192 = !DILocation(line: 0, scope: !12185)
!12193 = !DILocation(line: 1468, column: 6, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12185, file: !1851, line: 1468, column: 6)
!12195 = !DILocation(line: 1468, column: 6, scope: !12185)
!12196 = !DILocation(line: 1469, column: 20, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12194, file: !1851, line: 1468, column: 40)
!12198 = !DILocation(line: 1469, column: 3, scope: !12197)
!12199 = !DILocation(line: 1473, column: 3, scope: !12197)
!12200 = !DILocation(line: 1478, column: 10, scope: !12185)
!12201 = !DILocation(line: 1480, column: 16, scope: !12185)
!12202 = !DILocation(line: 1485, column: 1, scope: !12185)
!12203 = distinct !DISubprogram(name: "k_thread_suspend", scope: !2876, file: !2876, line: 310, type: !12204, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12206)
!12204 = !DISubroutineType(types: !12205)
!12205 = !{null, !12110}
!12206 = !{!12207}
!12207 = !DILocalVariable(name: "thread", arg: 1, scope: !12203, file: !2876, line: 310, type: !12110)
!12208 = !DILocation(line: 0, scope: !12203)
!12209 = !DILocation(line: 319, column: 2, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12203, file: !2876, line: 319, column: 2)
!12211 = !{i64 2151132358}
!12212 = !DILocation(line: 320, column: 2, scope: !12203)
!12213 = !DILocation(line: 321, column: 1, scope: !12203)
!12214 = distinct !DISubprogram(name: "z_tick_sleep", scope: !1851, file: !1851, line: 1415, type: !12215, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12217)
!12215 = !DISubroutineType(types: !12216)
!12216 = !{!878, !219}
!12217 = !{!12218, !12219, !12220, !12221}
!12218 = !DILocalVariable(name: "ticks", arg: 1, scope: !12214, file: !1851, line: 1415, type: !219)
!12219 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !12214, file: !1851, line: 1418, type: !121)
!12220 = !DILocalVariable(name: "timeout", scope: !12214, file: !1851, line: 1430, type: !11426)
!12221 = !DILocalVariable(name: "key", scope: !12214, file: !1851, line: 1437, type: !10627)
!12222 = !DILocation(line: 0, scope: !12214)
!12223 = !DILocation(line: 1425, column: 12, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12214, file: !1851, line: 1425, column: 6)
!12225 = !DILocation(line: 1425, column: 6, scope: !12214)
!12226 = !DILocation(line: 1426, column: 3, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12224, file: !1851, line: 1425, column: 18)
!12228 = !DILocation(line: 1427, column: 3, scope: !12227)
!12229 = !DILocation(line: 1431, column: 24, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12214, file: !1851, line: 1431, column: 6)
!12231 = !DILocation(line: 1431, column: 6, scope: !12214)
!12232 = !DILocation(line: 1432, column: 35, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12230, file: !1851, line: 1431, column: 30)
!12234 = !DILocation(line: 1432, column: 27, scope: !12233)
!12235 = !DILocation(line: 1433, column: 2, scope: !12233)
!12236 = !DILocation(line: 1434, column: 27, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12230, file: !1851, line: 1433, column: 9)
!12238 = !DILocation(line: 0, scope: !12230)
!12239 = !DILocation(line: 0, scope: !10635, inlinedAt: !12240)
!12240 = distinct !DILocation(line: 1437, column: 25, scope: !12214)
!12241 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !12242)
!12242 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !12240)
!12243 = !DILocation(line: 0, scope: !10644, inlinedAt: !12242)
!12244 = !DILocation(line: 1440, column: 20, scope: !12214)
!12245 = !DILocation(line: 1440, column: 18, scope: !12214)
!12246 = !DILocation(line: 1442, column: 2, scope: !12214)
!12247 = !DILocation(line: 1443, column: 23, scope: !12214)
!12248 = !DILocation(line: 1443, column: 2, scope: !12214)
!12249 = !DILocation(line: 1444, column: 29, scope: !12214)
!12250 = !DILocation(line: 1444, column: 2, scope: !12214)
!12251 = !DILocation(line: 0, scope: !11246, inlinedAt: !12252)
!12252 = distinct !DILocation(line: 1446, column: 8, scope: !12214)
!12253 = !DILocation(line: 196, column: 9, scope: !11246, inlinedAt: !12252)
!12254 = !DILocation(line: 1450, column: 10, scope: !12214)
!12255 = !DILocation(line: 1450, column: 45, scope: !12214)
!12256 = !DILocation(line: 1450, column: 43, scope: !12214)
!12257 = !DILocation(line: 1451, column: 6, scope: !12214)
!12258 = !DILocation(line: 1457, column: 1, scope: !12214)
!12259 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !9698, file: !9698, line: 1103, type: !9699, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12260)
!12260 = !{!12261}
!12261 = !DILocalVariable(name: "t", arg: 1, scope: !12259, file: !9698, line: 1103, type: !1724)
!12262 = !DILocation(line: 0, scope: !12259)
!12263 = !DILocation(line: 0, scope: !10682, inlinedAt: !12264)
!12264 = distinct !DILocation(line: 1106, column: 9, scope: !12259)
!12265 = !DILocation(line: 139, column: 13, scope: !12266, inlinedAt: !12264)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !9698, line: 138, column: 10)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !9698, line: 136, column: 7)
!12268 = distinct !DILexicalBlock(scope: !10703, file: !9698, line: 134, column: 17)
!12269 = !DILocation(line: 1106, column: 2, scope: !12259)
!12270 = distinct !DISubprogram(name: "k_yield", scope: !2876, file: !2876, line: 140, type: !873, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!12271 = !DILocation(line: 148, column: 2, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12270, file: !2876, line: 148, column: 2)
!12273 = !{i64 2151131678}
!12274 = !DILocation(line: 149, column: 2, scope: !12270)
!12275 = !DILocation(line: 150, column: 1, scope: !12270)
!12276 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !1851, file: !1851, line: 1495, type: !12277, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12279)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{!878, !103}
!12279 = !{!12280, !12281}
!12280 = !DILocalVariable(name: "us", arg: 1, scope: !12276, file: !1851, line: 1495, type: !103)
!12281 = !DILocalVariable(name: "ticks", scope: !12276, file: !1851, line: 1497, type: !878)
!12282 = !DILocation(line: 0, scope: !12276)
!12283 = !DILocation(line: 1501, column: 31, scope: !12276)
!12284 = !DILocation(line: 1501, column: 10, scope: !12276)
!12285 = !DILocation(line: 1502, column: 23, scope: !12276)
!12286 = !DILocation(line: 1502, column: 10, scope: !12276)
!12287 = !DILocation(line: 1506, column: 31, scope: !12276)
!12288 = !DILocation(line: 1506, column: 9, scope: !12276)
!12289 = !DILocation(line: 1506, column: 2, scope: !12276)
!12290 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !9698, file: !9698, line: 571, type: !9699, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12291)
!12291 = !{!12292}
!12292 = !DILocalVariable(name: "t", arg: 1, scope: !12290, file: !9698, line: 571, type: !1724)
!12293 = !DILocation(line: 0, scope: !12290)
!12294 = !DILocation(line: 0, scope: !10682, inlinedAt: !12295)
!12295 = distinct !DILocation(line: 574, column: 9, scope: !12290)
!12296 = !DILocation(line: 135, column: 5, scope: !12268, inlinedAt: !12295)
!12297 = !DILocation(line: 139, column: 13, scope: !12266, inlinedAt: !12295)
!12298 = !DILocation(line: 574, column: 2, scope: !12290)
!12299 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !9698, file: !9698, line: 1187, type: !9699, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12300)
!12300 = !{!12301}
!12301 = !DILocalVariable(name: "t", arg: 1, scope: !12299, file: !9698, line: 1187, type: !1724)
!12302 = !DILocation(line: 0, scope: !12299)
!12303 = !DILocation(line: 0, scope: !10682, inlinedAt: !12304)
!12304 = distinct !DILocation(line: 1190, column: 9, scope: !12299)
!12305 = !DILocation(line: 145, column: 13, scope: !12306, inlinedAt: !12304)
!12306 = distinct !DILexicalBlock(scope: !10700, file: !9698, line: 144, column: 10)
!12307 = !DILocation(line: 1190, column: 2, scope: !12299)
!12308 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !1851, file: !1851, line: 1517, type: !12204, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12309)
!12309 = !{!12310}
!12310 = !DILocalVariable(name: "thread", arg: 1, scope: !12308, file: !1851, line: 1517, type: !12110)
!12311 = !DILocation(line: 0, scope: !12308)
!12312 = !DILocation(line: 1521, column: 6, scope: !12313)
!12313 = distinct !DILexicalBlock(scope: !12308, file: !1851, line: 1521, column: 6)
!12314 = !DILocation(line: 1521, column: 6, scope: !12308)
!12315 = !DILocation(line: 1525, column: 6, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12308, file: !1851, line: 1525, column: 6)
!12317 = !DILocation(line: 1525, column: 37, scope: !12316)
!12318 = !DILocation(line: 1525, column: 6, scope: !12308)
!12319 = !DILocation(line: 1527, column: 20, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !1851, line: 1527, column: 7)
!12321 = distinct !DILexicalBlock(scope: !12316, file: !1851, line: 1525, column: 42)
!12322 = !DILocation(line: 1527, column: 33, scope: !12320)
!12323 = !DILocation(line: 1527, column: 7, scope: !12321)
!12324 = !DILocation(line: 1532, column: 2, scope: !12308)
!12325 = !DILocation(line: 1533, column: 2, scope: !12308)
!12326 = !DILocation(line: 1031, column: 3, scope: !11279, inlinedAt: !12327)
!12327 = distinct !DILocation(line: 48, column: 10, scope: !11283, inlinedAt: !12328)
!12328 = distinct !DILocation(line: 1537, column: 7, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12308, file: !1851, line: 1537, column: 6)
!12330 = !DILocation(line: 0, scope: !11279, inlinedAt: !12327)
!12331 = !DILocation(line: 48, column: 9, scope: !11283, inlinedAt: !12328)
!12332 = !DILocation(line: 1537, column: 6, scope: !12308)
!12333 = !DILocation(line: 1538, column: 3, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12329, file: !1851, line: 1537, column: 25)
!12335 = !DILocation(line: 1539, column: 2, scope: !12334)
!12336 = !DILocation(line: 1540, column: 1, scope: !12308)
!12337 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !9139, file: !9139, line: 101, type: !10753, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12338)
!12338 = !{!12339}
!12339 = !DILocalVariable(name: "thread", arg: 1, scope: !12337, file: !9139, line: 101, type: !1746)
!12340 = !DILocation(line: 0, scope: !12337)
!12341 = !DILocation(line: 103, column: 23, scope: !12337)
!12342 = !DILocation(line: 103, column: 36, scope: !12337)
!12343 = !DILocation(line: 103, column: 55, scope: !12337)
!12344 = !DILocation(line: 103, column: 2, scope: !12337)
!12345 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !1851, file: !1851, line: 1567, type: !12346, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12348)
!12346 = !DISubroutineType(types: !12347)
!12347 = !{!12110}
!12348 = !{!12349}
!12349 = !DILocalVariable(name: "ret", scope: !12345, file: !1851, line: 1577, type: !12110)
!12350 = !DILocation(line: 1577, column: 30, scope: !12345)
!12351 = !DILocation(line: 0, scope: !12345)
!12352 = !DILocation(line: 1582, column: 2, scope: !12345)
!12353 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !1851, file: !1851, line: 1593, type: !6485, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !336)
!12354 = !DILocation(line: 1031, column: 3, scope: !11279, inlinedAt: !12355)
!12355 = distinct !DILocation(line: 48, column: 10, scope: !11283, inlinedAt: !12356)
!12356 = distinct !DILocation(line: 1595, column: 10, scope: !12353)
!12357 = !DILocation(line: 0, scope: !11279, inlinedAt: !12355)
!12358 = !DILocation(line: 48, column: 9, scope: !11283, inlinedAt: !12356)
!12359 = !DILocation(line: 1595, column: 27, scope: !12353)
!12360 = !DILocation(line: 1595, column: 41, scope: !12353)
!12361 = !DILocation(line: 1595, column: 30, scope: !12353)
!12362 = !DILocation(line: 1595, column: 2, scope: !12353)
!12363 = distinct !DISubprogram(name: "z_thread_abort", scope: !1851, file: !1851, line: 1725, type: !10593, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12364)
!12364 = !{!12365, !12366}
!12365 = !DILocalVariable(name: "thread", arg: 1, scope: !12363, file: !1851, line: 1725, type: !1746)
!12366 = !DILocalVariable(name: "key", scope: !12363, file: !1851, line: 1727, type: !10627)
!12367 = !DILocation(line: 0, scope: !12363)
!12368 = !DILocation(line: 0, scope: !10635, inlinedAt: !12369)
!12369 = distinct !DILocation(line: 1727, column: 25, scope: !12363)
!12370 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !12371)
!12371 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !12369)
!12372 = !DILocation(line: 0, scope: !10644, inlinedAt: !12371)
!12373 = !DILocation(line: 1729, column: 20, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12363, file: !1851, line: 1729, column: 6)
!12375 = !DILocation(line: 1729, column: 33, scope: !12374)
!12376 = !DILocation(line: 1729, column: 48, scope: !12374)
!12377 = !DILocation(line: 1729, column: 6, scope: !12363)
!12378 = !DILocation(line: 0, scope: !10662, inlinedAt: !12379)
!12379 = distinct !DILocation(line: 1730, column: 3, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12374, file: !1851, line: 1729, column: 54)
!12381 = !DILocation(line: 0, scope: !10670, inlinedAt: !12382)
!12382 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !12379)
!12383 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !12382)
!12384 = !DILocation(line: 1732, column: 3, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12380, file: !1851, line: 1732, column: 3)
!12386 = !{i64 2151869088, i64 2151869104, i64 2151869130, i64 2151869158, i64 2151869178}
!12387 = !DILocation(line: 1733, column: 3, scope: !12380)
!12388 = !DILocation(line: 1736, column: 20, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12363, file: !1851, line: 1736, column: 6)
!12390 = !DILocation(line: 1736, column: 33, scope: !12389)
!12391 = !DILocation(line: 1736, column: 49, scope: !12389)
!12392 = !DILocation(line: 1736, column: 6, scope: !12363)
!12393 = !DILocation(line: 0, scope: !10662, inlinedAt: !12394)
!12394 = distinct !DILocation(line: 1737, column: 3, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12389, file: !1851, line: 1736, column: 56)
!12396 = !DILocation(line: 0, scope: !10670, inlinedAt: !12397)
!12397 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !12394)
!12398 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !12397)
!12399 = !DILocation(line: 1738, column: 3, scope: !12395)
!12400 = !DILocation(line: 1775, column: 2, scope: !12363)
!12401 = !DILocation(line: 1776, column: 16, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12363, file: !1851, line: 1776, column: 6)
!12403 = !DILocation(line: 1776, column: 13, scope: !12402)
!12404 = !DILocation(line: 1776, column: 25, scope: !12402)
!12405 = !DILocation(line: 1031, column: 3, scope: !11279, inlinedAt: !12406)
!12406 = distinct !DILocation(line: 48, column: 10, scope: !11283, inlinedAt: !12407)
!12407 = distinct !DILocation(line: 1776, column: 29, scope: !12402)
!12408 = !DILocation(line: 0, scope: !11279, inlinedAt: !12406)
!12409 = !DILocation(line: 48, column: 9, scope: !11283, inlinedAt: !12407)
!12410 = !DILocation(line: 1776, column: 6, scope: !12363)
!12411 = !DILocation(line: 0, scope: !11246, inlinedAt: !12412)
!12412 = distinct !DILocation(line: 1777, column: 3, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12402, file: !1851, line: 1776, column: 47)
!12414 = !DILocation(line: 196, column: 9, scope: !11246, inlinedAt: !12412)
!12415 = !DILocation(line: 1779, column: 2, scope: !12413)
!12416 = !DILocation(line: 0, scope: !10662, inlinedAt: !12417)
!12417 = distinct !DILocation(line: 1780, column: 2, scope: !12363)
!12418 = !DILocation(line: 0, scope: !10670, inlinedAt: !12419)
!12419 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !12417)
!12420 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !12419)
!12421 = !DILocation(line: 1781, column: 1, scope: !12363)
!12422 = distinct !DISubprogram(name: "end_thread", scope: !1851, file: !1851, line: 1690, type: !10593, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12423)
!12423 = !{!12424}
!12424 = !DILocalVariable(name: "thread", arg: 1, scope: !12422, file: !1851, line: 1690, type: !1746)
!12425 = !DILocation(line: 0, scope: !12422)
!12426 = !DILocation(line: 1695, column: 20, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12422, file: !1851, line: 1695, column: 6)
!12428 = !DILocation(line: 1695, column: 33, scope: !12427)
!12429 = !DILocation(line: 1695, column: 49, scope: !12427)
!12430 = !DILocation(line: 1695, column: 6, scope: !12422)
!12431 = !DILocation(line: 1697, column: 29, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12427, file: !1851, line: 1695, column: 56)
!12433 = !DILocation(line: 1698, column: 7, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12432, file: !1851, line: 1698, column: 7)
!12435 = !DILocation(line: 1698, column: 7, scope: !12432)
!12436 = !DILocation(line: 0, scope: !10804, inlinedAt: !12437)
!12437 = distinct !DILocation(line: 1699, column: 4, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12434, file: !1851, line: 1698, column: 35)
!12439 = !DILocation(line: 266, column: 28, scope: !10804, inlinedAt: !12437)
!12440 = !DILocation(line: 0, scope: !10812, inlinedAt: !12441)
!12441 = distinct !DILocation(line: 268, column: 3, scope: !10816, inlinedAt: !12437)
!12442 = !DILocation(line: 234, column: 2, scope: !10812, inlinedAt: !12441)
!12443 = !DILocation(line: 1700, column: 3, scope: !12438)
!12444 = !DILocation(line: 1701, column: 20, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12432, file: !1851, line: 1701, column: 7)
!12446 = !DILocation(line: 1701, column: 30, scope: !12445)
!12447 = !DILocation(line: 1701, column: 7, scope: !12432)
!12448 = !DILocation(line: 1702, column: 4, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12445, file: !1851, line: 1701, column: 39)
!12450 = !DILocation(line: 1703, column: 3, scope: !12449)
!12451 = !DILocation(line: 1704, column: 9, scope: !12432)
!12452 = !DILocation(line: 1705, column: 23, scope: !12432)
!12453 = !DILocation(line: 1705, column: 3, scope: !12432)
!12454 = !DILocation(line: 1706, column: 3, scope: !12432)
!12455 = !DILocation(line: 1722, column: 2, scope: !12432)
!12456 = !DILocation(line: 1723, column: 1, scope: !12422)
!12457 = distinct !DISubprogram(name: "unpend_all", scope: !1851, file: !1851, line: 1674, type: !12458, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12460)
!12458 = !DISubroutineType(types: !12459)
!12459 = !{null, !1777}
!12460 = !{!12461, !12462}
!12461 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12457, file: !1851, line: 1674, type: !1777)
!12462 = !DILocalVariable(name: "thread", scope: !12457, file: !1851, line: 1676, type: !1746)
!12463 = !DILocation(line: 0, scope: !12457)
!12464 = !DILocation(line: 1678, column: 19, scope: !12457)
!12465 = !DILocation(line: 1678, column: 41, scope: !12457)
!12466 = !DILocation(line: 1678, column: 2, scope: !12457)
!12467 = !DILocation(line: 1679, column: 3, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12457, file: !1851, line: 1678, column: 50)
!12469 = !DILocation(line: 1680, column: 9, scope: !12468)
!12470 = !DILocalVariable(name: "thread", arg: 1, scope: !12471, file: !9159, line: 65, type: !1746)
!12471 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !9159, file: !9159, line: 65, type: !12472, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12474)
!12472 = !DISubroutineType(types: !12473)
!12473 = !{null, !1746, !32}
!12474 = !{!12470, !12475}
!12475 = !DILocalVariable(name: "value", arg: 2, scope: !12471, file: !9159, line: 65, type: !32)
!12476 = !DILocation(line: 0, scope: !12471, inlinedAt: !12477)
!12477 = distinct !DILocation(line: 1681, column: 3, scope: !12468)
!12478 = !DILocation(line: 67, column: 15, scope: !12471, inlinedAt: !12477)
!12479 = !DILocation(line: 67, column: 33, scope: !12471, inlinedAt: !12477)
!12480 = !DILocation(line: 1682, column: 3, scope: !12468)
!12481 = distinct !{!12481, !12466, !12482}
!12482 = !DILocation(line: 1683, column: 2, scope: !12457)
!12483 = !DILocation(line: 1684, column: 1, scope: !12457)
!12484 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !1851, file: !1851, line: 1794, type: !12485, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12487)
!12485 = !DISubroutineType(types: !12486)
!12486 = !{!103, !1746, !11426}
!12487 = !{!12488, !12489, !12490, !12491}
!12488 = !DILocalVariable(name: "thread", arg: 1, scope: !12484, file: !1851, line: 1794, type: !1746)
!12489 = !DILocalVariable(name: "timeout", arg: 2, scope: !12484, file: !1851, line: 1794, type: !11426)
!12490 = !DILocalVariable(name: "key", scope: !12484, file: !1851, line: 1796, type: !10627)
!12491 = !DILocalVariable(name: "ret", scope: !12484, file: !1851, line: 1797, type: !103)
!12492 = !DILocation(line: 0, scope: !12484)
!12493 = !DILocation(line: 0, scope: !10635, inlinedAt: !12494)
!12494 = distinct !DILocation(line: 1796, column: 25, scope: !12484)
!12495 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !12496)
!12496 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !12494)
!12497 = !DILocation(line: 0, scope: !10644, inlinedAt: !12496)
!12498 = !DILocation(line: 1801, column: 20, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12484, file: !1851, line: 1801, column: 6)
!12500 = !DILocation(line: 1801, column: 33, scope: !12499)
!12501 = !DILocation(line: 1801, column: 49, scope: !12499)
!12502 = !DILocation(line: 1801, column: 6, scope: !12484)
!12503 = !DILocation(line: 1803, column: 13, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12499, file: !1851, line: 1803, column: 13)
!12505 = !DILocation(line: 1803, column: 13, scope: !12499)
!12506 = !DILocation(line: 1805, column: 24, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12504, file: !1851, line: 1805, column: 13)
!12508 = !DILocation(line: 1805, column: 21, scope: !12507)
!12509 = !DILocation(line: 1805, column: 34, scope: !12507)
!12510 = !DILocation(line: 1806, column: 20, scope: !12507)
!12511 = !DILocation(line: 1806, column: 44, scope: !12507)
!12512 = !DILocation(line: 1806, column: 30, scope: !12507)
!12513 = !DILocation(line: 1805, column: 13, scope: !12504)
!12514 = !DILocation(line: 1810, column: 42, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12507, file: !1851, line: 1808, column: 9)
!12516 = !DILocation(line: 1810, column: 3, scope: !12515)
!12517 = !DILocation(line: 1811, column: 22, scope: !12515)
!12518 = !DILocation(line: 1811, column: 3, scope: !12515)
!12519 = !DILocation(line: 0, scope: !11246, inlinedAt: !12520)
!12520 = distinct !DILocation(line: 1814, column: 9, scope: !12515)
!12521 = !DILocation(line: 196, column: 9, scope: !11246, inlinedAt: !12520)
!12522 = !DILocation(line: 1817, column: 3, scope: !12515)
!12523 = !DILocation(line: 0, scope: !12499)
!12524 = !DILocation(line: 0, scope: !10662, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 1822, column: 2, scope: !12484)
!12526 = !DILocation(line: 0, scope: !10670, inlinedAt: !12527)
!12527 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !12525)
!12528 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !12527)
!12529 = !DILocation(line: 1823, column: 2, scope: !12484)
!12530 = !DILocation(line: 1824, column: 1, scope: !12484)
!12531 = distinct !DISubprogram(name: "z_sched_wake", scope: !1851, file: !1851, line: 1882, type: !12532, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12534)
!12532 = !DISubroutineType(types: !12533)
!12533 = !{!205, !1777, !103, !102}
!12534 = !{!12535, !12536, !12537, !12538, !12539, !12540, !12542}
!12535 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12531, file: !1851, line: 1882, type: !1777)
!12536 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !12531, file: !1851, line: 1882, type: !103)
!12537 = !DILocalVariable(name: "swap_data", arg: 3, scope: !12531, file: !1851, line: 1882, type: !102)
!12538 = !DILocalVariable(name: "thread", scope: !12531, file: !1851, line: 1884, type: !1746)
!12539 = !DILocalVariable(name: "ret", scope: !12531, file: !1851, line: 1885, type: !205)
!12540 = !DILocalVariable(name: "__i", scope: !12541, file: !1851, line: 1887, type: !10627)
!12541 = distinct !DILexicalBlock(scope: !12531, file: !1851, line: 1887, column: 2)
!12542 = !DILocalVariable(name: "__key", scope: !12541, file: !1851, line: 1887, type: !10627)
!12543 = !DILocation(line: 0, scope: !12531)
!12544 = !DILocation(line: 0, scope: !12541)
!12545 = !DILocation(line: 0, scope: !10635, inlinedAt: !12546)
!12546 = distinct !DILocation(line: 1887, column: 2, scope: !12541)
!12547 = !DILocation(line: 55, column: 2, scope: !10644, inlinedAt: !12548)
!12548 = distinct !DILocation(line: 145, column: 10, scope: !10635, inlinedAt: !12546)
!12549 = !DILocation(line: 0, scope: !10644, inlinedAt: !12548)
!12550 = !DILocation(line: 1888, column: 12, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !1851, line: 1887, column: 26)
!12552 = distinct !DILexicalBlock(scope: !12541, file: !1851, line: 1887, column: 2)
!12553 = !DILocation(line: 1890, column: 14, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12551, file: !1851, line: 1890, column: 7)
!12555 = !DILocation(line: 1890, column: 7, scope: !12551)
!12556 = !DILocalVariable(name: "thread", arg: 1, scope: !12557, file: !10032, line: 134, type: !1746)
!12557 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !10032, file: !10032, line: 134, type: !12558, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12560)
!12558 = !DISubroutineType(types: !12559)
!12559 = !{null, !1746, !32, !102}
!12560 = !{!12556, !12561, !12562}
!12561 = !DILocalVariable(name: "value", arg: 2, scope: !12557, file: !10032, line: 135, type: !32)
!12562 = !DILocalVariable(name: "data", arg: 3, scope: !12557, file: !10032, line: 136, type: !102)
!12563 = !DILocation(line: 0, scope: !12557, inlinedAt: !12564)
!12564 = distinct !DILocation(line: 1891, column: 4, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12554, file: !1851, line: 1890, column: 23)
!12566 = !DILocation(line: 0, scope: !12471, inlinedAt: !12567)
!12567 = distinct !DILocation(line: 138, column: 2, scope: !12557, inlinedAt: !12564)
!12568 = !DILocation(line: 67, column: 15, scope: !12471, inlinedAt: !12567)
!12569 = !DILocation(line: 67, column: 33, scope: !12471, inlinedAt: !12567)
!12570 = !DILocation(line: 139, column: 15, scope: !12557, inlinedAt: !12564)
!12571 = !DILocation(line: 139, column: 25, scope: !12557, inlinedAt: !12564)
!12572 = !DILocation(line: 1894, column: 4, scope: !12565)
!12573 = !DILocation(line: 1895, column: 10, scope: !12565)
!12574 = !DILocation(line: 1896, column: 4, scope: !12565)
!12575 = !DILocation(line: 1898, column: 3, scope: !12565)
!12576 = !DILocation(line: 0, scope: !10662, inlinedAt: !12577)
!12577 = distinct !DILocation(line: 1887, column: 2, scope: !12552)
!12578 = !DILocation(line: 0, scope: !10670, inlinedAt: !12579)
!12579 = distinct !DILocation(line: 215, column: 2, scope: !10662, inlinedAt: !12577)
!12580 = !DILocation(line: 95, column: 2, scope: !10670, inlinedAt: !12579)
!12581 = !DILocation(line: 1901, column: 2, scope: !12531)
!12582 = distinct !DISubprogram(name: "z_sched_wait", scope: !1851, file: !1851, line: 1904, type: !12583, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1743, retainedNodes: !12585)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!103, !10638, !10627, !1777, !11426, !2406}
!12585 = !{!12586, !12587, !12588, !12589, !12590, !12591}
!12586 = !DILocalVariable(name: "lock", arg: 1, scope: !12582, file: !1851, line: 1904, type: !10638)
!12587 = !DILocalVariable(name: "key", arg: 2, scope: !12582, file: !1851, line: 1904, type: !10627)
!12588 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12582, file: !1851, line: 1905, type: !1777)
!12589 = !DILocalVariable(name: "timeout", arg: 4, scope: !12582, file: !1851, line: 1905, type: !11426)
!12590 = !DILocalVariable(name: "data", arg: 5, scope: !12582, file: !1851, line: 1905, type: !2406)
!12591 = !DILocalVariable(name: "ret", scope: !12582, file: !1851, line: 1907, type: !103)
!12592 = !DILocation(line: 0, scope: !12582)
!12593 = !DILocation(line: 1907, column: 12, scope: !12582)
!12594 = !DILocation(line: 1909, column: 11, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12582, file: !1851, line: 1909, column: 6)
!12596 = !DILocation(line: 1909, column: 6, scope: !12582)
!12597 = !DILocation(line: 1910, column: 11, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12595, file: !1851, line: 1909, column: 20)
!12599 = !DILocation(line: 1910, column: 26, scope: !12598)
!12600 = !DILocation(line: 1910, column: 9, scope: !12598)
!12601 = !DILocation(line: 1911, column: 2, scope: !12598)
!12602 = !DILocation(line: 1912, column: 2, scope: !12582)
!12603 = distinct !DISubprogram(name: "z_data_copy", scope: !12604, file: !12604, line: 22, type: !873, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2423, retainedNodes: !336)
!12604 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12605 = !DILocation(line: 24, column: 2, scope: !12603)
!12606 = !DILocation(line: 27, column: 2, scope: !12603)
!12607 = !DILocation(line: 71, column: 1, scope: !12603)
!12608 = distinct !DISubprogram(name: "z_add_timeout", scope: !1888, file: !1888, line: 88, type: !12609, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12615)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{null, !1861, !1880, !12611}
!12611 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !12612)
!12612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !12613)
!12613 = !{!12614}
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12612, file: !220, line: 66, baseType: !219, size: 64)
!12615 = !{!12616, !12617, !12618, !12619, !12625, !12626, !12629, !12632}
!12616 = !DILocalVariable(name: "to", arg: 1, scope: !12608, file: !1888, line: 88, type: !1861)
!12617 = !DILocalVariable(name: "fn", arg: 2, scope: !12608, file: !1888, line: 88, type: !1880)
!12618 = !DILocalVariable(name: "timeout", arg: 3, scope: !12608, file: !1888, line: 89, type: !12611)
!12619 = !DILocalVariable(name: "__i", scope: !12620, file: !1888, line: 102, type: !12621)
!12620 = distinct !DILexicalBlock(scope: !12608, file: !1888, line: 102, column: 2)
!12621 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !335, line: 106, baseType: !12622)
!12622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !335, line: 32, size: 32, elements: !12623)
!12623 = !{!12624}
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12622, file: !335, line: 33, baseType: !103, size: 32)
!12625 = !DILocalVariable(name: "__key", scope: !12620, file: !1888, line: 102, type: !12621)
!12626 = !DILocalVariable(name: "t", scope: !12627, file: !1888, line: 103, type: !1861)
!12627 = distinct !DILexicalBlock(scope: !12628, file: !1888, line: 102, column: 24)
!12628 = distinct !DILexicalBlock(scope: !12620, file: !1888, line: 102, column: 2)
!12629 = !DILocalVariable(name: "ticks", scope: !12630, file: !1888, line: 107, type: !219)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !1888, line: 106, column: 39)
!12631 = distinct !DILexicalBlock(scope: !12627, file: !1888, line: 105, column: 7)
!12632 = !DILocalVariable(name: "next_time", scope: !12633, file: !1888, line: 137, type: !878)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !1888, line: 127, column: 22)
!12634 = distinct !DILexicalBlock(scope: !12627, file: !1888, line: 127, column: 7)
!12635 = !DILocation(line: 0, scope: !12608)
!12636 = !DILocation(line: 91, column: 6, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12608, file: !1888, line: 91, column: 6)
!12638 = !DILocation(line: 91, column: 6, scope: !12608)
!12639 = !DILocation(line: 100, column: 6, scope: !12608)
!12640 = !DILocation(line: 100, column: 9, scope: !12608)
!12641 = !DILocation(line: 0, scope: !12620)
!12642 = !DILocalVariable(name: "l", arg: 1, scope: !12643, file: !335, line: 136, type: !12646)
!12643 = distinct !DISubprogram(name: "k_spin_lock", scope: !335, file: !335, line: 136, type: !12644, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12647)
!12644 = !DISubroutineType(types: !12645)
!12645 = !{!12621, !12646}
!12646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!12647 = !{!12642, !12648}
!12648 = !DILocalVariable(name: "k", scope: !12643, file: !335, line: 139, type: !12621)
!12649 = !DILocation(line: 0, scope: !12643, inlinedAt: !12650)
!12650 = distinct !DILocation(line: 102, column: 2, scope: !12620)
!12651 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !12656)
!12652 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12653)
!12653 = !{!12654, !12655}
!12654 = !DILocalVariable(name: "key", scope: !12652, file: !4919, line: 44, type: !32)
!12655 = !DILocalVariable(name: "tmp", scope: !12652, file: !4919, line: 53, type: !32)
!12656 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !12650)
!12657 = !{i64 1325978}
!12658 = !DILocation(line: 0, scope: !12652, inlinedAt: !12656)
!12659 = !DILocation(line: 106, column: 33, scope: !12631)
!12660 = !DILocation(line: 105, column: 7, scope: !12627)
!12661 = !DILocation(line: 107, column: 50, scope: !12630)
!12662 = !DILocation(line: 107, column: 48, scope: !12630)
!12663 = !DILocation(line: 0, scope: !12630)
!12664 = !DILocation(line: 109, column: 17, scope: !12630)
!12665 = !DILocation(line: 110, column: 3, scope: !12630)
!12666 = !DILocation(line: 111, column: 31, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12631, file: !1888, line: 110, column: 10)
!12668 = !DILocation(line: 111, column: 37, scope: !12667)
!12669 = !DILocation(line: 111, column: 35, scope: !12667)
!12670 = !DILocation(line: 0, scope: !12631)
!12671 = !DILocation(line: 109, column: 8, scope: !12630)
!12672 = !DILocation(line: 109, column: 15, scope: !12630)
!12673 = !DILocation(line: 114, column: 12, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12627, file: !1888, line: 114, column: 3)
!12675 = !DILocation(line: 0, scope: !12627)
!12676 = !DILocation(line: 114, column: 3, scope: !12674)
!12677 = !DILocation(line: 115, column: 24, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !1888, line: 115, column: 8)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !1888, line: 114, column: 45)
!12680 = distinct !DILexicalBlock(scope: !12674, file: !1888, line: 114, column: 3)
!12681 = !DILocation(line: 115, column: 11, scope: !12678)
!12682 = !DILocation(line: 115, column: 18, scope: !12678)
!12683 = !DILocation(line: 115, column: 8, scope: !12679)
!12684 = !DILocation(line: 116, column: 15, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12678, file: !1888, line: 115, column: 32)
!12686 = !DILocation(line: 117, column: 26, scope: !12685)
!12687 = !DILocation(line: 117, column: 37, scope: !12685)
!12688 = !DILocation(line: 117, column: 5, scope: !12685)
!12689 = !DILocation(line: 123, column: 7, scope: !12627)
!12690 = !DILocation(line: 120, column: 15, scope: !12679)
!12691 = !DILocation(line: 114, column: 36, scope: !12680)
!12692 = distinct !{!12692, !12676, !12693}
!12693 = !DILocation(line: 121, column: 3, scope: !12674)
!12694 = !DILocation(line: 124, column: 41, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12696, file: !1888, line: 123, column: 18)
!12696 = distinct !DILexicalBlock(scope: !12627, file: !1888, line: 123, column: 7)
!12697 = !DILocation(line: 124, column: 4, scope: !12695)
!12698 = !DILocation(line: 125, column: 3, scope: !12695)
!12699 = !DILocation(line: 127, column: 13, scope: !12634)
!12700 = !DILocation(line: 127, column: 10, scope: !12634)
!12701 = !DILocation(line: 127, column: 7, scope: !12627)
!12702 = !DILocation(line: 137, column: 24, scope: !12633)
!12703 = !DILocation(line: 0, scope: !12633)
!12704 = !DILocation(line: 139, column: 18, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12633, file: !1888, line: 139, column: 8)
!12706 = !DILocation(line: 139, column: 23, scope: !12705)
!12707 = !DILocation(line: 141, column: 5, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12705, file: !1888, line: 140, column: 48)
!12709 = !DILocation(line: 142, column: 4, scope: !12708)
!12710 = !DILocalVariable(name: "key", arg: 2, scope: !12711, file: !335, line: 190, type: !12621)
!12711 = distinct !DISubprogram(name: "k_spin_unlock", scope: !335, file: !335, line: 189, type: !12712, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12714)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{null, !12646, !12621}
!12714 = !{!12715, !12710}
!12715 = !DILocalVariable(name: "l", arg: 1, scope: !12711, file: !335, line: 189, type: !12646)
!12716 = !DILocation(line: 0, scope: !12711, inlinedAt: !12717)
!12717 = distinct !DILocation(line: 102, column: 2, scope: !12628)
!12718 = !DILocalVariable(name: "key", arg: 1, scope: !12719, file: !4919, line: 84, type: !32)
!12719 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12720)
!12720 = !{!12718}
!12721 = !DILocation(line: 0, scope: !12719, inlinedAt: !12722)
!12722 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !12717)
!12723 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !12722)
!12724 = !{i64 1326795}
!12725 = !DILocation(line: 148, column: 1, scope: !12608)
!12726 = distinct !DISubprogram(name: "elapsed", scope: !1888, file: !1888, line: 62, type: !12727, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !336)
!12727 = !DISubroutineType(types: !12728)
!12728 = !{!878}
!12729 = !DILocation(line: 64, column: 9, scope: !12726)
!12730 = !DILocation(line: 64, column: 28, scope: !12726)
!12731 = !DILocation(line: 64, column: 35, scope: !12726)
!12732 = !DILocation(line: 64, column: 2, scope: !12726)
!12733 = distinct !DISubprogram(name: "first", scope: !1888, file: !1888, line: 39, type: !12734, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12736)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{!1861}
!12736 = !{!12737}
!12737 = !DILocalVariable(name: "t", scope: !12733, file: !1888, line: 41, type: !12738)
!12738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!12739 = !DILocation(line: 41, column: 19, scope: !12733)
!12740 = !DILocation(line: 0, scope: !12733)
!12741 = !DILocation(line: 43, column: 9, scope: !12733)
!12742 = !DILocation(line: 43, column: 2, scope: !12733)
!12743 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !344, file: !344, line: 443, type: !12744, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12746)
!12744 = !DISubroutineType(types: !12745)
!12745 = !{null, !12738, !12738}
!12746 = !{!12747, !12748, !12749}
!12747 = !DILocalVariable(name: "successor", arg: 1, scope: !12743, file: !344, line: 443, type: !12738)
!12748 = !DILocalVariable(name: "node", arg: 2, scope: !12743, file: !344, line: 443, type: !12738)
!12749 = !DILocalVariable(name: "prev", scope: !12743, file: !344, line: 445, type: !12750)
!12750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12738)
!12751 = !DILocation(line: 0, scope: !12743)
!12752 = !DILocation(line: 445, column: 39, scope: !12743)
!12753 = !DILocation(line: 447, column: 8, scope: !12743)
!12754 = !DILocation(line: 447, column: 13, scope: !12743)
!12755 = !DILocation(line: 448, column: 8, scope: !12743)
!12756 = !DILocation(line: 448, column: 13, scope: !12743)
!12757 = !DILocation(line: 449, column: 8, scope: !12743)
!12758 = !DILocation(line: 449, column: 13, scope: !12743)
!12759 = !DILocation(line: 450, column: 18, scope: !12743)
!12760 = !DILocation(line: 451, column: 1, scope: !12743)
!12761 = distinct !DISubprogram(name: "next", scope: !1888, file: !1888, line: 46, type: !12762, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12764)
!12762 = !DISubroutineType(types: !12763)
!12763 = !{!1861, !1861}
!12764 = !{!12765, !12766}
!12765 = !DILocalVariable(name: "t", arg: 1, scope: !12761, file: !1888, line: 46, type: !1861)
!12766 = !DILocalVariable(name: "n", scope: !12761, file: !1888, line: 48, type: !12738)
!12767 = !DILocation(line: 0, scope: !12761)
!12768 = !DILocation(line: 48, column: 58, scope: !12761)
!12769 = !DILocation(line: 48, column: 19, scope: !12761)
!12770 = !DILocation(line: 50, column: 9, scope: !12761)
!12771 = !DILocation(line: 50, column: 2, scope: !12761)
!12772 = distinct !DISubprogram(name: "sys_dlist_append", scope: !344, file: !344, line: 404, type: !12773, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12776)
!12773 = !DISubroutineType(types: !12774)
!12774 = !{null, !12775, !12738}
!12775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!12776 = !{!12777, !12778, !12779}
!12777 = !DILocalVariable(name: "list", arg: 1, scope: !12772, file: !344, line: 404, type: !12775)
!12778 = !DILocalVariable(name: "node", arg: 2, scope: !12772, file: !344, line: 404, type: !12738)
!12779 = !DILocalVariable(name: "tail", scope: !12772, file: !344, line: 406, type: !12750)
!12780 = !DILocation(line: 0, scope: !12772)
!12781 = !DILocation(line: 406, column: 34, scope: !12772)
!12782 = !DILocation(line: 408, column: 8, scope: !12772)
!12783 = !DILocation(line: 408, column: 13, scope: !12772)
!12784 = !DILocation(line: 409, column: 8, scope: !12772)
!12785 = !DILocation(line: 409, column: 13, scope: !12772)
!12786 = !DILocation(line: 411, column: 8, scope: !12772)
!12787 = !DILocation(line: 411, column: 13, scope: !12772)
!12788 = !DILocation(line: 412, column: 13, scope: !12772)
!12789 = !DILocation(line: 413, column: 1, scope: !12772)
!12790 = distinct !DISubprogram(name: "next_timeout", scope: !1888, file: !1888, line: 67, type: !12727, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12791)
!12791 = !{!12792, !12793, !12794}
!12792 = !DILocalVariable(name: "to", scope: !12790, file: !1888, line: 69, type: !1861)
!12793 = !DILocalVariable(name: "ticks_elapsed", scope: !12790, file: !1888, line: 70, type: !878)
!12794 = !DILocalVariable(name: "ret", scope: !12790, file: !1888, line: 71, type: !878)
!12795 = !DILocation(line: 69, column: 24, scope: !12790)
!12796 = !DILocation(line: 0, scope: !12790)
!12797 = !DILocation(line: 70, column: 26, scope: !12790)
!12798 = !DILocation(line: 73, column: 10, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12790, file: !1888, line: 73, column: 6)
!12800 = !DILocation(line: 73, column: 19, scope: !12799)
!12801 = !DILocation(line: 74, column: 21, scope: !12799)
!12802 = !DILocation(line: 74, column: 30, scope: !12799)
!12803 = !DILocation(line: 74, column: 28, scope: !12799)
!12804 = !DILocation(line: 74, column: 45, scope: !12799)
!12805 = !DILocation(line: 73, column: 6, scope: !12790)
!12806 = !DILocation(line: 77, column: 9, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12799, file: !1888, line: 76, column: 9)
!12808 = !DILocation(line: 0, scope: !12799)
!12809 = !DILocation(line: 81, column: 20, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12790, file: !1888, line: 81, column: 6)
!12811 = !DILocation(line: 81, column: 6, scope: !12810)
!12812 = !DILocation(line: 81, column: 32, scope: !12810)
!12813 = !DILocation(line: 85, column: 2, scope: !12790)
!12814 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !344, file: !344, line: 341, type: !12815, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12817)
!12815 = !DISubroutineType(types: !12816)
!12816 = !{!12738, !12775, !12738}
!12817 = !{!12818, !12819}
!12818 = !DILocalVariable(name: "list", arg: 1, scope: !12814, file: !344, line: 341, type: !12775)
!12819 = !DILocalVariable(name: "node", arg: 2, scope: !12814, file: !344, line: 342, type: !12738)
!12820 = !DILocation(line: 0, scope: !12814)
!12821 = !DILocation(line: 344, column: 15, scope: !12814)
!12822 = !DILocation(line: 344, column: 9, scope: !12814)
!12823 = !DILocation(line: 344, column: 26, scope: !12814)
!12824 = !DILocation(line: 344, column: 2, scope: !12814)
!12825 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !344, file: !344, line: 325, type: !12815, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12826)
!12826 = !{!12827, !12828}
!12827 = !DILocalVariable(name: "list", arg: 1, scope: !12825, file: !344, line: 325, type: !12775)
!12828 = !DILocalVariable(name: "node", arg: 2, scope: !12825, file: !344, line: 326, type: !12738)
!12829 = !DILocation(line: 0, scope: !12825)
!12830 = !DILocation(line: 328, column: 24, scope: !12825)
!12831 = !DILocation(line: 328, column: 15, scope: !12825)
!12832 = !DILocation(line: 328, column: 9, scope: !12825)
!12833 = !DILocation(line: 328, column: 45, scope: !12825)
!12834 = !DILocation(line: 328, column: 2, scope: !12825)
!12835 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !344, file: !344, line: 294, type: !12836, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12838)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{!12738, !12775}
!12838 = !{!12839}
!12839 = !DILocalVariable(name: "list", arg: 1, scope: !12835, file: !344, line: 294, type: !12775)
!12840 = !DILocation(line: 0, scope: !12835)
!12841 = !DILocation(line: 296, column: 9, scope: !12835)
!12842 = !DILocation(line: 296, column: 2, scope: !12835)
!12843 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !344, file: !344, line: 266, type: !12844, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12846)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{!205, !12775}
!12846 = !{!12847}
!12847 = !DILocalVariable(name: "list", arg: 1, scope: !12843, file: !344, line: 266, type: !12775)
!12848 = !DILocation(line: 0, scope: !12843)
!12849 = !DILocation(line: 268, column: 15, scope: !12843)
!12850 = !DILocation(line: 268, column: 20, scope: !12843)
!12851 = !DILocation(line: 268, column: 2, scope: !12843)
!12852 = distinct !DISubprogram(name: "z_abort_timeout", scope: !1888, file: !1888, line: 150, type: !12853, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12855)
!12853 = !DISubroutineType(types: !12854)
!12854 = !{!103, !1861}
!12855 = !{!12856, !12857, !12858, !12860}
!12856 = !DILocalVariable(name: "to", arg: 1, scope: !12852, file: !1888, line: 150, type: !1861)
!12857 = !DILocalVariable(name: "ret", scope: !12852, file: !1888, line: 152, type: !103)
!12858 = !DILocalVariable(name: "__i", scope: !12859, file: !1888, line: 154, type: !12621)
!12859 = distinct !DILexicalBlock(scope: !12852, file: !1888, line: 154, column: 2)
!12860 = !DILocalVariable(name: "__key", scope: !12859, file: !1888, line: 154, type: !12621)
!12861 = !DILocation(line: 0, scope: !12852)
!12862 = !DILocation(line: 0, scope: !12859)
!12863 = !DILocation(line: 0, scope: !12643, inlinedAt: !12864)
!12864 = distinct !DILocation(line: 154, column: 2, scope: !12859)
!12865 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !12866)
!12866 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !12864)
!12867 = !DILocation(line: 0, scope: !12652, inlinedAt: !12866)
!12868 = !DILocation(line: 155, column: 7, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12870, file: !1888, line: 155, column: 7)
!12870 = distinct !DILexicalBlock(scope: !12871, file: !1888, line: 154, column: 24)
!12871 = distinct !DILexicalBlock(scope: !12859, file: !1888, line: 154, column: 2)
!12872 = !DILocation(line: 155, column: 7, scope: !12870)
!12873 = !DILocation(line: 156, column: 4, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12869, file: !1888, line: 155, column: 39)
!12875 = !DILocation(line: 158, column: 3, scope: !12874)
!12876 = !DILocation(line: 0, scope: !12711, inlinedAt: !12877)
!12877 = distinct !DILocation(line: 154, column: 2, scope: !12871)
!12878 = !DILocation(line: 0, scope: !12719, inlinedAt: !12879)
!12879 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !12877)
!12880 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !12879)
!12881 = !DILocation(line: 161, column: 2, scope: !12852)
!12882 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !344, file: !344, line: 225, type: !12883, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12887)
!12883 = !DISubroutineType(types: !12884)
!12884 = !{!205, !12885}
!12885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12886, size: 32)
!12886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1865)
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "node", arg: 1, scope: !12882, file: !344, line: 225, type: !12885)
!12889 = !DILocation(line: 0, scope: !12882)
!12890 = !DILocation(line: 227, column: 15, scope: !12882)
!12891 = !DILocation(line: 227, column: 20, scope: !12882)
!12892 = !DILocation(line: 227, column: 2, scope: !12882)
!12893 = distinct !DISubprogram(name: "remove_timeout", scope: !1888, file: !1888, line: 53, type: !1882, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12894)
!12894 = !{!12895}
!12895 = !DILocalVariable(name: "t", arg: 1, scope: !12893, file: !1888, line: 53, type: !1861)
!12896 = !DILocation(line: 0, scope: !12893)
!12897 = !DILocation(line: 55, column: 6, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12893, file: !1888, line: 55, column: 6)
!12899 = !DILocation(line: 55, column: 14, scope: !12898)
!12900 = !DILocation(line: 55, column: 6, scope: !12893)
!12901 = !DILocation(line: 56, column: 25, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12898, file: !1888, line: 55, column: 23)
!12903 = !DILocation(line: 56, column: 12, scope: !12902)
!12904 = !DILocation(line: 56, column: 19, scope: !12902)
!12905 = !DILocation(line: 57, column: 2, scope: !12902)
!12906 = !DILocation(line: 59, column: 23, scope: !12893)
!12907 = !DILocation(line: 59, column: 2, scope: !12893)
!12908 = !DILocation(line: 60, column: 1, scope: !12893)
!12909 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !344, file: !344, line: 496, type: !12910, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12912)
!12910 = !DISubroutineType(types: !12911)
!12911 = !{null, !12738}
!12912 = !{!12913, !12914, !12915}
!12913 = !DILocalVariable(name: "node", arg: 1, scope: !12909, file: !344, line: 496, type: !12738)
!12914 = !DILocalVariable(name: "prev", scope: !12909, file: !344, line: 498, type: !12750)
!12915 = !DILocalVariable(name: "next", scope: !12909, file: !344, line: 499, type: !12750)
!12916 = !DILocation(line: 0, scope: !12909)
!12917 = !DILocation(line: 498, column: 34, scope: !12909)
!12918 = !DILocation(line: 499, column: 34, scope: !12909)
!12919 = !DILocation(line: 501, column: 8, scope: !12909)
!12920 = !DILocation(line: 501, column: 13, scope: !12909)
!12921 = !DILocation(line: 502, column: 8, scope: !12909)
!12922 = !DILocation(line: 502, column: 13, scope: !12909)
!12923 = !DILocation(line: 503, column: 2, scope: !12909)
!12924 = !DILocation(line: 504, column: 1, scope: !12909)
!12925 = distinct !DISubprogram(name: "sys_dnode_init", scope: !344, file: !344, line: 211, type: !12910, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12926)
!12926 = !{!12927}
!12927 = !DILocalVariable(name: "node", arg: 1, scope: !12925, file: !344, line: 211, type: !12738)
!12928 = !DILocation(line: 0, scope: !12925)
!12929 = !DILocation(line: 213, column: 8, scope: !12925)
!12930 = !DILocation(line: 213, column: 13, scope: !12925)
!12931 = !DILocation(line: 214, column: 8, scope: !12925)
!12932 = !DILocation(line: 214, column: 13, scope: !12925)
!12933 = !DILocation(line: 215, column: 1, scope: !12925)
!12934 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !1888, file: !1888, line: 183, type: !12935, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12939)
!12935 = !DISubroutineType(types: !12936)
!12936 = !{!219, !12937}
!12937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12938, size: 32)
!12938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!12939 = !{!12940, !12941, !12942, !12944}
!12940 = !DILocalVariable(name: "timeout", arg: 1, scope: !12934, file: !1888, line: 183, type: !12937)
!12941 = !DILocalVariable(name: "ticks", scope: !12934, file: !1888, line: 185, type: !219)
!12942 = !DILocalVariable(name: "__i", scope: !12943, file: !1888, line: 187, type: !12621)
!12943 = distinct !DILexicalBlock(scope: !12934, file: !1888, line: 187, column: 2)
!12944 = !DILocalVariable(name: "__key", scope: !12943, file: !1888, line: 187, type: !12621)
!12945 = !DILocation(line: 0, scope: !12934)
!12946 = !DILocation(line: 0, scope: !12943)
!12947 = !DILocation(line: 0, scope: !12643, inlinedAt: !12948)
!12948 = distinct !DILocation(line: 187, column: 2, scope: !12943)
!12949 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !12950)
!12950 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !12948)
!12951 = !DILocation(line: 0, scope: !12652, inlinedAt: !12950)
!12952 = !DILocation(line: 188, column: 11, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !1888, line: 187, column: 24)
!12954 = distinct !DILexicalBlock(scope: !12943, file: !1888, line: 187, column: 2)
!12955 = !DILocation(line: 0, scope: !12711, inlinedAt: !12956)
!12956 = distinct !DILocation(line: 187, column: 2, scope: !12954)
!12957 = !DILocation(line: 0, scope: !12719, inlinedAt: !12958)
!12958 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !12956)
!12959 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !12958)
!12960 = !DILocation(line: 191, column: 2, scope: !12934)
!12961 = distinct !DISubprogram(name: "timeout_rem", scope: !1888, file: !1888, line: 165, type: !12935, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12962)
!12962 = !{!12963, !12964, !12965}
!12963 = !DILocalVariable(name: "timeout", arg: 1, scope: !12961, file: !1888, line: 165, type: !12937)
!12964 = !DILocalVariable(name: "ticks", scope: !12961, file: !1888, line: 167, type: !219)
!12965 = !DILocalVariable(name: "t", scope: !12966, file: !1888, line: 173, type: !1861)
!12966 = distinct !DILexicalBlock(scope: !12961, file: !1888, line: 173, column: 2)
!12967 = !DILocation(line: 0, scope: !12961)
!12968 = !DILocation(line: 169, column: 6, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12961, file: !1888, line: 169, column: 6)
!12970 = !DILocation(line: 169, column: 6, scope: !12961)
!12971 = !DILocation(line: 173, column: 28, scope: !12966)
!12972 = !DILocation(line: 0, scope: !12966)
!12973 = !DILocation(line: 173, column: 39, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12966, file: !1888, line: 173, column: 2)
!12975 = !DILocation(line: 173, column: 2, scope: !12966)
!12976 = !DILocation(line: 174, column: 15, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12974, file: !1888, line: 173, column: 61)
!12978 = !DILocation(line: 174, column: 9, scope: !12977)
!12979 = !DILocation(line: 175, column: 15, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12977, file: !1888, line: 175, column: 7)
!12981 = !DILocation(line: 175, column: 7, scope: !12977)
!12982 = !DILocation(line: 173, column: 52, scope: !12974)
!12983 = distinct !{!12983, !12975, !12984}
!12984 = !DILocation(line: 178, column: 2, scope: !12966)
!12985 = !DILocation(line: 180, column: 17, scope: !12961)
!12986 = !DILocation(line: 180, column: 15, scope: !12961)
!12987 = !DILocation(line: 180, column: 2, scope: !12961)
!12988 = !DILocation(line: 181, column: 1, scope: !12961)
!12989 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !9531, file: !9531, line: 35, type: !12990, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !12992)
!12990 = !DISubroutineType(types: !12991)
!12991 = !{!205, !12937}
!12992 = !{!12993}
!12993 = !DILocalVariable(name: "to", arg: 1, scope: !12989, file: !9531, line: 35, type: !12937)
!12994 = !DILocation(line: 0, scope: !12989)
!12995 = !DILocation(line: 37, column: 35, scope: !12989)
!12996 = !DILocation(line: 37, column: 10, scope: !12989)
!12997 = !DILocation(line: 37, column: 9, scope: !12989)
!12998 = !DILocation(line: 37, column: 2, scope: !12989)
!12999 = distinct !DISubprogram(name: "z_timeout_expires", scope: !1888, file: !1888, line: 194, type: !12935, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13000)
!13000 = !{!13001, !13002, !13003, !13005}
!13001 = !DILocalVariable(name: "timeout", arg: 1, scope: !12999, file: !1888, line: 194, type: !12937)
!13002 = !DILocalVariable(name: "ticks", scope: !12999, file: !1888, line: 196, type: !219)
!13003 = !DILocalVariable(name: "__i", scope: !13004, file: !1888, line: 198, type: !12621)
!13004 = distinct !DILexicalBlock(scope: !12999, file: !1888, line: 198, column: 2)
!13005 = !DILocalVariable(name: "__key", scope: !13004, file: !1888, line: 198, type: !12621)
!13006 = !DILocation(line: 0, scope: !12999)
!13007 = !DILocation(line: 0, scope: !13004)
!13008 = !DILocation(line: 0, scope: !12643, inlinedAt: !13009)
!13009 = distinct !DILocation(line: 198, column: 2, scope: !13004)
!13010 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !13011)
!13011 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !13009)
!13012 = !DILocation(line: 0, scope: !12652, inlinedAt: !13011)
!13013 = !DILocation(line: 199, column: 11, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !1888, line: 198, column: 24)
!13015 = distinct !DILexicalBlock(scope: !13004, file: !1888, line: 198, column: 2)
!13016 = !DILocation(line: 199, column: 23, scope: !13014)
!13017 = !DILocation(line: 0, scope: !12711, inlinedAt: !13018)
!13018 = distinct !DILocation(line: 198, column: 2, scope: !13015)
!13019 = !DILocation(line: 0, scope: !12719, inlinedAt: !13020)
!13020 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !13018)
!13021 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !13020)
!13022 = !DILocation(line: 199, column: 21, scope: !13014)
!13023 = !DILocation(line: 202, column: 2, scope: !12999)
!13024 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !1888, file: !1888, line: 205, type: !12727, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13025)
!13025 = !{!13026, !13027, !13029}
!13026 = !DILocalVariable(name: "ret", scope: !13024, file: !1888, line: 207, type: !878)
!13027 = !DILocalVariable(name: "__i", scope: !13028, file: !1888, line: 209, type: !12621)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !1888, line: 209, column: 2)
!13029 = !DILocalVariable(name: "__key", scope: !13028, file: !1888, line: 209, type: !12621)
!13030 = !DILocation(line: 0, scope: !13024)
!13031 = !DILocation(line: 0, scope: !13028)
!13032 = !DILocation(line: 0, scope: !12643, inlinedAt: !13033)
!13033 = distinct !DILocation(line: 209, column: 2, scope: !13028)
!13034 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !13035)
!13035 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !13033)
!13036 = !DILocation(line: 0, scope: !12652, inlinedAt: !13035)
!13037 = !DILocation(line: 210, column: 9, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13039, file: !1888, line: 209, column: 24)
!13039 = distinct !DILexicalBlock(scope: !13028, file: !1888, line: 209, column: 2)
!13040 = !DILocation(line: 0, scope: !12711, inlinedAt: !13041)
!13041 = distinct !DILocation(line: 209, column: 2, scope: !13039)
!13042 = !DILocation(line: 0, scope: !12719, inlinedAt: !13043)
!13043 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !13041)
!13044 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !13043)
!13045 = !DILocation(line: 212, column: 2, scope: !13024)
!13046 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !1888, file: !1888, line: 215, type: !8329, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13047)
!13047 = !{!13048, !13049, !13050, !13052, !13053, !13056, !13057}
!13048 = !DILocalVariable(name: "ticks", arg: 1, scope: !13046, file: !1888, line: 215, type: !878)
!13049 = !DILocalVariable(name: "is_idle", arg: 2, scope: !13046, file: !1888, line: 215, type: !205)
!13050 = !DILocalVariable(name: "__i", scope: !13051, file: !1888, line: 217, type: !12621)
!13051 = distinct !DILexicalBlock(scope: !13046, file: !1888, line: 217, column: 2)
!13052 = !DILocalVariable(name: "__key", scope: !13051, file: !1888, line: 217, type: !12621)
!13053 = !DILocalVariable(name: "next_to", scope: !13054, file: !1888, line: 218, type: !103)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !1888, line: 217, column: 24)
!13055 = distinct !DILexicalBlock(scope: !13051, file: !1888, line: 217, column: 2)
!13056 = !DILocalVariable(name: "sooner", scope: !13054, file: !1888, line: 219, type: !205)
!13057 = !DILocalVariable(name: "imminent", scope: !13054, file: !1888, line: 221, type: !205)
!13058 = !DILocation(line: 0, scope: !13046)
!13059 = !DILocation(line: 0, scope: !13051)
!13060 = !DILocation(line: 0, scope: !12643, inlinedAt: !13061)
!13061 = distinct !DILocation(line: 217, column: 2, scope: !13051)
!13062 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !13063)
!13063 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !13061)
!13064 = !DILocation(line: 0, scope: !12652, inlinedAt: !13063)
!13065 = !DILocation(line: 218, column: 17, scope: !13054)
!13066 = !DILocation(line: 0, scope: !13054)
!13067 = !DILocation(line: 221, column: 27, scope: !13054)
!13068 = !DILocation(line: 233, column: 17, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13054, file: !1888, line: 233, column: 7)
!13070 = !DILocation(line: 234, column: 26, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13069, file: !1888, line: 233, column: 56)
!13072 = !DILocation(line: 234, column: 4, scope: !13071)
!13073 = !DILocation(line: 235, column: 3, scope: !13071)
!13074 = !DILocation(line: 0, scope: !12711, inlinedAt: !13075)
!13075 = distinct !DILocation(line: 217, column: 2, scope: !13055)
!13076 = !DILocation(line: 0, scope: !12719, inlinedAt: !13077)
!13077 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !13075)
!13078 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !13077)
!13079 = !DILocation(line: 237, column: 1, scope: !13046)
!13080 = distinct !DISubprogram(name: "sys_clock_announce", scope: !1888, file: !1888, line: 239, type: !13081, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13083)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{null, !878}
!13083 = !{!13084, !13085, !13086, !13088}
!13084 = !DILocalVariable(name: "ticks", arg: 1, scope: !13080, file: !1888, line: 239, type: !878)
!13085 = !DILocalVariable(name: "key", scope: !13080, file: !1888, line: 245, type: !12621)
!13086 = !DILocalVariable(name: "t", scope: !13087, file: !1888, line: 262, type: !1861)
!13087 = distinct !DILexicalBlock(scope: !13080, file: !1888, line: 261, column: 67)
!13088 = !DILocalVariable(name: "dt", scope: !13087, file: !1888, line: 263, type: !103)
!13089 = !DILocation(line: 0, scope: !13080)
!13090 = !DILocation(line: 242, column: 2, scope: !13080)
!13091 = !DILocation(line: 0, scope: !12643, inlinedAt: !13092)
!13092 = distinct !DILocation(line: 245, column: 25, scope: !13080)
!13093 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !13094)
!13094 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !13092)
!13095 = !DILocation(line: 0, scope: !12652, inlinedAt: !13094)
!13096 = !DILocation(line: 261, column: 9, scope: !13080)
!13097 = !DILocation(line: 261, column: 17, scope: !13080)
!13098 = !DILocation(line: 261, column: 25, scope: !13080)
!13099 = !DILocation(line: 261, column: 37, scope: !13080)
!13100 = !DILocation(line: 261, column: 47, scope: !13080)
!13101 = !DILocation(line: 261, column: 44, scope: !13080)
!13102 = !DILocation(line: 261, column: 2, scope: !13080)
!13103 = !DILocation(line: 0, scope: !13087)
!13104 = !DILocation(line: 263, column: 12, scope: !13087)
!13105 = !DILocation(line: 265, column: 16, scope: !13087)
!13106 = !DILocation(line: 265, column: 13, scope: !13087)
!13107 = !DILocation(line: 266, column: 13, scope: !13087)
!13108 = !DILocation(line: 267, column: 3, scope: !13087)
!13109 = !DILocation(line: 0, scope: !12711, inlinedAt: !13110)
!13110 = distinct !DILocation(line: 269, column: 3, scope: !13087)
!13111 = !DILocation(line: 0, scope: !12719, inlinedAt: !13112)
!13112 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !13110)
!13113 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !13112)
!13114 = !DILocation(line: 270, column: 6, scope: !13087)
!13115 = !DILocation(line: 270, column: 3, scope: !13087)
!13116 = !DILocation(line: 0, scope: !12643, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 271, column: 9, scope: !13087)
!13118 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !13119)
!13119 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !13117)
!13120 = !DILocation(line: 0, scope: !12652, inlinedAt: !13119)
!13121 = !DILocation(line: 272, column: 22, scope: !13087)
!13122 = distinct !{!13122, !13102, !13123}
!13123 = !DILocation(line: 273, column: 2, scope: !13080)
!13124 = !DILocation(line: 276, column: 19, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13126, file: !1888, line: 275, column: 23)
!13126 = distinct !DILexicalBlock(scope: !13080, file: !1888, line: 275, column: 6)
!13127 = !DILocation(line: 277, column: 2, scope: !13125)
!13128 = !DILocation(line: 279, column: 15, scope: !13080)
!13129 = !DILocation(line: 279, column: 12, scope: !13080)
!13130 = !DILocation(line: 280, column: 21, scope: !13080)
!13131 = !DILocation(line: 282, column: 24, scope: !13080)
!13132 = !DILocation(line: 282, column: 2, scope: !13080)
!13133 = !DILocation(line: 0, scope: !12711, inlinedAt: !13134)
!13134 = distinct !DILocation(line: 284, column: 2, scope: !13080)
!13135 = !DILocation(line: 0, scope: !12719, inlinedAt: !13136)
!13136 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !13134)
!13137 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !13136)
!13138 = !DILocation(line: 285, column: 1, scope: !13080)
!13139 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !1888, file: !1888, line: 287, type: !13140, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13142)
!13140 = !DISubroutineType(types: !13141)
!13141 = !{!221}
!13142 = !{!13143, !13144, !13146}
!13143 = !DILocalVariable(name: "t", scope: !13139, file: !1888, line: 289, type: !1724)
!13144 = !DILocalVariable(name: "__i", scope: !13145, file: !1888, line: 291, type: !12621)
!13145 = distinct !DILexicalBlock(scope: !13139, file: !1888, line: 291, column: 2)
!13146 = !DILocalVariable(name: "__key", scope: !13145, file: !1888, line: 291, type: !12621)
!13147 = !DILocation(line: 0, scope: !13139)
!13148 = !DILocation(line: 0, scope: !13145)
!13149 = !DILocation(line: 0, scope: !12643, inlinedAt: !13150)
!13150 = distinct !DILocation(line: 291, column: 2, scope: !13145)
!13151 = !DILocation(line: 55, column: 2, scope: !12652, inlinedAt: !13152)
!13152 = distinct !DILocation(line: 145, column: 10, scope: !12643, inlinedAt: !13150)
!13153 = !DILocation(line: 0, scope: !12652, inlinedAt: !13152)
!13154 = !DILocation(line: 292, column: 7, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13156, file: !1888, line: 291, column: 24)
!13156 = distinct !DILexicalBlock(scope: !13145, file: !1888, line: 291, column: 2)
!13157 = !DILocation(line: 292, column: 19, scope: !13155)
!13158 = !DILocation(line: 0, scope: !12711, inlinedAt: !13159)
!13159 = distinct !DILocation(line: 291, column: 2, scope: !13156)
!13160 = !DILocation(line: 0, scope: !12719, inlinedAt: !13161)
!13161 = distinct !DILocation(line: 215, column: 2, scope: !12711, inlinedAt: !13159)
!13162 = !DILocation(line: 95, column: 2, scope: !12719, inlinedAt: !13161)
!13163 = !DILocation(line: 292, column: 17, scope: !13155)
!13164 = !DILocation(line: 294, column: 2, scope: !13139)
!13165 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !1888, file: !1888, line: 297, type: !6206, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !336)
!13166 = !DILocation(line: 300, column: 19, scope: !13165)
!13167 = !DILocation(line: 300, column: 9, scope: !13165)
!13168 = !DILocation(line: 300, column: 2, scope: !13165)
!13169 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !1888, file: !1888, line: 306, type: !13140, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !336)
!13170 = !DILocation(line: 308, column: 9, scope: !13169)
!13171 = !DILocation(line: 308, column: 2, scope: !13169)
!13172 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !1888, file: !1888, line: 319, type: !5003, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13173)
!13173 = !{!13174, !13175, !13176, !13177}
!13174 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !13172, file: !1888, line: 319, type: !121)
!13175 = !DILocalVariable(name: "start_cycles", scope: !13172, file: !1888, line: 328, type: !121)
!13176 = !DILocalVariable(name: "cycles_to_wait", scope: !13172, file: !1888, line: 331, type: !121)
!13177 = !DILocalVariable(name: "current_cycles", scope: !13178, file: !1888, line: 338, type: !121)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !1888, line: 337, column: 11)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !1888, line: 337, column: 2)
!13180 = distinct !DILexicalBlock(scope: !13172, file: !1888, line: 337, column: 2)
!13181 = !DILocation(line: 0, scope: !13172)
!13182 = !DILocation(line: 322, column: 19, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13172, file: !1888, line: 322, column: 6)
!13184 = !DILocation(line: 322, column: 6, scope: !13172)
!13185 = !DILocation(line: 328, column: 26, scope: !13172)
!13186 = !DILocation(line: 333, column: 43, scope: !13172)
!13187 = !DILocation(line: 337, column: 2, scope: !13172)
!13188 = !DILocation(line: 338, column: 29, scope: !13178)
!13189 = !DILocation(line: 0, scope: !13178)
!13190 = !DILocation(line: 341, column: 23, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13178, file: !1888, line: 341, column: 7)
!13192 = !DILocation(line: 341, column: 39, scope: !13191)
!13193 = !DILocation(line: 349, column: 1, scope: !13172)
!13194 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !315, file: !315, line: 1675, type: !6206, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !336)
!13195 = !DILocation(line: 1677, column: 9, scope: !13194)
!13196 = !DILocation(line: 1677, column: 2, scope: !13194)
!13197 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !13198, file: !13198, line: 24, type: !6206, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !336)
!13198 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13199 = !DILocation(line: 26, column: 9, scope: !13197)
!13200 = !DILocation(line: 26, column: 2, scope: !13197)
!13201 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !1888, file: !1888, line: 364, type: !13202, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1858, retainedNodes: !13204)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!1724, !12611}
!13204 = !{!13205, !13206}
!13205 = !DILocalVariable(name: "timeout", arg: 1, scope: !13201, file: !1888, line: 364, type: !12611)
!13206 = !DILocalVariable(name: "dt", scope: !13201, file: !1888, line: 366, type: !219)
!13207 = !DILocation(line: 0, scope: !13201)
!13208 = !DILocation(line: 368, column: 6, scope: !13201)
!13209 = !DILocation(line: 371, column: 10, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !1888, line: 370, column: 47)
!13211 = distinct !DILexicalBlock(scope: !13212, file: !1888, line: 370, column: 13)
!13212 = distinct !DILexicalBlock(scope: !13201, file: !1888, line: 368, column: 6)
!13213 = !DILocation(line: 371, column: 3, scope: !13210)
!13214 = !DILocation(line: 376, column: 58, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13216, file: !1888, line: 376, column: 7)
!13216 = distinct !DILexicalBlock(scope: !13211, file: !1888, line: 372, column: 9)
!13217 = !DILocation(line: 376, column: 7, scope: !13216)
!13218 = !DILocation(line: 376, column: 43, scope: !13215)
!13219 = !DILocation(line: 377, column: 4, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13215, file: !1888, line: 376, column: 64)
!13221 = !DILocation(line: 379, column: 10, scope: !13216)
!13222 = !DILocation(line: 379, column: 33, scope: !13216)
!13223 = !DILocation(line: 379, column: 31, scope: !13216)
!13224 = !DILocation(line: 379, column: 3, scope: !13216)
!13225 = !DILocation(line: 0, scope: !13212)
!13226 = !DILocation(line: 381, column: 1, scope: !13201)
!13227 = distinct !DISubprogram(name: "k_free", scope: !13228, file: !13228, line: 43, type: !5394, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2426, retainedNodes: !13229)
!13228 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13229 = !{!13230, !13231}
!13230 = !DILocalVariable(name: "ptr", arg: 1, scope: !13227, file: !13228, line: 43, type: !102)
!13231 = !DILocalVariable(name: "heap_ref", scope: !13227, file: !13228, line: 45, type: !13232)
!13232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13233, size: 32)
!13233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13234, size: 32)
!13234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !13235)
!13235 = !{!13236, !13242, !13261}
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13234, file: !315, line: 5074, baseType: !13237, size: 96)
!13237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !13238)
!13238 = !{!13239, !13240, !13241}
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13237, file: !491, line: 57, baseType: !494, size: 32)
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13237, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13237, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13234, file: !315, line: 5075, baseType: !13243, size: 64, offset: 96)
!13243 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !13244)
!13244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !13245)
!13245 = !{!13246}
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13244, file: !339, line: 232, baseType: !13247, size: 64)
!13247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !13248)
!13248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !344, line: 37, size: 64, elements: !13249)
!13249 = !{!13250, !13256}
!13250 = !DIDerivedType(tag: DW_TAG_member, scope: !13248, file: !344, line: 38, baseType: !13251, size: 32)
!13251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13248, file: !344, line: 38, size: 32, elements: !13252)
!13252 = !{!13253, !13255}
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13251, file: !344, line: 39, baseType: !13254, size: 32)
!13254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13248, size: 32)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13251, file: !344, line: 40, baseType: !13254, size: 32)
!13256 = !DIDerivedType(tag: DW_TAG_member, scope: !13248, file: !344, line: 42, baseType: !13257, size: 32, offset: 32)
!13257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13248, file: !344, line: 42, size: 32, elements: !13258)
!13258 = !{!13259, !13260}
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13257, file: !344, line: 43, baseType: !13254, size: 32)
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13257, file: !344, line: 44, baseType: !13254, size: 32)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13234, file: !315, line: 5076, baseType: !13262, offset: 160)
!13262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!13263 = !DILocation(line: 0, scope: !13227)
!13264 = !DILocation(line: 47, column: 10, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13227, file: !13228, line: 47, column: 6)
!13266 = !DILocation(line: 47, column: 6, scope: !13227)
!13267 = !DILocation(line: 49, column: 9, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13265, file: !13228, line: 47, column: 19)
!13269 = !DILocation(line: 53, column: 15, scope: !13268)
!13270 = !DILocation(line: 53, column: 3, scope: !13268)
!13271 = !DILocation(line: 56, column: 2, scope: !13268)
!13272 = !DILocation(line: 57, column: 1, scope: !13227)
!13273 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !13228, file: !13228, line: 124, type: !13274, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2426, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{!102, !223, !223}
!13276 = !{!13277, !13278, !13279, !13280}
!13277 = !DILocalVariable(name: "align", arg: 1, scope: !13273, file: !13228, line: 124, type: !223)
!13278 = !DILocalVariable(name: "size", arg: 2, scope: !13273, file: !13228, line: 124, type: !223)
!13279 = !DILocalVariable(name: "ret", scope: !13273, file: !13228, line: 126, type: !102)
!13280 = !DILocalVariable(name: "heap", scope: !13273, file: !13228, line: 127, type: !13233)
!13281 = !DILocation(line: 0, scope: !13273)
!13282 = !DILocation(line: 129, column: 6, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13273, file: !13228, line: 129, column: 6)
!13284 = !DILocation(line: 129, column: 6, scope: !13273)
!13285 = !DILocation(line: 132, column: 10, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13283, file: !13228, line: 131, column: 9)
!13287 = !DILocation(line: 132, column: 20, scope: !13286)
!13288 = !DILocation(line: 135, column: 11, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13273, file: !13228, line: 135, column: 6)
!13290 = !DILocation(line: 135, column: 6, scope: !13273)
!13291 = !DILocation(line: 136, column: 9, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13289, file: !13228, line: 135, column: 20)
!13293 = !DILocation(line: 137, column: 2, scope: !13292)
!13294 = !DILocation(line: 0, scope: !13289)
!13295 = !DILocation(line: 141, column: 2, scope: !13273)
!13296 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !13228, file: !13228, line: 12, type: !13297, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2426, retainedNodes: !13299)
!13297 = !DISubroutineType(types: !13298)
!13298 = !{!102, !13233, !223, !223}
!13299 = !{!13300, !13301, !13302, !13303, !13304, !13305}
!13300 = !DILocalVariable(name: "heap", arg: 1, scope: !13296, file: !13228, line: 12, type: !13233)
!13301 = !DILocalVariable(name: "align", arg: 2, scope: !13296, file: !13228, line: 12, type: !223)
!13302 = !DILocalVariable(name: "size", arg: 3, scope: !13296, file: !13228, line: 12, type: !223)
!13303 = !DILocalVariable(name: "mem", scope: !13296, file: !13228, line: 14, type: !102)
!13304 = !DILocalVariable(name: "heap_ref", scope: !13296, file: !13228, line: 15, type: !13232)
!13305 = !DILocalVariable(name: "__align", scope: !13296, file: !13228, line: 16, type: !223)
!13306 = !DILocation(line: 0, scope: !13296)
!13307 = !DILocation(line: 24, column: 6, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13296, file: !13228, line: 24, column: 6)
!13309 = !DILocation(line: 24, column: 6, scope: !13296)
!13310 = !DILocation(line: 27, column: 18, scope: !13296)
!13311 = !DILocation(line: 29, column: 44, scope: !13296)
!13312 = !DILocation(line: 29, column: 8, scope: !13296)
!13313 = !DILocation(line: 30, column: 10, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13296, file: !13228, line: 30, column: 6)
!13315 = !DILocation(line: 30, column: 6, scope: !13296)
!13316 = !DILocation(line: 34, column: 13, scope: !13296)
!13317 = !DILocation(line: 35, column: 12, scope: !13296)
!13318 = !DILocation(line: 36, column: 8, scope: !13296)
!13319 = !DILocation(line: 40, column: 2, scope: !13296)
!13320 = !DILocation(line: 41, column: 1, scope: !13296)
!13321 = distinct !DISubprogram(name: "size_add_overflow", scope: !13322, file: !13322, line: 47, type: !13323, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2426, retainedNodes: !13325)
!13322 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13323 = !DISubroutineType(types: !13324)
!13324 = !{!205, !223, !223, !2002}
!13325 = !{!13326, !13327, !13328}
!13326 = !DILocalVariable(name: "a", arg: 1, scope: !13321, file: !13322, line: 47, type: !223)
!13327 = !DILocalVariable(name: "b", arg: 2, scope: !13321, file: !13322, line: 47, type: !223)
!13328 = !DILocalVariable(name: "result", arg: 3, scope: !13321, file: !13322, line: 47, type: !2002)
!13329 = !DILocation(line: 0, scope: !13321)
!13330 = !DILocation(line: 49, column: 9, scope: !13321)
!13331 = !DILocation(line: 49, column: 2, scope: !13321)
!13332 = distinct !DISubprogram(name: "boot_banner", scope: !13333, file: !13333, line: 26, type: !873, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2428, retainedNodes: !336)
!13333 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13334 = !DILocation(line: 34, column: 2, scope: !13332)
!13335 = !DILocation(line: 36, column: 1, scope: !13332)
!13336 = distinct !DISubprogram(name: "statics_init", scope: !1916, file: !1916, line: 21, type: !1922, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13337)
!13337 = !{!13338, !13339}
!13338 = !DILocalVariable(name: "unused", arg: 1, scope: !13336, file: !1916, line: 21, type: !1924)
!13339 = !DILocalVariable(name: "h", scope: !13340, file: !1916, line: 24, type: !13341)
!13340 = distinct !DILexicalBlock(scope: !13336, file: !1916, line: 24, column: 2)
!13341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13342, size: 32)
!13342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !315, line: 5073, size: 160, elements: !13343)
!13343 = !{!13344, !13350, !13356}
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13342, file: !315, line: 5074, baseType: !13345, size: 96)
!13345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !491, line: 56, size: 96, elements: !13346)
!13346 = !{!13347, !13348, !13349}
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13345, file: !491, line: 57, baseType: !494, size: 32)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13345, file: !491, line: 58, baseType: !102, size: 32, offset: 32)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13345, file: !491, line: 59, baseType: !223, size: 32, offset: 64)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13342, file: !315, line: 5075, baseType: !13351, size: 64, offset: 96)
!13351 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !339, line: 233, baseType: !13352)
!13352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 231, size: 64, elements: !13353)
!13353 = !{!13354}
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13352, file: !339, line: 232, baseType: !13355, size: 64)
!13355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !344, line: 48, baseType: !1902)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13342, file: !315, line: 5076, baseType: !13357, offset: 160)
!13357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !335, line: 43, elements: !336)
!13358 = !DILocation(line: 0, scope: !13336)
!13359 = !DILocation(line: 0, scope: !13340)
!13360 = !DILocation(line: 24, column: 2, scope: !13340)
!13361 = !DILocation(line: 52, column: 2, scope: !13336)
!13362 = !DILocation(line: 49, column: 27, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13364, file: !1916, line: 48, column: 3)
!13364 = distinct !DILexicalBlock(scope: !13365, file: !1916, line: 24, column: 36)
!13365 = distinct !DILexicalBlock(scope: !13340, file: !1916, line: 24, column: 2)
!13366 = !DILocation(line: 49, column: 45, scope: !13363)
!13367 = !DILocation(line: 49, column: 4, scope: !13363)
!13368 = !DILocation(line: 24, column: 2, scope: !13365)
!13369 = !DILocation(line: 24, column: 2, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13365, file: !1916, line: 24, column: 2)
!13371 = distinct !{!13371, !13360, !13372}
!13372 = !DILocation(line: 51, column: 2, scope: !13340)
!13373 = distinct !DISubprogram(name: "k_heap_init", scope: !1916, file: !1916, line: 13, type: !13374, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13376)
!13374 = !DISubroutineType(types: !13375)
!13375 = !{null, !13341, !102, !223}
!13376 = !{!13377, !13378, !13379}
!13377 = !DILocalVariable(name: "h", arg: 1, scope: !13373, file: !1916, line: 13, type: !13341)
!13378 = !DILocalVariable(name: "mem", arg: 2, scope: !13373, file: !1916, line: 13, type: !102)
!13379 = !DILocalVariable(name: "bytes", arg: 3, scope: !13373, file: !1916, line: 13, type: !223)
!13380 = !DILocation(line: 0, scope: !13373)
!13381 = !DILocation(line: 15, column: 19, scope: !13373)
!13382 = !DILocation(line: 15, column: 2, scope: !13373)
!13383 = !DILocation(line: 16, column: 20, scope: !13373)
!13384 = !DILocation(line: 16, column: 2, scope: !13373)
!13385 = !DILocation(line: 19, column: 1, scope: !13373)
!13386 = distinct !DISubprogram(name: "z_waitq_init", scope: !9463, file: !9463, line: 47, type: !13387, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13390)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{null, !13389}
!13389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13351, size: 32)
!13390 = !{!13391}
!13391 = !DILocalVariable(name: "w", arg: 1, scope: !13386, file: !9463, line: 47, type: !13389)
!13392 = !DILocation(line: 0, scope: !13386)
!13393 = !DILocation(line: 49, column: 21, scope: !13386)
!13394 = !DILocation(line: 49, column: 2, scope: !13386)
!13395 = !DILocation(line: 50, column: 1, scope: !13386)
!13396 = distinct !DISubprogram(name: "sys_dlist_init", scope: !344, file: !344, line: 197, type: !13397, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13400)
!13397 = !DISubroutineType(types: !13398)
!13398 = !{null, !13399}
!13399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13355, size: 32)
!13400 = !{!13401}
!13401 = !DILocalVariable(name: "list", arg: 1, scope: !13396, file: !344, line: 197, type: !13399)
!13402 = !DILocation(line: 0, scope: !13396)
!13403 = !DILocation(line: 199, column: 8, scope: !13396)
!13404 = !DILocation(line: 199, column: 13, scope: !13396)
!13405 = !DILocation(line: 200, column: 8, scope: !13396)
!13406 = !DILocation(line: 200, column: 13, scope: !13396)
!13407 = !DILocation(line: 201, column: 1, scope: !13396)
!13408 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !1916, file: !1916, line: 64, type: !13409, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13415)
!13409 = !DISubroutineType(types: !13410)
!13410 = !{!102, !13341, !223, !223, !13411}
!13411 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !220, line: 67, baseType: !13412)
!13412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !220, line: 65, size: 64, elements: !13413)
!13413 = !{!13414}
!13414 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13412, file: !220, line: 66, baseType: !219, size: 64)
!13415 = !{!13416, !13417, !13418, !13419, !13420, !13421, !13422, !13423, !13428}
!13416 = !DILocalVariable(name: "h", arg: 1, scope: !13408, file: !1916, line: 64, type: !13341)
!13417 = !DILocalVariable(name: "align", arg: 2, scope: !13408, file: !1916, line: 64, type: !223)
!13418 = !DILocalVariable(name: "bytes", arg: 3, scope: !13408, file: !1916, line: 64, type: !223)
!13419 = !DILocalVariable(name: "timeout", arg: 4, scope: !13408, file: !1916, line: 65, type: !13411)
!13420 = !DILocalVariable(name: "now", scope: !13408, file: !1916, line: 67, type: !221)
!13421 = !DILocalVariable(name: "end", scope: !13408, file: !1916, line: 67, type: !221)
!13422 = !DILocalVariable(name: "ret", scope: !13408, file: !1916, line: 68, type: !102)
!13423 = !DILocalVariable(name: "key", scope: !13408, file: !1916, line: 72, type: !13424)
!13424 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !335, line: 106, baseType: !13425)
!13425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !335, line: 32, size: 32, elements: !13426)
!13426 = !{!13427}
!13427 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13425, file: !335, line: 33, baseType: !103, size: 32)
!13428 = !DILocalVariable(name: "blocked_alloc", scope: !13408, file: !1916, line: 78, type: !205)
!13429 = !DILocation(line: 0, scope: !13408)
!13430 = !DILocation(line: 67, column: 21, scope: !13408)
!13431 = !DILocation(line: 70, column: 8, scope: !13408)
!13432 = !DILocation(line: 72, column: 41, scope: !13408)
!13433 = !DILocalVariable(name: "l", arg: 1, scope: !13434, file: !335, line: 136, type: !13437)
!13434 = distinct !DISubprogram(name: "k_spin_lock", scope: !335, file: !335, line: 136, type: !13435, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13438)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!13424, !13437}
!13437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13357, size: 32)
!13438 = !{!13433, !13439}
!13439 = !DILocalVariable(name: "k", scope: !13434, file: !335, line: 139, type: !13424)
!13440 = !DILocation(line: 0, scope: !13434, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 72, column: 25, scope: !13408)
!13442 = !DILocation(line: 55, column: 2, scope: !13443, inlinedAt: !13447)
!13443 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4919, file: !4919, line: 42, type: !4920, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13444)
!13444 = !{!13445, !13446}
!13445 = !DILocalVariable(name: "key", scope: !13443, file: !4919, line: 44, type: !32)
!13446 = !DILocalVariable(name: "tmp", scope: !13443, file: !4919, line: 53, type: !32)
!13447 = distinct !DILocation(line: 145, column: 10, scope: !13434, inlinedAt: !13441)
!13448 = !{i64 1321032}
!13449 = !DILocation(line: 0, scope: !13443, inlinedAt: !13447)
!13450 = !DILocation(line: 81, column: 9, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13408, file: !1916, line: 80, column: 22)
!13452 = !DILocation(line: 83, column: 9, scope: !13451)
!13453 = !DILocation(line: 85, column: 12, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13451, file: !1916, line: 84, column: 7)
!13455 = !DILocation(line: 85, column: 21, scope: !13454)
!13456 = !DILocation(line: 85, column: 30, scope: !13454)
!13457 = !DILocation(line: 85, column: 37, scope: !13454)
!13458 = !DILocation(line: 84, column: 7, scope: !13451)
!13459 = !DILocation(line: 99, column: 10, scope: !13451)
!13460 = !DILocation(line: 0, scope: !13434, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 101, column: 9, scope: !13451)
!13462 = !DILocation(line: 55, column: 2, scope: !13443, inlinedAt: !13463)
!13463 = distinct !DILocation(line: 145, column: 10, scope: !13434, inlinedAt: !13461)
!13464 = !DILocation(line: 0, scope: !13443, inlinedAt: !13463)
!13465 = distinct !{!13465, !13466, !13467}
!13466 = !DILocation(line: 80, column: 2, scope: !13408)
!13467 = !DILocation(line: 102, column: 2, scope: !13408)
!13468 = !DILocalVariable(name: "key", arg: 2, scope: !13469, file: !335, line: 190, type: !13424)
!13469 = distinct !DISubprogram(name: "k_spin_unlock", scope: !335, file: !335, line: 189, type: !13470, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13472)
!13470 = !DISubroutineType(types: !13471)
!13471 = !{null, !13437, !13424}
!13472 = !{!13473, !13468}
!13473 = !DILocalVariable(name: "l", arg: 1, scope: !13469, file: !335, line: 189, type: !13437)
!13474 = !DILocation(line: 0, scope: !13469, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 106, column: 2, scope: !13408)
!13476 = !DILocalVariable(name: "key", arg: 1, scope: !13477, file: !4919, line: 84, type: !32)
!13477 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4919, file: !4919, line: 84, type: !4993, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13478)
!13478 = !{!13476}
!13479 = !DILocation(line: 0, scope: !13477, inlinedAt: !13480)
!13480 = distinct !DILocation(line: 215, column: 2, scope: !13469, inlinedAt: !13475)
!13481 = !DILocation(line: 95, column: 2, scope: !13477, inlinedAt: !13480)
!13482 = !{i64 1321849}
!13483 = !DILocation(line: 107, column: 2, scope: !13408)
!13484 = distinct !DISubprogram(name: "k_heap_alloc", scope: !1916, file: !1916, line: 110, type: !13485, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13487)
!13485 = !DISubroutineType(types: !13486)
!13486 = !{!102, !13341, !223, !13411}
!13487 = !{!13488, !13489, !13490, !13491}
!13488 = !DILocalVariable(name: "h", arg: 1, scope: !13484, file: !1916, line: 110, type: !13341)
!13489 = !DILocalVariable(name: "bytes", arg: 2, scope: !13484, file: !1916, line: 110, type: !223)
!13490 = !DILocalVariable(name: "timeout", arg: 3, scope: !13484, file: !1916, line: 110, type: !13411)
!13491 = !DILocalVariable(name: "ret", scope: !13484, file: !1916, line: 114, type: !102)
!13492 = !DILocation(line: 0, scope: !13484)
!13493 = !DILocation(line: 114, column: 14, scope: !13484)
!13494 = !DILocation(line: 118, column: 2, scope: !13484)
!13495 = distinct !DISubprogram(name: "k_heap_free", scope: !1916, file: !1916, line: 121, type: !13496, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1897, retainedNodes: !13498)
!13496 = !DISubroutineType(types: !13497)
!13497 = !{null, !13341, !102}
!13498 = !{!13499, !13500, !13501}
!13499 = !DILocalVariable(name: "h", arg: 1, scope: !13495, file: !1916, line: 121, type: !13341)
!13500 = !DILocalVariable(name: "mem", arg: 2, scope: !13495, file: !1916, line: 121, type: !102)
!13501 = !DILocalVariable(name: "key", scope: !13495, file: !1916, line: 123, type: !13424)
!13502 = !DILocation(line: 0, scope: !13495)
!13503 = !DILocation(line: 0, scope: !13434, inlinedAt: !13504)
!13504 = distinct !DILocation(line: 123, column: 25, scope: !13495)
!13505 = !DILocation(line: 55, column: 2, scope: !13443, inlinedAt: !13506)
!13506 = distinct !DILocation(line: 145, column: 10, scope: !13434, inlinedAt: !13504)
!13507 = !DILocation(line: 0, scope: !13443, inlinedAt: !13506)
!13508 = !DILocation(line: 125, column: 20, scope: !13495)
!13509 = !DILocation(line: 125, column: 2, scope: !13495)
!13510 = !DILocation(line: 128, column: 60, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13495, file: !1916, line: 128, column: 6)
!13512 = !DILocation(line: 128, column: 43, scope: !13511)
!13513 = !DILocation(line: 128, column: 68, scope: !13511)
!13514 = !DILocation(line: 128, column: 6, scope: !13495)
!13515 = !DILocation(line: 123, column: 41, scope: !13495)
!13516 = !DILocation(line: 129, column: 3, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13511, file: !1916, line: 128, column: 74)
!13518 = !DILocation(line: 130, column: 2, scope: !13517)
!13519 = !DILocation(line: 0, scope: !13469, inlinedAt: !13520)
!13520 = distinct !DILocation(line: 131, column: 3, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13511, file: !1916, line: 130, column: 9)
!13522 = !DILocation(line: 0, scope: !13477, inlinedAt: !13523)
!13523 = distinct !DILocation(line: 215, column: 2, scope: !13469, inlinedAt: !13520)
!13524 = !DILocation(line: 95, column: 2, scope: !13477, inlinedAt: !13523)
!13525 = !DILocation(line: 133, column: 1, scope: !13495)
