; ModuleID = 'build/arduino_due/basic/sys_heap/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, i32, i32, i32, [0 x %struct.z_heap_bucket] }
%struct.z_heap_bucket = type { i32 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.wdt_sam_dev_cfg = type { %struct.sys_memory_stats* }
%struct.sys_memory_stats = type { i32, i32, i32 }
%struct.wdt_driver_api = type { i32 (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.wdt_timeout_cfg*)*, i32 (%struct.device*, i32)* }
%struct.wdt_timeout_cfg = type { %struct._thread_arch, void (%struct.device*, i32)*, i8 }
%struct._thread_arch = type { i32, i32 }
%struct.wdt_sam_dev_data = type { void (%struct.device*, i32)*, i32, i8, i8 }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.uart_sam_dev_cfg = type { %struct.Uart*, i32, %struct.pinctrl_dev_config* }
%struct.Uart = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [55 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { i32*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.sys_memory_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.z_heap_stress_result = type { i32, i32, i32, i64 }
%struct.z_heap_stress_rec = type { i8* (i8*, i32)*, void (i8*, i8*)*, i8*, i32, %struct.z_heap_stress_block*, i32, i32, i32, i32 }
%struct.z_heap_stress_block = type { i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.soc_gpio_pin = type { i32, %struct.Pio*, i8, i32 }
%struct.Pio = type { i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, [3 x i32], i32, i32, i32, i32, [4 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32, [1 x i32], i32, i32, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 535120 to i8*), void (i8*)* inttoptr (i32 534325 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [21 x i8] c"System heap sample\0A\0A\00", align 1
@heap = internal global %struct.sys_heap zeroinitializer, align 4, !dbg !25
@heap_mem = internal global [256 x i8] zeroinitializer, align 1, !dbg !105
@.str.1 = private unnamed_addr constant [58 x i8] c"allocated %zu, free %zu, max allocated %zu, heap size %u\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !122
@.str.24 = private unnamed_addr constant [45 x i8] c"Heap at %p contains %d units in %d buckets\0A\0A\00", align 1
@.str.1.25 = private unnamed_addr constant [187 x i8] c"  bucket#    min units        total      largest      largest\0A             threshold       chunks      (units)      (bytes)\0A  -----------------------------------------------------------\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"%9d %12d %12d %12d %12zd\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"\0AChunk dump:\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"chunk %4d: [%c] size=%-4d left=%-4d right=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [72 x i8] c"\0A%zd free bytes, %zd allocated bytes, overhead = %zd bytes (%zd.%zd%%)\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 123456789, align 8, !dbg !131
@.str.28 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [8 x i8*] [i8* bitcast (%struct.init_entry* @__init_atmel_sam3x_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_26 to i8*), i8* bitcast (%struct._isr_list* @wdt_sam_irq_config.__isr_wdt_sam_isr_irq_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_21 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_atmel_sam3x_init = internal constant %struct.init_entry { i32 (%struct.device*)* @atmel_sam3x_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !165
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !268
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !274
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !412
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !447
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 524288, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 537329664, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.51, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !457
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !462
@.str.50 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.51 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !482
@__devicehdl_dts_ord_26 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !548
@.str.53 = private unnamed_addr constant [18 x i8] c"watchdog@400e1a50\00", align 1
@wdt_sam_cfg = internal constant %struct.wdt_sam_dev_cfg { %struct.sys_memory_stats* inttoptr (i32 1074666064 to %struct.sys_memory_stats*) }, align 4, !dbg !557
@wdt_sam_api = internal constant %struct.wdt_driver_api { i32 (%struct.device*, i8)* @wdt_sam_setup, i32 (%struct.device*)* @wdt_sam_disable, i32 (%struct.device*, %struct.wdt_timeout_cfg*)* @wdt_sam_install_timeout, i32 (%struct.device*, i32)* @wdt_sam_feed }, align 4, !dbg !633
@__devstate_dts_ord_26 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !631
@wdt_sam_data = internal global %struct.wdt_sam_dev_data zeroinitializer, align 4, !dbg !635
@__device_dts_ord_26 = dso_local constant %struct.device { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0), i8* bitcast (%struct.wdt_sam_dev_cfg* @wdt_sam_cfg to i8*), i8* bitcast (%struct.wdt_driver_api* @wdt_sam_api to i8*), %struct.device_state* @__devstate_dts_ord_26, i8* bitcast (%struct.wdt_sam_dev_data* @wdt_sam_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_26, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_150_", align 4, !dbg !622
@__init___device_dts_ord_26 = internal constant %struct.init_entry { i32 (%struct.device*)* @wdt_sam_init, %struct.device* @__device_dts_ord_26 }, section ".z_init_PRE_KERNEL_150_", align 4, !dbg !624
@wdt_sam_irq_config.__isr_wdt_sam_isr_irq_0 = internal global %struct._isr_list { i32 4, i32 0, i8* bitcast (void (%struct.device*)* @wdt_sam_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_26 to i8*) }, section ".intList", align 4, !dbg !643
@__devicehdl_dts_ord_21 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !553
@.str.57 = private unnamed_addr constant [14 x i8] c"uart@400e0800\00", align 1
@uart0_sam_config = internal constant %struct.uart_sam_dev_cfg { %struct.Uart* inttoptr (i32 1074661376 to %struct.Uart*), i32 8, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_21 }, align 4, !dbg !667
@uart_sam_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_sam_poll_in, void (%struct.device*, i8)* @uart_sam_poll_out, i32 (%struct.device*)* @uart_sam_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_sam_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_sam_config_get }, align 4, !dbg !772
@__devstate_dts_ord_21 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !770
@uart0_sam_data = internal global %struct.z_heap_bucket { i32 115200 }, align 4, !dbg !774
@__device_dts_ord_21 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), i8* bitcast (%struct.uart_sam_dev_cfg* @uart0_sam_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_sam_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_21, i8* bitcast (%struct.z_heap_bucket* @uart0_sam_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_21, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !761
@__init___device_dts_ord_21 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_sam_init, %struct.device* @__device_dts_ord_21 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !763
@__pinctrl_dev_config__device_dts_ord_21 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_21, i32 0, i32 0), i8 1 }, align 4, !dbg !779
@__pinctrl_states__device_dts_ord_21 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { i32* getelementptr inbounds ([2 x i32], [2 x i32]* @__pinctrl_state_pins_0__device_dts_ord_21, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !798
@__pinctrl_state_pins_0__device_dts_ord_21 = internal constant [2 x i32] [i32 41943041, i32 42991616], align 4, !dbg !801
@switch.table.uart_sam_cfg2sam_parity = private unnamed_addr constant [4 x i32] [i32 512, i32 0, i32 1536, i32 1024], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !839
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1004
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1006
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1002
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !973
@sam_port_addrs = internal unnamed_addr constant [5 x i32] [i32 1074662912, i32 1074663424, i32 1074663936, i32 1074664448, i32 1074664960], align 4, !dbg !1008
@sam_port_periph_id = internal unnamed_addr constant [5 x i32] [i32 11, i32 12, i32 13, i32 14, i32 15], align 4, !dbg !1074
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1079
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1086
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1297
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1306
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1313
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1318
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.81 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.83, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.84, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.86, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1344
@.str.82 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.83 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.84 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.85 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.86 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.87 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1456
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !1470
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !1578
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !1581
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !1583
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1311
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1308
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !1585
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !1621
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1175
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !1619
@.str.140 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2084 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2086, !srcloc !2087
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2088, !srcloc !2089
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2090, !srcloc !2091
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2092, !srcloc !2093
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2094, !srcloc !2095
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2096, !srcloc !2097
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2098, !srcloc !2099
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2100, !srcloc !2101
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2102, !srcloc !2103
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2104, !srcloc !2105
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2106, !srcloc !2107
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2108, !srcloc !2109
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2110, !srcloc !2111
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2112, !srcloc !2113
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2114, !srcloc !2115
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2116, !srcloc !2117
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2118, !srcloc !2119
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2120, !srcloc !2121
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2122, !srcloc !2123
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2124, !srcloc !2125
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2126, !srcloc !2127
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2128, !srcloc !2129
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2130, !srcloc !2131
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2132, !srcloc !2133
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2134, !srcloc !2135
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2136, !srcloc !2137
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2138, !srcloc !2139
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2140, !srcloc !2143
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2144, !srcloc !2145
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2146, !srcloc !2147
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2148, !srcloc !2149
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2150, !srcloc !2151
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2152, !srcloc !2153
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2154, !srcloc !2155
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2156, !srcloc !2157
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2158, !srcloc !2159
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2160, !srcloc !2161
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2162, !srcloc !2163
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2164, !srcloc !2165
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2166, !srcloc !2167
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2168, !srcloc !2169
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2170, !srcloc !2171
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2172, !srcloc !2173
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2174, !srcloc !2175
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2176, !srcloc !2177
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2178, !srcloc !2179
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2180, !srcloc !2181
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2182, !srcloc !2183
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2184, !srcloc !2185
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2186, !srcloc !2187
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2188, !srcloc !2189
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2190, !srcloc !2191
  ret void, !dbg !2192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2195 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0)) #24, !dbg !2198
  tail call void @sys_heap_init(%struct.sys_heap* noundef nonnull @heap, i8* noundef getelementptr inbounds ([256 x i8], [256 x i8]* @heap_mem, i32 0, i32 0), i32 noundef 256) #24, !dbg !2199
  tail call void @print_sys_memory_stats() #25, !dbg !2200
  %1 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull @heap, i32 noundef 150) #24, !dbg !2201
  call void @llvm.dbg.value(metadata i8* %1, metadata !2197, metadata !DIExpression()), !dbg !2202
  tail call void @print_sys_memory_stats() #25, !dbg !2203
  %2 = tail call i8* @sys_heap_aligned_realloc(%struct.sys_heap* noundef nonnull @heap, i8* noundef %1, i32 noundef 0, i32 noundef 100) #24, !dbg !2204
  call void @llvm.dbg.value(metadata i8* %2, metadata !2197, metadata !DIExpression()), !dbg !2202
  tail call void @print_sys_memory_stats() #25, !dbg !2205
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull @heap, i8* noundef %2) #24, !dbg !2206
  tail call void @print_sys_memory_stats() #25, !dbg !2207
  ret void, !dbg !2208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_sys_memory_stats() local_unnamed_addr #1 !dbg !2209 {
  %1 = alloca %struct.sys_memory_stats, align 4
  %2 = bitcast %struct.sys_memory_stats* %1 to i8*, !dbg !2218
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %2) #23, !dbg !2218
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %1, metadata !2211, metadata !DIExpression()), !dbg !2219
  %3 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef nonnull @heap, %struct.sys_memory_stats* noundef nonnull %1) #24, !dbg !2220
  %4 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !2221
  %5 = load i32, i32* %4, align 4, !dbg !2221
  %6 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !2222
  %7 = load i32, i32* %6, align 4, !dbg !2222
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !2223
  %9 = load i32, i32* %8, align 4, !dbg !2223
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef 256) #24, !dbg !2224
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %2) #23, !dbg !2225
  ret void, !dbg !2225
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2228, metadata !DIExpression()), !dbg !2229
  ret i32 0, !dbg !2230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !2231 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2235, metadata !DIExpression()), !dbg !2236
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2237
  ret void, !dbg !2238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !2239 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2242
  ret i8* %1, !dbg !2243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2244 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2256, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata i8* %0, metadata !2255, metadata !DIExpression()), !dbg !2265
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !2266
  ret void, !dbg !2268
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2273, metadata !DIExpression()), !dbg !2275
  call void @llvm.dbg.value(metadata i8* %1, metadata !2274, metadata !DIExpression()), !dbg !2275
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2276
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !2276
  ret i32 %4, !dbg !2277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2278 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2290, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2287, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata i8* %1, metadata !2288, metadata !DIExpression()), !dbg !2291
  call void @llvm.dbg.value(metadata i8* %2, metadata !2289, metadata !DIExpression()), !dbg !2291
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !2292
  ret void, !dbg !2293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !2294 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2298, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata i32 %1, metadata !2299, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata i32 0, metadata !2300, metadata !DIExpression()), !dbg !2301
  %3 = icmp eq i32 %1, 0, !dbg !2302
  br i1 %3, label %13, label %4, !dbg !2305

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2300, metadata !DIExpression()), !dbg !2301
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2306
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !2308
  %8 = load i8, i8* %7, align 1, !dbg !2308
  %9 = zext i8 %8 to i32, !dbg !2308
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !2306
  %11 = add nuw i32 %5, 1, !dbg !2309
  call void @llvm.dbg.value(metadata i32 %11, metadata !2300, metadata !DIExpression()), !dbg !2301
  %12 = icmp eq i32 %11, %1, !dbg !2302
  br i1 %12, label %13, label %4, !dbg !2305, !llvm.loop !2310

13:                                               ; preds = %4, %2
  ret void, !dbg !2312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !2313 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2317, metadata !DIExpression()), !dbg !2319
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !2320
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !2320
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2318, metadata !DIExpression()), !dbg !2321
  call void @llvm.va_start(i8* nonnull %3), !dbg !2322
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !2323
  %5 = load i32, i32* %4, align 4, !dbg !2323
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !2323
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !2323
  call void @llvm.va_end(i8* nonnull %3), !dbg !2324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !2325
  ret void, !dbg !2325
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !2326 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2330, metadata !DIExpression()), !dbg !2335
  call void @llvm.dbg.value(metadata i32 %1, metadata !2331, metadata !DIExpression()), !dbg !2335
  call void @llvm.dbg.value(metadata i8* %2, metadata !2332, metadata !DIExpression()), !dbg !2335
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2336
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !2336
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2333, metadata !DIExpression()), !dbg !2337
  call void @llvm.va_start(i8* nonnull %5), !dbg !2338
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2339
  %7 = load i32, i32* %6, align 4, !dbg !2339
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2339
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !2339
  call void @llvm.dbg.value(metadata i32 %9, metadata !2334, metadata !DIExpression()), !dbg !2335
  call void @llvm.va_end(i8* nonnull %5), !dbg !2340
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !2341
  ret i32 %9, !dbg !2342
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !2343 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !2350, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.value(metadata i8* %0, metadata !2347, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.value(metadata i32 %1, metadata !2348, metadata !DIExpression()), !dbg !2357
  call void @llvm.dbg.value(metadata i8* %2, metadata !2349, metadata !DIExpression()), !dbg !2357
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !2358
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !2358
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !2351, metadata !DIExpression()), !dbg !2359
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !2360
  store i8* %0, i8** %7, align 4, !dbg !2360
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !2360
  store i32 %1, i32* %8, align 4, !dbg !2360
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !2360
  store i32 0, i32* %9, align 4, !dbg !2360
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !2361
  %10 = load i32, i32* %9, align 4, !dbg !2362
  %11 = load i32, i32* %8, align 4, !dbg !2364
  %12 = icmp slt i32 %10, %11, !dbg !2365
  br i1 %12, label %13, label %15, !dbg !2366

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !2367
  store i8 0, i8* %14, align 1, !dbg !2369
  br label %15, !dbg !2370

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !2371
  ret i32 %10, !dbg !2372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !2373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2378, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !2379, metadata !DIExpression()), !dbg !2380
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !2381
  %4 = load i8*, i8** %3, align 4, !dbg !2381
  %5 = icmp eq i8* %4, null, !dbg !2383
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !2384
  br i1 %5, label %12, label %8, !dbg !2385

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !2386
  %10 = load i32, i32* %9, align 4, !dbg !2386
  %11 = icmp slt i32 %7, %10, !dbg !2387
  br i1 %11, label %15, label %12, !dbg !2388

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !2389
  %14 = add nsw i32 %7, 1, !dbg !2391
  store i32 %14, i32* %13, align 4, !dbg !2391
  br label %25, !dbg !2392

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !2393
  %17 = icmp eq i32 %7, %16, !dbg !2395
  br i1 %17, label %18, label %21, !dbg !2396

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !2397
  store i32 %19, i32* %6, align 4, !dbg !2397
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !2399
  store i8 0, i8* %20, align 1, !dbg !2400
  br label %25, !dbg !2401

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !2402
  %23 = add nsw i32 %7, 1, !dbg !2404
  store i32 %23, i32* %6, align 4, !dbg !2404
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !2405
  store i8 %22, i8* %24, align 1, !dbg !2406
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !2407
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !2408 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !2418, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.value(metadata i8* %1, metadata !2419, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.value(metadata i8* %2, metadata !2420, metadata !DIExpression()), !dbg !2422
  call void @llvm.dbg.value(metadata i8* %3, metadata !2421, metadata !DIExpression()), !dbg !2422
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !2423
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !2424
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !2425
  unreachable, !dbg !2426
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !2427 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !2531
  ret %struct.k_thread* %1, !dbg !2532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !2533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2538, metadata !DIExpression()), !dbg !2539
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !2540, !srcloc !2542
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !2543
  ret void, !dbg !2544
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !2545 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !2546, !srcloc !2548
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !2549
  ret %struct.k_thread* %1, !dbg !2550
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !2551 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !2562, metadata !DIExpression()), !dbg !2566
  call void @llvm.dbg.value(metadata i8* %1, metadata !2563, metadata !DIExpression()), !dbg !2566
  %3 = icmp eq i8* %1, null, !dbg !2567
  br i1 %3, label %13, label %4, !dbg !2569

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !2570
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !2570
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !2564, metadata !DIExpression()), !dbg !2566
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !2571, !range !2572
  call void @llvm.dbg.value(metadata i32 %7, metadata !2565, metadata !DIExpression()), !dbg !2566
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #25, !dbg !2573
  %8 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !2574, !range !2575
  %9 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %8) #25, !dbg !2576
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !2577
  %11 = load i32, i32* %10, align 4, !dbg !2578
  %12 = sub i32 %11, %9, !dbg !2578
  store i32 %12, i32* %10, align 4, !dbg !2578
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #25, !dbg !2579
  br label %13

13:                                               ; preds = %2, %4
  ret void, !dbg !2580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !2581 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2585, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.value(metadata i8* %1, metadata !2586, metadata !DIExpression()), !dbg !2589
  call void @llvm.dbg.value(metadata i8* %1, metadata !2587, metadata !DIExpression()), !dbg !2589
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !2590
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !2588, metadata !DIExpression()), !dbg !2589
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !2591
  %5 = ptrtoint i8* %4 to i32, !dbg !2592
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !2592
  %7 = sub i32 %5, %6, !dbg !2592
  %8 = lshr i32 %7, 3, !dbg !2593
  ret i32 %8, !dbg !2594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !2595 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2599, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata i32 %1, metadata !2600, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata i1 %2, metadata !2601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2604
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !2605
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !2602, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !2603, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2604
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !2606
  %6 = bitcast i8* %5 to i16*, !dbg !2606
  %7 = load i16, i16* %6, align 2, !dbg !2606
  %8 = and i16 %7, -2, !dbg !2610
  %9 = zext i1 %2 to i16, !dbg !2610
  %10 = or i16 %8, %9, !dbg !2610
  store i16 %10, i16* %6, align 2, !dbg !2606
  ret void, !dbg !2611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !2612 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2617, metadata !DIExpression()), !dbg !2619
  call void @llvm.dbg.value(metadata i32 %1, metadata !2618, metadata !DIExpression()), !dbg !2619
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !2620
  %4 = lshr i32 %3, 1, !dbg !2621
  ret i32 %4, !dbg !2622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !2623 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2627, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.value(metadata i32 %1, metadata !2628, metadata !DIExpression()), !dbg !2629
  %3 = shl i32 %1, 3, !dbg !2630
  %4 = add i32 %3, -4, !dbg !2631
  ret i32 %4, !dbg !2632
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !2633 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2637, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata i32 %1, metadata !2638, metadata !DIExpression()), !dbg !2639
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2640
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !2642
  br i1 %4, label %7, label %5, !dbg !2643

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !2644
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2646
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !2647
  br label %7, !dbg !2648

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2649, !range !2651
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !2652
  br i1 %9, label %13, label %10, !dbg !2653

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #25, !dbg !2654
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2656, !range !2651
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #25, !dbg !2657
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2658
  call void @llvm.dbg.value(metadata i32 %12, metadata !2638, metadata !DIExpression()), !dbg !2639
  br label %13, !dbg !2659

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !2638, metadata !DIExpression()), !dbg !2639
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #25, !dbg !2660
  ret void, !dbg !2661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !2662 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2666, metadata !DIExpression()), !dbg !2668
  call void @llvm.dbg.value(metadata i32 %1, metadata !2667, metadata !DIExpression()), !dbg !2668
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2669
  %4 = add i32 %3, %1, !dbg !2670
  ret i32 %4, !dbg !2671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !2672 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2676, metadata !DIExpression()), !dbg !2678
  call void @llvm.dbg.value(metadata i32 %1, metadata !2677, metadata !DIExpression()), !dbg !2678
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !2679
  %4 = and i32 %3, 1, !dbg !2680
  %5 = icmp ne i32 %4, 0, !dbg !2679
  ret i1 %5, !dbg !2681
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !2682 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2684, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.value(metadata i32 %1, metadata !2685, metadata !DIExpression()), !dbg !2689
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2690, !range !2575
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !2691
  call void @llvm.dbg.value(metadata i32 %4, metadata !2686, metadata !DIExpression()), !dbg !2692
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !2693
  ret void, !dbg !2694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !2695 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2699, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %1, metadata !2700, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.value(metadata i32 %2, metadata !2701, metadata !DIExpression()), !dbg !2703
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2704
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !2705
  %6 = add i32 %5, %4, !dbg !2706
  call void @llvm.dbg.value(metadata i32 %6, metadata !2702, metadata !DIExpression()), !dbg !2703
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #25, !dbg !2707
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !2708
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !2709
  ret void, !dbg !2710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !2711 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2713, metadata !DIExpression()), !dbg !2715
  call void @llvm.dbg.value(metadata i32 %1, metadata !2714, metadata !DIExpression()), !dbg !2715
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !2716
  %4 = sub i32 %1, %3, !dbg !2717
  ret i32 %4, !dbg !2718
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !2719 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2721, metadata !DIExpression()), !dbg !2726
  call void @llvm.dbg.value(metadata i32 %1, metadata !2722, metadata !DIExpression()), !dbg !2726
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2727, !range !2575
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #25, !dbg !2728
  call void @llvm.dbg.value(metadata i32 %4, metadata !2723, metadata !DIExpression()), !dbg !2729
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #25, !dbg !2730
  ret void, !dbg !2731
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !2732 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2736, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.value(metadata i32 %1, metadata !2737, metadata !DIExpression()), !dbg !2739
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #25, !dbg !2740
  %4 = add i32 %1, 1, !dbg !2741
  %5 = sub i32 %4, %3, !dbg !2742
  call void @llvm.dbg.value(metadata i32 %5, metadata !2738, metadata !DIExpression()), !dbg !2739
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !2743, !range !2744
  %7 = sub nsw i32 31, %6, !dbg !2745
  ret i32 %7, !dbg !2746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !2747 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2751, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata i32 %1, metadata !2752, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata i32 %2, metadata !2753, metadata !DIExpression()), !dbg !2760
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !2754, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !2760
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, i32 0, !dbg !2761
  %5 = load i32, i32* %4, align 4, !dbg !2761
  %6 = icmp eq i32 %5, 0, !dbg !2762
  br i1 %6, label %7, label %12, !dbg !2763

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !2764
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !2766
  %10 = load i32, i32* %9, align 4, !dbg !2767
  %11 = or i32 %10, %8, !dbg !2767
  store i32 %11, i32* %9, align 4, !dbg !2767
  store i32 %1, i32* %4, align 4, !dbg !2768
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !2769
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #25, !dbg !2770
  br label %14, !dbg !2771

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !2756, metadata !DIExpression()), !dbg !2772
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #25, !dbg !2773, !range !2774
  call void @llvm.dbg.value(metadata i32 %13, metadata !2759, metadata !DIExpression()), !dbg !2772
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #25, !dbg !2775
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #25, !dbg !2776
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #25, !dbg !2777
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #25, !dbg !2778
  br label %14

14:                                               ; preds = %12, %7
  %15 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !2779, !range !2575
  %16 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %15) #25, !dbg !2780
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !2781
  %18 = load i32, i32* %17, align 4, !dbg !2782
  %19 = add i32 %18, %16, !dbg !2782
  store i32 %19, i32* %17, align 4, !dbg !2782
  ret void, !dbg !2783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !2784 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2786, metadata !DIExpression()), !dbg !2789
  call void @llvm.dbg.value(metadata i32 %1, metadata !2787, metadata !DIExpression()), !dbg !2789
  call void @llvm.dbg.value(metadata i32 %2, metadata !2788, metadata !DIExpression()), !dbg !2789
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #25, !dbg !2790
  ret void, !dbg !2791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !2792 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2794, metadata !DIExpression()), !dbg !2797
  call void @llvm.dbg.value(metadata i32 %1, metadata !2795, metadata !DIExpression()), !dbg !2797
  call void @llvm.dbg.value(metadata i32 %2, metadata !2796, metadata !DIExpression()), !dbg !2797
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #25, !dbg !2798
  ret void, !dbg !2799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !2800 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2802, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.value(metadata i32 %1, metadata !2803, metadata !DIExpression()), !dbg !2804
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !2805
  ret i32 %3, !dbg !2806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !2807 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2811, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i32 %1, metadata !2812, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata i32 %2, metadata !2813, metadata !DIExpression()), !dbg !2816
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !2817
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !2814, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !2815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2816
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !2815, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2816
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !2818
  call void @llvm.dbg.value(metadata i8* %5, metadata !2815, metadata !DIExpression()), !dbg !2816
  %6 = bitcast i8* %5 to i16*, !dbg !2819
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !2822
  %8 = load i16, i16* %7, align 2, !dbg !2822
  %9 = zext i16 %8 to i32, !dbg !2822
  ret i32 %9, !dbg !2823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !2824 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2828, metadata !DIExpression()), !dbg !2829
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !2830
  ret %struct.chunk_unit_t* %2, !dbg !2831
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !2832 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2836, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.value(metadata i32 %1, metadata !2837, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.value(metadata i32 %2, metadata !2838, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.value(metadata i32 %3, metadata !2839, metadata !DIExpression()), !dbg !2842
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !2843
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !2840, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !2841, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2842
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !2844
  call void @llvm.dbg.value(metadata i8* %6, metadata !2841, metadata !DIExpression()), !dbg !2842
  %7 = trunc i32 %3 to i16, !dbg !2845
  %8 = bitcast i8* %6 to i16*, !dbg !2848
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !2849
  store i16 %7, i16* %9, align 2, !dbg !2850
  ret void, !dbg !2851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !2852 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2856, metadata !DIExpression()), !dbg !2857
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #25, !dbg !2858
  ret i32 %2, !dbg !2859
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !2860 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2864, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.value(metadata i32 %1, metadata !2865, metadata !DIExpression()), !dbg !2866
  %3 = add i32 %1, 4, !dbg !2867
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #25, !dbg !2868
  ret i32 %4, !dbg !2869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !2870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2874, metadata !DIExpression()), !dbg !2875
  %2 = add i32 %0, 7, !dbg !2876
  %3 = lshr i32 %2, 3, !dbg !2877
  ret i32 %3, !dbg !2878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !2879 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2883, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.value(metadata i32 %1, metadata !2884, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.value(metadata i32 %2, metadata !2885, metadata !DIExpression()), !dbg !2886
  %4 = shl i32 %2, 1, !dbg !2887
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #25, !dbg !2888
  ret void, !dbg !2889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !2890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2892, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata i32 %1, metadata !2893, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.value(metadata i32 %2, metadata !2894, metadata !DIExpression()), !dbg !2895
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #25, !dbg !2896
  ret void, !dbg !2897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !2898 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2900, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.value(metadata i32 %1, metadata !2901, metadata !DIExpression()), !dbg !2908
  call void @llvm.dbg.value(metadata i32 %2, metadata !2902, metadata !DIExpression()), !dbg !2908
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %2, !dbg !2909
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !2903, metadata !DIExpression()), !dbg !2908
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2910
  %6 = icmp eq i32 %5, %1, !dbg !2911
  br i1 %6, label %7, label %14, !dbg !2912

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !2913
  %9 = xor i32 %8, -1, !dbg !2915
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !2916
  %11 = load i32, i32* %10, align 4, !dbg !2917
  %12 = and i32 %11, %9, !dbg !2917
  store i32 %12, i32* %10, align 4, !dbg !2917
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !2918
  store i32 0, i32* %13, align 4, !dbg !2919
  br label %17, !dbg !2920

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !2921
  call void @llvm.dbg.value(metadata i32 %15, metadata !2904, metadata !DIExpression()), !dbg !2922
  call void @llvm.dbg.value(metadata i32 %5, metadata !2907, metadata !DIExpression()), !dbg !2922
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !2923
  store i32 %5, i32* %16, align 4, !dbg !2924
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #25, !dbg !2925
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #25, !dbg !2926
  br label %17

17:                                               ; preds = %14, %7
  %18 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !2927, !range !2575
  %19 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef nonnull %0, i32 noundef %18) #25, !dbg !2928
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, !dbg !2929
  %21 = load i32, i32* %20, align 4, !dbg !2930
  %22 = sub i32 %21, %19, !dbg !2930
  store i32 %22, i32* %20, align 4, !dbg !2930
  ret void, !dbg !2931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !2932 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !2934, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.value(metadata i32 %1, metadata !2935, metadata !DIExpression()), !dbg !2936
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !2937
  ret i32 %3, !dbg !2938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !2939 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !2943, metadata !DIExpression()), !dbg !2950
  call void @llvm.dbg.value(metadata i8* %1, metadata !2944, metadata !DIExpression()), !dbg !2950
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !2951
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !2951
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !2945, metadata !DIExpression()), !dbg !2950
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #25, !dbg !2952
  call void @llvm.dbg.value(metadata i32 %5, metadata !2946, metadata !DIExpression()), !dbg !2950
  %6 = ptrtoint i8* %1 to i32, !dbg !2953
  call void @llvm.dbg.value(metadata i32 %6, metadata !2947, metadata !DIExpression()), !dbg !2950
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #25, !dbg !2954
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !2954
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !2955
  call void @llvm.dbg.value(metadata i32 %9, metadata !2948, metadata !DIExpression()), !dbg !2950
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #25, !dbg !2956
  %11 = shl i32 %10, 3, !dbg !2957
  call void @llvm.dbg.value(metadata i32 %11, metadata !2949, metadata !DIExpression()), !dbg !2950
  %12 = sub i32 %9, %6, !dbg !2958
  %13 = add i32 %12, %11, !dbg !2959
  ret i32 %13, !dbg !2960
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !2961 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !2965, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.value(metadata i32 %1, metadata !2966, metadata !DIExpression()), !dbg !2971
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !2972
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !2972
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !2967, metadata !DIExpression()), !dbg !2971
  %5 = icmp eq i32 %1, 0, !dbg !2973
  br i1 %5, label %21, label %6, !dbg !2975

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !2976
  br i1 %7, label %21, label %8, !dbg !2977

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #25, !dbg !2978, !range !2572
  call void @llvm.dbg.value(metadata i32 %9, metadata !2969, metadata !DIExpression()), !dbg !2971
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #25, !dbg !2979
  call void @llvm.dbg.value(metadata i32 %10, metadata !2970, metadata !DIExpression()), !dbg !2971
  %11 = icmp eq i32 %10, 0, !dbg !2980
  br i1 %11, label %21, label %12, !dbg !2982

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !2983
  %14 = icmp ugt i32 %13, %9, !dbg !2985
  br i1 %14, label %15, label %17, !dbg !2986

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !2987
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #25, !dbg !2989
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #25, !dbg !2990
  br label %17, !dbg !2991

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #25, !dbg !2992
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !2993
  call void @llvm.dbg.value(metadata i8* %18, metadata !2968, metadata !DIExpression()), !dbg !2971
  %19 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #25, !dbg !2994, !range !2575
  %20 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %4, i32 noundef %19) #25, !dbg !2995, !range !2996
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %4, i32 noundef %20) #25, !dbg !2997
  br label %21, !dbg !2998

21:                                               ; preds = %17, %8, %2, %6
  %22 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !2971
  ret i8* %22, !dbg !2999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3000 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3004, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.value(metadata i32 %1, metadata !3005, metadata !DIExpression()), !dbg !3006
  %3 = lshr i32 %1, 3, !dbg !3007
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3008
  %5 = load i32, i32* %4, align 4, !dbg !3008
  %6 = icmp uge i32 %3, %5, !dbg !3009
  ret i1 %6, !dbg !3010
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3011 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3015, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.value(metadata i32 %1, metadata !3016, metadata !DIExpression()), !dbg !3030
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3031
  call void @llvm.dbg.value(metadata i32 %3, metadata !3017, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !3018, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 28, DW_OP_stack_value)), !dbg !3030
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %3, i32 0, !dbg !3032
  %5 = load i32, i32* %4, align 4, !dbg !3032
  %6 = icmp eq i32 %5, 0, !dbg !3033
  br i1 %6, label %19, label %7, !dbg !3034

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !3035
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !3036
  call void @llvm.dbg.value(metadata i32 %9, metadata !3022, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.value(metadata i32 %8, metadata !3023, metadata !DIExpression()), !dbg !3037
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !3038
  %11 = icmp ult i32 %10, %1, !dbg !3040
  br i1 %11, label %13, label %12, !dbg !3041

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #25, !dbg !3042
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #25, !dbg !3044
  store i32 %14, i32* %4, align 4, !dbg !3045
  %15 = add nsw i32 %9, -1, !dbg !3046
  call void @llvm.dbg.value(metadata i32 %15, metadata !3022, metadata !DIExpression()), !dbg !3036
  %16 = icmp eq i32 %15, 0, !dbg !3046
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !3047
  br i1 %18, label %19, label %7, !dbg !3047, !llvm.loop !3048

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3051
  %21 = load i32, i32* %20, align 4, !dbg !3051
  %22 = add nsw i32 %3, 1, !dbg !3052
  %23 = shl nsw i32 -1, %22, !dbg !3052
  %24 = and i32 %21, %23, !dbg !3053
  call void @llvm.dbg.value(metadata i32 %24, metadata !3025, metadata !DIExpression()), !dbg !3030
  %25 = icmp eq i32 %24, 0, !dbg !3054
  br i1 %25, label %30, label %26, !dbg !3055

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !3056, !range !2744
  call void @llvm.dbg.value(metadata i32 %27, metadata !3026, metadata !DIExpression()), !dbg !3057
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %27, i32 0, !dbg !3058
  %29 = load i32, i32* %28, align 4, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %29, metadata !3029, metadata !DIExpression()), !dbg !3057
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #25, !dbg !3059
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !3030
  ret i32 %31, !dbg !3060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3061 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3063, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.value(metadata i32 %1, metadata !3064, metadata !DIExpression()), !dbg !3069
  call void @llvm.dbg.value(metadata i32 %2, metadata !3065, metadata !DIExpression()), !dbg !3069
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3070
  call void @llvm.dbg.value(metadata i32 %4, metadata !3066, metadata !DIExpression()), !dbg !3069
  %5 = sub i32 %2, %1, !dbg !3071
  call void @llvm.dbg.value(metadata i32 %5, metadata !3067, metadata !DIExpression()), !dbg !3069
  %6 = sub i32 %4, %5, !dbg !3072
  call void @llvm.dbg.value(metadata i32 %6, metadata !3068, metadata !DIExpression()), !dbg !3069
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #25, !dbg !3073
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #25, !dbg !3074
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #25, !dbg !3075
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #25, !dbg !3076
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #25, !dbg !3077
  ret void, !dbg !3078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3079 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3083, metadata !DIExpression()), !dbg !3087
  call void @llvm.dbg.value(metadata i32 %1, metadata !3084, metadata !DIExpression()), !dbg !3087
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #25, !dbg !3088
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3085, metadata !DIExpression()), !dbg !3087
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !3089
  call void @llvm.dbg.value(metadata i8* %4, metadata !3086, metadata !DIExpression()), !dbg !3087
  ret i8* %4, !dbg !3090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @increase_allocated_bytes(%struct.z_heap* nocapture noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !3091 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3095, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.value(metadata i32 %1, metadata !3096, metadata !DIExpression()), !dbg !3097
  %3 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 4, !dbg !3098
  %4 = load i32, i32* %3, align 4, !dbg !3099
  %5 = add i32 %4, %1, !dbg !3099
  store i32 %5, i32* %3, align 4, !dbg !3099
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 5, !dbg !3100
  %7 = load i32, i32* %6, align 4, !dbg !3100
  %8 = icmp ugt i32 %7, %5, !dbg !3100
  %9 = select i1 %8, i32 %7, i32 %5, !dbg !3100
  store i32 %9, i32* %6, align 4, !dbg !3101
  ret void, !dbg !3102
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3103 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3107, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.value(metadata i32 %1, metadata !3108, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.value(metadata i32 %2, metadata !3109, metadata !DIExpression()), !dbg !3119
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3120
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !3120
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !3110, metadata !DIExpression()), !dbg !3119
  %6 = sub i32 0, %1, !dbg !3121
  %7 = and i32 %6, %1, !dbg !3122
  call void @llvm.dbg.value(metadata i32 %7, metadata !3112, metadata !DIExpression()), !dbg !3119
  %8 = icmp eq i32 %7, %1, !dbg !3123
  br i1 %8, label %13, label %9, !dbg !3125

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !3126
  call void @llvm.dbg.value(metadata i32 %10, metadata !3108, metadata !DIExpression()), !dbg !3119
  %11 = icmp ult i32 %7, 4, !dbg !3128
  %12 = select i1 %11, i32 %7, i32 4, !dbg !3128
  br label %17, !dbg !3128

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !3129
  br i1 %14, label %15, label %17, !dbg !3132

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #25, !dbg !3133
  br label %59, !dbg !3135

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !3119
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !3136
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !3108, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.value(metadata i32 %19, metadata !3111, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.value(metadata i32 %18, metadata !3112, metadata !DIExpression()), !dbg !3119
  %21 = icmp eq i32 %2, 0, !dbg !3137
  br i1 %21, label %59, label %22, !dbg !3139

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #25, !dbg !3140
  br i1 %23, label %59, label %24, !dbg !3141

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !3142
  %26 = add i32 %25, %20, !dbg !3143
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #25, !dbg !3144, !range !2572
  call void @llvm.dbg.value(metadata i32 %27, metadata !3113, metadata !DIExpression()), !dbg !3119
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #25, !dbg !3145
  call void @llvm.dbg.value(metadata i32 %28, metadata !3114, metadata !DIExpression()), !dbg !3119
  %29 = icmp eq i32 %28, 0, !dbg !3146
  br i1 %29, label %59, label %30, !dbg !3148

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !3149
  call void @llvm.dbg.value(metadata i8* %31, metadata !3115, metadata !DIExpression()), !dbg !3119
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !3150
  %33 = ptrtoint i8* %32 to i32, !dbg !3150
  %34 = add i32 %20, -1, !dbg !3150
  %35 = add i32 %34, %33, !dbg !3150
  %36 = sub i32 0, %20, !dbg !3150
  %37 = and i32 %35, %36, !dbg !3150
  %38 = inttoptr i32 %37 to i8*, !dbg !3151
  %39 = sub i32 0, %18, !dbg !3152
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !3152
  call void @llvm.dbg.value(metadata i8* %40, metadata !3115, metadata !DIExpression()), !dbg !3119
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !3153
  %42 = ptrtoint i8* %41 to i32, !dbg !3153
  %43 = add i32 %42, 7, !dbg !3153
  %44 = and i32 %43, -8, !dbg !3153
  call void @llvm.dbg.value(metadata i32 %44, metadata !3116, metadata !DIExpression()), !dbg !3119
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #25, !dbg !3154
  call void @llvm.dbg.value(metadata i32 %45, metadata !3117, metadata !DIExpression()), !dbg !3119
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #25, !dbg !3155
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !3156
  %48 = sub i32 %44, %47, !dbg !3156
  %49 = ashr exact i32 %48, 3, !dbg !3156
  call void @llvm.dbg.value(metadata i32 %49, metadata !3118, metadata !DIExpression()), !dbg !3119
  %50 = icmp ugt i32 %45, %28, !dbg !3157
  br i1 %50, label %51, label %52, !dbg !3159

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #25, !dbg !3160
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #25, !dbg !3162
  br label %52, !dbg !3163

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #25, !dbg !3164
  %54 = icmp ugt i32 %53, %49, !dbg !3166
  br i1 %54, label %55, label %56, !dbg !3167

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #25, !dbg !3168
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #25, !dbg !3170
  br label %56, !dbg !3171

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #25, !dbg !3172
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %5, i32 noundef %45) #25, !dbg !3173, !range !2575
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %5, i32 noundef %57) #25, !dbg !3174, !range !2996
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %5, i32 noundef %58) #25, !dbg !3175
  br label %59

59:                                               ; preds = %56, %24, %17, %22, %15
  %60 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !3119
  ret i8* %60, !dbg !3176
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !3177 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3181, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.value(metadata i8* %1, metadata !3182, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.value(metadata i32 %2, metadata !3183, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.value(metadata i32 %3, metadata !3184, metadata !DIExpression()), !dbg !3200
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3201
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3201
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3185, metadata !DIExpression()), !dbg !3200
  %7 = icmp eq i8* %1, null, !dbg !3202
  br i1 %7, label %8, label %10, !dbg !3204

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !3205
  br label %65, !dbg !3207

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !3208
  br i1 %11, label %12, label %13, !dbg !3210

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !3211
  br label %65, !dbg !3213

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #25, !dbg !3214
  br i1 %14, label %65, label %15, !dbg !3216

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #25, !dbg !3217, !range !2572
  call void @llvm.dbg.value(metadata i32 %16, metadata !3186, metadata !DIExpression()), !dbg !3200
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !3218
  call void @llvm.dbg.value(metadata i32 %17, metadata !3187, metadata !DIExpression()), !dbg !3200
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !3219
  %19 = ptrtoint i8* %1 to i32, !dbg !3220
  %20 = ptrtoint i8* %18 to i32, !dbg !3220
  %21 = sub i32 %19, %20, !dbg !3220
  call void @llvm.dbg.value(metadata i32 %21, metadata !3188, metadata !DIExpression()), !dbg !3200
  %22 = add i32 %21, %3, !dbg !3221
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #25, !dbg !3222
  call void @llvm.dbg.value(metadata i32 %23, metadata !3189, metadata !DIExpression()), !dbg !3200
  %24 = icmp eq i32 %2, 0, !dbg !3223
  br i1 %24, label %29, label %25, !dbg !3224

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !3225
  %27 = and i32 %26, %19, !dbg !3226
  %28 = icmp eq i32 %27, 0, !dbg !3226
  br i1 %28, label %29, label %55, !dbg !3227

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !3228
  %31 = icmp eq i32 %23, %30, !dbg !3229
  br i1 %31, label %65, label %32, !dbg !3230

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !3231
  br i1 %33, label %34, label %41, !dbg !3232

34:                                               ; preds = %32
  %35 = sub i32 %23, %30, !dbg !3233
  %36 = shl i32 %35, 3, !dbg !3235
  %37 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 4, !dbg !3236
  %38 = load i32, i32* %37, align 4, !dbg !3237
  %39 = add i32 %38, %36, !dbg !3237
  store i32 %39, i32* %37, align 4, !dbg !3237
  %40 = add i32 %23, %16, !dbg !3238
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %40) #25, !dbg !3239
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !3240
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %40) #25, !dbg !3241
  br label %65, !dbg !3242

41:                                               ; preds = %32
  %42 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !3243
  br i1 %42, label %55, label %43, !dbg !3244

43:                                               ; preds = %41
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !3245
  %45 = add i32 %44, %30, !dbg !3246
  %46 = icmp ult i32 %45, %23, !dbg !3247
  br i1 %46, label %55, label %47, !dbg !3248

47:                                               ; preds = %43
  %48 = sub i32 %23, %30, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %48, metadata !3190, metadata !DIExpression()), !dbg !3250
  %49 = shl i32 %48, 3, !dbg !3251
  tail call fastcc void @increase_allocated_bytes(%struct.z_heap* noundef %6, i32 noundef %49) #25, !dbg !3252
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !3253
  %50 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #25, !dbg !3254
  %51 = icmp ult i32 %48, %50, !dbg !3256
  br i1 %51, label %52, label %54, !dbg !3257

52:                                               ; preds = %47
  %53 = add i32 %48, %17, !dbg !3258
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %53) #25, !dbg !3260
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %53) #25, !dbg !3261
  br label %54, !dbg !3262

54:                                               ; preds = %52, %47
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #25, !dbg !3263
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #25, !dbg !3264
  br label %65

55:                                               ; preds = %43, %41, %25
  %56 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #25, !dbg !3265
  call void @llvm.dbg.value(metadata i8* %56, metadata !3196, metadata !DIExpression()), !dbg !3200
  %57 = icmp eq i8* %56, null, !dbg !3266
  br i1 %57, label %65, label %58, !dbg !3267

58:                                               ; preds = %55
  %59 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #25, !dbg !3268, !range !2575
  %60 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %59) #25, !dbg !3269
  %61 = sub i32 %60, %21, !dbg !3270
  call void @llvm.dbg.value(metadata i32 %61, metadata !3197, metadata !DIExpression()), !dbg !3271
  %62 = icmp ult i32 %61, %3, !dbg !3272
  %63 = select i1 %62, i32 %61, i32 %3, !dbg !3272
  %64 = tail call i8* @memcpy(i8* noundef nonnull %56, i8* noundef nonnull %1, i32 noundef %63) #24, !dbg !3273
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #25, !dbg !3274
  br label %65, !dbg !3275

65:                                               ; preds = %34, %54, %29, %58, %55, %13, %12, %8
  %66 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %54 ], [ %1, %29 ], [ %56, %58 ], [ null, %55 ], !dbg !3200
  ret i8* %66, !dbg !3276
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !3277 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3281, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i8* %1, metadata !3282, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i32 %2, metadata !3283, metadata !DIExpression()), !dbg !3292
  %4 = add i32 %2, -4, !dbg !3293
  call void @llvm.dbg.value(metadata i32 %4, metadata !3283, metadata !DIExpression()), !dbg !3292
  %5 = ptrtoint i8* %1 to i32, !dbg !3294
  %6 = add i32 %5, 7, !dbg !3294
  %7 = and i32 %6, -8, !dbg !3294
  call void @llvm.dbg.value(metadata i32 %7, metadata !3284, metadata !DIExpression()), !dbg !3292
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !3295
  %9 = ptrtoint i8* %8 to i32, !dbg !3295
  %10 = and i32 %9, -8, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %10, metadata !3285, metadata !DIExpression()), !dbg !3292
  %11 = sub i32 %10, %7, !dbg !3296
  %12 = lshr exact i32 %11, 3, !dbg !3297
  call void @llvm.dbg.value(metadata i32 %12, metadata !3286, metadata !DIExpression()), !dbg !3292
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !3298
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !3287, metadata !DIExpression()), !dbg !3292
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3299
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !3300
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !3301
  store i32 %12, i32* %15, align 8, !dbg !3302
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !3303
  store i32 0, i32* %16, align 4, !dbg !3304
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, !dbg !3305
  store i32 0, i32* %17, align 8, !dbg !3306
  %18 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 4, !dbg !3307
  store i32 0, i32* %18, align 4, !dbg !3308
  %19 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 5, !dbg !3309
  store i32 0, i32* %19, align 8, !dbg !3310
  %20 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #25, !dbg !3311
  call void @llvm.dbg.value(metadata i32 %20, metadata !3288, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3292
  %21 = shl i32 %20, 2, !dbg !3312
  %22 = add i32 %21, 32, !dbg !3313
  %23 = tail call fastcc i32 @chunksz(i32 noundef %22) #25, !dbg !3314
  call void @llvm.dbg.value(metadata i32 %23, metadata !3289, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.value(metadata i32 0, metadata !3290, metadata !DIExpression()), !dbg !3315
  %24 = icmp slt i32 %20, 0, !dbg !3316
  br i1 %24, label %25, label %27, !dbg !3318

25:                                               ; preds = %27, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %23) #25, !dbg !3319
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #25, !dbg !3320
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #25, !dbg !3321
  %26 = sub i32 %12, %23, !dbg !3322
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %26) #25, !dbg !3323
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %23, i32 noundef %23) #25, !dbg !3324
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #25, !dbg !3325
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %26) #25, !dbg !3326
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #25, !dbg !3327
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %23) #25, !dbg !3328
  ret void, !dbg !3329

27:                                               ; preds = %3, %27
  %28 = phi i32 [ %30, %27 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !3290, metadata !DIExpression()), !dbg !3315
  %29 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 6, i32 %28, i32 0, !dbg !3330
  store i32 0, i32* %29, align 4, !dbg !3332
  %30 = add nuw i32 %28, 1, !dbg !3333
  call void @llvm.dbg.value(metadata i32 %30, metadata !3290, metadata !DIExpression()), !dbg !3315
  %31 = icmp eq i32 %28, %20, !dbg !3316
  br i1 %31, label %25, label %27, !dbg !3318, !llvm.loop !3334
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local zeroext i1 @sys_heap_validate(%struct.sys_heap* noundef %0) local_unnamed_addr #12 !dbg !3336 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sys_memory_stats, align 4
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3360, metadata !DIExpression()), !dbg !3386
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3387
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3387
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3361, metadata !DIExpression()), !dbg !3386
  %7 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef 0) #25, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %7, metadata !3362, metadata !DIExpression()), !dbg !3386
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %7, metadata !3362, metadata !DIExpression()), !dbg !3386
  %10 = icmp ult i32 %7, %9, !dbg !3390
  br i1 %10, label %11, label %17, !dbg !3392

11:                                               ; preds = %1, %14
  %12 = phi i32 [ %15, %14 ], [ %7, %1 ]
  call void @llvm.dbg.value(metadata i32 %12, metadata !3362, metadata !DIExpression()), !dbg !3386
  %13 = tail call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef nonnull %6, i32 noundef %12) #25, !dbg !3393
  br i1 %13, label %14, label %138, !dbg !3396

14:                                               ; preds = %11
  %15 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %12) #25, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %15, metadata !3362, metadata !DIExpression()), !dbg !3386
  %16 = icmp ult i32 %15, %9, !dbg !3390
  br i1 %16, label %11, label %17, !dbg !3392, !llvm.loop !3398

17:                                               ; preds = %14, %1
  %18 = phi i32 [ %7, %1 ], [ %15, %14 ], !dbg !3400
  %19 = icmp eq i32 %18, %9, !dbg !3401
  br i1 %19, label %20, label %138, !dbg !3403

20:                                               ; preds = %17
  %21 = bitcast i32* %2 to i8*, !dbg !3404
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #23, !dbg !3404
  %22 = bitcast i32* %3 to i8*, !dbg !3404
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #23, !dbg !3404
  %23 = bitcast %struct.sys_memory_stats* %4 to i8*, !dbg !3405
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %23) #23, !dbg !3405
  call void @llvm.dbg.declare(metadata %struct.sys_memory_stats* %4, metadata !3365, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i32* %2, metadata !3363, metadata !DIExpression(DW_OP_deref)), !dbg !3386
  call void @llvm.dbg.value(metadata i32* %3, metadata !3364, metadata !DIExpression(DW_OP_deref)), !dbg !3386
  call fastcc void @get_alloc_info(%struct.z_heap* noundef nonnull %6, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !3407
  %24 = call i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef %0, %struct.sys_memory_stats* noundef nonnull %4) #25, !dbg !3408
  %25 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 1, !dbg !3409
  %26 = load i32, i32* %25, align 4, !dbg !3409
  %27 = load i32, i32* %2, align 4, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %27, metadata !3363, metadata !DIExpression()), !dbg !3386
  %28 = icmp eq i32 %26, %27, !dbg !3412
  br i1 %28, label %29, label %136, !dbg !3413

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %4, i32 0, i32 0, !dbg !3414
  %31 = load i32, i32* %30, align 4, !dbg !3414
  %32 = load i32, i32* %3, align 4, !dbg !3415
  call void @llvm.dbg.value(metadata i32 %32, metadata !3364, metadata !DIExpression()), !dbg !3386
  %33 = icmp eq i32 %31, %32, !dbg !3416
  br i1 %33, label %34, label %136, !dbg !3417

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 0, metadata !3371, metadata !DIExpression()), !dbg !3418
  %35 = load i32, i32* %8, align 4, !dbg !3419
  %36 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %35) #25, !dbg !3420
  %37 = icmp slt i32 %36, 0, !dbg !3421
  br i1 %37, label %84, label %38, !dbg !3422

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 2
  br label %40, !dbg !3422

40:                                               ; preds = %38, %79
  %41 = phi i32 [ 0, %38 ], [ %80, %79 ]
  call void @llvm.dbg.value(metadata i32 %41, metadata !3371, metadata !DIExpression()), !dbg !3418
  %42 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %41, i32 0, !dbg !3423
  %43 = load i32, i32* %42, align 4, !dbg !3423
  call void @llvm.dbg.value(metadata i32 %43, metadata !3373, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 0, metadata !3376, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %43, metadata !3362, metadata !DIExpression()), !dbg !3386
  %44 = icmp eq i32 %43, 0, !dbg !3425
  br i1 %44, label %45, label %50, !dbg !3428

45:                                               ; preds = %40
  %46 = load i32, i32* %39, align 4, !dbg !3429
  %47 = shl nuw i32 1, %41, !dbg !3430
  %48 = and i32 %46, %47, !dbg !3431
  %49 = icmp eq i32 %48, 0, !dbg !3432
  call void @llvm.dbg.value(metadata i1 %71, metadata !3377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  call void @llvm.dbg.value(metadata i1 %72, metadata !3378, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  br i1 %49, label %76, label %136, !dbg !3433

50:                                               ; preds = %40, %63
  %51 = phi i32 [ %65, %63 ], [ %43, %40 ]
  %52 = phi i32 [ %64, %63 ], [ 0, %40 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !3362, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i32 %52, metadata !3376, metadata !DIExpression()), !dbg !3424
  %53 = icmp eq i32 %52, 0, !dbg !3434
  %54 = icmp ne i32 %51, %43, !dbg !3435
  %55 = select i1 %53, i1 true, i1 %54, !dbg !3435
  br i1 %55, label %61, label %56, !dbg !3436

56:                                               ; preds = %50
  %57 = load i32, i32* %39, align 4, !dbg !3429
  %58 = shl nuw i32 1, %41, !dbg !3430
  %59 = and i32 %57, %58, !dbg !3431
  %60 = icmp eq i32 %59, 0, !dbg !3432
  call void @llvm.dbg.value(metadata i1 %71, metadata !3377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  call void @llvm.dbg.value(metadata i1 %72, metadata !3378, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  br i1 %60, label %136, label %74, !dbg !3433

61:                                               ; preds = %50
  %62 = call fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !3437
  br i1 %62, label %63, label %136, !dbg !3440

63:                                               ; preds = %61
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %51, i1 noundef zeroext true) #25, !dbg !3441
  %64 = add i32 %52, 1, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %64, metadata !3376, metadata !DIExpression()), !dbg !3424
  %65 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %51) #25, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %65, metadata !3362, metadata !DIExpression()), !dbg !3386
  %66 = icmp eq i32 %65, 0, !dbg !3425
  br i1 %66, label %67, label %50, !dbg !3428, !llvm.loop !3444

67:                                               ; preds = %63
  %68 = load i32, i32* %39, align 4, !dbg !3429
  %69 = shl nuw i32 1, %41, !dbg !3430
  %70 = and i32 %68, %69, !dbg !3431
  %71 = icmp eq i32 %70, 0, !dbg !3432
  call void @llvm.dbg.value(metadata i1 %71, metadata !3377, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  %72 = icmp ne i32 %64, 0, !dbg !3446
  call void @llvm.dbg.value(metadata i1 %72, metadata !3378, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  %73 = xor i1 %72, %71, !dbg !3447
  br i1 %73, label %74, label %136, !dbg !3433

74:                                               ; preds = %56, %67
  %75 = phi i1 [ %71, %67 ], [ %60, %56 ]
  br i1 %75, label %76, label %79, !dbg !3449

76:                                               ; preds = %45, %74
  %77 = load i32, i32* %42, align 4, !dbg !3451
  %78 = icmp eq i32 %77, 0, !dbg !3452
  br i1 %78, label %79, label %136, !dbg !3453

79:                                               ; preds = %76, %74
  %80 = add nuw nsw i32 %41, 1, !dbg !3454
  call void @llvm.dbg.value(metadata i32 %80, metadata !3371, metadata !DIExpression()), !dbg !3418
  %81 = load i32, i32* %8, align 4, !dbg !3419
  %82 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %81) #25, !dbg !3420
  %83 = icmp slt i32 %41, %82, !dbg !3421
  br i1 %83, label %40, label %84, !dbg !3422, !llvm.loop !3455

84:                                               ; preds = %79, %34
  %85 = phi i32 [ %35, %34 ], [ %81, %79 ], !dbg !3457
  call void @llvm.dbg.value(metadata i32 0, metadata !3379, metadata !DIExpression()), !dbg !3386
  %86 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #25, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %86, metadata !3362, metadata !DIExpression()), !dbg !3386
  %87 = icmp ult i32 %86, %85, !dbg !3461
  br i1 %87, label %88, label %99, !dbg !3462

88:                                               ; preds = %84, %95
  %89 = phi i32 [ %90, %95 ], [ 0, %84 ]
  %90 = phi i32 [ %96, %95 ], [ %86, %84 ]
  call void @llvm.dbg.value(metadata i32 %89, metadata !3379, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i32 %90, metadata !3362, metadata !DIExpression()), !dbg !3386
  %91 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #25, !dbg !3463
  br i1 %91, label %92, label %136, !dbg !3466

92:                                               ; preds = %88
  %93 = call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %6, i32 noundef %90) #25, !dbg !3467
  %94 = icmp eq i32 %93, %89, !dbg !3469
  br i1 %94, label %95, label %136, !dbg !3470

95:                                               ; preds = %92
  call void @llvm.dbg.value(metadata i32 %90, metadata !3379, metadata !DIExpression()), !dbg !3386
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %90, i1 noundef zeroext false) #25, !dbg !3471
  %96 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %6, i32 noundef %90) #25, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %96, metadata !3362, metadata !DIExpression()), !dbg !3386
  %97 = load i32, i32* %8, align 4, !dbg !3457
  %98 = icmp ult i32 %96, %97, !dbg !3461
  br i1 %98, label %88, label %99, !dbg !3462, !llvm.loop !3473

99:                                               ; preds = %95, %84
  %100 = phi i32 [ %86, %84 ], [ %96, %95 ], !dbg !3475
  %101 = phi i32 [ %85, %84 ], [ %97, %95 ], !dbg !3457
  %102 = icmp eq i32 %100, %101, !dbg !3476
  br i1 %102, label %103, label %136, !dbg !3478

103:                                              ; preds = %99
  call void @llvm.dbg.value(metadata i32 0, metadata !3380, metadata !DIExpression()), !dbg !3479
  %104 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %100) #25, !dbg !3480
  %105 = icmp slt i32 %104, 0, !dbg !3481
  br i1 %105, label %125, label %106, !dbg !3482

106:                                              ; preds = %103, %120
  %107 = phi i32 [ %121, %120 ], [ %100, %103 ]
  %108 = phi i32 [ %122, %120 ], [ 0, %103 ]
  call void @llvm.dbg.value(metadata i32 %108, metadata !3380, metadata !DIExpression()), !dbg !3479
  %109 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %6, i32 0, i32 6, i32 %108, i32 0, !dbg !3483
  %110 = load i32, i32* %109, align 4, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %110, metadata !3382, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i32 0, metadata !3385, metadata !DIExpression()), !dbg !3484
  %111 = icmp eq i32 %110, 0, !dbg !3485
  br i1 %111, label %120, label %112, !dbg !3487

112:                                              ; preds = %106, %115
  %113 = phi i32 [ %116, %115 ], [ %110, %106 ]
  call void @llvm.dbg.value(metadata i32 poison, metadata !3385, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i32 %113, metadata !3362, metadata !DIExpression()), !dbg !3386
  %114 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %6, i32 noundef %113) #25, !dbg !3488
  br i1 %114, label %136, label %115, !dbg !3493

115:                                              ; preds = %112
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef %6, i32 noundef %113, i1 noundef zeroext true) #25, !dbg !3494
  call void @llvm.dbg.value(metadata i32 poison, metadata !3385, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3484
  %116 = call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %6, i32 noundef %113) #25, !dbg !3495
  call void @llvm.dbg.value(metadata i32 %116, metadata !3362, metadata !DIExpression()), !dbg !3386
  %117 = icmp eq i32 %116, %110, !dbg !3496
  br i1 %117, label %118, label %112, !dbg !3497, !llvm.loop !3498

118:                                              ; preds = %115
  %119 = load i32, i32* %8, align 4, !dbg !3500
  br label %120, !dbg !3501

120:                                              ; preds = %118, %106
  %121 = phi i32 [ %119, %118 ], [ %107, %106 ], !dbg !3500
  %122 = add nuw nsw i32 %108, 1, !dbg !3501
  call void @llvm.dbg.value(metadata i32 %122, metadata !3380, metadata !DIExpression()), !dbg !3479
  %123 = call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef nonnull %6, i32 noundef %121) #25, !dbg !3480
  %124 = icmp slt i32 %108, %123, !dbg !3481
  br i1 %124, label %106, label %125, !dbg !3482, !llvm.loop !3502

125:                                              ; preds = %120, %103
  %126 = phi i32 [ %100, %103 ], [ %121, %120 ], !dbg !3504
  %127 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef 0) #25, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %127, metadata !3362, metadata !DIExpression()), !dbg !3386
  %128 = icmp ult i32 %127, %126, !dbg !3508
  br i1 %128, label %129, label %136, !dbg !3509

129:                                              ; preds = %125, %129
  %130 = phi i32 [ %133, %129 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i32 %130, metadata !3362, metadata !DIExpression()), !dbg !3386
  %131 = call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #25, !dbg !3510
  %132 = xor i1 %131, true, !dbg !3512
  call fastcc void @set_chunk_used.15(%struct.z_heap* noundef nonnull %6, i32 noundef %130, i1 noundef zeroext %132) #25, !dbg !3513
  %133 = call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %6, i32 noundef %130) #25, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %133, metadata !3362, metadata !DIExpression()), !dbg !3386
  %134 = load i32, i32* %8, align 4, !dbg !3504
  %135 = icmp ult i32 %133, %134, !dbg !3508
  br i1 %135, label %129, label %136, !dbg !3509, !llvm.loop !3515

136:                                              ; preds = %76, %67, %45, %56, %61, %88, %92, %112, %129, %125, %99, %20, %29
  %137 = phi i1 [ false, %29 ], [ false, %20 ], [ false, %99 ], [ true, %125 ], [ true, %129 ], [ false, %112 ], [ false, %92 ], [ false, %88 ], [ false, %61 ], [ false, %56 ], [ false, %45 ], [ false, %67 ], [ false, %76 ], !dbg !3386
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %23) #23, !dbg !3517
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #23, !dbg !3517
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #23, !dbg !3517
  br label %138

138:                                              ; preds = %11, %17, %136
  %139 = phi i1 [ %137, %136 ], [ false, %17 ], [ false, %11 ], !dbg !3386
  ret i1 %139, !dbg !3517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3518 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3522, metadata !DIExpression()), !dbg !3524
  call void @llvm.dbg.value(metadata i32 %1, metadata !3523, metadata !DIExpression()), !dbg !3524
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3525
  %4 = add i32 %3, %1, !dbg !3526
  ret i32 %4, !dbg !3527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @valid_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3528 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3532, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i32 %1, metadata !3533, metadata !DIExpression()), !dbg !3534
  %3 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) #25, !dbg !3535
  %4 = icmp eq i32 %3, 0, !dbg !3535
  br i1 %4, label %33, label %5, !dbg !3538

5:                                                ; preds = %2
  %6 = add i32 %3, %1, !dbg !3539
  %7 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3539
  %8 = load i32, i32* %7, align 4, !dbg !3539
  %9 = icmp ugt i32 %6, %8, !dbg !3539
  br i1 %9, label %33, label %10, !dbg !3542

10:                                               ; preds = %5
  %11 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3543
  br i1 %11, label %12, label %33, !dbg !3546

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3547
  %14 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #25, !dbg !3547
  %15 = icmp eq i32 %14, %1, !dbg !3547
  br i1 %15, label %16, label %33, !dbg !3550

16:                                               ; preds = %12
  %17 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3551
  %18 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #25, !dbg !3551
  %19 = icmp eq i32 %18, %1, !dbg !3551
  br i1 %19, label %20, label %33, !dbg !3554

20:                                               ; preds = %16
  %21 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3555
  br i1 %21, label %32, label %22, !dbg !3557

22:                                               ; preds = %20
  %23 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %13) #25, !dbg !3558
  br i1 %23, label %24, label %33, !dbg !3562

24:                                               ; preds = %22
  %25 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %17) #25, !dbg !3563
  br i1 %25, label %26, label %33, !dbg !3566

26:                                               ; preds = %24
  %27 = tail call fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3567, !range !2774
  %28 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %27) #25, !dbg !3567
  br i1 %28, label %29, label %33, !dbg !3572

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3573, !range !2774
  %31 = tail call fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef nonnull %0, i32 noundef %30) #25, !dbg !3573
  br i1 %31, label %32, label %33, !dbg !3576

32:                                               ; preds = %20, %29
  br label %33, !dbg !3577

33:                                               ; preds = %29, %26, %24, %22, %16, %12, %10, %5, %2, %32
  %34 = phi i1 [ true, %32 ], [ false, %2 ], [ false, %5 ], [ false, %10 ], [ false, %12 ], [ false, %16 ], [ false, %22 ], [ false, %24 ], [ false, %26 ], [ false, %29 ], !dbg !3534
  ret i1 %34, !dbg !3578
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* nocapture noundef %1, i32* nocapture noundef %2) unnamed_addr #13 !dbg !3579 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3583, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.value(metadata i32* %1, metadata !3584, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.value(metadata i32* %2, metadata !3585, metadata !DIExpression()), !dbg !3587
  store i32 0, i32* %1, align 4, !dbg !3588
  store i32 0, i32* %2, align 4, !dbg !3589
  %4 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #25, !dbg !3590
  call void @llvm.dbg.value(metadata i32 %4, metadata !3586, metadata !DIExpression()), !dbg !3587
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1
  call void @llvm.dbg.value(metadata i32 %4, metadata !3586, metadata !DIExpression()), !dbg !3587
  %6 = load i32, i32* %5, align 4, !dbg !3592
  %7 = icmp ult i32 %4, %6, !dbg !3594
  br i1 %7, label %8, label %19, !dbg !3595

8:                                                ; preds = %3, %8
  %9 = phi i32 [ %16, %8 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3586, metadata !DIExpression()), !dbg !3587
  %10 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #25, !dbg !3596
  %11 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %9) #25, !dbg !3599, !range !2575
  %12 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef nonnull %0, i32 noundef %11) #25, !dbg !3599
  %13 = select i1 %10, i32* %1, i32* %2, !dbg !3599
  %14 = load i32, i32* %13, align 4, !dbg !3599
  %15 = add i32 %14, %12, !dbg !3599
  store i32 %15, i32* %13, align 4, !dbg !3599
  %16 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %9) #25, !dbg !3600
  call void @llvm.dbg.value(metadata i32 %16, metadata !3586, metadata !DIExpression()), !dbg !3587
  %17 = load i32, i32* %5, align 4, !dbg !3592
  %18 = icmp ult i32 %16, %17, !dbg !3594
  br i1 %18, label %8, label %19, !dbg !3595, !llvm.loop !3601

19:                                               ; preds = %8, %3
  ret void, !dbg !3603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_get(%struct.sys_heap* noundef readonly %0, %struct.sys_memory_stats* noundef writeonly %1) local_unnamed_addr #7 !dbg !3604 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3609, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %1, metadata !3610, metadata !DIExpression()), !dbg !3611
  %3 = icmp eq %struct.sys_heap* %0, null, !dbg !3612
  %4 = icmp eq %struct.sys_memory_stats* %1, null
  %5 = or i1 %3, %4, !dbg !3614
  br i1 %5, label %20, label %6, !dbg !3614

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3615
  %8 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !3615
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %8, i32 0, i32 3, !dbg !3616
  %10 = load i32, i32* %9, align 4, !dbg !3616
  %11 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 0, !dbg !3617
  store i32 %10, i32* %11, align 4, !dbg !3618
  %12 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !3619
  %13 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %12, i32 0, i32 4, !dbg !3620
  %14 = load i32, i32* %13, align 4, !dbg !3620
  %15 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 1, !dbg !3621
  store i32 %14, i32* %15, align 4, !dbg !3622
  %16 = load %struct.z_heap*, %struct.z_heap** %7, align 4, !dbg !3623
  %17 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %16, i32 0, i32 5, !dbg !3624
  %18 = load i32, i32* %17, align 4, !dbg !3624
  %19 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %1, i32 0, i32 2, !dbg !3625
  store i32 %18, i32* %19, align 4, !dbg !3626
  br label %20, !dbg !3627

20:                                               ; preds = %2, %6
  %21 = phi i32 [ 0, %6 ], [ -22, %2 ], !dbg !3611
  ret i32 %21, !dbg !3628
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx.14(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3629 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3633, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %1, metadata !3634, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.value(metadata i32 %1, metadata !3635, metadata !DIExpression()), !dbg !3636
  %3 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !3637, !range !2744
  %4 = sub nsw i32 31, %3, !dbg !3638
  ret i32 %4, !dbg !3639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used.15(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3640 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3644, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i32 %1, metadata !3645, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata i1 %2, metadata !3646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3649
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #25, !dbg !3650
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3647, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3648, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3649
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3651
  %6 = bitcast i8* %5 to i16*, !dbg !3651
  %7 = load i16, i16* %6, align 2, !dbg !3651
  %8 = and i16 %7, -2, !dbg !3655
  %9 = zext i1 %2 to i16, !dbg !3655
  %10 = or i16 %8, %9, !dbg !3655
  store i16 %10, i16* %6, align 2, !dbg !3651
  ret void, !dbg !3656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3657 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3659, metadata !DIExpression()), !dbg !3661
  call void @llvm.dbg.value(metadata i32 %1, metadata !3660, metadata !DIExpression()), !dbg !3661
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #25, !dbg !3662
  ret i32 %3, !dbg !3663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3664 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3666, metadata !DIExpression()), !dbg !3668
  call void @llvm.dbg.value(metadata i32 %1, metadata !3667, metadata !DIExpression()), !dbg !3668
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !3669
  %4 = and i32 %3, 1, !dbg !3670
  %5 = icmp ne i32 %4, 0, !dbg !3669
  ret i1 %5, !dbg !3671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3672 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3674, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 %1, metadata !3675, metadata !DIExpression()), !dbg !3676
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #25, !dbg !3677
  %4 = sub i32 %1, %3, !dbg !3678
  ret i32 %4, !dbg !3679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field.19(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3680 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3684, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata i32 %1, metadata !3685, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata i32 %2, metadata !3686, metadata !DIExpression()), !dbg !3689
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #25, !dbg !3690
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3687, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3689
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3688, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3689
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3691
  call void @llvm.dbg.value(metadata i8* %5, metadata !3688, metadata !DIExpression()), !dbg !3689
  %6 = bitcast i8* %5 to i16*, !dbg !3692
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3695
  %8 = load i16, i16* %7, align 2, !dbg !3695
  %9 = zext i16 %8 to i32, !dbg !3695
  ret i32 %9, !dbg !3696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3697 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3701, metadata !DIExpression()), !dbg !3702
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3703
  ret %struct.chunk_unit_t* %2, !dbg !3704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3705 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3709, metadata !DIExpression()), !dbg !3711
  call void @llvm.dbg.value(metadata i32 %1, metadata !3710, metadata !DIExpression()), !dbg !3711
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #25, !dbg !3712
  %4 = lshr i32 %3, 1, !dbg !3713
  ret i32 %4, !dbg !3714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3715 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3719, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.value(metadata i32 %1, metadata !3720, metadata !DIExpression()), !dbg !3721
  %3 = shl i32 %1, 3, !dbg !3722
  %4 = add i32 %3, -4, !dbg !3723
  ret i32 %4, !dbg !3724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @in_bounds(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3725 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3727, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 %1, metadata !3728, metadata !DIExpression()), !dbg !3729
  %3 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef 0) #25, !dbg !3730
  %4 = icmp ugt i32 %3, %1, !dbg !3730
  br i1 %4, label %12, label %5, !dbg !3733

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3734
  %7 = load i32, i32* %6, align 4, !dbg !3734
  %8 = icmp ugt i32 %7, %1, !dbg !3734
  br i1 %8, label %9, label %12, !dbg !3737

9:                                                ; preds = %5
  %10 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef nonnull %0, i32 noundef %1) #25, !dbg !3738
  %11 = icmp ult i32 %10, %7, !dbg !3738
  br label %12, !dbg !3729

12:                                               ; preds = %9, %5, %2
  %13 = phi i1 [ false, %2 ], [ false, %5 ], [ %11, %9 ], !dbg !3729
  ret i1 %13, !dbg !3741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk.23(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3742 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3744, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.value(metadata i32 %1, metadata !3745, metadata !DIExpression()), !dbg !3746
  %3 = tail call fastcc i32 @chunk_field.19(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #25, !dbg !3747
  ret i32 %3, !dbg !3748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_stress(i8* (i8*, i32)* noundef %0, void (i8*, i8*)* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4, i8* noundef %5, i32 noundef %6, i32 noundef %7, %struct.z_heap_stress_result* nocapture noundef %8) local_unnamed_addr #1 !dbg !3749 {
  %10 = alloca %struct.z_heap_stress_rec, align 4
  call void @llvm.dbg.value(metadata i8* (i8*, i32)* %0, metadata !3766, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %1, metadata !3767, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8* %2, metadata !3768, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %3, metadata !3769, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %4, metadata !3770, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i8* %5, metadata !3771, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %6, metadata !3772, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata i32 %7, metadata !3773, metadata !DIExpression()), !dbg !3804
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_result* %8, metadata !3774, metadata !DIExpression()), !dbg !3804
  %11 = bitcast %struct.z_heap_stress_rec* %10 to i8*, !dbg !3805
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %11) #23, !dbg !3805
  call void @llvm.dbg.declare(metadata %struct.z_heap_stress_rec* %10, metadata !3775, metadata !DIExpression()), !dbg !3806
  %12 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 0, !dbg !3807
  store i8* (i8*, i32)* %0, i8* (i8*, i32)** %12, align 4, !dbg !3807
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 1, !dbg !3807
  store void (i8*, i8*)* %1, void (i8*, i8*)** %13, align 4, !dbg !3807
  %14 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 2, !dbg !3807
  store i8* %2, i8** %14, align 4, !dbg !3807
  %15 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 3, !dbg !3807
  store i32 %3, i32* %15, align 4, !dbg !3807
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 4, !dbg !3807
  %17 = bitcast %struct.z_heap_stress_block** %16 to i8**, !dbg !3807
  store i8* %5, i8** %17, align 4, !dbg !3807
  %18 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 5, !dbg !3807
  %19 = lshr i32 %6, 3, !dbg !3808
  store i32 %19, i32* %18, align 4, !dbg !3807
  %20 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 6, !dbg !3807
  store i32 0, i32* %20, align 4, !dbg !3807
  %21 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 7, !dbg !3807
  store i32 0, i32* %21, align 4, !dbg !3807
  %22 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %10, i32 0, i32 8, !dbg !3807
  store i32 %7, i32* %22, align 4, !dbg !3807
  %23 = bitcast %struct.z_heap_stress_result* %8 to i8*, !dbg !3809
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i32 24, i1 false), !dbg !3809
  call void @llvm.dbg.value(metadata i32 0, metadata !3792, metadata !DIExpression()), !dbg !3810
  %24 = icmp eq i32 %4, 0, !dbg !3811
  %25 = bitcast i8* %5 to %struct.z_heap_stress_block*, !dbg !3812
  br i1 %24, label %31, label %26, !dbg !3812

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 2
  %28 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 0
  %29 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 1
  %30 = getelementptr inbounds %struct.z_heap_stress_result, %struct.z_heap_stress_result* %8, i32 0, i32 3
  br label %32, !dbg !3812

31:                                               ; preds = %65, %9
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %11) #23, !dbg !3813
  ret void, !dbg !3813

32:                                               ; preds = %26, %65
  %33 = phi i32 [ 0, %26 ], [ %66, %65 ]
  %34 = phi i32 [ 0, %26 ], [ %67, %65 ]
  %35 = phi i32 [ 0, %26 ], [ %71, %65 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !3792, metadata !DIExpression()), !dbg !3810
  %36 = call fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #25, !dbg !3814
  br i1 %36, label %37, label %50, !dbg !3815

37:                                               ; preds = %32
  %38 = tail call fastcc i32 @rand_alloc_size() #25, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %38, metadata !3794, metadata !DIExpression()), !dbg !3817
  %39 = tail call i8* %0(i8* noundef %2, i32 noundef %38) #24, !dbg !3818
  call void @llvm.dbg.value(metadata i8* %39, metadata !3799, metadata !DIExpression()), !dbg !3817
  %40 = load i32, i32* %28, align 8, !dbg !3819
  %41 = add i32 %40, 1, !dbg !3819
  store i32 %41, i32* %28, align 8, !dbg !3819
  %42 = icmp eq i8* %39, null, !dbg !3820
  br i1 %42, label %65, label %43, !dbg !3822

43:                                               ; preds = %37
  %44 = load i32, i32* %29, align 4, !dbg !3823
  %45 = add i32 %44, 1, !dbg !3823
  store i32 %45, i32* %29, align 4, !dbg !3823
  %46 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 0, !dbg !3825
  store i8* %39, i8** %46, align 4, !dbg !3826
  %47 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %34, i32 1, !dbg !3827
  store i32 %38, i32* %47, align 4, !dbg !3828
  %48 = add i32 %34, 1, !dbg !3829
  store i32 %48, i32* %20, align 4, !dbg !3829
  %49 = add i32 %33, %38, !dbg !3830
  store i32 %49, i32* %21, align 4, !dbg !3830
  br label %65, !dbg !3831

50:                                               ; preds = %32
  %51 = call fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* noundef nonnull %10) #25, !dbg !3832
  call void @llvm.dbg.value(metadata i32 %51, metadata !3800, metadata !DIExpression()), !dbg !3833
  %52 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 0, !dbg !3834
  %53 = load i8*, i8** %52, align 4, !dbg !3834
  call void @llvm.dbg.value(metadata i8* %53, metadata !3802, metadata !DIExpression()), !dbg !3833
  %54 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, i32 1, !dbg !3835
  %55 = load i32, i32* %54, align 4, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %55, metadata !3803, metadata !DIExpression()), !dbg !3833
  %56 = load i32, i32* %27, align 8, !dbg !3836
  %57 = add i32 %56, 1, !dbg !3836
  store i32 %57, i32* %27, align 8, !dbg !3836
  %58 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %51, !dbg !3837
  %59 = add i32 %34, -1, !dbg !3838
  %60 = getelementptr inbounds %struct.z_heap_stress_block, %struct.z_heap_stress_block* %25, i32 %59, !dbg !3839
  %61 = bitcast %struct.z_heap_stress_block* %60 to i64*, !dbg !3839
  %62 = bitcast %struct.z_heap_stress_block* %58 to i64*, !dbg !3839
  %63 = load i64, i64* %61, align 4, !dbg !3839
  store i64 %63, i64* %62, align 4, !dbg !3839
  store i32 %59, i32* %20, align 4, !dbg !3840
  %64 = sub i32 %33, %55, !dbg !3841
  store i32 %64, i32* %21, align 4, !dbg !3841
  tail call void %1(i8* noundef %2, i8* noundef %53) #24, !dbg !3842
  br label %65

65:                                               ; preds = %37, %43, %50
  %66 = phi i32 [ %33, %37 ], [ %49, %43 ], [ %64, %50 ], !dbg !3843
  %67 = phi i32 [ %34, %37 ], [ %48, %43 ], [ %59, %50 ]
  %68 = zext i32 %66 to i64, !dbg !3844
  %69 = load i64, i64* %30, align 8, !dbg !3845
  %70 = add i64 %69, %68, !dbg !3845
  store i64 %70, i64* %30, align 8, !dbg !3845
  %71 = add nuw i32 %35, 1, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %71, metadata !3792, metadata !DIExpression()), !dbg !3810
  %72 = icmp eq i32 %71, %4, !dbg !3811
  br i1 %72, label %31, label %32, !dbg !3812, !llvm.loop !3847
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc zeroext i1 @rand_alloc_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !3849 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !3854, metadata !DIExpression()), !dbg !3861
  %2 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !3862
  %3 = load i32, i32* %2, align 4, !dbg !3862
  %4 = icmp eq i32 %3, 0, !dbg !3863
  br i1 %4, label %26, label %5, !dbg !3864

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 5, !dbg !3865
  %7 = load i32, i32* %6, align 4, !dbg !3865
  %8 = icmp ult i32 %3, %7, !dbg !3866
  br i1 %8, label %9, label %26, !dbg !3867

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 7, !dbg !3868
  %11 = load i32, i32* %10, align 4, !dbg !3868
  %12 = mul i32 %11, 100, !dbg !3869
  %13 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 3, !dbg !3870
  %14 = load i32, i32* %13, align 4, !dbg !3870
  %15 = udiv i32 %12, %14, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %15, metadata !3855, metadata !DIExpression()), !dbg !3872
  %16 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 8, !dbg !3873
  %17 = load i32, i32* %16, align 4, !dbg !3873
  call void @llvm.dbg.value(metadata i32 undef, metadata !3859, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata i32 -1, metadata !3860, metadata !DIExpression()), !dbg !3872
  %18 = icmp ult i32 %15, %17, !dbg !3874
  br i1 %18, label %19, label %22, !dbg !3876

19:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %17, metadata !3859, metadata !DIExpression()), !dbg !3872
  %20 = udiv i32 -2147483648, %17, !dbg !3877
  %21 = mul i32 %20, %15, !dbg !3879
  call void @llvm.dbg.value(metadata i32 %21, metadata !3860, metadata !DIExpression()), !dbg !3872
  br label %22, !dbg !3880

22:                                               ; preds = %19, %9
  %23 = phi i32 [ %21, %19 ], [ -1, %9 ], !dbg !3872
  call void @llvm.dbg.value(metadata i32 %23, metadata !3860, metadata !DIExpression()), !dbg !3872
  %24 = tail call fastcc i32 @rand32() #25, !dbg !3881
  %25 = icmp ugt i32 %24, %23, !dbg !3882
  br label %26

26:                                               ; preds = %5, %1, %22
  %27 = phi i1 [ %25, %22 ], [ true, %1 ], [ false, %5 ], !dbg !3883
  ret i1 %27, !dbg !3884
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc i32 @rand_alloc_size() unnamed_addr #10 !dbg !3885 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* undef, metadata !3889, metadata !DIExpression()), !dbg !3891
  %1 = tail call fastcc i32 @rand32() #25, !dbg !3892
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 false), !dbg !3893, !range !2744
  call void @llvm.dbg.value(metadata i32 %2, metadata !3890, metadata !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value)), !dbg !3891
  %3 = tail call fastcc i32 @rand32() #25, !dbg !3894
  %4 = shl i32 16, %2, !dbg !3895
  %5 = add i32 %4, -1, !dbg !3895
  %6 = and i32 %5, %3, !dbg !3896
  ret i32 %6, !dbg !3897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand_free_choice(%struct.z_heap_stress_rec* nocapture noundef readonly %0) unnamed_addr #7 !dbg !3898 {
  call void @llvm.dbg.value(metadata %struct.z_heap_stress_rec* %0, metadata !3900, metadata !DIExpression()), !dbg !3901
  %2 = tail call fastcc i32 @rand32() #25, !dbg !3902
  %3 = getelementptr inbounds %struct.z_heap_stress_rec, %struct.z_heap_stress_rec* %0, i32 0, i32 6, !dbg !3903
  %4 = load i32, i32* %3, align 4, !dbg !3903
  %5 = urem i32 %2, %4, !dbg !3904
  ret i32 %5, !dbg !3905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @rand32() unnamed_addr #7 !dbg !133 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3906
  %2 = mul i64 %1, 2862933555777941757, !dbg !3907
  %3 = add i64 %2, 3037000493, !dbg !3908
  store i64 %3, i64* @rand32.state, align 8, !dbg !3909
  %4 = lshr i64 %3, 32, !dbg !3910
  %5 = trunc i64 %4 to i32, !dbg !3911
  ret i32 %5, !dbg !3912
}

; Function Attrs: noinline nounwind optsize
define dso_local void @heap_print_info(%struct.z_heap* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !3913 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3917, metadata !DIExpression()), !dbg !3938
  call void @llvm.dbg.value(metadata i1 %1, metadata !3918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3938
  %5 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !3939
  %6 = load i32, i32* %5, align 4, !dbg !3939
  %7 = tail call fastcc i32 @bucket_idx.14(%struct.z_heap* noundef %0, i32 noundef %6) #25, !dbg !3940
  %8 = add i32 %7, 1, !dbg !3941
  call void @llvm.dbg.value(metadata i32 %8, metadata !3920, metadata !DIExpression()), !dbg !3938
  %9 = bitcast i32* %3 to i8*, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !3942
  %10 = bitcast i32* %4 to i8*, !dbg !3942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !3942
  %11 = tail call fastcc %struct.chunk_unit_t* @chunk_buf.20(%struct.z_heap* noundef %0) #25, !dbg !3943
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i32 0, i32 0), %struct.chunk_unit_t* noundef %11, i32 noundef %6, i32 noundef %8) #24, !dbg !3944
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([187 x i8], [187 x i8]* @.str.1.25, i32 0, i32 0)) #24, !dbg !3945
  call void @llvm.dbg.value(metadata i32 0, metadata !3919, metadata !DIExpression()), !dbg !3938
  %12 = icmp slt i32 %7, 0, !dbg !3946
  br i1 %12, label %34, label %13, !dbg !3947

13:                                               ; preds = %2, %31
  %14 = phi i32 [ %32, %31 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3919, metadata !DIExpression()), !dbg !3938
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 6, i32 %14, i32 0, !dbg !3948
  %16 = load i32, i32* %15, align 4, !dbg !3948
  call void @llvm.dbg.value(metadata i32 %16, metadata !3925, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 0, metadata !3929, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 0, metadata !3930, metadata !DIExpression()), !dbg !3949
  %17 = icmp eq i32 %16, 0, !dbg !3950
  br i1 %17, label %31, label %18, !dbg !3951

18:                                               ; preds = %13, %18
  %19 = phi i32 [ %25, %18 ], [ 0, %13 ], !dbg !3949
  %20 = phi i32 [ %22, %18 ], [ 0, %13 ], !dbg !3949
  %21 = phi i32 [ %26, %18 ], [ %16, %13 ], !dbg !3952
  call void @llvm.dbg.value(metadata i32 %21, metadata !3931, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %20, metadata !3930, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %19, metadata !3929, metadata !DIExpression()), !dbg !3949
  %22 = add nuw nsw i32 %20, 1, !dbg !3953
  call void @llvm.dbg.value(metadata i32 %22, metadata !3930, metadata !DIExpression()), !dbg !3949
  %23 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %21) #25, !dbg !3955
  %24 = icmp ugt i32 %19, %23, !dbg !3955
  %25 = select i1 %24, i32 %19, i32 %23, !dbg !3955
  call void @llvm.dbg.value(metadata i32 %25, metadata !3929, metadata !DIExpression()), !dbg !3949
  %26 = tail call fastcc i32 @next_free_chunk.16(%struct.z_heap* noundef %0, i32 noundef %21) #25, !dbg !3956
  call void @llvm.dbg.value(metadata i32 %26, metadata !3931, metadata !DIExpression()), !dbg !3952
  %27 = icmp eq i32 %26, %16, !dbg !3957
  br i1 %27, label %28, label %18, !dbg !3958, !llvm.loop !3959

28:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %22, metadata !3930, metadata !DIExpression()), !dbg !3949
  call void @llvm.dbg.value(metadata i32 %25, metadata !3929, metadata !DIExpression()), !dbg !3949
  %29 = shl nuw i32 1, %14, !dbg !3962
  %30 = tail call fastcc i32 @chunksz_to_bytes.22(%struct.z_heap* noundef %0, i32 noundef %25) #25, !dbg !3965, !range !2996
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32 noundef %14, i32 noundef %29, i32 noundef %22, i32 noundef %25, i32 noundef %30) #24, !dbg !3966
  br label %31, !dbg !3967

31:                                               ; preds = %13, %28
  %32 = add nuw i32 %14, 1, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %32, metadata !3919, metadata !DIExpression()), !dbg !3938
  %33 = icmp eq i32 %14, %7, !dbg !3946
  br i1 %33, label %34, label %13, !dbg !3947, !llvm.loop !3969

34:                                               ; preds = %31, %2
  br i1 %1, label %35, label %47, !dbg !3971

35:                                               ; preds = %34
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !3972
  call void @llvm.dbg.value(metadata i32 0, metadata !3934, metadata !DIExpression()), !dbg !3973
  br label %36, !dbg !3974

36:                                               ; preds = %45, %35
  %37 = phi i32 [ 0, %35 ], [ %46, %45 ], !dbg !3973
  call void @llvm.dbg.value(metadata i32 %37, metadata !3934, metadata !DIExpression()), !dbg !3973
  %38 = tail call fastcc zeroext i1 @chunk_used.17(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !3975
  %39 = select i1 %38, i32 42, i32 45, !dbg !3975
  %40 = tail call fastcc i32 @chunk_size.21(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !3978
  %41 = tail call fastcc i32 @left_chunk.18(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !3979
  %42 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef %0, i32 noundef %37) #25, !dbg !3980
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i32 noundef %37, i32 noundef %39, i32 noundef %40, i32 noundef %41, i32 noundef %42) #24, !dbg !3981
  %43 = load i32, i32* %5, align 4, !dbg !3982
  %44 = icmp eq i32 %37, %43, !dbg !3984
  br i1 %44, label %47, label %45, !dbg !3985

45:                                               ; preds = %36
  %46 = tail call fastcc i32 @right_chunk.11(%struct.z_heap* noundef nonnull %0, i32 noundef %37) #25, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %46, metadata !3934, metadata !DIExpression()), !dbg !3973
  br label %36, !dbg !3987, !llvm.loop !3988

47:                                               ; preds = %36, %34
  call void @llvm.dbg.value(metadata i32* %3, metadata !3921, metadata !DIExpression(DW_OP_deref)), !dbg !3938
  call void @llvm.dbg.value(metadata i32* %4, metadata !3922, metadata !DIExpression(DW_OP_deref)), !dbg !3938
  call fastcc void @get_alloc_info(%struct.z_heap* noundef %0, i32* noundef nonnull %4, i32* noundef nonnull %3) #25, !dbg !3991
  %48 = load i32, i32* %5, align 4, !dbg !3992
  %49 = shl i32 %48, 3, !dbg !3993
  %50 = or i32 %49, 4, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %50, metadata !3923, metadata !DIExpression()), !dbg !3938
  %51 = load i32, i32* %3, align 4, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %51, metadata !3921, metadata !DIExpression()), !dbg !3938
  %52 = load i32, i32* %4, align 4, !dbg !3996
  call void @llvm.dbg.value(metadata i32 %52, metadata !3922, metadata !DIExpression()), !dbg !3938
  %53 = add i32 %52, %51, !dbg !3997
  %54 = sub i32 %50, %53, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %54, metadata !3924, metadata !DIExpression()), !dbg !3938
  %55 = mul i32 %54, 1000, !dbg !3998
  %56 = lshr exact i32 %50, 1, !dbg !3999
  %57 = add i32 %55, %56, !dbg !4000
  %58 = udiv i32 %57, %50, !dbg !4001
  %59 = freeze i32 %58
  %60 = udiv i32 %59, 10, !dbg !4002
  %61 = mul i32 %60, 10
  %62 = sub i32 %59, %61
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.5, i32 0, i32 0), i32 noundef %51, i32 noundef %52, i32 noundef %54, i32 noundef %60, i32 noundef %62) #24, !dbg !4003
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !4004
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !4004
  ret void, !dbg !4004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_print_info(%struct.sys_heap* nocapture noundef readonly %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !4005 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4009, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i1 %1, metadata !4010, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4011
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4012
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4012
  tail call void @heap_print_info(%struct.z_heap* noundef %4, i1 noundef zeroext %1) #25, !dbg !4013
  ret void, !dbg !4014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @sys_heap_runtime_stats_reset_max(%struct.sys_heap* noundef readonly %0) local_unnamed_addr #7 !dbg !4015 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4019, metadata !DIExpression()), !dbg !4020
  %2 = icmp eq %struct.sys_heap* %0, null, !dbg !4021
  br i1 %2, label %9, label %3, !dbg !4023

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4024
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4024
  %6 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 4, !dbg !4025
  %7 = load i32, i32* %6, align 4, !dbg !4025
  %8 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %5, i32 0, i32 5, !dbg !4026
  store i32 %7, i32* %8, align 4, !dbg !4027
  br label %9, !dbg !4028

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -22, %1 ], !dbg !4020
  ret i32 %10, !dbg !4029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4030 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4043, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4040, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %1, metadata !4041, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %2, metadata !4042, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %4, metadata !4044, metadata !DIExpression()), !dbg !4171
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4172
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4172
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4045, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i32 0, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i1 undef, metadata !4051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4171
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4174

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4174

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4175
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4043, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %30, metadata !4042, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %29, metadata !4049, metadata !DIExpression()), !dbg !4171
  %31 = load i8, i8* %30, align 1, !dbg !4176
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4174

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4176
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4177
  call void @llvm.dbg.value(metadata i8* %34, metadata !4042, metadata !DIExpression()), !dbg !4171
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %35, metadata !4053, metadata !DIExpression()), !dbg !4178
  %36 = icmp slt i32 %35, 0, !dbg !4179
  %37 = add i32 %29, 1, !dbg !4177
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %36, label %365, label %28, !llvm.loop !4181

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4183
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4058, metadata !DIExpression()), !dbg !4184
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4184
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4103, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4106, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* %30, metadata !4109, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 -1, metadata !4110, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 -1, metadata !4111, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* null, metadata !4112, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* %14, metadata !4113, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8 0, metadata !4114, metadata !DIExpression()), !dbg !4185
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4186
  call void @llvm.dbg.value(metadata i8* %39, metadata !4042, metadata !DIExpression()), !dbg !4171
  %40 = load i24, i24* %15, align 8, !dbg !4187
  %41 = and i24 %40, 256, !dbg !4187
  %42 = icmp eq i24 %41, 0, !dbg !4187
  br i1 %42, label %51, label %43, !dbg !4189

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4190
  call void @llvm.dbg.value(metadata i8* %44, metadata !4043, metadata !DIExpression()), !dbg !4171
  %45 = bitcast i8* %27 to i32*, !dbg !4190
  %46 = load i32, i32* %45, align 4, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %46, metadata !4110, metadata !DIExpression()), !dbg !4185
  %47 = icmp slt i32 %46, 0, !dbg !4192
  br i1 %47, label %48, label %56, !dbg !4194

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4195
  store i24 %49, i24* %15, align 8, !dbg !4195
  %50 = sub nsw i32 0, %46, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %50, metadata !4110, metadata !DIExpression()), !dbg !4185
  br label %56, !dbg !4198

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4199
  %53 = icmp eq i24 %52, 0, !dbg !4199
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4201
  br label %56, !dbg !4201

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4202
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4185
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4043, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %58, metadata !4110, metadata !DIExpression()), !dbg !4185
  %60 = and i24 %57, 1024, !dbg !4202
  %61 = icmp eq i24 %60, 0, !dbg !4202
  br i1 %61, label %69, label %62, !dbg !4203

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4204
  call void @llvm.dbg.value(metadata i8* %63, metadata !4043, metadata !DIExpression()), !dbg !4171
  %64 = bitcast i8* %59 to i32*, !dbg !4204
  %65 = load i32, i32* %64, align 4, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %65, metadata !4115, metadata !DIExpression()), !dbg !4205
  %66 = icmp slt i32 %65, 0, !dbg !4206
  br i1 %66, label %67, label %74, !dbg !4208

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4209
  store i24 %68, i24* %15, align 8, !dbg !4209
  br label %74, !dbg !4211

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4212
  %71 = icmp eq i24 %70, 0, !dbg !4212
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4214
  br label %74, !dbg !4214

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4215
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4185
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4185
  call void @llvm.dbg.value(metadata i8* %77, metadata !4043, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %76, metadata !4111, metadata !DIExpression()), !dbg !4185
  store i32 0, i32* %16, align 4, !dbg !4216
  store i32 0, i32* %17, align 8, !dbg !4217
  %78 = lshr i24 %75, 16, !dbg !4215
  call void @llvm.dbg.value(metadata i24 %78, metadata !4118, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4185
  %79 = lshr i24 %75, 11, !dbg !4218
  %80 = and i24 %79, 15, !dbg !4218
  %81 = zext i24 %80 to i32, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %81, metadata !4119, metadata !DIExpression()), !dbg !4185
  %82 = trunc i24 %78 to i3, !dbg !4219
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4219

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4220

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4223
  call void @llvm.dbg.value(metadata i8* %85, metadata !4043, metadata !DIExpression()), !dbg !4171
  %86 = bitcast i8* %77 to i32*, !dbg !4223
  %87 = load i32, i32* %86, align 4, !dbg !4223
  %88 = sext i32 %87 to i64, !dbg !4223
  store i64 %88, i64* %20, align 8, !dbg !4225
  br label %115, !dbg !4226

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4227
  call void @llvm.dbg.value(metadata i8* %90, metadata !4043, metadata !DIExpression()), !dbg !4171
  %91 = bitcast i8* %77 to i32*, !dbg !4227
  %92 = load i32, i32* %91, align 4, !dbg !4227
  %93 = sext i32 %92 to i64, !dbg !4227
  store i64 %93, i64* %20, align 8, !dbg !4230
  br label %115, !dbg !4231

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4232
  %96 = add i32 %95, 7, !dbg !4232
  %97 = and i32 %96, -8, !dbg !4232
  %98 = inttoptr i32 %97 to i8*, !dbg !4232
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4232
  call void @llvm.dbg.value(metadata i8* %99, metadata !4043, metadata !DIExpression()), !dbg !4171
  %100 = inttoptr i32 %97 to i64*, !dbg !4232
  %101 = load i64, i64* %100, align 8, !dbg !4232
  store i64 %101, i64* %20, align 8, !dbg !4233
  br label %115, !dbg !4234

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4235
  %104 = add i32 %103, 7, !dbg !4235
  %105 = and i32 %104, -8, !dbg !4235
  %106 = inttoptr i32 %105 to i8*, !dbg !4235
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4235
  call void @llvm.dbg.value(metadata i8* %107, metadata !4043, metadata !DIExpression()), !dbg !4171
  %108 = inttoptr i32 %105 to i64*, !dbg !4235
  %109 = load i64, i64* %108, align 8, !dbg !4235
  store i64 %109, i64* %20, align 8, !dbg !4236
  br label %115, !dbg !4237

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4238
  call void @llvm.dbg.value(metadata i8* %111, metadata !4043, metadata !DIExpression()), !dbg !4171
  %112 = bitcast i8* %77 to i32*, !dbg !4238
  %113 = load i32, i32* %112, align 4, !dbg !4238
  %114 = sext i32 %113 to i64, !dbg !4239
  store i64 %114, i64* %20, align 8, !dbg !4240
  br label %115, !dbg !4241

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4242
  call void @llvm.dbg.value(metadata i8* %117, metadata !4043, metadata !DIExpression()), !dbg !4171
  %118 = trunc i24 %79 to i4, !dbg !4243
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4243

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4244
  %121 = ashr exact i64 %120, 56, !dbg !4244
  store i64 %121, i64* %20, align 8, !dbg !4247
  br label %177, !dbg !4248

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4249
  %124 = ashr exact i64 %123, 48, !dbg !4249
  store i64 %124, i64* %20, align 8, !dbg !4252
  br label %177, !dbg !4253

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4254

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4257
  call void @llvm.dbg.value(metadata i8* %127, metadata !4043, metadata !DIExpression()), !dbg !4171
  %128 = bitcast i8* %77 to i32*, !dbg !4257
  %129 = load i32, i32* %128, align 4, !dbg !4257
  %130 = zext i32 %129 to i64, !dbg !4257
  store i64 %130, i64* %20, align 8, !dbg !4259
  br label %157, !dbg !4260

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4261
  call void @llvm.dbg.value(metadata i8* %132, metadata !4043, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %132, metadata !4043, metadata !DIExpression()), !dbg !4171
  %133 = bitcast i8* %77 to i32*, !dbg !4261
  %134 = load i32, i32* %133, align 4, !dbg !4261
  %135 = zext i32 %134 to i64, !dbg !4261
  store i64 %135, i64* %20, align 8, !dbg !4261
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4263
  %138 = add i32 %137, 7, !dbg !4263
  %139 = and i32 %138, -8, !dbg !4263
  %140 = inttoptr i32 %139 to i8*, !dbg !4263
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4263
  call void @llvm.dbg.value(metadata i8* %141, metadata !4043, metadata !DIExpression()), !dbg !4171
  %142 = inttoptr i32 %139 to i64*, !dbg !4263
  %143 = load i64, i64* %142, align 8, !dbg !4263
  store i64 %143, i64* %20, align 8, !dbg !4264
  br label %157, !dbg !4265

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4266
  %146 = add i32 %145, 7, !dbg !4266
  %147 = and i32 %146, -8, !dbg !4266
  %148 = inttoptr i32 %147 to i8*, !dbg !4266
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4266
  call void @llvm.dbg.value(metadata i8* %149, metadata !4043, metadata !DIExpression()), !dbg !4171
  %150 = inttoptr i32 %147 to i64*, !dbg !4266
  %151 = load i64, i64* %150, align 8, !dbg !4266
  store i64 %151, i64* %20, align 8, !dbg !4267
  br label %157, !dbg !4268

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4269
  call void @llvm.dbg.value(metadata i8* %153, metadata !4043, metadata !DIExpression()), !dbg !4171
  %154 = bitcast i8* %77 to i32*, !dbg !4269
  %155 = load i32, i32* %154, align 4, !dbg !4269
  %156 = zext i32 %155 to i64, !dbg !4270
  store i64 %156, i64* %20, align 8, !dbg !4271
  br label %157, !dbg !4272

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4273
  call void @llvm.dbg.value(metadata i8* %159, metadata !4043, metadata !DIExpression()), !dbg !4171
  %160 = trunc i24 %79 to i4, !dbg !4274
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4274

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4275
  store i64 %162, i64* %20, align 8, !dbg !4278
  br label %177, !dbg !4279

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4280
  store i64 %164, i64* %20, align 8, !dbg !4283
  br label %177, !dbg !4284

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4285
  %167 = add i32 %166, 7, !dbg !4285
  %168 = and i32 %167, -8, !dbg !4285
  %169 = inttoptr i32 %168 to i8*, !dbg !4285
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4285
  call void @llvm.dbg.value(metadata i8* %170, metadata !4043, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %170, metadata !4043, metadata !DIExpression()), !dbg !4171
  %171 = inttoptr i32 %168 to double*, !dbg !4285
  %172 = load double, double* %171, align 8, !dbg !4285
  store double %172, double* %19, align 8, !dbg !4285
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4289
  call void @llvm.dbg.value(metadata i8* %174, metadata !4043, metadata !DIExpression()), !dbg !4171
  %175 = bitcast i8* %77 to i8**, !dbg !4289
  %176 = load i8*, i8** %175, align 4, !dbg !4289
  store i8* %176, i8** %18, align 8, !dbg !4292
  br label %177, !dbg !4293

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4185
  call void @llvm.dbg.value(metadata i8* %178, metadata !4043, metadata !DIExpression()), !dbg !4171
  %179 = and i24 %75, 3, !dbg !4294
  %180 = icmp eq i24 %179, 0, !dbg !4294
  br i1 %180, label %185, label %181, !dbg !4294

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %182, metadata !4120, metadata !DIExpression()), !dbg !4296
  %183 = icmp slt i32 %182, 0, !dbg !4297
  %184 = add i32 %182, %29, !dbg !4295
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4299
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4300

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %188, metadata !4124, metadata !DIExpression()), !dbg !4302
  %189 = icmp slt i32 %188, 0, !dbg !4303
  %190 = add i32 %29, 1, !dbg !4301
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4305
  call void @llvm.dbg.value(metadata i8* %192, metadata !4112, metadata !DIExpression()), !dbg !4185
  %193 = icmp sgt i32 %76, -1, !dbg !4306
  br i1 %193, label %194, label %196, !dbg !4308

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %195, metadata !4127, metadata !DIExpression()), !dbg !4311
  br label %241, !dbg !4312

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4313
  call void @llvm.dbg.value(metadata i32 %197, metadata !4127, metadata !DIExpression()), !dbg !4311
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4112, metadata !DIExpression()), !dbg !4185
  %199 = load i64, i64* %20, align 8, !dbg !4315
  %200 = trunc i64 %199 to i8, !dbg !4316
  store i8 %200, i8* %10, align 1, !dbg !4317
  call void @llvm.dbg.value(metadata i8* %23, metadata !4113, metadata !DIExpression()), !dbg !4185
  br label %245, !dbg !4318

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4319
  %203 = icmp eq i24 %202, 0, !dbg !4319
  %204 = trunc i24 %75 to i8, !dbg !4321
  %205 = shl i8 %204, 1, !dbg !4321
  %206 = and i8 %205, 32, !dbg !4321
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4321
  call void @llvm.dbg.value(metadata i8 %207, metadata !4114, metadata !DIExpression()), !dbg !4185
  %208 = load i64, i64* %20, align 8, !dbg !4322
  call void @llvm.dbg.value(metadata i64 %208, metadata !4050, metadata !DIExpression()), !dbg !4171
  %209 = icmp slt i64 %208, 0, !dbg !4323
  br i1 %209, label %210, label %212, !dbg !4325

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4114, metadata !DIExpression()), !dbg !4185
  %211 = sub nsw i64 0, %208, !dbg !4326
  store i64 %211, i64* %20, align 8, !dbg !4328
  br label %212, !dbg !4329

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4185
  call void @llvm.dbg.value(metadata i8 %213, metadata !4114, metadata !DIExpression()), !dbg !4185
  %214 = load i64, i64* %20, align 8, !dbg !4330
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4331
  call void @llvm.dbg.value(metadata i8* %215, metadata !4112, metadata !DIExpression()), !dbg !4185
  br label %216, !dbg !4332

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4333
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4334
  call void @llvm.dbg.value(metadata i8* %218, metadata !4112, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8 %217, metadata !4114, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.label(metadata !4170), !dbg !4335
  %219 = icmp sgt i32 %76, -1, !dbg !4336
  br i1 %219, label %222, label %220, !dbg !4337

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4338
  br label %245, !dbg !4337

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4340
  %224 = sub i32 %22, %223, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %224, metadata !4129, metadata !DIExpression()), !dbg !4341
  %225 = load i24, i24* %15, align 8, !dbg !4342
  %226 = and i24 %225, -65, !dbg !4342
  store i24 %226, i24* %15, align 8, !dbg !4342
  %227 = icmp ugt i32 %76, %224, !dbg !4343
  br i1 %227, label %228, label %245, !dbg !4345

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4346
  store i32 %229, i32* %16, align 4, !dbg !4348
  br label %245, !dbg !4349

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4350
  %232 = icmp eq i8* %231, null, !dbg !4352
  br i1 %232, label %245, label %233, !dbg !4353

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4354
  %235 = zext i32 %234 to i64, !dbg !4354
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4356
  call void @llvm.dbg.value(metadata i8* %236, metadata !4112, metadata !DIExpression()), !dbg !4185
  %237 = load i24, i24* %15, align 8, !dbg !4357
  %238 = or i24 %237, 1048576, !dbg !4357
  store i24 %238, i24* %15, align 8, !dbg !4357
  store i8 120, i8* %21, align 1, !dbg !4358
  br label %216, !dbg !4359

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4360
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4363
  br label %363, !dbg !4364

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4365
  call void @llvm.dbg.value(metadata i32 %242, metadata !4127, metadata !DIExpression()), !dbg !4311
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4366
  call void @llvm.dbg.value(metadata i32 -1, metadata !4111, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 %29, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %192, metadata !4112, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* %243, metadata !4113, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8 0, metadata !4114, metadata !DIExpression()), !dbg !4185
  %244 = icmp eq i8* %192, null, !dbg !4367
  br i1 %244, label %363, label %245, !dbg !4369, !llvm.loop !4181

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4338
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4185
  call void @llvm.dbg.value(metadata i32 0, metadata !4133, metadata !DIExpression()), !dbg !4185
  %250 = zext i8 %249 to i32, !dbg !4370
  %251 = icmp eq i8 %249, 0, !dbg !4372
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  call void @llvm.dbg.value(metadata i32 undef, metadata !4132, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  call void @llvm.dbg.value(metadata i32 undef, metadata !4132, metadata !DIExpression()), !dbg !4185
  %252 = icmp sgt i32 %58, 0, !dbg !4373
  br i1 %252, label %253, label %302, !dbg !4374

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4338
  %255 = icmp eq i24 %254, 0, !dbg !4338
  %256 = ptrtoint i8* %248 to i32, !dbg !4375
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  %257 = ptrtoint i8* %247 to i32, !dbg !4375
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  %258 = xor i1 %251, true, !dbg !4376
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  %259 = sext i1 %258 to i32, !dbg !4376
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  %260 = lshr i24 %246, 19, !dbg !4377
  %261 = and i24 %260, 1, !dbg !4377
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4377
  %263 = zext i24 %262 to i32, !dbg !4377
  %264 = add i32 %257, %259, !dbg !4377
  %265 = add i32 %256, %263, !dbg !4377
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  %266 = and i24 %246, 4194304, !dbg !4378
  %267 = icmp eq i24 %266, 0, !dbg !4378
  %268 = load i32, i32* %16, align 4, !dbg !4380
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4132, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4185
  call void @llvm.dbg.value(metadata i32 undef, metadata !4132, metadata !DIExpression()), !dbg !4185
  %269 = load i32, i32* %17, align 8, !dbg !4381
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4381
  call void @llvm.dbg.value(metadata i32 undef, metadata !4132, metadata !DIExpression()), !dbg !4185
  %271 = add i32 %264, %58, !dbg !4381
  %272 = add i32 %265, %268, !dbg !4381
  %273 = add i32 %272, %270, !dbg !4382
  %274 = sub i32 %271, %273, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %274, metadata !4110, metadata !DIExpression()), !dbg !4185
  %275 = and i24 %246, 4, !dbg !4383
  %276 = icmp eq i24 %275, 0, !dbg !4383
  br i1 %276, label %277, label %302, !dbg !4384

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4134, metadata !DIExpression()), !dbg !4385
  %278 = and i24 %246, 64, !dbg !4386
  %279 = icmp eq i24 %278, 0, !dbg !4386
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4387
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4387
  %282 = select i1 %279, i32 32, i32 48, !dbg !4387
  br i1 %280, label %287, label %283, !dbg !4387

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !4388
  call void @llvm.dbg.value(metadata i32 %284, metadata !4139, metadata !DIExpression()), !dbg !4389
  %285 = icmp slt i32 %284, 0, !dbg !4390
  %286 = add i32 %29, 1, !dbg !4388
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4185
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %290, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8 undef, metadata !4134, metadata !DIExpression()), !dbg !4385
  call void @llvm.dbg.value(metadata i8 %288, metadata !4114, metadata !DIExpression()), !dbg !4185
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4392
  %292 = add i32 %291, -1, !dbg !4392
  br label %293, !dbg !4392

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4393
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %295, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %294, metadata !4110, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 %294, metadata !4110, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4185
  %296 = icmp sgt i32 %294, 0, !dbg !4394
  br i1 %296, label %297, label %302, !dbg !4392

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %298, metadata !4110, metadata !DIExpression()), !dbg !4185
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %299, metadata !4145, metadata !DIExpression()), !dbg !4397
  %300 = icmp slt i32 %299, 0, !dbg !4398
  %301 = add i32 %295, 1, !dbg !4396
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %300, label %361, label %293, !llvm.loop !4400

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4185
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4185
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %305, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %304, metadata !4110, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8 %303, metadata !4114, metadata !DIExpression()), !dbg !4185
  %306 = icmp eq i8 %303, 0, !dbg !4402
  br i1 %306, label %312, label %307, !dbg !4403

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4404
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %309, metadata !4148, metadata !DIExpression()), !dbg !4406
  %310 = icmp slt i32 %309, 0, !dbg !4407
  %311 = add i32 %305, 1, !dbg !4405
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %313, metadata !4049, metadata !DIExpression()), !dbg !4171
  %314 = lshr i24 %246, 20, !dbg !4409
  %315 = lshr i24 %246, 19, !dbg !4410
  %316 = or i24 %314, %315, !dbg !4411
  %317 = and i24 %316, 1, !dbg !4411
  %318 = icmp eq i24 %317, 0, !dbg !4411
  br i1 %318, label %323, label %319, !dbg !4412

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %320, metadata !4152, metadata !DIExpression()), !dbg !4414
  %321 = icmp slt i32 %320, 0, !dbg !4415
  %322 = add i32 %313, 1, !dbg !4413
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %324, metadata !4049, metadata !DIExpression()), !dbg !4171
  %325 = and i24 %246, 1048576, !dbg !4417
  %326 = icmp eq i24 %325, 0, !dbg !4417
  br i1 %326, label %333, label %327, !dbg !4418

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4419
  %329 = zext i8 %328 to i32, !dbg !4419
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %330, metadata !4158, metadata !DIExpression()), !dbg !4420
  %331 = icmp slt i32 %330, 0, !dbg !4421
  %332 = add i32 %324, 1, !dbg !4419
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %334, metadata !4049, metadata !DIExpression()), !dbg !4171
  %335 = load i32, i32* %16, align 4, !dbg !4423
  call void @llvm.dbg.value(metadata i32 %335, metadata !4133, metadata !DIExpression()), !dbg !4185
  br label %336, !dbg !4424

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4425
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %338, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %337, metadata !4133, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4185
  %339 = icmp sgt i32 %337, 0, !dbg !4426
  br i1 %339, label %340, label %345, !dbg !4424

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %341, metadata !4133, metadata !DIExpression()), !dbg !4185
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !4428
  call void @llvm.dbg.value(metadata i32 %342, metadata !4162, metadata !DIExpression()), !dbg !4429
  %343 = icmp slt i32 %342, 0, !dbg !4430
  %344 = add i32 %338, 1, !dbg !4428
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %343, label %361, label %336, !llvm.loop !4432

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %346, metadata !4165, metadata !DIExpression()), !dbg !4435
  %347 = icmp slt i32 %346, 0, !dbg !4436
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %349, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %304, metadata !4110, metadata !DIExpression()), !dbg !4185
  %350 = icmp sgt i32 %304, 0, !dbg !4438
  br i1 %350, label %351, label %363, !dbg !4439

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4439
  %353 = add i32 %352, %338, !dbg !4439
  br label %354, !dbg !4439

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %355, metadata !4110, metadata !DIExpression()), !dbg !4185
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %356, metadata !4167, metadata !DIExpression()), !dbg !4441
  %357 = icmp slt i32 %356, 0, !dbg !4442
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4444
  call void @llvm.dbg.value(metadata i32 undef, metadata !4049, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %359, metadata !4110, metadata !DIExpression()), !dbg !4185
  %360 = icmp sgt i32 %355, 1, !dbg !4438
  br i1 %360, label %354, label %363, !dbg !4439, !llvm.loop !4445

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4182
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4175
  call void @llvm.dbg.value(metadata i32 %364, metadata !4049, metadata !DIExpression()), !dbg !4171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4182
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4171
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4447
  ret i32 %366, !dbg !4447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4448 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4452, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.value(metadata i8* %1, metadata !4453, metadata !DIExpression()), !dbg !4454
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4455
  store i24 0, i24* %3, align 4, !dbg !4455
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4455
  store i8 0, i8* %4, align 1, !dbg !4455
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4455
  store i32 0, i32* %5, align 4, !dbg !4455
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4455
  store i32 0, i32* %6, align 4, !dbg !4455
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4456
  call void @llvm.dbg.value(metadata i8* %7, metadata !4453, metadata !DIExpression()), !dbg !4454
  %8 = load i8, i8* %7, align 1, !dbg !4457
  %9 = icmp eq i8 %8, 37, !dbg !4459
  br i1 %9, label %10, label %12, !dbg !4460

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4461
  call void @llvm.dbg.value(metadata i8* %11, metadata !4453, metadata !DIExpression()), !dbg !4454
  store i8 37, i8* %4, align 1, !dbg !4463
  br label %18, !dbg !4464

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !4465
  call void @llvm.dbg.value(metadata i8* %13, metadata !4453, metadata !DIExpression()), !dbg !4454
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !4466
  call void @llvm.dbg.value(metadata i8* %14, metadata !4453, metadata !DIExpression()), !dbg !4454
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %15, metadata !4453, metadata !DIExpression()), !dbg !4454
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !4468
  call void @llvm.dbg.value(metadata i8* %16, metadata !4453, metadata !DIExpression()), !dbg !4454
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !4469
  call void @llvm.dbg.value(metadata i8* %17, metadata !4453, metadata !DIExpression()), !dbg !4454
  br label %18, !dbg !4470

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4454
  ret i8* %19, !dbg !4471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4472 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4476, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %1, metadata !4477, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %2, metadata !4478, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %3, metadata !4479, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i32 0, metadata !4480, metadata !DIExpression()), !dbg !4483
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4484

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4485
  call void @llvm.dbg.value(metadata i32 %9, metadata !4480, metadata !DIExpression()), !dbg !4483
  call void @llvm.dbg.value(metadata i8* %8, metadata !4478, metadata !DIExpression()), !dbg !4483
  %10 = icmp ult i8* %8, %3, !dbg !4486
  br i1 %10, label %11, label %13, !dbg !4487

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4488
  br label %17, !dbg !4487

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4489

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4490
  %16 = icmp eq i8 %15, 0, !dbg !4489
  br i1 %16, label %24, label %17, !dbg !4484

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4488
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %19, metadata !4478, metadata !DIExpression()), !dbg !4483
  %20 = zext i8 %18 to i32, !dbg !4492
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !4493
  call void @llvm.dbg.value(metadata i32 %21, metadata !4481, metadata !DIExpression()), !dbg !4494
  %22 = icmp slt i32 %21, 0, !dbg !4495
  %23 = add i32 %9, 1, !dbg !4497
  call void @llvm.dbg.value(metadata i32 undef, metadata !4480, metadata !DIExpression()), !dbg !4483
  br i1 %22, label %24, label %7, !llvm.loop !4498

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4483
  ret i32 %25, !dbg !4500
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4501 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4505, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4506, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %2, metadata !4507, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %3, metadata !4508, metadata !DIExpression()), !dbg !4515
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4516
  %6 = load i8, i8* %5, align 1, !dbg !4516
  %7 = zext i8 %6 to i32, !dbg !4517
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !4518
  %9 = icmp eq i32 %8, 0, !dbg !4518
  call void @llvm.dbg.value(metadata i1 %9, metadata !4509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4515
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %10, metadata !4510, metadata !DIExpression()), !dbg !4515
  %11 = ptrtoint i8* %3 to i32, !dbg !4520
  %12 = ptrtoint i8* %2 to i32, !dbg !4520
  %13 = sub i32 %11, %12, !dbg !4520
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4521
  call void @llvm.dbg.value(metadata i8* %14, metadata !4512, metadata !DIExpression()), !dbg !4515
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4522

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4515
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4505, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i8* %18, metadata !4512, metadata !DIExpression()), !dbg !4515
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4523
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4524
  call void @llvm.dbg.value(metadata i32 %25, metadata !4513, metadata !DIExpression()), !dbg !4525
  %26 = icmp ult i32 %25, 10, !dbg !4526
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4527
  %28 = add i32 %27, %25, !dbg !4525
  %29 = trunc i32 %28 to i8, !dbg !4527
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4528
  call void @llvm.dbg.value(metadata i8* %30, metadata !4512, metadata !DIExpression()), !dbg !4515
  store i8 %29, i8* %30, align 1, !dbg !4529
  call void @llvm.dbg.value(metadata i64 %22, metadata !4505, metadata !DIExpression()), !dbg !4515
  %31 = icmp uge i64 %19, %15, !dbg !4530
  %32 = icmp ugt i8* %30, %2, !dbg !4531
  %33 = and i1 %31, %32, !dbg !4531
  br i1 %33, label %17, label %34, !dbg !4532, !llvm.loop !4533

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4535
  %36 = load i24, i24* %35, align 4, !dbg !4535
  %37 = and i24 %36, 32, !dbg !4535
  %38 = icmp eq i24 %37, 0, !dbg !4535
  br i1 %38, label %44, label %39, !dbg !4537

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4538

40:                                               ; preds = %39
  br label %41, !dbg !4540

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4544
  store i24 %43, i24* %35, align 4, !dbg !4544
  br label %44, !dbg !4545

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4545
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !4546 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4552, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i8* %1, metadata !4553, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.value(metadata i32 %2, metadata !4554, metadata !DIExpression()), !dbg !4555
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4556
  %5 = load i24, i24* %4, align 4, !dbg !4556
  %6 = lshr i24 %5, 11, !dbg !4556
  %7 = and i24 %6, 15, !dbg !4556
  %8 = zext i24 %7 to i32, !dbg !4556
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4557

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4558
  store i32 %2, i32* %10, align 4, !dbg !4560
  br label %28, !dbg !4561

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4562
  store i8 %12, i8* %1, align 1, !dbg !4563
  br label %28, !dbg !4564

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4565
  %15 = bitcast i8* %1 to i16*, !dbg !4566
  store i16 %14, i16* %15, align 2, !dbg !4567
  br label %28, !dbg !4568

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4569
  store i32 %2, i32* %17, align 4, !dbg !4570
  br label %28, !dbg !4571

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4572
  %20 = bitcast i8* %1 to i64*, !dbg !4573
  store i64 %19, i64* %20, align 8, !dbg !4574
  br label %28, !dbg !4575

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4576
  %23 = bitcast i8* %1 to i64*, !dbg !4577
  store i64 %22, i64* %23, align 8, !dbg !4578
  br label %28, !dbg !4579

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4580
  store i32 %2, i32* %25, align 4, !dbg !4581
  br label %28, !dbg !4582

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4583
  store i32 %2, i32* %27, align 4, !dbg !4584
  br label %28, !dbg !4585

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4586
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4587 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4590, metadata !DIExpression()), !dbg !4591
  %2 = add i32 %0, -65, !dbg !4592
  %3 = icmp ult i32 %2, 26, !dbg !4593
  %4 = zext i1 %3 to i32, !dbg !4593
  ret i32 %4, !dbg !4594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4595 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4599, metadata !DIExpression()), !dbg !4600
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4601

2:                                                ; preds = %1
  br label %4, !dbg !4602

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4604

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4605
  ret i32 %5, !dbg !4606
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4607 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4609, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %1, metadata !4610, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8 1, metadata !4611, metadata !DIExpression()), !dbg !4612
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4613

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4611, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %5, metadata !4610, metadata !DIExpression()), !dbg !4612
  %6 = load i8, i8* %5, align 1, !dbg !4614
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4616

7:                                                ; preds = %4
  br label %11, !dbg !4617

8:                                                ; preds = %4
  br label %11, !dbg !4619

9:                                                ; preds = %4
  br label %11, !dbg !4620

10:                                               ; preds = %4
  br label %11, !dbg !4621

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4622
  %14 = or i24 %13, %12, !dbg !4622
  store i24 %14, i24* %3, align 4, !dbg !4622
  call void @llvm.dbg.value(metadata i8 poison, metadata !4611, metadata !DIExpression()), !dbg !4612
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4610, metadata !DIExpression()), !dbg !4612
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4611, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i8* %15, metadata !4610, metadata !DIExpression()), !dbg !4612
  %17 = load i24, i24* %3, align 4, !dbg !4623
  %18 = and i24 %17, 68, !dbg !4625
  %19 = icmp eq i24 %18, 68, !dbg !4625
  br i1 %19, label %20, label %22, !dbg !4625

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4626
  store i24 %21, i24* %3, align 4, !dbg !4626
  br label %22, !dbg !4628

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4629
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4630 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4632, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8* %1, metadata !4633, metadata !DIExpression()), !dbg !4636
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4637
  %5 = load i24, i24* %4, align 4, !dbg !4638
  %6 = or i24 %5, 128, !dbg !4638
  store i24 %6, i24* %4, align 4, !dbg !4638
  call void @llvm.dbg.value(metadata i8* %1, metadata !4633, metadata !DIExpression()), !dbg !4636
  %7 = load i8, i8* %1, align 1, !dbg !4639
  %8 = icmp eq i8 %7, 42, !dbg !4641
  br i1 %8, label %9, label %12, !dbg !4642

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4643
  store i24 %10, i24* %4, align 4, !dbg !4643
  call void @llvm.dbg.value(metadata i8* %1, metadata !4633, metadata !DIExpression()), !dbg !4636
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4645
  call void @llvm.dbg.value(metadata i8* %11, metadata !4633, metadata !DIExpression()), !dbg !4636
  store i8* %11, i8** %3, align 4, !dbg !4645
  br label %29, !dbg !4646

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i8** %3, metadata !4633, metadata !DIExpression(DW_OP_deref)), !dbg !4636
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4647
  call void @llvm.dbg.value(metadata i32 %13, metadata !4635, metadata !DIExpression()), !dbg !4636
  %14 = load i8*, i8** %3, align 4, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %14, metadata !4633, metadata !DIExpression()), !dbg !4636
  %15 = icmp eq i8* %14, %1, !dbg !4650
  br i1 %15, label %29, label %16, !dbg !4651

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4652
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4654
  store i32 %13, i32* %18, align 4, !dbg !4655
  %19 = lshr i32 %13, 31, !dbg !4656
  %20 = lshr i24 %17, 1, !dbg !4657
  %21 = and i24 %20, 1, !dbg !4657
  %22 = zext i24 %21 to i32, !dbg !4657
  %23 = or i32 %19, %22, !dbg !4657
  %24 = trunc i32 %23 to i24, !dbg !4657
  %25 = shl nuw nsw i24 %24, 1, !dbg !4657
  %26 = and i24 %17, -131, !dbg !4657
  %27 = or i24 %26, 128, !dbg !4657
  %28 = or i24 %25, %27, !dbg !4657
  store i24 %28, i24* %4, align 4, !dbg !4657
  br label %29, !dbg !4658

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4636
  ret i8* %30, !dbg !4659
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4660 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4662, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8* %1, metadata !4663, metadata !DIExpression()), !dbg !4665
  %4 = load i8, i8* %1, align 1, !dbg !4666
  %5 = icmp eq i8 %4, 46, !dbg !4667
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4668
  %7 = load i24, i24* %6, align 4, !dbg !4669
  %8 = select i1 %5, i24 512, i24 0, !dbg !4669
  %9 = and i24 %7, -513, !dbg !4669
  %10 = or i24 %9, %8, !dbg !4669
  store i24 %10, i24* %6, align 4, !dbg !4669
  br i1 %5, label %11, label %32, !dbg !4670

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4663, metadata !DIExpression()), !dbg !4665
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %12, metadata !4663, metadata !DIExpression()), !dbg !4665
  store i8* %12, i8** %3, align 4, !dbg !4671
  %13 = load i8, i8* %12, align 1, !dbg !4672
  %14 = icmp eq i8 %13, 42, !dbg !4674
  br i1 %14, label %15, label %18, !dbg !4675

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4676
  store i24 %16, i24* %6, align 4, !dbg !4676
  call void @llvm.dbg.value(metadata i8* %12, metadata !4663, metadata !DIExpression()), !dbg !4665
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4678
  call void @llvm.dbg.value(metadata i8* %17, metadata !4663, metadata !DIExpression()), !dbg !4665
  store i8* %17, i8** %3, align 4, !dbg !4678
  br label %32, !dbg !4679

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4663, metadata !DIExpression(DW_OP_deref)), !dbg !4665
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %19, metadata !4664, metadata !DIExpression()), !dbg !4665
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4681
  store i32 %19, i32* %20, align 4, !dbg !4682
  %21 = lshr i32 %19, 31, !dbg !4683
  %22 = load i24, i24* %6, align 4, !dbg !4684
  %23 = lshr i24 %22, 1, !dbg !4684
  %24 = and i24 %23, 1, !dbg !4684
  %25 = zext i24 %24 to i32, !dbg !4684
  %26 = or i32 %21, %25, !dbg !4684
  %27 = trunc i32 %26 to i24, !dbg !4684
  %28 = shl nuw nsw i24 %27, 1, !dbg !4684
  %29 = and i24 %22, -3, !dbg !4684
  %30 = or i24 %28, %29, !dbg !4684
  store i24 %30, i24* %6, align 4, !dbg !4684
  %31 = load i8*, i8** %3, align 4, !dbg !4685
  call void @llvm.dbg.value(metadata i8* %31, metadata !4663, metadata !DIExpression()), !dbg !4665
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4665
  ret i8* %33, !dbg !4686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4687 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4689, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %1, metadata !4690, metadata !DIExpression()), !dbg !4691
  %3 = load i8, i8* %1, align 1, !dbg !4692
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4693

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4694
  call void @llvm.dbg.value(metadata i8* %5, metadata !4690, metadata !DIExpression()), !dbg !4691
  %6 = load i8, i8* %5, align 1, !dbg !4697
  %7 = icmp eq i8 %6, 104, !dbg !4698
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4699
  %9 = load i24, i24* %8, align 4, !dbg !4699
  %10 = and i24 %9, -30721, !dbg !4699
  br i1 %7, label %11, label %14, !dbg !4700

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4701
  store i24 %12, i24* %8, align 4, !dbg !4701
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4703
  call void @llvm.dbg.value(metadata i8* %13, metadata !4690, metadata !DIExpression()), !dbg !4691
  br label %56, !dbg !4704

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4705
  store i24 %15, i24* %8, align 4, !dbg !4705
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4707
  call void @llvm.dbg.value(metadata i8* %17, metadata !4690, metadata !DIExpression()), !dbg !4691
  %18 = load i8, i8* %17, align 1, !dbg !4709
  %19 = icmp eq i8 %18, 108, !dbg !4710
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4711
  %21 = load i24, i24* %20, align 4, !dbg !4711
  %22 = and i24 %21, -30721, !dbg !4711
  br i1 %19, label %23, label %26, !dbg !4712

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4713
  store i24 %24, i24* %20, align 4, !dbg !4713
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4715
  call void @llvm.dbg.value(metadata i8* %25, metadata !4690, metadata !DIExpression()), !dbg !4691
  br label %56, !dbg !4716

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4717
  store i24 %27, i24* %20, align 4, !dbg !4717
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4719
  %30 = load i24, i24* %29, align 4, !dbg !4720
  %31 = and i24 %30, -30721, !dbg !4720
  %32 = or i24 %31, 10240, !dbg !4720
  store i24 %32, i24* %29, align 4, !dbg !4720
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4721
  call void @llvm.dbg.value(metadata i8* %33, metadata !4690, metadata !DIExpression()), !dbg !4691
  br label %56, !dbg !4722

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4723
  %36 = load i24, i24* %35, align 4, !dbg !4724
  %37 = and i24 %36, -30721, !dbg !4724
  %38 = or i24 %37, 12288, !dbg !4724
  store i24 %38, i24* %35, align 4, !dbg !4724
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4725
  call void @llvm.dbg.value(metadata i8* %39, metadata !4690, metadata !DIExpression()), !dbg !4691
  br label %56, !dbg !4726

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4727
  %42 = load i24, i24* %41, align 4, !dbg !4728
  %43 = and i24 %42, -30721, !dbg !4728
  %44 = or i24 %43, 14336, !dbg !4728
  store i24 %44, i24* %41, align 4, !dbg !4728
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %45, metadata !4690, metadata !DIExpression()), !dbg !4691
  br label %56, !dbg !4730

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4731
  %48 = load i24, i24* %47, align 4, !dbg !4732
  %49 = and i24 %48, -30723, !dbg !4732
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4733
  call void @llvm.dbg.value(metadata i8* %50, metadata !4690, metadata !DIExpression()), !dbg !4691
  %51 = or i24 %49, 16386, !dbg !4734
  store i24 %51, i24* %47, align 4, !dbg !4734
  br label %56, !dbg !4735

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4736
  %54 = load i24, i24* %53, align 4, !dbg !4737
  %55 = and i24 %54, -30721, !dbg !4737
  store i24 %55, i24* %53, align 4, !dbg !4737
  br label %56, !dbg !4738

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4690, metadata !DIExpression()), !dbg !4691
  ret i8* %57, !dbg !4739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !4740 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4742, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* %1, metadata !4743, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8 0, metadata !4744, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8* %1, metadata !4743, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4747
  %3 = load i8, i8* %1, align 1, !dbg !4748
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4749
  store i8 %3, i8* %4, align 1, !dbg !4750
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4751

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4752

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4753
  %9 = load i24, i24* %8, align 4, !dbg !4753
  %10 = and i24 %9, -458753, !dbg !4753
  %11 = or i24 %10, %7, !dbg !4753
  call void @llvm.dbg.label(metadata !4745), !dbg !4754
  %12 = and i24 %9, 30720, !dbg !4755
  %13 = icmp eq i24 %12, 16384, !dbg !4755
  %14 = zext i1 %13 to i24, !dbg !4757
  %15 = or i24 %11, %14, !dbg !4757
  %16 = icmp eq i8 %3, 99, !dbg !4758
  br i1 %16, label %17, label %43, !dbg !4760

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4761
  %19 = icmp ne i24 %18, 0, !dbg !4761
  call void @llvm.dbg.value(metadata i1 %19, metadata !4744, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4747
  br label %43, !dbg !4763

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4764
  %22 = load i24, i24* %21, align 4, !dbg !4765
  %23 = and i24 %22, -458753, !dbg !4765
  %24 = or i24 %23, 262144, !dbg !4765
  call void @llvm.dbg.value(metadata i8 1, metadata !4744, metadata !DIExpression()), !dbg !4747
  br label %43, !dbg !4766

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4769
  %27 = load i24, i24* %26, align 4, !dbg !4770
  %28 = and i24 %27, -458753, !dbg !4770
  %29 = or i24 %28, 196608, !dbg !4770
  %30 = and i24 %27, 30720, !dbg !4771
  %31 = icmp eq i24 %30, 16384, !dbg !4771
  br label %43, !dbg !4773

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4774
  %34 = load i24, i24* %33, align 4, !dbg !4775
  %35 = and i24 %34, -458753, !dbg !4775
  %36 = or i24 %35, 196608, !dbg !4775
  %37 = and i24 %34, 30720, !dbg !4776
  %38 = icmp ne i24 %37, 0, !dbg !4776
  br label %43, !dbg !4778

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4779
  %41 = load i24, i24* %40, align 4, !dbg !4780
  %42 = or i24 %41, 1, !dbg !4780
  br label %43, !dbg !4781

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4782
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4783
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4784
  call void @llvm.dbg.value(metadata i8* %48, metadata !4743, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i8 poison, metadata !4744, metadata !DIExpression()), !dbg !4747
  %49 = lshr i24 %44, 1, !dbg !4782
  %50 = and i24 %49, 1, !dbg !4782
  %51 = zext i24 %50 to i32, !dbg !4782
  %52 = or i32 %51, %47, !dbg !4782
  %53 = trunc i32 %52 to i24, !dbg !4782
  %54 = shl nuw nsw i24 %53, 1, !dbg !4782
  %55 = and i24 %44, -3, !dbg !4782
  %56 = or i24 %54, %55, !dbg !4782
  store i24 %56, i24* %46, align 4, !dbg !4782
  ret i8* %48, !dbg !4785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !4786 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4791, metadata !DIExpression()), !dbg !4794
  %2 = load i8*, i8** %0, align 4, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %2, metadata !4792, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.value(metadata i32 0, metadata !4793, metadata !DIExpression()), !dbg !4794
  %3 = load i8, i8* %2, align 1, !dbg !4796
  %4 = zext i8 %3 to i32, !dbg !4797
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4798
  %6 = icmp eq i32 %5, 0, !dbg !4799
  br i1 %6, label %19, label %7, !dbg !4799

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4793, metadata !DIExpression()), !dbg !4794
  call void @llvm.dbg.value(metadata i8* %10, metadata !4792, metadata !DIExpression()), !dbg !4794
  %11 = mul i32 %9, 10, !dbg !4800
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4802
  call void @llvm.dbg.value(metadata i8* %12, metadata !4792, metadata !DIExpression()), !dbg !4794
  %13 = add i32 %11, -48, !dbg !4803
  %14 = add i32 %13, %8, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %14, metadata !4793, metadata !DIExpression()), !dbg !4794
  %15 = load i8, i8* %12, align 1, !dbg !4796
  %16 = zext i8 %15 to i32, !dbg !4797
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4798
  %18 = icmp eq i32 %17, 0, !dbg !4799
  br i1 %18, label %19, label %7, !dbg !4799, !llvm.loop !4805

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4794
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4794
  store i8* %20, i8** %0, align 4, !dbg !4807
  ret i32 %21, !dbg !4808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !4809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4811, metadata !DIExpression()), !dbg !4812
  %2 = add i32 %0, -48, !dbg !4813
  %3 = icmp ult i32 %2, 10, !dbg !4814
  %4 = zext i1 %3 to i32, !dbg !4814
  ret i32 %4, !dbg !4815
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4816 {
  tail call void asm sideeffect ".globl\09CONFIG_WATCHDOG\0A\09.equ\09CONFIG_WATCHDOG,1\0A\09.type\09CONFIG_WATCHDOG,%object", ""() #23, !dbg !4818, !srcloc !4819
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4820, !srcloc !4821
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4822, !srcloc !4823
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4824, !srcloc !4825
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4826, !srcloc !4827
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4828, !srcloc !4829
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x80000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4830, !srcloc !4831
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4832, !srcloc !4833
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4834, !srcloc !4835
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #23, !dbg !4836, !srcloc !4837
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4838, !srcloc !4839
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4840, !srcloc !4841
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4842, !srcloc !4843
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4844, !srcloc !4845
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4846, !srcloc !4847
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4848, !srcloc !4849
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4850, !srcloc !4851
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4852, !srcloc !4853
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4854, !srcloc !4855
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4856, !srcloc !4857
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4858, !srcloc !4859
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !4860, !srcloc !4861
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4862, !srcloc !4863
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_GPIO_ENABLED,%object", ""() #23, !dbg !4864, !srcloc !4865
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_I2C_TWI_ENABLED,%object", ""() #23, !dbg !4866, !srcloc !4867
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_PINCTRL_ENABLED,%object", ""() #23, !dbg !4868, !srcloc !4869
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_UART_ENABLED,%object", ""() #23, !dbg !4870, !srcloc !4871
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ATMEL_SAM_WATCHDOG_ENABLED,%object", ""() #23, !dbg !4872, !srcloc !4873
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4874, !srcloc !4875
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4876, !srcloc !4877
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4878, !srcloc !4879
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4880, !srcloc !4881
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4882, !srcloc !4883
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4884, !srcloc !4885
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4886, !srcloc !4887
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4888, !srcloc !4889
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4890, !srcloc !4891
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4892, !srcloc !4893
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4894, !srcloc !4895
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4896, !srcloc !4897
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4898, !srcloc !4899
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4900, !srcloc !4901
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4902, !srcloc !4903
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4904, !srcloc !4905
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4906, !srcloc !4907
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4908, !srcloc !4909
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4910, !srcloc !4911
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4912, !srcloc !4913
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4914, !srcloc !4915
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4916, !srcloc !4917
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4918, !srcloc !4919
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4920, !srcloc !4921
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4922, !srcloc !4923
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4924, !srcloc !4925
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4926, !srcloc !4927
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4928, !srcloc !4929
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4930, !srcloc !4931
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4932, !srcloc !4933
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4934, !srcloc !4935
  tail call void asm sideeffect ".globl\09CONFIG_ASF\0A\09.equ\09CONFIG_ASF,1\0A\09.type\09CONFIG_ASF,%object", ""() #23, !dbg !4936, !srcloc !4937
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4938, !srcloc !4939
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4940, !srcloc !4941
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4942, !srcloc !4943
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_ARDUINO_DUE\0A\09.equ\09CONFIG_BOARD_ARDUINO_DUE,1\0A\09.type\09CONFIG_BOARD_ARDUINO_DUE,%object", ""() #23, !dbg !4944, !srcloc !4945
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_SAM3X\0A\09.equ\09CONFIG_SOC_SERIES_SAM3X,1\0A\09.type\09CONFIG_SOC_SERIES_SAM3X,%object", ""() #23, !dbg !4946, !srcloc !4947
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4948, !srcloc !4949
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4950, !srcloc !4951
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_SAM\0A\09.equ\09CONFIG_SOC_FAMILY_SAM,1\0A\09.type\09CONFIG_SOC_FAMILY_SAM,%object", ""() #23, !dbg !4952, !srcloc !4953
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_SAM3X8E\0A\09.equ\09CONFIG_SOC_PART_NUMBER_SAM3X8E,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_SAM3X8E,%object", ""() #23, !dbg !4954, !srcloc !4955
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK,1\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_EXT_MAINCK,%object", ""() #23, !dbg !4956, !srcloc !4957
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA,0x06\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_PLLA_MULA,%object", ""() #23, !dbg !4958, !srcloc !4959
  tail call void asm sideeffect ".globl\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA\0A\09.equ\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA,0x01\0A\09.type\09CONFIG_SOC_ATMEL_SAM3X_PLLA_DIVA,%object", ""() #23, !dbg !4960, !srcloc !4961
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4962, !srcloc !4963
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4964, !srcloc !4965
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4966, !srcloc !4967
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4968, !srcloc !4969
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4970, !srcloc !4971
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4972, !srcloc !4973
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4974, !srcloc !4975
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4976, !srcloc !4977
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4978, !srcloc !4979
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4980, !srcloc !4981
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4982, !srcloc !4983
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !4984, !srcloc !4985
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4986, !srcloc !4987
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4988, !srcloc !4989
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4990, !srcloc !4991
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4992, !srcloc !4993
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4994, !srcloc !4995
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4996, !srcloc !4997
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4998, !srcloc !4999
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5000, !srcloc !5001
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5002, !srcloc !5003
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5004, !srcloc !5005
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5006, !srcloc !5007
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5008, !srcloc !5009
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5010, !srcloc !5011
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5012, !srcloc !5013
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5014, !srcloc !5015
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5016, !srcloc !5017
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,96\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5018, !srcloc !5019
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20070000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5020, !srcloc !5021
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5022, !srcloc !5023
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5024, !srcloc !5025
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5026, !srcloc !5027
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5028, !srcloc !5029
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5030, !srcloc !5031
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5032, !srcloc !5033
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5034, !srcloc !5035
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5036, !srcloc !5037
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5038, !srcloc !5039
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5040, !srcloc !5041
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5042, !srcloc !5043
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5044, !srcloc !5045
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5046, !srcloc !5047
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5048, !srcloc !5049
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5050, !srcloc !5051
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5052, !srcloc !5053
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5054, !srcloc !5055
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5056, !srcloc !5057
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5058, !srcloc !5059
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5060, !srcloc !5061
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5062, !srcloc !5063
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5064, !srcloc !5065
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5066, !srcloc !5067
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5068, !srcloc !5069
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5070, !srcloc !5071
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5072, !srcloc !5073
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5074, !srcloc !5075
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5076, !srcloc !5077
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5078, !srcloc !5079
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5080, !srcloc !5081
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5082, !srcloc !5083
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5084, !srcloc !5085
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5086, !srcloc !5087
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5088, !srcloc !5089
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5090, !srcloc !5091
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5092, !srcloc !5093
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5094, !srcloc !5095
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5096, !srcloc !5097
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5098, !srcloc !5099
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5100, !srcloc !5101
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5102, !srcloc !5103
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5104, !srcloc !5105
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5106, !srcloc !5107
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5108, !srcloc !5109
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5110, !srcloc !5111
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5112, !srcloc !5113
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5114, !srcloc !5115
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5116, !srcloc !5117
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5118, !srcloc !5119
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5120, !srcloc !5121
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5122, !srcloc !5123
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5124, !srcloc !5125
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5126, !srcloc !5127
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5128, !srcloc !5129
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5130, !srcloc !5131
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5132, !srcloc !5133
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5134, !srcloc !5135
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5136, !srcloc !5137
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5138, !srcloc !5139
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5140, !srcloc !5141
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5142, !srcloc !5143
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5144, !srcloc !5145
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5146, !srcloc !5147
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5148, !srcloc !5149
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5150, !srcloc !5151
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5152, !srcloc !5153
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5154, !srcloc !5155
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5156, !srcloc !5157
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5158, !srcloc !5159
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5160, !srcloc !5161
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5162, !srcloc !5163
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_UART_SAM\0A\09.equ\09CONFIG_UART_SAM,1\0A\09.type\09CONFIG_UART_SAM,%object", ""() #23, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_WDT_DISABLE_AT_BOOT\0A\09.equ\09CONFIG_WDT_DISABLE_AT_BOOT,1\0A\09.type\09CONFIG_WDT_DISABLE_AT_BOOT,%object", ""() #23, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_WDT_SAM\0A\09.equ\09CONFIG_WDT_SAM,1\0A\09.type\09CONFIG_WDT_SAM,%object", ""() #23, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_SAM\0A\09.equ\09CONFIG_PINCTRL_SAM,1\0A\09.type\09CONFIG_PINCTRL_SAM,%object", ""() #23, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_RUNTIME_STATS\0A\09.equ\09CONFIG_SYS_HEAP_RUNTIME_STATS,1\0A\09.type\09CONFIG_SYS_HEAP_RUNTIME_STATS,%object", ""() #23, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5298, !srcloc !5299
  ret void, !dbg !5300
}

; Function Attrs: noinline nounwind optsize
define internal i32 @atmel_sam3x_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5301 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5303, metadata !DIExpression()), !dbg !5305
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5306, !srcloc !5315
  call void @llvm.dbg.value(metadata i32 undef, metadata !5312, metadata !DIExpression()) #23, !dbg !5316
  call void @llvm.dbg.value(metadata i32 undef, metadata !5313, metadata !DIExpression()) #23, !dbg !5316
  call void @llvm.dbg.value(metadata i32 undef, metadata !5304, metadata !DIExpression()), !dbg !5305
  store volatile i32 1024, i32* inttoptr (i32 1074661888 to i32*), align 512, !dbg !5317
  store volatile i32 1024, i32* inttoptr (i32 1074662400 to i32*), align 1024, !dbg !5318
  store volatile i32 3669769, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !5319
  br label %3, !dbg !5324

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5325
  %5 = and i32 %4, 1, !dbg !5326
  %6 = icmp eq i32 %5, 0, !dbg !5327
  br i1 %6, label %3, label %7, !dbg !5324, !llvm.loop !5328

7:                                                ; preds = %3
  store volatile i32 20446985, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !5330
  br label %8, !dbg !5331

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5332
  %10 = and i32 %9, 65536, !dbg !5333
  %11 = icmp eq i32 %10, 0, !dbg !5334
  br i1 %11, label %8, label %12, !dbg !5331, !llvm.loop !5335

12:                                               ; preds = %8
  store volatile i32 20446977, i32* inttoptr (i32 1074660896 to i32*), align 32, !dbg !5337
  br label %13, !dbg !5338

13:                                               ; preds = %13, %12
  %14 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5339
  %15 = and i32 %14, 131072, !dbg !5340
  %16 = icmp eq i32 %15, 0, !dbg !5338
  br i1 %16, label %17, label %13, !dbg !5338, !llvm.loop !5341

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !5343
  %19 = and i32 %18, -4, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %19, metadata !5322, metadata !DIExpression()), !dbg !5345
  %20 = or i32 %19, 1, !dbg !5346
  store volatile i32 %20, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !5347
  br label %21, !dbg !5348

21:                                               ; preds = %21, %17
  %22 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5349
  %23 = and i32 %22, 8, !dbg !5350
  %24 = icmp eq i32 %23, 0, !dbg !5351
  br i1 %24, label %21, label %25, !dbg !5348, !llvm.loop !5352

25:                                               ; preds = %21
  store volatile i32 537280257, i32* inttoptr (i32 1074660904 to i32*), align 8, !dbg !5354
  br label %26, !dbg !5355

26:                                               ; preds = %26, %25
  %27 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5356
  %28 = and i32 %27, 2, !dbg !5357
  %29 = icmp eq i32 %28, 0, !dbg !5358
  br i1 %29, label %26, label %30, !dbg !5355, !llvm.loop !5359

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !5361
  %32 = and i32 %31, -113, !dbg !5362
  call void @llvm.dbg.value(metadata i32 %32, metadata !5322, metadata !DIExpression()), !dbg !5345
  store volatile i32 %32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !5363
  br label %33, !dbg !5364

33:                                               ; preds = %33, %30
  %34 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5365
  %35 = and i32 %34, 8, !dbg !5366
  %36 = icmp eq i32 %35, 0, !dbg !5367
  br i1 %36, label %33, label %37, !dbg !5364, !llvm.loop !5368

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !5370
  %39 = and i32 %38, -4, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %39, metadata !5322, metadata !DIExpression()), !dbg !5345
  %40 = or i32 %39, 2, !dbg !5372
  store volatile i32 %40, i32* inttoptr (i32 1074660912 to i32*), align 16, !dbg !5373
  br label %41, !dbg !5374

41:                                               ; preds = %41, %37
  %42 = load volatile i32, i32* inttoptr (i32 1074660968 to i32*), align 8, !dbg !5375
  %43 = and i32 %42, 8, !dbg !5376
  %44 = icmp eq i32 %43, 0, !dbg !5377
  br i1 %44, label %41, label %45, !dbg !5374, !llvm.loop !5378

45:                                               ; preds = %41
  %46 = extractvalue { i32, i32 } %2, 0, !dbg !5306
  call void @llvm.dbg.value(metadata i32 %46, metadata !5312, metadata !DIExpression()) #23, !dbg !5316
  call void @llvm.dbg.value(metadata i32 %46, metadata !5304, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 undef, metadata !5380, metadata !DIExpression()) #23, !dbg !5385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %46) #23, !dbg !5387, !srcloc !5388
  ret i32 0, !dbg !5389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @soc_pmc_peripheral_enable(i32 noundef %0) local_unnamed_addr #15 !dbg !5390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5395, metadata !DIExpression()), !dbg !5396
  %2 = icmp ult i32 %0, 32, !dbg !5397
  br i1 %2, label %3, label %5, !dbg !5399

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !5400
  store volatile i32 %4, i32* inttoptr (i32 1074660880 to i32*), align 16, !dbg !5402
  br label %10, !dbg !5403

5:                                                ; preds = %1
  %6 = icmp ult i32 %0, 64, !dbg !5404
  br i1 %6, label %7, label %10, !dbg !5406

7:                                                ; preds = %5
  %8 = and i32 %0, 31, !dbg !5407
  %9 = shl nuw i32 1, %8, !dbg !5407
  store volatile i32 %9, i32* inttoptr (i32 1074661120 to i32*), align 256, !dbg !5409
  br label %10, !dbg !5410

10:                                               ; preds = %5, %7, %3
  ret void, !dbg !5411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @soc_pmc_peripheral_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !5412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5414, metadata !DIExpression()), !dbg !5415
  %2 = icmp ult i32 %0, 32, !dbg !5416
  br i1 %2, label %7, label %3, !dbg !5418

3:                                                ; preds = %1
  %4 = icmp ult i32 %0, 64, !dbg !5419
  br i1 %4, label %5, label %11, !dbg !5421

5:                                                ; preds = %3
  %6 = and i32 %0, 31, !dbg !5422
  br label %7, !dbg !5424

7:                                                ; preds = %1, %5
  %8 = phi i32 [ %6, %5 ], [ %0, %1 ]
  %9 = phi i32* [ inttoptr (i32 1074661124 to i32*), %5 ], [ inttoptr (i32 1074660884 to i32*), %1 ]
  %10 = shl nuw i32 1, %8, !dbg !5425
  store volatile i32 %10, i32* %9, align 4, !dbg !5425
  br label %11, !dbg !5426

11:                                               ; preds = %7, %3
  ret void, !dbg !5426
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @soc_pmc_peripheral_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5431, metadata !DIExpression()), !dbg !5432
  %2 = icmp ult i32 %0, 32, !dbg !5433
  br i1 %2, label %3, label %8, !dbg !5435

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 1074660888 to i32*), align 8, !dbg !5436
  %5 = shl nuw i32 1, %0, !dbg !5438
  %6 = and i32 %4, %5, !dbg !5439
  %7 = icmp ne i32 %6, 0, !dbg !5440
  br label %16, !dbg !5441

8:                                                ; preds = %1
  %9 = icmp ult i32 %0, 64, !dbg !5442
  br i1 %9, label %10, label %16, !dbg !5444

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1074661128 to i32*), align 8, !dbg !5445
  %12 = and i32 %0, 31, !dbg !5447
  %13 = shl nuw i32 1, %12, !dbg !5447
  %14 = and i32 %11, %13, !dbg !5448
  %15 = icmp ne i32 %14, 0, !dbg !5449
  br label %16, !dbg !5450

16:                                               ; preds = %8, %10, %3
  %17 = phi i1 [ %7, %3 ], [ %15, %10 ], [ false, %8 ]
  %18 = zext i1 %17 to i32, !dbg !5432
  ret i32 %18, !dbg !5451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_gpio_configure(%struct.soc_gpio_pin* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !5452 {
  call void @llvm.dbg.value(metadata %struct.soc_gpio_pin* %0, metadata !5524, metadata !DIExpression()), !dbg !5530
  %2 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 0, !dbg !5531
  %3 = load i32, i32* %2, align 4, !dbg !5531
  call void @llvm.dbg.value(metadata i32 %3, metadata !5525, metadata !DIExpression()), !dbg !5530
  %4 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 1, !dbg !5532
  %5 = load %struct.Pio*, %struct.Pio** %4, align 4, !dbg !5532
  call void @llvm.dbg.value(metadata %struct.Pio* %5, metadata !5526, metadata !DIExpression()), !dbg !5530
  %6 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 2, !dbg !5533
  %7 = load i8, i8* %6, align 4, !dbg !5533
  call void @llvm.dbg.value(metadata i8 %7, metadata !5527, metadata !DIExpression()), !dbg !5530
  %8 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 0, i32 3, !dbg !5534
  %9 = load i32, i32* %8, align 4, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %9, metadata !5528, metadata !DIExpression()), !dbg !5530
  %10 = and i32 %9, 983040, !dbg !5535
  call void @llvm.dbg.value(metadata i32 %9, metadata !5529, metadata !DIExpression(DW_OP_constu, 983040, DW_OP_and, DW_OP_stack_value)), !dbg !5530
  tail call fastcc void @configure_common_attr(%struct.Pio* noundef %5, i32 noundef %3, i32 noundef %9) #25, !dbg !5536
  %11 = lshr exact i32 %10, 16, !dbg !5537
  switch i32 %11, label %36 [
    i32 0, label %12
    i32 1, label %18
    i32 8, label %23
    i32 10, label %27
    i32 9, label %27
  ], !dbg !5537

12:                                               ; preds = %1
  %13 = xor i32 %3, -1, !dbg !5538
  %14 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 28, !dbg !5540
  %15 = load volatile i32, i32* %14, align 4, !dbg !5541
  %16 = and i32 %15, %13, !dbg !5541
  store volatile i32 %16, i32* %14, align 4, !dbg !5541
  %17 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 1, !dbg !5542
  br label %34, !dbg !5543

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 28, !dbg !5544
  %20 = load volatile i32, i32* %19, align 4, !dbg !5545
  %21 = or i32 %20, %3, !dbg !5545
  store volatile i32 %21, i32* %19, align 4, !dbg !5545
  %22 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 1, !dbg !5546
  br label %34, !dbg !5547

23:                                               ; preds = %1
  %24 = zext i8 %7 to i32, !dbg !5548
  tail call void @soc_pmc_peripheral_enable(i32 noundef %24) #24, !dbg !5549
  tail call fastcc void @configure_input_attr(%struct.Pio* noundef %5, i32 noundef %3, i32 noundef %9) #25, !dbg !5550
  %25 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 5, !dbg !5551
  store volatile i32 %3, i32* %25, align 4, !dbg !5552
  %26 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 0, !dbg !5553
  br label %34, !dbg !5554

27:                                               ; preds = %1, %1
  %28 = icmp eq i32 %10, 655360, !dbg !5555
  %29 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 13, !dbg !5557
  %30 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 12, !dbg !5557
  %31 = select i1 %28, i32* %30, i32* %29, !dbg !5557
  store volatile i32 %3, i32* %31, align 4, !dbg !5558
  tail call fastcc void @configure_output_attr(%struct.Pio* noundef nonnull %5, i32 noundef %3) #25, !dbg !5559
  %32 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 4, !dbg !5560
  store volatile i32 %3, i32* %32, align 4, !dbg !5561
  %33 = getelementptr inbounds %struct.Pio, %struct.Pio* %5, i32 0, i32 0, !dbg !5562
  br label %34, !dbg !5563

34:                                               ; preds = %27, %23, %18, %12
  %35 = phi i32* [ %17, %12 ], [ %22, %18 ], [ %26, %23 ], [ %33, %27 ]
  store volatile i32 %3, i32* %35, align 4, !dbg !5564
  br label %36, !dbg !5565

36:                                               ; preds = %34, %1
  ret void, !dbg !5565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_common_attr(%struct.Pio* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !5566 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !5570, metadata !DIExpression()), !dbg !5573
  call void @llvm.dbg.value(metadata i32 %1, metadata !5571, metadata !DIExpression()), !dbg !5573
  call void @llvm.dbg.value(metadata i32 %2, metadata !5572, metadata !DIExpression()), !dbg !5573
  %4 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 17, !dbg !5574
  store volatile i32 %1, i32* %4, align 4, !dbg !5575
  %5 = and i32 %2, 1, !dbg !5576
  %6 = icmp eq i32 %5, 0, !dbg !5576
  %7 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 24, !dbg !5578
  %8 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 25, !dbg !5578
  %9 = select i1 %6, i32* %7, i32* %8, !dbg !5578
  store volatile i32 %1, i32* %9, align 4, !dbg !5579
  %10 = and i32 %2, 4, !dbg !5580
  %11 = icmp eq i32 %10, 0, !dbg !5580
  %12 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 21, !dbg !5582
  %13 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 20, !dbg !5582
  %14 = select i1 %11, i32* %12, i32* %13, !dbg !5582
  store volatile i32 %1, i32* %14, align 4, !dbg !5583
  ret void, !dbg !5584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_input_attr(%struct.Pio* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !5585 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !5587, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.value(metadata i32 %1, metadata !5588, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.value(metadata i32 %2, metadata !5589, metadata !DIExpression()), !dbg !5590
  %4 = and i32 %2, 24, !dbg !5591
  switch i32 %4, label %7 [
    i32 0, label %12
    i32 8, label %5
  ], !dbg !5593

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 31, !dbg !5594
  br label %9, !dbg !5598

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 30, !dbg !5599
  br label %9

9:                                                ; preds = %7, %5
  %10 = phi i32* [ %8, %7 ], [ %6, %5 ]
  store volatile i32 %1, i32* %10, align 4, !dbg !5601
  %11 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 8, !dbg !5602
  br label %14, !dbg !5603

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 9, !dbg !5604
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32* [ %13, %12 ], [ %11, %9 ]
  store volatile i32 %1, i32* %15, align 4, !dbg !5606
  %16 = and i32 %2, 32, !dbg !5607
  %17 = icmp eq i32 %16, 0, !dbg !5607
  br i1 %17, label %38, label %18, !dbg !5609

18:                                               ; preds = %14
  %19 = trunc i32 %2 to i8, !dbg !5610
  %20 = and i8 %19, -64, !dbg !5610
  switch i8 %20, label %25 [
    i8 -128, label %21
    i8 64, label %23
  ], !dbg !5610

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 40, !dbg !5612
  br label %35, !dbg !5615

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 43, !dbg !5616
  br label %27, !dbg !5620

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 44, !dbg !5621
  br label %27

27:                                               ; preds = %25, %23
  %28 = phi i32* [ %26, %25 ], [ %24, %23 ]
  store volatile i32 %1, i32* %28, align 4, !dbg !5623
  %29 = and i32 %2, 256, !dbg !5624
  %30 = icmp eq i32 %29, 0, !dbg !5624
  %31 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 47, !dbg !5626
  %32 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 48, !dbg !5626
  %33 = select i1 %30, i32* %31, i32* %32, !dbg !5626
  store volatile i32 %1, i32* %33, align 4, !dbg !5627
  %34 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 39, !dbg !5628
  br label %35

35:                                               ; preds = %27, %21
  %36 = phi i32* [ %34, %27 ], [ %22, %21 ]
  store volatile i32 %1, i32* %36, align 4, !dbg !5629
  %37 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 16, !dbg !5630
  store volatile i32 %1, i32* %37, align 4, !dbg !5631
  br label %38, !dbg !5632

38:                                               ; preds = %14, %35
  ret void, !dbg !5633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @configure_output_attr(%struct.Pio* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5634 {
  call void @llvm.dbg.value(metadata %struct.Pio* %0, metadata !5636, metadata !DIExpression()), !dbg !5639
  call void @llvm.dbg.value(metadata i32 %1, metadata !5637, metadata !DIExpression()), !dbg !5639
  call void @llvm.dbg.value(metadata i32 undef, metadata !5638, metadata !DIExpression()), !dbg !5639
  %3 = getelementptr inbounds %struct.Pio, %struct.Pio* %0, i32 0, i32 35, !dbg !5640
  store volatile i32 %1, i32* %3, align 4, !dbg !5641
  ret void, !dbg !5642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @soc_gpio_list_configure(%struct.soc_gpio_pin* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5643 {
  call void @llvm.dbg.value(metadata %struct.soc_gpio_pin* %0, metadata !5647, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata i32 %1, metadata !5648, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.value(metadata i32 0, metadata !5649, metadata !DIExpression()), !dbg !5652
  %3 = icmp eq i32 %1, 0, !dbg !5653
  br i1 %3, label %4, label %5, !dbg !5655

4:                                                ; preds = %5, %2
  ret void, !dbg !5656

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %8, %5 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5649, metadata !DIExpression()), !dbg !5652
  %7 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %0, i32 %6, !dbg !5657
  tail call void @soc_gpio_configure(%struct.soc_gpio_pin* noundef %7) #25, !dbg !5659
  %8 = add nuw i32 %6, 1, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %8, metadata !5649, metadata !DIExpression()), !dbg !5652
  %9 = icmp eq i32 %8, %1, !dbg !5653
  br i1 %9, label %4, label %5, !dbg !5655, !llvm.loop !5661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5712, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5713, metadata !DIExpression()), !dbg !5714
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !5715
  ret void, !dbg !5716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5717 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5734, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5735, metadata !DIExpression()), !dbg !5737
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5738
  %4 = load i32, i32* %3, align 4, !dbg !5738
  call void @llvm.dbg.value(metadata i32 %4, metadata !5736, metadata !DIExpression()), !dbg !5737
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !5739
  ret void, !dbg !5740
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !5741 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5745, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.value(metadata i8* %0, metadata !5746, metadata !DIExpression()), !dbg !5748
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5749
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !5749
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5747, metadata !DIExpression()), !dbg !5750
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5750
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5751
  %5 = bitcast i8* %4 to i32*, !dbg !5751
  %6 = load i32, i32* %5, align 4, !dbg !5751
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5752
  store i32 %6, i32* %7, align 4, !dbg !5753
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !5754
  unreachable, !dbg !5755
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5759, metadata !DIExpression()), !dbg !5760
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !5761
  ret void, !dbg !5762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5767, metadata !DIExpression()), !dbg !5768
  %2 = icmp sgt i32 %0, -1, !dbg !5769
  br i1 %2, label %3, label %8, !dbg !5771

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5772, !srcloc !5774
  %4 = and i32 %0, 31, !dbg !5775
  %5 = shl nuw i32 1, %4, !dbg !5776
  %6 = lshr i32 %0, 5, !dbg !5777
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5778
  store volatile i32 %5, i32* %7, align 4, !dbg !5779
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !5780, !srcloc !5781
  br label %8, !dbg !5782

8:                                                ; preds = %3, %1
  ret void, !dbg !5783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5786, metadata !DIExpression()), !dbg !5787
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !5788
  ret void, !dbg !5789
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5792, metadata !DIExpression()), !dbg !5793
  %2 = icmp sgt i32 %0, -1, !dbg !5794
  br i1 %2, label %3, label %8, !dbg !5796

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5797
  %5 = shl nuw i32 1, %4, !dbg !5799
  %6 = lshr i32 %0, 5, !dbg !5800
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5801
  store volatile i32 %5, i32* %7, align 4, !dbg !5802
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5803, !srcloc !5807
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5808, !srcloc !5811
  br label %8, !dbg !5812

8:                                                ; preds = %3, %1
  ret void, !dbg !5813
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !5814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5818, metadata !DIExpression()), !dbg !5819
  %2 = lshr i32 %0, 5, !dbg !5820
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !5821
  %4 = load volatile i32, i32* %3, align 4, !dbg !5821
  %5 = and i32 %0, 31, !dbg !5822
  %6 = shl nuw i32 1, %5, !dbg !5822
  %7 = and i32 %4, %6, !dbg !5823
  ret i32 %7, !dbg !5824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !5825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5829, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.value(metadata i32 %1, metadata !5830, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.value(metadata i32 %2, metadata !5831, metadata !DIExpression()), !dbg !5832
  %4 = add i32 %1, 1, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %4, metadata !5830, metadata !DIExpression()), !dbg !5832
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !5836
  ret void, !dbg !5837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5842, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 %1, metadata !5843, metadata !DIExpression()), !dbg !5844
  %3 = trunc i32 %1 to i8, !dbg !5845
  %4 = shl i8 %3, 4, !dbg !5845
  %5 = and i32 %0, 15, !dbg !5847
  %6 = add nsw i32 %5, -4, !dbg !5847
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !5847
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5847
  %9 = icmp slt i32 %0, 0, !dbg !5847
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !5847
  store volatile i8 %4, i8* %10, align 1, !dbg !5845
  ret void, !dbg !5848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !5849 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5851, metadata !DIExpression()), !dbg !5852
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !5853
  ret void, !dbg !5854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !5855 {
  tail call void @z_SysNmiOnReset() #24, !dbg !5857
  tail call void @z_arm_int_exit() #24, !dbg !5858
  ret void, !dbg !5859
}

; Function Attrs: optsize
declare !dbg !5860 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !5861 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !5863 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !5865
  tail call void @z_bss_zero() #24, !dbg !5866
  tail call void @z_data_copy() #24, !dbg !5867
  tail call void @z_arm_interrupt_init() #24, !dbg !5868
  tail call void @z_cstart() #27, !dbg !5869
  unreachable, !dbg !5869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !5870 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !5871
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5872, !srcloc !5875
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5876, !srcloc !5879
  ret void, !dbg !5880
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5884, metadata !DIExpression()), !dbg !5885
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5886
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5887
  store i32 %0, i32* %3, align 4, !dbg !5888
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5889
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5890
  store i32 %4, i32* %5, align 4, !dbg !5891
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5892
  %7 = or i32 %6, 268435456, !dbg !5892
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5892
  call void @llvm.dbg.value(metadata i32 0, metadata !5893, metadata !DIExpression()) #23, !dbg !5896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5898, !srcloc !5899
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5900
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5901
  %10 = load i32, i32* %9, align 4, !dbg !5901
  ret i32 %10, !dbg !5902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5903 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6013, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6014, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %2, metadata !6015, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6016, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %4, metadata !6017, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %5, metadata !6018, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata i8* %6, metadata !6019, metadata !DIExpression()), !dbg !6021
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6022
  call void @llvm.dbg.value(metadata i8* %8, metadata !6020, metadata !DIExpression()), !dbg !6021
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6023
  %10 = bitcast i8* %9 to i32*, !dbg !6023
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6024
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6025
  %12 = bitcast i8* %8 to i32*, !dbg !6026
  store i32 %11, i32* %12, align 4, !dbg !6027
  %13 = ptrtoint i8* %4 to i32, !dbg !6028
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6029
  %15 = bitcast i8* %14 to i32*, !dbg !6029
  store i32 %13, i32* %15, align 4, !dbg !6030
  %16 = ptrtoint i8* %5 to i32, !dbg !6031
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6032
  %18 = bitcast i8* %17 to i32*, !dbg !6032
  store i32 %16, i32* %18, align 4, !dbg !6033
  %19 = ptrtoint i8* %6 to i32, !dbg !6034
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6035
  %21 = bitcast i8* %20 to i32*, !dbg !6035
  store i32 %19, i32* %21, align 4, !dbg !6036
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6037
  %23 = bitcast i8* %22 to i32*, !dbg !6037
  store i32 16777216, i32* %23, align 4, !dbg !6038
  %24 = ptrtoint i8* %8 to i32, !dbg !6039
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6040
  store i32 %24, i32* %25, align 8, !dbg !6041
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6042
  store i32 0, i32* %26, align 4, !dbg !6043
  ret void, !dbg !6044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6049, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i32 %1, metadata !6050, metadata !DIExpression()), !dbg !6055
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6056
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6051, metadata !DIExpression()), !dbg !6055
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6057
  br i1 %4, label %19, label %5, !dbg !6059

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6054, metadata !DIExpression()), !dbg !6055
  %6 = icmp eq i32 %0, -22, !dbg !6060
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6060
  %8 = load i32, i32* %7, align 4, !dbg !6060
  br i1 %6, label %16, label %9, !dbg !6062

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6060
  %11 = icmp ule i32 %10, %0, !dbg !6060
  %12 = icmp ugt i32 %8, %0, !dbg !6060
  %13 = and i1 %12, %11, !dbg !6060
  %14 = icmp ugt i32 %8, %1, !dbg !6060
  %15 = and i1 %14, %13, !dbg !6060
  br i1 %15, label %18, label %19, !dbg !6060

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6060
  br i1 %17, label %18, label %19, !dbg !6062

18:                                               ; preds = %9, %16
  br label %19, !dbg !6063

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6055
  ret i32 %20, !dbg !6065
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6070, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata i8* %1, metadata !6071, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6072, metadata !DIExpression()), !dbg !6073
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6074
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6075
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6076, !srcloc !6077
  unreachable, !dbg !6078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6079 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6097, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 %1, metadata !6098, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 %2, metadata !6099, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6100, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i32 0, metadata !6101, metadata !DIExpression()), !dbg !6107
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6108
  %9 = and i32 %8, 511, !dbg !6109
  call void @llvm.dbg.value(metadata i32 %9, metadata !6102, metadata !DIExpression()), !dbg !6107
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6110
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6110
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6111
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !6111
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 0, metadata !6113, metadata !DIExpression()) #23, !dbg !6116
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6118, !srcloc !6119
  call void @llvm.dbg.value(metadata i8* %6, metadata !6104, metadata !DIExpression(DW_OP_deref)), !dbg !6107
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6120
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6105, metadata !DIExpression()), !dbg !6107
  call void @llvm.dbg.value(metadata i8* %5, metadata !6103, metadata !DIExpression(DW_OP_deref)), !dbg !6107
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !6121
  call void @llvm.dbg.value(metadata i32 %12, metadata !6101, metadata !DIExpression()), !dbg !6107
  %13 = load i8, i8* %5, align 1, !dbg !6122, !range !6124
  call void @llvm.dbg.value(metadata i8 %13, metadata !6103, metadata !DIExpression()), !dbg !6107
  %14 = icmp eq i8 %13, 0, !dbg !6122
  br i1 %14, label %15, label %32, !dbg !6125

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6126
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !6127
  %18 = load i8, i8* %6, align 1, !dbg !6128, !range !6124
  call void @llvm.dbg.value(metadata i8 %18, metadata !6104, metadata !DIExpression()), !dbg !6107
  %19 = icmp eq i8 %18, 0, !dbg !6128
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6130
  %21 = load i32, i32* %20, align 4, !dbg !6130
  br i1 %19, label %27, label %22, !dbg !6131

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6132
  %24 = icmp eq i32 %23, 0, !dbg !6135
  br i1 %24, label %25, label %31, !dbg !6136

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6137
  br label %29, !dbg !6139

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6140
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6130
  br label %31, !dbg !6142

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !6142
  br label %32, !dbg !6143

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !6143
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6143
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6143
  ret void, !dbg !6143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6149, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata i32 %1, metadata !6150, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata i32 %2, metadata !6151, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata i8* %3, metadata !6152, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata i8 0, metadata !6153, metadata !DIExpression()), !dbg !6155
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i8 0, i8* %3, align 1, !dbg !6156
  %5 = icmp ult i32 %2, -16777216, !dbg !6157
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6159
  br i1 %8, label %16, label %9, !dbg !6159

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6160
  %11 = icmp eq i32 %10, 0, !dbg !6160
  br i1 %11, label %12, label %13, !dbg !6162

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i8 1, i8* %3, align 1, !dbg !6165
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6155
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6154, metadata !DIExpression()), !dbg !6155
  br label %16, !dbg !6168

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6155
  ret %struct.__esf* %17, !dbg !6169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6170 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6174, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 %1, metadata !6175, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i8* %2, metadata !6176, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.value(metadata i32 0, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i8 0, i8* %2, align 1, !dbg !6179
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6180

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6181
  call void @llvm.dbg.value(metadata i32 %5, metadata !6177, metadata !DIExpression()), !dbg !6178
  br label %11, !dbg !6183

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %7, metadata !6177, metadata !DIExpression()), !dbg !6178
  br label %11, !dbg !6185

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6186
  call void @llvm.dbg.value(metadata i32 0, metadata !6177, metadata !DIExpression()), !dbg !6178
  br label %11, !dbg !6187

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6188
  call void @llvm.dbg.value(metadata i32 0, metadata !6177, metadata !DIExpression()), !dbg !6178
  br label %11, !dbg !6189

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6190
  br label %11, !dbg !6191

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6193 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6197, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.value(metadata i8* %1, metadata !6198, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.value(metadata i32 0, metadata !6199, metadata !DIExpression()), !dbg !6200
  store i8 0, i8* %1, align 1, !dbg !6201
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6202
  %4 = and i32 %3, 2, !dbg !6204
  %5 = icmp eq i32 %4, 0, !dbg !6205
  br i1 %5, label %6, label %33, !dbg !6206

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6207
  %8 = icmp sgt i32 %7, -1, !dbg !6209
  br i1 %8, label %9, label %33, !dbg !6210

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6211
  %11 = and i32 %10, 1073741824, !dbg !6213
  %12 = icmp eq i32 %11, 0, !dbg !6214
  br i1 %12, label %33, label %13, !dbg !6215

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6216
  br i1 %14, label %15, label %18, !dbg !6219

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6220
  %17 = load i32, i32* %16, align 4, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %17, metadata !6199, metadata !DIExpression()), !dbg !6200
  br label %33, !dbg !6222

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6223
  %20 = and i32 %19, 255, !dbg !6225
  %21 = icmp eq i32 %20, 0, !dbg !6226
  br i1 %21, label %24, label %22, !dbg !6227

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6228
  call void @llvm.dbg.value(metadata i32 %23, metadata !6199, metadata !DIExpression()), !dbg !6200
  br label %33, !dbg !6230

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6231
  %26 = and i32 %25, 65280, !dbg !6233
  %27 = icmp eq i32 %26, 0, !dbg !6234
  br i1 %27, label %29, label %28, !dbg !6235

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6236
  call void @llvm.dbg.value(metadata i32 0, metadata !6199, metadata !DIExpression()), !dbg !6200
  br label %33, !dbg !6238

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6239
  %31 = icmp ult i32 %30, 65536, !dbg !6241
  br i1 %31, label %33, label %32, !dbg !6242

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !6243
  call void @llvm.dbg.value(metadata i32 0, metadata !6199, metadata !DIExpression()), !dbg !6200
  br label %33, !dbg !6245

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6200
  call void @llvm.dbg.value(metadata i32 %34, metadata !6199, metadata !DIExpression()), !dbg !6200
  ret i32 %34, !dbg !6246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6247 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6249, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i32 %1, metadata !6250, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i8* %2, metadata !6251, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i32 0, metadata !6252, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.value(metadata i32 -22, metadata !6253, metadata !DIExpression()), !dbg !6262
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6263
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6265
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6267
  %7 = and i32 %6, 2, !dbg !6268
  %8 = icmp eq i32 %7, 0, !dbg !6269
  br i1 %8, label %19, label %9, !dbg !6270

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %10, metadata !6254, metadata !DIExpression()), !dbg !6272
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6273
  %12 = and i32 %11, 128, !dbg !6275
  %13 = icmp eq i32 %12, 0, !dbg !6276
  br i1 %13, label %19, label %14, !dbg !6277

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6253, metadata !DIExpression()), !dbg !6262
  %15 = icmp eq i32 %1, 0, !dbg !6278
  br i1 %15, label %19, label %16, !dbg !6281

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6282
  %18 = and i32 %17, -129, !dbg !6282
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6282
  br label %19, !dbg !6284

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6262
  call void @llvm.dbg.value(metadata i32 %20, metadata !6253, metadata !DIExpression()), !dbg !6262
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6285
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6287
  %23 = and i32 %22, 16, !dbg !6288
  %24 = icmp eq i32 %23, 0, !dbg !6288
  br i1 %24, label %25, label %29, !dbg !6289

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6290
  %27 = and i32 %26, 2, !dbg !6291
  %28 = icmp eq i32 %27, 0, !dbg !6291
  br i1 %28, label %38, label %29, !dbg !6292

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6293
  %31 = and i32 %30, 2048, !dbg !6294
  %32 = icmp eq i32 %31, 0, !dbg !6294
  br i1 %32, label %38, label %33, !dbg !6295

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !6296
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #24, !dbg !6297
  call void @llvm.dbg.value(metadata i32 %35, metadata !6257, metadata !DIExpression()), !dbg !6298
  %36 = icmp eq i32 %35, 0, !dbg !6299
  br i1 %36, label %38, label %37, !dbg !6301

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !6302, metadata !DIExpression()) #23, !dbg !6305
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #23, !dbg !6308, !srcloc !6309
  call void @llvm.dbg.value(metadata i32 2, metadata !6252, metadata !DIExpression()), !dbg !6262
  br label %38, !dbg !6310

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !6262
  call void @llvm.dbg.value(metadata i32 %39, metadata !6252, metadata !DIExpression()), !dbg !6262
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6311
  %41 = or i32 %40, 255, !dbg !6311
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6311
  store i8 0, i8* %2, align 1, !dbg !6312
  ret i32 %39, !dbg !6313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6314 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6318, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i32 %0, metadata !6319, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i8* %1, metadata !6320, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6325
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6326
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6328
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6330
  %6 = and i32 %5, 512, !dbg !6331
  %7 = icmp eq i32 %6, 0, !dbg !6331
  br i1 %7, label %18, label %8, !dbg !6332

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6333
  call void @llvm.dbg.value(metadata i32 %9, metadata !6322, metadata !DIExpression()), !dbg !6334
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6335
  %11 = and i32 %10, 32768, !dbg !6337
  %12 = icmp ne i32 %11, 0, !dbg !6338
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6339
  br i1 %14, label %15, label %18, !dbg !6339

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6340
  %17 = and i32 %16, -32769, !dbg !6340
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6340
  br label %18, !dbg !6344

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6345
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6347
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6349
  %22 = or i32 %21, 65280, !dbg !6349
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6349
  store i8 0, i8* %1, align 1, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6352 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6358, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 0, metadata !6359, metadata !DIExpression()), !dbg !6360
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6361
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6363
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6365
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6367
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6369
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6371
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6373
  %8 = or i32 %7, -65536, !dbg !6373
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6373
  ret void, !dbg !6374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6375 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6379, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i8* %0, metadata !6380, metadata !DIExpression()), !dbg !6381
  store i8 0, i8* %0, align 1, !dbg !6382
  ret void, !dbg !6383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6384 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6388, metadata !DIExpression()), !dbg !6391
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6392
  %3 = load i32, i32* %2, align 4, !dbg !6392
  %4 = inttoptr i32 %3 to i16*, !dbg !6393
  call void @llvm.dbg.value(metadata i16* %4, metadata !6389, metadata !DIExpression()), !dbg !6391
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6394
  %6 = or i32 %5, 256, !dbg !6394
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6394
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6395, !srcloc !6398
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6399, !srcloc !6402
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6403
  %8 = load i16, i16* %7, align 2, !dbg !6404
  call void @llvm.dbg.value(metadata i16 %8, metadata !6390, metadata !DIExpression()), !dbg !6391
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6405
  %10 = and i32 %9, -257, !dbg !6405
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6405
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6406, !srcloc !6398
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6408, !srcloc !6402
  %11 = icmp eq i16 %8, -8446, !dbg !6410
  ret i1 %11, !dbg !6412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6413 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6414
  %2 = or i32 %1, 16, !dbg !6414
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6414
  ret void, !dbg !6415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6416 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6419, metadata !DIExpression()), !dbg !6420
  br label %1, !dbg !6421

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6419, metadata !DIExpression()), !dbg !6420
  tail call fastcc void @__NVIC_SetPriority.33(i32 noundef %2) #25, !dbg !6423
  %3 = add nuw nsw i32 %2, 1, !dbg !6426
  call void @llvm.dbg.value(metadata i32 %3, metadata !6419, metadata !DIExpression()), !dbg !6420
  %4 = icmp eq i32 %3, 45, !dbg !6427
  br i1 %4, label %5, label %1, !dbg !6421, !llvm.loop !6428

5:                                                ; preds = %1
  ret void, !dbg !6430
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.33(i32 noundef %0) unnamed_addr #15 !dbg !6431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6433, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.value(metadata i32 1, metadata !6434, metadata !DIExpression()), !dbg !6435
  %2 = and i32 %0, 15, !dbg !6436
  %3 = add nsw i32 %2, -4, !dbg !6436
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6436
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6436
  %6 = icmp slt i32 %0, 0, !dbg !6436
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6436
  store volatile i8 16, i8* %7, align 1, !dbg !6437
  ret void, !dbg !6439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6546, metadata !DIExpression()), !dbg !6547
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6548
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6550
  br i1 %3, label %4, label %12, !dbg !6551

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !6552, !srcloc !6564
  call void @llvm.dbg.value(metadata i32 %5, metadata !6555, metadata !DIExpression()) #23, !dbg !6565
  %6 = icmp eq i32 %5, 0, !dbg !6566
  br i1 %6, label %12, label %7, !dbg !6567

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6568
  %9 = or i32 %8, 268435456, !dbg !6568
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6568
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6570
  %11 = and i32 %10, -32769, !dbg !6570
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6570
  br label %12, !dbg !6571

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !6572
  ret void, !dbg !6573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6574 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !6575
  ret void, !dbg !6576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !394, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i8 0, metadata !395, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i32 64, metadata !397, metadata !DIExpression()), !dbg !6577
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6578
  %3 = load i32, i32* %2, align 4, !dbg !6578
  %4 = add i32 %3, -64, !dbg !6580
  call void @llvm.dbg.value(metadata i32 %4, metadata !396, metadata !DIExpression()), !dbg !6577
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6581
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6582
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6583
  call void @llvm.dbg.value(metadata i8 1, metadata !395, metadata !DIExpression()), !dbg !6577
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !6584
  ret void, !dbg !6585
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6586 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6587
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6588, !srcloc !6591
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6592, !srcloc !6595
  ret void, !dbg !6596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6597 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !6598, !srcloc !6601
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6602
  ret void, !dbg !6603
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6604 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6620, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i8 %1, metadata !6621, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i32 %2, metadata !6622, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i32 %3, metadata !6623, metadata !DIExpression()), !dbg !6624
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6625
  ret void, !dbg !6627
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6628 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6633, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i8 %1, metadata !6634, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i32 undef, metadata !6635, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.value(metadata i32 undef, metadata !6636, metadata !DIExpression()), !dbg !6638
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6639
  call void @llvm.dbg.value(metadata i8 %3, metadata !6637, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6638
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !6640
  call void @llvm.dbg.value(metadata i32 %4, metadata !6637, metadata !DIExpression()), !dbg !6638
  %5 = trunc i32 %4 to i8, !dbg !6641
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6642
  ret void, !dbg !6643
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6644 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6648, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i8 %1, metadata !6649, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i8 %2, metadata !6650, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i1 %3, metadata !6651, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6654
  %5 = zext i8 %2 to i32, !dbg !6655
  call void @llvm.dbg.value(metadata i32 %5, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i32 0, metadata !6652, metadata !DIExpression()), !dbg !6654
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i32 0, metadata !6652, metadata !DIExpression()), !dbg !6654
  %7 = icmp eq i8 %1, 0, !dbg !6656
  br i1 %7, label %29, label %8, !dbg !6659

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata i32 %10, metadata !6652, metadata !DIExpression()), !dbg !6654
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6660
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6663
  %13 = load i32, i32* %12, align 4, !dbg !6663
  %14 = icmp eq i32 %13, 0, !dbg !6664
  br i1 %14, label %25, label %15, !dbg !6665

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6666

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !6668
  %18 = icmp eq i32 %17, 0, !dbg !6668
  br i1 %18, label %29, label %19, !dbg !6669

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6670
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !6671
  call void @llvm.dbg.value(metadata i32 %21, metadata !6653, metadata !DIExpression()), !dbg !6654
  %22 = icmp eq i32 %21, -22, !dbg !6672
  br i1 %22, label %29, label %23, !dbg !6674

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %24, metadata !6653, metadata !DIExpression()), !dbg !6654
  br label %25, !dbg !6676

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6654
  call void @llvm.dbg.value(metadata i32 %26, metadata !6653, metadata !DIExpression()), !dbg !6654
  %27 = add nuw nsw i32 %10, 1, !dbg !6677
  call void @llvm.dbg.value(metadata i32 %27, metadata !6652, metadata !DIExpression()), !dbg !6654
  %28 = icmp eq i32 %27, %6, !dbg !6656
  br i1 %28, label %29, label %8, !dbg !6659, !llvm.loop !6678

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6654
  ret i32 %30, !dbg !6680
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !6681 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6685, metadata !DIExpression()), !dbg !6687
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !6688
  %3 = load i32, i32* %2, align 4, !dbg !6688
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !6689, !range !2744
  %5 = icmp ult i32 %4, 2, !dbg !6689
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !6690
  br i1 %7, label %8, label %15, !dbg !6690

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !6691
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !6692
  %11 = load i32, i32* %10, align 4, !dbg !6692
  %12 = and i32 %11, %9, !dbg !6693
  %13 = icmp eq i32 %12, 0, !dbg !6694
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !6686, metadata !DIExpression()), !dbg !6687
  ret i32 %16, !dbg !6695
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !6696 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !6700, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !6701, metadata !DIExpression()), !dbg !6703
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !6704
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6704
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !6702, metadata !DIExpression()), !dbg !6705
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !6706
  %6 = load i32, i32* %5, align 4, !dbg !6706
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !6707
  store i32 %6, i32* %7, align 4, !dbg !6708
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !6709
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !6710
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !6711
  %11 = load i32, i32* %10, align 4, !dbg !6711
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #25, !dbg !6712
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !6713
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !6714
  ret i32 %12, !dbg !6715
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !6716 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !6723, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !6724, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 undef, metadata !6725, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.value(metadata i32 %2, metadata !6726, metadata !DIExpression()), !dbg !6727
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !6728
  %5 = load i32, i32* %4, align 4, !dbg !6728
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !6729
  %7 = or i32 %6, %5, !dbg !6730
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !6731
  store i32 %7, i32* %8, align 4, !dbg !6732
  ret void, !dbg !6733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6734 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6738, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6739, metadata !DIExpression()), !dbg !6740
  %3 = zext i8 %0 to i32, !dbg !6741
  %4 = icmp ugt i8 %0, 7, !dbg !6743
  br i1 %4, label %6, label %5, !dbg !6744

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !6745
  br label %6, !dbg !6746

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !6740
  ret i32 %7, !dbg !6747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !6748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6752, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !6753, metadata !DIExpression()), !dbg !6754
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !6755
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !6756
  %4 = load i32, i32* %3, align 4, !dbg !6756
  %5 = and i32 %4, -32, !dbg !6757
  %6 = or i32 %5, %0, !dbg !6758
  %7 = or i32 %6, 16, !dbg !6758
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !6759
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !6760
  %9 = load i32, i32* %8, align 4, !dbg !6760
  %10 = or i32 %9, 1, !dbg !6761
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6762
  ret void, !dbg !6763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !6764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6767, metadata !DIExpression()), !dbg !6768
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6769
  ret void, !dbg !6770
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !6771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6773, metadata !DIExpression()), !dbg !6774
  %2 = icmp ult i32 %0, 33, !dbg !6775
  br i1 %2, label %11, label %3, !dbg !6777

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !6778
  br i1 %4, label %11, label %5, !dbg !6780

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !6781
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !6782, !range !2744
  %8 = mul nsw i32 %7, -2, !dbg !6783
  %9 = add nsw i32 %8, 62, !dbg !6783
  %10 = and i32 %9, 62, !dbg !6784
  br label %11, !dbg !6785

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !6774
  ret i32 %12, !dbg !6786
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !6787 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6791, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i8 %1, metadata !6792, metadata !DIExpression()), !dbg !6793
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !6794
  ret void, !dbg !6796
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6797 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6801, metadata !DIExpression()), !dbg !6808
  call void @llvm.dbg.value(metadata i8 %1, metadata !6802, metadata !DIExpression()), !dbg !6808
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6809
  call void @llvm.dbg.value(metadata i8 %3, metadata !6803, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6808
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !6810
  call void @llvm.dbg.value(metadata i32 %4, metadata !6803, metadata !DIExpression()), !dbg !6808
  %5 = icmp ne i32 %4, -22, !dbg !6811
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !6812
  call void @llvm.dbg.value(metadata i32 %4, metadata !6804, metadata !DIExpression()), !dbg !6813
  br i1 %7, label %8, label %12, !dbg !6812

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6804, metadata !DIExpression()), !dbg !6813
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !6814
  %10 = add i32 %9, 1, !dbg !6817
  call void @llvm.dbg.value(metadata i32 %10, metadata !6804, metadata !DIExpression()), !dbg !6813
  %11 = icmp eq i32 %10, 8, !dbg !6818
  br i1 %11, label %12, label %8, !dbg !6819, !llvm.loop !6820

12:                                               ; preds = %8, %2
  ret void, !dbg !6822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !6823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6826, metadata !DIExpression()), !dbg !6827
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !6828
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !6829
  ret void, !dbg !6830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6831 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6836
  %2 = icmp ugt i32 %1, 8, !dbg !6838
  br i1 %2, label %14, label %3, !dbg !6839

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !6840
  call void @llvm.dbg.value(metadata i32 0, metadata !6835, metadata !DIExpression()), !dbg !6841
  %4 = icmp eq i32 %1, 0, !dbg !6842
  br i1 %4, label %12, label %5, !dbg !6845

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6845

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6835, metadata !DIExpression()), !dbg !6841
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6846
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !6848
  %10 = add nuw i32 %8, 1, !dbg !6849
  call void @llvm.dbg.value(metadata i32 %10, metadata !6835, metadata !DIExpression()), !dbg !6841
  %11 = icmp eq i32 %10, %1, !dbg !6842
  br i1 %11, label %12, label %7, !dbg !6845, !llvm.loop !6850

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6852
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6853
  tail call void @arm_core_mpu_enable() #25, !dbg !6854
  br label %14, !dbg !6855

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6841
  ret i32 %15, !dbg !6856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !6857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6864, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i8* %1, metadata !6865, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i8* %0, metadata !6866, metadata !DIExpression()), !dbg !6867
  %3 = load i8, i8* %1, align 1, !dbg !6868
  %4 = icmp eq i8 %3, 0, !dbg !6869
  br i1 %4, label %13, label %5, !dbg !6870

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6864, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i8* %8, metadata !6865, metadata !DIExpression()), !dbg !6867
  store i8 %6, i8* %7, align 1, !dbg !6871
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6873
  call void @llvm.dbg.value(metadata i8* %9, metadata !6864, metadata !DIExpression()), !dbg !6867
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6874
  call void @llvm.dbg.value(metadata i8* %10, metadata !6865, metadata !DIExpression()), !dbg !6867
  %11 = load i8, i8* %10, align 1, !dbg !6868
  %12 = icmp eq i8 %11, 0, !dbg !6869
  br i1 %12, label %13, label %5, !dbg !6870, !llvm.loop !6875

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6877
  ret i8* %0, !dbg !6878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !6879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6883, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8* %1, metadata !6884, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i32 %2, metadata !6885, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8* %0, metadata !6886, metadata !DIExpression()), !dbg !6887
  %4 = icmp eq i32 %2, 0, !dbg !6888
  br i1 %4, label %22, label %5, !dbg !6889

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6883, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i32 %7, metadata !6885, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i8* %8, metadata !6884, metadata !DIExpression()), !dbg !6887
  %9 = load i8, i8* %8, align 1, !dbg !6890
  %10 = icmp eq i8 %9, 0, !dbg !6891
  br i1 %10, label %16, label %11, !dbg !6892

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6893
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6895
  call void @llvm.dbg.value(metadata i8* %12, metadata !6884, metadata !DIExpression()), !dbg !6887
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6896
  call void @llvm.dbg.value(metadata i8* %13, metadata !6883, metadata !DIExpression()), !dbg !6887
  %14 = add i32 %7, -1, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %14, metadata !6885, metadata !DIExpression()), !dbg !6887
  %15 = icmp eq i32 %14, 0, !dbg !6888
  br i1 %15, label %22, label %5, !dbg !6889, !llvm.loop !6898

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6883, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.value(metadata i32 %18, metadata !6885, metadata !DIExpression()), !dbg !6887
  store i8 0, i8* %17, align 1, !dbg !6900
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6902
  call void @llvm.dbg.value(metadata i8* %19, metadata !6883, metadata !DIExpression()), !dbg !6887
  %20 = add i32 %18, -1, !dbg !6903
  call void @llvm.dbg.value(metadata i32 %20, metadata !6885, metadata !DIExpression()), !dbg !6887
  %21 = icmp eq i32 %20, 0, !dbg !6904
  br i1 %21, label %22, label %16, !dbg !6905, !llvm.loop !6906

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6908
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !6909 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6913, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 %1, metadata !6914, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.value(metadata i32 %1, metadata !6915, metadata !DIExpression()), !dbg !6916
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6917

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6913, metadata !DIExpression()), !dbg !6916
  %6 = load i8, i8* %5, align 1, !dbg !6918
  %7 = icmp eq i8 %6, %3, !dbg !6919
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6920
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6921
  call void @llvm.dbg.value(metadata i8* %10, metadata !6913, metadata !DIExpression()), !dbg !6916
  br i1 %9, label %11, label %4, !dbg !6920, !llvm.loop !6923

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6925
  ret i8* %12, !dbg !6926
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !6927 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6929, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i32 %1, metadata !6930, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i8* null, metadata !6931, metadata !DIExpression()), !dbg !6932
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6933

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6932
  call void @llvm.dbg.value(metadata i8* %6, metadata !6931, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i8* %5, metadata !6929, metadata !DIExpression()), !dbg !6932
  %7 = load i8, i8* %5, align 1, !dbg !6934
  %8 = icmp eq i8 %7, %3, !dbg !6937
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6938
  call void @llvm.dbg.value(metadata i8* %9, metadata !6931, metadata !DIExpression()), !dbg !6932
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6939
  call void @llvm.dbg.value(metadata i8* %10, metadata !6929, metadata !DIExpression()), !dbg !6932
  %11 = icmp eq i8 %7, 0, !dbg !6940
  br i1 %11, label %12, label %4, !dbg !6940, !llvm.loop !6941

12:                                               ; preds = %4
  ret i8* %9, !dbg !6943
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !6944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6948, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 0, metadata !6949, metadata !DIExpression()), !dbg !6950
  %2 = load i8, i8* %0, align 1, !dbg !6951
  %3 = icmp eq i8 %2, 0, !dbg !6952
  br i1 %3, label %11, label %4, !dbg !6953

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i8* %6, metadata !6948, metadata !DIExpression()), !dbg !6950
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6954
  call void @llvm.dbg.value(metadata i8* %7, metadata !6948, metadata !DIExpression()), !dbg !6950
  %8 = add i32 %5, 1, !dbg !6956
  call void @llvm.dbg.value(metadata i32 %8, metadata !6949, metadata !DIExpression()), !dbg !6950
  %9 = load i8, i8* %7, align 1, !dbg !6951
  %10 = icmp eq i8 %9, 0, !dbg !6952
  br i1 %10, label %11, label %4, !dbg !6953, !llvm.loop !6957

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6950
  ret i32 %12, !dbg !6959
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !6960 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6964, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 %1, metadata !6965, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i32 0, metadata !6966, metadata !DIExpression()), !dbg !6967
  %3 = load i8, i8* %0, align 1, !dbg !6968
  %4 = icmp ne i8 %3, 0, !dbg !6969
  %5 = icmp ne i32 %1, 0, !dbg !6970
  %6 = and i1 %4, %5, !dbg !6970
  br i1 %6, label %7, label %16, !dbg !6971

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6966, metadata !DIExpression()), !dbg !6967
  call void @llvm.dbg.value(metadata i8* %9, metadata !6964, metadata !DIExpression()), !dbg !6967
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6972
  call void @llvm.dbg.value(metadata i8* %10, metadata !6964, metadata !DIExpression()), !dbg !6967
  %11 = add nuw i32 %8, 1, !dbg !6974
  call void @llvm.dbg.value(metadata i32 %11, metadata !6966, metadata !DIExpression()), !dbg !6967
  %12 = load i8, i8* %10, align 1, !dbg !6968
  %13 = icmp ne i8 %12, 0, !dbg !6969
  %14 = icmp ult i32 %11, %1, !dbg !6970
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6970
  br i1 %15, label %7, label %16, !dbg !6971, !llvm.loop !6975

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6967
  ret i32 %17, !dbg !6977
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !6978 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6982, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i8* %1, metadata !6983, metadata !DIExpression()), !dbg !6984
  %3 = load i8, i8* %0, align 1, !dbg !6985
  %4 = load i8, i8* %1, align 1, !dbg !6986
  %5 = icmp ne i8 %3, %4, !dbg !6987
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6988
  br i1 %7, label %18, label %8, !dbg !6988

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.value(metadata i8* %10, metadata !6982, metadata !DIExpression()), !dbg !6984
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6989
  call void @llvm.dbg.value(metadata i8* %11, metadata !6982, metadata !DIExpression()), !dbg !6984
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6991
  call void @llvm.dbg.value(metadata i8* %12, metadata !6983, metadata !DIExpression()), !dbg !6984
  %13 = load i8, i8* %11, align 1, !dbg !6985
  %14 = load i8, i8* %12, align 1, !dbg !6986
  %15 = icmp ne i8 %13, %14, !dbg !6987
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6988
  br i1 %17, label %18, label %8, !dbg !6988, !llvm.loop !6992

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6985
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6986
  %21 = zext i8 %19 to i32, !dbg !6995
  %22 = zext i8 %20 to i32, !dbg !6996
  %23 = sub nsw i32 %21, %22, !dbg !6997
  ret i32 %23, !dbg !6998
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7003, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %1, metadata !7004, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i32 %2, metadata !7005, metadata !DIExpression()), !dbg !7006
  %4 = icmp eq i32 %2, 0, !dbg !7007
  br i1 %4, label %23, label %5, !dbg !7007

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %7, metadata !7004, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.value(metadata i8* %8, metadata !7003, metadata !DIExpression()), !dbg !7006
  %9 = load i8, i8* %8, align 1, !dbg !7008
  %10 = load i8, i8* %7, align 1, !dbg !7009
  %11 = icmp ne i8 %9, %10, !dbg !7010
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7011
  br i1 %13, label %19, label %14, !dbg !7011

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7012
  call void @llvm.dbg.value(metadata i8* %15, metadata !7003, metadata !DIExpression()), !dbg !7006
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7014
  call void @llvm.dbg.value(metadata i8* %16, metadata !7004, metadata !DIExpression()), !dbg !7006
  %17 = add i32 %6, -1, !dbg !7015
  call void @llvm.dbg.value(metadata i32 %17, metadata !7005, metadata !DIExpression()), !dbg !7006
  %18 = icmp eq i32 %17, 0, !dbg !7007
  br i1 %18, label %23, label %5, !dbg !7007, !llvm.loop !7016

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7019
  %21 = zext i8 %10 to i32, !dbg !7020
  %22 = sub nsw i32 %20, %21, !dbg !7021
  br label %23, !dbg !7022

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7022
  ret i32 %24, !dbg !7023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7029, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i8* %1, metadata !7030, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i8** %2, metadata !7031, metadata !DIExpression()), !dbg !7034
  %4 = icmp eq i8* %0, null, !dbg !7035
  br i1 %4, label %5, label %7, !dbg !7035

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7036
  br label %7, !dbg !7035

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7035
  call void @llvm.dbg.value(metadata i8* %8, metadata !7032, metadata !DIExpression()), !dbg !7034
  %9 = load i8, i8* %8, align 1, !dbg !7037
  %10 = icmp eq i8 %9, 0, !dbg !7037
  br i1 %10, label %33, label %11, !dbg !7038

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7032, metadata !DIExpression()), !dbg !7034
  %14 = zext i8 %12 to i32, !dbg !7037
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !7039
  %16 = icmp eq i8* %15, null, !dbg !7038
  br i1 %16, label %21, label %17, !dbg !7040

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7041
  call void @llvm.dbg.value(metadata i8* %18, metadata !7032, metadata !DIExpression()), !dbg !7034
  %19 = load i8, i8* %18, align 1, !dbg !7037
  %20 = icmp eq i8 %19, 0, !dbg !7037
  br i1 %20, label %33, label %11, !dbg !7038, !llvm.loop !7043

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7033, metadata !DIExpression()), !dbg !7034
  %24 = zext i8 %22 to i32, !dbg !7045
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !7046
  %26 = icmp eq i8* %25, null, !dbg !7047
  br i1 %26, label %27, label %31, !dbg !7048

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7049
  call void @llvm.dbg.value(metadata i8* %28, metadata !7033, metadata !DIExpression()), !dbg !7034
  %29 = load i8, i8* %28, align 1, !dbg !7045
  %30 = icmp eq i8 %29, 0, !dbg !7045
  br i1 %30, label %33, label %21, !dbg !7051, !llvm.loop !7052

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7054
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7057
  br label %33, !dbg !7058

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7034
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7034
  store i8* %34, i8** %2, align 4, !dbg !7034
  ret i8* %35, !dbg !7059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7062, metadata !DIExpression()), !dbg !7064
  call void @llvm.dbg.value(metadata i8* %1, metadata !7063, metadata !DIExpression()), !dbg !7064
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7065
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7066
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !7067
  ret i8* %0, !dbg !7068
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7069 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7071, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %1, metadata !7072, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 %2, metadata !7073, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %0, metadata !7074, metadata !DIExpression()), !dbg !7076
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7077
  call void @llvm.dbg.value(metadata i32 %4, metadata !7075, metadata !DIExpression()), !dbg !7076
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7078
  call void @llvm.dbg.value(metadata i8* %5, metadata !7071, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %1, metadata !7072, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 %2, metadata !7073, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 %2, metadata !7073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7076
  %6 = icmp eq i32 %2, 0, !dbg !7079
  br i1 %6, label %18, label %7, !dbg !7080

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7081
  call void @llvm.dbg.value(metadata i8* %9, metadata !7071, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i8* %10, metadata !7072, metadata !DIExpression()), !dbg !7076
  %12 = load i8, i8* %10, align 1, !dbg !7082
  %13 = icmp eq i8 %12, 0, !dbg !7083
  br i1 %13, label %18, label %14, !dbg !7084

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7085
  call void @llvm.dbg.value(metadata i8* %15, metadata !7072, metadata !DIExpression()), !dbg !7076
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7087
  call void @llvm.dbg.value(metadata i8* %16, metadata !7071, metadata !DIExpression()), !dbg !7076
  store i8 %12, i8* %9, align 1, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %11, metadata !7073, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.value(metadata i32 %11, metadata !7073, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7076
  %17 = icmp eq i32 %11, 0, !dbg !7079
  br i1 %17, label %18, label %7, !dbg !7080, !llvm.loop !7089

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7076
  store i8 0, i8* %19, align 1, !dbg !7091
  ret i8* %0, !dbg !7092
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7093 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7097, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i8* %1, metadata !7098, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i32 %2, metadata !7099, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i8* %0, metadata !7100, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i8* %1, metadata !7101, metadata !DIExpression()), !dbg !7102
  %4 = icmp eq i32 %2, 0, !dbg !7103
  br i1 %4, label %31, label %5, !dbg !7105

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i8* %0, metadata !7100, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i32 %2, metadata !7099, metadata !DIExpression()), !dbg !7102
  %6 = add i32 %2, -1, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %6, metadata !7099, metadata !DIExpression()), !dbg !7102
  %7 = icmp eq i32 %6, 0, !dbg !7107
  br i1 %7, label %23, label %8, !dbg !7108

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7109
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7109
  br label %11, !dbg !7109

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i8* %14, metadata !7100, metadata !DIExpression()), !dbg !7102
  %15 = load i8, i8* %14, align 1, !dbg !7110
  %16 = load i8, i8* %13, align 1, !dbg !7111
  %17 = icmp eq i8 %15, %16, !dbg !7112
  br i1 %17, label %18, label %23, !dbg !7109

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7113
  call void @llvm.dbg.value(metadata i8* %19, metadata !7100, metadata !DIExpression()), !dbg !7102
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7115
  call void @llvm.dbg.value(metadata i8* %20, metadata !7101, metadata !DIExpression()), !dbg !7102
  call void @llvm.dbg.value(metadata i32 %12, metadata !7099, metadata !DIExpression()), !dbg !7102
  %21 = add i32 %12, -1, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %21, metadata !7099, metadata !DIExpression()), !dbg !7102
  %22 = icmp eq i32 %21, 0, !dbg !7107
  br i1 %22, label %23, label %11, !dbg !7108, !llvm.loop !7116

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7102
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7102
  %26 = load i8, i8* %24, align 1, !dbg !7118
  %27 = zext i8 %26 to i32, !dbg !7118
  %28 = load i8, i8* %25, align 1, !dbg !7119
  %29 = zext i8 %28 to i32, !dbg !7119
  %30 = sub nsw i32 %27, %29, !dbg !7120
  br label %31, !dbg !7121

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7102
  ret i32 %32, !dbg !7122
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7123 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7127, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %1, metadata !7128, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i32 %2, metadata !7129, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %0, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %1, metadata !7131, metadata !DIExpression()), !dbg !7132
  %4 = ptrtoint i8* %0 to i32, !dbg !7133
  %5 = ptrtoint i8* %1 to i32, !dbg !7133
  %6 = sub i32 %4, %5, !dbg !7133
  %7 = icmp ult i32 %6, %2, !dbg !7135
  br i1 %7, label %10, label %8, !dbg !7136

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7131, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %0, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i32 %2, metadata !7129, metadata !DIExpression()), !dbg !7132
  %9 = icmp eq i32 %2, 0, !dbg !7137
  br i1 %9, label %26, label %17, !dbg !7139

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7129, metadata !DIExpression()), !dbg !7132
  %12 = add i32 %11, -1, !dbg !7140
  call void @llvm.dbg.value(metadata i32 %12, metadata !7129, metadata !DIExpression()), !dbg !7132
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7143
  %14 = load i8, i8* %13, align 1, !dbg !7143
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7144
  store i8 %14, i8* %15, align 1, !dbg !7145
  %16 = icmp eq i32 %12, 0, !dbg !7146
  br i1 %16, label %26, label %10, !dbg !7147, !llvm.loop !7148

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7131, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i8* %19, metadata !7130, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.value(metadata i32 %20, metadata !7129, metadata !DIExpression()), !dbg !7132
  %21 = load i8, i8* %18, align 1, !dbg !7150
  store i8 %21, i8* %19, align 1, !dbg !7152
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7153
  call void @llvm.dbg.value(metadata i8* %22, metadata !7130, metadata !DIExpression()), !dbg !7132
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7154
  call void @llvm.dbg.value(metadata i8* %23, metadata !7131, metadata !DIExpression()), !dbg !7132
  %24 = add i32 %20, -1, !dbg !7155
  call void @llvm.dbg.value(metadata i32 %24, metadata !7129, metadata !DIExpression()), !dbg !7132
  %25 = icmp eq i32 %24, 0, !dbg !7137
  br i1 %25, label %26, label %17, !dbg !7139, !llvm.loop !7156

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7158
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7165, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i8* %1, metadata !7166, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 %2, metadata !7167, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i8* %0, metadata !7168, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i8* %1, metadata !7169, metadata !DIExpression()), !dbg !7170
  %4 = icmp eq i32 %2, 0, !dbg !7171
  br i1 %4, label %14, label %5, !dbg !7172

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i8* %7, metadata !7168, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 %8, metadata !7167, metadata !DIExpression()), !dbg !7170
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7173
  call void @llvm.dbg.value(metadata i8* %9, metadata !7169, metadata !DIExpression()), !dbg !7170
  %10 = load i8, i8* %6, align 1, !dbg !7175
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7176
  call void @llvm.dbg.value(metadata i8* %11, metadata !7168, metadata !DIExpression()), !dbg !7170
  store i8 %10, i8* %7, align 1, !dbg !7177
  %12 = add i32 %8, -1, !dbg !7178
  call void @llvm.dbg.value(metadata i32 %12, metadata !7167, metadata !DIExpression()), !dbg !7170
  %13 = icmp eq i32 %12, 0, !dbg !7171
  br i1 %13, label %14, label %5, !dbg !7172, !llvm.loop !7179

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7186, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 %1, metadata !7187, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 %2, metadata !7188, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %0, metadata !7189, metadata !DIExpression()), !dbg !7191
  %4 = trunc i32 %1 to i8, !dbg !7192
  call void @llvm.dbg.value(metadata i8 %4, metadata !7190, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 %2, metadata !7188, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %0, metadata !7189, metadata !DIExpression()), !dbg !7191
  %5 = icmp eq i32 %2, 0, !dbg !7193
  br i1 %5, label %12, label %6, !dbg !7194

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7188, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i8* %8, metadata !7189, metadata !DIExpression()), !dbg !7191
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7195
  call void @llvm.dbg.value(metadata i8* %9, metadata !7189, metadata !DIExpression()), !dbg !7191
  store i8 %4, i8* %8, align 1, !dbg !7197
  %10 = add i32 %7, -1, !dbg !7198
  call void @llvm.dbg.value(metadata i32 %10, metadata !7188, metadata !DIExpression()), !dbg !7191
  %11 = icmp eq i32 %10, 0, !dbg !7193
  br i1 %11, label %12, label %6, !dbg !7194, !llvm.loop !7199

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7201
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7202 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7206, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i32 %1, metadata !7207, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i32 %2, metadata !7208, metadata !DIExpression()), !dbg !7212
  %4 = icmp eq i32 %2, 0, !dbg !7213
  br i1 %4, label %17, label %5, !dbg !7214

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7215

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7216
  call void @llvm.dbg.value(metadata i8* %9, metadata !7209, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i32 %8, metadata !7208, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i8* %9, metadata !7209, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7216
  %10 = load i8, i8* %9, align 1, !dbg !7217
  %11 = icmp eq i8 %10, %6, !dbg !7220
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7221
  call void @llvm.dbg.value(metadata i8* %12, metadata !7209, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.value(metadata i32 %13, metadata !7208, metadata !DIExpression()), !dbg !7212
  br i1 %15, label %16, label %7, !dbg !7221, !llvm.loop !7222

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7224

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7212
  ret i8* %19, !dbg !7225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7226 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7228, metadata !DIExpression()), !dbg !7229
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7230
  ret void, !dbg !7231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7234, metadata !DIExpression()), !dbg !7235
  ret i32 -1, !dbg !7236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7241, metadata !DIExpression()), !dbg !7243
  call void @llvm.dbg.value(metadata i32* %1, metadata !7242, metadata !DIExpression()), !dbg !7243
  %3 = ptrtoint i32* %1 to i32, !dbg !7244
  %4 = and i32 %3, -2, !dbg !7244
  %5 = icmp eq i32 %4, 2, !dbg !7244
  br i1 %5, label %6, label %9, !dbg !7244

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7245
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !7245
  br label %9, !dbg !7246

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7246
  ret i32 %10, !dbg !7247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7250, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.value(metadata i32* %1, metadata !7251, metadata !DIExpression()), !dbg !7252
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !7253
  ret i32 %3, !dbg !7254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7258, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata i32* %1, metadata !7259, metadata !DIExpression()), !dbg !7260
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7261, !srcloc !7263
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !7264
  ret i32 %3, !dbg !7265
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7266 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7271, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i32* %1, metadata !7272, metadata !DIExpression()), !dbg !7275
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7276
  call void @llvm.dbg.value(metadata i32 %3, metadata !7273, metadata !DIExpression()), !dbg !7275
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !7277
  call void @llvm.dbg.value(metadata i32 %4, metadata !7274, metadata !DIExpression()), !dbg !7275
  %5 = icmp ne i32 %3, %4, !dbg !7278
  %6 = sext i1 %5 to i32, !dbg !7279
  ret i32 %6, !dbg !7280
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7281 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7285, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32 %1, metadata !7286, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32 %2, metadata !7287, metadata !DIExpression()), !dbg !7289
  call void @llvm.dbg.value(metadata i32* %3, metadata !7288, metadata !DIExpression()), !dbg !7289
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !7290
  ret i32 %5, !dbg !7291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7292 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7294, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32 %1, metadata !7295, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32 %2, metadata !7296, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32* %3, metadata !7297, metadata !DIExpression()), !dbg !7298
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7299, !srcloc !7301
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !7302
  ret i32 %5, !dbg !7303
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7304 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7306, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32 %1, metadata !7307, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32 %2, metadata !7308, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32* %3, metadata !7309, metadata !DIExpression()), !dbg !7314
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7315
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7317
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7317
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7317
  br i1 %11, label %33, label %12, !dbg !7317

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7314
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7314
  call void @llvm.dbg.value(metadata i8* %14, metadata !7312, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32 %13, metadata !7310, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32 %1, metadata !7311, metadata !DIExpression()), !dbg !7314
  br label %15, !dbg !7318

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7320
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7314
  call void @llvm.dbg.value(metadata i8* %17, metadata !7312, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.value(metadata i32 %16, metadata !7311, metadata !DIExpression()), !dbg !7314
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7321
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7324
  call void @llvm.dbg.value(metadata i8* %19, metadata !7312, metadata !DIExpression()), !dbg !7314
  %20 = load i8, i8* %17, align 1, !dbg !7325
  %21 = zext i8 %20 to i32, !dbg !7326
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !7321
  %23 = icmp eq i32 %22, -1, !dbg !7327
  br i1 %23, label %30, label %24, !dbg !7328

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %25, metadata !7311, metadata !DIExpression()), !dbg !7314
  %26 = icmp eq i32 %25, 0, !dbg !7330
  br i1 %26, label %27, label %15, !dbg !7331, !llvm.loop !7332

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7334
  call void @llvm.dbg.value(metadata i32 %28, metadata !7310, metadata !DIExpression()), !dbg !7314
  %29 = icmp eq i32 %28, 0, !dbg !7335
  br i1 %29, label %30, label %12, !dbg !7336, !llvm.loop !7337

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7314
  call void @llvm.dbg.value(metadata i32 %31, metadata !7310, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.label(metadata !7313), !dbg !7340
  %32 = sub i32 %2, %31, !dbg !7341
  br label %33, !dbg !7342

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7314
  ret i32 %34, !dbg !7343
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7344 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7348, metadata !DIExpression()), !dbg !7349
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !7350
  %3 = icmp eq i32 %2, -1, !dbg !7352
  br i1 %3, label %8, label %4, !dbg !7353

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !7354
  %6 = icmp eq i32 %5, -1, !dbg !7355
  %7 = sext i1 %6 to i32, !dbg !7354
  br label %8, !dbg !7356

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7349
  ret i32 %9, !dbg !7357
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7360, metadata !DIExpression()), !dbg !7361
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !7362
  br i1 %2, label %3, label %4, !dbg !7364

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7365
  br label %4, !dbg !7366

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7361
  ret i32 %5, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7368 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7373, metadata !DIExpression()), !dbg !7374
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7375, !srcloc !7377
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !7378
  ret i1 %1, !dbg !7379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7380 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7381
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7382
  ret void, !dbg !7383
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7386, metadata !DIExpression()), !dbg !7387
  %2 = icmp eq i32 %0, 10, !dbg !7388
  br i1 %2, label %3, label %4, !dbg !7390

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7391
  br label %4, !dbg !7393

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7394
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7395
  ret i32 %0, !dbg !7396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7397 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8 %0, metadata !7401, metadata !DIExpression()), !dbg !7402
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7403, !srcloc !7405
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7406
  ret void, !dbg !7407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7408 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7410, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.value(metadata i8 %0, metadata !7411, metadata !DIExpression()), !dbg !7413
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_21, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7414
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7412, metadata !DIExpression()), !dbg !7413
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7415
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7415
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_21, i8 noundef zeroext %0) #24, !dbg !7416
  ret void, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7418 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_21, metadata !7420, metadata !DIExpression()), !dbg !7421
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_21) #24, !dbg !7422
  ret i1 %1, !dbg !7423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !7424 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7471, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7472, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7473, metadata !DIExpression()), !dbg !7474
  ret void, !dbg !7475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_setup(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !7476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7478, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8 %1, metadata !7479, metadata !DIExpression()), !dbg !7486
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7487
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_cfg**, !dbg !7487
  %5 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %4, align 4, !dbg !7487
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %5, metadata !7480, metadata !DIExpression()), !dbg !7486
  %6 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7488
  %7 = load %struct.sys_memory_stats*, %struct.sys_memory_stats** %6, align 4, !dbg !7488
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %7, metadata !7482, metadata !DIExpression()), !dbg !7486
  %8 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7489
  %9 = bitcast i8** %8 to %struct.wdt_sam_dev_data**, !dbg !7489
  %10 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %9, align 4, !dbg !7489
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %10, metadata !7484, metadata !DIExpression()), !dbg !7486
  %11 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 2, !dbg !7490
  %12 = load i8, i8* %11, align 4, !dbg !7490, !range !6124
  %13 = icmp eq i8 %12, 0, !dbg !7490
  br i1 %13, label %36, label %14, !dbg !7492

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 3, !dbg !7493
  %16 = load i8, i8* %15, align 1, !dbg !7493, !range !6124
  %17 = icmp eq i8 %16, 0, !dbg !7493
  br i1 %17, label %18, label %36, !dbg !7495

18:                                               ; preds = %14
  %19 = zext i8 %1 to i32, !dbg !7496
  %20 = and i32 %19, 1, !dbg !7498
  %21 = icmp eq i32 %20, 0, !dbg !7499
  br i1 %21, label %26, label %22, !dbg !7500

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 1, !dbg !7501
  %24 = load i32, i32* %23, align 4, !dbg !7503
  %25 = or i32 %24, 536870912, !dbg !7503
  store i32 %25, i32* %23, align 4, !dbg !7503
  br label %26, !dbg !7504

26:                                               ; preds = %22, %18
  %27 = and i32 %19, 2, !dbg !7505
  %28 = icmp eq i32 %27, 0, !dbg !7507
  %29 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %10, i32 0, i32 1
  %30 = load i32, i32* %29, align 4, !dbg !7486
  br i1 %28, label %33, label %31, !dbg !7508

31:                                               ; preds = %26
  %32 = or i32 %30, 268435456, !dbg !7509
  store i32 %32, i32* %29, align 4, !dbg !7509
  br label %33, !dbg !7511

33:                                               ; preds = %26, %31
  %34 = phi i32 [ %32, %31 ], [ %30, %26 ], !dbg !7512
  %35 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %7, i32 0, i32 1, !dbg !7513
  store volatile i32 %34, i32* %35, align 4, !dbg !7514
  store i8 1, i8* %15, align 1, !dbg !7515
  br label %36, !dbg !7516

36:                                               ; preds = %14, %2, %33
  %37 = phi i32 [ 0, %33 ], [ -22, %2 ], [ -1, %14 ], !dbg !7486
  ret i32 %37, !dbg !7517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_disable(%struct.device* nocapture noundef readonly %0) #15 !dbg !7518 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7520, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* undef, metadata !7521, metadata !DIExpression()), !dbg !7524
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* undef, metadata !7522, metadata !DIExpression()), !dbg !7524
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7525
  %3 = bitcast i8** %2 to %struct.wdt_sam_dev_data**, !dbg !7525
  %4 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %3, align 4, !dbg !7525
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %4, metadata !7523, metadata !DIExpression()), !dbg !7524
  %5 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %4, i32 0, i32 3, !dbg !7526
  %6 = load i8, i8* %5, align 1, !dbg !7526, !range !6124
  %7 = icmp eq i8 %6, 0, !dbg !7526
  br i1 %7, label %8, label %17, !dbg !7528

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7529
  %10 = bitcast i8** %9 to %struct.wdt_sam_dev_cfg**, !dbg !7529
  %11 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %10, align 4, !dbg !7529
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %11, metadata !7521, metadata !DIExpression()), !dbg !7524
  %12 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %11, i32 0, i32 0, !dbg !7530
  %13 = load %struct.sys_memory_stats*, %struct.sys_memory_stats** %12, align 4, !dbg !7530
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %13, metadata !7522, metadata !DIExpression()), !dbg !7524
  %14 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %13, i32 0, i32 1, !dbg !7531
  %15 = load volatile i32, i32* %14, align 4, !dbg !7532
  %16 = or i32 %15, 32768, !dbg !7532
  store volatile i32 %16, i32* %14, align 4, !dbg !7532
  store i8 1, i8* %5, align 1, !dbg !7533
  br label %17, !dbg !7534

17:                                               ; preds = %1, %8
  %18 = phi i32 [ 0, %8 ], [ -1, %1 ], !dbg !7524
  ret i32 %18, !dbg !7535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @wdt_sam_install_timeout(%struct.device* nocapture noundef readonly %0, %struct.wdt_timeout_cfg* nocapture noundef readonly %1) #7 !dbg !7536 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7538, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.wdt_timeout_cfg* %1, metadata !7539, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata i32 0, metadata !7540, metadata !DIExpression()), !dbg !7543
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7544
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_data**, !dbg !7544
  %5 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %4, align 4, !dbg !7544
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %5, metadata !7542, metadata !DIExpression()), !dbg !7543
  %6 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 2, !dbg !7545
  %7 = load i8, i8* %6, align 4, !dbg !7545, !range !6124
  %8 = icmp eq i8 %7, 0, !dbg !7545
  br i1 %8, label %9, label %36, !dbg !7547

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 0, i32 0, !dbg !7548
  %11 = load i32, i32* %10, align 4, !dbg !7548
  %12 = icmp eq i32 %11, 0, !dbg !7550
  br i1 %12, label %13, label %36, !dbg !7551

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 0, i32 1, !dbg !7552
  %15 = load i32, i32* %14, align 4, !dbg !7552
  %16 = tail call i32 @wdt_sam_convert_timeout(i32 noundef %15, i32 noundef 32768) #25, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %16, metadata !7541, metadata !DIExpression()), !dbg !7543
  %17 = icmp slt i32 %16, 0, !dbg !7554
  br i1 %17, label %36, label %18, !dbg !7556

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 2, !dbg !7557
  %20 = load i8, i8* %19, align 4, !dbg !7557
  switch i8 %20, label %36 [
    i8 2, label %28
    i8 0, label %21
    i8 1, label %27
  ], !dbg !7558

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.wdt_timeout_cfg, %struct.wdt_timeout_cfg* %1, i32 0, i32 1, !dbg !7559
  %23 = load void (%struct.device*, i32)*, void (%struct.device*, i32)** %22, align 4, !dbg !7559
  %24 = icmp eq void (%struct.device*, i32)* %23, null, !dbg !7562
  br i1 %24, label %36, label %25, !dbg !7563

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 4096, metadata !7540, metadata !DIExpression()), !dbg !7543
  %26 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 0, !dbg !7564
  store void (%struct.device*, i32)* %23, void (%struct.device*, i32)** %26, align 4, !dbg !7566
  br label %28, !dbg !7567

27:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 24576, metadata !7540, metadata !DIExpression()), !dbg !7543
  br label %28, !dbg !7568

28:                                               ; preds = %18, %27, %25
  %29 = phi i32 [ 24576, %27 ], [ 4096, %25 ], [ 8192, %18 ], !dbg !7569
  call void @llvm.dbg.value(metadata i32 %29, metadata !7540, metadata !DIExpression()), !dbg !7543
  %30 = and i32 %16, 4095, !dbg !7570
  %31 = shl i32 %16, 16, !dbg !7571
  %32 = and i32 %31, 268369920, !dbg !7571
  %33 = or i32 %32, %30, !dbg !7572
  %34 = or i32 %33, %29, !dbg !7573
  %35 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %5, i32 0, i32 1, !dbg !7574
  store i32 %34, i32* %35, align 4, !dbg !7575
  store i8 1, i8* %6, align 4, !dbg !7576
  br label %36, !dbg !7577

36:                                               ; preds = %18, %21, %13, %9, %2, %28
  %37 = phi i32 [ 0, %28 ], [ -12, %2 ], [ -22, %9 ], [ -22, %13 ], [ -22, %21 ], [ -134, %18 ], !dbg !7543
  ret i32 %37, !dbg !7578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @wdt_sam_feed(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !7579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7581, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32 %1, metadata !7582, metadata !DIExpression()), !dbg !7585
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7586
  %4 = bitcast i8** %3 to %struct.wdt_sam_dev_cfg**, !dbg !7586
  %5 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %4, align 4, !dbg !7586
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %5, metadata !7583, metadata !DIExpression()), !dbg !7585
  %6 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7587
  %7 = load %struct.sys_memory_stats*, %struct.sys_memory_stats** %6, align 4, !dbg !7587
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %7, metadata !7584, metadata !DIExpression()), !dbg !7585
  %8 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %7, i32 0, i32 0, !dbg !7588
  %9 = load volatile i32, i32* %8, align 4, !dbg !7589
  %10 = or i32 %9, -1526726655, !dbg !7589
  store volatile i32 %10, i32* %8, align 4, !dbg !7589
  ret i32 0, !dbg !7590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @wdt_sam_convert_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 %1, metadata !7596, metadata !DIExpression()), !dbg !7599
  %3 = mul i32 %0, 1000, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %3, metadata !7595, metadata !DIExpression()), !dbg !7599
  %4 = udiv i32 128000000, %1, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %4, metadata !7598, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 %4, metadata !7597, metadata !DIExpression(DW_OP_constu, 4095, DW_OP_mul, DW_OP_stack_value)), !dbg !7599
  %5 = icmp ult i32 %3, %4, !dbg !7602
  %6 = mul i32 %4, 4095
  %7 = icmp ugt i32 %3, %6
  %8 = or i1 %5, %7, !dbg !7604
  call void @llvm.dbg.value(metadata i32 %6, metadata !7597, metadata !DIExpression()), !dbg !7599
  br i1 %8, label %12, label %9, !dbg !7604

9:                                                ; preds = %2
  %10 = udiv i32 %3, %4, !dbg !7605
  %11 = and i32 %10, 4095, !dbg !7605
  br label %12, !dbg !7606

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %11, %9 ], [ -22, %2 ], !dbg !7599
  ret i32 %13, !dbg !7607
}

; Function Attrs: noinline nounwind optsize
define internal void @wdt_sam_isr(%struct.device* noundef %0) #1 !dbg !7608 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7612, metadata !DIExpression()), !dbg !7617
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7618
  %3 = bitcast i8** %2 to %struct.wdt_sam_dev_cfg**, !dbg !7618
  %4 = load %struct.wdt_sam_dev_cfg*, %struct.wdt_sam_dev_cfg** %3, align 4, !dbg !7618
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_cfg* %4, metadata !7613, metadata !DIExpression()), !dbg !7617
  %5 = getelementptr inbounds %struct.wdt_sam_dev_cfg, %struct.wdt_sam_dev_cfg* %4, i32 0, i32 0, !dbg !7619
  %6 = load %struct.sys_memory_stats*, %struct.sys_memory_stats** %5, align 4, !dbg !7619
  call void @llvm.dbg.value(metadata %struct.sys_memory_stats* %6, metadata !7615, metadata !DIExpression()), !dbg !7617
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7620
  %8 = bitcast i8** %7 to %struct.wdt_sam_dev_data**, !dbg !7620
  %9 = load %struct.wdt_sam_dev_data*, %struct.wdt_sam_dev_data** %8, align 4, !dbg !7620
  call void @llvm.dbg.value(metadata %struct.wdt_sam_dev_data* %9, metadata !7616, metadata !DIExpression()), !dbg !7617
  %10 = getelementptr inbounds %struct.sys_memory_stats, %struct.sys_memory_stats* %6, i32 0, i32 2, !dbg !7621
  %11 = load volatile i32, i32* %10, align 4, !dbg !7621
  call void @llvm.dbg.value(metadata i32 %11, metadata !7614, metadata !DIExpression()), !dbg !7617
  %12 = getelementptr inbounds %struct.wdt_sam_dev_data, %struct.wdt_sam_dev_data* %9, i32 0, i32 0, !dbg !7622
  %13 = load void (%struct.device*, i32)*, void (%struct.device*, i32)** %12, align 4, !dbg !7622
  tail call void %13(%struct.device* noundef %0, i32 noundef 0) #24, !dbg !7623
  ret void, !dbg !7624
}

; Function Attrs: noinline nounwind optsize
define internal i32 @wdt_sam_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !7625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7627, metadata !DIExpression()), !dbg !7628
  %2 = tail call i32 @wdt_sam_disable(%struct.device* noundef %0) #25, !dbg !7629
  tail call fastcc void @wdt_sam_irq_config() #25, !dbg !7630
  ret i32 0, !dbg !7631
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @wdt_sam_irq_config() unnamed_addr #1 !dbg !645 {
  tail call void @z_arm_irq_priority_set(i32 noundef 4, i32 noundef 0, i32 noundef 0) #24, !dbg !7632
  tail call void @arch_irq_enable(i32 noundef 4) #24, !dbg !7634
  ret void, !dbg !7635
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !7636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7638, metadata !DIExpression()), !dbg !7645
  call void @llvm.dbg.value(metadata i8* %1, metadata !7639, metadata !DIExpression()), !dbg !7645
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7646
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7646
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7646
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7640, metadata !DIExpression()), !dbg !7645
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7647
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !7647
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !7643, metadata !DIExpression()), !dbg !7645
  %8 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 5, !dbg !7648
  %9 = load volatile i32, i32* %8, align 4, !dbg !7648
  %10 = and i32 %9, 1, !dbg !7650
  %11 = icmp eq i32 %10, 0, !dbg !7650
  br i1 %11, label %16, label %12, !dbg !7651

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 6, !dbg !7652
  %14 = load volatile i32, i32* %13, align 4, !dbg !7652
  %15 = trunc i32 %14 to i8, !dbg !7653
  store i8 %15, i8* %1, align 1, !dbg !7654
  br label %16, !dbg !7655

16:                                               ; preds = %2, %12
  %17 = phi i32 [ 0, %12 ], [ -16, %2 ], !dbg !7645
  ret i32 %17, !dbg !7656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_sam_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #15 !dbg !7657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7659, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata i8 %1, metadata !7660, metadata !DIExpression()), !dbg !7663
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7664
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7664
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7664
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7661, metadata !DIExpression()), !dbg !7663
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7665
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !7665
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !7662, metadata !DIExpression()), !dbg !7663
  %8 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 5
  br label %9, !dbg !7666

9:                                                ; preds = %9, %2
  %10 = load volatile i32, i32* %8, align 4, !dbg !7667
  %11 = and i32 %10, 2, !dbg !7668
  %12 = icmp eq i32 %11, 0, !dbg !7669
  br i1 %12, label %9, label %13, !dbg !7666, !llvm.loop !7670

13:                                               ; preds = %9
  %14 = zext i8 %1 to i32, !dbg !7672
  %15 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 7, !dbg !7673
  store volatile i32 %14, i32* %15, align 4, !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7678, metadata !DIExpression()), !dbg !7685
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7686
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !7686
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !7686
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !7679, metadata !DIExpression()), !dbg !7685
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !7687
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !7687
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !7680, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 0, metadata !7684, metadata !DIExpression()), !dbg !7685
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 5, !dbg !7688
  %8 = load volatile i32, i32* %7, align 4, !dbg !7688
  %9 = lshr i32 %8, 5, !dbg !7690
  %10 = and i32 %9, 1, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %10, metadata !7684, metadata !DIExpression()), !dbg !7685
  %11 = load volatile i32, i32* %7, align 4, !dbg !7691
  %12 = lshr i32 %11, 6, !dbg !7693
  %13 = and i32 %12, 2, !dbg !7693
  %14 = or i32 %13, %10, !dbg !7693
  call void @llvm.dbg.value(metadata i32 %14, metadata !7684, metadata !DIExpression()), !dbg !7685
  %15 = load volatile i32, i32* %7, align 4, !dbg !7694
  %16 = lshr i32 %15, 4, !dbg !7696
  %17 = and i32 %16, 4, !dbg !7696
  %18 = or i32 %14, %17, !dbg !7696
  call void @llvm.dbg.value(metadata i32 %18, metadata !7684, metadata !DIExpression()), !dbg !7685
  ret i32 %18, !dbg !7697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_sam_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #15 !dbg !7698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7700, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7701, metadata !DIExpression()), !dbg !7705
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7706
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7706
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7706
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7703, metadata !DIExpression()), !dbg !7705
  %6 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7707
  %7 = load %struct.Uart*, %struct.Uart** %6, align 4, !dbg !7707
  call void @llvm.dbg.value(metadata %struct.Uart* %7, metadata !7704, metadata !DIExpression()), !dbg !7705
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7708
  %9 = load i8, i8* %8, align 1, !dbg !7708
  %10 = icmp eq i8 %9, 1, !dbg !7710
  br i1 %10, label %11, label %30, !dbg !7711

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7712
  %13 = load i8, i8* %12, align 2, !dbg !7712
  %14 = icmp eq i8 %13, 3, !dbg !7713
  br i1 %14, label %15, label %30, !dbg !7714

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7715
  %17 = load i8, i8* %16, align 1, !dbg !7715
  %18 = icmp eq i8 %17, 0, !dbg !7716
  br i1 %18, label %19, label %30, !dbg !7717

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 0, !dbg !7718
  store volatile i32 428, i32* %20, align 4, !dbg !7719
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7720
  %22 = load i8, i8* %21, align 4, !dbg !7720
  %23 = tail call fastcc i32 @uart_sam_cfg2sam_parity(i8 noundef zeroext %22) #25, !dbg !7721
  %24 = getelementptr inbounds %struct.Uart, %struct.Uart* %7, i32 0, i32 1, !dbg !7722
  store volatile i32 %23, i32* %24, align 4, !dbg !7723
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7724
  %26 = load i32, i32* %25, align 4, !dbg !7724
  %27 = tail call fastcc i32 @uart_sam_baudrate_set(%struct.device* noundef nonnull %0, i32 noundef %26) #25, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %27, metadata !7702, metadata !DIExpression()), !dbg !7705
  %28 = icmp eq i32 %27, 0, !dbg !7726
  br i1 %28, label %29, label %30, !dbg !7728

29:                                               ; preds = %19
  store volatile i32 80, i32* %20, align 4, !dbg !7729
  br label %30, !dbg !7730

30:                                               ; preds = %19, %2, %11, %15, %29
  %31 = phi i32 [ 0, %29 ], [ -134, %15 ], [ -134, %11 ], [ -134, %2 ], [ %27, %19 ], !dbg !7705
  ret i32 %31, !dbg !7731
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_sam_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #16 !dbg !7732 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7734, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7735, metadata !DIExpression()), !dbg !7739
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7740
  %4 = bitcast i8** %3 to %struct.z_heap_bucket**, !dbg !7740
  %5 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %4, align 4, !dbg !7740
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %5, metadata !7736, metadata !DIExpression()), !dbg !7739
  %6 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %5, i32 0, i32 0, !dbg !7741
  %7 = load i32, i32* %6, align 4, !dbg !7741
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7742
  store i32 %7, i32* %8, align 4, !dbg !7743
  %9 = tail call fastcc zeroext i8 @uart_sam_get_parity(%struct.device* noundef %0) #25, !dbg !7744
  %10 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7745
  store i8 %9, i8* %10, align 4, !dbg !7746
  %11 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7747
  store i8 1, i8* %11, align 1, !dbg !7748
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7749
  store i8 3, i8* %12, align 2, !dbg !7750
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7751
  store i8 0, i8* %13, align 1, !dbg !7752
  ret i32 0, !dbg !7753
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @uart_sam_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7758, metadata !DIExpression()), !dbg !7761
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7762
  %3 = bitcast i8** %2 to %struct.uart_sam_dev_cfg**, !dbg !7762
  %4 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %3, align 4, !dbg !7762
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %4, metadata !7759, metadata !DIExpression()), !dbg !7761
  %5 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %4, i32 0, i32 0, !dbg !7763
  %6 = load %struct.Uart*, %struct.Uart** %5, align 4, !dbg !7763
  call void @llvm.dbg.value(metadata %struct.Uart* %6, metadata !7760, metadata !DIExpression()), !dbg !7761
  %7 = getelementptr inbounds %struct.Uart, %struct.Uart* %6, i32 0, i32 1, !dbg !7764
  %8 = load volatile i32, i32* %7, align 4, !dbg !7764
  %9 = lshr i32 %8, 9, !dbg !7765
  %10 = and i32 %9, 7, !dbg !7765
  %11 = icmp ult i32 %10, 4, !dbg !7765
  %12 = shl nuw nsw i32 %10, 3, !dbg !7765
  %13 = lshr i32 50594050, %12, !dbg !7765
  %14 = trunc i32 %13 to i8, !dbg !7765
  %15 = select i1 %11, i8 %14, i8 0, !dbg !7765
  ret i8 %15, !dbg !7766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_sam_cfg2sam_parity(i8 noundef zeroext %0) unnamed_addr #11 !dbg !7767 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7771, metadata !DIExpression()), !dbg !7772
  %2 = add i8 %0, -1, !dbg !7773
  %3 = icmp ult i8 %2, 4, !dbg !7773
  br i1 %3, label %4, label %8, !dbg !7773

4:                                                ; preds = %1
  %5 = sext i8 %2 to i32, !dbg !7773
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_sam_cfg2sam_parity, i32 0, i32 %5, !dbg !7773
  %7 = load i32, i32* %6, align 4, !dbg !7773
  br label %8, !dbg !7773

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ 2048, %1 ], !dbg !7774
  ret i32 %9, !dbg !7776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @uart_sam_baudrate_set(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !7777 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7781, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 %1, metadata !7782, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* undef, metadata !7783, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* undef, metadata !7784, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata %struct.Uart* undef, metadata !7785, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.value(metadata i32 undef, metadata !7786, metadata !DIExpression()), !dbg !7787
  %3 = icmp ult i32 %1, 81, !dbg !7788
  br i1 %3, label %16, label %4, !dbg !7790

4:                                                ; preds = %2
  %5 = udiv i32 5250000, %1, !dbg !7791
  call void @llvm.dbg.value(metadata i32 %5, metadata !7786, metadata !DIExpression()), !dbg !7787
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7792
  %7 = bitcast i8** %6 to %struct.uart_sam_dev_cfg**, !dbg !7792
  %8 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %7, align 4, !dbg !7792
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %8, metadata !7784, metadata !DIExpression()), !dbg !7787
  %9 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %8, i32 0, i32 0, !dbg !7793
  %10 = load %struct.Uart*, %struct.Uart** %9, align 4, !dbg !7793
  call void @llvm.dbg.value(metadata %struct.Uart* %10, metadata !7785, metadata !DIExpression()), !dbg !7787
  %11 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7794
  %12 = bitcast i8** %11 to %struct.z_heap_bucket**, !dbg !7794
  %13 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %12, align 4, !dbg !7794
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %13, metadata !7783, metadata !DIExpression()), !dbg !7787
  %14 = getelementptr inbounds %struct.Uart, %struct.Uart* %10, i32 0, i32 8, !dbg !7795
  store volatile i32 %5, i32* %14, align 4, !dbg !7796
  %15 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %13, i32 0, i32 0, !dbg !7797
  store i32 %1, i32* %15, align 4, !dbg !7798
  br label %16, !dbg !7799

16:                                               ; preds = %2, %4
  %17 = phi i32 [ 0, %4 ], [ -22, %2 ], !dbg !7787
  ret i32 %17, !dbg !7800
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_sam_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !7801 {
  %2 = alloca %struct.uart_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7803, metadata !DIExpression()), !dbg !7809
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7810
  %4 = bitcast i8** %3 to %struct.uart_sam_dev_cfg**, !dbg !7810
  %5 = load %struct.uart_sam_dev_cfg*, %struct.uart_sam_dev_cfg** %4, align 4, !dbg !7810
  call void @llvm.dbg.value(metadata %struct.uart_sam_dev_cfg* %5, metadata !7805, metadata !DIExpression()), !dbg !7809
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7811
  %7 = bitcast i8** %6 to %struct.z_heap_bucket**, !dbg !7811
  %8 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %7, align 4, !dbg !7811
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %8, metadata !7806, metadata !DIExpression()), !dbg !7809
  %9 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 0, !dbg !7812
  %10 = load %struct.Uart*, %struct.Uart** %9, align 4, !dbg !7812
  call void @llvm.dbg.value(metadata %struct.Uart* %10, metadata !7807, metadata !DIExpression()), !dbg !7809
  %11 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 1, !dbg !7813
  %12 = load i32, i32* %11, align 4, !dbg !7813
  tail call void @soc_pmc_peripheral_enable(i32 noundef %12) #24, !dbg !7814
  %13 = getelementptr inbounds %struct.uart_sam_dev_cfg, %struct.uart_sam_dev_cfg* %5, i32 0, i32 2, !dbg !7815
  %14 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %13, align 4, !dbg !7815
  %15 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %14) #25, !dbg !7816
  call void @llvm.dbg.value(metadata i32 %15, metadata !7804, metadata !DIExpression()), !dbg !7809
  %16 = icmp slt i32 %15, 0, !dbg !7817
  br i1 %16, label %28, label %17, !dbg !7819

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.Uart, %struct.Uart* %10, i32 0, i32 3, !dbg !7820
  store volatile i32 -1, i32* %18, align 4, !dbg !7821
  %19 = bitcast %struct.uart_config* %2 to i8*, !dbg !7822
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #23, !dbg !7822
  call void @llvm.dbg.declare(metadata %struct.uart_config* %2, metadata !7808, metadata !DIExpression()), !dbg !7823
  %20 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 0, !dbg !7824
  %21 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %8, i32 0, i32 0, !dbg !7825
  %22 = load i32, i32* %21, align 4, !dbg !7825
  store i32 %22, i32* %20, align 4, !dbg !7824
  %23 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 1, !dbg !7824
  store i8 0, i8* %23, align 4, !dbg !7824
  %24 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 2, !dbg !7824
  store i8 1, i8* %24, align 1, !dbg !7824
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 3, !dbg !7824
  store i8 3, i8* %25, align 2, !dbg !7824
  %26 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %2, i32 0, i32 4, !dbg !7824
  store i8 0, i8* %26, align 1, !dbg !7824
  %27 = call i32 @uart_sam_configure(%struct.device* noundef nonnull %0, %struct.uart_config* noundef nonnull %2) #25, !dbg !7826
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #23, !dbg !7827
  br label %28

28:                                               ; preds = %1, %17
  %29 = phi i32 [ %27, %17 ], [ %15, %1 ], !dbg !7809
  ret i32 %29, !dbg !7827
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !7828 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !7832, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i8 0, metadata !7833, metadata !DIExpression()), !dbg !7836
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !7837
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7837
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !7835, metadata !DIExpression(DW_OP_deref)), !dbg !7836
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !7838
  call void @llvm.dbg.value(metadata i32 %4, metadata !7834, metadata !DIExpression()), !dbg !7836
  %5 = icmp slt i32 %4, 0, !dbg !7839
  br i1 %5, label %9, label %6, !dbg !7841

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !7842
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !7835, metadata !DIExpression()), !dbg !7836
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !7843
  br label %9, !dbg !7844

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !7836
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !7845
  ret i32 %10, !dbg !7845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7846 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !7850, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !7851, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.value(metadata i32 0, metadata !7852, metadata !DIExpression()), !dbg !7853
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !7854
  %3 = load i32*, i32** %2, align 4, !dbg !7854
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !7855
  %5 = load i8, i8* %4, align 4, !dbg !7855
  %6 = tail call i32 @pinctrl_configure_pins(i32* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !7856
  ret i32 %6, !dbg !7857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !7858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7860, metadata !DIExpression()), !dbg !7861
  tail call fastcc void @__NVIC_SetPriority.60() #25, !dbg !7862
  store i32 8399, i32* @last_load, align 4, !dbg !7863
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !7864
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7865
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7866
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7867
  %3 = or i32 %2, 7, !dbg !7867
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7867
  ret i32 0, !dbg !7868
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.60() unnamed_addr #15 !dbg !7869 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7871, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.value(metadata i32 1, metadata !7872, metadata !DIExpression()), !dbg !7873
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !7874
  ret void, !dbg !7877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !7878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7882
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !7883
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !7884
  %4 = load i32, i32* @cycle_count, align 4, !dbg !7885
  %5 = add i32 %4, %3, !dbg !7885
  store i32 %5, i32* @cycle_count, align 4, !dbg !7885
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !7886
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !7887
  %7 = sub i32 %5, %6, !dbg !7890
  %8 = udiv i32 %7, 8400, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %8, metadata !7881, metadata !DIExpression()), !dbg !7882
  %9 = mul nuw i32 %8, 8400, !dbg !7892
  %10 = add i32 %9, %6, !dbg !7893
  store i32 %10, i32* @announced_cycles, align 4, !dbg !7893
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !7894
  tail call void @z_arm_int_exit() #24, !dbg !7895
  ret void, !dbg !7896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !7897 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7902
  call void @llvm.dbg.value(metadata i32 %1, metadata !7899, metadata !DIExpression()), !dbg !7903
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %2, metadata !7900, metadata !DIExpression()), !dbg !7903
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7905
  call void @llvm.dbg.value(metadata i32 %3, metadata !7901, metadata !DIExpression()), !dbg !7903
  %4 = and i32 %2, 65536, !dbg !7906
  %5 = icmp ne i32 %4, 0, !dbg !7906
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !7908
  %8 = load i32, i32* @last_load, align 4, !dbg !7903
  br i1 %7, label %9, label %13, !dbg !7908

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !7909
  %11 = add i32 %10, %8, !dbg !7909
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !7909
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7911
  br label %13, !dbg !7912

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !7913
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !7914
  %16 = add i32 %14, %15, !dbg !7915
  ret i32 %16, !dbg !7916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !7917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7921, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i1 %1, metadata !7922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7934
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !7935
  br i1 %4, label %5, label %8, !dbg !7935

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7937
  %7 = and i32 %6, -2, !dbg !7937
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7937
  store i32 -16777216, i32* @last_load, align 4, !dbg !7939
  br label %54, !dbg !7940

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !7941
  call void @llvm.dbg.value(metadata i32 %9, metadata !7926, metadata !DIExpression()), !dbg !7934
  br i1 %3, label %18, label %10, !dbg !7942

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !7942
  call void @llvm.dbg.value(metadata i32 undef, metadata !7921, metadata !DIExpression()), !dbg !7934
  %12 = icmp slt i32 %11, 1, !dbg !7943
  br i1 %12, label %18, label %13, !dbg !7943

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !7943
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !7943
  %16 = mul nuw nsw i32 %15, 8400, !dbg !7943
  %17 = add nuw nsw i32 %16, 8399, !dbg !7943
  br label %18, !dbg !7943

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7921, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !7944, metadata !DIExpression()) #23, !dbg !7951
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7953, !srcloc !7959
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %21, metadata !7956, metadata !DIExpression()) #23, !dbg !7960
  call void @llvm.dbg.value(metadata i32 undef, metadata !7957, metadata !DIExpression()) #23, !dbg !7960
  call void @llvm.dbg.value(metadata i32 %21, metadata !7950, metadata !DIExpression()) #23, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %21, metadata !7927, metadata !DIExpression()), !dbg !7934
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !7961
  call void @llvm.dbg.value(metadata i32 %22, metadata !7932, metadata !DIExpression()), !dbg !7934
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7962
  call void @llvm.dbg.value(metadata i32 %23, metadata !7924, metadata !DIExpression()), !dbg !7934
  %24 = load i32, i32* @cycle_count, align 4, !dbg !7963
  %25 = add i32 %24, %22, !dbg !7963
  store i32 %25, i32* @cycle_count, align 4, !dbg !7963
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !7964
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !7965
  %27 = sub i32 %25, %26, !dbg !7966
  call void @llvm.dbg.value(metadata i32 %27, metadata !7933, metadata !DIExpression()), !dbg !7934
  %28 = icmp slt i32 %27, 0, !dbg !7967
  br i1 %28, label %38, label %29, !dbg !7969

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !7923, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i32 undef, metadata !7923, metadata !DIExpression()), !dbg !7934
  %30 = add nuw i32 %19, %27, !dbg !7970
  %31 = urem i32 %30, 8400, !dbg !7972
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !7923, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7934
  %32 = sub nuw nsw i32 %19, %31, !dbg !7973
  call void @llvm.dbg.value(metadata i32 %32, metadata !7923, metadata !DIExpression()), !dbg !7934
  %33 = icmp ugt i32 %32, 1024, !dbg !7974
  br i1 %33, label %34, label %36, !dbg !7974

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !7923, metadata !DIExpression()), !dbg !7934
  %35 = icmp ugt i32 %32, 16766400, !dbg !7975
  br i1 %35, label %38, label %36, !dbg !7977

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !7978
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7979
  call void @llvm.dbg.value(metadata i32 %40, metadata !7925, metadata !DIExpression()), !dbg !7934
  %41 = add nsw i32 %39, -1, !dbg !7980
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7981
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7982
  %42 = icmp ult i32 %23, %40, !dbg !7983
  br i1 %42, label %43, label %48, !dbg !7985

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !7986
  %45 = add i32 %23, %9, !dbg !7988
  %46 = sub i32 %45, %40, !dbg !7989
  %47 = add i32 %46, %44, !dbg !7986
  br label %52, !dbg !7990

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !7991
  %50 = load i32, i32* @cycle_count, align 4, !dbg !7993
  %51 = add i32 %49, %50, !dbg !7993
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !7994
  store i32 %53, i32* @cycle_count, align 4, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %21, metadata !7995, metadata !DIExpression()) #23, !dbg !8001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8000, metadata !DIExpression()) #23, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %21, metadata !8003, metadata !DIExpression()) #23, !dbg !8006
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8008, !srcloc !8009
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8011 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !7944, metadata !DIExpression()) #23, !dbg !8015
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8017, !srcloc !7959
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8017
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()) #23, !dbg !8019
  call void @llvm.dbg.value(metadata i32 undef, metadata !7957, metadata !DIExpression()) #23, !dbg !8019
  call void @llvm.dbg.value(metadata i32 %2, metadata !7950, metadata !DIExpression()) #23, !dbg !8015
  call void @llvm.dbg.value(metadata i32 %2, metadata !8013, metadata !DIExpression()), !dbg !8020
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8021
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8022
  %5 = add i32 %4, %3, !dbg !8023
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8024
  %7 = sub i32 %5, %6, !dbg !8025
  call void @llvm.dbg.value(metadata i32 %7, metadata !8014, metadata !DIExpression()), !dbg !8020
  call void @llvm.dbg.value(metadata i32 %2, metadata !7995, metadata !DIExpression()) #23, !dbg !8026
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8000, metadata !DIExpression()) #23, !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8003, metadata !DIExpression()) #23, !dbg !8028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8030, !srcloc !8009
  %8 = udiv i32 %7, 8400, !dbg !8031
  ret i32 %8, !dbg !8032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8033 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !7944, metadata !DIExpression()) #23, !dbg !8037
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8039, !srcloc !7959
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8039
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()) #23, !dbg !8041
  call void @llvm.dbg.value(metadata i32 undef, metadata !7957, metadata !DIExpression()) #23, !dbg !8041
  call void @llvm.dbg.value(metadata i32 %2, metadata !7950, metadata !DIExpression()) #23, !dbg !8037
  call void @llvm.dbg.value(metadata i32 %2, metadata !8035, metadata !DIExpression()), !dbg !8042
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8043
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8044
  %5 = add i32 %4, %3, !dbg !8045
  call void @llvm.dbg.value(metadata i32 %5, metadata !8036, metadata !DIExpression()), !dbg !8042
  call void @llvm.dbg.value(metadata i32 %2, metadata !7995, metadata !DIExpression()) #23, !dbg !8046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8000, metadata !DIExpression()) #23, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %2, metadata !8003, metadata !DIExpression()) #23, !dbg !8048
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8050, !srcloc !8009
  ret i32 %5, !dbg !8051
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !8052 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8053
  %2 = icmp eq i32 %1, -16777216, !dbg !8055
  br i1 %2, label %3, label %6, !dbg !8056

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8057
  %5 = or i32 %4, 1, !dbg !8057
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8057
  br label %6, !dbg !8059

6:                                                ; preds = %3, %0
  ret void, !dbg !8060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !8061 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8062
  %2 = and i32 %1, -2, !dbg !8062
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8062
  ret void, !dbg !8063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !8064 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata i8 %1, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8085, metadata !DIExpression()), !dbg !8086
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8087
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8087
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8086
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8088
  %8 = load i8, i8* %6, align 4, !dbg !8089
  %9 = zext i8 %8 to i32, !dbg !8090
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8090
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8091
  br i1 %11, label %18, label %24, !dbg !8092

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8086
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8088
  %14 = load i8, i8* %6, align 4, !dbg !8089
  %15 = zext i8 %14 to i32, !dbg !8090
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8090
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8091
  br i1 %17, label %18, label %24, !dbg !8092, !llvm.loop !8093

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8095
  %21 = load i8, i8* %20, align 1, !dbg !8095
  %22 = icmp eq i8 %21, %1, !dbg !8098
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8099
  br i1 %22, label %24, label %12, !dbg !8100

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8086
  ret i32 %25, !dbg !8101
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(i32* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8102 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8106, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8 %1, metadata !8107, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 %2, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8 0, metadata !8109, metadata !DIExpression()), !dbg !8112
  %4 = icmp eq i8 %1, 0, !dbg !8113
  br i1 %4, label %5, label %6, !dbg !8115

5:                                                ; preds = %6, %3
  ret i32 0, !dbg !8116

6:                                                ; preds = %3, %6
  %7 = phi i8 [ %11, %6 ], [ 0, %3 ]
  %8 = phi i32* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !8109, metadata !DIExpression()), !dbg !8112
  call void @llvm.dbg.value(metadata i32* %8, metadata !8106, metadata !DIExpression()), !dbg !8111
  %9 = getelementptr inbounds i32, i32* %8, i32 1, !dbg !8117
  call void @llvm.dbg.value(metadata i32* %9, metadata !8106, metadata !DIExpression()), !dbg !8111
  %10 = load i32, i32* %8, align 4, !dbg !8119
  tail call fastcc void @pinctrl_configure_pin(i32 noundef %10) #25, !dbg !8120
  %11 = add nuw i8 %7, 1, !dbg !8121
  call void @llvm.dbg.value(metadata i8 %11, metadata !8109, metadata !DIExpression()), !dbg !8112
  %12 = icmp ult i8 %11, %1, !dbg !8113
  br i1 %12, label %6, label %5, !dbg !8115, !llvm.loop !8122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pinctrl_configure_pin(i32 noundef %0) unnamed_addr #1 !dbg !8124 {
  %2 = alloca %struct.soc_gpio_pin, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8128, metadata !DIExpression()), !dbg !8138
  %3 = bitcast %struct.soc_gpio_pin* %2 to i8*, !dbg !8139
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #23, !dbg !8139
  call void @llvm.dbg.declare(metadata %struct.soc_gpio_pin* %2, metadata !8129, metadata !DIExpression()), !dbg !8140
  %4 = lshr i32 %0, 16, !dbg !8141
  %5 = and i32 %4, 15, !dbg !8141
  call void @llvm.dbg.value(metadata i32 %4, metadata !8136, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !8138
  call void @llvm.dbg.value(metadata i32 %0, metadata !8137, metadata !DIExpression(DW_OP_constu, 25, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !8138
  %6 = getelementptr inbounds [5 x i32], [5 x i32]* @sam_port_addrs, i32 0, i32 %5, !dbg !8142
  %7 = load i32, i32* %6, align 4, !dbg !8142
  %8 = inttoptr i32 %7 to %struct.Pio*, !dbg !8143
  %9 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 1, !dbg !8144
  store %struct.Pio* %8, %struct.Pio** %9, align 4, !dbg !8145
  %10 = getelementptr inbounds [5 x i32], [5 x i32]* @sam_port_periph_id, i32 0, i32 %5, !dbg !8146
  %11 = load i32, i32* %10, align 4, !dbg !8146
  %12 = trunc i32 %11 to i8, !dbg !8146
  %13 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 2, !dbg !8147
  store i8 %12, i8* %13, align 4, !dbg !8148
  %14 = lshr i32 %0, 20, !dbg !8149
  %15 = and i32 %14, 31, !dbg !8149
  %16 = shl nuw i32 1, %15, !dbg !8150
  %17 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 0, !dbg !8151
  store i32 %16, i32* %17, align 4, !dbg !8152
  %18 = and i32 %0, 63, !dbg !8153
  %19 = and i32 %0, 234881024, !dbg !8154
  %20 = icmp eq i32 %19, 33554432, !dbg !8154
  %21 = lshr i32 %0, 12, !dbg !8156
  %22 = and i32 %21, 983040, !dbg !8156
  %23 = select i1 %20, i32 %22, i32 0, !dbg !8156
  %24 = or i32 %23, %18, !dbg !8156
  %25 = getelementptr inbounds %struct.soc_gpio_pin, %struct.soc_gpio_pin* %2, i32 0, i32 3, !dbg !8157
  store i32 %24, i32* %25, align 4, !dbg !8138
  call void @soc_gpio_configure(%struct.soc_gpio_pin* noundef nonnull %2) #24, !dbg !8158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #23, !dbg !8159
  ret void, !dbg !8159
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !8160 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !8163, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 undef, metadata !8163, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32 undef, metadata !8163, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !8179
  ret void, !dbg !8180
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !8181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8185, metadata !DIExpression()), !dbg !8187
  %2 = icmp eq i8* %0, null, !dbg !8188
  br i1 %2, label %29, label %3, !dbg !8190

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !8191
  %5 = icmp eq i8 %4, 0, !dbg !8192
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !8193
  br i1 %6, label %29, label %8, !dbg !8193

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !8186, metadata !DIExpression()), !dbg !8187
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !8194

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !8186, metadata !DIExpression()), !dbg !8187
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !8196
  br i1 %10, label %11, label %15, !dbg !8201

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !8202
  %13 = load i8*, i8** %12, align 4, !dbg !8202
  %14 = icmp eq i8* %13, %0, !dbg !8203
  br i1 %14, label %29, label %15, !dbg !8204

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !8186, metadata !DIExpression()), !dbg !8187
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !8206
  br i1 %17, label %7, label %8, !dbg !8207, !llvm.loop !8208

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !8186, metadata !DIExpression()), !dbg !8187
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !8210
  br i1 %20, label %21, label %26, !dbg !8214

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !8215
  %23 = load i8*, i8** %22, align 4, !dbg !8215
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !8216
  %25 = icmp eq i32 %24, 0, !dbg !8217
  br i1 %25, label %29, label %26, !dbg !8218

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !8219
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !8186, metadata !DIExpression()), !dbg !8187
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !8220
  br i1 %28, label %29, label %18, !dbg !8194, !llvm.loop !8221

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !8187
  ret %struct.device* %30, !dbg !8223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !8224 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8228, metadata !DIExpression()), !dbg !8229
  %2 = icmp eq %struct.device* %0, null, !dbg !8230
  br i1 %2, label %14, label %3, !dbg !8232

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !8233
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !8233
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !8234
  %7 = load i8, i8* %6, align 1, !dbg !8234
  %8 = and i8 %7, 1, !dbg !8234
  %9 = icmp eq i8 %8, 0, !dbg !8234
  br i1 %9, label %14, label %10, !dbg !8235

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !8236
  %12 = load i8, i8* %11, align 1, !dbg !8236
  %13 = icmp eq i8 %12, 0, !dbg !8237
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !8229
  ret i1 %15, !dbg !8238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !8239 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !8244, metadata !DIExpression()), !dbg !8245
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !8246
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !8247
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !8248 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8256, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !8257, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.value(metadata i8* %2, metadata !8258, metadata !DIExpression()), !dbg !8261
  %5 = bitcast i32* %4 to i8*, !dbg !8262
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8262
  call void @llvm.dbg.value(metadata i32 0, metadata !8259, metadata !DIExpression()), !dbg !8261
  store i32 0, i32* %4, align 4, !dbg !8263
  call void @llvm.dbg.value(metadata i32* %4, metadata !8259, metadata !DIExpression(DW_OP_deref)), !dbg !8261
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !8264
  call void @llvm.dbg.value(metadata i16* %6, metadata !8260, metadata !DIExpression()), !dbg !8261
  %7 = load i32, i32* %4, align 4, !dbg !8265
  call void @llvm.dbg.value(metadata i32 %7, metadata !8259, metadata !DIExpression()), !dbg !8261
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !8266
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8267
  ret i32 %8, !dbg !8268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !8269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8273, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32* %1, metadata !8274, metadata !DIExpression()), !dbg !8279
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !8280
  %4 = load i16*, i16** %3, align 4, !dbg !8280
  call void @llvm.dbg.value(metadata i16* %4, metadata !8275, metadata !DIExpression()), !dbg !8279
  %5 = icmp eq i16* %4, null, !dbg !8281
  br i1 %5, label %14, label %6, !dbg !8282

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !8283
  call void @llvm.dbg.value(metadata i32 %7, metadata !8276, metadata !DIExpression()), !dbg !8283
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !8284
  %9 = load i16, i16* %8, align 2, !dbg !8284
  %10 = add i16 %9, -32767, !dbg !8285
  %11 = icmp ult i16 %10, 2, !dbg !8285
  %12 = add i32 %7, 1, !dbg !8286
  call void @llvm.dbg.value(metadata i32 %12, metadata !8276, metadata !DIExpression()), !dbg !8283
  br i1 %11, label %13, label %6, !dbg !8285, !llvm.loop !8288

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !8291
  br label %14, !dbg !8292

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !8298, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %1, metadata !8299, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !8300, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i8* %3, metadata !8301, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 0, metadata !8302, metadata !DIExpression()), !dbg !8310
  %5 = icmp eq i32 %1, 0, !dbg !8311
  br i1 %5, label %16, label %8, !dbg !8312

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !8302, metadata !DIExpression()), !dbg !8310
  %7 = icmp eq i32 %15, %1, !dbg !8311
  br i1 %7, label %16, label %8, !dbg !8312, !llvm.loop !8313

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8302, metadata !DIExpression()), !dbg !8310
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !8315
  %11 = load i16, i16* %10, align 2, !dbg !8315
  call void @llvm.dbg.value(metadata i16 %11, metadata !8304, metadata !DIExpression()), !dbg !8316
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !8317
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !8307, metadata !DIExpression()), !dbg !8316
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !8318
  call void @llvm.dbg.value(metadata i32 %13, metadata !8308, metadata !DIExpression()), !dbg !8316
  %14 = icmp slt i32 %13, 0, !dbg !8319
  %15 = add nuw i32 %9, 1, !dbg !8321
  call void @llvm.dbg.value(metadata i32 %15, metadata !8302, metadata !DIExpression()), !dbg !8310
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !8322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !8323 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8327, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !8328, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !8329, metadata !DIExpression()), !dbg !8330
  %2 = sext i16 %0 to i32, !dbg !8331
  %3 = icmp slt i16 %0, 1, !dbg !8333
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !8334
  %6 = add nsw i32 %2, -1, !dbg !8334
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !8334
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !8334
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !8328, metadata !DIExpression()), !dbg !8330
  ret %struct.device* %8, !dbg !8335
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !8336 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8338, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !8339, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.value(metadata i8* %2, metadata !8340, metadata !DIExpression()), !dbg !8343
  %5 = bitcast i32* %4 to i8*, !dbg !8344
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8344
  call void @llvm.dbg.value(metadata i32 0, metadata !8341, metadata !DIExpression()), !dbg !8343
  store i32 0, i32* %4, align 4, !dbg !8345
  call void @llvm.dbg.value(metadata i32* %4, metadata !8341, metadata !DIExpression(DW_OP_deref)), !dbg !8343
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !8346
  call void @llvm.dbg.value(metadata i16* %6, metadata !8342, metadata !DIExpression()), !dbg !8343
  %7 = load i32, i32* %4, align 4, !dbg !8347
  call void @llvm.dbg.value(metadata i32 %7, metadata !8341, metadata !DIExpression()), !dbg !8343
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !8348
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8349
  ret i32 %8, !dbg !8350
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !8351 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8353, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32* %1, metadata !8354, metadata !DIExpression()), !dbg !8358
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !8359
  %4 = load i16*, i16** %3, align 4, !dbg !8359
  call void @llvm.dbg.value(metadata i16* %4, metadata !8355, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 0, metadata !8356, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i32 0, metadata !8357, metadata !DIExpression()), !dbg !8358
  %5 = icmp eq i16* %4, null, !dbg !8360
  br i1 %5, label %22, label %6, !dbg !8362

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8356, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.value(metadata i16* %8, metadata !8355, metadata !DIExpression()), !dbg !8358
  %9 = load i16, i16* %8, align 2, !dbg !8363
  %10 = icmp eq i16 %9, -32768, !dbg !8367
  call void @llvm.dbg.value(metadata i32 undef, metadata !8356, metadata !DIExpression()), !dbg !8358
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !8368
  call void @llvm.dbg.value(metadata i16* %11, metadata !8355, metadata !DIExpression()), !dbg !8358
  %12 = zext i1 %10 to i32, !dbg !8369
  %13 = add i32 %7, %12, !dbg !8369
  call void @llvm.dbg.value(metadata i32 %13, metadata !8356, metadata !DIExpression()), !dbg !8358
  %14 = icmp eq i32 %13, 2, !dbg !8370
  br i1 %14, label %15, label %6, !dbg !8371

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !8358
  call void @llvm.dbg.value(metadata i32 %16, metadata !8357, metadata !DIExpression()), !dbg !8358
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !8372
  %18 = load i16, i16* %17, align 2, !dbg !8372
  %19 = icmp eq i16 %18, 32767, !dbg !8373
  %20 = add i32 %16, 1, !dbg !8374
  call void @llvm.dbg.value(metadata i32 %20, metadata !8357, metadata !DIExpression()), !dbg !8358
  br i1 %19, label %21, label %15, !dbg !8376, !llvm.loop !8377

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !8379
  br label %22, !dbg !8380

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !8381
  call void @llvm.dbg.value(metadata i16* %23, metadata !8355, metadata !DIExpression()), !dbg !8358
  ret i16* %23, !dbg !8382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !8383 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8386
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !8387
  ret i32* %2, !dbg !8388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !8389 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8537, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8538, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !8539, metadata !DIExpression()), !dbg !8540
  ret void, !dbg !8541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8546, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.value(metadata i32 %1, metadata !8547, metadata !DIExpression()), !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8554, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i32 %1, metadata !8555, metadata !DIExpression()), !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !8558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8562, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.value(metadata i8* %1, metadata !8563, metadata !DIExpression()), !dbg !8564
  ret i32 -134, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !8566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8570, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.value(metadata i8* %1, metadata !8571, metadata !DIExpression()), !dbg !8572
  ret i32 -134, !dbg !8573
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !8574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8577, metadata !DIExpression()), !dbg !8578
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8579, !srcloc !8585
  call void @llvm.dbg.value(metadata i32 undef, metadata !8582, metadata !DIExpression()) #23, !dbg !8586
  call void @llvm.dbg.value(metadata i32 undef, metadata !8583, metadata !DIExpression()) #23, !dbg !8586
  br label %3, !dbg !8587

3:                                                ; preds = %3, %1
  br label %3, !dbg !8588, !llvm.loop !8591
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8598, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8599, metadata !DIExpression()), !dbg !8600
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !8601
  unreachable, !dbg !8601
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !8602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8604, metadata !DIExpression()), !dbg !8605
  tail call void @arch_system_halt(i32 noundef %0) #28, !dbg !8606
  unreachable, !dbg !8606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8607 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8609, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8610, metadata !DIExpression()), !dbg !8613
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8614, !srcloc !8585
  call void @llvm.dbg.value(metadata i32 undef, metadata !8582, metadata !DIExpression()) #23, !dbg !8616
  call void @llvm.dbg.value(metadata i32 undef, metadata !8583, metadata !DIExpression()) #23, !dbg !8616
  call void @llvm.dbg.value(metadata i32 undef, metadata !8611, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !8612, metadata !DIExpression()), !dbg !8613
  %4 = icmp eq %struct.__esf* %1, null, !dbg !8617
  br i1 %4, label %6, label %5, !dbg !8619

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !8620
  br label %7, !dbg !8621

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !8620
  br label %7, !dbg !8624

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %8, metadata !8582, metadata !DIExpression()) #23, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %8, metadata !8611, metadata !DIExpression()), !dbg !8613
  %9 = tail call fastcc %struct.k_thread* @k_current_get.71() #26, !dbg !8626
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !8612, metadata !DIExpression()), !dbg !8613
  call void @llvm.dbg.value(metadata i32 undef, metadata !8627, metadata !DIExpression()) #23, !dbg !8630
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !8632, !srcloc !8633
  tail call fastcc void @k_thread_abort.72(%struct.k_thread* noundef %9) #25, !dbg !8634
  ret void, !dbg !8637
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.71() unnamed_addr #9 !dbg !8638 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.73() #26, !dbg !8642
  ret %struct.k_thread* %1, !dbg !8643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.72(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8644 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8648, metadata !DIExpression()), !dbg !8649
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8650, !srcloc !8652
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !8653
  ret void, !dbg !8654
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.73() unnamed_addr #9 !dbg !8655 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8656, !srcloc !8658
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !8659
  ret %struct.k_thread* %1, !dbg !8660
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8665, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i32 %1, metadata !8666, metadata !DIExpression()), !dbg !8668
  call void @llvm.dbg.value(metadata i32 %2, metadata !8667, metadata !DIExpression()), !dbg !8668
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !8669
  ret void, !dbg !8670
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8671 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8675, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i8* %1, metadata !8676, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.value(metadata i32 %2, metadata !8677, metadata !DIExpression()), !dbg !8678
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !8679
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !8681 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !8682
  ret void, !dbg !8683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !8684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8688, metadata !DIExpression()), !dbg !8689
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !8690
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !8691
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !8692
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !8693
  %4 = trunc i32 %0 to i8, !dbg !8694
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !8695
  store i8 %4, i8* %5, align 4, !dbg !8696
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !8697
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !8698
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !8699
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !8700
  store i8* %8, i8** %9, align 4, !dbg !8701
  ret void, !dbg !8702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8705, metadata !DIExpression()), !dbg !8711
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !8712
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !8706, metadata !DIExpression()), !dbg !8711
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !8713
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !8707, metadata !DIExpression()), !dbg !8711
  call void @llvm.dbg.value(metadata i8* null, metadata !8710, metadata !DIExpression()), !dbg !8711
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !8714
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !8715
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !8716
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !8717
  ret void, !dbg !8718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !8719 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !8723, metadata !DIExpression()), !dbg !8724
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !8725
  ret i8* %2, !dbg !8726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !8727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8732, metadata !DIExpression()), !dbg !8733
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !8734
  %3 = load i8, i8* %2, align 1, !dbg !8735
  %4 = and i8 %3, -5, !dbg !8735
  store i8 %4, i8* %2, align 1, !dbg !8735
  ret void, !dbg !8736
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !8737 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !8740
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !8741
  %3 = ptrtoint i8* %2 to i32, !dbg !8750
  %4 = add i32 %3, 2048, !dbg !8751
  call void @llvm.dbg.value(metadata i32 %4, metadata !8745, metadata !DIExpression()) #23, !dbg !8752
  call void @llvm.dbg.value(metadata i32 %4, metadata !8753, metadata !DIExpression()) #23, !dbg !8756
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !8758, !srcloc !8759
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8760
  %6 = or i32 %5, 512, !dbg !8760
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8760
  tail call fastcc void @__NVIC_SetPriority.80(i32 noundef -2, i32 noundef 255) #24, !dbg !8761
  tail call fastcc void @__NVIC_SetPriority.80(i32 noundef -5, i32 noundef 0) #24, !dbg !8764
  tail call fastcc void @__NVIC_SetPriority.80(i32 noundef -12, i32 noundef 0) #24, !dbg !8765
  tail call fastcc void @__NVIC_SetPriority.80(i32 noundef -11, i32 noundef 0) #24, !dbg !8766
  tail call fastcc void @__NVIC_SetPriority.80(i32 noundef -10, i32 noundef 0) #24, !dbg !8767
  tail call fastcc void @__NVIC_SetPriority.80(i32 noundef -4, i32 noundef 0) #24, !dbg !8768
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8769
  %8 = or i32 %7, 458752, !dbg !8769
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8769
  tail call void @z_arm_fault_init() #24, !dbg !8770
  tail call void @z_arm_cpu_idle_init() #24, !dbg !8771
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8772
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8775
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !8776
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !8777
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !8778
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !8778
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !8739, metadata !DIExpression()), !dbg !8779
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !8780
  call void @z_device_state_init() #24, !dbg !8781
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !8782
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !8783
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !8784
  call fastcc void @switch_to_main_thread(i8* noundef %11) #28, !dbg !8785
  unreachable, !dbg !8785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1324, metadata !DIExpression()), !dbg !8786
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !8787
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !8787
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1325, metadata !DIExpression()), !dbg !8786
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1325, metadata !DIExpression()), !dbg !8786
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !8788
  br i1 %7, label %8, label %35, !dbg !8789

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1325, metadata !DIExpression()), !dbg !8786
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !8790
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !8790
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1335, metadata !DIExpression()), !dbg !8791
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !8792
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !8792
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !8793
  call void @llvm.dbg.value(metadata i32 %14, metadata !1339, metadata !DIExpression()), !dbg !8791
  %15 = icmp eq %struct.device* %11, null, !dbg !8794
  br i1 %15, label %32, label %16, !dbg !8796

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !8797
  br i1 %17, label %26, label %18, !dbg !8800

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !8801
  call void @llvm.dbg.value(metadata i32 %19, metadata !1339, metadata !DIExpression()), !dbg !8791
  %20 = icmp ult i32 %19, 255, !dbg !8803
  %21 = select i1 %20, i32 %19, i32 255, !dbg !8803
  call void @llvm.dbg.value(metadata i32 %21, metadata !1339, metadata !DIExpression()), !dbg !8791
  %22 = trunc i32 %21 to i8, !dbg !8804
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !8805
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !8805
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !8806
  store i8 %22, i8* %25, align 1, !dbg !8807
  br label %26, !dbg !8808

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !8809
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !8809
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !8810
  %30 = load i8, i8* %29, align 1, !dbg !8811
  %31 = or i8 %30, 1, !dbg !8811
  store i8 %31, i8* %29, align 1, !dbg !8811
  br label %32, !dbg !8812

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !8813
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1325, metadata !DIExpression()), !dbg !8786
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !8788
  br i1 %34, label %8, label %35, !dbg !8789, !llvm.loop !8814

35:                                               ; preds = %32, %1
  ret void, !dbg !8816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.80(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8819, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.value(metadata i32 %1, metadata !8820, metadata !DIExpression()), !dbg !8821
  %3 = trunc i32 %1 to i8, !dbg !8822
  %4 = shl i8 %3, 4, !dbg !8822
  %5 = and i32 %0, 15, !dbg !8825
  %6 = add nsw i32 %5, -4, !dbg !8826
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8827
  store volatile i8 %4, i8* %7, align 1, !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: optsize
declare !dbg !8830 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !8831 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8834, metadata !DIExpression()), !dbg !8835
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !8836
  store i8 1, i8* %2, align 1, !dbg !8837
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !8838
  store i8 1, i8* %3, align 4, !dbg !8839
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8840
  store i32 0, i32* %4, align 4, !dbg !8841
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !8842
  store i32 0, i32* %5, align 4, !dbg !8843
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !8844
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !8845
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !8848 {
  tail call void @z_sched_init() #24, !dbg !8853
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !8854
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i32 0, i32 0)) #24, !dbg !8855
  call void @llvm.dbg.value(metadata i8* %1, metadata !8852, metadata !DIExpression()), !dbg !8856
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !8857
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !8858
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !8859
  ret i8* %1, !dbg !8860
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !8861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8865, metadata !DIExpression()), !dbg !8866
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !8867
  unreachable, !dbg !8868
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !8869 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8871, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i8* %1, metadata !8872, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i8* %2, metadata !8873, metadata !DIExpression()), !dbg !8874
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !8875
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !8876
  tail call void @boot_banner() #24, !dbg !8877
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !8878
  tail call void @z_init_static_threads() #24, !dbg !8879
  tail call void @main() #24, !dbg !8880
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !8881
  %5 = and i8 %4, -2, !dbg !8881
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !8881
  ret void, !dbg !8882
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !8883 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !8893, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i8* %1, metadata !8894, metadata !DIExpression()), !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !8897 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !8899, metadata !DIExpression()), !dbg !8901
  call void @llvm.dbg.value(metadata i8* %1, metadata !8900, metadata !DIExpression()), !dbg !8901
  ret void, !dbg !8902
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !8903 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !8904, !srcloc !8911
  call void @llvm.dbg.value(metadata i32 %1, metadata !8907, metadata !DIExpression()) #23, !dbg !8912
  %2 = icmp ne i32 %1, 0, !dbg !8913
  ret i1 %2, !dbg !8914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !8915 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8916
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !8917
  %3 = load i8, i8* %2, align 4, !dbg !8918
  %4 = or i8 %3, 1, !dbg !8918
  store i8 %4, i8* %2, align 4, !dbg !8918
  ret void, !dbg !8919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !8920 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8921
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !8922
  %3 = load i8, i8* %2, align 4, !dbg !8923
  %4 = and i8 %3, -2, !dbg !8923
  store i8 %4, i8* %2, align 4, !dbg !8923
  ret void, !dbg !8924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !8925 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8926
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !8927
  %3 = load i8, i8* %2, align 4, !dbg !8927
  %4 = and i8 %3, 1, !dbg !8928
  %5 = icmp ne i8 %4, 0, !dbg !8929
  ret i1 %5, !dbg !8930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !8931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8935, metadata !DIExpression()), !dbg !8937
  call void @llvm.dbg.value(metadata i8* %1, metadata !8936, metadata !DIExpression()), !dbg !8937
  ret i32 -88, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8943, metadata !DIExpression()), !dbg !8944
  ret i8* null, !dbg !8945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8950, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i8* %1, metadata !8951, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.value(metadata i32 %2, metadata !8952, metadata !DIExpression()), !dbg !8953
  ret i32 -88, !dbg !8954
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !1461, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8* %1, metadata !1462, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 %2, metadata !1463, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 0, metadata !1464, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8 undef, metadata !1466, metadata !DIExpression()), !dbg !8955
  %4 = icmp eq i8* %1, null, !dbg !8956
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !8958
  br i1 %6, label %46, label %7, !dbg !8958

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !8959
  %9 = load i8, i8* %8, align 1, !dbg !8959
  call void @llvm.dbg.value(metadata i8 %9, metadata !1466, metadata !DIExpression()), !dbg !8955
  %10 = add i32 %2, -1, !dbg !8960
  call void @llvm.dbg.value(metadata i32 %10, metadata !1463, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i8 0, metadata !1467, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8 %9, metadata !1466, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 0, metadata !1464, metadata !DIExpression()), !dbg !8955
  %11 = icmp eq i8 %9, 0, !dbg !8962
  br i1 %11, label %12, label %15, !dbg !8964

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !8965
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !8966
  store i8 0, i8* %14, align 1, !dbg !8967
  br label %46, !dbg !8968

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !1467, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i8 %17, metadata !1466, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 %18, metadata !1464, metadata !DIExpression()), !dbg !8955
  %19 = zext i8 %17 to i32, !dbg !8969
  %20 = zext i8 %16 to i32, !dbg !8970
  %21 = shl nuw i32 1, %20, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %21, metadata !1465, metadata !DIExpression()), !dbg !8955
  %22 = and i32 %21, %19, !dbg !8972
  %23 = icmp eq i32 %22, 0, !dbg !8974
  br i1 %23, label %42, label %24, !dbg !8975

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !8976
  %26 = sub i32 %10, %18, !dbg !8977
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !8978
  %28 = load i8*, i8** %27, align 4, !dbg !8978
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !8979
  %30 = load i32, i32* %29, align 4, !dbg !8979
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !8980
  %32 = add i32 %31, %18, !dbg !8981
  call void @llvm.dbg.value(metadata i32 %32, metadata !1464, metadata !DIExpression()), !dbg !8955
  %33 = trunc i32 %21 to i8, !dbg !8982
  %34 = xor i8 %33, -1, !dbg !8982
  %35 = and i8 %17, %34, !dbg !8982
  call void @llvm.dbg.value(metadata i8 %35, metadata !1466, metadata !DIExpression()), !dbg !8955
  %36 = icmp eq i8 %35, 0, !dbg !8983
  br i1 %36, label %12, label %37, !dbg !8985

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !8986
  %39 = sub i32 %10, %32, !dbg !8988
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !8989
  %41 = add i32 %40, %32, !dbg !8990
  call void @llvm.dbg.value(metadata i32 %41, metadata !1464, metadata !DIExpression()), !dbg !8955
  br label %42, !dbg !8991

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !8955
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !8955
  call void @llvm.dbg.value(metadata i8 %44, metadata !1466, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.value(metadata i32 %43, metadata !1464, metadata !DIExpression()), !dbg !8955
  %45 = add i8 %16, 1, !dbg !8992
  call void @llvm.dbg.value(metadata i8 %45, metadata !1467, metadata !DIExpression()), !dbg !8961
  br label %15, !dbg !8964

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !8955
  ret i8* %47, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8998, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32 %1, metadata !8999, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i8* %2, metadata !9000, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32 %3, metadata !9001, metadata !DIExpression()), !dbg !9003
  %5 = icmp ult i32 %1, %3, !dbg !9004
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %6, metadata !9002, metadata !DIExpression()), !dbg !9003
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !9005
  ret i32 %6, !dbg !9006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9007 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9011, metadata !DIExpression()), !dbg !9012
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !9013
  ret void, !dbg !9014
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9024, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !9025, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %2, metadata !9026, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !9027, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8* %4, metadata !9028, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8* %5, metadata !9029, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8* %6, metadata !9030, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %7, metadata !9031, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %8, metadata !9032, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8* undef, metadata !9033, metadata !DIExpression()), !dbg !9035
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !9036
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !9037
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !9038
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !9039
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !9040
  call void @llvm.dbg.value(metadata i8* %13, metadata !9034, metadata !DIExpression()), !dbg !9035
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !9041
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !9042
  store i8* null, i8** %14, align 4, !dbg !9043
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9044
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !9044
  br i1 %16, label %20, label %17, !dbg !9046

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !9047
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !9047
  br label %20, !dbg !9048

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !9035
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !9049
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !9051
  ret i8* %13, !dbg !9052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !9053 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !9058, metadata !DIExpression()), !dbg !9059
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !9060
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !9061
  ret void, !dbg !9062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !9063 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !9068, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata i32 %1, metadata !9069, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata i32 %2, metadata !9070, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.value(metadata i32 %3, metadata !9071, metadata !DIExpression()), !dbg !9072
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !9073
  store %union.anon* null, %union.anon** %5, align 8, !dbg !9074
  %6 = trunc i32 %3 to i8, !dbg !9075
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !9076
  store i8 %6, i8* %7, align 4, !dbg !9077
  %8 = trunc i32 %2 to i8, !dbg !9078
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !9079
  store i8 %8, i8* %9, align 1, !dbg !9080
  %10 = trunc i32 %1 to i8, !dbg !9081
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !9082
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !9082
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !9082
  store i8 %10, i8* %13, align 2, !dbg !9083
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !9084
  store i8 0, i8* %14, align 1, !dbg !9085
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !9086
  ret void, !dbg !9087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !9088 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9092, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !9093, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %2, metadata !9094, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 0, metadata !9099, metadata !DIExpression()), !dbg !9100
  %4 = add i32 %2, 7, !dbg !9101
  %5 = and i32 %4, -8, !dbg !9101
  %6 = add i32 %5, 64, !dbg !9101
  call void @llvm.dbg.value(metadata i32 %6, metadata !9095, metadata !DIExpression()), !dbg !9100
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.90(%struct.z_thread_stack_element* noundef %1) #25, !dbg !9103
  call void @llvm.dbg.value(metadata i8* %7, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %5, metadata !9096, metadata !DIExpression()), !dbg !9100
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !9104
  call void @llvm.dbg.value(metadata i8* %8, metadata !9097, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 0, metadata !9099, metadata !DIExpression()), !dbg !9100
  %9 = ptrtoint i8* %7 to i32, !dbg !9105
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9106
  store i32 %9, i32* %10, align 4, !dbg !9107
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !9108
  store i32 %5, i32* %11, align 4, !dbg !9109
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !9110
  store i32 0, i32* %12, align 4, !dbg !9111
  call void @llvm.dbg.value(metadata i8* %8, metadata !9097, metadata !DIExpression()), !dbg !9100
  ret i8* %8, !dbg !9112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.90(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !9113 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !9117, metadata !DIExpression()), !dbg !9118
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !9119
  ret i8* %2, !dbg !9120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !9126, metadata !DIExpression()), !dbg !9127
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !9128
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !9129
  ret void, !dbg !9130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9131 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !9133, metadata !DIExpression()), !dbg !9134
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !9135
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !9136
  ret void, !dbg !9137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9138 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9142, metadata !DIExpression()), !dbg !9143
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9144
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !9145
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9146
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !9147
  ret void, !dbg !9148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !9149 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9154, metadata !DIExpression()), !dbg !9155
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9156
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !9157
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9158
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !9159
  ret void, !dbg !9160
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !9161 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !9178, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9169, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !9170, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %2, metadata !9171, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !9172, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %4, metadata !9173, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %5, metadata !9174, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i8* %6, metadata !9175, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %7, metadata !9176, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %8, metadata !9177, metadata !DIExpression()), !dbg !9179
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !9180
  %13 = icmp eq i64 %11, -1, !dbg !9181
  br i1 %13, label %15, label %14, !dbg !9183

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !9184
  br label %15, !dbg !9186

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !9187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9188 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9192, metadata !DIExpression()), !dbg !9194
  %4 = icmp eq i64 %3, 0, !dbg !9195
  br i1 %4, label %5, label %6, !dbg !9197

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !9198
  br label %7, !dbg !9200

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !9201
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !9203
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !9204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9208, metadata !DIExpression()), !dbg !9209
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9210, !srcloc !9212
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !9213
  ret void, !dbg !9214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !9215 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9218, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9217, metadata !DIExpression()), !dbg !9219
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !9220
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !9221
  ret void, !dbg !9222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !9223 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !9225, metadata !DIExpression()), !dbg !9245
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !9246

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !9247
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !9243, metadata !DIExpression()), !dbg !9248
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !9249

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !9225, metadata !DIExpression()), !dbg !9245
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !9250
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !9250
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !9253
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !9253
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !9254
  %9 = load i32, i32* %8, align 4, !dbg !9254
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !9255
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !9255
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !9256
  %13 = load i8*, i8** %12, align 4, !dbg !9256
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !9257
  %15 = load i8*, i8** %14, align 4, !dbg !9257
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !9258
  %17 = load i8*, i8** %16, align 4, !dbg !9258
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !9259
  %19 = load i32, i32* %18, align 4, !dbg !9259
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !9260
  %21 = load i32, i32* %20, align 4, !dbg !9260
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !9261
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !9262
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !9263
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !9264
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !9264
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !9265
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !9225, metadata !DIExpression()), !dbg !9245
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !9266
  br i1 %27, label %2, label %1, !dbg !9246, !llvm.loop !9268

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !9247
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !9243, metadata !DIExpression()), !dbg !9248
  br label %29, !dbg !9249

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !9270
  ret void, !dbg !9271

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !9243, metadata !DIExpression()), !dbg !9248
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !9272
  %33 = load i32, i32* %32, align 4, !dbg !9272
  %34 = icmp eq i32 %33, -1, !dbg !9276
  br i1 %34, label %43, label %35, !dbg !9277

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !9278
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !9278
  %38 = icmp sgt i32 %33, 0, !dbg !9280
  %39 = select i1 %38, i32 %33, i32 0, !dbg !9280
  %40 = zext i32 %39 to i64, !dbg !9280
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !9280
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !9281
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !9281
  br label %43, !dbg !9282

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !9283
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !9243, metadata !DIExpression()), !dbg !9248
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !9284
  br i1 %45, label %30, label %29, !dbg !9249, !llvm.loop !9286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !9288 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !9293, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i64 %0, metadata !9295, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 1000, metadata !9300, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 10000, metadata !9301, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 1, metadata !9302, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 0, metadata !9303, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 1, metadata !9304, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 0, metadata !9305, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 1, metadata !9306, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 0, metadata !9307, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i64 0, metadata !9308, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i64 0, metadata !9308, metadata !DIExpression()), !dbg !9312
  %2 = mul i64 %0, 10, !dbg !9314
  ret i64 %2, !dbg !9320
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !9321 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !9323, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata i8* %1, metadata !9324, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata i8* %2, metadata !9325, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata i8* %3, metadata !9326, metadata !DIExpression()), !dbg !9327
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9328
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !9329
  %7 = load i8, i8* %6, align 4, !dbg !9330
  %8 = or i8 %7, 4, !dbg !9330
  store i8 %8, i8* %6, align 4, !dbg !9330
  tail call void @z_thread_essential_clear() #25, !dbg !9331
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !9332
  unreachable, !dbg !9332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !9333 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9337, metadata !DIExpression()), !dbg !9338
  ret i32 -134, !dbg !9339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9340 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9344, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i32 %1, metadata !9345, metadata !DIExpression()), !dbg !9346
  ret i32 -134, !dbg !9347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !9348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9355, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9356, metadata !DIExpression()), !dbg !9357
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !9358
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !9360
  %6 = select i1 %5, i32 -22, i32 0, !dbg !9357
  ret i32 %6, !dbg !9361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !9362 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9366, metadata !DIExpression()), !dbg !9367
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !9368
  %3 = select i1 %2, i32 -22, i32 0, !dbg !9367
  ret i32 %3, !dbg !9370
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !9371 {
  tail call void @sys_clock_idle_exit() #24, !dbg !9373
  ret void, !dbg !9374
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !9375 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9377, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %1, metadata !9378, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %2, metadata !9379, metadata !DIExpression()), !dbg !9380
  br label %4, !dbg !9381

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9382, !srcloc !9389
  call void @llvm.dbg.value(metadata i32 undef, metadata !9385, metadata !DIExpression()) #23, !dbg !9390
  call void @llvm.dbg.value(metadata i32 undef, metadata !9386, metadata !DIExpression()) #23, !dbg !9390
  tail call fastcc void @k_cpu_idle() #25, !dbg !9391
  br label %4, !dbg !9381, !llvm.loop !9392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !9394 {
  tail call void @arch_cpu_idle() #24, !dbg !9395
  ret void, !dbg !9396
}

; Function Attrs: optsize
declare !dbg !9397 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !9398 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9402, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !9403, metadata !DIExpression()), !dbg !9406
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !9407
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !9407
  %5 = load i8, i8* %4, align 2, !dbg !9407
  call void @llvm.dbg.value(metadata i8 %5, metadata !9404, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !9406
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !9408
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !9408
  %8 = load i8, i8* %7, align 2, !dbg !9408
  call void @llvm.dbg.value(metadata i8 %8, metadata !9405, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !9406
  %9 = icmp eq i8 %8, %5, !dbg !9409
  %10 = sext i8 %5 to i32, !dbg !9411
  %11 = sext i8 %8 to i32, !dbg !9411
  %12 = sub nsw i32 %11, %10, !dbg !9411
  %13 = select i1 %9, i32 0, i32 %12, !dbg !9411
  ret i32 %13, !dbg !9412
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !9413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !9417, metadata !DIExpression()), !dbg !9418
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !9419
  %3 = icmp eq i32 %2, 0, !dbg !9421
  br i1 %3, label %8, label %4, !dbg !9422

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !9423
  %6 = add i32 %5, %2, !dbg !9425
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !9426
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !9427
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !9428
  br label %8, !dbg !9429

8:                                                ; preds = %4, %1
  ret void, !dbg !9430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !9431 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !9435, metadata !DIExpression()), !dbg !9437
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !9438
  call void @llvm.dbg.value(metadata i32 %1, metadata !9436, metadata !DIExpression()), !dbg !9437
  ret i32 %1, !dbg !9439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9444, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 %1, metadata !9445, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata i32 0, metadata !9446, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !9462
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9464, !srcloc !9470
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %4, metadata !9467, metadata !DIExpression()) #23, !dbg !9471
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %4, metadata !9461, metadata !DIExpression()) #23, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %4, metadata !9452, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 undef, metadata !9446, metadata !DIExpression()), !dbg !9454
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !9472
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !9475
  %6 = icmp sgt i32 %0, 0, !dbg !9476
  %7 = icmp sgt i32 %5, 2, !dbg !9478
  %8 = select i1 %7, i32 %5, i32 2, !dbg !9478
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !9478
  store i32 %9, i32* @slice_ticks, align 4, !dbg !9479
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !9480
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %4, metadata !9482, metadata !DIExpression()) #23, !dbg !9488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %4, metadata !9490, metadata !DIExpression()) #23, !dbg !9493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !9495, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !9446, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata i32 undef, metadata !9446, metadata !DIExpression()), !dbg !9454
  ret void, !dbg !9497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !9498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9500, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.value(metadata i32 %0, metadata !9502, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9517
  call void @llvm.dbg.value(metadata i32 1000, metadata !9505, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i32 10000, metadata !9506, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i8 1, metadata !9507, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i1 true, metadata !9508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9517
  call void @llvm.dbg.value(metadata i1 true, metadata !9509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9517
  call void @llvm.dbg.value(metadata i8 0, metadata !9510, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i1 true, metadata !9511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9517
  call void @llvm.dbg.value(metadata i1 false, metadata !9512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9517
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !9517
  %2 = mul i32 %0, 10, !dbg !9519
  ret i32 %2, !dbg !9525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !9526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !9531
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9533, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !9535
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !9535
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %3, metadata !9529, metadata !DIExpression()), !dbg !9530
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !9536
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9538
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !9539
  br i1 %6, label %7, label %8, !dbg !9540

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !9541
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !9543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !9543
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !9545
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !9547, !srcloc !9496
  br label %24, !dbg !9548

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !9549
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !9550
  %10 = icmp eq i32 %9, 0, !dbg !9550
  br i1 %10, label %21, label %11, !dbg !9552

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !9553
  br i1 %12, label %13, label %21, !dbg !9554

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !9555
  %15 = icmp sgt i32 %14, %0, !dbg !9558
  br i1 %15, label %19, label %16, !dbg !9559

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !9560
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %18, metadata !9529, metadata !DIExpression()), !dbg !9530
  br label %22, !dbg !9562

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !9563
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !9563
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !9565
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !9530
  call void @llvm.dbg.value(metadata i32 %23, metadata !9529, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %23, metadata !9482, metadata !DIExpression()) #23, !dbg !9567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !9567
  call void @llvm.dbg.value(metadata i32 %23, metadata !9490, metadata !DIExpression()) #23, !dbg !9569
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !9571, !srcloc !9496
  br label %24, !dbg !9572

24:                                               ; preds = %22, %7
  ret void, !dbg !9572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !9573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9577, metadata !DIExpression()), !dbg !9579
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !9580
  %3 = icmp eq i32 %2, 0, !dbg !9580
  br i1 %3, label %16, label %4, !dbg !9581

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !9582
  br i1 %5, label %16, label %6, !dbg !9583

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !9584
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !9584
  %9 = load i8, i8* %8, align 2, !dbg !9584
  %10 = sext i8 %9 to i32, !dbg !9585
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !9586
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !9587
  br i1 %12, label %16, label %13, !dbg !9588

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !9589
  %15 = xor i1 %14, true, !dbg !9590
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !9579
  call void @llvm.dbg.value(metadata i1 %17, metadata !9578, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9579
  ret i1 %17, !dbg !9591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !9592 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !9596, metadata !DIExpression()), !dbg !9598
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !9597, metadata !DIExpression()), !dbg !9598
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !9600
  br i1 %3, label %5, label %4, !dbg !9602

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !9603
  br label %5, !dbg !9605

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !9596, metadata !DIExpression()), !dbg !9598
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !9606
  ret i32 %6, !dbg !9607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9608 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9610, metadata !DIExpression()), !dbg !9612
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9613
  %3 = load i8, i8* %2, align 1, !dbg !9613
  call void @llvm.dbg.value(metadata i8 %3, metadata !9611, metadata !DIExpression()), !dbg !9612
  %4 = and i8 %3, 31, !dbg !9614
  %5 = icmp ne i8 %4, 0, !dbg !9615
  ret i1 %5, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !9617 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9619, metadata !DIExpression()), !dbg !9620
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !9621
  br i1 %2, label %3, label %7, !dbg !9623

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9624, metadata !DIExpression()) #23, !dbg !9627
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9630
  %5 = load i8, i8* %4, align 1, !dbg !9631
  %6 = and i8 %5, 127, !dbg !9631
  store i8 %6, i8* %4, align 1, !dbg !9631
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9632, metadata !DIExpression()) #23, !dbg !9635
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !9639
  br label %7, !dbg !9640

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9641, metadata !DIExpression()) #23, !dbg !9644
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9646
  %9 = load i8, i8* %8, align 1, !dbg !9647
  %10 = or i8 %9, -128, !dbg !9647
  store i8 %10, i8* %8, align 1, !dbg !9647
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9648, metadata !DIExpression()) #23, !dbg !9651
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !9655, metadata !DIExpression()) #23, !dbg !9663
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9661, metadata !DIExpression()) #23, !dbg !9663
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !9665
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !9662, metadata !DIExpression()) #23, !dbg !9663
  %12 = icmp eq %struct._dnode* %11, null, !dbg !9667
  br i1 %12, label %23, label %13, !dbg !9665

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !9662, metadata !DIExpression()) #23, !dbg !9663
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !9669
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !9662, metadata !DIExpression()) #23, !dbg !9663
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !9670
  %17 = icmp sgt i32 %16, 0, !dbg !9673
  br i1 %17, label %18, label %20, !dbg !9674

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9675
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !9677
  br label %25, !dbg !9678

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !9667
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !9662, metadata !DIExpression()) #23, !dbg !9663
  %22 = icmp eq %struct._dnode* %21, null, !dbg !9667
  br i1 %22, label %23, label %13, !dbg !9665, !llvm.loop !9679

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9681
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !9682
  br label %25, !dbg !9683

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9684
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !9685
  %28 = zext i1 %27 to i32, !dbg !9685
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !9686
  ret void, !dbg !9687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9690, metadata !DIExpression()), !dbg !9691
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !9692
  ret i1 %2, !dbg !9693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !9694 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !9696, metadata !DIExpression()), !dbg !9698
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !9697, metadata !DIExpression()), !dbg !9698
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !9699
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !9700
  ret void, !dbg !9701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !9702 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9706, metadata !DIExpression()), !dbg !9707
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !9708
  br i1 %2, label %6, label %3, !dbg !9708

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9709
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !9709
  br label %6, !dbg !9708

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !9708
  ret %struct._dnode* %7, !dbg !9710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !9711 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9715, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !9716, metadata !DIExpression()), !dbg !9719
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9720
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !9720
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !9717, metadata !DIExpression()), !dbg !9719
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !9721
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !9722
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !9723
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !9724
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !9725
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !9726
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !9727
  ret void, !dbg !9728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9733, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !9734, metadata !DIExpression()), !dbg !9735
  %3 = icmp eq %struct._dnode* %1, null, !dbg !9736
  br i1 %3, label %6, label %4, !dbg !9737

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !9738
  br label %6, !dbg !9737

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !9737
  ret %struct._dnode* %7, !dbg !9739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9744, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !9745, metadata !DIExpression()), !dbg !9747
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9748
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !9748
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !9746, metadata !DIExpression()), !dbg !9747
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !9749
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !9750
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !9751
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !9752
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !9753
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !9754
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !9755
  ret void, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !9757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9759, metadata !DIExpression()), !dbg !9761
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !9762
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !9769, metadata !DIExpression()) #23, !dbg !9771
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !9772
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !9773
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !9773
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !9760, metadata !DIExpression()), !dbg !9761
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !9774, metadata !DIExpression()) #23, !dbg !9780
  call void @llvm.dbg.value(metadata i32 %0, metadata !9779, metadata !DIExpression()) #23, !dbg !9780
  %6 = icmp eq i32 %0, 0, !dbg !9783
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9785
  br i1 %6, label %8, label %15, !dbg !9786

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !9787
  br i1 %9, label %15, label %10, !dbg !9789

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !9790
  br i1 %11, label %15, label %12, !dbg !9792

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !9793
  %14 = icmp eq i32 %13, 0, !dbg !9793
  br i1 %14, label %18, label %15, !dbg !9795

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !9796
  br i1 %16, label %18, label %17, !dbg !9799

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !9800
  br label %18, !dbg !9802

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !9785
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !9785
  ret void, !dbg !9803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !9804 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9808, metadata !DIExpression()), !dbg !9811
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !9809, metadata !DIExpression()), !dbg !9811
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !9812
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !9810, metadata !DIExpression()), !dbg !9811
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !9809, metadata !DIExpression()), !dbg !9811
  ret %struct.k_thread* %3, !dbg !9813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9814 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9816, metadata !DIExpression()), !dbg !9817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !9818
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !9819
  %4 = xor i1 %3, true, !dbg !9820
  ret i1 %4, !dbg !9821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9824, metadata !DIExpression()), !dbg !9825
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !9826
  %3 = load i16, i16* %2, align 2, !dbg !9826
  %4 = icmp ult i16 %3, 128, !dbg !9827
  %5 = zext i1 %4 to i32, !dbg !9827
  ret i32 %5, !dbg !9828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9829 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !9835, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !9837
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !9838
  %4 = xor i1 %3, true, !dbg !9839
  ret i1 %4, !dbg !9840
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9841 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9847, metadata !DIExpression()), !dbg !9848
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9849
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !9849
  %4 = icmp ne %struct._dnode* %3, null, !dbg !9850
  ret i1 %4, !dbg !9851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !9852 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9854, metadata !DIExpression()), !dbg !9856
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !9855, metadata !DIExpression()), !dbg !9856
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9857
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !9857
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !9858
  br i1 %5, label %9, label %6, !dbg !9859

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !9860
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !9860
  br label %9, !dbg !9859

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !9859
  ret %struct._dnode* %10, !dbg !9861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !9862 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9866, metadata !DIExpression()), !dbg !9867
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9868
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !9868
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !9869
  ret i1 %4, !dbg !9870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !9871 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9875, metadata !DIExpression()), !dbg !9878
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9879
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !9879
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !9876, metadata !DIExpression()), !dbg !9878
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9880
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !9880
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !9877, metadata !DIExpression()), !dbg !9878
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !9881
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !9882
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !9883
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !9884
  tail call fastcc void @sys_dnode_init.95(%struct._dnode* noundef %0) #25, !dbg !9885
  ret void, !dbg !9886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.95(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !9887 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !9889, metadata !DIExpression()), !dbg !9890
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !9891
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !9892
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !9893
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !9894
  ret void, !dbg !9895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.value(metadata i32 128, metadata !9901, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9903
  %3 = load i8, i8* %2, align 1, !dbg !9903
  %4 = icmp slt i8 %3, 0, !dbg !9904
  ret i1 %4, !dbg !9905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9910, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.value(metadata i32 %1, metadata !9911, metadata !DIExpression()), !dbg !9912
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !9913
  ret i1 %3, !dbg !9914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !9915 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9917, metadata !DIExpression()), !dbg !9918
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !9919
  ret i1 %2, !dbg !9920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 %1, metadata !9924, metadata !DIExpression()), !dbg !9925
  %3 = icmp slt i32 %0, %1, !dbg !9926
  ret i1 %3, !dbg !9927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9930, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9931, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !9936
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9938, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !9940
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !9940
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %3, metadata !9933, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 undef, metadata !9931, metadata !DIExpression()), !dbg !9935
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !9946
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !9946
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !9948
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !9950, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !9931, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 undef, metadata !9931, metadata !DIExpression()), !dbg !9935
  ret void, !dbg !9951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !9952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9954, metadata !DIExpression()), !dbg !9955
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !9956
  br i1 %2, label %24, label %3, !dbg !9958

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !9959
  br i1 %4, label %5, label %24, !dbg !9960

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9641, metadata !DIExpression()) #23, !dbg !9961
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !9964
  %7 = load i8, i8* %6, align 1, !dbg !9965
  %8 = or i8 %7, -128, !dbg !9965
  store i8 %8, i8* %6, align 1, !dbg !9965
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9648, metadata !DIExpression()) #23, !dbg !9966
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !9655, metadata !DIExpression()) #23, !dbg !9968
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9661, metadata !DIExpression()) #23, !dbg !9968
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !9970
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !9662, metadata !DIExpression()) #23, !dbg !9968
  %10 = icmp eq %struct._dnode* %9, null, !dbg !9971
  br i1 %10, label %21, label %11, !dbg !9970

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !9662, metadata !DIExpression()) #23, !dbg !9968
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !9972
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !9662, metadata !DIExpression()) #23, !dbg !9968
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !9973
  %15 = icmp sgt i32 %14, 0, !dbg !9974
  br i1 %15, label %16, label %18, !dbg !9975

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9976
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !9977
  br label %23, !dbg !9978

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !9971
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !9662, metadata !DIExpression()) #23, !dbg !9968
  %20 = icmp eq %struct._dnode* %19, null, !dbg !9971
  br i1 %20, label %21, label %11, !dbg !9970, !llvm.loop !9979

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !9981
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !9982
  br label %23, !dbg !9983

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !9984
  br label %24, !dbg !9985

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !9986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9989, metadata !DIExpression()), !dbg !9990
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !9991
  br i1 %2, label %6, label %3, !dbg !9992

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !9993
  %5 = xor i1 %4, true, !dbg !9992
  br label %6, !dbg !9992

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !9994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9997, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata i32 0, metadata !9998, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10003
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10005, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !10005
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !10007
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10007
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !10003
  call void @llvm.dbg.value(metadata i32 %3, metadata !10000, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata i32 undef, metadata !9998, metadata !DIExpression()), !dbg !10002
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !10008
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !10011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10011
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !10013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !10015, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !9998, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.value(metadata i32 undef, metadata !9998, metadata !DIExpression()), !dbg !10002
  ret void, !dbg !10016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10019, metadata !DIExpression()), !dbg !10021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10022
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10024, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !10024
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !10026
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10026
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !10022
  call void @llvm.dbg.value(metadata i32 %3, metadata !10020, metadata !DIExpression()), !dbg !10021
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !10027
  br i1 %4, label %5, label %6, !dbg !10029

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !10030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10030
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !10033
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !10035, !srcloc !9496
  br label %8, !dbg !10036

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.100(%struct.k_thread* noundef %0) #25, !dbg !10037
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !10038
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !10039
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !10039
  br label %8, !dbg !10040

8:                                                ; preds = %6, %5
  ret void, !dbg !10040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10045
  %3 = load i8, i8* %2, align 1, !dbg !10045
  %4 = and i8 %3, 4, !dbg !10046
  %5 = icmp eq i8 %4, 0, !dbg !10047
  ret i1 %5, !dbg !10048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.100(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10051, metadata !DIExpression()), !dbg !10052
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10053
  %3 = load i8, i8* %2, align 1, !dbg !10054
  %4 = and i8 %3, -5, !dbg !10054
  store i8 %4, i8* %2, align 1, !dbg !10054
  ret void, !dbg !10055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !10056 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !10059, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10058, metadata !DIExpression()), !dbg !10060
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !10061
  br i1 %4, label %5, label %9, !dbg !10063

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !10064
  br i1 %6, label %7, label %9, !dbg !10065

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !10066, metadata !DIExpression()) #23, !dbg !10072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10071, metadata !DIExpression()) #23, !dbg !10072
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !10075
  br label %10, !dbg !10076

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !10077
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !10080
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !10082, !srcloc !9496
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !10083
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !10084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10088, metadata !DIExpression()), !dbg !10089
  call void @llvm.dbg.value(metadata i32 %0, metadata !10090, metadata !DIExpression()), !dbg !10095
  %2 = icmp eq i32 %0, 0, !dbg !10097
  br i1 %2, label %3, label %6, !dbg !10098

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10099, !srcloc !10106
  call void @llvm.dbg.value(metadata i32 %4, metadata !10102, metadata !DIExpression()) #23, !dbg !10107
  %5 = icmp eq i32 %4, 0, !dbg !10108
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !10089
  ret i1 %7, !dbg !10109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !10110 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10113
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !10112, metadata !DIExpression()), !dbg !10114
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10115
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !10116
  ret i1 %3, !dbg !10117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !10118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10120, metadata !DIExpression()), !dbg !10122
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !10123
  call void @llvm.dbg.value(metadata i32 %2, metadata !10121, metadata !DIExpression()), !dbg !10122
  ret i32 %2, !dbg !10124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10125 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10127, metadata !DIExpression()), !dbg !10131
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !10132
  call void @llvm.dbg.value(metadata i32 0, metadata !10128, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10134
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10136, !srcloc !9470
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !10136
  call void @llvm.dbg.value(metadata i32 %4, metadata !9467, metadata !DIExpression()) #23, !dbg !10138
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10138
  call void @llvm.dbg.value(metadata i32 %4, metadata !9461, metadata !DIExpression()) #23, !dbg !10134
  call void @llvm.dbg.value(metadata i32 %4, metadata !10130, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 undef, metadata !10128, metadata !DIExpression()), !dbg !10133
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !10139
  br i1 %5, label %6, label %10, !dbg !10143

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9624, metadata !DIExpression()) #23, !dbg !10144
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10147
  %8 = load i8, i8* %7, align 1, !dbg !10148
  %9 = and i8 %8, 127, !dbg !10148
  store i8 %9, i8* %7, align 1, !dbg !10148
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9632, metadata !DIExpression()) #23, !dbg !10149
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !10151
  br label %10, !dbg !10152

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !10153
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10154
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !10155
  %13 = zext i1 %12 to i32, !dbg !10155
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !10156
  call void @llvm.dbg.value(metadata i32 %4, metadata !9482, metadata !DIExpression()) #23, !dbg !10157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10157
  call void @llvm.dbg.value(metadata i32 %4, metadata !9490, metadata !DIExpression()) #23, !dbg !10159
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !10161, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10128, metadata !DIExpression()), !dbg !10133
  call void @llvm.dbg.value(metadata i32 undef, metadata !10128, metadata !DIExpression()), !dbg !10133
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10162
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !10164
  br i1 %15, label %16, label %17, !dbg !10165

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !10166
  br label %17, !dbg !10168

17:                                               ; preds = %16, %10
  ret void, !dbg !10169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10172, metadata !DIExpression()), !dbg !10173
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10174
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !10175
  ret i32 %3, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10179, metadata !DIExpression()), !dbg !10180
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10181
  %3 = load i8, i8* %2, align 1, !dbg !10182
  %4 = or i8 %3, 16, !dbg !10182
  store i8 %4, i8* %2, align 1, !dbg !10182
  ret void, !dbg !10183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !10184 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10185, !srcloc !9470
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10185
  call void @llvm.dbg.value(metadata i32 %2, metadata !9467, metadata !DIExpression()) #23, !dbg !10187
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10187
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !10188
  ret void, !dbg !10189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !10190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10192, metadata !DIExpression()), !dbg !10193
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !10194
  br i1 %2, label %3, label %5, !dbg !10196

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !10197
  br label %6, !dbg !10199

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9490, metadata !DIExpression()) #23, !dbg !10200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !10203, !srcloc !9496
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !10204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10207, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10210
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10212, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !10212
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !10214
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10214
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %3, metadata !10208, metadata !DIExpression()), !dbg !10209
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !10215
  br i1 %4, label %6, label %5, !dbg !10217

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !10218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !10221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !10223, !srcloc !9496
  br label %8, !dbg !10224

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !10225
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !10226
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !10227
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !10227
  br label %8, !dbg !10228

8:                                                ; preds = %6, %5
  ret void, !dbg !10228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10231, metadata !DIExpression()), !dbg !10232
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10233
  %3 = load i8, i8* %2, align 1, !dbg !10233
  %4 = and i8 %3, 16, !dbg !10234
  %5 = icmp ne i8 %4, 0, !dbg !10235
  ret i1 %5, !dbg !10236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10239, metadata !DIExpression()), !dbg !10240
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10241
  %3 = load i8, i8* %2, align 1, !dbg !10242
  %4 = and i8 %3, -17, !dbg !10242
  store i8 %4, i8* %2, align 1, !dbg !10242
  ret void, !dbg !10243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10244 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10254, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10252, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !10253, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 0, metadata !10255, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10260
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10262, !srcloc !9470
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !10262
  call void @llvm.dbg.value(metadata i32 %5, metadata !9467, metadata !DIExpression()) #23, !dbg !10264
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %5, metadata !9461, metadata !DIExpression()) #23, !dbg !10260
  call void @llvm.dbg.value(metadata i32 %5, metadata !10257, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 undef, metadata !10255, metadata !DIExpression()), !dbg !10259
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !10265
  call void @llvm.dbg.value(metadata i32 %5, metadata !9482, metadata !DIExpression()) #23, !dbg !10268
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10268
  call void @llvm.dbg.value(metadata i32 %5, metadata !9490, metadata !DIExpression()) #23, !dbg !10270
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !10272, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10255, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata i32 undef, metadata !10255, metadata !DIExpression()), !dbg !10259
  ret void, !dbg !10273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10278, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10276, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !10277, metadata !DIExpression()), !dbg !10279
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !10280
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !10281
  ret void, !dbg !10282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10287, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !10288, metadata !DIExpression()), !dbg !10289
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !10290
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !10291
  %3 = icmp eq %union.anon* %1, null, !dbg !10292
  br i1 %3, label %21, label %4, !dbg !10294

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !10295
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !10297
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !10298
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !9655, metadata !DIExpression()) #23, !dbg !10299
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9661, metadata !DIExpression()) #23, !dbg !10299
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !10301
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !9662, metadata !DIExpression()) #23, !dbg !10299
  %8 = icmp eq %struct._dnode* %7, null, !dbg !10302
  br i1 %8, label %19, label %9, !dbg !10301

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !9662, metadata !DIExpression()) #23, !dbg !10299
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !10303
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !9662, metadata !DIExpression()) #23, !dbg !10299
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !10304
  %13 = icmp sgt i32 %12, 0, !dbg !10305
  br i1 %13, label %14, label %16, !dbg !10306

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !10307
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !10308
  br label %21, !dbg !10309

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !10302
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !9662, metadata !DIExpression()) #23, !dbg !10299
  %18 = icmp eq %struct._dnode* %17, null, !dbg !10302
  br i1 %18, label %19, label %9, !dbg !10301, !llvm.loop !10310

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !10312
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !10313
  br label %21, !dbg !10314

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !10315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10316 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !10321, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10320, metadata !DIExpression()), !dbg !10322
  %4 = icmp eq i64 %3, -1, !dbg !10323
  br i1 %4, label %6, label %5, !dbg !10325

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.101(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !10326
  br label %6, !dbg !10328

6:                                                ; preds = %5, %2
  ret void, !dbg !10329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.101(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10330 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10333, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10332, metadata !DIExpression()), !dbg !10334
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !10335
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !10336
  ret void, !dbg !10337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !10338 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !10340, metadata !DIExpression()), !dbg !10348
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !10349
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !10349
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !10341, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata i32 0, metadata !10342, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10351
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10353, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10355
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10355
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10351
  call void @llvm.dbg.value(metadata i32 undef, metadata !10344, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 undef, metadata !10342, metadata !DIExpression()), !dbg !10350
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !10356
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !10357
  %7 = load i8, i8* %6, align 1, !dbg !10357
  %8 = and i8 %7, 40, !dbg !10358
  %9 = icmp eq i8 %8, 0, !dbg !10358
  call void @llvm.dbg.value(metadata i1 %9, metadata !10345, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10359
  br i1 %9, label %10, label %17, !dbg !10360

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !10361
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !10361
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !10361
  %14 = icmp eq %union.anon* %13, null, !dbg !10365
  br i1 %14, label %16, label %15, !dbg !10366

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !10367
  br label %16, !dbg !10369

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.100(%struct.k_thread* noundef nonnull %3) #25, !dbg !10370
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !10371
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !10372
  br label %17, !dbg !10373

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !10353
  call void @llvm.dbg.value(metadata i32 %18, metadata !9467, metadata !DIExpression()) #23, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %18, metadata !9461, metadata !DIExpression()) #23, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %18, metadata !10344, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()) #23, !dbg !10374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10374
  call void @llvm.dbg.value(metadata i32 undef, metadata !9490, metadata !DIExpression()) #23, !dbg !10376
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !10378, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10342, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 undef, metadata !10342, metadata !DIExpression()), !dbg !10350
  ret void, !dbg !10379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10382, metadata !DIExpression()), !dbg !10383
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !10384
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !10385
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !10386
  store %union.anon* null, %union.anon** %2, align 8, !dbg !10387
  ret void, !dbg !10388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10393
  %3 = load i8, i8* %2, align 1, !dbg !10394
  %4 = and i8 %3, -3, !dbg !10394
  store i8 %4, i8* %2, align 1, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !10400
  br i1 %2, label %3, label %7, !dbg !10402

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9624, metadata !DIExpression()) #23, !dbg !10403
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10406
  %5 = load i8, i8* %4, align 1, !dbg !10407
  %6 = and i8 %5, 127, !dbg !10407
  store i8 %6, i8* %4, align 1, !dbg !10407
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9632, metadata !DIExpression()) #23, !dbg !10408
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !10410
  br label %7, !dbg !10411

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10412
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !10413
  %10 = zext i1 %9 to i32, !dbg !10413
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !10414
  ret void, !dbg !10415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10418, metadata !DIExpression()), !dbg !10419
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10420
  %3 = load i8, i8* %2, align 1, !dbg !10421
  %4 = or i8 %3, 2, !dbg !10421
  store i8 %4, i8* %2, align 1, !dbg !10421
  ret void, !dbg !10422
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !10423 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10425, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 0, metadata !10426, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10431
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10433, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !10435
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %3, metadata !10428, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 undef, metadata !10426, metadata !DIExpression()), !dbg !10430
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !10439
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10439
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !10441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !10443, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10426, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 undef, metadata !10426, metadata !DIExpression()), !dbg !10430
  ret void, !dbg !10444
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10445 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10451, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %0, metadata !10449, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !10450, metadata !DIExpression()), !dbg !10456
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10457
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !10458
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10459
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !10460
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !10461
  call void @llvm.dbg.value(metadata i32 %6, metadata !10452, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10453, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10463
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10465, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10467
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10467
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10463
  call void @llvm.dbg.value(metadata i32 undef, metadata !10455, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 undef, metadata !10453, metadata !DIExpression()), !dbg !10462
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !10468
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10472
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !10473
  br i1 %10, label %11, label %12, !dbg !10474

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !10475
  br label %12, !dbg !10477

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %13, metadata !9467, metadata !DIExpression()) #23, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %13, metadata !9461, metadata !DIExpression()) #23, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %13, metadata !10455, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10478
  call void @llvm.dbg.value(metadata i32 undef, metadata !9490, metadata !DIExpression()) #23, !dbg !10480
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10482, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10453, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.value(metadata i32 undef, metadata !10453, metadata !DIExpression()), !dbg !10462
  ret i32 %6, !dbg !10483
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !10484 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10489, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata i64 undef, metadata !10491, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10488, metadata !DIExpression()), !dbg !10492
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !10490, metadata !DIExpression()), !dbg !10492
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10493
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !10494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10495
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10497, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10499
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10499
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10495
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10500
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !10501
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !10066, metadata !DIExpression()) #23, !dbg !10502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10071, metadata !DIExpression()) #23, !dbg !10502
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !10504
  ret i32 %9, !dbg !10505
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !10506 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10510, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 0, metadata !10512, metadata !DIExpression()), !dbg !10516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10517
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10519, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10521
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10517
  call void @llvm.dbg.value(metadata i32 undef, metadata !10514, metadata !DIExpression()), !dbg !10516
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 undef, metadata !10512, metadata !DIExpression()), !dbg !10516
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !10522
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10511, metadata !DIExpression()), !dbg !10515
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !10525
  br i1 %5, label %7, label %6, !dbg !10527

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !10528
  br label %7, !dbg !10530

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !10519
  call void @llvm.dbg.value(metadata i32 %8, metadata !9467, metadata !DIExpression()) #23, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %8, metadata !9461, metadata !DIExpression()) #23, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %8, metadata !10514, metadata !DIExpression()), !dbg !10516
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()) #23, !dbg !10531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10531
  call void @llvm.dbg.value(metadata i32 undef, metadata !9490, metadata !DIExpression()) #23, !dbg !10533
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10535, !srcloc !9496
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10511, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 undef, metadata !10512, metadata !DIExpression()), !dbg !10516
  ret %struct.k_thread* %4, !dbg !10536
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !10537 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10539, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10540, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 0, metadata !10541, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10546
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10548, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10550
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10550
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10546
  call void @llvm.dbg.value(metadata i32 undef, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10540, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 undef, metadata !10541, metadata !DIExpression()), !dbg !10545
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10540, metadata !DIExpression()), !dbg !10544
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !10554
  br i1 %5, label %8, label %6, !dbg !10556

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !10557
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !10559
  br label %8, !dbg !10560

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %9, metadata !9467, metadata !DIExpression()) #23, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %9, metadata !9461, metadata !DIExpression()) #23, !dbg !10546
  call void @llvm.dbg.value(metadata i32 %9, metadata !10543, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()) #23, !dbg !10561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10561
  call void @llvm.dbg.value(metadata i32 undef, metadata !9490, metadata !DIExpression()) #23, !dbg !10563
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !10565, !srcloc !9496
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10540, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.value(metadata i32 undef, metadata !10541, metadata !DIExpression()), !dbg !10545
  ret %struct.k_thread* %4, !dbg !10566
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !10567 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10569, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10425, metadata !DIExpression()) #23, !dbg !10571
  call void @llvm.dbg.value(metadata i32 0, metadata !10426, metadata !DIExpression()) #23, !dbg !10573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10574
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10576, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !10578
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10578
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !10574
  call void @llvm.dbg.value(metadata i32 %3, metadata !10428, metadata !DIExpression()) #23, !dbg !10573
  call void @llvm.dbg.value(metadata i32 undef, metadata !10426, metadata !DIExpression()) #23, !dbg !10573
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !10579
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !10580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !10582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !10584, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10426, metadata !DIExpression()) #23, !dbg !10573
  call void @llvm.dbg.value(metadata i32 undef, metadata !10426, metadata !DIExpression()) #23, !dbg !10573
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !10585
  ret void, !dbg !10586
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10589, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 %1, metadata !10590, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i8 0, metadata !10591, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 0, metadata !10592, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10597
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10599, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10601
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10601
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10597
  call void @llvm.dbg.value(metadata i32 undef, metadata !10594, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata i8 poison, metadata !10591, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 undef, metadata !10592, metadata !DIExpression()), !dbg !10596
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !10602
  call void @llvm.dbg.value(metadata i1 %6, metadata !10591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10595
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !10605

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9624, metadata !DIExpression()) #23, !dbg !10606
  %11 = load i8, i8* %4, align 1, !dbg !10612
  %12 = and i8 %11, 127, !dbg !10612
  store i8 %12, i8* %4, align 1, !dbg !10612
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9632, metadata !DIExpression()) #23, !dbg !10613
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !10615
  store i8 %9, i8* %8, align 2, !dbg !10616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9641, metadata !DIExpression()) #23, !dbg !10617
  %13 = load i8, i8* %4, align 1, !dbg !10619
  %14 = or i8 %13, -128, !dbg !10619
  store i8 %14, i8* %4, align 1, !dbg !10619
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9648, metadata !DIExpression()) #23, !dbg !10620
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !9655, metadata !DIExpression()) #23, !dbg !10622
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9661, metadata !DIExpression()) #23, !dbg !10622
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !10624
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !9662, metadata !DIExpression()) #23, !dbg !10622
  %16 = icmp eq %struct._dnode* %15, null, !dbg !10625
  br i1 %16, label %26, label %17, !dbg !10624

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !9662, metadata !DIExpression()) #23, !dbg !10622
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !10626
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !9662, metadata !DIExpression()) #23, !dbg !10622
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !10627
  %21 = icmp sgt i32 %20, 0, !dbg !10628
  br i1 %21, label %22, label %23, !dbg !10629

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !10630
  br label %27, !dbg !10631

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !10625
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !9662, metadata !DIExpression()) #23, !dbg !10622
  %25 = icmp eq %struct._dnode* %24, null, !dbg !10625
  br i1 %25, label %26, label %17, !dbg !10624, !llvm.loop !10632

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !10634
  br label %27, !dbg !10635

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !10636
  br label %29, !dbg !10637

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !10638
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %30, metadata !9467, metadata !DIExpression()) #23, !dbg !10601
  call void @llvm.dbg.value(metadata i32 %30, metadata !9461, metadata !DIExpression()) #23, !dbg !10597
  call void @llvm.dbg.value(metadata i32 %30, metadata !10594, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()) #23, !dbg !10640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10640
  call void @llvm.dbg.value(metadata i32 undef, metadata !9490, metadata !DIExpression()) #23, !dbg !10642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !10644, !srcloc !9496
  call void @llvm.dbg.value(metadata i8 poison, metadata !10591, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.value(metadata i32 undef, metadata !10592, metadata !DIExpression()), !dbg !10596
  ret i1 %6, !dbg !10645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10650, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %1, metadata !10651, metadata !DIExpression()), !dbg !10653
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !10654
  call void @llvm.dbg.value(metadata i1 %3, metadata !10652, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10653
  br i1 %3, label %4, label %12, !dbg !10655

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10657
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !10658
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !10658
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !10658
  %9 = load i8, i8* %8, align 1, !dbg !10658
  %10 = icmp eq i8 %9, 0, !dbg !10659
  br i1 %10, label %11, label %12, !dbg !10660

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !10661
  br label %12, !dbg !10663

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !10664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !10665 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10667, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10671
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10673, !srcloc !9470
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10673
  call void @llvm.dbg.value(metadata i32 %2, metadata !9467, metadata !DIExpression()) #23, !dbg !10675
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10675
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()) #23, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %2, metadata !10669, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata i32 undef, metadata !10667, metadata !DIExpression()), !dbg !10670
  tail call fastcc void @z_sched_lock() #25, !dbg !10676
  call void @llvm.dbg.value(metadata i32 %2, metadata !9482, metadata !DIExpression()) #23, !dbg !10679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %2, metadata !9490, metadata !DIExpression()) #23, !dbg !10681
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !10683, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10667, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.value(metadata i32 undef, metadata !10667, metadata !DIExpression()), !dbg !10670
  ret void, !dbg !10684
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !10685 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10686
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !10687
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !10687
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !10687
  %5 = load i8, i8* %4, align 1, !dbg !10688
  %6 = add i8 %5, -1, !dbg !10688
  store i8 %6, i8* %4, align 1, !dbg !10688
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10689, !srcloc !10691
  ret void, !dbg !10692
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !10693 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10695, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10699
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10701, !srcloc !9470
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10701
  call void @llvm.dbg.value(metadata i32 %2, metadata !9467, metadata !DIExpression()) #23, !dbg !10703
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10703
  call void @llvm.dbg.value(metadata i32 %2, metadata !9461, metadata !DIExpression()) #23, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %2, metadata !10697, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 undef, metadata !10695, metadata !DIExpression()), !dbg !10698
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10704
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !10707
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !10707
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10707
  %7 = load i8, i8* %6, align 1, !dbg !10708
  %8 = add i8 %7, 1, !dbg !10708
  store i8 %8, i8* %6, align 1, !dbg !10708
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %2, metadata !9482, metadata !DIExpression()) #23, !dbg !10710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %2, metadata !9490, metadata !DIExpression()) #23, !dbg !10712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !10714, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 1, metadata !10695, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.value(metadata i32 undef, metadata !10695, metadata !DIExpression()), !dbg !10698
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !10715
  ret void, !dbg !10716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !10717 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10718
  ret %struct.k_thread* %1, !dbg !10719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !10720 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !10724, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !10725, metadata !DIExpression()), !dbg !10729
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !10730
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !10726, metadata !DIExpression()), !dbg !10729
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !10731
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10727, metadata !DIExpression()), !dbg !10729
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !10732
  call void @llvm.dbg.value(metadata i32 %5, metadata !10728, metadata !DIExpression()), !dbg !10729
  %6 = icmp sgt i32 %5, 0, !dbg !10733
  br i1 %6, label %17, label %7, !dbg !10735

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !10736
  br i1 %8, label %17, label %9, !dbg !10738

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !10739
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !10739
  %12 = load i32, i32* %11, align 8, !dbg !10739
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !10741
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !10741
  %15 = load i32, i32* %14, align 8, !dbg !10741
  %16 = icmp ult i32 %12, %15, !dbg !10742
  br label %17, !dbg !10743

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !10744
  ret i1 %18, !dbg !10745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !10746 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !10763, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !10764, metadata !DIExpression()), !dbg !10778
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !10779
  %5 = load i32, i32* %4, align 4, !dbg !10780
  %6 = add nsw i32 %5, 1, !dbg !10780
  store i32 %6, i32* %4, align 4, !dbg !10780
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !10781
  store i32 %5, i32* %7, align 8, !dbg !10782
  %8 = load i32, i32* %4, align 4, !dbg !10783
  %9 = icmp eq i32 %8, 0, !dbg !10784
  br i1 %9, label %10, label %32, !dbg !10785

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !10786
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !10786
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !10766, metadata !DIExpression()), !dbg !10786
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !10786
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !10786
  %14 = load i32, i32* %13, align 4, !dbg !10786
  %15 = shl i32 %14, 2, !dbg !10786
  %16 = alloca i8, i32 %15, align 8, !dbg !10786
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !10786
  store i8* %16, i8** %17, align 4, !dbg !10786
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !10786
  %19 = alloca i8, i32 %14, align 8, !dbg !10786
  store i8* %19, i8** %18, align 4, !dbg !10786
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !10786
  store i32 -1, i32* %20, align 4, !dbg !10786
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !10787
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !10775, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !10765, metadata !DIExpression()), !dbg !10778
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !10789
  br i1 %22, label %23, label %24, !dbg !10786

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !10789
  br label %32, !dbg !10790

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !10765, metadata !DIExpression()), !dbg !10778
  %26 = load i32, i32* %4, align 4, !dbg !10791
  %27 = add nsw i32 %26, 1, !dbg !10791
  store i32 %27, i32* %4, align 4, !dbg !10791
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !10793
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !10793
  store i32 %26, i32* %29, align 8, !dbg !10794
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !10787
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !10775, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !10765, metadata !DIExpression()), !dbg !10778
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !10789
  br i1 %31, label %23, label %24, !dbg !10786, !llvm.loop !10795

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !10797
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !10798
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: optsize
declare !dbg !10801 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !10806 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !10809 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !10811, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !10812, metadata !DIExpression()), !dbg !10813
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !10814
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !10815
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !10816
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !10817
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !10817
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !10819
  br i1 %7, label %8, label %10, !dbg !10820

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !10821
  store i32 0, i32* %9, align 4, !dbg !10823
  br label %10, !dbg !10824

10:                                               ; preds = %8, %2
  ret void, !dbg !10825
}

; Function Attrs: optsize
declare !dbg !10826 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !10827 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !10831, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10832, metadata !DIExpression()), !dbg !10834
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !10835
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !10836
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !10833, metadata !DIExpression()), !dbg !10834
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !10832, metadata !DIExpression()), !dbg !10834
  ret %struct.k_thread* %4, !dbg !10837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !10838 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !10842, metadata !DIExpression()), !dbg !10843
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !10844
  ret %struct.rbnode* %2, !dbg !10845
}

; Function Attrs: optsize
declare !dbg !10846 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !10849 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !10861, metadata !DIExpression()), !dbg !10865
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !10866
  %3 = load i32, i32* %2, align 4, !dbg !10866
  %4 = icmp eq i32 %3, 0, !dbg !10868
  br i1 %4, label %10, label %5, !dbg !10869

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !10862, metadata !DIExpression()), !dbg !10865
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !10870, !range !2744
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !10871
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !10863, metadata !DIExpression()), !dbg !10865
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !10872
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !10864, metadata !DIExpression()), !dbg !10865
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10862, metadata !DIExpression()), !dbg !10865
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !10865
  ret %struct.k_thread* %11, !dbg !10873
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !10874 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10878, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.value(metadata i32 0, metadata !10879, metadata !DIExpression()), !dbg !10881
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10880, metadata !DIExpression()), !dbg !10881
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !10883
  br i1 %3, label %8, label %4, !dbg !10884

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !10885
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !10887
  call void @llvm.dbg.value(metadata i32 1, metadata !10879, metadata !DIExpression()), !dbg !10881
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !10882
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !10880, metadata !DIExpression()), !dbg !10881
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !10883
  br i1 %7, label %8, label %4, !dbg !10884, !llvm.loop !10888

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !10881
  ret i32 %9, !dbg !10890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !10891 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !10893, metadata !DIExpression()), !dbg !10894
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !10895
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !10896
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !10897
  ret %struct.k_thread* %4, !dbg !10898
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !10899 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !10908, metadata !DIExpression()), !dbg !10909
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !10910
  tail call fastcc void @sys_dlist_init.108(%struct._dnode* noundef nonnull %2) #25, !dbg !10911
  ret void, !dbg !10912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.108(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !10917, metadata !DIExpression()), !dbg !10918
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !10919
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !10920
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !10921
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !10922
  ret void, !dbg !10923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !10924 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !10925
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !10926
  ret void, !dbg !10927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10933, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !10935
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !10935
  %4 = load i8, i8* %3, align 2, !dbg !10935
  %5 = sext i8 %4 to i32, !dbg !10936
  ret i32 %5, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10942, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %1, metadata !10943, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10944, metadata !DIExpression()), !dbg !10945
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !10946
  ret void, !dbg !10947
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !10948 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !10949
  br i1 %1, label %8, label %2, !dbg !10950

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !10951
  br i1 %3, label %8, label %4, !dbg !10952

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10953
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !10954
  %7 = xor i1 %6, true, !dbg !10952
  br label %8, !dbg !10952

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !10955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !10956 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !10957, !range !6124
  %2 = icmp eq i8 %1, 0, !dbg !10957
  ret i1 %2, !dbg !10958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !10959 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !10962
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10964, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !10966
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !10966
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !10962
  call void @llvm.dbg.value(metadata i32 undef, metadata !10961, metadata !DIExpression()), !dbg !10967
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10968
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !9624, metadata !DIExpression()) #23, !dbg !10971
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !10973
  %4 = load i8, i8* %3, align 1, !dbg !10974
  %5 = and i8 %4, 127, !dbg !10974
  store i8 %5, i8* %3, align 1, !dbg !10974
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !9632, metadata !DIExpression()) #23, !dbg !10975
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !10977
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10978
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !9641, metadata !DIExpression()) #23, !dbg !10979
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !10981
  %8 = load i8, i8* %7, align 1, !dbg !10982
  %9 = or i8 %8, -128, !dbg !10982
  store i8 %9, i8* %7, align 1, !dbg !10982
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !9648, metadata !DIExpression()) #23, !dbg !10983
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !9655, metadata !DIExpression()) #23, !dbg !10985
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !9661, metadata !DIExpression()) #23, !dbg !10985
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !10987
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !9662, metadata !DIExpression()) #23, !dbg !10985
  %11 = icmp eq %struct._dnode* %10, null, !dbg !10988
  br i1 %11, label %22, label %12, !dbg !10987

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !9662, metadata !DIExpression()) #23, !dbg !10985
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !10989
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !9662, metadata !DIExpression()) #23, !dbg !10985
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !10990
  %16 = icmp sgt i32 %15, 0, !dbg !10991
  br i1 %16, label %17, label %19, !dbg !10992

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !10993
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !10994
  br label %24, !dbg !10995

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !10988
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !9662, metadata !DIExpression()) #23, !dbg !10985
  %21 = icmp eq %struct._dnode* %20, null, !dbg !10988
  br i1 %21, label %22, label %12, !dbg !10987, !llvm.loop !10996

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !10998
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !10999
  br label %24, !dbg !11000

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !10964
  call void @llvm.dbg.value(metadata i32 %25, metadata !9467, metadata !DIExpression()) #23, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %25, metadata !9461, metadata !DIExpression()) #23, !dbg !10962
  call void @llvm.dbg.value(metadata i32 %25, metadata !10961, metadata !DIExpression()), !dbg !10967
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !11001
  call void @llvm.dbg.value(metadata i32 undef, metadata !10066, metadata !DIExpression()) #23, !dbg !11002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10071, metadata !DIExpression()) #23, !dbg !11002
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !11004
  ret void, !dbg !11005
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !11006 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !11010, metadata !DIExpression()), !dbg !11013
  %3 = icmp eq i64 %2, -1, !dbg !11014
  br i1 %3, label %4, label %6, !dbg !11016

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11017
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !11019
  br label %11, !dbg !11020

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !11011, metadata !DIExpression()), !dbg !11013
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !11021
  %8 = sext i32 %7 to i64, !dbg !11021
  call void @llvm.dbg.value(metadata i64 %8, metadata !11011, metadata !DIExpression()), !dbg !11013
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !11022
  %10 = trunc i64 %9 to i32, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %10, metadata !11012, metadata !DIExpression()), !dbg !11013
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !11013
  ret i32 %12, !dbg !11023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11028, metadata !DIExpression()), !dbg !11029
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11030, !srcloc !11032
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !11033
  ret void, !dbg !11034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !11035 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11039, metadata !DIExpression()), !dbg !11043
  %2 = icmp eq i64 %0, 0, !dbg !11044
  br i1 %2, label %3, label %4, !dbg !11046

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !11047
  br label %29, !dbg !11049

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !11041, metadata !DIExpression()), !dbg !11043
  %5 = icmp sgt i64 %0, -3, !dbg !11050
  br i1 %5, label %6, label %10, !dbg !11052

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !11053
  %8 = trunc i64 %0 to i32, !dbg !11055
  %9 = add i32 %7, %8, !dbg !11055
  call void @llvm.dbg.value(metadata i32 %9, metadata !11040, metadata !DIExpression()), !dbg !11043
  br label %13, !dbg !11056

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !11057
  %12 = sub i32 -2, %11, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %12, metadata !11040, metadata !DIExpression()), !dbg !11043
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !11059
  call void @llvm.dbg.value(metadata i32 %14, metadata !11040, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !11060
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11062, !srcloc !9470
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %16, metadata !9467, metadata !DIExpression()) #23, !dbg !11064
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !11064
  call void @llvm.dbg.value(metadata i32 %16, metadata !9461, metadata !DIExpression()) #23, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %16, metadata !11042, metadata !DIExpression()), !dbg !11043
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11065
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !11066
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !11067
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11068
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !11069
  tail call fastcc void @z_add_thread_timeout.101(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !11069
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11070
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !11071
  call void @llvm.dbg.value(metadata i32 %16, metadata !10066, metadata !DIExpression()) #23, !dbg !11072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10071, metadata !DIExpression()) #23, !dbg !11072
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !11074
  %22 = zext i32 %14 to i64, !dbg !11075
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !11076
  %24 = zext i32 %23 to i64, !dbg !11076
  %25 = sub nsw i64 %22, %24, !dbg !11077
  call void @llvm.dbg.value(metadata i64 %25, metadata !11039, metadata !DIExpression()), !dbg !11043
  %26 = icmp sgt i64 %25, 0, !dbg !11078
  %27 = select i1 %26, i64 %25, i64 0, !dbg !11078
  %28 = trunc i64 %27 to i32, !dbg !11078
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !11043
  ret i32 %30, !dbg !11079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !11080 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11082, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.value(metadata i64 %0, metadata !9502, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 10000, metadata !9505, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 1000, metadata !9506, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i8 1, metadata !9507, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i1 false, metadata !9508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11084
  call void @llvm.dbg.value(metadata i1 false, metadata !9509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11084
  call void @llvm.dbg.value(metadata i8 0, metadata !9510, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i1 false, metadata !9511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11084
  call void @llvm.dbg.value(metadata i1 true, metadata !9512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11084
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i64 %0, metadata !9502, metadata !DIExpression()), !dbg !11084
  %2 = udiv i64 %0, 10, !dbg !11086
  ret i64 %2, !dbg !11090
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !11091 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11092, !srcloc !11094
  tail call void @z_impl_k_yield() #25, !dbg !11095
  ret void, !dbg !11096
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !11097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11101, metadata !DIExpression()), !dbg !11103
  %2 = sext i32 %0 to i64, !dbg !11104
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !11105
  call void @llvm.dbg.value(metadata i64 %3, metadata !11102, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11103
  %4 = shl i64 %3, 32, !dbg !11106
  %5 = ashr exact i64 %4, 32, !dbg !11106
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %6, metadata !11102, metadata !DIExpression()), !dbg !11103
  %7 = sext i32 %6 to i64, !dbg !11108
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !11109
  %9 = trunc i64 %8 to i32, !dbg !11109
  ret i32 %9, !dbg !11110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !11111 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11113, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i64 %0, metadata !9502, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 1000000, metadata !9505, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i32 10000, metadata !9506, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i8 1, metadata !9507, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i1 false, metadata !9508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11115
  call void @llvm.dbg.value(metadata i1 true, metadata !9509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11115
  call void @llvm.dbg.value(metadata i8 0, metadata !9510, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i1 false, metadata !9511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11115
  call void @llvm.dbg.value(metadata i1 true, metadata !9512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11115
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !11115
  %2 = add i64 %0, 99, !dbg !11117
  call void @llvm.dbg.value(metadata i64 %2, metadata !9502, metadata !DIExpression()), !dbg !11115
  %3 = udiv i64 %2, 100, !dbg !11118
  ret i64 %3, !dbg !11119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !11120 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11122, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i64 %0, metadata !9502, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i32 10000, metadata !9505, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i32 1000000, metadata !9506, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i8 1, metadata !9507, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i1 false, metadata !9508, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11124
  call void @llvm.dbg.value(metadata i1 false, metadata !9509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11124
  call void @llvm.dbg.value(metadata i8 0, metadata !9510, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i1 true, metadata !9511, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11124
  call void @llvm.dbg.value(metadata i1 false, metadata !9512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11124
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i64 0, metadata !9513, metadata !DIExpression()), !dbg !11124
  %2 = mul i64 %0, 100, !dbg !11126
  ret i64 %2, !dbg !11128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11131, metadata !DIExpression()), !dbg !11132
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !11133
  br i1 %2, label %14, label %3, !dbg !11135

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !11136
  %5 = icmp slt i32 %4, 0, !dbg !11138
  br i1 %5, label %6, label %10, !dbg !11139

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11140
  %8 = load i8, i8* %7, align 1, !dbg !11140
  %9 = icmp eq i8 %8, 16, !dbg !11143
  br i1 %9, label %10, label %14, !dbg !11144

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !11145
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !11146
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11147, !srcloc !10106
  call void @llvm.dbg.value(metadata i32 %11, metadata !10102, metadata !DIExpression()) #23, !dbg !11151
  %12 = icmp eq i32 %11, 0, !dbg !11152
  br i1 %12, label %13, label %14, !dbg !11153

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !11154
  br label %14, !dbg !11156

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !11157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11160, metadata !DIExpression()), !dbg !11161
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11162
  %3 = load i8, i8* %2, align 1, !dbg !11162
  %4 = and i8 %3, 2, !dbg !11163
  %5 = icmp ne i8 %4, 0, !dbg !11164
  ret i1 %5, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !11166 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11171
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11170, metadata !DIExpression()), !dbg !11172
  ret %struct.k_thread* %1, !dbg !11173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !11174 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11175, !srcloc !10106
  call void @llvm.dbg.value(metadata i32 %1, metadata !10102, metadata !DIExpression()) #23, !dbg !11178
  %2 = icmp eq i32 %1, 0, !dbg !11179
  br i1 %2, label %3, label %8, !dbg !11180

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11181
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !11182
  %6 = icmp ne i32 %5, 0, !dbg !11180
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !11183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11184 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11186, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !11189
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11191, !srcloc !9470
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11191
  call void @llvm.dbg.value(metadata i32 %3, metadata !9467, metadata !DIExpression()) #23, !dbg !11193
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %3, metadata !9461, metadata !DIExpression()) #23, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %3, metadata !11187, metadata !DIExpression()), !dbg !11188
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11194
  %5 = load i8, i8* %4, align 4, !dbg !11194
  %6 = and i8 %5, 1, !dbg !11196
  %7 = icmp eq i8 %6, 0, !dbg !11197
  br i1 %7, label %9, label %8, !dbg !11198

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !11199
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !11199
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !11202
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11204, !srcloc !9496
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !11205, !srcloc !11207
  br label %24, !dbg !11208

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11209
  %11 = load i8, i8* %10, align 1, !dbg !11209
  %12 = and i8 %11, 8, !dbg !11211
  %13 = icmp eq i8 %12, 0, !dbg !11212
  br i1 %13, label %15, label %14, !dbg !11213

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !11214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !11214
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !11217
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11219, !srcloc !9496
  br label %24, !dbg !11220

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !11221
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11222
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !11224
  br i1 %17, label %18, label %23, !dbg !11225

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11226, !srcloc !10106
  call void @llvm.dbg.value(metadata i32 %19, metadata !10102, metadata !DIExpression()) #23, !dbg !11229
  %20 = icmp eq i32 %19, 0, !dbg !11230
  br i1 %20, label %21, label %23, !dbg !11231

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !10066, metadata !DIExpression()) #23, !dbg !11232
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10071, metadata !DIExpression()) #23, !dbg !11232
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !11235
  br label %23, !dbg !11236

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()) #23, !dbg !11237
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !11237
  call void @llvm.dbg.value(metadata i32 %3, metadata !9490, metadata !DIExpression()) #23, !dbg !11239
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11241, !srcloc !9496
  br label %24, !dbg !11242

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !11242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11245, metadata !DIExpression()), !dbg !11246
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11247
  %3 = load i8, i8* %2, align 1, !dbg !11247
  %4 = and i8 %3, 8, !dbg !11249
  %5 = icmp eq i8 %4, 0, !dbg !11250
  br i1 %5, label %6, label %20, !dbg !11251

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !11252
  %8 = or i8 %7, 8, !dbg !11252
  store i8 %8, i8* %2, align 1, !dbg !11252
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !11254
  br i1 %9, label %10, label %12, !dbg !11256

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9624, metadata !DIExpression()) #23, !dbg !11257
  %11 = and i8 %8, 95, !dbg !11260
  store i8 %11, i8* %2, align 1, !dbg !11260
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9632, metadata !DIExpression()) #23, !dbg !11261
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !11263
  br label %12, !dbg !11264

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !11265
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !11265
  %15 = icmp eq %union.anon* %14, null, !dbg !11267
  br i1 %15, label %17, label %16, !dbg !11268

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !11269
  br label %17, !dbg !11271

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !11272
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11273
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !11274
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !11275
  br label %20, !dbg !11276

20:                                               ; preds = %17, %1
  ret void, !dbg !11277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !11278 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11282, metadata !DIExpression()), !dbg !11284
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !11285
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11283, metadata !DIExpression()), !dbg !11284
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11286
  br i1 %3, label %10, label %4, !dbg !11287

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !11288
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !11290
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11291, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.value(metadata i32 0, metadata !11296, metadata !DIExpression()), !dbg !11297
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !11299
  store i32 0, i32* %7, align 4, !dbg !11300
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !11301
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !11285
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !11283, metadata !DIExpression()), !dbg !11284
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !11286
  br i1 %9, label %10, label %4, !dbg !11287, !llvm.loop !11302

10:                                               ; preds = %4, %1
  ret void, !dbg !11304
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !11305 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11310, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11309, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !11314
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11316, !srcloc !9470
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %4, metadata !9467, metadata !DIExpression()) #23, !dbg !11318
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !11318
  call void @llvm.dbg.value(metadata i32 %4, metadata !9461, metadata !DIExpression()) #23, !dbg !11314
  call void @llvm.dbg.value(metadata i32 %4, metadata !11311, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i32 0, metadata !11312, metadata !DIExpression()), !dbg !11313
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11319
  %6 = load i8, i8* %5, align 1, !dbg !11319
  %7 = and i8 %6, 8, !dbg !11321
  %8 = icmp eq i8 %7, 0, !dbg !11322
  br i1 %8, label %9, label %24, !dbg !11323

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !11310, metadata !DIExpression()), !dbg !11313
  %11 = icmp eq i64 %10, 0, !dbg !11324
  br i1 %11, label %24, label %12, !dbg !11326

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11327
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !11329
  br i1 %14, label %24, label %15, !dbg !11330

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !11331
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !11331
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !11332
  %19 = icmp eq %union.anon* %17, %18, !dbg !11333
  br i1 %19, label %24, label %20, !dbg !11334

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11335
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !11337
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11338
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %4, metadata !10066, metadata !DIExpression()) #23, !dbg !11340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10071, metadata !DIExpression()) #23, !dbg !11340
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !11342
  call void @llvm.dbg.value(metadata i32 %23, metadata !11312, metadata !DIExpression()), !dbg !11313
  br label %26, !dbg !11343

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !11344
  call void @llvm.dbg.value(metadata i32 %25, metadata !11312, metadata !DIExpression()), !dbg !11313
  call void @llvm.dbg.value(metadata i32 %4, metadata !9482, metadata !DIExpression()) #23, !dbg !11345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !11345
  call void @llvm.dbg.value(metadata i32 %4, metadata !9490, metadata !DIExpression()) #23, !dbg !11347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11349, !srcloc !9496
  br label %26, !dbg !11350

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !11313
  ret i32 %27, !dbg !11351
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11352 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11356, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i32 %1, metadata !11357, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i8* %2, metadata !11358, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i8 0, metadata !11360, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i32 0, metadata !11361, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9455, metadata !DIExpression()) #23, !dbg !11366
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11368, !srcloc !9470
  call void @llvm.dbg.value(metadata i32 undef, metadata !9467, metadata !DIExpression()) #23, !dbg !11370
  call void @llvm.dbg.value(metadata i32 undef, metadata !9468, metadata !DIExpression()) #23, !dbg !11370
  call void @llvm.dbg.value(metadata i32 undef, metadata !9461, metadata !DIExpression()) #23, !dbg !11366
  call void @llvm.dbg.value(metadata i32 undef, metadata !11363, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i8 poison, metadata !11360, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i32 undef, metadata !11361, metadata !DIExpression()), !dbg !11365
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !11371
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11359, metadata !DIExpression()), !dbg !11364
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !11374
  br i1 %7, label %12, label %8, !dbg !11376

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11377, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i32 %1, metadata !11383, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata i8* %2, metadata !11384, metadata !DIExpression()), !dbg !11385
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11291, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.value(metadata i32 %1, metadata !11296, metadata !DIExpression()), !dbg !11388
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !11390
  store i32 %1, i32* %9, align 4, !dbg !11391
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !11392
  store i8* %2, i8** %10, align 4, !dbg !11393
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !11394
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !11395
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !11396
  call void @llvm.dbg.value(metadata i8 1, metadata !11360, metadata !DIExpression()), !dbg !11364
  br label %12, !dbg !11397

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !11368
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !11368
  call void @llvm.dbg.value(metadata i32 %14, metadata !9467, metadata !DIExpression()) #23, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %14, metadata !9461, metadata !DIExpression()) #23, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %14, metadata !11363, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.value(metadata i8 poison, metadata !11360, metadata !DIExpression()), !dbg !11364
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()) #23, !dbg !11398
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !9487, metadata !DIExpression()) #23, !dbg !11398
  call void @llvm.dbg.value(metadata i32 undef, metadata !9490, metadata !DIExpression()) #23, !dbg !11400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !11402, !srcloc !9496
  call void @llvm.dbg.value(metadata i32 undef, metadata !11361, metadata !DIExpression()), !dbg !11365
  ret i1 %13, !dbg !11403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !11404 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11410, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i64 undef, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11409, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !11411, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i8** %4, metadata !11413, metadata !DIExpression()), !dbg !11415
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !11416
  call void @llvm.dbg.value(metadata i32 %6, metadata !11414, metadata !DIExpression()), !dbg !11415
  %7 = icmp eq i8** %4, null, !dbg !11417
  br i1 %7, label %12, label %8, !dbg !11419

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11420
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !11422
  %11 = load i8*, i8** %10, align 4, !dbg !11422
  store i8* %11, i8** %4, align 4, !dbg !11423
  br label %12, !dbg !11424

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !11425
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !11426 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !11428
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !11429
  ret void, !dbg !11430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !11431 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !11441, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11439, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !11440, metadata !DIExpression()), !dbg !11458
  %5 = icmp eq i64 %4, -1, !dbg !11459
  br i1 %5, label %55, label %6, !dbg !11461

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !11462
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !11463
  call void @llvm.dbg.value(metadata i32 0, metadata !11442, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11472
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11474, !srcloc !11480
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !11474
  call void @llvm.dbg.value(metadata i32 %9, metadata !11477, metadata !DIExpression()) #23, !dbg !11481
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %9, metadata !11471, metadata !DIExpression()) #23, !dbg !11472
  call void @llvm.dbg.value(metadata i32 %9, metadata !11448, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32 undef, metadata !11442, metadata !DIExpression()), !dbg !11464
  %10 = icmp slt i64 %4, -1, !dbg !11482
  br i1 %10, label %11, label %17, !dbg !11483

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !11484
  %13 = add i64 %4, %12, !dbg !11485
  %14 = sub i64 -2, %13, !dbg !11485
  call void @llvm.dbg.value(metadata i64 %14, metadata !11452, metadata !DIExpression()), !dbg !11486
  %15 = icmp sgt i64 %14, 1, !dbg !11487
  %16 = select i1 %15, i64 %14, i64 1, !dbg !11487
  br label %22, !dbg !11488

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !11489
  %19 = tail call fastcc i32 @elapsed.119() #25, !dbg !11491
  %20 = sext i32 %19 to i64, !dbg !11491
  %21 = add nsw i64 %18, %20, !dbg !11492
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !11493
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !11494
  store i64 %23, i64* %24, align 8, !dbg !11495
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !11496
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !11449, metadata !DIExpression()), !dbg !11498
  %26 = icmp eq %struct._timeout* %25, null, !dbg !11499
  br i1 %26, label %42, label %27, !dbg !11499

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !11500
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !11449, metadata !DIExpression()), !dbg !11498
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !11504
  %31 = load i64, i64* %30, align 8, !dbg !11504
  %32 = icmp slt i64 %28, %31, !dbg !11505
  br i1 %32, label %33, label %38, !dbg !11506

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !11504
  %35 = sub nsw i64 %31, %28, !dbg !11507
  store i64 %35, i64* %34, align 8, !dbg !11507
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !11509
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11510
  tail call fastcc void @sys_dlist_insert.120(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !11511
  br label %44, !dbg !11512

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !11513
  store i64 %39, i64* %24, align 8, !dbg !11513
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !11514
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !11449, metadata !DIExpression()), !dbg !11498
  %41 = icmp eq %struct._timeout* %40, null, !dbg !11499
  br i1 %41, label %42, label %27, !dbg !11499, !llvm.loop !11515

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11517
  tail call fastcc void @sys_dlist_append.121(%struct._dnode* noundef %43) #25, !dbg !11520
  br label %44, !dbg !11521

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !11522
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !11523
  br i1 %46, label %47, label %54, !dbg !11524

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %48, metadata !11455, metadata !DIExpression()), !dbg !11526
  %49 = icmp ne i32 %48, 0, !dbg !11527
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !11529
  br i1 %52, label %54, label %53, !dbg !11529

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !11530
  br label %54, !dbg !11532

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !11533, metadata !DIExpression()) #23, !dbg !11539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11539
  call void @llvm.dbg.value(metadata i32 %9, metadata !11541, metadata !DIExpression()) #23, !dbg !11544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !11546, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11442, metadata !DIExpression()), !dbg !11464
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !11548
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.119() unnamed_addr #1 !dbg !11549 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !11552
  %2 = icmp eq i32 %1, 0, !dbg !11553
  br i1 %2, label %3, label %5, !dbg !11552

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !11554
  br label %5, !dbg !11552

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !11552
  ret i32 %6, !dbg !11555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !11556 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.124() #25, !dbg !11562
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11560, metadata !DIExpression()), !dbg !11563
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !11564
  ret %struct._timeout* %2, !dbg !11565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.120(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11566 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11570, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11571, metadata !DIExpression()), !dbg !11574
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11575
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11575
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11572, metadata !DIExpression()), !dbg !11574
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11576
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11577
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11578
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11579
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11580
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11581
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11582
  ret void, !dbg !11583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !11584 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11588, metadata !DIExpression()), !dbg !11590
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11591
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.122(%struct._dnode* noundef %2) #25, !dbg !11592
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11589, metadata !DIExpression()), !dbg !11590
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !11593
  ret %struct._timeout* %4, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.121(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !11600, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11601, metadata !DIExpression()), !dbg !11603
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !11604
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11602, metadata !DIExpression()), !dbg !11603
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11605
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !11606
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11607
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !11608
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !11609
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11610
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !11611
  ret void, !dbg !11612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !11613 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !11618
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !11615, metadata !DIExpression()), !dbg !11619
  %2 = tail call fastcc i32 @elapsed.119() #25, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %2, metadata !11616, metadata !DIExpression()), !dbg !11619
  %3 = icmp eq %struct._timeout* %1, null, !dbg !11621
  br i1 %3, label %14, label %4, !dbg !11623

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !11624
  %6 = load i64, i64* %5, align 8, !dbg !11624
  %7 = sext i32 %2 to i64, !dbg !11625
  %8 = sub nsw i64 %6, %7, !dbg !11626
  %9 = icmp sgt i64 %8, 2147483647, !dbg !11627
  br i1 %9, label %14, label %10, !dbg !11628

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !11629
  %12 = select i1 %11, i64 %8, i64 0, !dbg !11629
  %13 = trunc i64 %12 to i32, !dbg !11629
  call void @llvm.dbg.value(metadata i32 %13, metadata !11617, metadata !DIExpression()), !dbg !11619
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !11631
  call void @llvm.dbg.value(metadata i32 %15, metadata !11617, metadata !DIExpression()), !dbg !11619
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11632
  %17 = icmp ne i32 %16, 0, !dbg !11634
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !11635
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %20, metadata !11617, metadata !DIExpression()), !dbg !11619
  ret i32 %20, !dbg !11636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.122(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !11637 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !11641, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11642, metadata !DIExpression()), !dbg !11643
  %2 = icmp eq %struct._dnode* %0, null, !dbg !11644
  br i1 %2, label %5, label %3, !dbg !11645

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.123(%struct._dnode* noundef nonnull %0) #25, !dbg !11646
  br label %5, !dbg !11645

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !11645
  ret %struct._dnode* %6, !dbg !11647
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.123(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !11648 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !11650, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !11653
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !11654
  br i1 %3, label %7, label %4, !dbg !11655

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11656
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !11656
  br label %7, !dbg !11655

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !11655
  ret %struct._dnode* %8, !dbg !11657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.124() unnamed_addr #5 !dbg !11658 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !11662, metadata !DIExpression()), !dbg !11663
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.125() #25, !dbg !11664
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !11664
  ret %struct._dnode* %3, !dbg !11665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.125() unnamed_addr #5 !dbg !11666 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !11670, metadata !DIExpression()), !dbg !11671
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !11672
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !11673
  ret i1 %2, !dbg !11674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !11675 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11679, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 -22, metadata !11680, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 0, metadata !11681, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11686
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11688, !srcloc !11480
  call void @llvm.dbg.value(metadata i32 undef, metadata !11477, metadata !DIExpression()) #23, !dbg !11690
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11690
  call void @llvm.dbg.value(metadata i32 undef, metadata !11471, metadata !DIExpression()) #23, !dbg !11686
  call void @llvm.dbg.value(metadata i32 undef, metadata !11683, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 -22, metadata !11680, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11681, metadata !DIExpression()), !dbg !11685
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !11680, metadata !DIExpression()), !dbg !11684
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.128(%struct._dnode* noundef %3) #25, !dbg !11691
  br i1 %4, label %5, label %6, !dbg !11695

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !11696
  call void @llvm.dbg.value(metadata i32 0, metadata !11680, metadata !DIExpression()), !dbg !11684
  br label %6, !dbg !11698

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !11684
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %8, metadata !11477, metadata !DIExpression()) #23, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %8, metadata !11471, metadata !DIExpression()) #23, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %8, metadata !11683, metadata !DIExpression()), !dbg !11685
  call void @llvm.dbg.value(metadata i32 %7, metadata !11680, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 undef, metadata !11533, metadata !DIExpression()) #23, !dbg !11699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11699
  call void @llvm.dbg.value(metadata i32 undef, metadata !11541, metadata !DIExpression()) #23, !dbg !11701
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !11703, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11681, metadata !DIExpression()), !dbg !11685
  ret i32 %7, !dbg !11704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.128(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11705 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11711, metadata !DIExpression()), !dbg !11712
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11713
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11713
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11714
  ret i1 %4, !dbg !11715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !11716 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11718, metadata !DIExpression()), !dbg !11719
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !11720
  %3 = icmp eq %struct._timeout* %2, null, !dbg !11722
  br i1 %3, label %10, label %4, !dbg !11723

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !11724
  %6 = load i64, i64* %5, align 8, !dbg !11724
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !11726
  %8 = load i64, i64* %7, align 8, !dbg !11727
  %9 = add nsw i64 %8, %6, !dbg !11727
  store i64 %9, i64* %7, align 8, !dbg !11727
  br label %10, !dbg !11728

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11729
  tail call fastcc void @sys_dlist_remove.129(%struct._dnode* noundef %11) #25, !dbg !11730
  ret void, !dbg !11731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.129(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !11732 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11736, metadata !DIExpression()), !dbg !11739
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11740
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11740
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11737, metadata !DIExpression()), !dbg !11739
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11741
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11741
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11738, metadata !DIExpression()), !dbg !11739
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11742
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11743
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !11744
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !11745
  tail call fastcc void @sys_dnode_init.130(%struct._dnode* noundef %0) #25, !dbg !11746
  ret void, !dbg !11747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.130(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11748 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11750, metadata !DIExpression()), !dbg !11751
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11752
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11753
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11754
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11755
  ret void, !dbg !11756
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !11757 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11763, metadata !DIExpression()), !dbg !11768
  call void @llvm.dbg.value(metadata i64 0, metadata !11764, metadata !DIExpression()), !dbg !11768
  call void @llvm.dbg.value(metadata i32 0, metadata !11765, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11770
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11772, !srcloc !11480
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11772
  call void @llvm.dbg.value(metadata i32 %3, metadata !11477, metadata !DIExpression()) #23, !dbg !11774
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11774
  call void @llvm.dbg.value(metadata i32 %3, metadata !11471, metadata !DIExpression()) #23, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %3, metadata !11767, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.value(metadata i64 0, metadata !11764, metadata !DIExpression()), !dbg !11768
  call void @llvm.dbg.value(metadata i32 undef, metadata !11765, metadata !DIExpression()), !dbg !11769
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !11775
  call void @llvm.dbg.value(metadata i64 %4, metadata !11764, metadata !DIExpression()), !dbg !11768
  call void @llvm.dbg.value(metadata i32 %3, metadata !11533, metadata !DIExpression()) #23, !dbg !11778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11778
  call void @llvm.dbg.value(metadata i32 %3, metadata !11541, metadata !DIExpression()) #23, !dbg !11780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11782, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11765, metadata !DIExpression()), !dbg !11769
  ret i64 %4, !dbg !11783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !11784 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11786, metadata !DIExpression()), !dbg !11790
  call void @llvm.dbg.value(metadata i64 0, metadata !11787, metadata !DIExpression()), !dbg !11790
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.131(%struct._timeout* noundef %0) #25, !dbg !11791
  br i1 %2, label %21, label %3, !dbg !11793

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !11794
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !11788, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i64 0, metadata !11787, metadata !DIExpression()), !dbg !11790
  %5 = icmp eq %struct._timeout* %4, null, !dbg !11796
  br i1 %5, label %16, label %6, !dbg !11798

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !11788, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i64 %8, metadata !11787, metadata !DIExpression()), !dbg !11790
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !11799
  %10 = load i64, i64* %9, align 8, !dbg !11799
  %11 = add nsw i64 %10, %8, !dbg !11801
  call void @llvm.dbg.value(metadata i64 %11, metadata !11787, metadata !DIExpression()), !dbg !11790
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !11802
  br i1 %12, label %16, label %13, !dbg !11804

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !11805
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !11788, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.value(metadata i64 %11, metadata !11787, metadata !DIExpression()), !dbg !11790
  %15 = icmp eq %struct._timeout* %14, null, !dbg !11796
  br i1 %15, label %16, label %6, !dbg !11798, !llvm.loop !11806

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !11790
  call void @llvm.dbg.value(metadata i64 %17, metadata !11787, metadata !DIExpression()), !dbg !11790
  %18 = tail call fastcc i32 @elapsed.119() #25, !dbg !11808
  %19 = sext i32 %18 to i64, !dbg !11808
  %20 = sub nsw i64 %17, %19, !dbg !11809
  br label %21, !dbg !11810

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !11790
  ret i64 %22, !dbg !11811
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.131(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11812 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11816, metadata !DIExpression()), !dbg !11817
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11818
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.128(%struct._dnode* noundef %2) #25, !dbg !11819
  %4 = xor i1 %3, true, !dbg !11820
  ret i1 %4, !dbg !11821
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !11822 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11824, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i64 0, metadata !11825, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 0, metadata !11826, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11831
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11833, !srcloc !11480
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %3, metadata !11477, metadata !DIExpression()) #23, !dbg !11835
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %3, metadata !11471, metadata !DIExpression()) #23, !dbg !11831
  call void @llvm.dbg.value(metadata i32 %3, metadata !11828, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i64 0, metadata !11825, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.value(metadata i32 undef, metadata !11826, metadata !DIExpression()), !dbg !11830
  %4 = load i64, i64* @curr_tick, align 8, !dbg !11836
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !11839
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !11825, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11829
  call void @llvm.dbg.value(metadata i32 %3, metadata !11533, metadata !DIExpression()) #23, !dbg !11840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %3, metadata !11541, metadata !DIExpression()) #23, !dbg !11842
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11844, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11826, metadata !DIExpression()), !dbg !11830
  %6 = add i64 %5, %4, !dbg !11845
  ret i64 %6, !dbg !11846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !11847 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11849, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i32 0, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11855
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11857, !srcloc !11480
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11857
  call void @llvm.dbg.value(metadata i32 %2, metadata !11477, metadata !DIExpression()) #23, !dbg !11859
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %2, metadata !11471, metadata !DIExpression()) #23, !dbg !11855
  call void @llvm.dbg.value(metadata i32 %2, metadata !11852, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 -1, metadata !11849, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i32 undef, metadata !11850, metadata !DIExpression()), !dbg !11854
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !11860
  call void @llvm.dbg.value(metadata i32 %3, metadata !11849, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i32 %2, metadata !11533, metadata !DIExpression()) #23, !dbg !11863
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11863
  call void @llvm.dbg.value(metadata i32 %2, metadata !11541, metadata !DIExpression()) #23, !dbg !11865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !11867, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11850, metadata !DIExpression()), !dbg !11854
  ret i32 %3, !dbg !11868
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11871, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.value(metadata i1 %1, metadata !11872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11881
  call void @llvm.dbg.value(metadata i32 0, metadata !11873, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11883
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11885, !srcloc !11480
  call void @llvm.dbg.value(metadata i32 undef, metadata !11477, metadata !DIExpression()) #23, !dbg !11887
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11887
  call void @llvm.dbg.value(metadata i32 undef, metadata !11471, metadata !DIExpression()) #23, !dbg !11883
  call void @llvm.dbg.value(metadata i32 undef, metadata !11875, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 undef, metadata !11873, metadata !DIExpression()), !dbg !11882
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !11888
  call void @llvm.dbg.value(metadata i32 %4, metadata !11876, metadata !DIExpression()), !dbg !11889
  call void @llvm.dbg.value(metadata i1 undef, metadata !11879, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11889
  %5 = icmp slt i32 %4, 2, !dbg !11890
  call void @llvm.dbg.value(metadata i1 %5, metadata !11880, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11889
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !11891
  call void @llvm.dbg.value(metadata i1 %6, metadata !11879, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11889
  br i1 %7, label %11, label %8, !dbg !11891

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !11893
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !11893
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !11895
  br label %11, !dbg !11896

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !11885
  call void @llvm.dbg.value(metadata i32 %12, metadata !11477, metadata !DIExpression()) #23, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %12, metadata !11471, metadata !DIExpression()) #23, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %12, metadata !11875, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 undef, metadata !11533, metadata !DIExpression()) #23, !dbg !11897
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11897
  call void @llvm.dbg.value(metadata i32 undef, metadata !11541, metadata !DIExpression()) #23, !dbg !11899
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !11901, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 1, metadata !11873, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 undef, metadata !11873, metadata !DIExpression()), !dbg !11882
  ret void, !dbg !11902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !11903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11907, metadata !DIExpression()), !dbg !11912
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !11913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11914
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11916, !srcloc !11480
  call void @llvm.dbg.value(metadata i32 undef, metadata !11477, metadata !DIExpression()) #23, !dbg !11918
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11918
  call void @llvm.dbg.value(metadata i32 undef, metadata !11471, metadata !DIExpression()) #23, !dbg !11914
  call void @llvm.dbg.value(metadata i32 undef, metadata !11908, metadata !DIExpression()), !dbg !11912
  store i32 %0, i32* @announce_remaining, align 4, !dbg !11912
  call void @llvm.dbg.value(metadata i32 undef, metadata !11908, metadata !DIExpression()), !dbg !11912
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !11919
  %4 = icmp eq %struct._timeout* %3, null, !dbg !11920
  br i1 %4, label %28, label %5, !dbg !11921

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !11922
  %10 = load i64, i64* %9, align 8, !dbg !11922
  %11 = sext i32 %8 to i64, !dbg !11923
  %12 = icmp sgt i64 %10, %11, !dbg !11924
  br i1 %12, label %26, label %13, !dbg !11925

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !11912
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !11909, metadata !DIExpression()), !dbg !11926
  %15 = trunc i64 %10 to i32, !dbg !11927
  call void @llvm.dbg.value(metadata i32 %15, metadata !11911, metadata !DIExpression()), !dbg !11926
  %16 = sext i32 %15 to i64, !dbg !11928
  %17 = load i64, i64* @curr_tick, align 8, !dbg !11929
  %18 = add i64 %17, %16, !dbg !11929
  store i64 %18, i64* @curr_tick, align 8, !dbg !11929
  store i64 0, i64* %9, align 8, !dbg !11930
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !11931
  call void @llvm.dbg.value(metadata i32 %14, metadata !11533, metadata !DIExpression()) #23, !dbg !11932
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11932
  call void @llvm.dbg.value(metadata i32 %14, metadata !11541, metadata !DIExpression()) #23, !dbg !11934
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !11936, !srcloc !11547
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !11937
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !11937
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !11938
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11939
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11941, !srcloc !11480
  call void @llvm.dbg.value(metadata i32 undef, metadata !11477, metadata !DIExpression()) #23, !dbg !11943
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11943
  call void @llvm.dbg.value(metadata i32 undef, metadata !11471, metadata !DIExpression()) #23, !dbg !11939
  call void @llvm.dbg.value(metadata i32 undef, metadata !11908, metadata !DIExpression()), !dbg !11912
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !11944
  %23 = sub nsw i32 %22, %15, !dbg !11944
  store i32 %23, i32* @announce_remaining, align 4, !dbg !11912
  call void @llvm.dbg.value(metadata i32 undef, metadata !11908, metadata !DIExpression()), !dbg !11912
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !11919
  %25 = icmp eq %struct._timeout* %24, null, !dbg !11920
  br i1 %25, label %28, label %5, !dbg !11921, !llvm.loop !11945

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !11947
  store i64 %27, i64* %9, align 8, !dbg !11947
  br label %32, !dbg !11950

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !11912
  %31 = sext i32 %30 to i64, !dbg !11951
  br label %32, !dbg !11951

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !11951
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !11912
  %36 = load i64, i64* @curr_tick, align 8, !dbg !11952
  %37 = add i64 %36, %33, !dbg !11952
  store i64 %37, i64* @curr_tick, align 8, !dbg !11952
  store i32 0, i32* @announce_remaining, align 4, !dbg !11953
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !11954
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %35, metadata !11533, metadata !DIExpression()) #23, !dbg !11956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %35, metadata !11541, metadata !DIExpression()) #23, !dbg !11958
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !11960, !srcloc !11547
  ret void, !dbg !11961
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !11962 {
  call void @llvm.dbg.value(metadata i64 0, metadata !11966, metadata !DIExpression()), !dbg !11970
  call void @llvm.dbg.value(metadata i32 0, metadata !11967, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11465, metadata !DIExpression()) #23, !dbg !11972
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11974, !srcloc !11480
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11974
  call void @llvm.dbg.value(metadata i32 %2, metadata !11477, metadata !DIExpression()) #23, !dbg !11976
  call void @llvm.dbg.value(metadata i32 undef, metadata !11478, metadata !DIExpression()) #23, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %2, metadata !11471, metadata !DIExpression()) #23, !dbg !11972
  call void @llvm.dbg.value(metadata i32 %2, metadata !11969, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.value(metadata i64 0, metadata !11966, metadata !DIExpression()), !dbg !11970
  call void @llvm.dbg.value(metadata i32 undef, metadata !11967, metadata !DIExpression()), !dbg !11971
  %3 = load i64, i64* @curr_tick, align 8, !dbg !11977
  %4 = tail call fastcc i32 @elapsed.119() #25, !dbg !11980
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !11966, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11970
  call void @llvm.dbg.value(metadata i32 %2, metadata !11533, metadata !DIExpression()) #23, !dbg !11981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %2, metadata !11541, metadata !DIExpression()) #23, !dbg !11983
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !11985, !srcloc !11547
  call void @llvm.dbg.value(metadata i32 undef, metadata !11967, metadata !DIExpression()), !dbg !11971
  %5 = sext i32 %4 to i64, !dbg !11980
  %6 = add i64 %3, %5, !dbg !11986
  ret i64 %6, !dbg !11987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !11988 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !11989
  %2 = trunc i64 %1 to i32, !dbg !11990
  ret i32 %2, !dbg !11991
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !11992 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !11993
  ret i64 %1, !dbg !11994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !11995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11997, metadata !DIExpression()), !dbg !12004
  %2 = icmp eq i32 %0, 0, !dbg !12005
  br i1 %2, label %10, label %3, !dbg !12007

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %4, metadata !11998, metadata !DIExpression()), !dbg !12004
  %5 = mul i32 %0, 84, !dbg !12009
  call void @llvm.dbg.value(metadata i32 %5, metadata !11999, metadata !DIExpression()), !dbg !12004
  br label %6, !dbg !12010

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !12011
  call void @llvm.dbg.value(metadata i32 %7, metadata !12000, metadata !DIExpression()), !dbg !12012
  %8 = sub i32 %7, %4, !dbg !12013
  %9 = icmp ult i32 %8, %5, !dbg !12015
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !12016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !12017 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !12018
  ret i32 %1, !dbg !12019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !12020 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !12022
  ret i32 %1, !dbg !12023
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !12024 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !12028, metadata !DIExpression()), !dbg !12030
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !12031

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !12032
  br label %14, !dbg !12036

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !12029, metadata !DIExpression()), !dbg !12030
  %6 = icmp slt i64 %2, -1, !dbg !12037
  br i1 %6, label %7, label %9, !dbg !12040

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !12041
  br label %14, !dbg !12042

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !12044
  %11 = icmp ugt i64 %2, 1, !dbg !12045
  %12 = select i1 %11, i64 %2, i64 1, !dbg !12045
  %13 = add nsw i64 %10, %12, !dbg !12046
  br label %14, !dbg !12047

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !12048
  ret i64 %15, !dbg !12049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !12050 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.140, i32 0, i32 0)) #24, !dbg !12052
  ret void, !dbg !12053
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!550, !2, !1624, !27, !124, !1626, !1628, !138, !1654, !1692, !167, !1694, !1734, !1736, !1747, !1794, !1796, !1824, !1852, !1895, !1966, !2011, !270, !414, !2039, !449, !459, !484, !559, !669, !841, !2044, !1010, !2046, !1081, !2049, !1088, !1451, !2067, !1472, !2069, !1587, !2072}
!llvm.ident = !{!2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074, !2074}
!llvm.module.flags = !{!2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "heap", scope: !27, file: !107, line: 13, type: !112, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "heap_mem", scope: !27, file: !107, line: 12, type: !108, isLocal: true, isDefinition: true)
!107 = !DIFile(filename: "zephyr/samples/basic/sys_heap/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 2048, elements: !110)
!109 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!110 = !{!111}
!111 = !DISubrange(count: 256)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !114)
!113 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!114 = !{!115, !118, !119}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !112, file: !113, line: 57, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !113, line: 57, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !112, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !112, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !121, line: 214, baseType: !32)
!121 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "_char_out", scope: !124, file: !127, line: 54, type: !128, isLocal: false, isDefinition: true)
!124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !125, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !126, splitDebugInlining: false, nameTableKind: None)
!125 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!126 = !{!122}
!127 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!129 = !DISubroutineType(types: !130)
!130 = !{!103, !103}
!131 = !DIGlobalVariableExpression(var: !132, expr: !DIExpression())
!132 = distinct !DIGlobalVariable(name: "state", scope: !133, file: !134, line: 227, type: !163, isLocal: true, isDefinition: true)
!133 = distinct !DISubprogram(name: "rand32", scope: !134, file: !134, line: 225, type: !135, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !162)
!134 = !DIFile(filename: "zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!135 = !DISubroutineType(types: !136)
!136 = !{!137}
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !148, globals: !161, splitDebugInlining: false, nameTableKind: None)
!139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap-validate.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!140 = !{!30, !141}
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !142, line: 54, baseType: !32, size: 32, elements: !143)
!142 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !{!144, !145, !146, !147}
!144 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!145 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!146 = !DIEnumerator(name: "FREE_PREV", value: 2)
!147 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!148 = !{!102, !103, !149, !150, !137, !153}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !152)
!152 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !156)
!156 = !{!157}
!157 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !155, file: !142, line: 58, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !159)
!159 = !{!160}
!160 = !DISubrange(count: 8)
!161 = !{!131}
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !164)
!164 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "__init_atmel_sam3x_init", scope: !167, file: !232, line: 235, type: !233, isLocal: true, isDefinition: true, align: 32)
!167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !169, globals: !231, splitDebugInlining: false, nameTableKind: None)
!168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/sam3x/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!169 = !{!102, !103, !170, !181}
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "Efc", file: !172, line: 46, baseType: !173)
!172 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/efc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!173 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !172, line: 41, size: 128, elements: !174)
!174 = !{!175, !177, !178, !180}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FMR", scope: !173, file: !172, line: 42, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !137)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FCR", scope: !173, file: !172, line: 43, baseType: !176, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FSR", scope: !173, file: !172, line: 44, baseType: !179, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "EEFC_FRR", scope: !173, file: !172, line: 45, baseType: !179, size: 32, offset: 96)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pmc", file: !183, line: 75, baseType: !184)
!183 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/pmc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !183, line: 41, size: 2176, elements: !185)
!185 = !{!186, !187, !188, !189, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !209, !213, !214, !215, !216, !217, !218, !219, !220, !224, !225, !226, !227, !228, !229, !230}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCER", scope: !184, file: !183, line: 42, baseType: !176, size: 32)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCDR", scope: !184, file: !183, line: 43, baseType: !176, size: 32, offset: 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCSR", scope: !184, file: !183, line: 44, baseType: !179, size: 32, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !184, file: !183, line: 45, baseType: !190, size: 32, offset: 96)
!190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 32, elements: !191)
!191 = !{!192}
!192 = !DISubrange(count: 1)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER0", scope: !184, file: !183, line: 46, baseType: !176, size: 32, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR0", scope: !184, file: !183, line: 47, baseType: !176, size: 32, offset: 160)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR0", scope: !184, file: !183, line: 48, baseType: !179, size: 32, offset: 192)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_UCKR", scope: !184, file: !183, line: 49, baseType: !176, size: 32, offset: 224)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MOR", scope: !184, file: !183, line: 50, baseType: !176, size: 32, offset: 256)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MCFR", scope: !184, file: !183, line: 51, baseType: !179, size: 32, offset: 288)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_PLLAR", scope: !184, file: !183, line: 52, baseType: !176, size: 32, offset: 320)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !184, file: !183, line: 53, baseType: !190, size: 32, offset: 352)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_MCKR", scope: !184, file: !183, line: 54, baseType: !176, size: 32, offset: 384)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !184, file: !183, line: 55, baseType: !190, size: 32, offset: 416)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_USB", scope: !184, file: !183, line: 56, baseType: !176, size: 32, offset: 448)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !184, file: !183, line: 57, baseType: !190, size: 32, offset: 480)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCK", scope: !184, file: !183, line: 58, baseType: !206, size: 96, offset: 512)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 96, elements: !207)
!207 = !{!208}
!208 = !DISubrange(count: 3)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !184, file: !183, line: 59, baseType: !210, size: 160, offset: 608)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 160, elements: !211)
!211 = !{!212}
!212 = !DISubrange(count: 5)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IER", scope: !184, file: !183, line: 60, baseType: !176, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IDR", scope: !184, file: !183, line: 61, baseType: !176, size: 32, offset: 800)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SR", scope: !184, file: !183, line: 62, baseType: !179, size: 32, offset: 832)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IMR", scope: !184, file: !183, line: 63, baseType: !179, size: 32, offset: 864)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSMR", scope: !184, file: !183, line: 64, baseType: !176, size: 32, offset: 896)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSPR", scope: !184, file: !183, line: 65, baseType: !176, size: 32, offset: 928)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FOCR", scope: !184, file: !183, line: 66, baseType: !176, size: 32, offset: 960)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !184, file: !183, line: 67, baseType: !221, size: 832, offset: 992)
!221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 832, elements: !222)
!222 = !{!223}
!223 = !DISubrange(count: 26)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPMR", scope: !184, file: !183, line: 68, baseType: !176, size: 32, offset: 1824)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPSR", scope: !184, file: !183, line: 69, baseType: !179, size: 32, offset: 1856)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !184, file: !183, line: 70, baseType: !210, size: 160, offset: 1888)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER1", scope: !184, file: !183, line: 71, baseType: !176, size: 32, offset: 2048)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR1", scope: !184, file: !183, line: 72, baseType: !176, size: 32, offset: 2080)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR1", scope: !184, file: !183, line: 73, baseType: !179, size: 32, offset: 2112)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCR", scope: !184, file: !183, line: 74, baseType: !176, size: 32, offset: 2144)
!231 = !{!165}
!232 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/sam3x/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !235, line: 51, size: 64, elements: !236)
!235 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !{!237, !267}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !234, file: !235, line: 60, baseType: !238, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = !DISubroutineType(types: !240)
!240 = !{!103, !241}
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !243)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !249, !250, !251, !260, !261}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !243, file: !244, line: 380, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !243, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !243, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !243, file: !244, line: 386, baseType: !252, size: 32, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !254)
!254 = !{!255, !258}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !253, file: !244, line: 359, baseType: !256, size: 8)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !257)
!257 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !253, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!259 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !243, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !243, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !244, line: 43, baseType: !265)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !266)
!266 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !234, file: !235, line: 65, baseType: !241, size: 32, offset: 32)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "static_regions", scope: !270, file: !277, line: 62, type: !410, isLocal: true, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !272, globals: !273, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!272 = !{!120, !103, !137, !102}
!273 = !{!274, !268}
!274 = !DIGlobalVariableExpression(var: !275, expr: !DIExpression())
!275 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !276, file: !277, line: 198, type: !398, isLocal: true, isDefinition: true)
!276 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !277, file: !277, line: 175, type: !278, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !393)
!277 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!278 = !DISubroutineType(types: !279)
!279 = !{null, !280}
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 32)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !283)
!282 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!283 = !{!284, !351, !364, !365, !366, !367, !373, !388}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !281, file: !282, line: 247, baseType: !285, size: 384)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !286)
!286 = !{!287, !315, !323, !324, !325, !336, !337, !338}
!287 = !DIDerivedType(tag: DW_TAG_member, scope: !285, file: !282, line: 60, baseType: !288, size: 64)
!288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !285, file: !282, line: 60, size: 64, elements: !289)
!289 = !{!290, !306}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !288, file: !282, line: 61, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !293)
!292 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !294)
!294 = !{!295, !301}
!295 = !DIDerivedType(tag: DW_TAG_member, scope: !293, file: !292, line: 38, baseType: !296, size: 32)
!296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !293, file: !292, line: 38, size: 32, elements: !297)
!297 = !{!298, !300}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !296, file: !292, line: 39, baseType: !299, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !296, file: !292, line: 40, baseType: !299, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, scope: !293, file: !292, line: 42, baseType: !302, size: 32, offset: 32)
!302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !293, file: !292, line: 42, size: 32, elements: !303)
!303 = !{!304, !305}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !302, file: !292, line: 43, baseType: !299, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !302, file: !292, line: 44, baseType: !299, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !288, file: !282, line: 62, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !309)
!308 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !307, file: !308, line: 50, baseType: !311, size: 64)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !313)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 32)
!313 = !{!314}
!314 = !DISubrange(count: 2)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !285, file: !282, line: 68, baseType: !316, size: 32, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !319)
!318 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !320)
!320 = !{!321}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !319, file: !318, line: 232, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !293)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !285, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !285, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!325 = !DIDerivedType(tag: DW_TAG_member, scope: !285, file: !282, line: 90, baseType: !326, size: 16, offset: 112)
!326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !285, file: !282, line: 90, size: 16, elements: !327)
!327 = !{!328, !335}
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !282, line: 91, baseType: !329, size: 16)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !326, file: !282, line: 91, size: 16, elements: !330)
!330 = !{!331, !334}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !329, file: !282, line: 96, baseType: !332, size: 8)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !333)
!333 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !329, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !326, file: !282, line: 100, baseType: !151, size: 16)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !285, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !285, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !285, file: !282, line: 131, baseType: !339, size: 192, offset: 192)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !340)
!340 = !{!341, !342, !348}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !339, file: !318, line: 245, baseType: !291, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !339, file: !318, line: 246, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!345 = !DISubroutineType(types: !346)
!346 = !{null, !347}
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !339, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !350)
!350 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !281, file: !282, line: 250, baseType: !352, size: 288, offset: 384)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !354)
!353 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!354 = !{!355, !356, !357, !358, !359, !360, !361, !362, !363}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !352, file: !353, line: 26, baseType: !137, size: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !352, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !352, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !352, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !352, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !352, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !352, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !352, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !352, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !281, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !281, file: !282, line: 256, baseType: !317, size: 64, offset: 704)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !281, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !281, file: !282, line: 300, baseType: !368, size: 96, offset: 800)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !369)
!369 = !{!370, !371, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !368, file: !282, line: 153, baseType: !22, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !368, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !368, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !281, file: !282, line: 325, baseType: !374, size: 32, offset: 896)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 32)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !377)
!376 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!377 = !{!378, !384, !385}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !375, file: !376, line: 5074, baseType: !379, size: 96)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !380)
!380 = !{!381, !382, !383}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !379, file: !113, line: 57, baseType: !116, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !379, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !379, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !375, file: !376, line: 5075, baseType: !317, size: 64, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !375, file: !376, line: 5076, baseType: !386, offset: 160)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!387 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !281, file: !282, line: 343, baseType: !389, size: 64, offset: 928)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !390)
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !389, file: !353, line: 63, baseType: !137, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !389, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!393 = !{!394, !395, !396, !397}
!394 = !DILocalVariable(name: "thread", arg: 1, scope: !276, file: !277, line: 175, type: !280)
!395 = !DILocalVariable(name: "region_num", scope: !276, file: !277, line: 200, type: !256)
!396 = !DILocalVariable(name: "guard_start", scope: !276, file: !277, line: 265, type: !22)
!397 = !DILocalVariable(name: "guard_size", scope: !276, file: !277, line: 266, type: !120)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 96, elements: !191)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !400, line: 52, size: 96, elements: !401)
!400 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!401 = !{!402, !403, !404}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !399, file: !400, line: 53, baseType: !22, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !399, file: !400, line: 54, baseType: !120, size: 32, offset: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !399, file: !400, line: 55, baseType: !405, size: 32, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !406, line: 151, baseType: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 149, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !407, file: !406, line: 150, baseType: !137, size: 32)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 96, elements: !191)
!411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !399)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !414, file: !446, line: 39, type: !256, isLocal: true, isDefinition: true)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !416, globals: !445, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!416 = !{!417, !102, !103, !433, !256}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !419, line: 1168, baseType: !420)
!419 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 1155, size: 352, elements: !421)
!421 = !{!422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !420, file: !419, line: 1157, baseType: !179, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !420, file: !419, line: 1158, baseType: !176, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !420, file: !419, line: 1159, baseType: !176, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !420, file: !419, line: 1160, baseType: !176, size: 32, offset: 96)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !420, file: !419, line: 1161, baseType: !176, size: 32, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !420, file: !419, line: 1162, baseType: !176, size: 32, offset: 160)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !420, file: !419, line: 1163, baseType: !176, size: 32, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !420, file: !419, line: 1164, baseType: !176, size: 32, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !420, file: !419, line: 1165, baseType: !176, size: 32, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !420, file: !419, line: 1166, baseType: !176, size: 32, offset: 288)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !420, file: !419, line: 1167, baseType: !176, size: 32, offset: 320)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !435)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !436, line: 27, size: 96, elements: !437)
!436 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!437 = !{!438, !439, !440}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !435, file: !436, line: 29, baseType: !137, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !435, file: !436, line: 31, baseType: !247, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !435, file: !436, line: 37, baseType: !441, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !406, line: 146, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !406, line: 141, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !442, file: !406, line: 143, baseType: !137, size: 32)
!445 = !{!412}
!446 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !449, file: !456, line: 21, type: !128, isLocal: true, isDefinition: true)
!449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !451, globals: !455, splitDebugInlining: false, nameTableKind: None)
!450 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!451 = !{!452, !103, !102}
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 32)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !454, line: 22, baseType: !103)
!454 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !{!447}
!456 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!457 = !DIGlobalVariableExpression(var: !458, expr: !DIExpression())
!458 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !459, file: !464, line: 13, type: !481, isLocal: true, isDefinition: true)
!459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !460, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !461, splitDebugInlining: false, nameTableKind: None)
!460 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!461 = !{!462, !457}
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "mpu_config", scope: !459, file: !464, line: 37, type: !465, isLocal: false, isDefinition: true)
!464 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !466)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !436, line: 41, size: 64, elements: !467)
!467 = !{!468, !469}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !466, file: !436, line: 43, baseType: !137, size: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !466, file: !436, line: 45, baseType: !470, size: 32, offset: 32)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !436, line: 27, size: 96, elements: !473)
!473 = !{!474, !475, !476}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !472, file: !436, line: 29, baseType: !137, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !472, file: !436, line: 31, baseType: !247, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !472, file: !436, line: 37, baseType: !477, size: 32, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !406, line: 146, baseType: !478)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !406, line: 141, size: 32, elements: !479)
!479 = !{!480}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !478, file: !406, line: 143, baseType: !137, size: 32)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 192, elements: !313)
!482 = !DIGlobalVariableExpression(var: !483, expr: !DIExpression())
!483 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !484, file: !541, line: 603, type: !543, isLocal: true, isDefinition: true, align: 32)
!484 = distinct !DICompileUnit(language: DW_LANG_C99, file: !485, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !486, globals: !538, splitDebugInlining: false, nameTableKind: None)
!485 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!486 = !{!102, !103, !487}
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !489)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !490, line: 336, size: 160, elements: !491)
!490 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!491 = !{!492, !512, !516, !520, !533}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !489, file: !490, line: 365, baseType: !493, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DISubroutineType(types: !495)
!495 = !{!103, !496, !511}
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !499)
!499 = !{!500, !501, !502, !503, !509, !510}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !498, file: !244, line: 380, baseType: !247, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !498, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !498, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !498, file: !244, line: 386, baseType: !504, size: 32, offset: 96)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 32)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !506)
!506 = !{!507, !508}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !505, file: !244, line: 359, baseType: !256, size: 8)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !505, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !498, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !498, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !489, file: !490, line: 366, baseType: !513, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 32)
!514 = !DISubroutineType(types: !515)
!515 = !{null, !496, !257}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !489, file: !490, line: 374, baseType: !517, size: 32, offset: 64)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!518 = !DISubroutineType(types: !519)
!519 = !{!103, !496}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !489, file: !490, line: 377, baseType: !521, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 32)
!522 = !DISubroutineType(types: !523)
!523 = !{!103, !496, !524}
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !526)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !490, line: 122, size: 64, elements: !527)
!527 = !{!528, !529, !530, !531, !532}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !526, file: !490, line: 123, baseType: !137, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !526, file: !490, line: 124, baseType: !256, size: 8, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !526, file: !490, line: 125, baseType: !256, size: 8, offset: 40)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !526, file: !490, line: 126, baseType: !256, size: 8, offset: 48)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !526, file: !490, line: 127, baseType: !256, size: 8, offset: 56)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !489, file: !490, line: 379, baseType: !534, size: 32, offset: 128)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 32)
!535 = !DISubroutineType(types: !536)
!536 = !{!103, !496, !537}
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!538 = !{!482, !539}
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !484, file: !541, line: 38, type: !542, isLocal: true, isDefinition: true)
!541 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !496)
!543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !235, line: 51, size: 64, elements: !545)
!545 = !{!546, !547}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !544, file: !235, line: 60, baseType: !517, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !544, file: !235, line: 65, baseType: !496, size: 32, offset: 32)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !550, file: !555, line: 7, type: !556, isLocal: false, isDefinition: true, align: 16)
!550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !552, splitDebugInlining: false, nameTableKind: None)
!551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!552 = !{!548, !553}
!553 = !DIGlobalVariableExpression(var: !554, expr: !DIExpression())
!554 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !550, file: !555, line: 12, type: !556, isLocal: false, isDefinition: true, align: 16)
!555 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 48, elements: !207)
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "wdt_sam_cfg", scope: !559, file: !620, line: 234, type: !655, isLocal: true, isDefinition: true)
!559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !561, globals: !617, splitDebugInlining: false, nameTableKind: None)
!560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/watchdog/wdt_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!561 = !{!562, !137}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_driver_api", file: !565, line: 134, size: 128, elements: !566)
!565 = !DIFile(filename: "zephyr/include/zephyr/drivers/watchdog.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !{!567, !587, !592, !612}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !564, file: !565, line: 135, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_setup", file: !565, line: 113, baseType: !569)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DISubroutineType(types: !571)
!571 = !{!103, !572, !256}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !575)
!575 = !{!576, !577, !578, !579, !585, !586}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !574, file: !244, line: 380, baseType: !247, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !574, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !574, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !574, file: !244, line: 386, baseType: !580, size: 32, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 32)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !581, file: !244, line: 359, baseType: !256, size: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !581, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !574, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !574, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !564, file: !565, line: 136, baseType: !588, size: 32, offset: 32)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_disable", file: !565, line: 119, baseType: !589)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!590 = !DISubroutineType(types: !591)
!591 = !{!103, !572}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "install_timeout", scope: !564, file: !565, line: 137, baseType: !593, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_install_timeout", file: !565, line: 125, baseType: !594)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{!103, !572, !597}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_timeout_cfg", file: !565, line: 88, size: 128, elements: !600)
!600 = !{!601, !606, !611}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !599, file: !565, line: 90, baseType: !602, size: 64)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_window", file: !565, line: 72, size: 64, elements: !603)
!603 = !{!604, !605}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !602, file: !565, line: 74, baseType: !137, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !602, file: !565, line: 76, baseType: !137, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !599, file: !565, line: 92, baseType: !607, size: 32, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_callback_t", file: !565, line: 85, baseType: !608)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 32)
!609 = !DISubroutineType(types: !610)
!610 = !{null, !572, !103}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !599, file: !565, line: 104, baseType: !256, size: 8, offset: 96)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "feed", scope: !564, file: !565, line: 138, baseType: !613, size: 32, offset: 96)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "wdt_api_feed", file: !565, line: 132, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = !DISubroutineType(types: !616)
!616 = !{!103, !572, !103}
!617 = !{!618, !622, !624, !631, !557, !633, !635, !643}
!618 = !DIGlobalVariableExpression(var: !619, expr: !DIExpression())
!619 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_26", scope: !559, file: !620, line: 256, type: !621, isLocal: false, isDefinition: true, align: 16)
!620 = !DIFile(filename: "zephyr/drivers/watchdog/wdt_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 80, elements: !211)
!622 = !DIGlobalVariableExpression(var: !623, expr: !DIExpression())
!623 = distinct !DIGlobalVariable(name: "__device_dts_ord_26", scope: !559, file: !620, line: 256, type: !573, isLocal: false, isDefinition: true, align: 32)
!624 = !DIGlobalVariableExpression(var: !625, expr: !DIExpression())
!625 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_26", scope: !559, file: !620, line: 256, type: !626, isLocal: true, isDefinition: true, align: 32)
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !235, line: 51, size: 64, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !627, file: !235, line: 60, baseType: !589, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !627, file: !235, line: 65, baseType: !572, size: 32, offset: 32)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_26", scope: !559, file: !620, line: 256, type: !581, isLocal: true, isDefinition: true, align: 8)
!633 = !DIGlobalVariableExpression(var: !634, expr: !DIExpression())
!634 = distinct !DIGlobalVariable(name: "wdt_sam_api", scope: !559, file: !620, line: 227, type: !563, isLocal: true, isDefinition: true)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "wdt_sam_data", scope: !559, file: !620, line: 45, type: !637, isLocal: true, isDefinition: true)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_sam_dev_data", file: !620, line: 38, size: 96, elements: !638)
!638 = !{!639, !640, !641, !642}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !637, file: !620, line: 39, baseType: !607, size: 32)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !637, file: !620, line: 40, baseType: !137, size: 32, offset: 32)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_valid", scope: !637, file: !620, line: 41, baseType: !259, size: 8, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !637, file: !620, line: 42, baseType: !259, size: 8, offset: 72)
!643 = !DIGlobalVariableExpression(var: !644, expr: !DIExpression())
!644 = distinct !DIGlobalVariable(name: "__isr_wdt_sam_isr_irq_0", scope: !645, file: !620, line: 240, type: !648, isLocal: true, isDefinition: true, align: 32)
!645 = distinct !DISubprogram(name: "wdt_sam_irq_config", scope: !620, file: !620, line: 238, type: !646, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !162)
!646 = !DISubroutineType(types: !647)
!647 = !{null}
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !649)
!649 = !{!650, !652, !653, !654}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !648, file: !10, line: 55, baseType: !651, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !648, file: !10, line: 57, baseType: !651, size: 32, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !648, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !648, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !656)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wdt_sam_dev_cfg", file: !620, line: 34, size: 32, elements: !657)
!657 = !{!658}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !656, file: !620, line: 35, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "Wdt", file: !661, line: 45, baseType: !662)
!661 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/wdt.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !661, line: 41, size: 96, elements: !663)
!663 = !{!664, !665, !666}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_CR", scope: !662, file: !661, line: 42, baseType: !176, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_MR", scope: !662, file: !661, line: 43, baseType: !176, size: 32, offset: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "WDT_SR", scope: !662, file: !661, line: 44, baseType: !179, size: 32, offset: 64)
!667 = !DIGlobalVariableExpression(var: !668, expr: !DIExpression())
!668 = distinct !DIGlobalVariable(name: "uart0_sam_config", scope: !669, file: !757, line: 494, type: !804, isLocal: true, isDefinition: true)
!669 = distinct !DICompileUnit(language: DW_LANG_C99, file: !670, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !671, retainedTypes: !704, globals: !754, splitDebugInlining: false, nameTableKind: None)
!670 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!671 = !{!672, !679, !685, !692, !697}
!672 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !490, line: 47, baseType: !32, size: 32, elements: !673)
!673 = !{!674, !675, !676, !677, !678}
!674 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!675 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!676 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!677 = !DIEnumerator(name: "UART_BREAK", value: 8)
!678 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!679 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !490, line: 84, baseType: !32, size: 32, elements: !680)
!680 = !{!681, !682, !683, !684}
!681 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!682 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!683 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!684 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!685 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !490, line: 92, baseType: !32, size: 32, elements: !686)
!686 = !{!687, !688, !689, !690, !691}
!687 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!688 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!689 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!690 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!691 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!692 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !490, line: 107, baseType: !32, size: 32, elements: !693)
!693 = !{!694, !695, !696}
!694 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!695 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!696 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!697 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !490, line: 75, baseType: !32, size: 32, elements: !698)
!698 = !{!699, !700, !701, !702, !703}
!699 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!700 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!701 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!702 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!703 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!704 = !{!705, !102, !257, !137}
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !490, line: 336, size: 160, elements: !708)
!708 = !{!709, !728, !732, !736, !749}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !707, file: !490, line: 365, baseType: !710, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DISubroutineType(types: !712)
!712 = !{!103, !713, !511}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !716)
!716 = !{!717, !718, !719, !720, !726, !727}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !715, file: !244, line: 380, baseType: !247, size: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !715, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !715, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !715, file: !244, line: 386, baseType: !721, size: 32, offset: 96)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 32)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !723)
!723 = !{!724, !725}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !722, file: !244, line: 359, baseType: !256, size: 8)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !722, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !715, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !715, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !707, file: !490, line: 366, baseType: !729, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 32)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !713, !257}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !707, file: !490, line: 374, baseType: !733, size: 32, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 32)
!734 = !DISubroutineType(types: !735)
!735 = !{!103, !713}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !707, file: !490, line: 377, baseType: !737, size: 32, offset: 96)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = !DISubroutineType(types: !739)
!739 = !{!103, !713, !740}
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !742)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !490, line: 122, size: 64, elements: !743)
!743 = !{!744, !745, !746, !747, !748}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !742, file: !490, line: 123, baseType: !137, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !742, file: !490, line: 124, baseType: !256, size: 8, offset: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !742, file: !490, line: 125, baseType: !256, size: 8, offset: 40)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !742, file: !490, line: 126, baseType: !256, size: 8, offset: 48)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !742, file: !490, line: 127, baseType: !256, size: 8, offset: 56)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !707, file: !490, line: 379, baseType: !750, size: 32, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!751 = !DISubroutineType(types: !752)
!752 = !{!103, !713, !753}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!754 = !{!755, !761, !763, !770, !772, !774, !667, !779, !798, !801}
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_21", scope: !669, file: !757, line: 494, type: !758, isLocal: false, isDefinition: true, align: 16)
!757 = !DIFile(filename: "zephyr/drivers/serial/uart_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 96, elements: !759)
!759 = !{!760}
!760 = !DISubrange(count: 6)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "__device_dts_ord_21", scope: !669, file: !757, line: 494, type: !714, isLocal: false, isDefinition: true, align: 32)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_21", scope: !669, file: !757, line: 494, type: !765, isLocal: true, isDefinition: true, align: 32)
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !235, line: 51, size: 64, elements: !767)
!767 = !{!768, !769}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !766, file: !235, line: 60, baseType: !733, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !766, file: !235, line: 65, baseType: !713, size: 32, offset: 32)
!770 = !DIGlobalVariableExpression(var: !771, expr: !DIExpression())
!771 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_21", scope: !669, file: !757, line: 494, type: !722, isLocal: true, isDefinition: true, align: 8)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "uart_sam_driver_api", scope: !669, file: !757, line: 419, type: !706, isLocal: true, isDefinition: true)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "uart0_sam_data", scope: !669, file: !757, line: 494, type: !776, isLocal: true, isDefinition: true)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam_dev_data", file: !757, line: 38, size: 32, elements: !777)
!777 = !{!778}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !776, file: !757, line: 39, baseType: !137, size: 32)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_21", scope: !669, file: !757, line: 494, type: !781, isLocal: true, isDefinition: true)
!781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !782)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !783, line: 60, size: 64, elements: !784)
!783 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!784 = !{!785, !797}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !782, file: !783, line: 69, baseType: !786, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !783, line: 50, size: 64, elements: !789)
!789 = !{!790, !795, !796}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !788, file: !783, line: 52, baseType: !791, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !794, line: 32, baseType: !137)
!794 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl/pinctrl_soc_sam_common.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!795 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !788, file: !783, line: 54, baseType: !256, size: 8, offset: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !788, file: !783, line: 56, baseType: !256, size: 8, offset: 40)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !782, file: !783, line: 71, baseType: !256, size: 8, offset: 32)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_21", scope: !669, file: !757, line: 494, type: !800, isLocal: true, isDefinition: true)
!800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !787, size: 64, elements: !191)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_21", scope: !669, file: !757, line: 494, type: !803, isLocal: true, isDefinition: true)
!803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 64, elements: !313)
!804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_sam_dev_cfg", file: !757, line: 27, size: 96, elements: !806)
!806 = !{!807, !836, !837}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !805, file: !757, line: 28, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "Uart", file: !810, line: 62, baseType: !811)
!810 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !810, line: 41, size: 2368, elements: !812)
!812 = !{!813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "UART_CR", scope: !811, file: !810, line: 42, baseType: !176, size: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "UART_MR", scope: !811, file: !810, line: 43, baseType: !176, size: 32, offset: 32)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IER", scope: !811, file: !810, line: 44, baseType: !176, size: 32, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IDR", scope: !811, file: !810, line: 45, baseType: !176, size: 32, offset: 96)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "UART_IMR", scope: !811, file: !810, line: 46, baseType: !179, size: 32, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "UART_SR", scope: !811, file: !810, line: 47, baseType: !179, size: 32, offset: 160)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RHR", scope: !811, file: !810, line: 48, baseType: !179, size: 32, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "UART_THR", scope: !811, file: !810, line: 49, baseType: !176, size: 32, offset: 224)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "UART_BRGR", scope: !811, file: !810, line: 50, baseType: !176, size: 32, offset: 256)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !811, file: !810, line: 51, baseType: !823, size: 1760, offset: 288)
!823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 1760, elements: !824)
!824 = !{!825}
!825 = !DISubrange(count: 55)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RPR", scope: !811, file: !810, line: 52, baseType: !176, size: 32, offset: 2048)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RCR", scope: !811, file: !810, line: 53, baseType: !176, size: 32, offset: 2080)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TPR", scope: !811, file: !810, line: 54, baseType: !176, size: 32, offset: 2112)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TCR", scope: !811, file: !810, line: 55, baseType: !176, size: 32, offset: 2144)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RNPR", scope: !811, file: !810, line: 56, baseType: !176, size: 32, offset: 2176)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "UART_RNCR", scope: !811, file: !810, line: 57, baseType: !176, size: 32, offset: 2208)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TNPR", scope: !811, file: !810, line: 58, baseType: !176, size: 32, offset: 2240)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "UART_TNCR", scope: !811, file: !810, line: 59, baseType: !176, size: 32, offset: 2272)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "UART_PTCR", scope: !811, file: !810, line: 60, baseType: !176, size: 32, offset: 2304)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "UART_PTSR", scope: !811, file: !810, line: 61, baseType: !179, size: 32, offset: 2336)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !805, file: !757, line: 29, baseType: !137, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !805, file: !757, line: 30, baseType: !838, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !841, file: !975, line: 65, type: !176, isLocal: true, isDefinition: true)
!841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !843, retainedTypes: !897, globals: !972, splitDebugInlining: false, nameTableKind: None)
!842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!843 = !{!844}
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !845, line: 57, baseType: !103, size: 32, elements: !846)
!845 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/sam3x8e.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!846 = !{!847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896}
!847 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!848 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!849 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!850 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!851 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!852 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!853 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!854 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!855 = !DIEnumerator(name: "SUPC_IRQn", value: 0)
!856 = !DIEnumerator(name: "RSTC_IRQn", value: 1)
!857 = !DIEnumerator(name: "RTC_IRQn", value: 2)
!858 = !DIEnumerator(name: "RTT_IRQn", value: 3)
!859 = !DIEnumerator(name: "WDT_IRQn", value: 4)
!860 = !DIEnumerator(name: "PMC_IRQn", value: 5)
!861 = !DIEnumerator(name: "EFC0_IRQn", value: 6)
!862 = !DIEnumerator(name: "EFC1_IRQn", value: 7)
!863 = !DIEnumerator(name: "UART_IRQn", value: 8)
!864 = !DIEnumerator(name: "SMC_IRQn", value: 9)
!865 = !DIEnumerator(name: "PIOA_IRQn", value: 11)
!866 = !DIEnumerator(name: "PIOB_IRQn", value: 12)
!867 = !DIEnumerator(name: "PIOC_IRQn", value: 13)
!868 = !DIEnumerator(name: "PIOD_IRQn", value: 14)
!869 = !DIEnumerator(name: "USART0_IRQn", value: 17)
!870 = !DIEnumerator(name: "USART1_IRQn", value: 18)
!871 = !DIEnumerator(name: "USART2_IRQn", value: 19)
!872 = !DIEnumerator(name: "USART3_IRQn", value: 20)
!873 = !DIEnumerator(name: "HSMCI_IRQn", value: 21)
!874 = !DIEnumerator(name: "TWI0_IRQn", value: 22)
!875 = !DIEnumerator(name: "TWI1_IRQn", value: 23)
!876 = !DIEnumerator(name: "SPI0_IRQn", value: 24)
!877 = !DIEnumerator(name: "SSC_IRQn", value: 26)
!878 = !DIEnumerator(name: "TC0_IRQn", value: 27)
!879 = !DIEnumerator(name: "TC1_IRQn", value: 28)
!880 = !DIEnumerator(name: "TC2_IRQn", value: 29)
!881 = !DIEnumerator(name: "TC3_IRQn", value: 30)
!882 = !DIEnumerator(name: "TC4_IRQn", value: 31)
!883 = !DIEnumerator(name: "TC5_IRQn", value: 32)
!884 = !DIEnumerator(name: "TC6_IRQn", value: 33)
!885 = !DIEnumerator(name: "TC7_IRQn", value: 34)
!886 = !DIEnumerator(name: "TC8_IRQn", value: 35)
!887 = !DIEnumerator(name: "PWM_IRQn", value: 36)
!888 = !DIEnumerator(name: "ADC_IRQn", value: 37)
!889 = !DIEnumerator(name: "DACC_IRQn", value: 38)
!890 = !DIEnumerator(name: "DMAC_IRQn", value: 39)
!891 = !DIEnumerator(name: "UOTGHS_IRQn", value: 40)
!892 = !DIEnumerator(name: "TRNG_IRQn", value: 41)
!893 = !DIEnumerator(name: "EMAC_IRQn", value: 42)
!894 = !DIEnumerator(name: "CAN0_IRQn", value: 43)
!895 = !DIEnumerator(name: "CAN1_IRQn", value: 44)
!896 = !DIEnumerator(name: "PERIPH_COUNT_IRQn", value: 45)
!897 = !{!898, !900, !651, !256, !137, !908, !939}
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !899, line: 46, baseType: !349)
!899 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !419, line: 712, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 706, size: 128, elements: !903)
!903 = !{!904, !905, !906, !907}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !902, file: !419, line: 708, baseType: !176, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !902, file: !419, line: 709, baseType: !176, size: 32, offset: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !902, file: !419, line: 710, baseType: !176, size: 32, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !902, file: !419, line: 711, baseType: !179, size: 32, offset: 96)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !419, line: 360, baseType: !910)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 345, size: 28704, elements: !911)
!911 = !{!912, !914, !918, !919, !920, !921, !922, !923, !924, !925, !929, !934, !938}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !910, file: !419, line: 347, baseType: !913, size: 256)
!913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !176, size: 256, elements: !159)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !910, file: !419, line: 348, baseType: !915, size: 768, offset: 256)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 768, elements: !916)
!916 = !{!917}
!917 = !DISubrange(count: 24)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !910, file: !419, line: 349, baseType: !913, size: 256, offset: 1024)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !910, file: !419, line: 350, baseType: !915, size: 768, offset: 1280)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !910, file: !419, line: 351, baseType: !913, size: 256, offset: 2048)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !910, file: !419, line: 352, baseType: !915, size: 768, offset: 2304)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !910, file: !419, line: 353, baseType: !913, size: 256, offset: 3072)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !910, file: !419, line: 354, baseType: !915, size: 768, offset: 3328)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !910, file: !419, line: 355, baseType: !913, size: 256, offset: 4096)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !910, file: !419, line: 356, baseType: !926, size: 1792, offset: 4352)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 1792, elements: !927)
!927 = !{!928}
!928 = !DISubrange(count: 56)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !910, file: !419, line: 357, baseType: !930, size: 1920, offset: 6144)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 1920, elements: !932)
!931 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !256)
!932 = !{!933}
!933 = !DISubrange(count: 240)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !910, file: !419, line: 358, baseType: !935, size: 20608, offset: 8064)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 20608, elements: !936)
!936 = !{!937}
!937 = !DISubrange(count: 644)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !910, file: !419, line: 359, baseType: !176, size: 32, offset: 28672)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !942)
!942 = !{!943, !944, !945, !946, !947, !948, !949, !953, !954, !955, !956, !957, !958, !959, !960, !962, !963, !964, !968, !969, !971}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !941, file: !419, line: 381, baseType: !179, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !941, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !941, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !941, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !941, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !941, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !941, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 96, elements: !951)
!951 = !{!952}
!952 = !DISubrange(count: 12)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !941, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !941, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !941, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !941, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !941, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !941, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !941, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !941, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 64, elements: !313)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !941, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !941, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !941, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 128, elements: !966)
!966 = !{!967}
!967 = !DISubrange(count: 4)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !941, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !941, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 160, elements: !211)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !941, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!972 = !{!973, !999, !1002, !1004, !1006, !839}
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !841, file: !975, line: 285, type: !976, isLocal: true, isDefinition: true, align: 32)
!975 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !235, line: 51, size: 64, elements: !978)
!978 = !{!979, !998}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !977, file: !235, line: 60, baseType: !980, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!103, !983}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !986)
!986 = !{!987, !988, !989, !990, !996, !997}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !985, file: !244, line: 380, baseType: !247, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !985, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !985, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !985, file: !244, line: 386, baseType: !991, size: 32, offset: 96)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !992, file: !244, line: 359, baseType: !256, size: 8)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !992, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !985, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !985, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !977, file: !235, line: 65, baseType: !983, size: 32, offset: 32)
!999 = !DIGlobalVariableExpression(var: !1000, expr: !DIExpression())
!1000 = distinct !DIGlobalVariable(name: "lock", scope: !841, file: !975, line: 34, type: !1001, isLocal: true, isDefinition: true)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!1002 = !DIGlobalVariableExpression(var: !1003, expr: !DIExpression())
!1003 = distinct !DIGlobalVariable(name: "last_load", scope: !841, file: !975, line: 36, type: !137, isLocal: true, isDefinition: true)
!1004 = !DIGlobalVariableExpression(var: !1005, expr: !DIExpression())
!1005 = distinct !DIGlobalVariable(name: "cycle_count", scope: !841, file: !975, line: 48, type: !137, isLocal: true, isDefinition: true)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !841, file: !975, line: 54, type: !137, isLocal: true, isDefinition: true)
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "sam_port_addrs", scope: !1010, file: !1076, line: 21, type: !1077, isLocal: true, isDefinition: true)
!1010 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1011, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1012, globals: !1073, splitDebugInlining: false, nameTableKind: None)
!1011 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1012 = !{!1013}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pio", file: !1015, line: 96, baseType: !1016)
!1015 = !DIFile(filename: "modules/hal/atmel/asf/sam/include/sam3x/component/pio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1015, line: 41, size: 1888, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PER", scope: !1016, file: !1015, line: 42, baseType: !176, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDR", scope: !1016, file: !1015, line: 43, baseType: !176, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PSR", scope: !1016, file: !1015, line: 44, baseType: !179, size: 32, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1016, file: !1015, line: 45, baseType: !190, size: 32, offset: 96)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OER", scope: !1016, file: !1015, line: 46, baseType: !176, size: 32, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODR", scope: !1016, file: !1015, line: 47, baseType: !176, size: 32, offset: 160)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OSR", scope: !1016, file: !1015, line: 48, baseType: !179, size: 32, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1016, file: !1015, line: 49, baseType: !190, size: 32, offset: 224)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFER", scope: !1016, file: !1015, line: 50, baseType: !176, size: 32, offset: 256)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDR", scope: !1016, file: !1015, line: 51, baseType: !176, size: 32, offset: 288)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFSR", scope: !1016, file: !1015, line: 52, baseType: !179, size: 32, offset: 320)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1016, file: !1015, line: 53, baseType: !190, size: 32, offset: 352)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SODR", scope: !1016, file: !1015, line: 54, baseType: !176, size: 32, offset: 384)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_CODR", scope: !1016, file: !1015, line: 55, baseType: !176, size: 32, offset: 416)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODSR", scope: !1016, file: !1015, line: 56, baseType: !176, size: 32, offset: 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDSR", scope: !1016, file: !1015, line: 57, baseType: !179, size: 32, offset: 480)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IER", scope: !1016, file: !1015, line: 58, baseType: !176, size: 32, offset: 512)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IDR", scope: !1016, file: !1015, line: 59, baseType: !176, size: 32, offset: 544)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IMR", scope: !1016, file: !1015, line: 60, baseType: !179, size: 32, offset: 576)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ISR", scope: !1016, file: !1015, line: 61, baseType: !179, size: 32, offset: 608)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDER", scope: !1016, file: !1015, line: 62, baseType: !176, size: 32, offset: 640)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDDR", scope: !1016, file: !1015, line: 63, baseType: !176, size: 32, offset: 672)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDSR", scope: !1016, file: !1015, line: 64, baseType: !179, size: 32, offset: 704)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1016, file: !1015, line: 65, baseType: !190, size: 32, offset: 736)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUDR", scope: !1016, file: !1015, line: 66, baseType: !176, size: 32, offset: 768)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUER", scope: !1016, file: !1015, line: 67, baseType: !176, size: 32, offset: 800)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUSR", scope: !1016, file: !1015, line: 68, baseType: !179, size: 32, offset: 832)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !1016, file: !1015, line: 69, baseType: !190, size: 32, offset: 864)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ABSR", scope: !1016, file: !1015, line: 70, baseType: !176, size: 32, offset: 896)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !1016, file: !1015, line: 71, baseType: !1048, size: 96, offset: 928)
!1048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 96, elements: !207)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCIFSR", scope: !1016, file: !1015, line: 72, baseType: !176, size: 32, offset: 1024)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_DIFSR", scope: !1016, file: !1015, line: 73, baseType: !176, size: 32, offset: 1056)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDGSR", scope: !1016, file: !1015, line: 74, baseType: !179, size: 32, offset: 1088)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCDR", scope: !1016, file: !1015, line: 75, baseType: !176, size: 32, offset: 1120)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !1016, file: !1015, line: 76, baseType: !965, size: 128, offset: 1152)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWER", scope: !1016, file: !1015, line: 77, baseType: !176, size: 32, offset: 1280)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWDR", scope: !1016, file: !1015, line: 78, baseType: !176, size: 32, offset: 1312)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWSR", scope: !1016, file: !1015, line: 79, baseType: !179, size: 32, offset: 1344)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !1016, file: !1015, line: 80, baseType: !190, size: 32, offset: 1376)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMER", scope: !1016, file: !1015, line: 81, baseType: !176, size: 32, offset: 1408)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMDR", scope: !1016, file: !1015, line: 82, baseType: !176, size: 32, offset: 1440)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMMR", scope: !1016, file: !1015, line: 83, baseType: !179, size: 32, offset: 1472)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved9", scope: !1016, file: !1015, line: 84, baseType: !190, size: 32, offset: 1504)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ESR", scope: !1016, file: !1015, line: 85, baseType: !176, size: 32, offset: 1536)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LSR", scope: !1016, file: !1015, line: 86, baseType: !176, size: 32, offset: 1568)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ELSR", scope: !1016, file: !1015, line: 87, baseType: !179, size: 32, offset: 1600)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved10", scope: !1016, file: !1015, line: 88, baseType: !190, size: 32, offset: 1632)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FELLSR", scope: !1016, file: !1015, line: 89, baseType: !176, size: 32, offset: 1664)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_REHLSR", scope: !1016, file: !1015, line: 90, baseType: !176, size: 32, offset: 1696)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FRLHSR", scope: !1016, file: !1015, line: 91, baseType: !179, size: 32, offset: 1728)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved11", scope: !1016, file: !1015, line: 92, baseType: !190, size: 32, offset: 1760)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LOCKSR", scope: !1016, file: !1015, line: 93, baseType: !179, size: 32, offset: 1792)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPMR", scope: !1016, file: !1015, line: 94, baseType: !176, size: 32, offset: 1824)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPSR", scope: !1016, file: !1015, line: 95, baseType: !179, size: 32, offset: 1856)
!1073 = !{!1008, !1074}
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "sam_port_periph_id", scope: !1010, file: !1076, line: 37, type: !1077, isLocal: true, isDefinition: true)
!1076 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_sam.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 160, elements: !211)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1081, file: !1084, line: 23, type: !1085, isLocal: false, isDefinition: true)
!1081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1082, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1083, splitDebugInlining: false, nameTableKind: None)
!1082 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1083 = !{!1079}
!1084 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1088, file: !1092, line: 86, type: !1341, isLocal: false, isDefinition: true, align: 512)
!1088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1089, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1090, retainedTypes: !1099, globals: !1174, splitDebugInlining: false, nameTableKind: None)
!1089 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1090 = !{!1091, !30, !844}
!1091 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1092, line: 63, baseType: !32, size: 32, elements: !1093)
!1092 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1093 = !{!1094, !1095, !1096, !1097, !1098}
!1094 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1095 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1096 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1097 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1098 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1099 = !{!120, !102, !103, !1100, !1131, !137, !1132, !651, !256, !1157}
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1103, line: 51, size: 64, elements: !1104)
!1103 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1104 = !{!1105, !1126}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1102, file: !1103, line: 52, baseType: !1106, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1103, line: 38, baseType: !1107)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!103, !1110, !1125, !151}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !1113)
!1113 = !{!1114, !1115, !1116, !1117, !1123, !1124}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1112, file: !244, line: 380, baseType: !247, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1112, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1112, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1112, file: !244, line: 386, baseType: !1118, size: 32, offset: 96)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1119, file: !244, line: 359, baseType: !256, size: 8)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1119, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1112, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1112, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1102, file: !1103, line: 53, baseType: !1127, size: 32, offset: 32)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1103, line: 47, baseType: !1128)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!103, !1110, !1125, !151, !137}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1134, file: !419, line: 381, baseType: !179, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1134, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1134, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1134, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1134, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1134, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1134, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1134, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1134, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1134, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1134, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1134, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1134, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1134, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1134, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1134, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1134, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1134, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1134, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1134, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1134, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !419, line: 360, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 345, size: 28704, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1159, file: !419, line: 347, baseType: !913, size: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1159, file: !419, line: 348, baseType: !915, size: 768, offset: 256)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1159, file: !419, line: 349, baseType: !913, size: 256, offset: 1024)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1159, file: !419, line: 350, baseType: !915, size: 768, offset: 1280)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1159, file: !419, line: 351, baseType: !913, size: 256, offset: 2048)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1159, file: !419, line: 352, baseType: !915, size: 768, offset: 2304)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1159, file: !419, line: 353, baseType: !913, size: 256, offset: 3072)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1159, file: !419, line: 354, baseType: !915, size: 768, offset: 3328)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1159, file: !419, line: 355, baseType: !913, size: 256, offset: 4096)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1159, file: !419, line: 356, baseType: !926, size: 1792, offset: 4352)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1159, file: !419, line: 357, baseType: !930, size: 1920, offset: 6144)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1159, file: !419, line: 358, baseType: !935, size: 20608, offset: 8064)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1159, file: !419, line: 359, baseType: !176, size: 32, offset: 28672)
!1174 = !{!1175, !1297, !1306, !1308, !1086, !1311, !1313, !1318}
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "_kernel", scope: !1088, file: !1092, line: 40, type: !1177, isLocal: false, isDefinition: true)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !318, line: 158, size: 288, elements: !1178)
!1178 = !{!1179, !1292}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1177, file: !318, line: 159, baseType: !1180, size: 192)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1181, size: 192, elements: !191)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !318, line: 100, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1286, !1287, !1288, !1289}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1181, file: !318, line: 102, baseType: !137, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1181, file: !318, line: 105, baseType: !1131, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1181, file: !318, line: 108, baseType: !1186, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !1188)
!1188 = !{!1189, !1247, !1259, !1260, !1261, !1262, !1268, !1281}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1187, file: !282, line: 247, baseType: !1190, size: 384)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !1191)
!1191 = !{!1192, !1216, !1223, !1224, !1225, !1234, !1235, !1236}
!1192 = !DIDerivedType(tag: DW_TAG_member, scope: !1190, file: !282, line: 60, baseType: !1193, size: 64)
!1193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1190, file: !282, line: 60, size: 64, elements: !1194)
!1194 = !{!1195, !1210}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1193, file: !282, line: 61, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !1198)
!1198 = !{!1199, !1205}
!1199 = !DIDerivedType(tag: DW_TAG_member, scope: !1197, file: !292, line: 38, baseType: !1200, size: 32)
!1200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1197, file: !292, line: 38, size: 32, elements: !1201)
!1201 = !{!1202, !1204}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1200, file: !292, line: 39, baseType: !1203, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1200, file: !292, line: 40, baseType: !1203, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, scope: !1197, file: !292, line: 42, baseType: !1206, size: 32, offset: 32)
!1206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1197, file: !292, line: 42, size: 32, elements: !1207)
!1207 = !{!1208, !1209}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1206, file: !292, line: 43, baseType: !1203, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1206, file: !292, line: 44, baseType: !1203, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1193, file: !282, line: 62, baseType: !1211, size: 64)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1211, file: !308, line: 50, baseType: !1214, size: 64)
!1214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 64, elements: !313)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1190, file: !282, line: 68, baseType: !1217, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !1219)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !1220)
!1220 = !{!1221}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1219, file: !318, line: 232, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !1197)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1190, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1190, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!1225 = !DIDerivedType(tag: DW_TAG_member, scope: !1190, file: !282, line: 90, baseType: !1226, size: 16, offset: 112)
!1226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1190, file: !282, line: 90, size: 16, elements: !1227)
!1227 = !{!1228, !1233}
!1228 = !DIDerivedType(tag: DW_TAG_member, scope: !1226, file: !282, line: 91, baseType: !1229, size: 16)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1226, file: !282, line: 91, size: 16, elements: !1230)
!1230 = !{!1231, !1232}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1229, file: !282, line: 96, baseType: !332, size: 8)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1229, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1226, file: !282, line: 100, baseType: !151, size: 16)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1190, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1190, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1190, file: !282, line: 131, baseType: !1237, size: 192, offset: 192)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !1238)
!1238 = !{!1239, !1240, !1246}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1237, file: !318, line: 245, baseType: !1196, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1237, file: !318, line: 246, baseType: !1241, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !1242)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{null, !1245}
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1237, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1187, file: !282, line: 250, baseType: !1248, size: 288, offset: 384)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1248, file: !353, line: 26, baseType: !137, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1248, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1248, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1248, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1248, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1248, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1248, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1248, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1248, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1187, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1187, file: !282, line: 256, baseType: !1218, size: 64, offset: 704)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1187, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1187, file: !282, line: 300, baseType: !1263, size: 96, offset: 800)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !1264)
!1264 = !{!1265, !1266, !1267}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1263, file: !282, line: 153, baseType: !22, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1263, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1263, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1187, file: !282, line: 325, baseType: !1269, size: 32, offset: 896)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !1271)
!1271 = !{!1272, !1278, !1279}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1270, file: !376, line: 5074, baseType: !1273, size: 96)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1274)
!1274 = !{!1275, !1276, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1273, file: !113, line: 57, baseType: !116, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1273, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1273, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1270, file: !376, line: 5075, baseType: !1218, size: 64, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1270, file: !376, line: 5076, baseType: !1280, offset: 160)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1187, file: !282, line: 343, baseType: !1282, size: 64, offset: 928)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1282, file: !353, line: 63, baseType: !137, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1282, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1181, file: !318, line: 111, baseType: !1186, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1181, file: !318, line: 124, baseType: !103, size: 32, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1181, file: !318, line: 127, baseType: !256, size: 8, offset: 160)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1181, file: !318, line: 153, baseType: !1290, offset: 168)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1291, line: 33, elements: !162)
!1291 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1177, file: !318, line: 170, baseType: !1293, size: 96, offset: 192)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !318, line: 83, size: 96, elements: !1294)
!1294 = !{!1295, !1296}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1293, file: !318, line: 86, baseType: !1186, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1293, file: !318, line: 90, baseType: !1222, size: 64, offset: 32)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1088, file: !1092, line: 43, type: !1299, isLocal: false, isDefinition: true, align: 512)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 8704, elements: !1304)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1301, line: 47, size: 8, elements: !1302)
!1301 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1302 = !{!1303}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1300, file: !1301, line: 48, baseType: !109, size: 8)
!1304 = !{!1305}
!1305 = !DISubrange(count: 1088)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1088, file: !1092, line: 44, type: !1187, isLocal: false, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1088, file: !1092, line: 48, type: !1310, isLocal: false, isDefinition: true)
!1310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1187, size: 1024, elements: !191)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1088, file: !1092, line: 217, type: !259, isLocal: false, isDefinition: true)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1088, file: !1092, line: 50, type: !1315, isLocal: true, isDefinition: true, align: 512)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 2560, elements: !1316)
!1316 = !{!192, !1317}
!1317 = !DISubrange(count: 320)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "levels", scope: !1320, file: !1092, line: 232, type: !1340, isLocal: true, isDefinition: true)
!1320 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1092, file: !1092, line: 230, type: !1321, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !1323)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !1091}
!1323 = !{!1324, !1325, !1335, !1339}
!1324 = !DILocalVariable(name: "level", arg: 1, scope: !1320, file: !1092, line: 230, type: !1091)
!1325 = !DILocalVariable(name: "entry", scope: !1320, file: !1092, line: 244, type: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !235, line: 51, size: 64, elements: !1329)
!1329 = !{!1330, !1334}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1328, file: !235, line: 60, baseType: !1331, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!103, !1110}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1328, file: !235, line: 65, baseType: !1110, size: 32, offset: 32)
!1335 = !DILocalVariable(name: "dev", scope: !1336, file: !1092, line: 247, type: !1110)
!1336 = distinct !DILexicalBlock(scope: !1337, file: !1092, line: 246, column: 64)
!1337 = distinct !DILexicalBlock(scope: !1338, file: !1092, line: 246, column: 2)
!1338 = distinct !DILexicalBlock(scope: !1320, file: !1092, line: 246, column: 2)
!1339 = !DILocalVariable(name: "rc", scope: !1336, file: !1092, line: 248, type: !103)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1326, size: 192, elements: !759)
!1341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 16896, elements: !1342)
!1342 = !{!192, !1343}
!1343 = !DISubrange(count: 2112)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "states_str", scope: !1346, file: !1347, line: 276, type: !1469, isLocal: true, isDefinition: true)
!1346 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1347, file: !1347, line: 271, type: !1348, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !1460)
!1347 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!247, !1350, !1131, !120}
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !282, line: 347, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !1353)
!1353 = !{!1354, !1412, !1424, !1425, !1426, !1427, !1433, !1446}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1352, file: !282, line: 247, baseType: !1355, size: 384)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !1356)
!1356 = !{!1357, !1381, !1388, !1389, !1390, !1399, !1400, !1401}
!1357 = !DIDerivedType(tag: DW_TAG_member, scope: !1355, file: !282, line: 60, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1355, file: !282, line: 60, size: 64, elements: !1359)
!1359 = !{!1360, !1375}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1358, file: !282, line: 61, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !1363)
!1363 = !{!1364, !1370}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !292, line: 38, baseType: !1365, size: 32)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !292, line: 38, size: 32, elements: !1366)
!1366 = !{!1367, !1369}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1365, file: !292, line: 39, baseType: !1368, size: 32)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1365, file: !292, line: 40, baseType: !1368, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !292, line: 42, baseType: !1371, size: 32, offset: 32)
!1371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !292, line: 42, size: 32, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1371, file: !292, line: 43, baseType: !1368, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1371, file: !292, line: 44, baseType: !1368, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1358, file: !282, line: 62, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !1377)
!1377 = !{!1378}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1376, file: !308, line: 50, baseType: !1379, size: 64)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 64, elements: !313)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1355, file: !282, line: 68, baseType: !1382, size: 32, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1384, file: !318, line: 232, baseType: !1387, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !1362)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1355, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1355, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!1390 = !DIDerivedType(tag: DW_TAG_member, scope: !1355, file: !282, line: 90, baseType: !1391, size: 16, offset: 112)
!1391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1355, file: !282, line: 90, size: 16, elements: !1392)
!1392 = !{!1393, !1398}
!1393 = !DIDerivedType(tag: DW_TAG_member, scope: !1391, file: !282, line: 91, baseType: !1394, size: 16)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1391, file: !282, line: 91, size: 16, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1394, file: !282, line: 96, baseType: !332, size: 8)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1394, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1391, file: !282, line: 100, baseType: !151, size: 16)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1355, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1355, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1355, file: !282, line: 131, baseType: !1402, size: 192, offset: 192)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !1403)
!1403 = !{!1404, !1405, !1411}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1402, file: !318, line: 245, baseType: !1361, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1402, file: !318, line: 246, baseType: !1406, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !1407)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{null, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1402, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1352, file: !282, line: 250, baseType: !1413, size: 288, offset: 384)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1413, file: !353, line: 26, baseType: !137, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1413, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1413, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1413, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1413, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1413, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1413, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1413, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1413, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1352, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1352, file: !282, line: 256, baseType: !1383, size: 64, offset: 704)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1352, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1352, file: !282, line: 300, baseType: !1428, size: 96, offset: 800)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1428, file: !282, line: 153, baseType: !22, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1428, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1428, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1352, file: !282, line: 325, baseType: !1434, size: 32, offset: 896)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !1436)
!1436 = !{!1437, !1443, !1444}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1435, file: !376, line: 5074, baseType: !1438, size: 96)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1439)
!1439 = !{!1440, !1441, !1442}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1438, file: !113, line: 57, baseType: !116, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1438, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1438, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1435, file: !376, line: 5075, baseType: !1383, size: 64, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1435, file: !376, line: 5076, baseType: !1445, offset: 160)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1352, file: !282, line: 343, baseType: !1447, size: 64, offset: 928)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !1448)
!1448 = !{!1449, !1450}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1447, file: !353, line: 63, baseType: !137, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1447, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!1451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1453, globals: !1455, splitDebugInlining: false, nameTableKind: None)
!1452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1453 = !{!102, !247, !898, !256, !103, !1454, !24, !120, !1131, !22, !137, !163}
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!1455 = !{!1344, !1456}
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "states_sz", scope: !1346, file: !1347, line: 279, type: !1458, isLocal: true, isDefinition: true)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1459, size: 256, elements: !159)
!1459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!1460 = !{!1461, !1462, !1463, !1464, !1465, !1466, !1467}
!1461 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1346, file: !1347, line: 271, type: !1350)
!1462 = !DILocalVariable(name: "buf", arg: 2, scope: !1346, file: !1347, line: 271, type: !1131)
!1463 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1346, file: !1347, line: 271, type: !120)
!1464 = !DILocalVariable(name: "off", scope: !1346, file: !1347, line: 273, type: !120)
!1465 = !DILocalVariable(name: "bit", scope: !1346, file: !1347, line: 274, type: !256)
!1466 = !DILocalVariable(name: "thread_state", scope: !1346, file: !1347, line: 275, type: !256)
!1467 = !DILocalVariable(name: "index", scope: !1468, file: !1347, line: 293, type: !256)
!1468 = distinct !DILexicalBlock(scope: !1346, file: !1347, line: 293, column: 2)
!1469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !247, size: 256, elements: !159)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !1472, file: !1580, line: 56, type: !1569, isLocal: false, isDefinition: true)
!1472 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1473, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1474, globals: !1577, splitDebugInlining: false, nameTableKind: None)
!1473 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1474 = !{!1475, !1131, !102, !1575, !1125, !898, !651, !103, !137, !163, !1576}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !1477)
!1477 = !{!1478, !1536, !1548, !1549, !1550, !1551, !1557, !1570}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1476, file: !282, line: 247, baseType: !1479, size: 384)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !1480)
!1480 = !{!1481, !1505, !1512, !1513, !1514, !1523, !1524, !1525}
!1481 = !DIDerivedType(tag: DW_TAG_member, scope: !1479, file: !282, line: 60, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1479, file: !282, line: 60, size: 64, elements: !1483)
!1483 = !{!1484, !1499}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1482, file: !282, line: 61, baseType: !1485, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !1486)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !1487)
!1487 = !{!1488, !1494}
!1488 = !DIDerivedType(tag: DW_TAG_member, scope: !1486, file: !292, line: 38, baseType: !1489, size: 32)
!1489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1486, file: !292, line: 38, size: 32, elements: !1490)
!1490 = !{!1491, !1493}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1489, file: !292, line: 39, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1489, file: !292, line: 40, baseType: !1492, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, scope: !1486, file: !292, line: 42, baseType: !1495, size: 32, offset: 32)
!1495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1486, file: !292, line: 42, size: 32, elements: !1496)
!1496 = !{!1497, !1498}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1495, file: !292, line: 43, baseType: !1492, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1495, file: !292, line: 44, baseType: !1492, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1482, file: !282, line: 62, baseType: !1500, size: 64)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !1501)
!1501 = !{!1502}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1500, file: !308, line: 50, baseType: !1503, size: 64)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1504, size: 64, elements: !313)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1479, file: !282, line: 68, baseType: !1506, size: 32, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !1509)
!1509 = !{!1510}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1508, file: !318, line: 232, baseType: !1511, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !1486)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1479, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1479, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!1514 = !DIDerivedType(tag: DW_TAG_member, scope: !1479, file: !282, line: 90, baseType: !1515, size: 16, offset: 112)
!1515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1479, file: !282, line: 90, size: 16, elements: !1516)
!1516 = !{!1517, !1522}
!1517 = !DIDerivedType(tag: DW_TAG_member, scope: !1515, file: !282, line: 91, baseType: !1518, size: 16)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1515, file: !282, line: 91, size: 16, elements: !1519)
!1519 = !{!1520, !1521}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1518, file: !282, line: 96, baseType: !332, size: 8)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1518, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1515, file: !282, line: 100, baseType: !151, size: 16)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1479, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1479, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1479, file: !282, line: 131, baseType: !1526, size: 192, offset: 192)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !1527)
!1527 = !{!1528, !1529, !1535}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1526, file: !318, line: 245, baseType: !1485, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1526, file: !318, line: 246, baseType: !1530, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !1531)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{null, !1534}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1526, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1476, file: !282, line: 250, baseType: !1537, size: 288, offset: 384)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !1538)
!1538 = !{!1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1537, file: !353, line: 26, baseType: !137, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1537, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1537, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1537, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1537, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1537, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1537, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1537, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1537, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1476, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1476, file: !282, line: 256, baseType: !1507, size: 64, offset: 704)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1476, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1476, file: !282, line: 300, baseType: !1552, size: 96, offset: 800)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !1553)
!1553 = !{!1554, !1555, !1556}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1552, file: !282, line: 153, baseType: !22, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1552, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1552, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1476, file: !282, line: 325, baseType: !1558, size: 32, offset: 896)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !1560)
!1560 = !{!1561, !1567, !1568}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1559, file: !376, line: 5074, baseType: !1562, size: 96)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !1563)
!1563 = !{!1564, !1565, !1566}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1562, file: !113, line: 57, baseType: !116, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1562, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1562, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1559, file: !376, line: 5075, baseType: !1507, size: 64, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1559, file: !376, line: 5076, baseType: !1569, offset: 160)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1476, file: !282, line: 343, baseType: !1571, size: 64, offset: 928)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1571, file: !353, line: 63, baseType: !137, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1571, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1577 = !{!1470, !1578, !1581, !1583}
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !1472, file: !1580, line: 404, type: !103, isLocal: true, isDefinition: true)
!1580 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !1472, file: !1580, line: 405, type: !103, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "pending_current", scope: !1472, file: !1580, line: 425, type: !1475, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "curr_tick", scope: !1587, file: !1617, line: 15, type: !163, isLocal: true, isDefinition: true)
!1587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1588, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1589, globals: !1614, splitDebugInlining: false, nameTableKind: None)
!1588 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1589 = !{!898, !102, !651, !137, !163, !103, !1590, !1131, !349}
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 32)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !1592)
!1592 = !{!1593, !1608, !1613}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1591, file: !318, line: 245, baseType: !1594, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !1596)
!1596 = !{!1597, !1603}
!1597 = !DIDerivedType(tag: DW_TAG_member, scope: !1595, file: !292, line: 38, baseType: !1598, size: 32)
!1598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1595, file: !292, line: 38, size: 32, elements: !1599)
!1599 = !{!1600, !1602}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1598, file: !292, line: 39, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1598, file: !292, line: 40, baseType: !1601, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, scope: !1595, file: !292, line: 42, baseType: !1604, size: 32, offset: 32)
!1604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1595, file: !292, line: 42, size: 32, elements: !1605)
!1605 = !{!1606, !1607}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1604, file: !292, line: 43, baseType: !1601, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1604, file: !292, line: 44, baseType: !1601, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1591, file: !318, line: 246, baseType: !1609, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !1610)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{null, !1590}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1591, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!1614 = !{!1585, !1615, !1619, !1621}
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !1587, file: !1617, line: 19, type: !1618, isLocal: true, isDefinition: true)
!1617 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !1587, file: !1617, line: 25, type: !103, isLocal: true, isDefinition: true)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "timeout_list", scope: !1587, file: !1617, line: 17, type: !1623, isLocal: true, isDefinition: true)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !1595)
!1624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1625 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1627, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1627 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1630, splitDebugInlining: false, nameTableKind: None)
!1629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1630 = !{!102, !120, !1125, !24, !1631, !22, !1636, !103, !149, !150}
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !142, line: 58, baseType: !1633)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 58, size: 64, elements: !1634)
!1634 = !{!1635}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !1633, file: !142, line: 58, baseType: !158, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !1638)
!1638 = !{!1639, !1642, !1643, !1644, !1645, !1646, !1647}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !1637, file: !142, line: 69, baseType: !1640, size: 64)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1641, size: 64, elements: !313)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !142, line: 61, baseType: !137)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !1637, file: !142, line: 70, baseType: !1641, size: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !1637, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !1637, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !1637, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !1637, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !1637, file: !142, line: 77, baseType: !1648, offset: 224)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1649, elements: !1652)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !1650)
!1650 = !{!1651}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1649, file: !142, line: 65, baseType: !1641, size: 32)
!1652 = !{!1653}
!1653 = !DISubrange(count: 0)
!1654 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1655, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1656, retainedTypes: !1676, splitDebugInlining: false, nameTableKind: None)
!1655 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1656 = !{!1657, !1665}
!1657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !1658, line: 69, baseType: !32, size: 32, elements: !1659)
!1658 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1659 = !{!1660, !1661, !1662, !1663, !1664}
!1660 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!1661 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!1662 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!1663 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!1664 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!1665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !1658, line: 56, baseType: !32, size: 32, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675}
!1667 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!1668 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!1669 = !DIEnumerator(name: "LENGTH_H", value: 2)
!1670 = !DIEnumerator(name: "LENGTH_L", value: 3)
!1671 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!1672 = !DIEnumerator(name: "LENGTH_J", value: 5)
!1673 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!1674 = !DIEnumerator(name: "LENGTH_T", value: 7)
!1675 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!1676 = !{!103, !1657, !1665, !1677, !333, !266, !1679, !1680, !257, !152, !247, !120, !102, !22, !32, !1682, !1683, !1684, !1685, !1686, !350, !1687, !1678, !1688, !1689, !1690, !1691}
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !1658, line: 31, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !350)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !121, line: 329, baseType: !32)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !1658, line: 32, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !164)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!1685 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !121, line: 145, baseType: !103)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 32)
!1692 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1693, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1693 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1694 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1695, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1696, splitDebugInlining: false, nameTableKind: None)
!1695 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/common/./soc_pmc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1696 = !{!1697}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pmc", file: !183, line: 75, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !183, line: 41, size: 2176, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCER", scope: !1699, file: !183, line: 42, baseType: !176, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCDR", scope: !1699, file: !183, line: 43, baseType: !176, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SCSR", scope: !1699, file: !183, line: 44, baseType: !179, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !1699, file: !183, line: 45, baseType: !190, size: 32, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER0", scope: !1699, file: !183, line: 46, baseType: !176, size: 32, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR0", scope: !1699, file: !183, line: 47, baseType: !176, size: 32, offset: 160)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR0", scope: !1699, file: !183, line: 48, baseType: !179, size: 32, offset: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_UCKR", scope: !1699, file: !183, line: 49, baseType: !176, size: 32, offset: 224)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MOR", scope: !1699, file: !183, line: 50, baseType: !176, size: 32, offset: 256)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_MCFR", scope: !1699, file: !183, line: 51, baseType: !179, size: 32, offset: 288)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "CKGR_PLLAR", scope: !1699, file: !183, line: 52, baseType: !176, size: 32, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !1699, file: !183, line: 53, baseType: !190, size: 32, offset: 352)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_MCKR", scope: !1699, file: !183, line: 54, baseType: !176, size: 32, offset: 384)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !1699, file: !183, line: 55, baseType: !190, size: 32, offset: 416)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_USB", scope: !1699, file: !183, line: 56, baseType: !176, size: 32, offset: 448)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !1699, file: !183, line: 57, baseType: !190, size: 32, offset: 480)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCK", scope: !1699, file: !183, line: 58, baseType: !206, size: 96, offset: 512)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !1699, file: !183, line: 59, baseType: !210, size: 160, offset: 608)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IER", scope: !1699, file: !183, line: 60, baseType: !176, size: 32, offset: 768)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IDR", scope: !1699, file: !183, line: 61, baseType: !176, size: 32, offset: 800)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_SR", scope: !1699, file: !183, line: 62, baseType: !179, size: 32, offset: 832)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_IMR", scope: !1699, file: !183, line: 63, baseType: !179, size: 32, offset: 864)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSMR", scope: !1699, file: !183, line: 64, baseType: !176, size: 32, offset: 896)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FSPR", scope: !1699, file: !183, line: 65, baseType: !176, size: 32, offset: 928)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_FOCR", scope: !1699, file: !183, line: 66, baseType: !176, size: 32, offset: 960)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !1699, file: !183, line: 67, baseType: !221, size: 832, offset: 992)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPMR", scope: !1699, file: !183, line: 68, baseType: !176, size: 32, offset: 1824)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_WPSR", scope: !1699, file: !183, line: 69, baseType: !179, size: 32, offset: 1856)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !1699, file: !183, line: 70, baseType: !210, size: 160, offset: 1888)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCER1", scope: !1699, file: !183, line: 71, baseType: !176, size: 32, offset: 2048)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCDR1", scope: !1699, file: !183, line: 72, baseType: !176, size: 32, offset: 2080)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCSR1", scope: !1699, file: !183, line: 73, baseType: !179, size: 32, offset: 2112)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "PMC_PCR", scope: !1699, file: !183, line: 74, baseType: !176, size: 32, offset: 2144)
!1734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/atmel_sam/common/./soc_gpio.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1738, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1738 = !{!1739, !30}
!1739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !1740, line: 27, baseType: !32, size: 32, elements: !1741)
!1740 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1741 = !{!1742, !1743, !1744, !1745, !1746}
!1742 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!1743 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!1744 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!1745 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!1746 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!1747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1748, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1749, retainedTypes: !1750, splitDebugInlining: false, nameTableKind: None)
!1748 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1749 = !{!844, !1739, !30}
!1750 = !{!1751, !1752, !102, !103, !651, !137, !256, !1769}
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !845, line: 113, baseType: !844)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !419, line: 360, baseType: !1754)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 345, size: 28704, elements: !1755)
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1754, file: !419, line: 347, baseType: !913, size: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1754, file: !419, line: 348, baseType: !915, size: 768, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1754, file: !419, line: 349, baseType: !913, size: 256, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1754, file: !419, line: 350, baseType: !915, size: 768, offset: 1280)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1754, file: !419, line: 351, baseType: !913, size: 256, offset: 2048)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1754, file: !419, line: 352, baseType: !915, size: 768, offset: 2304)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1754, file: !419, line: 353, baseType: !913, size: 256, offset: 3072)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1754, file: !419, line: 354, baseType: !915, size: 768, offset: 3328)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1754, file: !419, line: 355, baseType: !913, size: 256, offset: 4096)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1754, file: !419, line: 356, baseType: !926, size: 1792, offset: 4352)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1754, file: !419, line: 357, baseType: !930, size: 1920, offset: 6144)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1754, file: !419, line: 358, baseType: !935, size: 20608, offset: 8064)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1754, file: !419, line: 359, baseType: !176, size: 32, offset: 28672)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1771, file: !419, line: 381, baseType: !179, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1771, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1771, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1771, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1771, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1771, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1771, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1771, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1771, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1771, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1771, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1771, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1771, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1771, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1771, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1771, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1771, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1771, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1771, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1771, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1771, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!1794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!1795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1798, splitDebugInlining: false, nameTableKind: None)
!1797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1798 = !{!102, !103, !22, !1799}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1801, file: !419, line: 381, baseType: !179, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1801, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1801, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1801, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1801, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1801, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1801, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1801, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1801, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1801, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1801, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1801, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1801, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1801, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1801, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1801, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1801, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1801, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1801, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1801, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1801, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!1824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1826, splitDebugInlining: false, nameTableKind: None)
!1825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1826 = !{!1827, !102, !103}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !1829)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1829, file: !419, line: 381, baseType: !179, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1829, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1829, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1829, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1829, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1829, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1829, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1829, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1829, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1829, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1829, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1829, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1829, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1829, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1829, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1829, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1829, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1829, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1829, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1829, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1829, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!1852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1854, splitDebugInlining: false, nameTableKind: None)
!1853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1854 = !{!1855, !137, !102, !103}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 32)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !1857, line: 98, size: 256, elements: !1858)
!1857 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1858 = !{!1859, !1864, !1869, !1874, !1879, !1884, !1889, !1894}
!1859 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 99, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 99, size: 32, elements: !1861)
!1861 = !{!1862, !1863}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !1860, file: !1857, line: 99, baseType: !137, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1860, file: !1857, line: 99, baseType: !137, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 100, baseType: !1865, size: 32, offset: 32)
!1865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 100, size: 32, elements: !1866)
!1866 = !{!1867, !1868}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !1865, file: !1857, line: 100, baseType: !137, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1865, file: !1857, line: 100, baseType: !137, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 101, baseType: !1870, size: 32, offset: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 101, size: 32, elements: !1871)
!1871 = !{!1872, !1873}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !1870, file: !1857, line: 101, baseType: !137, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1870, file: !1857, line: 101, baseType: !137, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 102, baseType: !1875, size: 32, offset: 96)
!1875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 102, size: 32, elements: !1876)
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !1875, file: !1857, line: 102, baseType: !137, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1875, file: !1857, line: 102, baseType: !137, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 103, baseType: !1880, size: 32, offset: 128)
!1880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 103, size: 32, elements: !1881)
!1881 = !{!1882, !1883}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1880, file: !1857, line: 103, baseType: !137, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1880, file: !1857, line: 103, baseType: !137, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 104, baseType: !1885, size: 32, offset: 160)
!1885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 104, size: 32, elements: !1886)
!1886 = !{!1887, !1888}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !1885, file: !1857, line: 104, baseType: !137, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1885, file: !1857, line: 104, baseType: !137, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1857, line: 105, baseType: !1890, size: 32, offset: 192)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1857, line: 105, size: 32, elements: !1891)
!1891 = !{!1892, !1893}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1890, file: !1857, line: 105, baseType: !137, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1890, file: !1857, line: 105, baseType: !137, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !1856, file: !1857, line: 106, baseType: !137, size: 32, offset: 224)
!1895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1738, retainedTypes: !1897, splitDebugInlining: false, nameTableKind: None)
!1896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1897 = !{!1898, !102, !103, !1923, !150, !137}
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1900, file: !419, line: 381, baseType: !179, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1900, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1900, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1900, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1900, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1900, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1900, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1900, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1900, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1900, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1900, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1900, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1900, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1900, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1900, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1900, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1900, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1900, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1900, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1900, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1900, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !1857, line: 141, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !1857, line: 97, size: 256, elements: !1926)
!1926 = !{!1927}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !1925, file: !1857, line: 107, baseType: !1928, size: 256)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !1857, line: 98, size: 256, elements: !1929)
!1929 = !{!1930, !1935, !1940, !1945, !1950, !1955, !1960, !1965}
!1930 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 99, baseType: !1931, size: 32)
!1931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 99, size: 32, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !1931, file: !1857, line: 99, baseType: !137, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1931, file: !1857, line: 99, baseType: !137, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 100, baseType: !1936, size: 32, offset: 32)
!1936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 100, size: 32, elements: !1937)
!1937 = !{!1938, !1939}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !1936, file: !1857, line: 100, baseType: !137, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1936, file: !1857, line: 100, baseType: !137, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 101, baseType: !1941, size: 32, offset: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 101, size: 32, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !1941, file: !1857, line: 101, baseType: !137, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1941, file: !1857, line: 101, baseType: !137, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 102, baseType: !1946, size: 32, offset: 96)
!1946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 102, size: 32, elements: !1947)
!1947 = !{!1948, !1949}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !1946, file: !1857, line: 102, baseType: !137, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1946, file: !1857, line: 102, baseType: !137, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 103, baseType: !1951, size: 32, offset: 128)
!1951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 103, size: 32, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1951, file: !1857, line: 103, baseType: !137, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1951, file: !1857, line: 103, baseType: !137, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 104, baseType: !1956, size: 32, offset: 160)
!1956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 104, size: 32, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !1956, file: !1857, line: 104, baseType: !137, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1956, file: !1857, line: 104, baseType: !137, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !1857, line: 105, baseType: !1961, size: 32, offset: 192)
!1961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !1857, line: 105, size: 32, elements: !1962)
!1962 = !{!1963, !1964}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1961, file: !1857, line: 105, baseType: !137, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1961, file: !1857, line: 105, baseType: !137, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !1928, file: !1857, line: 106, baseType: !137, size: 32, offset: 224)
!1966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !843, retainedTypes: !1968, splitDebugInlining: false, nameTableKind: None)
!1967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!1968 = !{!1751, !651, !256, !137, !1969, !1986}
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !419, line: 360, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 345, size: 28704, elements: !1972)
!1972 = !{!1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1971, file: !419, line: 347, baseType: !913, size: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1971, file: !419, line: 348, baseType: !915, size: 768, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1971, file: !419, line: 349, baseType: !913, size: 256, offset: 1024)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1971, file: !419, line: 350, baseType: !915, size: 768, offset: 1280)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1971, file: !419, line: 351, baseType: !913, size: 256, offset: 2048)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1971, file: !419, line: 352, baseType: !915, size: 768, offset: 2304)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1971, file: !419, line: 353, baseType: !913, size: 256, offset: 3072)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1971, file: !419, line: 354, baseType: !915, size: 768, offset: 3328)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1971, file: !419, line: 355, baseType: !913, size: 256, offset: 4096)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1971, file: !419, line: 356, baseType: !926, size: 1792, offset: 4352)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1971, file: !419, line: 357, baseType: !930, size: 1920, offset: 6144)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1971, file: !419, line: 358, baseType: !935, size: 20608, offset: 8064)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1971, file: !419, line: 359, baseType: !176, size: 32, offset: 28672)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1988, file: !419, line: 381, baseType: !179, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1988, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1988, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1988, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1988, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1988, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1988, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1988, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1988, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1988, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1988, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1988, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1988, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1988, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1988, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1988, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1988, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1988, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1988, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1988, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1988, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!2011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2013, splitDebugInlining: false, nameTableKind: None)
!2012 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2013 = !{!2014, !102, !103}
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !419, line: 402, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 379, size: 1120, elements: !2017)
!2017 = !{!2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2016, file: !419, line: 381, baseType: !179, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2016, file: !419, line: 382, baseType: !176, size: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2016, file: !419, line: 383, baseType: !176, size: 32, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2016, file: !419, line: 384, baseType: !176, size: 32, offset: 96)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2016, file: !419, line: 385, baseType: !176, size: 32, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2016, file: !419, line: 386, baseType: !176, size: 32, offset: 160)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2016, file: !419, line: 387, baseType: !950, size: 96, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2016, file: !419, line: 388, baseType: !176, size: 32, offset: 288)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2016, file: !419, line: 389, baseType: !176, size: 32, offset: 320)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2016, file: !419, line: 390, baseType: !176, size: 32, offset: 352)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2016, file: !419, line: 391, baseType: !176, size: 32, offset: 384)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2016, file: !419, line: 392, baseType: !176, size: 32, offset: 416)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2016, file: !419, line: 393, baseType: !176, size: 32, offset: 448)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2016, file: !419, line: 394, baseType: !176, size: 32, offset: 480)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2016, file: !419, line: 395, baseType: !961, size: 64, offset: 512)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2016, file: !419, line: 396, baseType: !179, size: 32, offset: 576)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2016, file: !419, line: 397, baseType: !179, size: 32, offset: 608)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2016, file: !419, line: 398, baseType: !965, size: 128, offset: 640)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2016, file: !419, line: 399, baseType: !210, size: 160, offset: 768)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2016, file: !419, line: 400, baseType: !970, size: 160, offset: 928)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2016, file: !419, line: 401, baseType: !176, size: 32, offset: 1088)
!2039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2040, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2041, splitDebugInlining: false, nameTableKind: None)
!2040 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2041 = !{!109, !1131, !120, !511, !2042, !257, !102}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !257)
!2044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2048, splitDebugInlining: false, nameTableKind: None)
!2047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2048 = !{!102, !120}
!2049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2051, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2051 = !{!2052, !2059, !30}
!2052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2053, line: 14, baseType: !32, size: 32, elements: !2054)
!2053 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2054 = !{!2055, !2056, !2057, !2058}
!2055 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2056 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2057 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2058 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2053, line: 42, baseType: !32, size: 32, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066}
!2061 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2062 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2063 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2064 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2065 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2066 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2071, splitDebugInlining: false, nameTableKind: None)
!2070 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2071 = !{!22, !102, !103}
!2072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2074 = !{!"Ubuntu clang version 14.0.6"}
!2075 = !{i32 7, !"Dwarf Version", i32 4}
!2076 = !{i32 2, !"Debug Info Version", i32 3}
!2077 = !{i32 1, !"wchar_size", i32 4}
!2078 = !{i32 1, !"min_enum_size", i32 4}
!2079 = !{i32 1, !"branch-target-enforcement", i32 0}
!2080 = !{i32 1, !"sign-return-address", i32 0}
!2081 = !{i32 1, !"sign-return-address-all", i32 0}
!2082 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2083 = !{i32 7, !"frame-pointer", i32 2}
!2084 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2085, file: !2085, line: 26, type: !646, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !162)
!2085 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2086 = !DILocation(line: 28, column: 1, scope: !2084)
!2087 = !{i64 2151351015, i64 2151351035, i64 2151351098}
!2088 = !DILocation(line: 29, column: 1, scope: !2084)
!2089 = !{i64 2151351430, i64 2151351450, i64 2151351513}
!2090 = !DILocation(line: 30, column: 1, scope: !2084)
!2091 = !{i64 2151351849, i64 2151351869, i64 2151351932}
!2092 = !DILocation(line: 31, column: 1, scope: !2084)
!2093 = !{i64 2151352268, i64 2151352288, i64 2151352351}
!2094 = !DILocation(line: 33, column: 1, scope: !2084)
!2095 = !{i64 2151352560, i64 2151352580, i64 2151352643}
!2096 = !DILocation(line: 35, column: 1, scope: !2084)
!2097 = !{i64 2151352885, i64 2151352905, i64 2151352968}
!2098 = !DILocation(line: 50, column: 1, scope: !2084)
!2099 = !{i64 2151357373, i64 2151357393, i64 2151357456}
!2100 = !DILocation(line: 54, column: 1, scope: !2084)
!2101 = !{i64 2151357812, i64 2151357832, i64 2151357895}
!2102 = !DILocation(line: 61, column: 1, scope: !2084)
!2103 = !{i64 2151358129, i64 2151358149, i64 2151358212}
!2104 = !DILocation(line: 63, column: 1, scope: !2084)
!2105 = !{i64 2151358509, i64 2151358529, i64 2151358592}
!2106 = !DILocation(line: 64, column: 1, scope: !2084)
!2107 = !{i64 2151359031, i64 2151359051, i64 2151359114}
!2108 = !DILocation(line: 65, column: 1, scope: !2084)
!2109 = !{i64 2151359529, i64 2151359549, i64 2151359612}
!2110 = !DILocation(line: 66, column: 1, scope: !2084)
!2111 = !{i64 2151360011, i64 2151360031, i64 2151360094}
!2112 = !DILocation(line: 67, column: 1, scope: !2084)
!2113 = !{i64 2151360518, i64 2151360538, i64 2151360601}
!2114 = !DILocation(line: 68, column: 1, scope: !2084)
!2115 = !{i64 2151361006, i64 2151361026, i64 2151361089}
!2116 = !DILocation(line: 70, column: 1, scope: !2084)
!2117 = !{i64 2151361474, i64 2151361494, i64 2151361557}
!2118 = !DILocation(line: 71, column: 1, scope: !2084)
!2119 = !{i64 2151361916, i64 2151361936, i64 2151361999}
!2120 = !DILocation(line: 72, column: 1, scope: !2084)
!2121 = !{i64 2151362374, i64 2151362394, i64 2151362457}
!2122 = !DILocation(line: 79, column: 1, scope: !2084)
!2123 = !{i64 2151362828, i64 2151362848, i64 2151362911}
!2124 = !DILocation(line: 80, column: 1, scope: !2084)
!2125 = !{i64 2151363339, i64 2151363359, i64 2151363422}
!2126 = !DILocation(line: 82, column: 1, scope: !2084)
!2127 = !{i64 2151363830, i64 2151363850, i64 2151363913}
!2128 = !DILocation(line: 97, column: 1, scope: !2084)
!2129 = !{i64 2151364167, i64 2151364187, i64 2151364250}
!2130 = !DILocation(line: 99, column: 1, scope: !2084)
!2131 = !{i64 2151364385, i64 2151364405, i64 2151364468}
!2132 = !DILocation(line: 102, column: 1, scope: !2084)
!2133 = !{i64 2151364642, i64 2151364662, i64 2151364725}
!2134 = !DILocation(line: 105, column: 1, scope: !2084)
!2135 = !{i64 2151364882, i64 2151364902, i64 2151364965}
!2136 = !DILocation(line: 115, column: 1, scope: !2084)
!2137 = !{i64 2151365221, i64 2151365241, i64 2151365304}
!2138 = !DILocation(line: 118, column: 1, scope: !2084)
!2139 = !{i64 2151365565, i64 2151365585, i64 2151365648}
!2140 = !DILocation(line: 32, column: 1, scope: !2141)
!2141 = !DILexicalBlockFile(scope: !2084, file: !2142, discriminator: 0)
!2142 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2143 = !{i64 2151365921, i64 2151365941, i64 2151366004}
!2144 = !DILocation(line: 33, column: 1, scope: !2141)
!2145 = !{i64 2151366433, i64 2151366453, i64 2151366516}
!2146 = !DILocation(line: 53, column: 1, scope: !2141)
!2147 = !{i64 2151371002, i64 2151371022, i64 2151371085}
!2148 = !DILocation(line: 54, column: 1, scope: !2141)
!2149 = !{i64 2151371420, i64 2151371440, i64 2151371503}
!2150 = !DILocation(line: 55, column: 1, scope: !2141)
!2151 = !{i64 2151371838, i64 2151371858, i64 2151371921}
!2152 = !DILocation(line: 56, column: 1, scope: !2141)
!2153 = !{i64 2151372256, i64 2151372276, i64 2151372339}
!2154 = !DILocation(line: 57, column: 1, scope: !2141)
!2155 = !{i64 2151372674, i64 2151372694, i64 2151372757}
!2156 = !DILocation(line: 58, column: 1, scope: !2141)
!2157 = !{i64 2151373092, i64 2151373112, i64 2151373175}
!2158 = !DILocation(line: 59, column: 1, scope: !2141)
!2159 = !{i64 2151373510, i64 2151373530, i64 2151373593}
!2160 = !DILocation(line: 60, column: 1, scope: !2141)
!2161 = !{i64 2151373934, i64 2151373954, i64 2151374017}
!2162 = !DILocation(line: 61, column: 1, scope: !2141)
!2163 = !{i64 2151374251, i64 2151374271, i64 2151374334}
!2164 = !DILocation(line: 70, column: 1, scope: !2141)
!2165 = !{i64 2151374480, i64 2151374500, i64 2151374563}
!2166 = !DILocation(line: 72, column: 1, scope: !2141)
!2167 = !{i64 2151374812, i64 2151374832, i64 2151374895}
!2168 = !DILocation(line: 73, column: 1, scope: !2141)
!2169 = !{i64 2151375262, i64 2151375282, i64 2151375345}
!2170 = !DILocation(line: 74, column: 1, scope: !2141)
!2171 = !{i64 2151375712, i64 2151375732, i64 2151375795}
!2172 = !DILocation(line: 75, column: 1, scope: !2141)
!2173 = !{i64 2151376162, i64 2151376182, i64 2151376245}
!2174 = !DILocation(line: 76, column: 1, scope: !2141)
!2175 = !{i64 2151376612, i64 2151376632, i64 2151376695}
!2176 = !DILocation(line: 77, column: 1, scope: !2141)
!2177 = !{i64 2151377062, i64 2151377082, i64 2151377145}
!2178 = !DILocation(line: 78, column: 1, scope: !2141)
!2179 = !{i64 2151377512, i64 2151377532, i64 2151377595}
!2180 = !DILocation(line: 79, column: 1, scope: !2141)
!2181 = !{i64 2151377962, i64 2151377982, i64 2151378045}
!2182 = !DILocation(line: 80, column: 1, scope: !2141)
!2183 = !{i64 2151378415, i64 2151378435, i64 2151378498}
!2184 = !DILocation(line: 84, column: 1, scope: !2141)
!2185 = !{i64 2151378747, i64 2151378767, i64 2151378830}
!2186 = !DILocation(line: 91, column: 1, scope: !2141)
!2187 = !{i64 2151379144, i64 2151379164, i64 2151379227}
!2188 = !DILocation(line: 93, column: 1, scope: !2141)
!2189 = !{i64 2151379511, i64 2151379531, i64 2151379594}
!2190 = !DILocation(line: 106, column: 1, scope: !2141)
!2191 = !{i64 2151379781, i64 2151379801, i64 2151379864}
!2192 = !DILocation(line: 11, column: 1, scope: !2193)
!2193 = !DILexicalBlockFile(scope: !2084, file: !2194, discriminator: 0)
!2194 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2195 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 17, type: !646, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2196)
!2196 = !{!2197}
!2197 = !DILocalVariable(name: "p", scope: !2195, file: !107, line: 19, type: !102)
!2198 = !DILocation(line: 21, column: 2, scope: !2195)
!2199 = !DILocation(line: 23, column: 2, scope: !2195)
!2200 = !DILocation(line: 24, column: 2, scope: !2195)
!2201 = !DILocation(line: 26, column: 6, scope: !2195)
!2202 = !DILocation(line: 0, scope: !2195)
!2203 = !DILocation(line: 27, column: 2, scope: !2195)
!2204 = !DILocation(line: 29, column: 6, scope: !2195)
!2205 = !DILocation(line: 30, column: 2, scope: !2195)
!2206 = !DILocation(line: 32, column: 2, scope: !2195)
!2207 = !DILocation(line: 33, column: 2, scope: !2195)
!2208 = !DILocation(line: 34, column: 1, scope: !2195)
!2209 = distinct !DISubprogram(name: "print_sys_memory_stats", scope: !107, file: !107, line: 36, type: !646, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2210)
!2210 = !{!2211}
!2211 = !DILocalVariable(name: "stats", scope: !2209, file: !107, line: 38, type: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2213, line: 24, size: 96, elements: !2214)
!2213 = !DIFile(filename: "zephyr/include/zephyr/sys/mem_stats.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2214 = !{!2215, !2216, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !2212, file: !2213, line: 25, baseType: !120, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !2212, file: !2213, line: 26, baseType: !120, size: 32, offset: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !2212, file: !2213, line: 27, baseType: !120, size: 32, offset: 64)
!2218 = !DILocation(line: 38, column: 2, scope: !2209)
!2219 = !DILocation(line: 38, column: 26, scope: !2209)
!2220 = !DILocation(line: 40, column: 2, scope: !2209)
!2221 = !DILocation(line: 43, column: 9, scope: !2209)
!2222 = !DILocation(line: 43, column: 32, scope: !2209)
!2223 = !DILocation(line: 44, column: 9, scope: !2209)
!2224 = !DILocation(line: 42, column: 2, scope: !2209)
!2225 = !DILocation(line: 45, column: 1, scope: !2209)
!2226 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !127, file: !127, line: 45, type: !129, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2227)
!2227 = !{!2228}
!2228 = !DILocalVariable(name: "c", arg: 1, scope: !2226, file: !127, line: 45, type: !103)
!2229 = !DILocation(line: 0, scope: !2226)
!2230 = !DILocation(line: 50, column: 2, scope: !2226)
!2231 = distinct !DISubprogram(name: "__printk_hook_install", scope: !127, file: !127, line: 63, type: !2232, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2234)
!2232 = !DISubroutineType(types: !2233)
!2233 = !{null, !128}
!2234 = !{!2235}
!2235 = !DILocalVariable(name: "fn", arg: 1, scope: !2231, file: !127, line: 63, type: !128)
!2236 = !DILocation(line: 0, scope: !2231)
!2237 = !DILocation(line: 65, column: 12, scope: !2231)
!2238 = !DILocation(line: 66, column: 1, scope: !2231)
!2239 = distinct !DISubprogram(name: "__printk_get_hook", scope: !127, file: !127, line: 76, type: !2240, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !162)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!102}
!2242 = !DILocation(line: 78, column: 9, scope: !2239)
!2243 = !DILocation(line: 78, column: 2, scope: !2239)
!2244 = distinct !DISubprogram(name: "vprintk", scope: !127, file: !127, line: 113, type: !2245, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2254)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !247, !2247}
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2248, line: 99, baseType: !2249)
!2248 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2248, line: 40, baseType: !2250)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !127, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2252)
!2252 = !{!2253}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2251, file: !127, line: 79, baseType: !102, size: 32)
!2254 = !{!2255, !2256, !2257}
!2255 = !DILocalVariable(name: "fmt", arg: 1, scope: !2244, file: !127, line: 113, type: !247)
!2256 = !DILocalVariable(name: "ap", arg: 2, scope: !2244, file: !127, line: 113, type: !2247)
!2257 = !DILocalVariable(name: "ctx", scope: !2258, file: !127, line: 121, type: !2260)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !127, line: 120, column: 27)
!2259 = distinct !DILexicalBlock(scope: !2244, file: !127, line: 120, column: 6)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !127, line: 81, size: 32, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2260, file: !127, line: 85, baseType: !32, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2260, file: !127, line: 86, baseType: !2264, offset: 32)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, elements: !1652)
!2265 = !DILocation(line: 0, scope: !2244)
!2266 = !DILocation(line: 148, column: 3, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2259, file: !127, line: 138, column: 9)
!2268 = !DILocation(line: 155, column: 1, scope: !2244)
!2269 = distinct !DISubprogram(name: "char_out", scope: !127, file: !127, line: 107, type: !2270, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2272)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!103, !103, !102}
!2272 = !{!2273, !2274}
!2273 = !DILocalVariable(name: "c", arg: 1, scope: !2269, file: !127, line: 107, type: !103)
!2274 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2269, file: !127, line: 107, type: !102)
!2275 = !DILocation(line: 0, scope: !2269)
!2276 = !DILocation(line: 110, column: 9, scope: !2269)
!2277 = !DILocation(line: 110, column: 2, scope: !2269)
!2278 = distinct !DISubprogram(name: "cbvprintf", scope: !2279, file: !2279, line: 739, type: !2280, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2286)
!2279 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!103, !2282, !102, !247, !2247}
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2279, line: 297, baseType: !2283)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 32)
!2284 = !DISubroutineType(types: !2285)
!2285 = !{!103, null}
!2286 = !{!2287, !2288, !2289, !2290}
!2287 = !DILocalVariable(name: "out", arg: 1, scope: !2278, file: !2279, line: 739, type: !2282)
!2288 = !DILocalVariable(name: "ctx", arg: 2, scope: !2278, file: !2279, line: 739, type: !102)
!2289 = !DILocalVariable(name: "format", arg: 3, scope: !2278, file: !2279, line: 739, type: !247)
!2290 = !DILocalVariable(name: "ap", arg: 4, scope: !2278, file: !2279, line: 739, type: !2247)
!2291 = !DILocation(line: 0, scope: !2278)
!2292 = !DILocation(line: 741, column: 9, scope: !2278)
!2293 = !DILocation(line: 741, column: 2, scope: !2278)
!2294 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !127, file: !127, line: 157, type: !2295, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2297)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{null, !1131, !120}
!2297 = !{!2298, !2299, !2300}
!2298 = !DILocalVariable(name: "c", arg: 1, scope: !2294, file: !127, line: 157, type: !1131)
!2299 = !DILocalVariable(name: "n", arg: 2, scope: !2294, file: !127, line: 157, type: !120)
!2300 = !DILocalVariable(name: "i", scope: !2294, file: !127, line: 159, type: !120)
!2301 = !DILocation(line: 0, scope: !2294)
!2302 = !DILocation(line: 164, column: 16, scope: !2303)
!2303 = distinct !DILexicalBlock(scope: !2304, file: !127, line: 164, column: 2)
!2304 = distinct !DILexicalBlock(scope: !2294, file: !127, line: 164, column: 2)
!2305 = !DILocation(line: 164, column: 2, scope: !2304)
!2306 = !DILocation(line: 165, column: 3, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2303, file: !127, line: 164, column: 26)
!2308 = !DILocation(line: 165, column: 13, scope: !2307)
!2309 = !DILocation(line: 164, column: 22, scope: !2303)
!2310 = distinct !{!2310, !2305, !2311}
!2311 = !DILocation(line: 166, column: 2, scope: !2304)
!2312 = !DILocation(line: 171, column: 1, scope: !2294)
!2313 = distinct !DISubprogram(name: "printk", scope: !127, file: !127, line: 203, type: !2314, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2316)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{null, !247, null}
!2316 = !{!2317, !2318}
!2317 = !DILocalVariable(name: "fmt", arg: 1, scope: !2313, file: !127, line: 203, type: !247)
!2318 = !DILocalVariable(name: "ap", scope: !2313, file: !127, line: 205, type: !2247)
!2319 = !DILocation(line: 0, scope: !2313)
!2320 = !DILocation(line: 205, column: 2, scope: !2313)
!2321 = !DILocation(line: 205, column: 10, scope: !2313)
!2322 = !DILocation(line: 207, column: 2, scope: !2313)
!2323 = !DILocation(line: 209, column: 2, scope: !2313)
!2324 = !DILocation(line: 211, column: 2, scope: !2313)
!2325 = !DILocation(line: 212, column: 1, scope: !2313)
!2326 = distinct !DISubprogram(name: "snprintk", scope: !127, file: !127, line: 239, type: !2327, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2329)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!103, !1131, !120, !247, null}
!2329 = !{!2330, !2331, !2332, !2333, !2334}
!2330 = !DILocalVariable(name: "str", arg: 1, scope: !2326, file: !127, line: 239, type: !1131)
!2331 = !DILocalVariable(name: "size", arg: 2, scope: !2326, file: !127, line: 239, type: !120)
!2332 = !DILocalVariable(name: "fmt", arg: 3, scope: !2326, file: !127, line: 239, type: !247)
!2333 = !DILocalVariable(name: "ap", scope: !2326, file: !127, line: 241, type: !2247)
!2334 = !DILocalVariable(name: "ret", scope: !2326, file: !127, line: 242, type: !103)
!2335 = !DILocation(line: 0, scope: !2326)
!2336 = !DILocation(line: 241, column: 2, scope: !2326)
!2337 = !DILocation(line: 241, column: 10, scope: !2326)
!2338 = !DILocation(line: 244, column: 2, scope: !2326)
!2339 = !DILocation(line: 245, column: 8, scope: !2326)
!2340 = !DILocation(line: 246, column: 2, scope: !2326)
!2341 = !DILocation(line: 249, column: 1, scope: !2326)
!2342 = !DILocation(line: 248, column: 2, scope: !2326)
!2343 = distinct !DISubprogram(name: "vsnprintk", scope: !127, file: !127, line: 251, type: !2344, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2346)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!103, !1131, !120, !247, !2247}
!2346 = !{!2347, !2348, !2349, !2350, !2351}
!2347 = !DILocalVariable(name: "str", arg: 1, scope: !2343, file: !127, line: 251, type: !1131)
!2348 = !DILocalVariable(name: "size", arg: 2, scope: !2343, file: !127, line: 251, type: !120)
!2349 = !DILocalVariable(name: "fmt", arg: 3, scope: !2343, file: !127, line: 251, type: !247)
!2350 = !DILocalVariable(name: "ap", arg: 4, scope: !2343, file: !127, line: 251, type: !2247)
!2351 = !DILocalVariable(name: "ctx", scope: !2343, file: !127, line: 253, type: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !127, line: 217, size: 96, elements: !2353)
!2353 = !{!2354, !2355, !2356}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2352, file: !127, line: 218, baseType: !1131, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2352, file: !127, line: 219, baseType: !103, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2352, file: !127, line: 220, baseType: !103, size: 32, offset: 64)
!2357 = !DILocation(line: 0, scope: !2343)
!2358 = !DILocation(line: 253, column: 2, scope: !2343)
!2359 = !DILocation(line: 253, column: 21, scope: !2343)
!2360 = !DILocation(line: 253, column: 27, scope: !2343)
!2361 = !DILocation(line: 255, column: 2, scope: !2343)
!2362 = !DILocation(line: 257, column: 10, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2343, file: !127, line: 257, column: 6)
!2364 = !DILocation(line: 257, column: 22, scope: !2363)
!2365 = !DILocation(line: 257, column: 16, scope: !2363)
!2366 = !DILocation(line: 257, column: 6, scope: !2343)
!2367 = !DILocation(line: 258, column: 3, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2363, file: !127, line: 257, column: 27)
!2369 = !DILocation(line: 258, column: 18, scope: !2368)
!2370 = !DILocation(line: 259, column: 2, scope: !2368)
!2371 = !DILocation(line: 262, column: 1, scope: !2343)
!2372 = !DILocation(line: 261, column: 2, scope: !2343)
!2373 = distinct !DISubprogram(name: "str_out", scope: !127, file: !127, line: 223, type: !2374, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !124, retainedNodes: !2377)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!103, !103, !2376}
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 32)
!2377 = !{!2378, !2379}
!2378 = !DILocalVariable(name: "c", arg: 1, scope: !2373, file: !127, line: 223, type: !103)
!2379 = !DILocalVariable(name: "ctx", arg: 2, scope: !2373, file: !127, line: 223, type: !2376)
!2380 = !DILocation(line: 0, scope: !2373)
!2381 = !DILocation(line: 225, column: 11, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2373, file: !127, line: 225, column: 6)
!2383 = !DILocation(line: 225, column: 15, scope: !2382)
!2384 = !DILocation(line: 0, scope: !2382)
!2385 = !DILocation(line: 225, column: 23, scope: !2382)
!2386 = !DILocation(line: 225, column: 45, scope: !2382)
!2387 = !DILocation(line: 225, column: 37, scope: !2382)
!2388 = !DILocation(line: 225, column: 6, scope: !2373)
!2389 = !DILocation(line: 226, column: 8, scope: !2390)
!2390 = distinct !DILexicalBlock(scope: !2382, file: !127, line: 225, column: 50)
!2391 = !DILocation(line: 226, column: 13, scope: !2390)
!2392 = !DILocation(line: 227, column: 3, scope: !2390)
!2393 = !DILocation(line: 230, column: 29, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2373, file: !127, line: 230, column: 6)
!2395 = !DILocation(line: 230, column: 17, scope: !2394)
!2396 = !DILocation(line: 230, column: 6, scope: !2373)
!2397 = !DILocation(line: 231, column: 22, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2394, file: !127, line: 230, column: 34)
!2399 = !DILocation(line: 231, column: 3, scope: !2398)
!2400 = !DILocation(line: 231, column: 26, scope: !2398)
!2401 = !DILocation(line: 232, column: 2, scope: !2398)
!2402 = !DILocation(line: 233, column: 28, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2394, file: !127, line: 232, column: 9)
!2404 = !DILocation(line: 233, column: 22, scope: !2403)
!2405 = !DILocation(line: 233, column: 3, scope: !2403)
!2406 = !DILocation(line: 233, column: 26, scope: !2403)
!2407 = !DILocation(line: 237, column: 1, scope: !2373)
!2408 = distinct !DISubprogram(name: "z_thread_entry", scope: !2409, file: !2409, line: 30, type: !2410, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !2417)
!2409 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null, !2412, !102, !102, !102}
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !2413, line: 46, baseType: !2414)
!2413 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !102, !102, !102}
!2417 = !{!2418, !2419, !2420, !2421}
!2418 = !DILocalVariable(name: "entry", arg: 1, scope: !2408, file: !2409, line: 30, type: !2412)
!2419 = !DILocalVariable(name: "p1", arg: 2, scope: !2408, file: !2409, line: 31, type: !102)
!2420 = !DILocalVariable(name: "p2", arg: 3, scope: !2408, file: !2409, line: 31, type: !102)
!2421 = !DILocalVariable(name: "p3", arg: 4, scope: !2408, file: !2409, line: 31, type: !102)
!2422 = !DILocation(line: 0, scope: !2408)
!2423 = !DILocation(line: 36, column: 2, scope: !2408)
!2424 = !DILocation(line: 38, column: 17, scope: !2408)
!2425 = !DILocation(line: 38, column: 2, scope: !2408)
!2426 = !DILocation(line: 45, column: 2, scope: !2408)
!2427 = distinct !DISubprogram(name: "k_current_get", scope: !376, file: !376, line: 530, type: !2428, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !162)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!2430}
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !282, line: 347, baseType: !2431)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 32)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !2433)
!2433 = !{!2434, !2492, !2504, !2505, !2506, !2507, !2513, !2526}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2432, file: !282, line: 247, baseType: !2435, size: 384)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !2436)
!2436 = !{!2437, !2461, !2468, !2469, !2470, !2479, !2480, !2481}
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !282, line: 60, baseType: !2438, size: 64)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2435, file: !282, line: 60, size: 64, elements: !2439)
!2439 = !{!2440, !2455}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2438, file: !282, line: 61, baseType: !2441, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !2442)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !2443)
!2443 = !{!2444, !2450}
!2444 = !DIDerivedType(tag: DW_TAG_member, scope: !2442, file: !292, line: 38, baseType: !2445, size: 32)
!2445 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2442, file: !292, line: 38, size: 32, elements: !2446)
!2446 = !{!2447, !2449}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2445, file: !292, line: 39, baseType: !2448, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2445, file: !292, line: 40, baseType: !2448, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2442, file: !292, line: 42, baseType: !2451, size: 32, offset: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2442, file: !292, line: 42, size: 32, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2451, file: !292, line: 43, baseType: !2448, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2451, file: !292, line: 44, baseType: !2448, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2438, file: !282, line: 62, baseType: !2456, size: 64)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !2457)
!2457 = !{!2458}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2456, file: !308, line: 50, baseType: !2459, size: 64)
!2459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2460, size: 64, elements: !313)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2435, file: !282, line: 68, baseType: !2462, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !2464)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !2465)
!2465 = !{!2466}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2464, file: !318, line: 232, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !2442)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2435, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2435, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2435, file: !282, line: 90, baseType: !2471, size: 16, offset: 112)
!2471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2435, file: !282, line: 90, size: 16, elements: !2472)
!2472 = !{!2473, !2478}
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2471, file: !282, line: 91, baseType: !2474, size: 16)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2471, file: !282, line: 91, size: 16, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2474, file: !282, line: 96, baseType: !332, size: 8)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2474, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2471, file: !282, line: 100, baseType: !151, size: 16)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2435, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2435, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2435, file: !282, line: 131, baseType: !2482, size: 192, offset: 192)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !2483)
!2483 = !{!2484, !2485, !2491}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2482, file: !318, line: 245, baseType: !2441, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2482, file: !318, line: 246, baseType: !2486, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !2487)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{null, !2490}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2482, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2432, file: !282, line: 250, baseType: !2493, size: 288, offset: 384)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2493, file: !353, line: 26, baseType: !137, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2493, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2493, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2493, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2493, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2493, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2493, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2493, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2493, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2432, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2432, file: !282, line: 256, baseType: !2463, size: 64, offset: 704)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2432, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2432, file: !282, line: 300, baseType: !2508, size: 96, offset: 800)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !2509)
!2509 = !{!2510, !2511, !2512}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2508, file: !282, line: 153, baseType: !22, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2508, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2508, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2432, file: !282, line: 325, baseType: !2514, size: 32, offset: 896)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !2516)
!2516 = !{!2517, !2523, !2524}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2515, file: !376, line: 5074, baseType: !2518, size: 96)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2519)
!2519 = !{!2520, !2521, !2522}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2518, file: !113, line: 57, baseType: !116, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2518, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2518, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2515, file: !376, line: 5075, baseType: !2463, size: 64, offset: 96)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2515, file: !376, line: 5076, baseType: !2525, offset: 160)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2432, file: !282, line: 343, baseType: !2527, size: 64, offset: 928)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2527, file: !353, line: 63, baseType: !137, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2527, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!2531 = !DILocation(line: 535, column: 9, scope: !2427)
!2532 = !DILocation(line: 535, column: 2, scope: !2427)
!2533 = distinct !DISubprogram(name: "k_thread_abort", scope: !2534, file: !2534, line: 188, type: !2535, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !2537)
!2534 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!2535 = !DISubroutineType(types: !2536)
!2536 = !{null, !2430}
!2537 = !{!2538}
!2538 = !DILocalVariable(name: "thread", arg: 1, scope: !2533, file: !2534, line: 188, type: !2430)
!2539 = !DILocation(line: 0, scope: !2533)
!2540 = !DILocation(line: 197, column: 2, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2533, file: !2534, line: 197, column: 2)
!2542 = !{i64 2151085751}
!2543 = !DILocation(line: 198, column: 2, scope: !2533)
!2544 = !DILocation(line: 199, column: 1, scope: !2533)
!2545 = distinct !DISubprogram(name: "z_current_get", scope: !2534, file: !2534, line: 173, type: !2428, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1626, retainedNodes: !162)
!2546 = !DILocation(line: 180, column: 2, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2545, file: !2534, line: 180, column: 2)
!2548 = !{i64 2151085683}
!2549 = !DILocation(line: 181, column: 9, scope: !2545)
!2550 = !DILocation(line: 181, column: 2, scope: !2545)
!2551 = distinct !DISubprogram(name: "sys_heap_free", scope: !2552, file: !2552, line: 163, type: !2553, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2561)
!2552 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2553 = !DISubroutineType(types: !2554)
!2554 = !{null, !2555, !102}
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 32)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !2557)
!2557 = !{!2558, !2559, !2560}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2556, file: !113, line: 57, baseType: !1636, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2556, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2556, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!2561 = !{!2562, !2563, !2564, !2565}
!2562 = !DILocalVariable(name: "heap", arg: 1, scope: !2551, file: !2552, line: 163, type: !2555)
!2563 = !DILocalVariable(name: "mem", arg: 2, scope: !2551, file: !2552, line: 163, type: !102)
!2564 = !DILocalVariable(name: "h", scope: !2551, file: !2552, line: 168, type: !1636)
!2565 = !DILocalVariable(name: "c", scope: !2551, file: !2552, line: 169, type: !1641)
!2566 = !DILocation(line: 0, scope: !2551)
!2567 = !DILocation(line: 165, column: 10, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2551, file: !2552, line: 165, column: 6)
!2569 = !DILocation(line: 165, column: 6, scope: !2551)
!2570 = !DILocation(line: 168, column: 27, scope: !2551)
!2571 = !DILocation(line: 169, column: 16, scope: !2551)
!2572 = !{i32 0, i32 536870912}
!2573 = !DILocation(line: 187, column: 2, scope: !2551)
!2574 = !DILocation(line: 189, column: 44, scope: !2551)
!2575 = !{i32 0, i32 32768}
!2576 = !DILocation(line: 189, column: 24, scope: !2551)
!2577 = !DILocation(line: 189, column: 5, scope: !2551)
!2578 = !DILocation(line: 189, column: 21, scope: !2551)
!2579 = !DILocation(line: 197, column: 2, scope: !2551)
!2580 = !DILocation(line: 198, column: 1, scope: !2551)
!2581 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !2552, file: !2552, line: 157, type: !2582, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2584)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{!1641, !1636, !102}
!2584 = !{!2585, !2586, !2587, !2588}
!2585 = !DILocalVariable(name: "h", arg: 1, scope: !2581, file: !2552, line: 157, type: !1636)
!2586 = !DILocalVariable(name: "p", arg: 2, scope: !2581, file: !2552, line: 157, type: !102)
!2587 = !DILocalVariable(name: "mem", scope: !2581, file: !2552, line: 159, type: !1125)
!2588 = !DILocalVariable(name: "base", scope: !2581, file: !2552, line: 159, type: !1125)
!2589 = !DILocation(line: 0, scope: !2581)
!2590 = !DILocation(line: 159, column: 39, scope: !2581)
!2591 = !DILocation(line: 160, column: 14, scope: !2581)
!2592 = !DILocation(line: 160, column: 38, scope: !2581)
!2593 = !DILocation(line: 160, column: 46, scope: !2581)
!2594 = !DILocation(line: 160, column: 2, scope: !2581)
!2595 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !2596, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2598)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{null, !1636, !1641, !259}
!2598 = !{!2599, !2600, !2601, !2602, !2603}
!2599 = !DILocalVariable(name: "h", arg: 1, scope: !2595, file: !142, line: 147, type: !1636)
!2600 = !DILocalVariable(name: "c", arg: 2, scope: !2595, file: !142, line: 147, type: !1641)
!2601 = !DILocalVariable(name: "used", arg: 3, scope: !2595, file: !142, line: 147, type: !259)
!2602 = !DILocalVariable(name: "buf", scope: !2595, file: !142, line: 149, type: !1631)
!2603 = !DILocalVariable(name: "cmem", scope: !2595, file: !142, line: 150, type: !102)
!2604 = !DILocation(line: 0, scope: !2595)
!2605 = !DILocation(line: 149, column: 22, scope: !2595)
!2606 = !DILocation(line: 0, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2608, file: !142, line: 159, column: 7)
!2608 = distinct !DILexicalBlock(scope: !2609, file: !142, line: 158, column: 9)
!2609 = distinct !DILexicalBlock(scope: !2595, file: !142, line: 152, column: 6)
!2610 = !DILocation(line: 159, column: 7, scope: !2608)
!2611 = !DILocation(line: 165, column: 1, scope: !2595)
!2612 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !2613, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2616)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!2615, !1636, !1641}
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !142, line: 62, baseType: !137)
!2616 = !{!2617, !2618}
!2617 = !DILocalVariable(name: "h", arg: 1, scope: !2612, file: !142, line: 142, type: !1636)
!2618 = !DILocalVariable(name: "c", arg: 2, scope: !2612, file: !142, line: 142, type: !1641)
!2619 = !DILocation(line: 0, scope: !2612)
!2620 = !DILocation(line: 144, column: 9, scope: !2612)
!2621 = !DILocation(line: 144, column: 42, scope: !2612)
!2622 = !DILocation(line: 144, column: 2, scope: !2612)
!2623 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !2624, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2626)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{!120, !1636, !2615}
!2626 = !{!2627, !2628}
!2627 = !DILocalVariable(name: "h", arg: 1, scope: !2623, file: !142, line: 245, type: !1636)
!2628 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !2623, file: !142, line: 245, type: !2615)
!2629 = !DILocation(line: 0, scope: !2623)
!2630 = !DILocation(line: 247, column: 20, scope: !2623)
!2631 = !DILocation(line: 247, column: 33, scope: !2623)
!2632 = !DILocation(line: 247, column: 2, scope: !2623)
!2633 = distinct !DISubprogram(name: "free_chunk", scope: !2552, file: !2552, line: 133, type: !2634, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2636)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{null, !1636, !1641}
!2636 = !{!2637, !2638}
!2637 = !DILocalVariable(name: "h", arg: 1, scope: !2633, file: !2552, line: 133, type: !1636)
!2638 = !DILocalVariable(name: "c", arg: 2, scope: !2633, file: !2552, line: 133, type: !1641)
!2639 = !DILocation(line: 0, scope: !2633)
!2640 = !DILocation(line: 136, column: 21, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2633, file: !2552, line: 136, column: 6)
!2642 = !DILocation(line: 136, column: 7, scope: !2641)
!2643 = !DILocation(line: 136, column: 6, scope: !2633)
!2644 = !DILocation(line: 137, column: 3, scope: !2645)
!2645 = distinct !DILexicalBlock(scope: !2641, file: !2552, line: 136, column: 41)
!2646 = !DILocation(line: 138, column: 22, scope: !2645)
!2647 = !DILocation(line: 138, column: 3, scope: !2645)
!2648 = !DILocation(line: 139, column: 2, scope: !2645)
!2649 = !DILocation(line: 142, column: 21, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2633, file: !2552, line: 142, column: 6)
!2651 = !{i32 -65535, i32 536903678}
!2652 = !DILocation(line: 142, column: 7, scope: !2650)
!2653 = !DILocation(line: 142, column: 6, scope: !2633)
!2654 = !DILocation(line: 143, column: 3, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2650, file: !2552, line: 142, column: 40)
!2656 = !DILocation(line: 144, column: 19, scope: !2655)
!2657 = !DILocation(line: 144, column: 3, scope: !2655)
!2658 = !DILocation(line: 145, column: 7, scope: !2655)
!2659 = !DILocation(line: 146, column: 2, scope: !2655)
!2660 = !DILocation(line: 148, column: 2, scope: !2633)
!2661 = !DILocation(line: 149, column: 1, scope: !2633)
!2662 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !2663, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2665)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!1641, !1636, !1641}
!2665 = !{!2666, !2667}
!2666 = !DILocalVariable(name: "h", arg: 1, scope: !2662, file: !142, line: 204, type: !1636)
!2667 = !DILocalVariable(name: "c", arg: 2, scope: !2662, file: !142, line: 204, type: !1641)
!2668 = !DILocation(line: 0, scope: !2662)
!2669 = !DILocation(line: 206, column: 13, scope: !2662)
!2670 = !DILocation(line: 206, column: 11, scope: !2662)
!2671 = !DILocation(line: 206, column: 2, scope: !2662)
!2672 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !2673, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2675)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!259, !1636, !1641}
!2675 = !{!2676, !2677}
!2676 = !DILocalVariable(name: "h", arg: 1, scope: !2672, file: !142, line: 137, type: !1636)
!2677 = !DILocalVariable(name: "c", arg: 2, scope: !2672, file: !142, line: 137, type: !1641)
!2678 = !DILocation(line: 0, scope: !2672)
!2679 = !DILocation(line: 139, column: 9, scope: !2672)
!2680 = !DILocation(line: 139, column: 42, scope: !2672)
!2681 = !DILocation(line: 139, column: 2, scope: !2672)
!2682 = distinct !DISubprogram(name: "free_list_remove", scope: !2552, file: !2552, line: 60, type: !2634, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2683)
!2683 = !{!2684, !2685, !2686}
!2684 = !DILocalVariable(name: "h", arg: 1, scope: !2682, file: !2552, line: 60, type: !1636)
!2685 = !DILocalVariable(name: "c", arg: 2, scope: !2682, file: !2552, line: 60, type: !1641)
!2686 = !DILocalVariable(name: "bidx", scope: !2687, file: !2552, line: 63, type: !103)
!2687 = distinct !DILexicalBlock(scope: !2688, file: !2552, line: 62, column: 31)
!2688 = distinct !DILexicalBlock(scope: !2682, file: !2552, line: 62, column: 6)
!2689 = !DILocation(line: 0, scope: !2682)
!2690 = !DILocation(line: 63, column: 28, scope: !2687)
!2691 = !DILocation(line: 63, column: 14, scope: !2687)
!2692 = !DILocation(line: 0, scope: !2687)
!2693 = !DILocation(line: 64, column: 3, scope: !2687)
!2694 = !DILocation(line: 66, column: 1, scope: !2682)
!2695 = distinct !DISubprogram(name: "merge_chunks", scope: !2552, file: !2552, line: 125, type: !2696, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2698)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !1636, !1641, !1641}
!2698 = !{!2699, !2700, !2701, !2702}
!2699 = !DILocalVariable(name: "h", arg: 1, scope: !2695, file: !2552, line: 125, type: !1636)
!2700 = !DILocalVariable(name: "lc", arg: 2, scope: !2695, file: !2552, line: 125, type: !1641)
!2701 = !DILocalVariable(name: "rc", arg: 3, scope: !2695, file: !2552, line: 125, type: !1641)
!2702 = !DILocalVariable(name: "newsz", scope: !2695, file: !2552, line: 127, type: !2615)
!2703 = !DILocation(line: 0, scope: !2695)
!2704 = !DILocation(line: 127, column: 20, scope: !2695)
!2705 = !DILocation(line: 127, column: 40, scope: !2695)
!2706 = !DILocation(line: 127, column: 38, scope: !2695)
!2707 = !DILocation(line: 129, column: 2, scope: !2695)
!2708 = !DILocation(line: 130, column: 25, scope: !2695)
!2709 = !DILocation(line: 130, column: 2, scope: !2695)
!2710 = !DILocation(line: 131, column: 1, scope: !2695)
!2711 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !2663, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2712)
!2712 = !{!2713, !2714}
!2713 = !DILocalVariable(name: "h", arg: 1, scope: !2711, file: !142, line: 199, type: !1636)
!2714 = !DILocalVariable(name: "c", arg: 2, scope: !2711, file: !142, line: 199, type: !1641)
!2715 = !DILocation(line: 0, scope: !2711)
!2716 = !DILocation(line: 201, column: 13, scope: !2711)
!2717 = !DILocation(line: 201, column: 11, scope: !2711)
!2718 = !DILocation(line: 201, column: 2, scope: !2711)
!2719 = distinct !DISubprogram(name: "free_list_add", scope: !2552, file: !2552, line: 98, type: !2634, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2720)
!2720 = !{!2721, !2722, !2723}
!2721 = !DILocalVariable(name: "h", arg: 1, scope: !2719, file: !2552, line: 98, type: !1636)
!2722 = !DILocalVariable(name: "c", arg: 2, scope: !2719, file: !2552, line: 98, type: !1641)
!2723 = !DILocalVariable(name: "bidx", scope: !2724, file: !2552, line: 101, type: !103)
!2724 = distinct !DILexicalBlock(scope: !2725, file: !2552, line: 100, column: 31)
!2725 = distinct !DILexicalBlock(scope: !2719, file: !2552, line: 100, column: 6)
!2726 = !DILocation(line: 0, scope: !2719)
!2727 = !DILocation(line: 101, column: 28, scope: !2724)
!2728 = !DILocation(line: 101, column: 14, scope: !2724)
!2729 = !DILocation(line: 0, scope: !2724)
!2730 = !DILocation(line: 102, column: 3, scope: !2724)
!2731 = !DILocation(line: 104, column: 1, scope: !2719)
!2732 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !2733, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2735)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!103, !1636, !2615}
!2735 = !{!2736, !2737, !2738}
!2736 = !DILocalVariable(name: "h", arg: 1, scope: !2732, file: !142, line: 250, type: !1636)
!2737 = !DILocalVariable(name: "sz", arg: 2, scope: !2732, file: !142, line: 250, type: !2615)
!2738 = !DILocalVariable(name: "usable_sz", scope: !2732, file: !142, line: 252, type: !32)
!2739 = !DILocation(line: 0, scope: !2732)
!2740 = !DILocation(line: 252, column: 32, scope: !2732)
!2741 = !DILocation(line: 252, column: 30, scope: !2732)
!2742 = !DILocation(line: 252, column: 50, scope: !2732)
!2743 = !DILocation(line: 253, column: 14, scope: !2732)
!2744 = !{i32 0, i32 33}
!2745 = !DILocation(line: 253, column: 12, scope: !2732)
!2746 = !DILocation(line: 253, column: 2, scope: !2732)
!2747 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !2552, file: !2552, line: 68, type: !2748, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2750)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{null, !1636, !1641, !103}
!2750 = !{!2751, !2752, !2753, !2754, !2756, !2759}
!2751 = !DILocalVariable(name: "h", arg: 1, scope: !2747, file: !2552, line: 68, type: !1636)
!2752 = !DILocalVariable(name: "c", arg: 2, scope: !2747, file: !2552, line: 68, type: !1641)
!2753 = !DILocalVariable(name: "bidx", arg: 3, scope: !2747, file: !2552, line: 68, type: !103)
!2754 = !DILocalVariable(name: "b", scope: !2747, file: !2552, line: 70, type: !2755)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!2756 = !DILocalVariable(name: "second", scope: !2757, file: !2552, line: 84, type: !1641)
!2757 = distinct !DILexicalBlock(scope: !2758, file: !2552, line: 80, column: 9)
!2758 = distinct !DILexicalBlock(scope: !2747, file: !2552, line: 72, column: 6)
!2759 = !DILocalVariable(name: "first", scope: !2757, file: !2552, line: 85, type: !1641)
!2760 = !DILocation(line: 0, scope: !2747)
!2761 = !DILocation(line: 72, column: 9, scope: !2758)
!2762 = !DILocation(line: 72, column: 14, scope: !2758)
!2763 = !DILocation(line: 72, column: 6, scope: !2747)
!2764 = !DILocation(line: 76, column: 23, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2758, file: !2552, line: 72, column: 21)
!2766 = !DILocation(line: 76, column: 6, scope: !2765)
!2767 = !DILocation(line: 76, column: 20, scope: !2765)
!2768 = !DILocation(line: 77, column: 11, scope: !2765)
!2769 = !DILocation(line: 78, column: 3, scope: !2765)
!2770 = !DILocation(line: 79, column: 3, scope: !2765)
!2771 = !DILocation(line: 80, column: 2, scope: !2765)
!2772 = !DILocation(line: 0, scope: !2757)
!2773 = !DILocation(line: 85, column: 21, scope: !2757)
!2774 = !{i32 0, i32 65536}
!2775 = !DILocation(line: 87, column: 3, scope: !2757)
!2776 = !DILocation(line: 88, column: 3, scope: !2757)
!2777 = !DILocation(line: 89, column: 3, scope: !2757)
!2778 = !DILocation(line: 90, column: 3, scope: !2757)
!2779 = !DILocation(line: 94, column: 39, scope: !2747)
!2780 = !DILocation(line: 94, column: 19, scope: !2747)
!2781 = !DILocation(line: 94, column: 5, scope: !2747)
!2782 = !DILocation(line: 94, column: 16, scope: !2747)
!2783 = !DILocation(line: 96, column: 1, scope: !2747)
!2784 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !142, file: !142, line: 187, type: !2696, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2785)
!2785 = !{!2786, !2787, !2788}
!2786 = !DILocalVariable(name: "h", arg: 1, scope: !2784, file: !142, line: 187, type: !1636)
!2787 = !DILocalVariable(name: "c", arg: 2, scope: !2784, file: !142, line: 187, type: !1641)
!2788 = !DILocalVariable(name: "prev", arg: 3, scope: !2784, file: !142, line: 188, type: !1641)
!2789 = !DILocation(line: 0, scope: !2784)
!2790 = !DILocation(line: 190, column: 2, scope: !2784)
!2791 = !DILocation(line: 191, column: 1, scope: !2784)
!2792 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !142, file: !142, line: 193, type: !2696, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2793)
!2793 = !{!2794, !2795, !2796}
!2794 = !DILocalVariable(name: "h", arg: 1, scope: !2792, file: !142, line: 193, type: !1636)
!2795 = !DILocalVariable(name: "c", arg: 2, scope: !2792, file: !142, line: 193, type: !1641)
!2796 = !DILocalVariable(name: "next", arg: 3, scope: !2792, file: !142, line: 194, type: !1641)
!2797 = !DILocation(line: 0, scope: !2792)
!2798 = !DILocation(line: 196, column: 2, scope: !2792)
!2799 = !DILocation(line: 197, column: 1, scope: !2792)
!2800 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !2663, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2801)
!2801 = !{!2802, !2803}
!2802 = !DILocalVariable(name: "h", arg: 1, scope: !2800, file: !142, line: 177, type: !1636)
!2803 = !DILocalVariable(name: "c", arg: 2, scope: !2800, file: !142, line: 177, type: !1641)
!2804 = !DILocation(line: 0, scope: !2800)
!2805 = !DILocation(line: 179, column: 9, scope: !2800)
!2806 = !DILocation(line: 179, column: 2, scope: !2800)
!2807 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !2808, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2810)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!1641, !1636, !1641, !141}
!2810 = !{!2811, !2812, !2813, !2814, !2815}
!2811 = !DILocalVariable(name: "h", arg: 1, scope: !2807, file: !142, line: 107, type: !1636)
!2812 = !DILocalVariable(name: "c", arg: 2, scope: !2807, file: !142, line: 107, type: !1641)
!2813 = !DILocalVariable(name: "f", arg: 3, scope: !2807, file: !142, line: 108, type: !141)
!2814 = !DILocalVariable(name: "buf", scope: !2807, file: !142, line: 110, type: !1631)
!2815 = !DILocalVariable(name: "cmem", scope: !2807, file: !142, line: 111, type: !102)
!2816 = !DILocation(line: 0, scope: !2807)
!2817 = !DILocation(line: 110, column: 22, scope: !2807)
!2818 = !DILocation(line: 111, column: 15, scope: !2807)
!2819 = !DILocation(line: 116, column: 11, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2821, file: !142, line: 115, column: 9)
!2821 = distinct !DILexicalBlock(scope: !2807, file: !142, line: 113, column: 6)
!2822 = !DILocation(line: 116, column: 10, scope: !2820)
!2823 = !DILocation(line: 118, column: 1, scope: !2807)
!2824 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !2825, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2827)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!1631, !1636}
!2827 = !{!2828}
!2828 = !DILocalVariable(name: "h", arg: 1, scope: !2824, file: !142, line: 101, type: !1636)
!2829 = !DILocation(line: 0, scope: !2824)
!2830 = !DILocation(line: 104, column: 9, scope: !2824)
!2831 = !DILocation(line: 104, column: 2, scope: !2824)
!2832 = distinct !DISubprogram(name: "chunk_set", scope: !142, file: !142, line: 120, type: !2833, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2835)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{null, !1636, !1641, !141, !1641}
!2835 = !{!2836, !2837, !2838, !2839, !2840, !2841}
!2836 = !DILocalVariable(name: "h", arg: 1, scope: !2832, file: !142, line: 120, type: !1636)
!2837 = !DILocalVariable(name: "c", arg: 2, scope: !2832, file: !142, line: 120, type: !1641)
!2838 = !DILocalVariable(name: "f", arg: 3, scope: !2832, file: !142, line: 121, type: !141)
!2839 = !DILocalVariable(name: "val", arg: 4, scope: !2832, file: !142, line: 121, type: !1641)
!2840 = !DILocalVariable(name: "buf", scope: !2832, file: !142, line: 125, type: !1631)
!2841 = !DILocalVariable(name: "cmem", scope: !2832, file: !142, line: 126, type: !102)
!2842 = !DILocation(line: 0, scope: !2832)
!2843 = !DILocation(line: 125, column: 22, scope: !2832)
!2844 = !DILocation(line: 126, column: 15, scope: !2832)
!2845 = !DILocation(line: 133, column: 27, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2847, file: !142, line: 131, column: 9)
!2847 = distinct !DILexicalBlock(scope: !2832, file: !142, line: 128, column: 6)
!2848 = !DILocation(line: 133, column: 4, scope: !2846)
!2849 = !DILocation(line: 133, column: 3, scope: !2846)
!2850 = !DILocation(line: 133, column: 25, scope: !2846)
!2851 = !DILocation(line: 135, column: 1, scope: !2832)
!2852 = distinct !DISubprogram(name: "min_chunk_size", scope: !142, file: !142, line: 240, type: !2853, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2855)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!2615, !1636}
!2855 = !{!2856}
!2856 = !DILocalVariable(name: "h", arg: 1, scope: !2852, file: !142, line: 240, type: !1636)
!2857 = !DILocation(line: 0, scope: !2852)
!2858 = !DILocation(line: 242, column: 9, scope: !2852)
!2859 = !DILocation(line: 242, column: 2, scope: !2852)
!2860 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !142, file: !142, line: 235, type: !2861, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2863)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!2615, !1636, !120}
!2863 = !{!2864, !2865}
!2864 = !DILocalVariable(name: "h", arg: 1, scope: !2860, file: !142, line: 235, type: !1636)
!2865 = !DILocalVariable(name: "bytes", arg: 2, scope: !2860, file: !142, line: 235, type: !120)
!2866 = !DILocation(line: 0, scope: !2860)
!2867 = !DILocation(line: 237, column: 39, scope: !2860)
!2868 = !DILocation(line: 237, column: 9, scope: !2860)
!2869 = !DILocation(line: 237, column: 2, scope: !2860)
!2870 = distinct !DISubprogram(name: "chunksz", scope: !142, file: !142, line: 230, type: !2871, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2873)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!2615, !120}
!2873 = !{!2874}
!2874 = !DILocalVariable(name: "bytes", arg: 1, scope: !2870, file: !142, line: 230, type: !120)
!2875 = !DILocation(line: 0, scope: !2870)
!2876 = !DILocation(line: 232, column: 29, scope: !2870)
!2877 = !DILocation(line: 232, column: 35, scope: !2870)
!2878 = !DILocation(line: 232, column: 2, scope: !2870)
!2879 = distinct !DISubprogram(name: "set_chunk_size", scope: !142, file: !142, line: 172, type: !2880, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2882)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{null, !1636, !1641, !2615}
!2882 = !{!2883, !2884, !2885}
!2883 = !DILocalVariable(name: "h", arg: 1, scope: !2879, file: !142, line: 172, type: !1636)
!2884 = !DILocalVariable(name: "c", arg: 2, scope: !2879, file: !142, line: 172, type: !1641)
!2885 = !DILocalVariable(name: "size", arg: 3, scope: !2879, file: !142, line: 172, type: !2615)
!2886 = !DILocation(line: 0, scope: !2879)
!2887 = !DILocation(line: 174, column: 38, scope: !2879)
!2888 = !DILocation(line: 174, column: 2, scope: !2879)
!2889 = !DILocation(line: 175, column: 1, scope: !2879)
!2890 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !142, file: !142, line: 209, type: !2880, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2891)
!2891 = !{!2892, !2893, !2894}
!2892 = !DILocalVariable(name: "h", arg: 1, scope: !2890, file: !142, line: 209, type: !1636)
!2893 = !DILocalVariable(name: "c", arg: 2, scope: !2890, file: !142, line: 209, type: !1641)
!2894 = !DILocalVariable(name: "size", arg: 3, scope: !2890, file: !142, line: 210, type: !2615)
!2895 = !DILocation(line: 0, scope: !2890)
!2896 = !DILocation(line: 212, column: 2, scope: !2890)
!2897 = !DILocation(line: 213, column: 1, scope: !2890)
!2898 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !2552, file: !2552, line: 34, type: !2748, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2899)
!2899 = !{!2900, !2901, !2902, !2903, !2904, !2907}
!2900 = !DILocalVariable(name: "h", arg: 1, scope: !2898, file: !2552, line: 34, type: !1636)
!2901 = !DILocalVariable(name: "c", arg: 2, scope: !2898, file: !2552, line: 34, type: !1641)
!2902 = !DILocalVariable(name: "bidx", arg: 3, scope: !2898, file: !2552, line: 34, type: !103)
!2903 = !DILocalVariable(name: "b", scope: !2898, file: !2552, line: 36, type: !2755)
!2904 = !DILocalVariable(name: "first", scope: !2905, file: !2552, line: 47, type: !1641)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !2552, line: 46, column: 9)
!2906 = distinct !DILexicalBlock(scope: !2898, file: !2552, line: 42, column: 6)
!2907 = !DILocalVariable(name: "second", scope: !2905, file: !2552, line: 48, type: !1641)
!2908 = !DILocation(line: 0, scope: !2898)
!2909 = !DILocation(line: 36, column: 29, scope: !2898)
!2910 = !DILocation(line: 42, column: 6, scope: !2906)
!2911 = !DILocation(line: 42, column: 28, scope: !2906)
!2912 = !DILocation(line: 42, column: 6, scope: !2898)
!2913 = !DILocation(line: 44, column: 24, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2906, file: !2552, line: 42, column: 34)
!2915 = !DILocation(line: 44, column: 23, scope: !2914)
!2916 = !DILocation(line: 44, column: 6, scope: !2914)
!2917 = !DILocation(line: 44, column: 20, scope: !2914)
!2918 = !DILocation(line: 45, column: 6, scope: !2914)
!2919 = !DILocation(line: 45, column: 11, scope: !2914)
!2920 = !DILocation(line: 46, column: 2, scope: !2914)
!2921 = !DILocation(line: 47, column: 21, scope: !2905)
!2922 = !DILocation(line: 0, scope: !2905)
!2923 = !DILocation(line: 50, column: 6, scope: !2905)
!2924 = !DILocation(line: 50, column: 11, scope: !2905)
!2925 = !DILocation(line: 51, column: 3, scope: !2905)
!2926 = !DILocation(line: 52, column: 3, scope: !2905)
!2927 = !DILocation(line: 56, column: 39, scope: !2898)
!2928 = !DILocation(line: 56, column: 19, scope: !2898)
!2929 = !DILocation(line: 56, column: 5, scope: !2898)
!2930 = !DILocation(line: 56, column: 16, scope: !2898)
!2931 = !DILocation(line: 58, column: 1, scope: !2898)
!2932 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !2663, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2933)
!2933 = !{!2934, !2935}
!2934 = !DILocalVariable(name: "h", arg: 1, scope: !2932, file: !142, line: 182, type: !1636)
!2935 = !DILocalVariable(name: "c", arg: 2, scope: !2932, file: !142, line: 182, type: !1641)
!2936 = !DILocation(line: 0, scope: !2932)
!2937 = !DILocation(line: 184, column: 9, scope: !2932)
!2938 = !DILocation(line: 184, column: 2, scope: !2932)
!2939 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !2552, file: !2552, line: 200, type: !2940, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2942)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!120, !2555, !102}
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949}
!2943 = !DILocalVariable(name: "heap", arg: 1, scope: !2939, file: !2552, line: 200, type: !2555)
!2944 = !DILocalVariable(name: "mem", arg: 2, scope: !2939, file: !2552, line: 200, type: !102)
!2945 = !DILocalVariable(name: "h", scope: !2939, file: !2552, line: 202, type: !1636)
!2946 = !DILocalVariable(name: "c", scope: !2939, file: !2552, line: 203, type: !1641)
!2947 = !DILocalVariable(name: "addr", scope: !2939, file: !2552, line: 204, type: !120)
!2948 = !DILocalVariable(name: "chunk_base", scope: !2939, file: !2552, line: 205, type: !120)
!2949 = !DILocalVariable(name: "chunk_sz", scope: !2939, file: !2552, line: 206, type: !120)
!2950 = !DILocation(line: 0, scope: !2939)
!2951 = !DILocation(line: 202, column: 27, scope: !2939)
!2952 = !DILocation(line: 203, column: 16, scope: !2939)
!2953 = !DILocation(line: 204, column: 16, scope: !2939)
!2954 = !DILocation(line: 205, column: 31, scope: !2939)
!2955 = !DILocation(line: 205, column: 22, scope: !2939)
!2956 = !DILocation(line: 206, column: 20, scope: !2939)
!2957 = !DILocation(line: 206, column: 37, scope: !2939)
!2958 = !DILocation(line: 208, column: 26, scope: !2939)
!2959 = !DILocation(line: 208, column: 18, scope: !2939)
!2960 = !DILocation(line: 208, column: 2, scope: !2939)
!2961 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !2552, file: !2552, line: 263, type: !2962, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !2964)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!102, !2555, !120}
!2964 = !{!2965, !2966, !2967, !2968, !2969, !2970}
!2965 = !DILocalVariable(name: "heap", arg: 1, scope: !2961, file: !2552, line: 263, type: !2555)
!2966 = !DILocalVariable(name: "bytes", arg: 2, scope: !2961, file: !2552, line: 263, type: !120)
!2967 = !DILocalVariable(name: "h", scope: !2961, file: !2552, line: 265, type: !1636)
!2968 = !DILocalVariable(name: "mem", scope: !2961, file: !2552, line: 266, type: !102)
!2969 = !DILocalVariable(name: "chunk_sz", scope: !2961, file: !2552, line: 272, type: !2615)
!2970 = !DILocalVariable(name: "c", scope: !2961, file: !2552, line: 273, type: !1641)
!2971 = !DILocation(line: 0, scope: !2961)
!2972 = !DILocation(line: 265, column: 27, scope: !2961)
!2973 = !DILocation(line: 268, column: 12, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2961, file: !2552, line: 268, column: 6)
!2975 = !DILocation(line: 268, column: 18, scope: !2974)
!2976 = !DILocation(line: 268, column: 21, scope: !2974)
!2977 = !DILocation(line: 268, column: 6, scope: !2961)
!2978 = !DILocation(line: 272, column: 23, scope: !2961)
!2979 = !DILocation(line: 273, column: 16, scope: !2961)
!2980 = !DILocation(line: 274, column: 8, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2961, file: !2552, line: 274, column: 6)
!2982 = !DILocation(line: 274, column: 6, scope: !2961)
!2983 = !DILocation(line: 279, column: 6, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2961, file: !2552, line: 279, column: 6)
!2985 = !DILocation(line: 279, column: 23, scope: !2984)
!2986 = !DILocation(line: 279, column: 6, scope: !2961)
!2987 = !DILocation(line: 280, column: 24, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2984, file: !2552, line: 279, column: 35)
!2989 = !DILocation(line: 280, column: 3, scope: !2988)
!2990 = !DILocation(line: 281, column: 3, scope: !2988)
!2991 = !DILocation(line: 282, column: 2, scope: !2988)
!2992 = !DILocation(line: 284, column: 2, scope: !2961)
!2993 = !DILocation(line: 286, column: 8, scope: !2961)
!2994 = !DILocation(line: 289, column: 50, scope: !2961)
!2995 = !DILocation(line: 289, column: 30, scope: !2961)
!2996 = !{i32 -4, i32 262133}
!2997 = !DILocation(line: 289, column: 2, scope: !2961)
!2998 = !DILocation(line: 298, column: 2, scope: !2961)
!2999 = !DILocation(line: 299, column: 1, scope: !2961)
!3000 = distinct !DISubprogram(name: "size_too_big", scope: !142, file: !142, line: 256, type: !3001, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3003)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!259, !1636, !120}
!3003 = !{!3004, !3005}
!3004 = !DILocalVariable(name: "h", arg: 1, scope: !3000, file: !142, line: 256, type: !1636)
!3005 = !DILocalVariable(name: "bytes", arg: 2, scope: !3000, file: !142, line: 256, type: !120)
!3006 = !DILocation(line: 0, scope: !3000)
!3007 = !DILocation(line: 262, column: 16, scope: !3000)
!3008 = !DILocation(line: 262, column: 36, scope: !3000)
!3009 = !DILocation(line: 262, column: 30, scope: !3000)
!3010 = !DILocation(line: 262, column: 2, scope: !3000)
!3011 = distinct !DISubprogram(name: "alloc_chunk", scope: !2552, file: !2552, line: 211, type: !3012, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3014)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!1641, !1636, !2615}
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3022, !3023, !3025, !3026, !3029}
!3015 = !DILocalVariable(name: "h", arg: 1, scope: !3011, file: !2552, line: 211, type: !1636)
!3016 = !DILocalVariable(name: "sz", arg: 2, scope: !3011, file: !2552, line: 211, type: !2615)
!3017 = !DILocalVariable(name: "bi", scope: !3011, file: !2552, line: 213, type: !103)
!3018 = !DILocalVariable(name: "b", scope: !3011, file: !2552, line: 214, type: !2755)
!3019 = !DILocalVariable(name: "first", scope: !3020, file: !2552, line: 233, type: !1641)
!3020 = distinct !DILexicalBlock(scope: !3021, file: !2552, line: 232, column: 15)
!3021 = distinct !DILexicalBlock(scope: !3011, file: !2552, line: 232, column: 6)
!3022 = !DILocalVariable(name: "i", scope: !3020, file: !2552, line: 234, type: !103)
!3023 = !DILocalVariable(name: "c", scope: !3024, file: !2552, line: 236, type: !1641)
!3024 = distinct !DILexicalBlock(scope: !3020, file: !2552, line: 235, column: 6)
!3025 = !DILocalVariable(name: "bmask", scope: !3011, file: !2552, line: 249, type: !137)
!3026 = !DILocalVariable(name: "minbucket", scope: !3027, file: !2552, line: 252, type: !103)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !2552, line: 251, column: 19)
!3028 = distinct !DILexicalBlock(scope: !3011, file: !2552, line: 251, column: 6)
!3029 = !DILocalVariable(name: "c", scope: !3027, file: !2552, line: 253, type: !1641)
!3030 = !DILocation(line: 0, scope: !3011)
!3031 = !DILocation(line: 213, column: 11, scope: !3011)
!3032 = !DILocation(line: 232, column: 9, scope: !3021)
!3033 = !DILocation(line: 232, column: 6, scope: !3021)
!3034 = !DILocation(line: 232, column: 6, scope: !3011)
!3035 = !DILocation(line: 236, column: 21, scope: !3024)
!3036 = !DILocation(line: 0, scope: !3020)
!3037 = !DILocation(line: 0, scope: !3024)
!3038 = !DILocation(line: 237, column: 8, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3024, file: !2552, line: 237, column: 8)
!3040 = !DILocation(line: 237, column: 25, scope: !3039)
!3041 = !DILocation(line: 237, column: 8, scope: !3024)
!3042 = !DILocation(line: 238, column: 5, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3039, file: !2552, line: 237, column: 32)
!3044 = !DILocation(line: 241, column: 14, scope: !3024)
!3045 = !DILocation(line: 241, column: 12, scope: !3024)
!3046 = !DILocation(line: 243, column: 12, scope: !3020)
!3047 = !DILocation(line: 243, column: 16, scope: !3020)
!3048 = distinct !{!3048, !3049, !3050}
!3049 = !DILocation(line: 235, column: 3, scope: !3020)
!3050 = !DILocation(line: 243, column: 35, scope: !3020)
!3051 = !DILocation(line: 249, column: 22, scope: !3011)
!3052 = !DILocation(line: 249, column: 39, scope: !3011)
!3053 = !DILocation(line: 249, column: 36, scope: !3011)
!3054 = !DILocation(line: 251, column: 12, scope: !3028)
!3055 = !DILocation(line: 251, column: 6, scope: !3011)
!3056 = !DILocation(line: 252, column: 19, scope: !3027)
!3057 = !DILocation(line: 0, scope: !3027)
!3058 = !DILocation(line: 253, column: 39, scope: !3027)
!3059 = !DILocation(line: 255, column: 3, scope: !3027)
!3060 = !DILocation(line: 261, column: 1, scope: !3011)
!3061 = distinct !DISubprogram(name: "split_chunks", scope: !2552, file: !2552, line: 109, type: !2696, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3062)
!3062 = !{!3063, !3064, !3065, !3066, !3067, !3068}
!3063 = !DILocalVariable(name: "h", arg: 1, scope: !3061, file: !2552, line: 109, type: !1636)
!3064 = !DILocalVariable(name: "lc", arg: 2, scope: !3061, file: !2552, line: 109, type: !1641)
!3065 = !DILocalVariable(name: "rc", arg: 3, scope: !3061, file: !2552, line: 109, type: !1641)
!3066 = !DILocalVariable(name: "sz0", scope: !3061, file: !2552, line: 114, type: !2615)
!3067 = !DILocalVariable(name: "lsz", scope: !3061, file: !2552, line: 115, type: !2615)
!3068 = !DILocalVariable(name: "rsz", scope: !3061, file: !2552, line: 116, type: !2615)
!3069 = !DILocation(line: 0, scope: !3061)
!3070 = !DILocation(line: 114, column: 18, scope: !3061)
!3071 = !DILocation(line: 115, column: 21, scope: !3061)
!3072 = !DILocation(line: 116, column: 22, scope: !3061)
!3073 = !DILocation(line: 118, column: 2, scope: !3061)
!3074 = !DILocation(line: 119, column: 2, scope: !3061)
!3075 = !DILocation(line: 120, column: 2, scope: !3061)
!3076 = !DILocation(line: 121, column: 25, scope: !3061)
!3077 = !DILocation(line: 121, column: 2, scope: !3061)
!3078 = !DILocation(line: 122, column: 1, scope: !3061)
!3079 = distinct !DISubprogram(name: "chunk_mem", scope: !2552, file: !2552, line: 24, type: !3080, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3082)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!102, !1636, !1641}
!3082 = !{!3083, !3084, !3085, !3086}
!3083 = !DILocalVariable(name: "h", arg: 1, scope: !3079, file: !2552, line: 24, type: !1636)
!3084 = !DILocalVariable(name: "c", arg: 2, scope: !3079, file: !2552, line: 24, type: !1641)
!3085 = !DILocalVariable(name: "buf", scope: !3079, file: !2552, line: 26, type: !1631)
!3086 = !DILocalVariable(name: "ret", scope: !3079, file: !2552, line: 27, type: !1125)
!3087 = !DILocation(line: 0, scope: !3079)
!3088 = !DILocation(line: 26, column: 22, scope: !3079)
!3089 = !DILocation(line: 27, column: 38, scope: !3079)
!3090 = !DILocation(line: 31, column: 2, scope: !3079)
!3091 = distinct !DISubprogram(name: "increase_allocated_bytes", scope: !2552, file: !2552, line: 17, type: !3092, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3094)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{null, !1636, !120}
!3094 = !{!3095, !3096}
!3095 = !DILocalVariable(name: "h", arg: 1, scope: !3091, file: !2552, line: 17, type: !1636)
!3096 = !DILocalVariable(name: "num_bytes", arg: 2, scope: !3091, file: !2552, line: 17, type: !120)
!3097 = !DILocation(line: 0, scope: !3091)
!3098 = !DILocation(line: 19, column: 5, scope: !3091)
!3099 = !DILocation(line: 19, column: 21, scope: !3091)
!3100 = !DILocation(line: 20, column: 27, scope: !3091)
!3101 = !DILocation(line: 20, column: 25, scope: !3091)
!3102 = !DILocation(line: 21, column: 1, scope: !3091)
!3103 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !2552, file: !2552, line: 301, type: !3104, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3106)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!102, !2555, !120, !120}
!3106 = !{!3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118}
!3107 = !DILocalVariable(name: "heap", arg: 1, scope: !3103, file: !2552, line: 301, type: !2555)
!3108 = !DILocalVariable(name: "align", arg: 2, scope: !3103, file: !2552, line: 301, type: !120)
!3109 = !DILocalVariable(name: "bytes", arg: 3, scope: !3103, file: !2552, line: 301, type: !120)
!3110 = !DILocalVariable(name: "h", scope: !3103, file: !2552, line: 303, type: !1636)
!3111 = !DILocalVariable(name: "gap", scope: !3103, file: !2552, line: 304, type: !120)
!3112 = !DILocalVariable(name: "rew", scope: !3103, file: !2552, line: 304, type: !120)
!3113 = !DILocalVariable(name: "padded_sz", scope: !3103, file: !2552, line: 335, type: !2615)
!3114 = !DILocalVariable(name: "c0", scope: !3103, file: !2552, line: 336, type: !1641)
!3115 = !DILocalVariable(name: "mem", scope: !3103, file: !2552, line: 341, type: !1125)
!3116 = !DILocalVariable(name: "end", scope: !3103, file: !2552, line: 345, type: !1631)
!3117 = !DILocalVariable(name: "c", scope: !3103, file: !2552, line: 348, type: !1641)
!3118 = !DILocalVariable(name: "c_end", scope: !3103, file: !2552, line: 349, type: !1641)
!3119 = !DILocation(line: 0, scope: !3103)
!3120 = !DILocation(line: 303, column: 27, scope: !3103)
!3121 = !DILocation(line: 313, column: 16, scope: !3103)
!3122 = !DILocation(line: 313, column: 14, scope: !3103)
!3123 = !DILocation(line: 314, column: 12, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3103, file: !2552, line: 314, column: 6)
!3125 = !DILocation(line: 314, column: 6, scope: !3103)
!3126 = !DILocation(line: 315, column: 9, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3124, file: !2552, line: 314, column: 20)
!3128 = !DILocation(line: 316, column: 9, scope: !3127)
!3129 = !DILocation(line: 318, column: 13, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3131, file: !2552, line: 318, column: 7)
!3131 = distinct !DILexicalBlock(scope: !3124, file: !2552, line: 317, column: 9)
!3132 = !DILocation(line: 318, column: 7, scope: !3131)
!3133 = !DILocation(line: 319, column: 11, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !2552, line: 318, column: 39)
!3135 = !DILocation(line: 319, column: 4, scope: !3134)
!3136 = !DILocation(line: 0, scope: !3124)
!3137 = !DILocation(line: 326, column: 12, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3103, file: !2552, line: 326, column: 6)
!3139 = !DILocation(line: 326, column: 17, scope: !3138)
!3140 = !DILocation(line: 326, column: 20, scope: !3138)
!3141 = !DILocation(line: 326, column: 6, scope: !3103)
!3142 = !DILocation(line: 335, column: 50, scope: !3103)
!3143 = !DILocation(line: 335, column: 58, scope: !3103)
!3144 = !DILocation(line: 335, column: 24, scope: !3103)
!3145 = !DILocation(line: 336, column: 17, scope: !3103)
!3146 = !DILocation(line: 338, column: 9, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3103, file: !2552, line: 338, column: 6)
!3148 = !DILocation(line: 338, column: 6, scope: !3103)
!3149 = !DILocation(line: 341, column: 17, scope: !3103)
!3150 = !DILocation(line: 344, column: 20, scope: !3103)
!3151 = !DILocation(line: 344, column: 8, scope: !3103)
!3152 = !DILocation(line: 344, column: 47, scope: !3103)
!3153 = !DILocation(line: 345, column: 39, scope: !3103)
!3154 = !DILocation(line: 348, column: 16, scope: !3103)
!3155 = !DILocation(line: 349, column: 26, scope: !3103)
!3156 = !DILocation(line: 349, column: 24, scope: !3103)
!3157 = !DILocation(line: 353, column: 8, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3103, file: !2552, line: 353, column: 6)
!3159 = !DILocation(line: 353, column: 6, scope: !3103)
!3160 = !DILocation(line: 354, column: 3, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3158, file: !2552, line: 353, column: 14)
!3162 = !DILocation(line: 355, column: 3, scope: !3161)
!3163 = !DILocation(line: 356, column: 2, scope: !3161)
!3164 = !DILocation(line: 359, column: 6, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3103, file: !2552, line: 359, column: 6)
!3166 = !DILocation(line: 359, column: 24, scope: !3165)
!3167 = !DILocation(line: 359, column: 6, scope: !3103)
!3168 = !DILocation(line: 360, column: 3, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3165, file: !2552, line: 359, column: 33)
!3170 = !DILocation(line: 361, column: 3, scope: !3169)
!3171 = !DILocation(line: 362, column: 2, scope: !3169)
!3172 = !DILocation(line: 364, column: 2, scope: !3103)
!3173 = !DILocation(line: 367, column: 50, scope: !3103)
!3174 = !DILocation(line: 367, column: 30, scope: !3103)
!3175 = !DILocation(line: 367, column: 2, scope: !3103)
!3176 = !DILocation(line: 377, column: 1, scope: !3103)
!3177 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !2552, file: !2552, line: 379, type: !3178, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3180)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!102, !2555, !102, !120, !120}
!3180 = !{!3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3196, !3197}
!3181 = !DILocalVariable(name: "heap", arg: 1, scope: !3177, file: !2552, line: 379, type: !2555)
!3182 = !DILocalVariable(name: "ptr", arg: 2, scope: !3177, file: !2552, line: 379, type: !102)
!3183 = !DILocalVariable(name: "align", arg: 3, scope: !3177, file: !2552, line: 380, type: !120)
!3184 = !DILocalVariable(name: "bytes", arg: 4, scope: !3177, file: !2552, line: 380, type: !120)
!3185 = !DILocalVariable(name: "h", scope: !3177, file: !2552, line: 382, type: !1636)
!3186 = !DILocalVariable(name: "c", scope: !3177, file: !2552, line: 399, type: !1641)
!3187 = !DILocalVariable(name: "rc", scope: !3177, file: !2552, line: 400, type: !1641)
!3188 = !DILocalVariable(name: "align_gap", scope: !3177, file: !2552, line: 401, type: !120)
!3189 = !DILocalVariable(name: "chunks_need", scope: !3177, file: !2552, line: 402, type: !2615)
!3190 = !DILocalVariable(name: "split_size", scope: !3191, file: !2552, line: 435, type: !2615)
!3191 = distinct !DILexicalBlock(scope: !3192, file: !2552, line: 433, column: 61)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !2552, line: 432, column: 13)
!3193 = distinct !DILexicalBlock(scope: !3194, file: !2552, line: 409, column: 13)
!3194 = distinct !DILexicalBlock(scope: !3195, file: !2552, line: 406, column: 13)
!3195 = distinct !DILexicalBlock(scope: !3177, file: !2552, line: 404, column: 6)
!3196 = !DILocalVariable(name: "ptr2", scope: !3177, file: !2552, line: 474, type: !102)
!3197 = !DILocalVariable(name: "prev_size", scope: !3198, file: !2552, line: 477, type: !120)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !2552, line: 476, column: 20)
!3199 = distinct !DILexicalBlock(scope: !3177, file: !2552, line: 476, column: 6)
!3200 = !DILocation(line: 0, scope: !3177)
!3201 = !DILocation(line: 382, column: 27, scope: !3177)
!3202 = !DILocation(line: 385, column: 10, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3177, file: !2552, line: 385, column: 6)
!3204 = !DILocation(line: 385, column: 6, scope: !3177)
!3205 = !DILocation(line: 386, column: 10, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3203, file: !2552, line: 385, column: 19)
!3207 = !DILocation(line: 386, column: 3, scope: !3206)
!3208 = !DILocation(line: 388, column: 12, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3177, file: !2552, line: 388, column: 6)
!3210 = !DILocation(line: 388, column: 6, scope: !3177)
!3211 = !DILocation(line: 389, column: 3, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3209, file: !2552, line: 388, column: 18)
!3213 = !DILocation(line: 390, column: 3, scope: !3212)
!3214 = !DILocation(line: 395, column: 6, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3177, file: !2552, line: 395, column: 6)
!3216 = !DILocation(line: 395, column: 6, scope: !3177)
!3217 = !DILocation(line: 399, column: 16, scope: !3177)
!3218 = !DILocation(line: 400, column: 17, scope: !3177)
!3219 = !DILocation(line: 401, column: 49, scope: !3177)
!3220 = !DILocation(line: 401, column: 36, scope: !3177)
!3221 = !DILocation(line: 402, column: 52, scope: !3177)
!3222 = !DILocation(line: 402, column: 26, scope: !3177)
!3223 = !DILocation(line: 404, column: 6, scope: !3195)
!3224 = !DILocation(line: 404, column: 12, scope: !3195)
!3225 = !DILocation(line: 404, column: 40, scope: !3195)
!3226 = !DILocation(line: 404, column: 31, scope: !3195)
!3227 = !DILocation(line: 404, column: 6, scope: !3177)
!3228 = !DILocation(line: 406, column: 13, scope: !3194)
!3229 = !DILocation(line: 406, column: 30, scope: !3194)
!3230 = !DILocation(line: 406, column: 13, scope: !3195)
!3231 = !DILocation(line: 409, column: 30, scope: !3193)
!3232 = !DILocation(line: 409, column: 13, scope: !3194)
!3233 = !DILocation(line: 417, column: 22, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3193, file: !2552, line: 409, column: 45)
!3235 = !DILocation(line: 417, column: 37, scope: !3234)
!3236 = !DILocation(line: 416, column: 6, scope: !3234)
!3237 = !DILocation(line: 416, column: 22, scope: !3234)
!3238 = !DILocation(line: 420, column: 24, scope: !3234)
!3239 = !DILocation(line: 420, column: 3, scope: !3234)
!3240 = !DILocation(line: 421, column: 3, scope: !3234)
!3241 = !DILocation(line: 422, column: 3, scope: !3234)
!3242 = !DILocation(line: 431, column: 3, scope: !3234)
!3243 = !DILocation(line: 432, column: 14, scope: !3192)
!3244 = !DILocation(line: 432, column: 32, scope: !3192)
!3245 = !DILocation(line: 433, column: 26, scope: !3192)
!3246 = !DILocation(line: 433, column: 24, scope: !3192)
!3247 = !DILocation(line: 433, column: 44, scope: !3192)
!3248 = !DILocation(line: 432, column: 13, scope: !3193)
!3249 = !DILocation(line: 435, column: 38, scope: !3191)
!3250 = !DILocation(line: 0, scope: !3191)
!3251 = !DILocation(line: 442, column: 42, scope: !3191)
!3252 = !DILocation(line: 442, column: 3, scope: !3191)
!3253 = !DILocation(line: 445, column: 3, scope: !3191)
!3254 = !DILocation(line: 447, column: 20, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3191, file: !2552, line: 447, column: 7)
!3256 = !DILocation(line: 447, column: 18, scope: !3255)
!3257 = !DILocation(line: 447, column: 7, scope: !3191)
!3258 = !DILocation(line: 448, column: 27, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !2552, line: 447, column: 39)
!3260 = !DILocation(line: 448, column: 4, scope: !3259)
!3261 = !DILocation(line: 449, column: 4, scope: !3259)
!3262 = !DILocation(line: 450, column: 3, scope: !3259)
!3263 = !DILocation(line: 452, column: 3, scope: !3191)
!3264 = !DILocation(line: 453, column: 3, scope: !3191)
!3265 = !DILocation(line: 474, column: 15, scope: !3177)
!3266 = !DILocation(line: 476, column: 11, scope: !3199)
!3267 = !DILocation(line: 476, column: 6, scope: !3177)
!3268 = !DILocation(line: 477, column: 42, scope: !3198)
!3269 = !DILocation(line: 477, column: 22, scope: !3198)
!3270 = !DILocation(line: 477, column: 60, scope: !3198)
!3271 = !DILocation(line: 0, scope: !3198)
!3272 = !DILocation(line: 479, column: 21, scope: !3198)
!3273 = !DILocation(line: 479, column: 3, scope: !3198)
!3274 = !DILocation(line: 480, column: 3, scope: !3198)
!3275 = !DILocation(line: 481, column: 2, scope: !3198)
!3276 = !DILocation(line: 483, column: 1, scope: !3177)
!3277 = distinct !DISubprogram(name: "sys_heap_init", scope: !2552, file: !2552, line: 485, type: !3278, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1628, retainedNodes: !3280)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{null, !2555, !102, !120}
!3280 = !{!3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290}
!3281 = !DILocalVariable(name: "heap", arg: 1, scope: !3277, file: !2552, line: 485, type: !2555)
!3282 = !DILocalVariable(name: "mem", arg: 2, scope: !3277, file: !2552, line: 485, type: !102)
!3283 = !DILocalVariable(name: "bytes", arg: 3, scope: !3277, file: !2552, line: 485, type: !120)
!3284 = !DILocalVariable(name: "addr", scope: !3277, file: !2552, line: 502, type: !22)
!3285 = !DILocalVariable(name: "end", scope: !3277, file: !2552, line: 503, type: !22)
!3286 = !DILocalVariable(name: "heap_sz", scope: !3277, file: !2552, line: 504, type: !2615)
!3287 = !DILocalVariable(name: "h", scope: !3277, file: !2552, line: 509, type: !1636)
!3288 = !DILocalVariable(name: "nb_buckets", scope: !3277, file: !2552, line: 520, type: !103)
!3289 = !DILocalVariable(name: "chunk0_size", scope: !3277, file: !2552, line: 521, type: !2615)
!3290 = !DILocalVariable(name: "i", scope: !3291, file: !2552, line: 526, type: !103)
!3291 = distinct !DILexicalBlock(scope: !3277, file: !2552, line: 526, column: 2)
!3292 = !DILocation(line: 0, scope: !3277)
!3293 = !DILocation(line: 499, column: 8, scope: !3277)
!3294 = !DILocation(line: 502, column: 19, scope: !3277)
!3295 = !DILocation(line: 503, column: 18, scope: !3277)
!3296 = !DILocation(line: 504, column: 27, scope: !3277)
!3297 = !DILocation(line: 504, column: 35, scope: !3277)
!3298 = !DILocation(line: 509, column: 21, scope: !3277)
!3299 = !DILocation(line: 510, column: 8, scope: !3277)
!3300 = !DILocation(line: 510, column: 13, scope: !3277)
!3301 = !DILocation(line: 511, column: 5, scope: !3277)
!3302 = !DILocation(line: 511, column: 15, scope: !3277)
!3303 = !DILocation(line: 512, column: 5, scope: !3277)
!3304 = !DILocation(line: 512, column: 19, scope: !3277)
!3305 = !DILocation(line: 515, column: 5, scope: !3277)
!3306 = !DILocation(line: 515, column: 16, scope: !3277)
!3307 = !DILocation(line: 516, column: 5, scope: !3277)
!3308 = !DILocation(line: 516, column: 21, scope: !3277)
!3309 = !DILocation(line: 517, column: 5, scope: !3277)
!3310 = !DILocation(line: 517, column: 25, scope: !3277)
!3311 = !DILocation(line: 520, column: 19, scope: !3277)
!3312 = !DILocation(line: 522, column: 21, scope: !3277)
!3313 = !DILocation(line: 521, column: 56, scope: !3277)
!3314 = !DILocation(line: 521, column: 26, scope: !3277)
!3315 = !DILocation(line: 0, scope: !3291)
!3316 = !DILocation(line: 526, column: 20, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3291, file: !2552, line: 526, column: 2)
!3318 = !DILocation(line: 526, column: 2, scope: !3291)
!3319 = !DILocation(line: 531, column: 2, scope: !3277)
!3320 = !DILocation(line: 532, column: 2, scope: !3277)
!3321 = !DILocation(line: 533, column: 2, scope: !3277)
!3322 = !DILocation(line: 536, column: 41, scope: !3277)
!3323 = !DILocation(line: 536, column: 2, scope: !3277)
!3324 = !DILocation(line: 537, column: 2, scope: !3277)
!3325 = !DILocation(line: 540, column: 2, scope: !3277)
!3326 = !DILocation(line: 541, column: 2, scope: !3277)
!3327 = !DILocation(line: 542, column: 2, scope: !3277)
!3328 = !DILocation(line: 544, column: 2, scope: !3277)
!3329 = !DILocation(line: 545, column: 1, scope: !3277)
!3330 = !DILocation(line: 527, column: 17, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3317, file: !2552, line: 526, column: 39)
!3332 = !DILocation(line: 527, column: 22, scope: !3331)
!3333 = !DILocation(line: 526, column: 35, scope: !3317)
!3334 = distinct !{!3334, !3318, !3335}
!3335 = !DILocation(line: 528, column: 2, scope: !3291)
!3336 = distinct !DISubprogram(name: "sys_heap_validate", scope: !134, file: !134, line: 88, type: !3337, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3359)
!3337 = !DISubroutineType(types: !3338)
!3338 = !{!259, !3339}
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 32)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !3341)
!3341 = !{!3342, !3357, !3358}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3340, file: !113, line: 57, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 32)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !142, line: 68, size: 224, elements: !3345)
!3345 = !{!3346, !3347, !3348, !3349, !3350, !3351, !3352}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3344, file: !142, line: 69, baseType: !1640, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3344, file: !142, line: 70, baseType: !1641, size: 32, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3344, file: !142, line: 71, baseType: !137, size: 32, offset: 96)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3344, file: !142, line: 73, baseType: !120, size: 32, offset: 128)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3344, file: !142, line: 74, baseType: !120, size: 32, offset: 160)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3344, file: !142, line: 75, baseType: !120, size: 32, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3344, file: !142, line: 77, baseType: !3353, offset: 224)
!3353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3354, elements: !1652)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !142, line: 64, size: 32, elements: !3355)
!3355 = !{!3356}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3354, file: !142, line: 65, baseType: !1641, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3340, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3340, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!3359 = !{!3360, !3361, !3362, !3363, !3364, !3365, !3371, !3373, !3376, !3377, !3378, !3379, !3380, !3382, !3385}
!3360 = !DILocalVariable(name: "heap", arg: 1, scope: !3336, file: !134, line: 88, type: !3339)
!3361 = !DILocalVariable(name: "h", scope: !3336, file: !134, line: 90, type: !3343)
!3362 = !DILocalVariable(name: "c", scope: !3336, file: !134, line: 91, type: !1641)
!3363 = !DILocalVariable(name: "allocated_bytes", scope: !3336, file: !134, line: 112, type: !120)
!3364 = !DILocalVariable(name: "free_bytes", scope: !3336, file: !134, line: 112, type: !120)
!3365 = !DILocalVariable(name: "stat", scope: !3336, file: !134, line: 113, type: !3366)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_memory_stats", file: !2213, line: 24, size: 96, elements: !3367)
!3367 = !{!3368, !3369, !3370}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "free_bytes", scope: !3366, file: !2213, line: 25, baseType: !120, size: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_bytes", scope: !3366, file: !2213, line: 26, baseType: !120, size: 32, offset: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "max_allocated_bytes", scope: !3366, file: !2213, line: 27, baseType: !120, size: 32, offset: 64)
!3371 = !DILocalVariable(name: "b", scope: !3372, file: !134, line: 127, type: !103)
!3372 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 127, column: 2)
!3373 = !DILocalVariable(name: "c0", scope: !3374, file: !134, line: 128, type: !1641)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !134, line: 127, column: 57)
!3375 = distinct !DILexicalBlock(scope: !3372, file: !134, line: 127, column: 2)
!3376 = !DILocalVariable(name: "n", scope: !3374, file: !134, line: 129, type: !137)
!3377 = !DILocalVariable(name: "empty", scope: !3374, file: !134, line: 141, type: !259)
!3378 = !DILocalVariable(name: "zero", scope: !3374, file: !134, line: 142, type: !259)
!3379 = !DILocalVariable(name: "prev_chunk", scope: !3336, file: !134, line: 159, type: !1641)
!3380 = !DILocalVariable(name: "b", scope: !3381, file: !134, line: 179, type: !103)
!3381 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 179, column: 2)
!3382 = !DILocalVariable(name: "c0", scope: !3383, file: !134, line: 180, type: !1641)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !134, line: 179, column: 57)
!3384 = distinct !DILexicalBlock(scope: !3381, file: !134, line: 179, column: 2)
!3385 = !DILocalVariable(name: "n", scope: !3383, file: !134, line: 181, type: !103)
!3386 = !DILocation(line: 0, scope: !3336)
!3387 = !DILocation(line: 90, column: 27, scope: !3336)
!3388 = !DILocation(line: 96, column: 11, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 96, column: 2)
!3390 = !DILocation(line: 96, column: 32, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3389, file: !134, line: 96, column: 2)
!3392 = !DILocation(line: 96, column: 2, scope: !3389)
!3393 = !DILocation(line: 97, column: 8, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !134, line: 97, column: 7)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !134, line: 96, column: 71)
!3396 = !DILocation(line: 97, column: 7, scope: !3395)
!3397 = !DILocation(line: 96, column: 52, scope: !3391)
!3398 = distinct !{!3398, !3392, !3399}
!3399 = !DILocation(line: 100, column: 2, scope: !3389)
!3400 = !DILocation(line: 0, scope: !3389)
!3401 = !DILocation(line: 101, column: 8, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 101, column: 6)
!3403 = !DILocation(line: 101, column: 6, scope: !3336)
!3404 = !DILocation(line: 112, column: 2, scope: !3336)
!3405 = !DILocation(line: 113, column: 2, scope: !3336)
!3406 = !DILocation(line: 113, column: 26, scope: !3336)
!3407 = !DILocation(line: 115, column: 2, scope: !3336)
!3408 = !DILocation(line: 116, column: 2, scope: !3336)
!3409 = !DILocation(line: 117, column: 12, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 117, column: 6)
!3411 = !DILocation(line: 117, column: 31, scope: !3410)
!3412 = !DILocation(line: 117, column: 28, scope: !3410)
!3413 = !DILocation(line: 117, column: 48, scope: !3410)
!3414 = !DILocation(line: 118, column: 12, scope: !3410)
!3415 = !DILocation(line: 118, column: 26, scope: !3410)
!3416 = !DILocation(line: 118, column: 23, scope: !3410)
!3417 = !DILocation(line: 117, column: 6, scope: !3336)
!3418 = !DILocation(line: 0, scope: !3372)
!3419 = !DILocation(line: 127, column: 40, scope: !3375)
!3420 = !DILocation(line: 127, column: 23, scope: !3375)
!3421 = !DILocation(line: 127, column: 20, scope: !3375)
!3422 = !DILocation(line: 127, column: 2, scope: !3372)
!3423 = !DILocation(line: 128, column: 32, scope: !3374)
!3424 = !DILocation(line: 0, scope: !3374)
!3425 = !DILocation(line: 133, column: 18, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3427, file: !134, line: 133, column: 3)
!3427 = distinct !DILexicalBlock(scope: !3374, file: !134, line: 133, column: 3)
!3428 = !DILocation(line: 133, column: 23, scope: !3426)
!3429 = !DILocation(line: 141, column: 20, scope: !3374)
!3430 = !DILocation(line: 141, column: 36, scope: !3374)
!3431 = !DILocation(line: 141, column: 34, scope: !3374)
!3432 = !DILocation(line: 141, column: 44, scope: !3374)
!3433 = !DILocation(line: 144, column: 7, scope: !3374)
!3434 = !DILocation(line: 133, column: 29, scope: !3426)
!3435 = !DILocation(line: 133, column: 34, scope: !3426)
!3436 = !DILocation(line: 133, column: 3, scope: !3427)
!3437 = !DILocation(line: 135, column: 9, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !134, line: 135, column: 8)
!3439 = distinct !DILexicalBlock(scope: !3426, file: !134, line: 134, column: 40)
!3440 = !DILocation(line: 135, column: 8, scope: !3439)
!3441 = !DILocation(line: 138, column: 4, scope: !3439)
!3442 = !DILocation(line: 134, column: 9, scope: !3426)
!3443 = !DILocation(line: 134, column: 17, scope: !3426)
!3444 = distinct !{!3444, !3436, !3445}
!3445 = !DILocation(line: 139, column: 3, scope: !3427)
!3446 = !DILocation(line: 142, column: 17, scope: !3374)
!3447 = !DILocation(line: 144, column: 13, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3374, file: !134, line: 144, column: 7)
!3449 = !DILocation(line: 148, column: 13, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3374, file: !134, line: 148, column: 7)
!3451 = !DILocation(line: 148, column: 30, scope: !3450)
!3452 = !DILocation(line: 148, column: 35, scope: !3450)
!3453 = !DILocation(line: 148, column: 7, scope: !3374)
!3454 = !DILocation(line: 127, column: 53, scope: !3375)
!3455 = distinct !{!3455, !3422, !3456}
!3456 = !DILocation(line: 151, column: 2, scope: !3372)
!3457 = !DILocation(line: 160, column: 37, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !134, line: 160, column: 2)
!3459 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 160, column: 2)
!3460 = !DILocation(line: 160, column: 11, scope: !3459)
!3461 = !DILocation(line: 160, column: 32, scope: !3458)
!3462 = !DILocation(line: 160, column: 2, scope: !3459)
!3463 = !DILocation(line: 161, column: 8, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !134, line: 161, column: 7)
!3465 = distinct !DILexicalBlock(scope: !3458, file: !134, line: 160, column: 71)
!3466 = !DILocation(line: 161, column: 25, scope: !3464)
!3467 = !DILocation(line: 164, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3465, file: !134, line: 164, column: 7)
!3469 = !DILocation(line: 164, column: 24, scope: !3468)
!3470 = !DILocation(line: 164, column: 7, scope: !3465)
!3471 = !DILocation(line: 169, column: 3, scope: !3465)
!3472 = !DILocation(line: 160, column: 52, scope: !3458)
!3473 = distinct !{!3473, !3462, !3474}
!3474 = !DILocation(line: 170, column: 2, scope: !3459)
!3475 = !DILocation(line: 0, scope: !3459)
!3476 = !DILocation(line: 171, column: 8, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 171, column: 6)
!3478 = !DILocation(line: 171, column: 6, scope: !3336)
!3479 = !DILocation(line: 0, scope: !3381)
!3480 = !DILocation(line: 179, column: 23, scope: !3384)
!3481 = !DILocation(line: 179, column: 20, scope: !3384)
!3482 = !DILocation(line: 179, column: 2, scope: !3381)
!3483 = !DILocation(line: 180, column: 32, scope: !3383)
!3484 = !DILocation(line: 0, scope: !3383)
!3485 = !DILocation(line: 183, column: 10, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3383, file: !134, line: 183, column: 7)
!3487 = !DILocation(line: 183, column: 7, scope: !3383)
!3488 = !DILocation(line: 188, column: 8, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !134, line: 188, column: 8)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !134, line: 187, column: 67)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !134, line: 187, column: 3)
!3492 = distinct !DILexicalBlock(scope: !3383, file: !134, line: 187, column: 3)
!3493 = !DILocation(line: 188, column: 8, scope: !3490)
!3494 = !DILocation(line: 191, column: 4, scope: !3490)
!3495 = !DILocation(line: 187, column: 44, scope: !3491)
!3496 = !DILocation(line: 187, column: 23, scope: !3491)
!3497 = !DILocation(line: 187, column: 3, scope: !3492)
!3498 = distinct !{!3498, !3497, !3499}
!3499 = !DILocation(line: 192, column: 3, scope: !3492)
!3500 = !DILocation(line: 179, column: 40, scope: !3384)
!3501 = !DILocation(line: 179, column: 53, scope: !3384)
!3502 = distinct !{!3502, !3482, !3503}
!3503 = !DILocation(line: 193, column: 2, scope: !3381)
!3504 = !DILocation(line: 198, column: 37, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !134, line: 198, column: 2)
!3506 = distinct !DILexicalBlock(scope: !3336, file: !134, line: 198, column: 2)
!3507 = !DILocation(line: 198, column: 11, scope: !3506)
!3508 = !DILocation(line: 198, column: 32, scope: !3505)
!3509 = !DILocation(line: 198, column: 2, scope: !3506)
!3510 = !DILocation(line: 199, column: 25, scope: !3511)
!3511 = distinct !DILexicalBlock(scope: !3505, file: !134, line: 198, column: 71)
!3512 = !DILocation(line: 199, column: 24, scope: !3511)
!3513 = !DILocation(line: 199, column: 3, scope: !3511)
!3514 = !DILocation(line: 198, column: 52, scope: !3505)
!3515 = distinct !{!3515, !3509, !3516}
!3516 = !DILocation(line: 200, column: 2, scope: !3506)
!3517 = !DILocation(line: 202, column: 1, scope: !3336)
!3518 = distinct !DISubprogram(name: "right_chunk", scope: !142, file: !142, line: 204, type: !3519, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3521)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!1641, !3343, !1641}
!3521 = !{!3522, !3523}
!3522 = !DILocalVariable(name: "h", arg: 1, scope: !3518, file: !142, line: 204, type: !3343)
!3523 = !DILocalVariable(name: "c", arg: 2, scope: !3518, file: !142, line: 204, type: !1641)
!3524 = !DILocation(line: 0, scope: !3518)
!3525 = !DILocation(line: 206, column: 13, scope: !3518)
!3526 = !DILocation(line: 206, column: 11, scope: !3518)
!3527 = !DILocation(line: 206, column: 2, scope: !3518)
!3528 = distinct !DISubprogram(name: "valid_chunk", scope: !134, file: !134, line: 31, type: !3529, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3531)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!259, !3343, !1641}
!3531 = !{!3532, !3533}
!3532 = !DILocalVariable(name: "h", arg: 1, scope: !3528, file: !134, line: 31, type: !3343)
!3533 = !DILocalVariable(name: "c", arg: 2, scope: !3528, file: !134, line: 31, type: !1641)
!3534 = !DILocation(line: 0, scope: !3528)
!3535 = !DILocation(line: 33, column: 2, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !134, line: 33, column: 2)
!3537 = distinct !DILexicalBlock(scope: !3528, file: !134, line: 33, column: 2)
!3538 = !DILocation(line: 33, column: 2, scope: !3537)
!3539 = !DILocation(line: 34, column: 2, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !134, line: 34, column: 2)
!3541 = distinct !DILexicalBlock(scope: !3528, file: !134, line: 34, column: 2)
!3542 = !DILocation(line: 34, column: 2, scope: !3541)
!3543 = !DILocation(line: 35, column: 2, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !134, line: 35, column: 2)
!3545 = distinct !DILexicalBlock(scope: !3528, file: !134, line: 35, column: 2)
!3546 = !DILocation(line: 35, column: 2, scope: !3545)
!3547 = !DILocation(line: 36, column: 2, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !134, line: 36, column: 2)
!3549 = distinct !DILexicalBlock(scope: !3528, file: !134, line: 36, column: 2)
!3550 = !DILocation(line: 36, column: 2, scope: !3549)
!3551 = !DILocation(line: 37, column: 2, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !134, line: 37, column: 2)
!3553 = distinct !DILexicalBlock(scope: !3528, file: !134, line: 37, column: 2)
!3554 = !DILocation(line: 37, column: 2, scope: !3553)
!3555 = !DILocation(line: 38, column: 6, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3528, file: !134, line: 38, column: 6)
!3557 = !DILocation(line: 38, column: 6, scope: !3528)
!3558 = !DILocation(line: 41, column: 3, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !134, line: 41, column: 3)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !134, line: 41, column: 3)
!3561 = distinct !DILexicalBlock(scope: !3556, file: !134, line: 40, column: 9)
!3562 = !DILocation(line: 41, column: 3, scope: !3560)
!3563 = !DILocation(line: 42, column: 3, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !134, line: 42, column: 3)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !134, line: 42, column: 3)
!3566 = !DILocation(line: 42, column: 3, scope: !3565)
!3567 = !DILocation(line: 44, column: 4, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !134, line: 44, column: 4)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !134, line: 44, column: 4)
!3570 = distinct !DILexicalBlock(scope: !3571, file: !134, line: 43, column: 32)
!3571 = distinct !DILexicalBlock(scope: !3561, file: !134, line: 43, column: 7)
!3572 = !DILocation(line: 44, column: 4, scope: !3569)
!3573 = !DILocation(line: 45, column: 4, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !134, line: 45, column: 4)
!3575 = distinct !DILexicalBlock(scope: !3570, file: !134, line: 45, column: 4)
!3576 = !DILocation(line: 45, column: 4, scope: !3575)
!3577 = !DILocation(line: 48, column: 2, scope: !3528)
!3578 = !DILocation(line: 49, column: 1, scope: !3528)
!3579 = distinct !DISubprogram(name: "get_alloc_info", scope: !134, file: !134, line: 71, type: !3580, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3582)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !3343, !1689, !1689}
!3582 = !{!3583, !3584, !3585, !3586}
!3583 = !DILocalVariable(name: "h", arg: 1, scope: !3579, file: !134, line: 71, type: !3343)
!3584 = !DILocalVariable(name: "alloc_bytes", arg: 2, scope: !3579, file: !134, line: 71, type: !1689)
!3585 = !DILocalVariable(name: "free_bytes", arg: 3, scope: !3579, file: !134, line: 72, type: !1689)
!3586 = !DILocalVariable(name: "c", scope: !3579, file: !134, line: 74, type: !1641)
!3587 = !DILocation(line: 0, scope: !3579)
!3588 = !DILocation(line: 76, column: 15, scope: !3579)
!3589 = !DILocation(line: 77, column: 14, scope: !3579)
!3590 = !DILocation(line: 79, column: 11, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3579, file: !134, line: 79, column: 2)
!3592 = !DILocation(line: 79, column: 37, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3591, file: !134, line: 79, column: 2)
!3594 = !DILocation(line: 79, column: 32, scope: !3593)
!3595 = !DILocation(line: 79, column: 2, scope: !3591)
!3596 = !DILocation(line: 80, column: 7, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !134, line: 80, column: 7)
!3598 = distinct !DILexicalBlock(scope: !3593, file: !134, line: 79, column: 71)
!3599 = !DILocation(line: 0, scope: !3597)
!3600 = !DILocation(line: 79, column: 52, scope: !3593)
!3601 = distinct !{!3601, !3595, !3602}
!3602 = !DILocation(line: 85, column: 2, scope: !3591)
!3603 = !DILocation(line: 86, column: 1, scope: !3579)
!3604 = distinct !DISubprogram(name: "sys_heap_runtime_stats_get", scope: !134, file: !134, line: 416, type: !3605, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3608)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!103, !3339, !3607}
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 32)
!3608 = !{!3609, !3610}
!3609 = !DILocalVariable(name: "heap", arg: 1, scope: !3604, file: !134, line: 416, type: !3339)
!3610 = !DILocalVariable(name: "stats", arg: 2, scope: !3604, file: !134, line: 417, type: !3607)
!3611 = !DILocation(line: 0, scope: !3604)
!3612 = !DILocation(line: 419, column: 12, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3604, file: !134, line: 419, column: 6)
!3614 = !DILocation(line: 419, column: 21, scope: !3613)
!3615 = !DILocation(line: 423, column: 28, scope: !3604)
!3616 = !DILocation(line: 423, column: 34, scope: !3604)
!3617 = !DILocation(line: 423, column: 9, scope: !3604)
!3618 = !DILocation(line: 423, column: 20, scope: !3604)
!3619 = !DILocation(line: 424, column: 33, scope: !3604)
!3620 = !DILocation(line: 424, column: 39, scope: !3604)
!3621 = !DILocation(line: 424, column: 9, scope: !3604)
!3622 = !DILocation(line: 424, column: 25, scope: !3604)
!3623 = !DILocation(line: 425, column: 37, scope: !3604)
!3624 = !DILocation(line: 425, column: 43, scope: !3604)
!3625 = !DILocation(line: 425, column: 9, scope: !3604)
!3626 = !DILocation(line: 425, column: 29, scope: !3604)
!3627 = !DILocation(line: 427, column: 2, scope: !3604)
!3628 = !DILocation(line: 428, column: 1, scope: !3604)
!3629 = distinct !DISubprogram(name: "bucket_idx", scope: !142, file: !142, line: 250, type: !3630, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3632)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!103, !3343, !2615}
!3632 = !{!3633, !3634, !3635}
!3633 = !DILocalVariable(name: "h", arg: 1, scope: !3629, file: !142, line: 250, type: !3343)
!3634 = !DILocalVariable(name: "sz", arg: 2, scope: !3629, file: !142, line: 250, type: !2615)
!3635 = !DILocalVariable(name: "usable_sz", scope: !3629, file: !142, line: 252, type: !32)
!3636 = !DILocation(line: 0, scope: !3629)
!3637 = !DILocation(line: 253, column: 14, scope: !3629)
!3638 = !DILocation(line: 253, column: 12, scope: !3629)
!3639 = !DILocation(line: 253, column: 2, scope: !3629)
!3640 = distinct !DISubprogram(name: "set_chunk_used", scope: !142, file: !142, line: 147, type: !3641, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3643)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{null, !3343, !1641, !259}
!3643 = !{!3644, !3645, !3646, !3647, !3648}
!3644 = !DILocalVariable(name: "h", arg: 1, scope: !3640, file: !142, line: 147, type: !3343)
!3645 = !DILocalVariable(name: "c", arg: 2, scope: !3640, file: !142, line: 147, type: !1641)
!3646 = !DILocalVariable(name: "used", arg: 3, scope: !3640, file: !142, line: 147, type: !259)
!3647 = !DILocalVariable(name: "buf", scope: !3640, file: !142, line: 149, type: !153)
!3648 = !DILocalVariable(name: "cmem", scope: !3640, file: !142, line: 150, type: !102)
!3649 = !DILocation(line: 0, scope: !3640)
!3650 = !DILocation(line: 149, column: 22, scope: !3640)
!3651 = !DILocation(line: 0, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !142, line: 159, column: 7)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !142, line: 158, column: 9)
!3654 = distinct !DILexicalBlock(scope: !3640, file: !142, line: 152, column: 6)
!3655 = !DILocation(line: 159, column: 7, scope: !3653)
!3656 = !DILocation(line: 165, column: 1, scope: !3640)
!3657 = distinct !DISubprogram(name: "next_free_chunk", scope: !142, file: !142, line: 182, type: !3519, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3658)
!3658 = !{!3659, !3660}
!3659 = !DILocalVariable(name: "h", arg: 1, scope: !3657, file: !142, line: 182, type: !3343)
!3660 = !DILocalVariable(name: "c", arg: 2, scope: !3657, file: !142, line: 182, type: !1641)
!3661 = !DILocation(line: 0, scope: !3657)
!3662 = !DILocation(line: 184, column: 9, scope: !3657)
!3663 = !DILocation(line: 184, column: 2, scope: !3657)
!3664 = distinct !DISubprogram(name: "chunk_used", scope: !142, file: !142, line: 137, type: !3529, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3665)
!3665 = !{!3666, !3667}
!3666 = !DILocalVariable(name: "h", arg: 1, scope: !3664, file: !142, line: 137, type: !3343)
!3667 = !DILocalVariable(name: "c", arg: 2, scope: !3664, file: !142, line: 137, type: !1641)
!3668 = !DILocation(line: 0, scope: !3664)
!3669 = !DILocation(line: 139, column: 9, scope: !3664)
!3670 = !DILocation(line: 139, column: 42, scope: !3664)
!3671 = !DILocation(line: 139, column: 2, scope: !3664)
!3672 = distinct !DISubprogram(name: "left_chunk", scope: !142, file: !142, line: 199, type: !3519, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3673)
!3673 = !{!3674, !3675}
!3674 = !DILocalVariable(name: "h", arg: 1, scope: !3672, file: !142, line: 199, type: !3343)
!3675 = !DILocalVariable(name: "c", arg: 2, scope: !3672, file: !142, line: 199, type: !1641)
!3676 = !DILocation(line: 0, scope: !3672)
!3677 = !DILocation(line: 201, column: 13, scope: !3672)
!3678 = !DILocation(line: 201, column: 11, scope: !3672)
!3679 = !DILocation(line: 201, column: 2, scope: !3672)
!3680 = distinct !DISubprogram(name: "chunk_field", scope: !142, file: !142, line: 107, type: !3681, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3683)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!1641, !3343, !1641, !141}
!3683 = !{!3684, !3685, !3686, !3687, !3688}
!3684 = !DILocalVariable(name: "h", arg: 1, scope: !3680, file: !142, line: 107, type: !3343)
!3685 = !DILocalVariable(name: "c", arg: 2, scope: !3680, file: !142, line: 107, type: !1641)
!3686 = !DILocalVariable(name: "f", arg: 3, scope: !3680, file: !142, line: 108, type: !141)
!3687 = !DILocalVariable(name: "buf", scope: !3680, file: !142, line: 110, type: !153)
!3688 = !DILocalVariable(name: "cmem", scope: !3680, file: !142, line: 111, type: !102)
!3689 = !DILocation(line: 0, scope: !3680)
!3690 = !DILocation(line: 110, column: 22, scope: !3680)
!3691 = !DILocation(line: 111, column: 15, scope: !3680)
!3692 = !DILocation(line: 116, column: 11, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !142, line: 115, column: 9)
!3694 = distinct !DILexicalBlock(scope: !3680, file: !142, line: 113, column: 6)
!3695 = !DILocation(line: 116, column: 10, scope: !3693)
!3696 = !DILocation(line: 118, column: 1, scope: !3680)
!3697 = distinct !DISubprogram(name: "chunk_buf", scope: !142, file: !142, line: 101, type: !3698, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3700)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!153, !3343}
!3700 = !{!3701}
!3701 = !DILocalVariable(name: "h", arg: 1, scope: !3697, file: !142, line: 101, type: !3343)
!3702 = !DILocation(line: 0, scope: !3697)
!3703 = !DILocation(line: 104, column: 9, scope: !3697)
!3704 = !DILocation(line: 104, column: 2, scope: !3697)
!3705 = distinct !DISubprogram(name: "chunk_size", scope: !142, file: !142, line: 142, type: !3706, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3708)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!2615, !3343, !1641}
!3708 = !{!3709, !3710}
!3709 = !DILocalVariable(name: "h", arg: 1, scope: !3705, file: !142, line: 142, type: !3343)
!3710 = !DILocalVariable(name: "c", arg: 2, scope: !3705, file: !142, line: 142, type: !1641)
!3711 = !DILocation(line: 0, scope: !3705)
!3712 = !DILocation(line: 144, column: 9, scope: !3705)
!3713 = !DILocation(line: 144, column: 42, scope: !3705)
!3714 = !DILocation(line: 144, column: 2, scope: !3705)
!3715 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !142, file: !142, line: 245, type: !3716, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3718)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!120, !3343, !2615}
!3718 = !{!3719, !3720}
!3719 = !DILocalVariable(name: "h", arg: 1, scope: !3715, file: !142, line: 245, type: !3343)
!3720 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !3715, file: !142, line: 245, type: !2615)
!3721 = !DILocation(line: 0, scope: !3715)
!3722 = !DILocation(line: 247, column: 20, scope: !3715)
!3723 = !DILocation(line: 247, column: 33, scope: !3715)
!3724 = !DILocation(line: 247, column: 2, scope: !3715)
!3725 = distinct !DISubprogram(name: "in_bounds", scope: !134, file: !134, line: 23, type: !3529, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3726)
!3726 = !{!3727, !3728}
!3727 = !DILocalVariable(name: "h", arg: 1, scope: !3725, file: !134, line: 23, type: !3343)
!3728 = !DILocalVariable(name: "c", arg: 2, scope: !3725, file: !134, line: 23, type: !1641)
!3729 = !DILocation(line: 0, scope: !3725)
!3730 = !DILocation(line: 25, column: 2, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !134, line: 25, column: 2)
!3732 = distinct !DILexicalBlock(scope: !3725, file: !134, line: 25, column: 2)
!3733 = !DILocation(line: 25, column: 2, scope: !3732)
!3734 = !DILocation(line: 26, column: 2, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !134, line: 26, column: 2)
!3736 = distinct !DILexicalBlock(scope: !3725, file: !134, line: 26, column: 2)
!3737 = !DILocation(line: 26, column: 2, scope: !3736)
!3738 = !DILocation(line: 27, column: 2, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3740, file: !134, line: 27, column: 2)
!3740 = distinct !DILexicalBlock(scope: !3725, file: !134, line: 27, column: 2)
!3741 = !DILocation(line: 29, column: 1, scope: !3725)
!3742 = distinct !DISubprogram(name: "prev_free_chunk", scope: !142, file: !142, line: 177, type: !3519, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3743)
!3743 = !{!3744, !3745}
!3744 = !DILocalVariable(name: "h", arg: 1, scope: !3742, file: !142, line: 177, type: !3343)
!3745 = !DILocalVariable(name: "c", arg: 2, scope: !3742, file: !142, line: 177, type: !1641)
!3746 = !DILocation(line: 0, scope: !3742)
!3747 = !DILocation(line: 179, column: 9, scope: !3742)
!3748 = !DILocation(line: 179, column: 2, scope: !3742)
!3749 = distinct !DISubprogram(name: "sys_heap_stress", scope: !134, file: !134, line: 300, type: !3750, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3765)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{null, !3752, !3755, !102, !120, !137, !102, !120, !103, !3758}
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 32)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!102, !102, !120}
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 32)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{null, !102, !102}
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 32)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_result", file: !113, line: 62, size: 192, elements: !3760)
!3760 = !{!3761, !3762, !3763, !3764}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "total_allocs", scope: !3759, file: !113, line: 63, baseType: !137, size: 32)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "successful_allocs", scope: !3759, file: !113, line: 64, baseType: !137, size: 32, offset: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "total_frees", scope: !3759, file: !113, line: 65, baseType: !137, size: 32, offset: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "accumulated_in_use_bytes", scope: !3759, file: !113, line: 66, baseType: !163, size: 64, offset: 128)
!3765 = !{!3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3792, !3794, !3799, !3800, !3802, !3803}
!3766 = !DILocalVariable(name: "alloc_fn", arg: 1, scope: !3749, file: !134, line: 300, type: !3752)
!3767 = !DILocalVariable(name: "free_fn", arg: 2, scope: !3749, file: !134, line: 301, type: !3755)
!3768 = !DILocalVariable(name: "arg", arg: 3, scope: !3749, file: !134, line: 302, type: !102)
!3769 = !DILocalVariable(name: "total_bytes", arg: 4, scope: !3749, file: !134, line: 302, type: !120)
!3770 = !DILocalVariable(name: "op_count", arg: 5, scope: !3749, file: !134, line: 303, type: !137)
!3771 = !DILocalVariable(name: "scratch_mem", arg: 6, scope: !3749, file: !134, line: 304, type: !102)
!3772 = !DILocalVariable(name: "scratch_bytes", arg: 7, scope: !3749, file: !134, line: 304, type: !120)
!3773 = !DILocalVariable(name: "target_percent", arg: 8, scope: !3749, file: !134, line: 305, type: !103)
!3774 = !DILocalVariable(name: "result", arg: 9, scope: !3749, file: !134, line: 306, type: !3758)
!3775 = !DILocalVariable(name: "sr", scope: !3749, file: !134, line: 308, type: !3776)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_rec", file: !134, line: 204, size: 288, elements: !3777)
!3777 = !{!3778, !3779, !3780, !3781, !3782, !3788, !3789, !3790, !3791}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fn", scope: !3776, file: !134, line: 205, baseType: !3752, size: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "free_fn", scope: !3776, file: !134, line: 206, baseType: !3755, size: 32, offset: 32)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3776, file: !134, line: 207, baseType: !102, size: 32, offset: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "total_bytes", scope: !3776, file: !134, line: 208, baseType: !120, size: 32, offset: 96)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3776, file: !134, line: 209, baseType: !3783, size: 32, offset: 128)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 32)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_stress_block", file: !134, line: 216, size: 64, elements: !3785)
!3785 = !{!3786, !3787}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3784, file: !134, line: 217, baseType: !102, size: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "sz", scope: !3784, file: !134, line: 218, baseType: !120, size: 32, offset: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "nblocks", scope: !3776, file: !134, line: 210, baseType: !120, size: 32, offset: 160)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_alloced", scope: !3776, file: !134, line: 211, baseType: !120, size: 32, offset: 192)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_alloced", scope: !3776, file: !134, line: 212, baseType: !120, size: 32, offset: 224)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "target_percent", scope: !3776, file: !134, line: 213, baseType: !137, size: 32, offset: 256)
!3792 = !DILocalVariable(name: "i", scope: !3793, file: !134, line: 320, type: !137)
!3793 = distinct !DILexicalBlock(scope: !3749, file: !134, line: 320, column: 2)
!3794 = !DILocalVariable(name: "sz", scope: !3795, file: !134, line: 322, type: !120)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !134, line: 321, column: 31)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !134, line: 321, column: 7)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !134, line: 320, column: 42)
!3798 = distinct !DILexicalBlock(scope: !3793, file: !134, line: 320, column: 2)
!3799 = !DILocalVariable(name: "p", scope: !3795, file: !134, line: 323, type: !102)
!3800 = !DILocalVariable(name: "b", scope: !3801, file: !134, line: 334, type: !103)
!3801 = distinct !DILexicalBlock(scope: !3796, file: !134, line: 333, column: 10)
!3802 = !DILocalVariable(name: "p", scope: !3801, file: !134, line: 335, type: !102)
!3803 = !DILocalVariable(name: "sz", scope: !3801, file: !134, line: 336, type: !120)
!3804 = !DILocation(line: 0, scope: !3749)
!3805 = !DILocation(line: 308, column: 2, scope: !3749)
!3806 = !DILocation(line: 308, column: 27, scope: !3749)
!3807 = !DILocation(line: 308, column: 32, scope: !3749)
!3808 = !DILocation(line: 314, column: 34, scope: !3749)
!3809 = !DILocation(line: 318, column: 12, scope: !3749)
!3810 = !DILocation(line: 0, scope: !3793)
!3811 = !DILocation(line: 320, column: 25, scope: !3798)
!3812 = !DILocation(line: 320, column: 2, scope: !3793)
!3813 = !DILocation(line: 346, column: 1, scope: !3749)
!3814 = !DILocation(line: 321, column: 7, scope: !3796)
!3815 = !DILocation(line: 321, column: 7, scope: !3797)
!3816 = !DILocation(line: 322, column: 16, scope: !3795)
!3817 = !DILocation(line: 0, scope: !3795)
!3818 = !DILocation(line: 323, column: 14, scope: !3795)
!3819 = !DILocation(line: 325, column: 24, scope: !3795)
!3820 = !DILocation(line: 326, column: 10, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3795, file: !134, line: 326, column: 8)
!3822 = !DILocation(line: 326, column: 8, scope: !3795)
!3823 = !DILocation(line: 327, column: 30, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3821, file: !134, line: 326, column: 19)
!3825 = !DILocation(line: 328, column: 34, scope: !3824)
!3826 = !DILocation(line: 328, column: 38, scope: !3824)
!3827 = !DILocation(line: 329, column: 34, scope: !3824)
!3828 = !DILocation(line: 329, column: 37, scope: !3824)
!3829 = !DILocation(line: 330, column: 22, scope: !3824)
!3830 = !DILocation(line: 331, column: 22, scope: !3824)
!3831 = !DILocation(line: 332, column: 4, scope: !3824)
!3832 = !DILocation(line: 334, column: 12, scope: !3801)
!3833 = !DILocation(line: 0, scope: !3801)
!3834 = !DILocation(line: 335, column: 27, scope: !3801)
!3835 = !DILocation(line: 336, column: 29, scope: !3801)
!3836 = !DILocation(line: 338, column: 23, scope: !3801)
!3837 = !DILocation(line: 339, column: 4, scope: !3801)
!3838 = !DILocation(line: 339, column: 47, scope: !3801)
!3839 = !DILocation(line: 339, column: 19, scope: !3801)
!3840 = !DILocation(line: 340, column: 21, scope: !3801)
!3841 = !DILocation(line: 341, column: 21, scope: !3801)
!3842 = !DILocation(line: 342, column: 4, scope: !3801)
!3843 = !DILocation(line: 344, column: 42, scope: !3797)
!3844 = !DILocation(line: 344, column: 39, scope: !3797)
!3845 = !DILocation(line: 344, column: 36, scope: !3797)
!3846 = !DILocation(line: 320, column: 38, scope: !3798)
!3847 = distinct !{!3847, !3812, !3848}
!3848 = !DILocation(line: 345, column: 2, scope: !3793)
!3849 = distinct !DISubprogram(name: "rand_alloc_choice", scope: !134, file: !134, line: 234, type: !3850, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3853)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!259, !3852}
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 32)
!3853 = !{!3854, !3855, !3859, !3860}
!3854 = !DILocalVariable(name: "sr", arg: 1, scope: !3849, file: !134, line: 234, type: !3852)
!3855 = !DILocalVariable(name: "full_pct", scope: !3856, file: !134, line: 259, type: !137)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !134, line: 241, column: 9)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !134, line: 239, column: 13)
!3858 = distinct !DILexicalBlock(scope: !3849, file: !134, line: 237, column: 6)
!3859 = !DILocalVariable(name: "target", scope: !3856, file: !134, line: 260, type: !137)
!3860 = !DILocalVariable(name: "free_chance", scope: !3856, file: !134, line: 261, type: !137)
!3861 = !DILocation(line: 0, scope: !3849)
!3862 = !DILocation(line: 237, column: 10, scope: !3858)
!3863 = !DILocation(line: 237, column: 25, scope: !3858)
!3864 = !DILocation(line: 237, column: 6, scope: !3849)
!3865 = !DILocation(line: 239, column: 39, scope: !3857)
!3866 = !DILocation(line: 239, column: 32, scope: !3857)
!3867 = !DILocation(line: 239, column: 13, scope: !3858)
!3868 = !DILocation(line: 259, column: 34, scope: !3856)
!3869 = !DILocation(line: 259, column: 28, scope: !3856)
!3870 = !DILocation(line: 259, column: 55, scope: !3856)
!3871 = !DILocation(line: 259, column: 49, scope: !3856)
!3872 = !DILocation(line: 0, scope: !3856)
!3873 = !DILocation(line: 260, column: 25, scope: !3856)
!3874 = !DILocation(line: 263, column: 16, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3856, file: !134, line: 263, column: 7)
!3876 = !DILocation(line: 263, column: 7, scope: !3856)
!3877 = !DILocation(line: 264, column: 42, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3875, file: !134, line: 263, column: 38)
!3879 = !DILocation(line: 264, column: 27, scope: !3878)
!3880 = !DILocation(line: 265, column: 3, scope: !3878)
!3881 = !DILocation(line: 267, column: 10, scope: !3856)
!3882 = !DILocation(line: 267, column: 19, scope: !3856)
!3883 = !DILocation(line: 0, scope: !3858)
!3884 = !DILocation(line: 269, column: 1, scope: !3849)
!3885 = distinct !DISubprogram(name: "rand_alloc_size", scope: !134, file: !134, line: 274, type: !3886, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3888)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!120, !3852}
!3888 = !{!3889, !3890}
!3889 = !DILocalVariable(name: "sr", arg: 1, scope: !3885, file: !134, line: 274, type: !3852)
!3890 = !DILocalVariable(name: "scale", scope: !3885, file: !134, line: 281, type: !103)
!3891 = !DILocation(line: 0, scope: !3885)
!3892 = !DILocation(line: 281, column: 32, scope: !3885)
!3893 = !DILocation(line: 281, column: 18, scope: !3885)
!3894 = !DILocation(line: 283, column: 9, scope: !3885)
!3895 = !DILocation(line: 283, column: 20, scope: !3885)
!3896 = !DILocation(line: 283, column: 18, scope: !3885)
!3897 = !DILocation(line: 283, column: 2, scope: !3885)
!3898 = distinct !DISubprogram(name: "rand_free_choice", scope: !134, file: !134, line: 287, type: !3886, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3899)
!3899 = !{!3900}
!3900 = !DILocalVariable(name: "sr", arg: 1, scope: !3898, file: !134, line: 287, type: !3852)
!3901 = !DILocation(line: 0, scope: !3898)
!3902 = !DILocation(line: 289, column: 9, scope: !3898)
!3903 = !DILocation(line: 289, column: 24, scope: !3898)
!3904 = !DILocation(line: 289, column: 18, scope: !3898)
!3905 = !DILocation(line: 289, column: 2, scope: !3898)
!3906 = !DILocation(line: 229, column: 10, scope: !133)
!3907 = !DILocation(line: 229, column: 16, scope: !133)
!3908 = !DILocation(line: 229, column: 40, scope: !133)
!3909 = !DILocation(line: 229, column: 8, scope: !133)
!3910 = !DILocation(line: 231, column: 26, scope: !133)
!3911 = !DILocation(line: 231, column: 9, scope: !133)
!3912 = !DILocation(line: 231, column: 2, scope: !133)
!3913 = distinct !DISubprogram(name: "heap_print_info", scope: !134, file: !134, line: 351, type: !3914, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !3916)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{null, !3343, !259}
!3916 = !{!3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3929, !3930, !3931, !3934}
!3917 = !DILocalVariable(name: "h", arg: 1, scope: !3913, file: !134, line: 351, type: !3343)
!3918 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !3913, file: !134, line: 351, type: !259)
!3919 = !DILocalVariable(name: "i", scope: !3913, file: !134, line: 353, type: !103)
!3920 = !DILocalVariable(name: "nb_buckets", scope: !3913, file: !134, line: 353, type: !103)
!3921 = !DILocalVariable(name: "free_bytes", scope: !3913, file: !134, line: 354, type: !120)
!3922 = !DILocalVariable(name: "allocated_bytes", scope: !3913, file: !134, line: 354, type: !120)
!3923 = !DILocalVariable(name: "total", scope: !3913, file: !134, line: 354, type: !120)
!3924 = !DILocalVariable(name: "overhead", scope: !3913, file: !134, line: 354, type: !120)
!3925 = !DILocalVariable(name: "first", scope: !3926, file: !134, line: 363, type: !1641)
!3926 = distinct !DILexicalBlock(scope: !3927, file: !134, line: 362, column: 35)
!3927 = distinct !DILexicalBlock(scope: !3928, file: !134, line: 362, column: 2)
!3928 = distinct !DILexicalBlock(scope: !3913, file: !134, line: 362, column: 2)
!3929 = !DILocalVariable(name: "largest", scope: !3926, file: !134, line: 364, type: !2615)
!3930 = !DILocalVariable(name: "count", scope: !3926, file: !134, line: 365, type: !103)
!3931 = !DILocalVariable(name: "curr", scope: !3932, file: !134, line: 368, type: !1641)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !134, line: 367, column: 14)
!3933 = distinct !DILexicalBlock(scope: !3926, file: !134, line: 367, column: 7)
!3934 = !DILocalVariable(name: "c", scope: !3935, file: !134, line: 384, type: !1641)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !134, line: 384, column: 3)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !134, line: 382, column: 19)
!3937 = distinct !DILexicalBlock(scope: !3913, file: !134, line: 382, column: 6)
!3938 = !DILocation(line: 0, scope: !3913)
!3939 = !DILocation(line: 353, column: 39, scope: !3913)
!3940 = !DILocation(line: 353, column: 22, scope: !3913)
!3941 = !DILocation(line: 353, column: 50, scope: !3913)
!3942 = !DILocation(line: 354, column: 2, scope: !3913)
!3943 = !DILocation(line: 357, column: 9, scope: !3913)
!3944 = !DILocation(line: 356, column: 2, scope: !3913)
!3945 = !DILocation(line: 359, column: 2, scope: !3913)
!3946 = !DILocation(line: 362, column: 16, scope: !3927)
!3947 = !DILocation(line: 362, column: 2, scope: !3928)
!3948 = !DILocation(line: 363, column: 35, scope: !3926)
!3949 = !DILocation(line: 0, scope: !3926)
!3950 = !DILocation(line: 367, column: 7, scope: !3933)
!3951 = !DILocation(line: 367, column: 7, scope: !3926)
!3952 = !DILocation(line: 0, scope: !3932)
!3953 = !DILocation(line: 370, column: 10, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3932, file: !134, line: 369, column: 7)
!3955 = !DILocation(line: 371, column: 15, scope: !3954)
!3956 = !DILocation(line: 372, column: 12, scope: !3954)
!3957 = !DILocation(line: 373, column: 18, scope: !3932)
!3958 = !DILocation(line: 373, column: 4, scope: !3954)
!3959 = distinct !{!3959, !3960, !3961}
!3960 = !DILocation(line: 369, column: 4, scope: !3932)
!3961 = !DILocation(line: 373, column: 26, scope: !3932)
!3962 = !DILocation(line: 377, column: 23, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !134, line: 375, column: 14)
!3964 = distinct !DILexicalBlock(scope: !3926, file: !134, line: 375, column: 7)
!3965 = !DILocation(line: 378, column: 20, scope: !3963)
!3966 = !DILocation(line: 376, column: 4, scope: !3963)
!3967 = !DILocation(line: 379, column: 3, scope: !3963)
!3968 = !DILocation(line: 362, column: 31, scope: !3927)
!3969 = distinct !{!3969, !3947, !3970}
!3970 = !DILocation(line: 380, column: 2, scope: !3928)
!3971 = !DILocation(line: 382, column: 6, scope: !3913)
!3972 = !DILocation(line: 383, column: 3, scope: !3936)
!3973 = !DILocation(line: 0, scope: !3935)
!3974 = !DILocation(line: 384, column: 8, scope: !3935)
!3975 = !DILocation(line: 387, column: 11, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !134, line: 384, column: 50)
!3977 = distinct !DILexicalBlock(scope: !3935, file: !134, line: 384, column: 3)
!3978 = !DILocation(line: 390, column: 11, scope: !3976)
!3979 = !DILocation(line: 391, column: 11, scope: !3976)
!3980 = !DILocation(line: 392, column: 11, scope: !3976)
!3981 = !DILocation(line: 385, column: 4, scope: !3976)
!3982 = !DILocation(line: 393, column: 16, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3976, file: !134, line: 393, column: 8)
!3984 = !DILocation(line: 393, column: 10, scope: !3983)
!3985 = !DILocation(line: 393, column: 8, scope: !3976)
!3986 = !DILocation(line: 384, column: 31, scope: !3977)
!3987 = !DILocation(line: 384, column: 3, scope: !3977)
!3988 = distinct !{!3988, !3989, !3990}
!3989 = !DILocation(line: 384, column: 3, scope: !3935)
!3990 = !DILocation(line: 396, column: 3, scope: !3935)
!3991 = !DILocation(line: 399, column: 2, scope: !3913)
!3992 = !DILocation(line: 401, column: 13, scope: !3913)
!3993 = !DILocation(line: 401, column: 23, scope: !3913)
!3994 = !DILocation(line: 401, column: 36, scope: !3913)
!3995 = !DILocation(line: 402, column: 21, scope: !3913)
!3996 = !DILocation(line: 402, column: 34, scope: !3913)
!3997 = !DILocation(line: 402, column: 32, scope: !3913)
!3998 = !DILocation(line: 405, column: 15, scope: !3913)
!3999 = !DILocation(line: 405, column: 33, scope: !3913)
!4000 = !DILocation(line: 405, column: 26, scope: !3913)
!4001 = !DILocation(line: 405, column: 37, scope: !3913)
!4002 = !DILocation(line: 405, column: 45, scope: !3913)
!4003 = !DILocation(line: 403, column: 2, scope: !3913)
!4004 = !DILocation(line: 407, column: 1, scope: !3913)
!4005 = distinct !DISubprogram(name: "sys_heap_print_info", scope: !134, file: !134, line: 409, type: !4006, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4008)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{null, !3339, !259}
!4008 = !{!4009, !4010}
!4009 = !DILocalVariable(name: "heap", arg: 1, scope: !4005, file: !134, line: 409, type: !3339)
!4010 = !DILocalVariable(name: "dump_chunks", arg: 2, scope: !4005, file: !134, line: 409, type: !259)
!4011 = !DILocation(line: 0, scope: !4005)
!4012 = !DILocation(line: 411, column: 24, scope: !4005)
!4013 = !DILocation(line: 411, column: 2, scope: !4005)
!4014 = !DILocation(line: 412, column: 1, scope: !4005)
!4015 = distinct !DISubprogram(name: "sys_heap_runtime_stats_reset_max", scope: !134, file: !134, line: 430, type: !4016, scopeLine: 431, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !138, retainedNodes: !4018)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!103, !3339}
!4018 = !{!4019}
!4019 = !DILocalVariable(name: "heap", arg: 1, scope: !4015, file: !134, line: 430, type: !3339)
!4020 = !DILocation(line: 0, scope: !4015)
!4021 = !DILocation(line: 432, column: 11, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4015, file: !134, line: 432, column: 6)
!4023 = !DILocation(line: 432, column: 6, scope: !4015)
!4024 = !DILocation(line: 436, column: 42, scope: !4015)
!4025 = !DILocation(line: 436, column: 48, scope: !4015)
!4026 = !DILocation(line: 436, column: 14, scope: !4015)
!4027 = !DILocation(line: 436, column: 34, scope: !4015)
!4028 = !DILocation(line: 438, column: 2, scope: !4015)
!4029 = !DILocation(line: 439, column: 1, scope: !4015)
!4030 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !1658, file: !1658, line: 1338, type: !4031, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4039)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!103, !2282, !102, !247, !4033, !137}
!4033 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2248, line: 99, baseType: !4034)
!4034 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2248, line: 40, baseType: !4035)
!4035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1658, baseType: !4036)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4037)
!4037 = !{!4038}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4036, file: !1658, baseType: !102, size: 32)
!4039 = !{!4040, !4041, !4042, !4043, !4044, !4045, !4049, !4050, !4051, !4053, !4058, !4103, !4106, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4118, !4119, !4120, !4124, !4127, !4129, !4132, !4133, !4134, !4139, !4145, !4148, !4152, !4158, !4162, !4165, !4167, !4170}
!4040 = !DILocalVariable(name: "out", arg: 1, scope: !4030, file: !1658, line: 1338, type: !2282)
!4041 = !DILocalVariable(name: "ctx", arg: 2, scope: !4030, file: !1658, line: 1338, type: !102)
!4042 = !DILocalVariable(name: "fp", arg: 3, scope: !4030, file: !1658, line: 1338, type: !247)
!4043 = !DILocalVariable(name: "ap", arg: 4, scope: !4030, file: !1658, line: 1339, type: !4033)
!4044 = !DILocalVariable(name: "flags", arg: 5, scope: !4030, file: !1658, line: 1339, type: !137)
!4045 = !DILocalVariable(name: "buf", scope: !4030, file: !1658, line: 1341, type: !4046)
!4046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 176, elements: !4047)
!4047 = !{!4048}
!4048 = !DISubrange(count: 22)
!4049 = !DILocalVariable(name: "count", scope: !4030, file: !1658, line: 1342, type: !120)
!4050 = !DILocalVariable(name: "sint", scope: !4030, file: !1658, line: 1343, type: !1677)
!4051 = !DILocalVariable(name: "tagged_ap", scope: !4030, file: !1658, line: 1345, type: !4052)
!4052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!4053 = !DILocalVariable(name: "rc", scope: !4054, file: !1658, line: 1377, type: !103)
!4054 = distinct !DILexicalBlock(scope: !4055, file: !1658, line: 1377, column: 4)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !1658, line: 1376, column: 19)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1376, column: 7)
!4057 = distinct !DILexicalBlock(scope: !4030, file: !1658, line: 1375, column: 19)
!4058 = !DILocalVariable(name: "state", scope: !4057, file: !1658, line: 1395, type: !4059)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4030, file: !1658, line: 1392, size: 192, elements: !4060)
!4060 = !{!4061, !4071}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4059, file: !1658, line: 1393, baseType: !4062, size: 64)
!4062 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !1658, line: 166, size: 64, elements: !4063)
!4063 = !{!4064, !4065, !4066, !4068, !4070}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4062, file: !1658, line: 168, baseType: !1677, size: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4062, file: !1658, line: 171, baseType: !1680, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4062, file: !1658, line: 174, baseType: !4067, size: 64)
!4067 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4062, file: !1658, line: 177, baseType: !4069, size: 64)
!4069 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4062, file: !1658, line: 180, baseType: !102, size: 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4059, file: !1658, line: 1394, baseType: !4072, size: 96, offset: 64)
!4072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !1658, line: 189, size: 96, elements: !4073)
!4073 = !{!4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4098}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4072, file: !1658, line: 191, baseType: !259, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4072, file: !1658, line: 194, baseType: !259, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4072, file: !1658, line: 197, baseType: !259, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4072, file: !1658, line: 200, baseType: !259, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4072, file: !1658, line: 203, baseType: !259, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4072, file: !1658, line: 206, baseType: !259, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4072, file: !1658, line: 209, baseType: !259, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4072, file: !1658, line: 212, baseType: !259, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4072, file: !1658, line: 219, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4072, file: !1658, line: 222, baseType: !259, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4072, file: !1658, line: 229, baseType: !259, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4072, file: !1658, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4072, file: !1658, line: 238, baseType: !259, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4072, file: !1658, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4072, file: !1658, line: 244, baseType: !259, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4072, file: !1658, line: 247, baseType: !259, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4072, file: !1658, line: 252, baseType: !259, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4072, file: !1658, line: 257, baseType: !259, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4072, file: !1658, line: 260, baseType: !257, size: 8, offset: 24)
!4093 = !DIDerivedType(tag: DW_TAG_member, scope: !4072, file: !1658, line: 262, baseType: !4094, size: 32, offset: 32)
!4094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4072, file: !1658, line: 262, size: 32, elements: !4095)
!4095 = !{!4096, !4097}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4094, file: !1658, line: 267, baseType: !103, size: 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4094, file: !1658, line: 289, baseType: !103, size: 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, scope: !4072, file: !1658, line: 292, baseType: !4099, size: 32, offset: 64)
!4099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4072, file: !1658, line: 292, size: 32, elements: !4100)
!4100 = !{!4101, !4102}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4099, file: !1658, line: 297, baseType: !103, size: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4099, file: !1658, line: 306, baseType: !103, size: 32)
!4103 = !DILocalVariable(name: "conv", scope: !4057, file: !1658, line: 1400, type: !4104)
!4104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4105)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 32)
!4106 = !DILocalVariable(name: "value", scope: !4057, file: !1658, line: 1401, type: !4107)
!4107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4108)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 32)
!4109 = !DILocalVariable(name: "sp", scope: !4057, file: !1658, line: 1402, type: !247)
!4110 = !DILocalVariable(name: "width", scope: !4057, file: !1658, line: 1403, type: !103)
!4111 = !DILocalVariable(name: "precision", scope: !4057, file: !1658, line: 1404, type: !103)
!4112 = !DILocalVariable(name: "bps", scope: !4057, file: !1658, line: 1405, type: !247)
!4113 = !DILocalVariable(name: "bpe", scope: !4057, file: !1658, line: 1406, type: !247)
!4114 = !DILocalVariable(name: "sign", scope: !4057, file: !1658, line: 1407, type: !109)
!4115 = !DILocalVariable(name: "arg", scope: !4116, file: !1658, line: 1432, type: !103)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !1658, line: 1431, column: 24)
!4117 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1431, column: 7)
!4118 = !DILocalVariable(name: "specifier_cat", scope: !4057, file: !1658, line: 1468, type: !1657)
!4119 = !DILocalVariable(name: "length_mod", scope: !4057, file: !1658, line: 1470, type: !1665)
!4120 = !DILocalVariable(name: "rc", scope: !4121, file: !1658, line: 1575, type: !103)
!4121 = distinct !DILexicalBlock(scope: !4122, file: !1658, line: 1575, column: 4)
!4122 = distinct !DILexicalBlock(scope: !4123, file: !1658, line: 1574, column: 43)
!4123 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1574, column: 7)
!4124 = !DILocalVariable(name: "rc", scope: !4125, file: !1658, line: 1584, type: !103)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1584, column: 4)
!4126 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1582, column: 28)
!4127 = !DILocalVariable(name: "len", scope: !4128, file: !1658, line: 1589, type: !120)
!4128 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1586, column: 13)
!4129 = !DILocalVariable(name: "len", scope: !4130, file: !1658, line: 1641, type: !120)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !1658, line: 1640, column: 24)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1640, column: 8)
!4132 = !DILocalVariable(name: "nj_len", scope: !4057, file: !1658, line: 1722, type: !120)
!4133 = !DILocalVariable(name: "pad_len", scope: !4057, file: !1658, line: 1723, type: !103)
!4134 = !DILocalVariable(name: "pad", scope: !4135, file: !1658, line: 1751, type: !109)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !1658, line: 1750, column: 26)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !1658, line: 1750, column: 8)
!4137 = distinct !DILexicalBlock(scope: !4138, file: !1658, line: 1747, column: 18)
!4138 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1747, column: 7)
!4139 = !DILocalVariable(name: "rc", scope: !4140, file: !1658, line: 1758, type: !103)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !1658, line: 1758, column: 7)
!4141 = distinct !DILexicalBlock(scope: !4142, file: !1658, line: 1757, column: 21)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !1658, line: 1757, column: 10)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !1658, line: 1756, column: 26)
!4144 = distinct !DILexicalBlock(scope: !4135, file: !1658, line: 1756, column: 9)
!4145 = !DILocalVariable(name: "rc", scope: !4146, file: !1658, line: 1765, type: !103)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !1658, line: 1765, column: 6)
!4147 = distinct !DILexicalBlock(scope: !4135, file: !1658, line: 1764, column: 25)
!4148 = !DILocalVariable(name: "rc", scope: !4149, file: !1658, line: 1774, type: !103)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !1658, line: 1774, column: 4)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !1658, line: 1773, column: 18)
!4151 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1773, column: 7)
!4152 = !DILocalVariable(name: "rc", scope: !4153, file: !1658, line: 1819, type: !103)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !1658, line: 1819, column: 5)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !1658, line: 1818, column: 44)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !1658, line: 1818, column: 8)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !1658, line: 1817, column: 10)
!4157 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1777, column: 7)
!4158 = !DILocalVariable(name: "rc", scope: !4159, file: !1658, line: 1823, type: !103)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !1658, line: 1823, column: 5)
!4160 = distinct !DILexicalBlock(scope: !4161, file: !1658, line: 1822, column: 26)
!4161 = distinct !DILexicalBlock(scope: !4156, file: !1658, line: 1822, column: 8)
!4162 = !DILocalVariable(name: "rc", scope: !4163, file: !1658, line: 1828, type: !103)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !1658, line: 1828, column: 5)
!4164 = distinct !DILexicalBlock(scope: !4156, file: !1658, line: 1827, column: 26)
!4165 = !DILocalVariable(name: "rc", scope: !4166, file: !1658, line: 1831, type: !103)
!4166 = distinct !DILexicalBlock(scope: !4156, file: !1658, line: 1831, column: 4)
!4167 = !DILocalVariable(name: "rc", scope: !4168, file: !1658, line: 1836, type: !103)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !1658, line: 1836, column: 4)
!4169 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1835, column: 21)
!4170 = !DILabel(scope: !4126, name: "prec_int_pad0", file: !1658, line: 1634)
!4171 = !DILocation(line: 0, scope: !4030)
!4172 = !DILocation(line: 1341, column: 2, scope: !4030)
!4173 = !DILocation(line: 1341, column: 7, scope: !4030)
!4174 = !DILocation(line: 1375, column: 2, scope: !4030)
!4175 = !DILocation(line: 1342, column: 9, scope: !4030)
!4176 = !DILocation(line: 1375, column: 9, scope: !4030)
!4177 = !DILocation(line: 1377, column: 4, scope: !4054)
!4178 = !DILocation(line: 0, scope: !4054)
!4179 = !DILocation(line: 1377, column: 4, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4054, file: !1658, line: 1377, column: 4)
!4181 = distinct !{!4181, !4174, !4182}
!4182 = !DILocation(line: 1839, column: 2, scope: !4030)
!4183 = !DILocation(line: 1392, column: 3, scope: !4057)
!4184 = !DILocation(line: 1395, column: 5, scope: !4057)
!4185 = !DILocation(line: 0, scope: !4057)
!4186 = !DILocation(line: 1409, column: 8, scope: !4057)
!4187 = !DILocation(line: 1414, column: 13, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1414, column: 7)
!4189 = !DILocation(line: 1414, column: 7, scope: !4057)
!4190 = !DILocation(line: 1415, column: 12, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4188, file: !1658, line: 1414, column: 25)
!4192 = !DILocation(line: 1417, column: 14, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4191, file: !1658, line: 1417, column: 8)
!4194 = !DILocation(line: 1417, column: 8, scope: !4191)
!4195 = !DILocation(line: 1418, column: 21, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !1658, line: 1417, column: 19)
!4197 = !DILocation(line: 1419, column: 13, scope: !4196)
!4198 = !DILocation(line: 1420, column: 4, scope: !4196)
!4199 = !DILocation(line: 1421, column: 20, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4188, file: !1658, line: 1421, column: 14)
!4201 = !DILocation(line: 1421, column: 14, scope: !4188)
!4202 = !DILocation(line: 1431, column: 13, scope: !4117)
!4203 = !DILocation(line: 1431, column: 7, scope: !4057)
!4204 = !DILocation(line: 1432, column: 14, scope: !4116)
!4205 = !DILocation(line: 0, scope: !4116)
!4206 = !DILocation(line: 1434, column: 12, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4116, file: !1658, line: 1434, column: 8)
!4208 = !DILocation(line: 1434, column: 8, scope: !4116)
!4209 = !DILocation(line: 1435, column: 24, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4207, file: !1658, line: 1434, column: 17)
!4211 = !DILocation(line: 1436, column: 4, scope: !4210)
!4212 = !DILocation(line: 1439, column: 20, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4117, file: !1658, line: 1439, column: 14)
!4214 = !DILocation(line: 1439, column: 14, scope: !4117)
!4215 = !DILocation(line: 1469, column: 37, scope: !4057)
!4216 = !DILocation(line: 1448, column: 20, scope: !4057)
!4217 = !DILocation(line: 1449, column: 22, scope: !4057)
!4218 = !DILocation(line: 1471, column: 34, scope: !4057)
!4219 = !DILocation(line: 1478, column: 7, scope: !4057)
!4220 = !DILocation(line: 1479, column: 4, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !1658, line: 1478, column: 40)
!4222 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1478, column: 7)
!4223 = !DILocation(line: 1484, column: 19, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4221, file: !1658, line: 1479, column: 24)
!4225 = !DILocation(line: 1484, column: 17, scope: !4224)
!4226 = !DILocation(line: 1485, column: 5, scope: !4224)
!4227 = !DILocation(line: 1492, column: 20, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !1658, line: 1491, column: 12)
!4229 = distinct !DILexicalBlock(scope: !4224, file: !1658, line: 1487, column: 9)
!4230 = !DILocation(line: 1492, column: 18, scope: !4228)
!4231 = !DILocation(line: 1494, column: 5, scope: !4224)
!4232 = !DILocation(line: 1497, column: 23, scope: !4224)
!4233 = !DILocation(line: 1496, column: 17, scope: !4224)
!4234 = !DILocation(line: 1498, column: 5, scope: !4224)
!4235 = !DILocation(line: 1501, column: 23, scope: !4224)
!4236 = !DILocation(line: 1500, column: 17, scope: !4224)
!4237 = !DILocation(line: 1502, column: 5, scope: !4224)
!4238 = !DILocation(line: 1513, column: 23, scope: !4224)
!4239 = !DILocation(line: 1513, column: 6, scope: !4224)
!4240 = !DILocation(line: 1512, column: 17, scope: !4224)
!4241 = !DILocation(line: 1514, column: 5, scope: !4224)
!4242 = !DILocation(line: 0, scope: !4224)
!4243 = !DILocation(line: 1516, column: 8, scope: !4221)
!4244 = !DILocation(line: 1517, column: 19, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4246, file: !1658, line: 1516, column: 33)
!4246 = distinct !DILexicalBlock(scope: !4221, file: !1658, line: 1516, column: 8)
!4247 = !DILocation(line: 1517, column: 17, scope: !4245)
!4248 = !DILocation(line: 1518, column: 4, scope: !4245)
!4249 = !DILocation(line: 1519, column: 19, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !1658, line: 1518, column: 39)
!4251 = distinct !DILexicalBlock(scope: !4246, file: !1658, line: 1518, column: 15)
!4252 = !DILocation(line: 1519, column: 17, scope: !4250)
!4253 = !DILocation(line: 1520, column: 4, scope: !4250)
!4254 = !DILocation(line: 1522, column: 4, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !1658, line: 1521, column: 47)
!4256 = distinct !DILexicalBlock(scope: !4222, file: !1658, line: 1521, column: 14)
!4257 = !DILocation(line: 1527, column: 19, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4255, file: !1658, line: 1522, column: 24)
!4259 = !DILocation(line: 1527, column: 17, scope: !4258)
!4260 = !DILocation(line: 1528, column: 5, scope: !4258)
!4261 = !DILocation(line: 0, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4258, file: !1658, line: 1530, column: 9)
!4263 = !DILocation(line: 1540, column: 23, scope: !4258)
!4264 = !DILocation(line: 1539, column: 17, scope: !4258)
!4265 = !DILocation(line: 1542, column: 5, scope: !4258)
!4266 = !DILocation(line: 1545, column: 23, scope: !4258)
!4267 = !DILocation(line: 1544, column: 17, scope: !4258)
!4268 = !DILocation(line: 1547, column: 5, scope: !4258)
!4269 = !DILocation(line: 1551, column: 23, scope: !4258)
!4270 = !DILocation(line: 1551, column: 6, scope: !4258)
!4271 = !DILocation(line: 1550, column: 17, scope: !4258)
!4272 = !DILocation(line: 1552, column: 5, scope: !4258)
!4273 = !DILocation(line: 0, scope: !4258)
!4274 = !DILocation(line: 1554, column: 8, scope: !4255)
!4275 = !DILocation(line: 1555, column: 19, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !1658, line: 1554, column: 33)
!4277 = distinct !DILexicalBlock(scope: !4255, file: !1658, line: 1554, column: 8)
!4278 = !DILocation(line: 1555, column: 17, scope: !4276)
!4279 = !DILocation(line: 1556, column: 4, scope: !4276)
!4280 = !DILocation(line: 1557, column: 19, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !1658, line: 1556, column: 39)
!4282 = distinct !DILexicalBlock(scope: !4277, file: !1658, line: 1556, column: 15)
!4283 = !DILocation(line: 1557, column: 17, scope: !4281)
!4284 = !DILocation(line: 1558, column: 4, scope: !4281)
!4285 = !DILocation(line: 0, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !1658, line: 1560, column: 8)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !1658, line: 1559, column: 45)
!4288 = distinct !DILexicalBlock(scope: !4256, file: !1658, line: 1559, column: 14)
!4289 = !DILocation(line: 1566, column: 17, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !1658, line: 1565, column: 46)
!4291 = distinct !DILexicalBlock(scope: !4288, file: !1658, line: 1565, column: 14)
!4292 = !DILocation(line: 1566, column: 15, scope: !4290)
!4293 = !DILocation(line: 1567, column: 3, scope: !4290)
!4294 = !DILocation(line: 1574, column: 21, scope: !4123)
!4295 = !DILocation(line: 1575, column: 4, scope: !4121)
!4296 = !DILocation(line: 0, scope: !4121)
!4297 = !DILocation(line: 1575, column: 4, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4121, file: !1658, line: 1575, column: 4)
!4299 = !DILocation(line: 1582, column: 17, scope: !4057)
!4300 = !DILocation(line: 1582, column: 3, scope: !4057)
!4301 = !DILocation(line: 1584, column: 4, scope: !4125)
!4302 = !DILocation(line: 0, scope: !4125)
!4303 = !DILocation(line: 1584, column: 4, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4125, file: !1658, line: 1584, column: 4)
!4305 = !DILocation(line: 1587, column: 31, scope: !4128)
!4306 = !DILocation(line: 1591, column: 18, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4128, file: !1658, line: 1591, column: 8)
!4308 = !DILocation(line: 1591, column: 8, scope: !4128)
!4309 = !DILocation(line: 1592, column: 11, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4307, file: !1658, line: 1591, column: 24)
!4311 = !DILocation(line: 0, scope: !4128)
!4312 = !DILocation(line: 1593, column: 4, scope: !4310)
!4313 = !DILocation(line: 1594, column: 11, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4307, file: !1658, line: 1593, column: 11)
!4315 = !DILocation(line: 1604, column: 51, scope: !4126)
!4316 = !DILocation(line: 1604, column: 13, scope: !4126)
!4317 = !DILocation(line: 1604, column: 11, scope: !4126)
!4318 = !DILocation(line: 1606, column: 4, scope: !4126)
!4319 = !DILocation(line: 1609, column: 14, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1609, column: 8)
!4321 = !DILocation(line: 1609, column: 8, scope: !4126)
!4322 = !DILocation(line: 1619, column: 18, scope: !4126)
!4323 = !DILocation(line: 1620, column: 13, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1620, column: 8)
!4325 = !DILocation(line: 1620, column: 8, scope: !4126)
!4326 = !DILocation(line: 1622, column: 36, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !1658, line: 1620, column: 18)
!4328 = !DILocation(line: 1622, column: 17, scope: !4327)
!4329 = !DILocation(line: 1623, column: 4, scope: !4327)
!4330 = !DILocation(line: 1632, column: 29, scope: !4126)
!4331 = !DILocation(line: 1632, column: 10, scope: !4126)
!4332 = !DILocation(line: 1632, column: 4, scope: !4126)
!4333 = !DILocation(line: 1407, column: 8, scope: !4057)
!4334 = !DILocation(line: 0, scope: !4126)
!4335 = !DILocation(line: 1634, column: 3, scope: !4126)
!4336 = !DILocation(line: 1640, column: 18, scope: !4131)
!4337 = !DILocation(line: 1640, column: 8, scope: !4126)
!4338 = !DILocation(line: 1729, column: 13, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1729, column: 7)
!4340 = !DILocation(line: 1641, column: 22, scope: !4130)
!4341 = !DILocation(line: 0, scope: !4130)
!4342 = !DILocation(line: 1646, column: 21, scope: !4130)
!4343 = !DILocation(line: 1649, column: 13, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4130, file: !1658, line: 1649, column: 9)
!4345 = !DILocation(line: 1649, column: 9, scope: !4130)
!4346 = !DILocation(line: 1650, column: 35, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4344, file: !1658, line: 1649, column: 34)
!4348 = !DILocation(line: 1650, column: 23, scope: !4347)
!4349 = !DILocation(line: 1651, column: 5, scope: !4347)
!4350 = !DILocation(line: 1660, column: 15, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1660, column: 8)
!4352 = !DILocation(line: 1660, column: 19, scope: !4351)
!4353 = !DILocation(line: 1660, column: 8, scope: !4126)
!4354 = !DILocation(line: 1661, column: 23, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4351, file: !1658, line: 1660, column: 28)
!4356 = !DILocation(line: 1661, column: 11, scope: !4355)
!4357 = !DILocation(line: 1665, column: 22, scope: !4355)
!4358 = !DILocation(line: 1666, column: 21, scope: !4355)
!4359 = !DILocation(line: 1668, column: 5, scope: !4355)
!4360 = !DILocation(line: 1677, column: 30, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !1658, line: 1676, column: 49)
!4362 = distinct !DILexicalBlock(scope: !4126, file: !1658, line: 1676, column: 8)
!4363 = !DILocation(line: 1677, column: 5, scope: !4361)
!4364 = !DILocation(line: 1680, column: 4, scope: !4126)
!4365 = !DILocation(line: 0, scope: !4307)
!4366 = !DILocation(line: 1597, column: 14, scope: !4128)
!4367 = !DILocation(line: 1699, column: 11, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1699, column: 7)
!4369 = !DILocation(line: 1699, column: 7, scope: !4057)
!4370 = !DILocation(line: 1725, column: 7, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1725, column: 7)
!4372 = !DILocation(line: 1725, column: 12, scope: !4371)
!4373 = !DILocation(line: 1747, column: 13, scope: !4138)
!4374 = !DILocation(line: 1747, column: 7, scope: !4057)
!4375 = !DILocation(line: 1722, column: 24, scope: !4057)
!4376 = !DILocation(line: 1725, column: 7, scope: !4057)
!4377 = !DILocation(line: 1729, column: 7, scope: !4057)
!4378 = !DILocation(line: 1736, column: 13, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4057, file: !1658, line: 1736, column: 7)
!4380 = !DILocation(line: 1735, column: 19, scope: !4057)
!4381 = !DILocation(line: 1736, column: 7, scope: !4057)
!4382 = !DILocation(line: 1748, column: 10, scope: !4137)
!4383 = !DILocation(line: 1750, column: 15, scope: !4136)
!4384 = !DILocation(line: 1750, column: 8, scope: !4137)
!4385 = !DILocation(line: 0, scope: !4135)
!4386 = !DILocation(line: 1756, column: 15, scope: !4144)
!4387 = !DILocation(line: 1756, column: 9, scope: !4135)
!4388 = !DILocation(line: 1758, column: 7, scope: !4140)
!4389 = !DILocation(line: 0, scope: !4140)
!4390 = !DILocation(line: 1758, column: 7, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4140, file: !1658, line: 1758, column: 7)
!4392 = !DILocation(line: 1764, column: 5, scope: !4135)
!4393 = !DILocation(line: 0, scope: !4137)
!4394 = !DILocation(line: 1764, column: 20, scope: !4135)
!4395 = !DILocation(line: 1764, column: 17, scope: !4135)
!4396 = !DILocation(line: 1765, column: 6, scope: !4146)
!4397 = !DILocation(line: 0, scope: !4146)
!4398 = !DILocation(line: 1765, column: 6, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4146, file: !1658, line: 1765, column: 6)
!4400 = distinct !{!4400, !4392, !4401}
!4401 = !DILocation(line: 1766, column: 5, scope: !4135)
!4402 = !DILocation(line: 1773, column: 12, scope: !4151)
!4403 = !DILocation(line: 1773, column: 7, scope: !4057)
!4404 = !DILocation(line: 1773, column: 7, scope: !4151)
!4405 = !DILocation(line: 1774, column: 4, scope: !4149)
!4406 = !DILocation(line: 0, scope: !4149)
!4407 = !DILocation(line: 1774, column: 4, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4149, file: !1658, line: 1774, column: 4)
!4409 = !DILocation(line: 1818, column: 8, scope: !4155)
!4410 = !DILocation(line: 1818, column: 27, scope: !4155)
!4411 = !DILocation(line: 1818, column: 25, scope: !4155)
!4412 = !DILocation(line: 1818, column: 8, scope: !4156)
!4413 = !DILocation(line: 1819, column: 5, scope: !4153)
!4414 = !DILocation(line: 0, scope: !4153)
!4415 = !DILocation(line: 1819, column: 5, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4153, file: !1658, line: 1819, column: 5)
!4417 = !DILocation(line: 1822, column: 14, scope: !4161)
!4418 = !DILocation(line: 1822, column: 8, scope: !4156)
!4419 = !DILocation(line: 1823, column: 5, scope: !4159)
!4420 = !DILocation(line: 0, scope: !4159)
!4421 = !DILocation(line: 1823, column: 5, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4159, file: !1658, line: 1823, column: 5)
!4423 = !DILocation(line: 1826, column: 20, scope: !4156)
!4424 = !DILocation(line: 1827, column: 4, scope: !4156)
!4425 = !DILocation(line: 0, scope: !4156)
!4426 = !DILocation(line: 1827, column: 21, scope: !4156)
!4427 = !DILocation(line: 1827, column: 18, scope: !4156)
!4428 = !DILocation(line: 1828, column: 5, scope: !4163)
!4429 = !DILocation(line: 0, scope: !4163)
!4430 = !DILocation(line: 1828, column: 5, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4163, file: !1658, line: 1828, column: 5)
!4432 = distinct !{!4432, !4424, !4433}
!4433 = !DILocation(line: 1829, column: 4, scope: !4156)
!4434 = !DILocation(line: 1831, column: 4, scope: !4166)
!4435 = !DILocation(line: 0, scope: !4166)
!4436 = !DILocation(line: 1831, column: 4, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4166, file: !1658, line: 1831, column: 4)
!4438 = !DILocation(line: 1835, column: 16, scope: !4057)
!4439 = !DILocation(line: 1835, column: 3, scope: !4057)
!4440 = !DILocation(line: 1836, column: 4, scope: !4168)
!4441 = !DILocation(line: 0, scope: !4168)
!4442 = !DILocation(line: 1836, column: 4, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4168, file: !1658, line: 1836, column: 4)
!4444 = !DILocation(line: 1837, column: 4, scope: !4169)
!4445 = distinct !{!4445, !4439, !4446}
!4446 = !DILocation(line: 1838, column: 3, scope: !4057)
!4447 = !DILocation(line: 1844, column: 1, scope: !4030)
!4448 = distinct !DISubprogram(name: "extract_conversion", scope: !1658, file: !1658, line: 642, type: !4449, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4451)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!247, !4105, !247}
!4451 = !{!4452, !4453}
!4452 = !DILocalVariable(name: "conv", arg: 1, scope: !4448, file: !1658, line: 642, type: !4105)
!4453 = !DILocalVariable(name: "sp", arg: 2, scope: !4448, file: !1658, line: 643, type: !247)
!4454 = !DILocation(line: 0, scope: !4448)
!4455 = !DILocation(line: 645, column: 10, scope: !4448)
!4456 = !DILocation(line: 653, column: 2, scope: !4448)
!4457 = !DILocation(line: 654, column: 6, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4448, file: !1658, line: 654, column: 6)
!4459 = !DILocation(line: 654, column: 10, scope: !4458)
!4460 = !DILocation(line: 654, column: 6, scope: !4448)
!4461 = !DILocation(line: 655, column: 24, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4458, file: !1658, line: 654, column: 18)
!4463 = !DILocation(line: 655, column: 19, scope: !4462)
!4464 = !DILocation(line: 656, column: 3, scope: !4462)
!4465 = !DILocation(line: 659, column: 7, scope: !4448)
!4466 = !DILocation(line: 660, column: 7, scope: !4448)
!4467 = !DILocation(line: 661, column: 7, scope: !4448)
!4468 = !DILocation(line: 662, column: 7, scope: !4448)
!4469 = !DILocation(line: 663, column: 7, scope: !4448)
!4470 = !DILocation(line: 665, column: 2, scope: !4448)
!4471 = !DILocation(line: 666, column: 1, scope: !4448)
!4472 = distinct !DISubprogram(name: "outs", scope: !1658, file: !1658, line: 1319, type: !4473, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4475)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!103, !2282, !102, !247, !247}
!4475 = !{!4476, !4477, !4478, !4479, !4480, !4481}
!4476 = !DILocalVariable(name: "out", arg: 1, scope: !4472, file: !1658, line: 1319, type: !2282)
!4477 = !DILocalVariable(name: "ctx", arg: 2, scope: !4472, file: !1658, line: 1320, type: !102)
!4478 = !DILocalVariable(name: "sp", arg: 3, scope: !4472, file: !1658, line: 1321, type: !247)
!4479 = !DILocalVariable(name: "ep", arg: 4, scope: !4472, file: !1658, line: 1322, type: !247)
!4480 = !DILocalVariable(name: "count", scope: !4472, file: !1658, line: 1324, type: !120)
!4481 = !DILocalVariable(name: "rc", scope: !4482, file: !1658, line: 1327, type: !103)
!4482 = distinct !DILexicalBlock(scope: !4472, file: !1658, line: 1326, column: 45)
!4483 = !DILocation(line: 0, scope: !4472)
!4484 = !DILocation(line: 1326, column: 2, scope: !4472)
!4485 = !DILocation(line: 1324, column: 9, scope: !4472)
!4486 = !DILocation(line: 1326, column: 13, scope: !4472)
!4487 = !DILocation(line: 1326, column: 19, scope: !4472)
!4488 = !DILocation(line: 1327, column: 21, scope: !4482)
!4489 = !DILocation(line: 1326, column: 36, scope: !4472)
!4490 = !DILocation(line: 1326, column: 39, scope: !4472)
!4491 = !DILocation(line: 1327, column: 24, scope: !4482)
!4492 = !DILocation(line: 1327, column: 16, scope: !4482)
!4493 = !DILocation(line: 1327, column: 12, scope: !4482)
!4494 = !DILocation(line: 0, scope: !4482)
!4495 = !DILocation(line: 1329, column: 10, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4482, file: !1658, line: 1329, column: 7)
!4497 = !DILocation(line: 1329, column: 7, scope: !4482)
!4498 = distinct !{!4498, !4484, !4499}
!4499 = !DILocation(line: 1333, column: 2, scope: !4472)
!4500 = !DILocation(line: 1336, column: 1, scope: !4472)
!4501 = distinct !DISubprogram(name: "encode_uint", scope: !1658, file: !1658, line: 788, type: !4502, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4504)
!4502 = !DISubroutineType(types: !4503)
!4503 = !{!1131, !1680, !4105, !1131, !247}
!4504 = !{!4505, !4506, !4507, !4508, !4509, !4510, !4512, !4513}
!4505 = !DILocalVariable(name: "value", arg: 1, scope: !4501, file: !1658, line: 788, type: !1680)
!4506 = !DILocalVariable(name: "conv", arg: 2, scope: !4501, file: !1658, line: 789, type: !4105)
!4507 = !DILocalVariable(name: "bps", arg: 3, scope: !4501, file: !1658, line: 790, type: !1131)
!4508 = !DILocalVariable(name: "bpe", arg: 4, scope: !4501, file: !1658, line: 791, type: !247)
!4509 = !DILocalVariable(name: "upcase", scope: !4501, file: !1658, line: 793, type: !259)
!4510 = !DILocalVariable(name: "radix", scope: !4501, file: !1658, line: 794, type: !4511)
!4511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4512 = !DILocalVariable(name: "bp", scope: !4501, file: !1658, line: 795, type: !1131)
!4513 = !DILocalVariable(name: "lsv", scope: !4514, file: !1658, line: 798, type: !32)
!4514 = distinct !DILexicalBlock(scope: !4501, file: !1658, line: 797, column: 5)
!4515 = !DILocation(line: 0, scope: !4501)
!4516 = !DILocation(line: 793, column: 35, scope: !4501)
!4517 = !DILocation(line: 793, column: 24, scope: !4501)
!4518 = !DILocation(line: 793, column: 16, scope: !4501)
!4519 = !DILocation(line: 794, column: 29, scope: !4501)
!4520 = !DILocation(line: 795, column: 24, scope: !4501)
!4521 = !DILocation(line: 795, column: 17, scope: !4501)
!4522 = !DILocation(line: 797, column: 2, scope: !4501)
!4523 = !DILocation(line: 802, column: 9, scope: !4514)
!4524 = !DILocation(line: 798, column: 22, scope: !4514)
!4525 = !DILocation(line: 0, scope: !4514)
!4526 = !DILocation(line: 800, column: 16, scope: !4514)
!4527 = !DILocation(line: 800, column: 11, scope: !4514)
!4528 = !DILocation(line: 800, column: 4, scope: !4514)
!4529 = !DILocation(line: 800, column: 9, scope: !4514)
!4530 = !DILocation(line: 803, column: 18, scope: !4501)
!4531 = !DILocation(line: 803, column: 24, scope: !4501)
!4532 = !DILocation(line: 803, column: 2, scope: !4514)
!4533 = distinct !{!4533, !4522, !4534}
!4534 = !DILocation(line: 803, column: 37, scope: !4501)
!4535 = !DILocation(line: 808, column: 12, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4501, file: !1658, line: 808, column: 6)
!4537 = !DILocation(line: 808, column: 6, scope: !4501)
!4538 = !DILocation(line: 809, column: 7, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4536, file: !1658, line: 808, column: 23)
!4540 = !DILocation(line: 813, column: 3, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !1658, line: 811, column: 27)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !1658, line: 811, column: 14)
!4543 = distinct !DILexicalBlock(scope: !4539, file: !1658, line: 809, column: 7)
!4544 = !DILocation(line: 0, scope: !4543)
!4545 = !DILocation(line: 818, column: 2, scope: !4501)
!4546 = distinct !DISubprogram(name: "store_count", scope: !1658, file: !1658, line: 1280, type: !4547, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4551)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{null, !4549, !102, !103}
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 32)
!4550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4072)
!4551 = !{!4552, !4553, !4554}
!4552 = !DILocalVariable(name: "conv", arg: 1, scope: !4546, file: !1658, line: 1280, type: !4549)
!4553 = !DILocalVariable(name: "dp", arg: 2, scope: !4546, file: !1658, line: 1281, type: !102)
!4554 = !DILocalVariable(name: "count", arg: 3, scope: !4546, file: !1658, line: 1282, type: !103)
!4555 = !DILocation(line: 0, scope: !4546)
!4556 = !DILocation(line: 1284, column: 38, scope: !4546)
!4557 = !DILocation(line: 1284, column: 2, scope: !4546)
!4558 = !DILocation(line: 1286, column: 4, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4546, file: !1658, line: 1284, column: 50)
!4560 = !DILocation(line: 1286, column: 14, scope: !4559)
!4561 = !DILocation(line: 1287, column: 3, scope: !4559)
!4562 = !DILocation(line: 1289, column: 24, scope: !4559)
!4563 = !DILocation(line: 1289, column: 22, scope: !4559)
!4564 = !DILocation(line: 1290, column: 3, scope: !4559)
!4565 = !DILocation(line: 1292, column: 18, scope: !4559)
!4566 = !DILocation(line: 1292, column: 4, scope: !4559)
!4567 = !DILocation(line: 1292, column: 16, scope: !4559)
!4568 = !DILocation(line: 1293, column: 3, scope: !4559)
!4569 = !DILocation(line: 1295, column: 4, scope: !4559)
!4570 = !DILocation(line: 1295, column: 15, scope: !4559)
!4571 = !DILocation(line: 1296, column: 3, scope: !4559)
!4572 = !DILocation(line: 1298, column: 22, scope: !4559)
!4573 = !DILocation(line: 1298, column: 4, scope: !4559)
!4574 = !DILocation(line: 1298, column: 20, scope: !4559)
!4575 = !DILocation(line: 1299, column: 3, scope: !4559)
!4576 = !DILocation(line: 1301, column: 21, scope: !4559)
!4577 = !DILocation(line: 1301, column: 4, scope: !4559)
!4578 = !DILocation(line: 1301, column: 19, scope: !4559)
!4579 = !DILocation(line: 1302, column: 3, scope: !4559)
!4580 = !DILocation(line: 1304, column: 4, scope: !4559)
!4581 = !DILocation(line: 1304, column: 17, scope: !4559)
!4582 = !DILocation(line: 1305, column: 3, scope: !4559)
!4583 = !DILocation(line: 1307, column: 4, scope: !4559)
!4584 = !DILocation(line: 1307, column: 20, scope: !4559)
!4585 = !DILocation(line: 1308, column: 3, scope: !4559)
!4586 = !DILocation(line: 1316, column: 1, scope: !4546)
!4587 = distinct !DISubprogram(name: "isupper", scope: !4588, file: !4588, line: 16, type: !129, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4589)
!4588 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4589 = !{!4590}
!4590 = !DILocalVariable(name: "a", arg: 1, scope: !4587, file: !4588, line: 16, type: !103)
!4591 = !DILocation(line: 0, scope: !4587)
!4592 = !DILocation(line: 18, column: 29, scope: !4587)
!4593 = !DILocation(line: 18, column: 45, scope: !4587)
!4594 = !DILocation(line: 18, column: 2, scope: !4587)
!4595 = distinct !DISubprogram(name: "conversion_radix", scope: !1658, file: !1658, line: 761, type: !4596, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4598)
!4596 = !DISubroutineType(types: !4597)
!4597 = !{!120, !109}
!4598 = !{!4599}
!4599 = !DILocalVariable(name: "specifier", arg: 1, scope: !4595, file: !1658, line: 761, type: !109)
!4600 = !DILocation(line: 0, scope: !4595)
!4601 = !DILocation(line: 763, column: 2, scope: !4595)
!4602 = !DILocation(line: 770, column: 3, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4595, file: !1658, line: 763, column: 21)
!4604 = !DILocation(line: 774, column: 3, scope: !4603)
!4605 = !DILocation(line: 0, scope: !4603)
!4606 = !DILocation(line: 776, column: 1, scope: !4595)
!4607 = distinct !DISubprogram(name: "extract_flags", scope: !1658, file: !1658, line: 339, type: !4449, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4608)
!4608 = !{!4609, !4610, !4611}
!4609 = !DILocalVariable(name: "conv", arg: 1, scope: !4607, file: !1658, line: 339, type: !4105)
!4610 = !DILocalVariable(name: "sp", arg: 2, scope: !4607, file: !1658, line: 340, type: !247)
!4611 = !DILocalVariable(name: "loop", scope: !4607, file: !1658, line: 342, type: !259)
!4612 = !DILocation(line: 0, scope: !4607)
!4613 = !DILocation(line: 344, column: 2, scope: !4607)
!4614 = !DILocation(line: 345, column: 11, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4607, file: !1658, line: 344, column: 5)
!4616 = !DILocation(line: 345, column: 3, scope: !4615)
!4617 = !DILocation(line: 351, column: 4, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !1658, line: 345, column: 16)
!4619 = !DILocation(line: 354, column: 4, scope: !4618)
!4620 = !DILocation(line: 357, column: 4, scope: !4618)
!4621 = !DILocation(line: 360, column: 4, scope: !4618)
!4622 = !DILocation(line: 0, scope: !4618)
!4623 = !DILocation(line: 370, column: 12, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4607, file: !1658, line: 370, column: 6)
!4625 = !DILocation(line: 370, column: 22, scope: !4624)
!4626 = !DILocation(line: 371, column: 19, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4624, file: !1658, line: 370, column: 42)
!4628 = !DILocation(line: 372, column: 2, scope: !4627)
!4629 = !DILocation(line: 376, column: 2, scope: !4607)
!4630 = distinct !DISubprogram(name: "extract_width", scope: !1658, file: !1658, line: 388, type: !4449, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4631)
!4631 = !{!4632, !4633, !4634, !4635}
!4632 = !DILocalVariable(name: "conv", arg: 1, scope: !4630, file: !1658, line: 388, type: !4105)
!4633 = !DILocalVariable(name: "sp", arg: 2, scope: !4630, file: !1658, line: 389, type: !247)
!4634 = !DILocalVariable(name: "wp", scope: !4630, file: !1658, line: 398, type: !247)
!4635 = !DILocalVariable(name: "width", scope: !4630, file: !1658, line: 399, type: !120)
!4636 = !DILocation(line: 0, scope: !4630)
!4637 = !DILocation(line: 391, column: 8, scope: !4630)
!4638 = !DILocation(line: 391, column: 22, scope: !4630)
!4639 = !DILocation(line: 393, column: 6, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4630, file: !1658, line: 393, column: 6)
!4641 = !DILocation(line: 393, column: 10, scope: !4640)
!4642 = !DILocation(line: 393, column: 6, scope: !4630)
!4643 = !DILocation(line: 394, column: 20, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4640, file: !1658, line: 393, column: 18)
!4645 = !DILocation(line: 395, column: 10, scope: !4644)
!4646 = !DILocation(line: 395, column: 3, scope: !4644)
!4647 = !DILocation(line: 399, column: 17, scope: !4630)
!4648 = !DILocation(line: 401, column: 6, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4630, file: !1658, line: 401, column: 6)
!4650 = !DILocation(line: 401, column: 9, scope: !4649)
!4651 = !DILocation(line: 401, column: 6, scope: !4630)
!4652 = !DILocation(line: 402, column: 23, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !1658, line: 401, column: 16)
!4654 = !DILocation(line: 403, column: 9, scope: !4653)
!4655 = !DILocation(line: 403, column: 21, scope: !4653)
!4656 = !DILocation(line: 405, column: 11, scope: !4653)
!4657 = !DILocation(line: 404, column: 21, scope: !4653)
!4658 = !DILocation(line: 406, column: 2, scope: !4653)
!4659 = !DILocation(line: 409, column: 1, scope: !4630)
!4660 = distinct !DISubprogram(name: "extract_prec", scope: !1658, file: !1658, line: 420, type: !4449, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4661)
!4661 = !{!4662, !4663, !4664}
!4662 = !DILocalVariable(name: "conv", arg: 1, scope: !4660, file: !1658, line: 420, type: !4105)
!4663 = !DILocalVariable(name: "sp", arg: 2, scope: !4660, file: !1658, line: 421, type: !247)
!4664 = !DILocalVariable(name: "prec", scope: !4660, file: !1658, line: 435, type: !120)
!4665 = !DILocation(line: 0, scope: !4660)
!4666 = !DILocation(line: 423, column: 24, scope: !4660)
!4667 = !DILocation(line: 423, column: 28, scope: !4660)
!4668 = !DILocation(line: 423, column: 8, scope: !4660)
!4669 = !DILocation(line: 423, column: 21, scope: !4660)
!4670 = !DILocation(line: 425, column: 6, scope: !4660)
!4671 = !DILocation(line: 428, column: 2, scope: !4660)
!4672 = !DILocation(line: 430, column: 6, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4660, file: !1658, line: 430, column: 6)
!4674 = !DILocation(line: 430, column: 10, scope: !4673)
!4675 = !DILocation(line: 430, column: 6, scope: !4660)
!4676 = !DILocation(line: 431, column: 19, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4673, file: !1658, line: 430, column: 18)
!4678 = !DILocation(line: 432, column: 10, scope: !4677)
!4679 = !DILocation(line: 432, column: 3, scope: !4677)
!4680 = !DILocation(line: 435, column: 16, scope: !4660)
!4681 = !DILocation(line: 437, column: 8, scope: !4660)
!4682 = !DILocation(line: 437, column: 19, scope: !4660)
!4683 = !DILocation(line: 439, column: 10, scope: !4660)
!4684 = !DILocation(line: 438, column: 20, scope: !4660)
!4685 = !DILocation(line: 441, column: 9, scope: !4660)
!4686 = !DILocation(line: 442, column: 1, scope: !4660)
!4687 = distinct !DISubprogram(name: "extract_length", scope: !1658, file: !1658, line: 453, type: !4449, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4688)
!4688 = !{!4689, !4690}
!4689 = !DILocalVariable(name: "conv", arg: 1, scope: !4687, file: !1658, line: 453, type: !4105)
!4690 = !DILocalVariable(name: "sp", arg: 2, scope: !4687, file: !1658, line: 454, type: !247)
!4691 = !DILocation(line: 0, scope: !4687)
!4692 = !DILocation(line: 456, column: 10, scope: !4687)
!4693 = !DILocation(line: 456, column: 2, scope: !4687)
!4694 = !DILocation(line: 458, column: 8, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !1658, line: 458, column: 7)
!4696 = distinct !DILexicalBlock(scope: !4687, file: !1658, line: 456, column: 15)
!4697 = !DILocation(line: 458, column: 7, scope: !4695)
!4698 = !DILocation(line: 458, column: 13, scope: !4695)
!4699 = !DILocation(line: 0, scope: !4695)
!4700 = !DILocation(line: 458, column: 7, scope: !4696)
!4701 = !DILocation(line: 459, column: 21, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4695, file: !1658, line: 458, column: 21)
!4703 = !DILocation(line: 460, column: 4, scope: !4702)
!4704 = !DILocation(line: 461, column: 3, scope: !4702)
!4705 = !DILocation(line: 462, column: 21, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4695, file: !1658, line: 461, column: 10)
!4707 = !DILocation(line: 466, column: 8, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4696, file: !1658, line: 466, column: 7)
!4709 = !DILocation(line: 466, column: 7, scope: !4708)
!4710 = !DILocation(line: 466, column: 13, scope: !4708)
!4711 = !DILocation(line: 0, scope: !4708)
!4712 = !DILocation(line: 466, column: 7, scope: !4696)
!4713 = !DILocation(line: 467, column: 21, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4708, file: !1658, line: 466, column: 21)
!4715 = !DILocation(line: 468, column: 4, scope: !4714)
!4716 = !DILocation(line: 469, column: 3, scope: !4714)
!4717 = !DILocation(line: 470, column: 21, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4708, file: !1658, line: 469, column: 10)
!4719 = !DILocation(line: 474, column: 9, scope: !4696)
!4720 = !DILocation(line: 474, column: 20, scope: !4696)
!4721 = !DILocation(line: 475, column: 3, scope: !4696)
!4722 = !DILocation(line: 476, column: 3, scope: !4696)
!4723 = !DILocation(line: 478, column: 9, scope: !4696)
!4724 = !DILocation(line: 478, column: 20, scope: !4696)
!4725 = !DILocation(line: 479, column: 3, scope: !4696)
!4726 = !DILocation(line: 480, column: 3, scope: !4696)
!4727 = !DILocation(line: 482, column: 9, scope: !4696)
!4728 = !DILocation(line: 482, column: 20, scope: !4696)
!4729 = !DILocation(line: 483, column: 3, scope: !4696)
!4730 = !DILocation(line: 484, column: 3, scope: !4696)
!4731 = !DILocation(line: 486, column: 9, scope: !4696)
!4732 = !DILocation(line: 486, column: 20, scope: !4696)
!4733 = !DILocation(line: 487, column: 3, scope: !4696)
!4734 = !DILocation(line: 492, column: 21, scope: !4696)
!4735 = !DILocation(line: 493, column: 3, scope: !4696)
!4736 = !DILocation(line: 495, column: 9, scope: !4696)
!4737 = !DILocation(line: 495, column: 20, scope: !4696)
!4738 = !DILocation(line: 496, column: 3, scope: !4696)
!4739 = !DILocation(line: 498, column: 2, scope: !4687)
!4740 = distinct !DISubprogram(name: "extract_specifier", scope: !1658, file: !1658, line: 513, type: !4449, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4741)
!4741 = !{!4742, !4743, !4744, !4745}
!4742 = !DILocalVariable(name: "conv", arg: 1, scope: !4740, file: !1658, line: 513, type: !4105)
!4743 = !DILocalVariable(name: "sp", arg: 2, scope: !4740, file: !1658, line: 514, type: !247)
!4744 = !DILocalVariable(name: "unsupported", scope: !4740, file: !1658, line: 516, type: !259)
!4745 = !DILabel(scope: !4746, name: "int_conv", file: !1658, line: 526)
!4746 = distinct !DILexicalBlock(scope: !4740, file: !1658, line: 520, column: 27)
!4747 = !DILocation(line: 0, scope: !4740)
!4748 = !DILocation(line: 518, column: 20, scope: !4740)
!4749 = !DILocation(line: 518, column: 8, scope: !4740)
!4750 = !DILocation(line: 518, column: 18, scope: !4740)
!4751 = !DILocation(line: 520, column: 2, scope: !4740)
!4752 = !DILocation(line: 525, column: 3, scope: !4746)
!4753 = !DILocation(line: 0, scope: !4746)
!4754 = !DILocation(line: 526, column: 1, scope: !4746)
!4755 = !DILocation(line: 528, column: 24, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4746, file: !1658, line: 528, column: 7)
!4757 = !DILocation(line: 528, column: 7, scope: !4746)
!4758 = !DILocation(line: 535, column: 23, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4746, file: !1658, line: 535, column: 7)
!4760 = !DILocation(line: 535, column: 7, scope: !4746)
!4761 = !DILocation(line: 536, column: 36, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !1658, line: 535, column: 31)
!4763 = !DILocation(line: 537, column: 3, scope: !4762)
!4764 = !DILocation(line: 570, column: 9, scope: !4746)
!4765 = !DILocation(line: 570, column: 23, scope: !4746)
!4766 = !DILocation(line: 575, column: 4, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !1658, line: 573, column: 48)
!4768 = distinct !DILexicalBlock(scope: !4746, file: !1658, line: 573, column: 7)
!4769 = !DILocation(line: 603, column: 9, scope: !4746)
!4770 = !DILocation(line: 603, column: 23, scope: !4746)
!4771 = !DILocation(line: 605, column: 24, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4746, file: !1658, line: 605, column: 7)
!4773 = !DILocation(line: 605, column: 7, scope: !4746)
!4774 = !DILocation(line: 612, column: 9, scope: !4746)
!4775 = !DILocation(line: 612, column: 23, scope: !4746)
!4776 = !DILocation(line: 619, column: 24, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4746, file: !1658, line: 619, column: 7)
!4778 = !DILocation(line: 619, column: 7, scope: !4746)
!4779 = !DILocation(line: 625, column: 9, scope: !4746)
!4780 = !DILocation(line: 625, column: 17, scope: !4746)
!4781 = !DILocation(line: 626, column: 3, scope: !4746)
!4782 = !DILocation(line: 629, column: 20, scope: !4740)
!4783 = !DILocation(line: 629, column: 8, scope: !4740)
!4784 = !DILocation(line: 518, column: 23, scope: !4740)
!4785 = !DILocation(line: 631, column: 2, scope: !4740)
!4786 = distinct !DISubprogram(name: "extract_decimal", scope: !1658, file: !1658, line: 318, type: !4787, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4790)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!120, !4789}
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!4790 = !{!4791, !4792, !4793}
!4791 = !DILocalVariable(name: "str", arg: 1, scope: !4786, file: !1658, line: 318, type: !4789)
!4792 = !DILocalVariable(name: "sp", scope: !4786, file: !1658, line: 320, type: !247)
!4793 = !DILocalVariable(name: "val", scope: !4786, file: !1658, line: 321, type: !120)
!4794 = !DILocation(line: 0, scope: !4786)
!4795 = !DILocation(line: 320, column: 19, scope: !4786)
!4796 = !DILocation(line: 323, column: 37, scope: !4786)
!4797 = !DILocation(line: 323, column: 17, scope: !4786)
!4798 = !DILocation(line: 323, column: 9, scope: !4786)
!4799 = !DILocation(line: 323, column: 2, scope: !4786)
!4800 = !DILocation(line: 324, column: 13, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4786, file: !1658, line: 323, column: 43)
!4802 = !DILocation(line: 324, column: 24, scope: !4801)
!4803 = !DILocation(line: 324, column: 19, scope: !4801)
!4804 = !DILocation(line: 324, column: 27, scope: !4801)
!4805 = distinct !{!4805, !4799, !4806}
!4806 = !DILocation(line: 325, column: 2, scope: !4786)
!4807 = !DILocation(line: 326, column: 7, scope: !4786)
!4808 = !DILocation(line: 327, column: 2, scope: !4786)
!4809 = distinct !DISubprogram(name: "isdigit", scope: !4588, file: !4588, line: 43, type: !129, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1654, retainedNodes: !4810)
!4810 = !{!4811}
!4811 = !DILocalVariable(name: "a", arg: 1, scope: !4809, file: !4588, line: 43, type: !103)
!4812 = !DILocation(line: 0, scope: !4809)
!4813 = !DILocation(line: 45, column: 29, scope: !4809)
!4814 = !DILocation(line: 45, column: 45, scope: !4809)
!4815 = !DILocation(line: 45, column: 2, scope: !4809)
!4816 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4817, file: !4817, line: 9, type: !646, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1692, retainedNodes: !162)
!4817 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!4818 = !DILocation(line: 11, column: 1, scope: !4816)
!4819 = !{i64 2147557083, i64 2147557126, i64 2147557166}
!4820 = !DILocation(line: 12, column: 1, scope: !4816)
!4821 = !{i64 2147561322, i64 2147561365, i64 2147561405}
!4822 = !DILocation(line: 13, column: 1, scope: !4816)
!4823 = !{i64 2147561491, i64 2147561534, i64 2147561574}
!4824 = !DILocation(line: 14, column: 1, scope: !4816)
!4825 = !{i64 2147561675, i64 2147561718, i64 2147561758}
!4826 = !DILocation(line: 15, column: 1, scope: !4816)
!4827 = !{i64 2147561854, i64 2147561897, i64 2147561937}
!4828 = !DILocation(line: 16, column: 1, scope: !4816)
!4829 = !{i64 2147562096, i64 2147562139, i64 2147562179}
!4830 = !DILocation(line: 17, column: 1, scope: !4816)
!4831 = !{i64 2147562282, i64 2147562325, i64 2147562365}
!4832 = !DILocation(line: 18, column: 1, scope: !4816)
!4833 = !{i64 2147562496, i64 2147562539, i64 2147562579}
!4834 = !DILocation(line: 19, column: 1, scope: !4816)
!4835 = !{i64 2147562699, i64 2147562742, i64 2147562782}
!4836 = !DILocation(line: 20, column: 1, scope: !4816)
!4837 = !{i64 2147562902, i64 2147562945, i64 2147562985}
!4838 = !DILocation(line: 21, column: 1, scope: !4816)
!4839 = !{i64 2147563101, i64 2147563144, i64 2147563184}
!4840 = !DILocation(line: 22, column: 1, scope: !4816)
!4841 = !{i64 2147563276, i64 2147563319, i64 2147563359}
!4842 = !DILocation(line: 23, column: 1, scope: !4816)
!4843 = !{i64 2147563484, i64 2147563527, i64 2147563567}
!4844 = !DILocation(line: 24, column: 1, scope: !4816)
!4845 = !{i64 2147563688, i64 2147563731, i64 2147563771}
!4846 = !DILocation(line: 25, column: 1, scope: !4816)
!4847 = !{i64 2147563890, i64 2147563933, i64 2147563973}
!4848 = !DILocation(line: 26, column: 1, scope: !4816)
!4849 = !{i64 2147564117, i64 2147564160, i64 2147564200}
!4850 = !DILocation(line: 27, column: 1, scope: !4816)
!4851 = !{i64 2147564332, i64 2147564375, i64 2147564415}
!4852 = !DILocation(line: 28, column: 1, scope: !4816)
!4853 = !{i64 2147564504, i64 2147564547, i64 2147564587}
!4854 = !DILocation(line: 29, column: 1, scope: !4816)
!4855 = !{i64 2147564706, i64 2147564749, i64 2147564789}
!4856 = !DILocation(line: 30, column: 1, scope: !4816)
!4857 = !{i64 2147564905, i64 2147564948, i64 2147564988}
!4858 = !DILocation(line: 31, column: 1, scope: !4816)
!4859 = !{i64 2147565080, i64 2147565123, i64 2147565163}
!4860 = !DILocation(line: 32, column: 1, scope: !4816)
!4861 = !{i64 2147565333, i64 2147565376, i64 2147565416}
!4862 = !DILocation(line: 33, column: 1, scope: !4816)
!4863 = !{i64 2147565571, i64 2147565614, i64 2147565654}
!4864 = !DILocation(line: 34, column: 1, scope: !4816)
!4865 = !{i64 2147565806, i64 2147565849, i64 2147565889}
!4866 = !DILocation(line: 35, column: 1, scope: !4816)
!4867 = !{i64 2147566047, i64 2147566090, i64 2147566130}
!4868 = !DILocation(line: 36, column: 1, scope: !4816)
!4869 = !{i64 2147566297, i64 2147566340, i64 2147566380}
!4870 = !DILocation(line: 37, column: 1, scope: !4816)
!4871 = !{i64 2147566547, i64 2147566590, i64 2147566630}
!4872 = !DILocation(line: 38, column: 1, scope: !4816)
!4873 = !{i64 2147566788, i64 2147566831, i64 2147566871}
!4874 = !DILocation(line: 39, column: 1, scope: !4816)
!4875 = !{i64 2147567041, i64 2147567084, i64 2147567124}
!4876 = !DILocation(line: 40, column: 1, scope: !4816)
!4877 = !{i64 2147567267, i64 2147567310, i64 2147567350}
!4878 = !DILocation(line: 41, column: 1, scope: !4816)
!4879 = !{i64 2147567493, i64 2147567536, i64 2147567576}
!4880 = !DILocation(line: 42, column: 1, scope: !4816)
!4881 = !{i64 2147567728, i64 2147567771, i64 2147567811}
!4882 = !DILocation(line: 43, column: 1, scope: !4816)
!4883 = !{i64 2147567957, i64 2147568000, i64 2147568040}
!4884 = !DILocation(line: 44, column: 1, scope: !4816)
!4885 = !{i64 2147568165, i64 2147568208, i64 2147568248}
!4886 = !DILocation(line: 45, column: 1, scope: !4816)
!4887 = !{i64 2147568376, i64 2147568419, i64 2147568459}
!4888 = !DILocation(line: 46, column: 1, scope: !4816)
!4889 = !{i64 2147568611, i64 2147568654, i64 2147568694}
!4890 = !DILocation(line: 47, column: 1, scope: !4816)
!4891 = !{i64 2147568840, i64 2147568883, i64 2147568923}
!4892 = !DILocation(line: 48, column: 1, scope: !4816)
!4893 = !{i64 2147569078, i64 2147569121, i64 2147569161}
!4894 = !DILocation(line: 49, column: 1, scope: !4816)
!4895 = !{i64 2147569310, i64 2147569353, i64 2147569393}
!4896 = !DILocation(line: 50, column: 1, scope: !4816)
!4897 = !{i64 2147569536, i64 2147569579, i64 2147569619}
!4898 = !DILocation(line: 51, column: 1, scope: !4816)
!4899 = !{i64 2147569753, i64 2147569796, i64 2147569836}
!4900 = !DILocation(line: 52, column: 1, scope: !4816)
!4901 = !{i64 2147574046, i64 2147574089, i64 2147574129}
!4902 = !DILocation(line: 53, column: 1, scope: !4816)
!4903 = !{i64 2147574272, i64 2147574315, i64 2147574355}
!4904 = !DILocation(line: 54, column: 1, scope: !4816)
!4905 = !{i64 2147574486, i64 2147574529, i64 2147574569}
!4906 = !DILocation(line: 55, column: 1, scope: !4816)
!4907 = !{i64 2147574706, i64 2147574749, i64 2147574789}
!4908 = !DILocation(line: 56, column: 1, scope: !4816)
!4909 = !{i64 2147574938, i64 2147574981, i64 2147575021}
!4910 = !DILocation(line: 57, column: 1, scope: !4816)
!4911 = !{i64 2147575146, i64 2147575189, i64 2147575229}
!4912 = !DILocation(line: 58, column: 1, scope: !4816)
!4913 = !{i64 2147575351, i64 2147575394, i64 2147575434}
!4914 = !DILocation(line: 59, column: 1, scope: !4816)
!4915 = !{i64 2147575568, i64 2147575611, i64 2147575651}
!4916 = !DILocation(line: 60, column: 1, scope: !4816)
!4917 = !{i64 2147575782, i64 2147575825, i64 2147575865}
!4918 = !DILocation(line: 61, column: 1, scope: !4816)
!4919 = !{i64 2147576008, i64 2147576051, i64 2147576091}
!4920 = !DILocation(line: 62, column: 1, scope: !4816)
!4921 = !{i64 2147576228, i64 2147576271, i64 2147576311}
!4922 = !DILocation(line: 63, column: 1, scope: !4816)
!4923 = !{i64 2147576433, i64 2147576476, i64 2147576516}
!4924 = !DILocation(line: 64, column: 1, scope: !4816)
!4925 = !{i64 2147576665, i64 2147576708, i64 2147576748}
!4926 = !DILocation(line: 65, column: 1, scope: !4816)
!4927 = !{i64 2147576900, i64 2147576943, i64 2147576983}
!4928 = !DILocation(line: 66, column: 1, scope: !4816)
!4929 = !{i64 2147577150, i64 2147577193, i64 2147577233}
!4930 = !DILocation(line: 67, column: 1, scope: !4816)
!4931 = !{i64 2147577400, i64 2147577443, i64 2147577483}
!4932 = !DILocation(line: 68, column: 1, scope: !4816)
!4933 = !{i64 2147577638, i64 2147577681, i64 2147577721}
!4934 = !DILocation(line: 69, column: 1, scope: !4816)
!4935 = !{i64 2147577849, i64 2147577892, i64 2147577932}
!4936 = !DILocation(line: 70, column: 1, scope: !4816)
!4937 = !{i64 2147578066, i64 2147578109, i64 2147578149}
!4938 = !DILocation(line: 71, column: 1, scope: !4816)
!4939 = !{i64 2147578229, i64 2147578272, i64 2147578312}
!4940 = !DILocation(line: 72, column: 1, scope: !4816)
!4941 = !{i64 2147578425, i64 2147578468, i64 2147578508}
!4942 = !DILocation(line: 73, column: 1, scope: !4816)
!4943 = !{i64 2147578627, i64 2147578670, i64 2147578710}
!4944 = !DILocation(line: 74, column: 1, scope: !4816)
!4945 = !{i64 2147578823, i64 2147578866, i64 2147578906}
!4946 = !DILocation(line: 75, column: 1, scope: !4816)
!4947 = !{i64 2147579028, i64 2147579071, i64 2147579111}
!4948 = !DILocation(line: 76, column: 1, scope: !4816)
!4949 = !{i64 2147579230, i64 2147579273, i64 2147579313}
!4950 = !DILocation(line: 77, column: 1, scope: !4816)
!4951 = !{i64 2147579429, i64 2147579472, i64 2147579512}
!4952 = !DILocation(line: 78, column: 1, scope: !4816)
!4953 = !{i64 2147579613, i64 2147579656, i64 2147579696}
!4954 = !DILocation(line: 79, column: 1, scope: !4816)
!4955 = !{i64 2147579809, i64 2147579852, i64 2147579892}
!4956 = !DILocation(line: 80, column: 1, scope: !4816)
!4957 = !{i64 2147580032, i64 2147580075, i64 2147580115}
!4958 = !DILocation(line: 81, column: 1, scope: !4816)
!4959 = !{i64 2147580264, i64 2147580307, i64 2147580347}
!4960 = !DILocation(line: 82, column: 1, scope: !4816)
!4961 = !{i64 2147580496, i64 2147580539, i64 2147580579}
!4962 = !DILocation(line: 83, column: 1, scope: !4816)
!4963 = !{i64 2147580728, i64 2147580771, i64 2147580811}
!4964 = !DILocation(line: 84, column: 1, scope: !4816)
!4965 = !{i64 2147580894, i64 2147580937, i64 2147580977}
!4966 = !DILocation(line: 85, column: 1, scope: !4816)
!4967 = !{i64 2147581078, i64 2147581121, i64 2147581161}
!4968 = !DILocation(line: 86, column: 1, scope: !4816)
!4969 = !{i64 2147581268, i64 2147581311, i64 2147581351}
!4970 = !DILocation(line: 87, column: 1, scope: !4816)
!4971 = !{i64 2147581452, i64 2147581495, i64 2147581535}
!4972 = !DILocation(line: 88, column: 1, scope: !4816)
!4973 = !{i64 2147581666, i64 2147581709, i64 2147581749}
!4974 = !DILocation(line: 89, column: 1, scope: !4816)
!4975 = !{i64 2147581877, i64 2147581920, i64 2147581960}
!4976 = !DILocation(line: 90, column: 1, scope: !4816)
!4977 = !{i64 2147582100, i64 2147582143, i64 2147582183}
!4978 = !DILocation(line: 91, column: 1, scope: !4816)
!4979 = !{i64 2147582284, i64 2147582327, i64 2147582367}
!4980 = !DILocation(line: 92, column: 1, scope: !4816)
!4981 = !{i64 2147582498, i64 2147582541, i64 2147582581}
!4982 = !DILocation(line: 93, column: 1, scope: !4816)
!4983 = !{i64 2147582664, i64 2147582707, i64 2147582747}
!4984 = !DILocation(line: 94, column: 1, scope: !4816)
!4985 = !{i64 2147582845, i64 2147582888, i64 2147582928}
!4986 = !DILocation(line: 95, column: 1, scope: !4816)
!4987 = !{i64 2147583038, i64 2147583081, i64 2147583121}
!4988 = !DILocation(line: 96, column: 1, scope: !4816)
!4989 = !{i64 2147587325, i64 2147587368, i64 2147587408}
!4990 = !DILocation(line: 97, column: 1, scope: !4816)
!4991 = !{i64 2147587539, i64 2147587582, i64 2147587622}
!4992 = !DILocation(line: 98, column: 1, scope: !4816)
!4993 = !{i64 2147587765, i64 2147587808, i64 2147587848}
!4994 = !DILocation(line: 99, column: 1, scope: !4816)
!4995 = !{i64 2147587982, i64 2147588025, i64 2147588065}
!4996 = !DILocation(line: 100, column: 1, scope: !4816)
!4997 = !{i64 2147588259, i64 2147588302, i64 2147588342}
!4998 = !DILocation(line: 101, column: 1, scope: !4816)
!4999 = !{i64 2147588485, i64 2147588528, i64 2147588568}
!5000 = !DILocation(line: 102, column: 1, scope: !4816)
!5001 = !{i64 2147588681, i64 2147588724, i64 2147588764}
!5002 = !DILocation(line: 103, column: 1, scope: !4816)
!5003 = !{i64 2147588946, i64 2147588989, i64 2147589029}
!5004 = !DILocation(line: 104, column: 1, scope: !4816)
!5005 = !{i64 2147589160, i64 2147589203, i64 2147589243}
!5006 = !DILocation(line: 105, column: 1, scope: !4816)
!5007 = !{i64 2147589335, i64 2147589378, i64 2147589418}
!5008 = !DILocation(line: 106, column: 1, scope: !4816)
!5009 = !{i64 2147589589, i64 2147589632, i64 2147589672}
!5010 = !DILocation(line: 107, column: 1, scope: !4816)
!5011 = !{i64 2147589788, i64 2147589831, i64 2147589871}
!5012 = !DILocation(line: 108, column: 1, scope: !4816)
!5013 = !{i64 2147590030, i64 2147590073, i64 2147590113}
!5014 = !DILocation(line: 109, column: 1, scope: !4816)
!5015 = !{i64 2147590193, i64 2147590236, i64 2147590276}
!5016 = !DILocation(line: 110, column: 1, scope: !4816)
!5017 = !{i64 2147590380, i64 2147590423, i64 2147590463}
!5018 = !DILocation(line: 111, column: 1, scope: !4816)
!5019 = !{i64 2147590573, i64 2147590616, i64 2147590656}
!5020 = !DILocation(line: 112, column: 1, scope: !4816)
!5021 = !{i64 2147590755, i64 2147590798, i64 2147590838}
!5022 = !DILocation(line: 113, column: 1, scope: !4816)
!5023 = !{i64 2147590969, i64 2147591012, i64 2147591052}
!5024 = !DILocation(line: 114, column: 1, scope: !4816)
!5025 = !{i64 2147591180, i64 2147591223, i64 2147591263}
!5026 = !DILocation(line: 115, column: 1, scope: !4816)
!5027 = !{i64 2147591400, i64 2147591443, i64 2147591483}
!5028 = !DILocation(line: 116, column: 1, scope: !4816)
!5029 = !{i64 2147591607, i64 2147591650, i64 2147591690}
!5030 = !DILocation(line: 117, column: 1, scope: !4816)
!5031 = !{i64 2147591880, i64 2147591923, i64 2147591963}
!5032 = !DILocation(line: 118, column: 1, scope: !4816)
!5033 = !{i64 2147592128, i64 2147592171, i64 2147592211}
!5034 = !DILocation(line: 119, column: 1, scope: !4816)
!5035 = !{i64 2147592327, i64 2147592370, i64 2147592410}
!5036 = !DILocation(line: 120, column: 1, scope: !4816)
!5037 = !{i64 2147592562, i64 2147592605, i64 2147592645}
!5038 = !DILocation(line: 121, column: 1, scope: !4816)
!5039 = !{i64 2147592812, i64 2147592855, i64 2147592895}
!5040 = !DILocation(line: 122, column: 1, scope: !4816)
!5041 = !{i64 2147593014, i64 2147593057, i64 2147593097}
!5042 = !DILocation(line: 123, column: 1, scope: !4816)
!5043 = !{i64 2147593237, i64 2147593280, i64 2147593320}
!5044 = !DILocation(line: 124, column: 1, scope: !4816)
!5045 = !{i64 2147593451, i64 2147593494, i64 2147593534}
!5046 = !DILocation(line: 125, column: 1, scope: !4816)
!5047 = !{i64 2147593695, i64 2147593738, i64 2147593778}
!5048 = !DILocation(line: 126, column: 1, scope: !4816)
!5049 = !{i64 2147593924, i64 2147593967, i64 2147594007}
!5050 = !DILocation(line: 127, column: 1, scope: !4816)
!5051 = !{i64 2147594153, i64 2147594196, i64 2147594236}
!5052 = !DILocation(line: 128, column: 1, scope: !4816)
!5053 = !{i64 2147594361, i64 2147594404, i64 2147594444}
!5054 = !DILocation(line: 129, column: 1, scope: !4816)
!5055 = !{i64 2147594599, i64 2147594642, i64 2147594682}
!5056 = !DILocation(line: 130, column: 1, scope: !4816)
!5057 = !{i64 2147594825, i64 2147594868, i64 2147594908}
!5058 = !DILocation(line: 131, column: 1, scope: !4816)
!5059 = !{i64 2147595084, i64 2147595127, i64 2147595167}
!5060 = !DILocation(line: 132, column: 1, scope: !4816)
!5061 = !{i64 2147595304, i64 2147595347, i64 2147595387}
!5062 = !DILocation(line: 133, column: 1, scope: !4816)
!5063 = !{i64 2147595536, i64 2147595579, i64 2147595619}
!5064 = !DILocation(line: 134, column: 1, scope: !4816)
!5065 = !{i64 2147599838, i64 2147599881, i64 2147599921}
!5066 = !DILocation(line: 135, column: 1, scope: !4816)
!5067 = !{i64 2147600079, i64 2147600122, i64 2147600162}
!5068 = !DILocation(line: 136, column: 1, scope: !4816)
!5069 = !{i64 2147600302, i64 2147600345, i64 2147600385}
!5070 = !DILocation(line: 137, column: 1, scope: !4816)
!5071 = !{i64 2147600519, i64 2147600562, i64 2147600602}
!5072 = !DILocation(line: 138, column: 1, scope: !4816)
!5073 = !{i64 2147600760, i64 2147600803, i64 2147600843}
!5074 = !DILocation(line: 139, column: 1, scope: !4816)
!5075 = !{i64 2147600947, i64 2147600990, i64 2147601030}
!5076 = !DILocation(line: 140, column: 1, scope: !4816)
!5077 = !{i64 2147601110, i64 2147601153, i64 2147601193}
!5078 = !DILocation(line: 141, column: 1, scope: !4816)
!5079 = !{i64 2147601369, i64 2147601412, i64 2147601452}
!5080 = !DILocation(line: 142, column: 1, scope: !4816)
!5081 = !{i64 2147601592, i64 2147601635, i64 2147601675}
!5082 = !DILocation(line: 143, column: 1, scope: !4816)
!5083 = !{i64 2147601821, i64 2147601864, i64 2147601904}
!5084 = !DILocation(line: 144, column: 1, scope: !4816)
!5085 = !{i64 2147602017, i64 2147602060, i64 2147602100}
!5086 = !DILocation(line: 145, column: 1, scope: !4816)
!5087 = !{i64 2147602229, i64 2147602272, i64 2147602312}
!5088 = !DILocation(line: 146, column: 1, scope: !4816)
!5089 = !{i64 2147602450, i64 2147602493, i64 2147602533}
!5090 = !DILocation(line: 147, column: 1, scope: !4816)
!5091 = !{i64 2147602664, i64 2147602707, i64 2147602747}
!5092 = !DILocation(line: 148, column: 1, scope: !4816)
!5093 = !{i64 2147602854, i64 2147602897, i64 2147602937}
!5094 = !DILocation(line: 149, column: 1, scope: !4816)
!5095 = !{i64 2147603053, i64 2147603096, i64 2147603136}
!5096 = !DILocation(line: 150, column: 1, scope: !4816)
!5097 = !{i64 2147603258, i64 2147603301, i64 2147603341}
!5098 = !DILocation(line: 151, column: 1, scope: !4816)
!5099 = !{i64 2147603478, i64 2147603521, i64 2147603561}
!5100 = !DILocation(line: 152, column: 1, scope: !4816)
!5101 = !{i64 2147603679, i64 2147603722, i64 2147603762}
!5102 = !DILocation(line: 153, column: 1, scope: !4816)
!5103 = !{i64 2147603878, i64 2147603921, i64 2147603961}
!5104 = !DILocation(line: 154, column: 1, scope: !4816)
!5105 = !{i64 2147604083, i64 2147604126, i64 2147604166}
!5106 = !DILocation(line: 155, column: 1, scope: !4816)
!5107 = !{i64 2147604252, i64 2147604295, i64 2147604335}
!5108 = !DILocation(line: 156, column: 1, scope: !4816)
!5109 = !{i64 2147604436, i64 2147604479, i64 2147604519}
!5110 = !DILocation(line: 157, column: 1, scope: !4816)
!5111 = !{i64 2147604620, i64 2147604663, i64 2147604703}
!5112 = !DILocation(line: 158, column: 1, scope: !4816)
!5113 = !{i64 2147604807, i64 2147604850, i64 2147604890}
!5114 = !DILocation(line: 159, column: 1, scope: !4816)
!5115 = !{i64 2147604991, i64 2147605034, i64 2147605074}
!5116 = !DILocation(line: 160, column: 1, scope: !4816)
!5117 = !{i64 2147605229, i64 2147605272, i64 2147605312}
!5118 = !DILocation(line: 161, column: 1, scope: !4816)
!5119 = !{i64 2147605459, i64 2147605502, i64 2147605542}
!5120 = !DILocation(line: 162, column: 1, scope: !4816)
!5121 = !{i64 2147605688, i64 2147605731, i64 2147605771}
!5122 = !DILocation(line: 163, column: 1, scope: !4816)
!5123 = !{i64 2147605875, i64 2147605918, i64 2147605958}
!5124 = !DILocation(line: 164, column: 1, scope: !4816)
!5125 = !{i64 2147606071, i64 2147606114, i64 2147606154}
!5126 = !DILocation(line: 165, column: 1, scope: !4816)
!5127 = !{i64 2147606279, i64 2147606322, i64 2147606362}
!5128 = !DILocation(line: 166, column: 1, scope: !4816)
!5129 = !{i64 2147606491, i64 2147606534, i64 2147606574}
!5130 = !DILocation(line: 167, column: 1, scope: !4816)
!5131 = !{i64 2147606690, i64 2147606733, i64 2147606773}
!5132 = !DILocation(line: 168, column: 1, scope: !4816)
!5133 = !{i64 2147606928, i64 2147606971, i64 2147607011}
!5134 = !DILocation(line: 169, column: 1, scope: !4816)
!5135 = !{i64 2147607124, i64 2147607167, i64 2147607207}
!5136 = !DILocation(line: 170, column: 1, scope: !4816)
!5137 = !{i64 2147607326, i64 2147607369, i64 2147607409}
!5138 = !DILocation(line: 171, column: 1, scope: !4816)
!5139 = !{i64 2147607519, i64 2147607562, i64 2147607602}
!5140 = !DILocation(line: 172, column: 1, scope: !4816)
!5141 = !{i64 2147607753, i64 2147607796, i64 2147607836}
!5142 = !DILocation(line: 173, column: 1, scope: !4816)
!5143 = !{i64 2147607916, i64 2147607959, i64 2147607999}
!5144 = !DILocation(line: 174, column: 1, scope: !4816)
!5145 = !{i64 2147608155, i64 2147608198, i64 2147608238}
!5146 = !DILocation(line: 175, column: 1, scope: !4816)
!5147 = !{i64 2147608394, i64 2147608437, i64 2147608477}
!5148 = !DILocation(line: 176, column: 1, scope: !4816)
!5149 = !{i64 2147608630, i64 2147608673, i64 2147608713}
!5150 = !DILocation(line: 177, column: 1, scope: !4816)
!5151 = !{i64 2147612921, i64 2147612964, i64 2147613004}
!5152 = !DILocation(line: 178, column: 1, scope: !4816)
!5153 = !{i64 2147613108, i64 2147613151, i64 2147613191}
!5154 = !DILocation(line: 179, column: 1, scope: !4816)
!5155 = !{i64 2147613307, i64 2147613350, i64 2147613390}
!5156 = !DILocation(line: 180, column: 1, scope: !4816)
!5157 = !{i64 2147613578, i64 2147613621, i64 2147613661}
!5158 = !DILocation(line: 181, column: 1, scope: !4816)
!5159 = !{i64 2147613753, i64 2147613796, i64 2147613836}
!5160 = !DILocation(line: 182, column: 1, scope: !4816)
!5161 = !{i64 2147613987, i64 2147614030, i64 2147614070}
!5162 = !DILocation(line: 183, column: 1, scope: !4816)
!5163 = !{i64 2147614195, i64 2147614238, i64 2147614278}
!5164 = !DILocation(line: 184, column: 1, scope: !4816)
!5165 = !{i64 2147614413, i64 2147614456, i64 2147614496}
!5166 = !DILocation(line: 185, column: 1, scope: !4816)
!5167 = !{i64 2147614603, i64 2147614646, i64 2147614686}
!5168 = !DILocation(line: 186, column: 1, scope: !4816)
!5169 = !{i64 2147614799, i64 2147614842, i64 2147614882}
!5170 = !DILocation(line: 187, column: 1, scope: !4816)
!5171 = !{i64 2147615005, i64 2147615048, i64 2147615088}
!5172 = !DILocation(line: 188, column: 1, scope: !4816)
!5173 = !{i64 2147615210, i64 2147615253, i64 2147615293}
!5174 = !DILocation(line: 189, column: 1, scope: !4816)
!5175 = !{i64 2147615436, i64 2147615479, i64 2147615519}
!5176 = !DILocation(line: 190, column: 1, scope: !4816)
!5177 = !{i64 2147615668, i64 2147615711, i64 2147615751}
!5178 = !DILocation(line: 191, column: 1, scope: !4816)
!5179 = !{i64 2147615846, i64 2147615889, i64 2147615929}
!5180 = !DILocation(line: 192, column: 1, scope: !4816)
!5181 = !{i64 2147616055, i64 2147616098, i64 2147616138}
!5182 = !DILocation(line: 193, column: 1, scope: !4816)
!5183 = !{i64 2147616287, i64 2147616330, i64 2147616370}
!5184 = !DILocation(line: 194, column: 1, scope: !4816)
!5185 = !{i64 2147616489, i64 2147616532, i64 2147616572}
!5186 = !DILocation(line: 195, column: 1, scope: !4816)
!5187 = !{i64 2147616739, i64 2147616782, i64 2147616822}
!5188 = !DILocation(line: 196, column: 1, scope: !4816)
!5189 = !{i64 2147616977, i64 2147617020, i64 2147617060}
!5190 = !DILocation(line: 197, column: 1, scope: !4816)
!5191 = !{i64 2147617188, i64 2147617231, i64 2147617271}
!5192 = !DILocation(line: 198, column: 1, scope: !4816)
!5193 = !{i64 2147617363, i64 2147617406, i64 2147617446}
!5194 = !DILocation(line: 199, column: 1, scope: !4816)
!5195 = !{i64 2147617550, i64 2147617593, i64 2147617633}
!5196 = !DILocation(line: 200, column: 1, scope: !4816)
!5197 = !{i64 2147617764, i64 2147617807, i64 2147617847}
!5198 = !DILocation(line: 201, column: 1, scope: !4816)
!5199 = !{i64 2147617972, i64 2147618015, i64 2147618055}
!5200 = !DILocation(line: 202, column: 1, scope: !4816)
!5201 = !{i64 2147618162, i64 2147618205, i64 2147618245}
!5202 = !DILocation(line: 203, column: 1, scope: !4816)
!5203 = !{i64 2147618376, i64 2147618419, i64 2147618459}
!5204 = !DILocation(line: 204, column: 1, scope: !4816)
!5205 = !{i64 2147618638, i64 2147618681, i64 2147618721}
!5206 = !DILocation(line: 205, column: 1, scope: !4816)
!5207 = !{i64 2147618849, i64 2147618892, i64 2147618932}
!5208 = !DILocation(line: 206, column: 1, scope: !4816)
!5209 = !{i64 2147619093, i64 2147619136, i64 2147619176}
!5210 = !DILocation(line: 207, column: 1, scope: !4816)
!5211 = !{i64 2147619304, i64 2147619347, i64 2147619387}
!5212 = !DILocation(line: 208, column: 1, scope: !4816)
!5213 = !{i64 2147619533, i64 2147619576, i64 2147619616}
!5214 = !DILocation(line: 209, column: 1, scope: !4816)
!5215 = !{i64 2147619798, i64 2147619841, i64 2147619881}
!5216 = !DILocation(line: 210, column: 1, scope: !4816)
!5217 = !{i64 2147620003, i64 2147620046, i64 2147620086}
!5218 = !DILocation(line: 211, column: 1, scope: !4816)
!5219 = !{i64 2147620199, i64 2147620242, i64 2147620282}
!5220 = !DILocation(line: 212, column: 1, scope: !4816)
!5221 = !{i64 2147620422, i64 2147620465, i64 2147620505}
!5222 = !DILocation(line: 213, column: 1, scope: !4816)
!5223 = !{i64 2147620585, i64 2147620628, i64 2147620668}
!5224 = !DILocation(line: 214, column: 1, scope: !4816)
!5225 = !{i64 2147620790, i64 2147620833, i64 2147620873}
!5226 = !DILocation(line: 215, column: 1, scope: !4816)
!5227 = !{i64 2147621010, i64 2147621053, i64 2147621093}
!5228 = !DILocation(line: 216, column: 1, scope: !4816)
!5229 = !{i64 2147621224, i64 2147621267, i64 2147621307}
!5230 = !DILocation(line: 217, column: 1, scope: !4816)
!5231 = !{i64 2147621438, i64 2147621481, i64 2147621521}
!5232 = !DILocation(line: 218, column: 1, scope: !4816)
!5233 = !{i64 2147625719, i64 2147625762, i64 2147625802}
!5234 = !DILocation(line: 219, column: 1, scope: !4816)
!5235 = !{i64 2147625930, i64 2147625973, i64 2147626013}
!5236 = !DILocation(line: 220, column: 1, scope: !4816)
!5237 = !{i64 2147626123, i64 2147626166, i64 2147626206}
!5238 = !DILocation(line: 221, column: 1, scope: !4816)
!5239 = !{i64 2147626322, i64 2147626365, i64 2147626405}
!5240 = !DILocation(line: 222, column: 1, scope: !4816)
!5241 = !{i64 2147626494, i64 2147626537, i64 2147626577}
!5242 = !DILocation(line: 223, column: 1, scope: !4816)
!5243 = !{i64 2147626687, i64 2147626730, i64 2147626770}
!5244 = !DILocation(line: 224, column: 1, scope: !4816)
!5245 = !{i64 2147626883, i64 2147626926, i64 2147626966}
!5246 = !DILocation(line: 225, column: 1, scope: !4816)
!5247 = !{i64 2147627110, i64 2147627153, i64 2147627193}
!5248 = !DILocation(line: 226, column: 1, scope: !4816)
!5249 = !{i64 2147627327, i64 2147627370, i64 2147627410}
!5250 = !DILocation(line: 227, column: 1, scope: !4816)
!5251 = !{i64 2147627619, i64 2147627662, i64 2147627702}
!5252 = !DILocation(line: 228, column: 1, scope: !4816)
!5253 = !{i64 2147627851, i64 2147627894, i64 2147627934}
!5254 = !DILocation(line: 229, column: 1, scope: !4816)
!5255 = !{i64 2147628068, i64 2147628111, i64 2147628151}
!5256 = !DILocation(line: 230, column: 1, scope: !4816)
!5257 = !{i64 2147628275, i64 2147628318, i64 2147628358}
!5258 = !DILocation(line: 231, column: 1, scope: !4816)
!5259 = !{i64 2147628476, i64 2147628519, i64 2147628559}
!5260 = !DILocation(line: 232, column: 1, scope: !4816)
!5261 = !{i64 2147628708, i64 2147628751, i64 2147628791}
!5262 = !DILocation(line: 233, column: 1, scope: !4816)
!5263 = !{i64 2147628916, i64 2147628959, i64 2147628999}
!5264 = !DILocation(line: 234, column: 1, scope: !4816)
!5265 = !{i64 2147629106, i64 2147629149, i64 2147629189}
!5266 = !DILocation(line: 235, column: 1, scope: !4816)
!5267 = !{i64 2147629332, i64 2147629375, i64 2147629415}
!5268 = !DILocation(line: 236, column: 1, scope: !4816)
!5269 = !{i64 2147629521, i64 2147629564, i64 2147629604}
!5270 = !DILocation(line: 237, column: 1, scope: !4816)
!5271 = !{i64 2147629792, i64 2147629835, i64 2147629875}
!5272 = !DILocation(line: 238, column: 1, scope: !4816)
!5273 = !{i64 2147630012, i64 2147630055, i64 2147630095}
!5274 = !DILocation(line: 239, column: 1, scope: !4816)
!5275 = !{i64 2147630265, i64 2147630308, i64 2147630348}
!5276 = !DILocation(line: 240, column: 1, scope: !4816)
!5277 = !{i64 2147630473, i64 2147630516, i64 2147630556}
!5278 = !DILocation(line: 241, column: 1, scope: !4816)
!5279 = !{i64 2147630705, i64 2147630748, i64 2147630788}
!5280 = !DILocation(line: 242, column: 1, scope: !4816)
!5281 = !{i64 2147630916, i64 2147630959, i64 2147630999}
!5282 = !DILocation(line: 243, column: 1, scope: !4816)
!5283 = !{i64 2147631106, i64 2147631149, i64 2147631189}
!5284 = !DILocation(line: 244, column: 1, scope: !4816)
!5285 = !{i64 2147631320, i64 2147631363, i64 2147631403}
!5286 = !DILocation(line: 245, column: 1, scope: !4816)
!5287 = !{i64 2147631519, i64 2147631562, i64 2147631602}
!5288 = !DILocation(line: 246, column: 1, scope: !4816)
!5289 = !{i64 2147631706, i64 2147631749, i64 2147631789}
!5290 = !DILocation(line: 247, column: 1, scope: !4816)
!5291 = !{i64 2147631914, i64 2147631957, i64 2147631997}
!5292 = !DILocation(line: 248, column: 1, scope: !4816)
!5293 = !{i64 2147632143, i64 2147632186, i64 2147632226}
!5294 = !DILocation(line: 249, column: 1, scope: !4816)
!5295 = !{i64 2147632345, i64 2147632388, i64 2147632428}
!5296 = !DILocation(line: 250, column: 1, scope: !4816)
!5297 = !{i64 2147632544, i64 2147632587, i64 2147632627}
!5298 = !DILocation(line: 251, column: 1, scope: !4816)
!5299 = !{i64 2147632761, i64 2147632804, i64 2147632844}
!5300 = !DILocation(line: 253, column: 1, scope: !4816)
!5301 = distinct !DISubprogram(name: "atmel_sam3x_init", scope: !232, file: !232, line: 205, type: !239, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5302)
!5302 = !{!5303, !5304}
!5303 = !DILocalVariable(name: "arg", arg: 1, scope: !5301, file: !232, line: 205, type: !241)
!5304 = !DILocalVariable(name: "key", scope: !5301, file: !232, line: 207, type: !137)
!5305 = !DILocation(line: 0, scope: !5301)
!5306 = !DILocation(line: 55, column: 2, scope: !5307, inlinedAt: !5314)
!5307 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5308, file: !5308, line: 42, type: !5309, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5311)
!5308 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5309 = !DISubroutineType(types: !5310)
!5310 = !{!32}
!5311 = !{!5312, !5313}
!5312 = !DILocalVariable(name: "key", scope: !5307, file: !5308, line: 44, type: !32)
!5313 = !DILocalVariable(name: "tmp", scope: !5307, file: !5308, line: 53, type: !32)
!5314 = distinct !DILocation(line: 211, column: 8, scope: !5301)
!5315 = !{i64 1322857}
!5316 = !DILocation(line: 0, scope: !5307, inlinedAt: !5314)
!5317 = !DILocation(line: 219, column: 17, scope: !5301)
!5318 = !DILocation(line: 220, column: 17, scope: !5301)
!5319 = !DILocation(line: 65, column: 16, scope: !5320, inlinedAt: !5323)
!5320 = distinct !DISubprogram(name: "clock_init", scope: !232, file: !232, line: 45, type: !646, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5321)
!5321 = !{!5322}
!5322 = !DILocalVariable(name: "reg_val", scope: !5320, file: !232, line: 47, type: !137)
!5323 = distinct !DILocation(line: 223, column: 2, scope: !5301)
!5324 = !DILocation(line: 78, column: 2, scope: !5320, inlinedAt: !5323)
!5325 = !DILocation(line: 78, column: 16, scope: !5320, inlinedAt: !5323)
!5326 = !DILocation(line: 78, column: 23, scope: !5320, inlinedAt: !5323)
!5327 = !DILocation(line: 78, column: 9, scope: !5320, inlinedAt: !5323)
!5328 = distinct !{!5328, !5324, !5329}
!5329 = !DILocation(line: 80, column: 2, scope: !5320, inlinedAt: !5323)
!5330 = !DILocation(line: 83, column: 16, scope: !5320, inlinedAt: !5323)
!5331 = !DILocation(line: 91, column: 2, scope: !5320, inlinedAt: !5323)
!5332 = !DILocation(line: 91, column: 16, scope: !5320, inlinedAt: !5323)
!5333 = !DILocation(line: 91, column: 23, scope: !5320, inlinedAt: !5323)
!5334 = !DILocation(line: 91, column: 9, scope: !5320, inlinedAt: !5323)
!5335 = distinct !{!5335, !5331, !5336}
!5336 = !DILocation(line: 93, column: 2, scope: !5320, inlinedAt: !5323)
!5337 = !DILocation(line: 96, column: 16, scope: !5320, inlinedAt: !5323)
!5338 = !DILocation(line: 102, column: 2, scope: !5320, inlinedAt: !5323)
!5339 = !DILocation(line: 102, column: 14, scope: !5320, inlinedAt: !5323)
!5340 = !DILocation(line: 102, column: 21, scope: !5320, inlinedAt: !5323)
!5341 = distinct !{!5341, !5338, !5342}
!5342 = !DILocation(line: 104, column: 2, scope: !5320, inlinedAt: !5323)
!5343 = !DILocation(line: 143, column: 17, scope: !5320, inlinedAt: !5323)
!5344 = !DILocation(line: 143, column: 26, scope: !5320, inlinedAt: !5323)
!5345 = !DILocation(line: 0, scope: !5320, inlinedAt: !5323)
!5346 = !DILocation(line: 144, column: 26, scope: !5320, inlinedAt: !5323)
!5347 = !DILocation(line: 144, column: 16, scope: !5320, inlinedAt: !5323)
!5348 = !DILocation(line: 147, column: 2, scope: !5320, inlinedAt: !5323)
!5349 = !DILocation(line: 147, column: 16, scope: !5320, inlinedAt: !5323)
!5350 = !DILocation(line: 147, column: 23, scope: !5320, inlinedAt: !5323)
!5351 = !DILocation(line: 147, column: 9, scope: !5320, inlinedAt: !5323)
!5352 = distinct !{!5352, !5348, !5353}
!5353 = !DILocation(line: 149, column: 2, scope: !5320, inlinedAt: !5323)
!5354 = !DILocation(line: 152, column: 18, scope: !5320, inlinedAt: !5323)
!5355 = !DILocation(line: 164, column: 2, scope: !5320, inlinedAt: !5323)
!5356 = !DILocation(line: 164, column: 16, scope: !5320, inlinedAt: !5323)
!5357 = !DILocation(line: 164, column: 23, scope: !5320, inlinedAt: !5323)
!5358 = !DILocation(line: 164, column: 9, scope: !5320, inlinedAt: !5323)
!5359 = distinct !{!5359, !5355, !5360}
!5360 = !DILocation(line: 166, column: 2, scope: !5320, inlinedAt: !5323)
!5361 = !DILocation(line: 179, column: 17, scope: !5320, inlinedAt: !5323)
!5362 = !DILocation(line: 179, column: 26, scope: !5320, inlinedAt: !5323)
!5363 = !DILocation(line: 180, column: 16, scope: !5320, inlinedAt: !5323)
!5364 = !DILocation(line: 183, column: 2, scope: !5320, inlinedAt: !5323)
!5365 = !DILocation(line: 183, column: 16, scope: !5320, inlinedAt: !5323)
!5366 = !DILocation(line: 183, column: 23, scope: !5320, inlinedAt: !5323)
!5367 = !DILocation(line: 183, column: 9, scope: !5320, inlinedAt: !5323)
!5368 = distinct !{!5368, !5364, !5369}
!5369 = !DILocation(line: 185, column: 2, scope: !5320, inlinedAt: !5323)
!5370 = !DILocation(line: 188, column: 17, scope: !5320, inlinedAt: !5323)
!5371 = !DILocation(line: 188, column: 26, scope: !5320, inlinedAt: !5323)
!5372 = !DILocation(line: 189, column: 26, scope: !5320, inlinedAt: !5323)
!5373 = !DILocation(line: 189, column: 16, scope: !5320, inlinedAt: !5323)
!5374 = !DILocation(line: 192, column: 2, scope: !5320, inlinedAt: !5323)
!5375 = !DILocation(line: 192, column: 16, scope: !5320, inlinedAt: !5323)
!5376 = !DILocation(line: 192, column: 23, scope: !5320, inlinedAt: !5323)
!5377 = !DILocation(line: 192, column: 9, scope: !5320, inlinedAt: !5323)
!5378 = distinct !{!5378, !5374, !5379}
!5379 = !DILocation(line: 194, column: 2, scope: !5320, inlinedAt: !5323)
!5380 = !DILocalVariable(name: "key", arg: 1, scope: !5381, file: !5308, line: 84, type: !32)
!5381 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !167, retainedNodes: !5384)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{null, !32}
!5384 = !{!5380}
!5385 = !DILocation(line: 0, scope: !5381, inlinedAt: !5386)
!5386 = distinct !DILocation(line: 230, column: 2, scope: !5301)
!5387 = !DILocation(line: 95, column: 2, scope: !5381, inlinedAt: !5386)
!5388 = !{i64 1323674}
!5389 = !DILocation(line: 232, column: 2, scope: !5301)
!5390 = distinct !DISubprogram(name: "soc_pmc_peripheral_enable", scope: !5391, file: !5391, line: 19, type: !5392, scopeLine: 20, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !5394)
!5391 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/common/soc_pmc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5392 = !DISubroutineType(types: !5393)
!5393 = !{null, !137}
!5394 = !{!5395}
!5395 = !DILocalVariable(name: "id", arg: 1, scope: !5390, file: !5391, line: 19, type: !137)
!5396 = !DILocation(line: 0, scope: !5390)
!5397 = !DILocation(line: 23, column: 9, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5390, file: !5391, line: 23, column: 6)
!5399 = !DILocation(line: 23, column: 6, scope: !5390)
!5400 = !DILocation(line: 24, column: 20, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5398, file: !5391, line: 23, column: 15)
!5402 = !DILocation(line: 24, column: 18, scope: !5401)
!5403 = !DILocation(line: 26, column: 2, scope: !5401)
!5404 = !DILocation(line: 26, column: 16, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5398, file: !5391, line: 26, column: 13)
!5406 = !DILocation(line: 26, column: 13, scope: !5398)
!5407 = !DILocation(line: 27, column: 20, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5405, file: !5391, line: 26, column: 22)
!5409 = !DILocation(line: 27, column: 18, scope: !5408)
!5410 = !DILocation(line: 33, column: 2, scope: !5408)
!5411 = !DILocation(line: 34, column: 1, scope: !5390)
!5412 = distinct !DISubprogram(name: "soc_pmc_peripheral_disable", scope: !5391, file: !5391, line: 36, type: !5392, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !5413)
!5413 = !{!5414}
!5414 = !DILocalVariable(name: "id", arg: 1, scope: !5412, file: !5391, line: 36, type: !137)
!5415 = !DILocation(line: 0, scope: !5412)
!5416 = !DILocation(line: 40, column: 9, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5412, file: !5391, line: 40, column: 6)
!5418 = !DILocation(line: 40, column: 6, scope: !5412)
!5419 = !DILocation(line: 43, column: 16, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5417, file: !5391, line: 43, column: 13)
!5421 = !DILocation(line: 43, column: 13, scope: !5417)
!5422 = !DILocation(line: 44, column: 20, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5420, file: !5391, line: 43, column: 22)
!5424 = !DILocation(line: 50, column: 2, scope: !5423)
!5425 = !DILocation(line: 0, scope: !5417)
!5426 = !DILocation(line: 51, column: 1, scope: !5412)
!5427 = distinct !DISubprogram(name: "soc_pmc_peripheral_is_enabled", scope: !5391, file: !5391, line: 53, type: !5428, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1694, retainedNodes: !5430)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!137, !137}
!5430 = !{!5431}
!5431 = !DILocalVariable(name: "id", arg: 1, scope: !5427, file: !5391, line: 53, type: !137)
!5432 = !DILocation(line: 0, scope: !5427)
!5433 = !DILocation(line: 57, column: 9, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5427, file: !5391, line: 57, column: 6)
!5435 = !DILocation(line: 57, column: 6, scope: !5427)
!5436 = !DILocation(line: 58, column: 16, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5434, file: !5391, line: 57, column: 15)
!5438 = !DILocation(line: 58, column: 28, scope: !5437)
!5439 = !DILocation(line: 58, column: 26, scope: !5437)
!5440 = !DILocation(line: 58, column: 37, scope: !5437)
!5441 = !DILocation(line: 58, column: 3, scope: !5437)
!5442 = !DILocation(line: 60, column: 16, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5434, file: !5391, line: 60, column: 13)
!5444 = !DILocation(line: 60, column: 13, scope: !5434)
!5445 = !DILocation(line: 61, column: 16, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !5391, line: 60, column: 22)
!5447 = !DILocation(line: 61, column: 28, scope: !5446)
!5448 = !DILocation(line: 61, column: 26, scope: !5446)
!5449 = !DILocation(line: 61, column: 44, scope: !5446)
!5450 = !DILocation(line: 61, column: 3, scope: !5446)
!5451 = !DILocation(line: 70, column: 1, scope: !5427)
!5452 = distinct !DISubprogram(name: "soc_gpio_configure", scope: !5453, file: !5453, line: 116, type: !5454, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !5523)
!5453 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/common/soc_gpio.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !5456}
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 32)
!5457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5458)
!5458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_gpio_pin", file: !5459, line: 85, size: 128, elements: !5460)
!5459 = !DIFile(filename: "zephyr/soc/arm/atmel_sam/sam3x/../common/soc_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5460 = !{!5461, !5462, !5521, !5522}
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5458, file: !5459, line: 86, baseType: !137, size: 32)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5458, file: !5459, line: 90, baseType: !5463, size: 32, offset: 32)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5464, size: 32)
!5464 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pio", file: !1015, line: 96, baseType: !5465)
!5465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1015, line: 41, size: 1888, elements: !5466)
!5466 = !{!5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520}
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PER", scope: !5465, file: !1015, line: 42, baseType: !176, size: 32)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDR", scope: !5465, file: !1015, line: 43, baseType: !176, size: 32, offset: 32)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PSR", scope: !5465, file: !1015, line: 44, baseType: !179, size: 32, offset: 64)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved1", scope: !5465, file: !1015, line: 45, baseType: !190, size: 32, offset: 96)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OER", scope: !5465, file: !1015, line: 46, baseType: !176, size: 32, offset: 128)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODR", scope: !5465, file: !1015, line: 47, baseType: !176, size: 32, offset: 160)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OSR", scope: !5465, file: !1015, line: 48, baseType: !179, size: 32, offset: 192)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved2", scope: !5465, file: !1015, line: 49, baseType: !190, size: 32, offset: 224)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFER", scope: !5465, file: !1015, line: 50, baseType: !176, size: 32, offset: 256)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDR", scope: !5465, file: !1015, line: 51, baseType: !176, size: 32, offset: 288)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFSR", scope: !5465, file: !1015, line: 52, baseType: !179, size: 32, offset: 320)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved3", scope: !5465, file: !1015, line: 53, baseType: !190, size: 32, offset: 352)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SODR", scope: !5465, file: !1015, line: 54, baseType: !176, size: 32, offset: 384)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_CODR", scope: !5465, file: !1015, line: 55, baseType: !176, size: 32, offset: 416)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ODSR", scope: !5465, file: !1015, line: 56, baseType: !176, size: 32, offset: 448)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PDSR", scope: !5465, file: !1015, line: 57, baseType: !179, size: 32, offset: 480)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IER", scope: !5465, file: !1015, line: 58, baseType: !176, size: 32, offset: 512)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IDR", scope: !5465, file: !1015, line: 59, baseType: !176, size: 32, offset: 544)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IMR", scope: !5465, file: !1015, line: 60, baseType: !179, size: 32, offset: 576)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ISR", scope: !5465, file: !1015, line: 61, baseType: !179, size: 32, offset: 608)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDER", scope: !5465, file: !1015, line: 62, baseType: !176, size: 32, offset: 640)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDDR", scope: !5465, file: !1015, line: 63, baseType: !176, size: 32, offset: 672)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_MDSR", scope: !5465, file: !1015, line: 64, baseType: !179, size: 32, offset: 704)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved4", scope: !5465, file: !1015, line: 65, baseType: !190, size: 32, offset: 736)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUDR", scope: !5465, file: !1015, line: 66, baseType: !176, size: 32, offset: 768)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUER", scope: !5465, file: !1015, line: 67, baseType: !176, size: 32, offset: 800)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_PUSR", scope: !5465, file: !1015, line: 68, baseType: !179, size: 32, offset: 832)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved5", scope: !5465, file: !1015, line: 69, baseType: !190, size: 32, offset: 864)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ABSR", scope: !5465, file: !1015, line: 70, baseType: !176, size: 32, offset: 896)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved6", scope: !5465, file: !1015, line: 71, baseType: !1048, size: 96, offset: 928)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCIFSR", scope: !5465, file: !1015, line: 72, baseType: !176, size: 32, offset: 1024)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_DIFSR", scope: !5465, file: !1015, line: 73, baseType: !176, size: 32, offset: 1056)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_IFDGSR", scope: !5465, file: !1015, line: 74, baseType: !179, size: 32, offset: 1088)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_SCDR", scope: !5465, file: !1015, line: 75, baseType: !176, size: 32, offset: 1120)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved7", scope: !5465, file: !1015, line: 76, baseType: !965, size: 128, offset: 1152)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWER", scope: !5465, file: !1015, line: 77, baseType: !176, size: 32, offset: 1280)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWDR", scope: !5465, file: !1015, line: 78, baseType: !176, size: 32, offset: 1312)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_OWSR", scope: !5465, file: !1015, line: 79, baseType: !179, size: 32, offset: 1344)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved8", scope: !5465, file: !1015, line: 80, baseType: !190, size: 32, offset: 1376)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMER", scope: !5465, file: !1015, line: 81, baseType: !176, size: 32, offset: 1408)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMDR", scope: !5465, file: !1015, line: 82, baseType: !176, size: 32, offset: 1440)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_AIMMR", scope: !5465, file: !1015, line: 83, baseType: !179, size: 32, offset: 1472)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved9", scope: !5465, file: !1015, line: 84, baseType: !190, size: 32, offset: 1504)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ESR", scope: !5465, file: !1015, line: 85, baseType: !176, size: 32, offset: 1536)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LSR", scope: !5465, file: !1015, line: 86, baseType: !176, size: 32, offset: 1568)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_ELSR", scope: !5465, file: !1015, line: 87, baseType: !179, size: 32, offset: 1600)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved10", scope: !5465, file: !1015, line: 88, baseType: !190, size: 32, offset: 1632)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FELLSR", scope: !5465, file: !1015, line: 89, baseType: !176, size: 32, offset: 1664)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_REHLSR", scope: !5465, file: !1015, line: 90, baseType: !176, size: 32, offset: 1696)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_FRLHSR", scope: !5465, file: !1015, line: 91, baseType: !179, size: 32, offset: 1728)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "Reserved11", scope: !5465, file: !1015, line: 92, baseType: !190, size: 32, offset: 1760)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_LOCKSR", scope: !5465, file: !1015, line: 93, baseType: !179, size: 32, offset: 1792)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPMR", scope: !5465, file: !1015, line: 94, baseType: !176, size: 32, offset: 1824)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "PIO_WPSR", scope: !5465, file: !1015, line: 95, baseType: !179, size: 32, offset: 1856)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !5458, file: !5459, line: 92, baseType: !256, size: 8, offset: 64)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5458, file: !5459, line: 93, baseType: !137, size: 32, offset: 96)
!5523 = !{!5524, !5525, !5526, !5527, !5528, !5529}
!5524 = !DILocalVariable(name: "pin", arg: 1, scope: !5452, file: !5453, line: 116, type: !5456)
!5525 = !DILocalVariable(name: "mask", scope: !5452, file: !5453, line: 118, type: !137)
!5526 = !DILocalVariable(name: "pio", scope: !5452, file: !5453, line: 119, type: !5463)
!5527 = !DILocalVariable(name: "periph_id", scope: !5452, file: !5453, line: 120, type: !256)
!5528 = !DILocalVariable(name: "flags", scope: !5452, file: !5453, line: 121, type: !137)
!5529 = !DILocalVariable(name: "type", scope: !5452, file: !5453, line: 122, type: !137)
!5530 = !DILocation(line: 0, scope: !5452)
!5531 = !DILocation(line: 118, column: 23, scope: !5452)
!5532 = !DILocation(line: 119, column: 18, scope: !5452)
!5533 = !DILocation(line: 120, column: 27, scope: !5452)
!5534 = !DILocation(line: 121, column: 24, scope: !5452)
!5535 = !DILocation(line: 122, column: 29, scope: !5452)
!5536 = !DILocation(line: 125, column: 2, scope: !5452)
!5537 = !DILocation(line: 127, column: 2, scope: !5452)
!5538 = !DILocation(line: 133, column: 20, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5452, file: !5453, line: 127, column: 16)
!5540 = !DILocation(line: 133, column: 8, scope: !5539)
!5541 = !DILocation(line: 133, column: 17, scope: !5539)
!5542 = !DILocation(line: 136, column: 8, scope: !5539)
!5543 = !DILocation(line: 137, column: 3, scope: !5539)
!5544 = !DILocation(line: 144, column: 8, scope: !5539)
!5545 = !DILocation(line: 144, column: 17, scope: !5539)
!5546 = !DILocation(line: 147, column: 8, scope: !5539)
!5547 = !DILocation(line: 148, column: 3, scope: !5539)
!5548 = !DILocation(line: 168, column: 29, scope: !5539)
!5549 = !DILocation(line: 168, column: 3, scope: !5539)
!5550 = !DILocation(line: 170, column: 3, scope: !5539)
!5551 = !DILocation(line: 172, column: 8, scope: !5539)
!5552 = !DILocation(line: 172, column: 16, scope: !5539)
!5553 = !DILocation(line: 173, column: 8, scope: !5539)
!5554 = !DILocation(line: 174, column: 3, scope: !5539)
!5555 = !DILocation(line: 179, column: 12, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5539, file: !5453, line: 179, column: 7)
!5557 = !DILocation(line: 179, column: 7, scope: !5539)
!5558 = !DILocation(line: 0, scope: !5556)
!5559 = !DILocation(line: 186, column: 3, scope: !5539)
!5560 = !DILocation(line: 188, column: 8, scope: !5539)
!5561 = !DILocation(line: 188, column: 16, scope: !5539)
!5562 = !DILocation(line: 189, column: 8, scope: !5539)
!5563 = !DILocation(line: 190, column: 3, scope: !5539)
!5564 = !DILocation(line: 0, scope: !5539)
!5565 = !DILocation(line: 196, column: 1, scope: !5452)
!5566 = distinct !DISubprogram(name: "configure_common_attr", scope: !5453, file: !5453, line: 24, type: !5567, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !5569)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{null, !5463, !137, !137}
!5569 = !{!5570, !5571, !5572}
!5570 = !DILocalVariable(name: "pio", arg: 1, scope: !5566, file: !5453, line: 24, type: !5463)
!5571 = !DILocalVariable(name: "mask", arg: 2, scope: !5566, file: !5453, line: 24, type: !137)
!5572 = !DILocalVariable(name: "flags", arg: 3, scope: !5566, file: !5453, line: 24, type: !137)
!5573 = !DILocation(line: 0, scope: !5566)
!5574 = !DILocation(line: 27, column: 7, scope: !5566)
!5575 = !DILocation(line: 27, column: 15, scope: !5566)
!5576 = !DILocation(line: 30, column: 12, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5566, file: !5453, line: 30, column: 6)
!5578 = !DILocation(line: 30, column: 6, scope: !5566)
!5579 = !DILocation(line: 0, scope: !5577)
!5580 = !DILocation(line: 47, column: 12, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5566, file: !5453, line: 47, column: 6)
!5582 = !DILocation(line: 47, column: 6, scope: !5566)
!5583 = !DILocation(line: 0, scope: !5581)
!5584 = !DILocation(line: 52, column: 1, scope: !5566)
!5585 = distinct !DISubprogram(name: "configure_input_attr", scope: !5453, file: !5453, line: 54, type: !5567, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !5586)
!5586 = !{!5587, !5588, !5589}
!5587 = !DILocalVariable(name: "pio", arg: 1, scope: !5585, file: !5453, line: 54, type: !5463)
!5588 = !DILocalVariable(name: "mask", arg: 2, scope: !5585, file: !5453, line: 54, type: !137)
!5589 = !DILocalVariable(name: "flags", arg: 3, scope: !5585, file: !5453, line: 54, type: !137)
!5590 = !DILocation(line: 0, scope: !5585)
!5591 = !DILocation(line: 57, column: 13, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5585, file: !5453, line: 57, column: 6)
!5593 = !DILocation(line: 57, column: 6, scope: !5585)
!5594 = !DILocation(line: 63, column: 9, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !5453, line: 58, column: 73)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !5453, line: 58, column: 7)
!5597 = distinct !DILexicalBlock(scope: !5592, file: !5453, line: 57, column: 47)
!5598 = !DILocation(line: 65, column: 3, scope: !5595)
!5599 = !DILocation(line: 70, column: 9, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5596, file: !5453, line: 65, column: 10)
!5601 = !DILocation(line: 0, scope: !5596)
!5602 = !DILocation(line: 73, column: 8, scope: !5597)
!5603 = !DILocation(line: 74, column: 2, scope: !5597)
!5604 = !DILocation(line: 75, column: 8, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5592, file: !5453, line: 74, column: 9)
!5606 = !DILocation(line: 0, scope: !5592)
!5607 = !DILocation(line: 79, column: 12, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5585, file: !5453, line: 79, column: 6)
!5609 = !DILocation(line: 79, column: 6, scope: !5585)
!5610 = !DILocation(line: 80, column: 7, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5608, file: !5453, line: 79, column: 35)
!5612 = !DILocation(line: 82, column: 9, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5614, file: !5453, line: 80, column: 74)
!5614 = distinct !DILexicalBlock(scope: !5611, file: !5453, line: 80, column: 7)
!5615 = !DILocation(line: 83, column: 3, scope: !5613)
!5616 = !DILocation(line: 87, column: 10, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !5453, line: 85, column: 68)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !5453, line: 85, column: 8)
!5619 = distinct !DILexicalBlock(scope: !5614, file: !5453, line: 83, column: 10)
!5620 = !DILocation(line: 88, column: 4, scope: !5617)
!5621 = !DILocation(line: 90, column: 10, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5618, file: !5453, line: 88, column: 11)
!5623 = !DILocation(line: 0, scope: !5618)
!5624 = !DILocation(line: 93, column: 14, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5619, file: !5453, line: 93, column: 8)
!5626 = !DILocation(line: 93, column: 8, scope: !5619)
!5627 = !DILocation(line: 0, scope: !5625)
!5628 = !DILocation(line: 99, column: 9, scope: !5619)
!5629 = !DILocation(line: 0, scope: !5614)
!5630 = !DILocation(line: 102, column: 8, scope: !5611)
!5631 = !DILocation(line: 102, column: 16, scope: !5611)
!5632 = !DILocation(line: 103, column: 2, scope: !5611)
!5633 = !DILocation(line: 108, column: 1, scope: !5585)
!5634 = distinct !DISubprogram(name: "configure_output_attr", scope: !5453, file: !5453, line: 110, type: !5567, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !5635)
!5635 = !{!5636, !5637, !5638}
!5636 = !DILocalVariable(name: "pio", arg: 1, scope: !5634, file: !5453, line: 110, type: !5463)
!5637 = !DILocalVariable(name: "mask", arg: 2, scope: !5634, file: !5453, line: 110, type: !137)
!5638 = !DILocalVariable(name: "flags", arg: 3, scope: !5634, file: !5453, line: 110, type: !137)
!5639 = !DILocation(line: 0, scope: !5634)
!5640 = !DILocation(line: 113, column: 7, scope: !5634)
!5641 = !DILocation(line: 113, column: 16, scope: !5634)
!5642 = !DILocation(line: 114, column: 1, scope: !5634)
!5643 = distinct !DISubprogram(name: "soc_gpio_list_configure", scope: !5453, file: !5453, line: 198, type: !5644, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !5646)
!5644 = !DISubroutineType(types: !5645)
!5645 = !{null, !5456, !32}
!5646 = !{!5647, !5648, !5649}
!5647 = !DILocalVariable(name: "pins", arg: 1, scope: !5643, file: !5453, line: 198, type: !5456)
!5648 = !DILocalVariable(name: "size", arg: 2, scope: !5643, file: !5453, line: 199, type: !32)
!5649 = !DILocalVariable(name: "i", scope: !5650, file: !5453, line: 201, type: !103)
!5650 = distinct !DILexicalBlock(scope: !5643, file: !5453, line: 201, column: 2)
!5651 = !DILocation(line: 0, scope: !5643)
!5652 = !DILocation(line: 0, scope: !5650)
!5653 = !DILocation(line: 201, column: 20, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !5453, line: 201, column: 2)
!5655 = !DILocation(line: 201, column: 2, scope: !5650)
!5656 = !DILocation(line: 204, column: 1, scope: !5643)
!5657 = !DILocation(line: 202, column: 23, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5654, file: !5453, line: 201, column: 33)
!5659 = !DILocation(line: 202, column: 3, scope: !5658)
!5660 = !DILocation(line: 201, column: 29, scope: !5654)
!5661 = distinct !{!5661, !5655, !5662}
!5662 = !DILocation(line: 203, column: 2, scope: !5650)
!5663 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5664, file: !5664, line: 57, type: !5665, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !5711)
!5664 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !32, !5667}
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 32)
!5668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5669)
!5669 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !1857, line: 141, baseType: !5670)
!5670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !1857, line: 97, size: 256, elements: !5671)
!5671 = !{!5672}
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5670, file: !1857, line: 107, baseType: !5673, size: 256)
!5673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !1857, line: 98, size: 256, elements: !5674)
!5674 = !{!5675, !5680, !5685, !5690, !5695, !5700, !5705, !5710}
!5675 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 99, baseType: !5676, size: 32)
!5676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 99, size: 32, elements: !5677)
!5677 = !{!5678, !5679}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5676, file: !1857, line: 99, baseType: !137, size: 32)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5676, file: !1857, line: 99, baseType: !137, size: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 100, baseType: !5681, size: 32, offset: 32)
!5681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 100, size: 32, elements: !5682)
!5682 = !{!5683, !5684}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5681, file: !1857, line: 100, baseType: !137, size: 32)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5681, file: !1857, line: 100, baseType: !137, size: 32)
!5685 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 101, baseType: !5686, size: 32, offset: 64)
!5686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 101, size: 32, elements: !5687)
!5687 = !{!5688, !5689}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5686, file: !1857, line: 101, baseType: !137, size: 32)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5686, file: !1857, line: 101, baseType: !137, size: 32)
!5690 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 102, baseType: !5691, size: 32, offset: 96)
!5691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 102, size: 32, elements: !5692)
!5692 = !{!5693, !5694}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5691, file: !1857, line: 102, baseType: !137, size: 32)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5691, file: !1857, line: 102, baseType: !137, size: 32)
!5695 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 103, baseType: !5696, size: 32, offset: 128)
!5696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 103, size: 32, elements: !5697)
!5697 = !{!5698, !5699}
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5696, file: !1857, line: 103, baseType: !137, size: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5696, file: !1857, line: 103, baseType: !137, size: 32)
!5700 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 104, baseType: !5701, size: 32, offset: 160)
!5701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 104, size: 32, elements: !5702)
!5702 = !{!5703, !5704}
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5701, file: !1857, line: 104, baseType: !137, size: 32)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5701, file: !1857, line: 104, baseType: !137, size: 32)
!5705 = !DIDerivedType(tag: DW_TAG_member, scope: !5673, file: !1857, line: 105, baseType: !5706, size: 32, offset: 192)
!5706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5673, file: !1857, line: 105, size: 32, elements: !5707)
!5707 = !{!5708, !5709}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5706, file: !1857, line: 105, baseType: !137, size: 32)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5706, file: !1857, line: 105, baseType: !137, size: 32)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5673, file: !1857, line: 106, baseType: !137, size: 32, offset: 224)
!5711 = !{!5712, !5713}
!5712 = !DILocalVariable(name: "reason", arg: 1, scope: !5663, file: !5664, line: 57, type: !32)
!5713 = !DILocalVariable(name: "esf", arg: 2, scope: !5663, file: !5664, line: 57, type: !5667)
!5714 = !DILocation(line: 0, scope: !5663)
!5715 = !DILocation(line: 63, column: 2, scope: !5663)
!5716 = !DILocation(line: 64, column: 1, scope: !5663)
!5717 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5664, file: !5664, line: 82, type: !5718, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !5733)
!5718 = !DISubroutineType(types: !5719)
!5719 = !{null, !5667, !5720}
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 32)
!5721 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !353, line: 37, baseType: !5722)
!5722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !5723)
!5723 = !{!5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5722, file: !353, line: 26, baseType: !137, size: 32)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5722, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5722, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5722, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5722, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5722, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5722, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5722, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5722, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!5733 = !{!5734, !5735, !5736}
!5734 = !DILocalVariable(name: "esf", arg: 1, scope: !5717, file: !5664, line: 82, type: !5667)
!5735 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5717, file: !5664, line: 82, type: !5720)
!5736 = !DILocalVariable(name: "reason", scope: !5717, file: !5664, line: 88, type: !32)
!5737 = !DILocation(line: 0, scope: !5717)
!5738 = !DILocation(line: 88, column: 35, scope: !5717)
!5739 = !DILocation(line: 108, column: 2, scope: !5717)
!5740 = !DILocation(line: 131, column: 1, scope: !5717)
!5741 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5664, file: !5664, line: 133, type: !5742, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1736, retainedNodes: !5744)
!5742 = !DISubroutineType(types: !5743)
!5743 = !{null, !102}
!5744 = !{!5745, !5746, !5747}
!5745 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5741, file: !5664, line: 133, type: !102)
!5746 = !DILocalVariable(name: "ssf_contents", scope: !5741, file: !5664, line: 135, type: !149)
!5747 = !DILocalVariable(name: "oops_esf", scope: !5741, file: !5664, line: 136, type: !5669)
!5748 = !DILocation(line: 0, scope: !5741)
!5749 = !DILocation(line: 136, column: 2, scope: !5741)
!5750 = !DILocation(line: 136, column: 15, scope: !5741)
!5751 = !DILocation(line: 139, column: 22, scope: !5741)
!5752 = !DILocation(line: 139, column: 17, scope: !5741)
!5753 = !DILocation(line: 139, column: 20, scope: !5741)
!5754 = !DILocation(line: 141, column: 2, scope: !5741)
!5755 = !DILocation(line: 142, column: 2, scope: !5741)
!5756 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5757, file: !5757, line: 40, type: !5382, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5758)
!5757 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5758 = !{!5759}
!5759 = !DILocalVariable(name: "irq", arg: 1, scope: !5756, file: !5757, line: 40, type: !32)
!5760 = !DILocation(line: 0, scope: !5756)
!5761 = !DILocation(line: 42, column: 2, scope: !5756)
!5762 = !DILocation(line: 43, column: 1, scope: !5756)
!5763 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !419, file: !419, line: 1508, type: !5764, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5766)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{null, !1751}
!5766 = !{!5767}
!5767 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5763, file: !419, line: 1508, type: !1751)
!5768 = !DILocation(line: 0, scope: !5763)
!5769 = !DILocation(line: 1510, column: 23, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5763, file: !419, line: 1510, column: 7)
!5771 = !DILocation(line: 1510, column: 7, scope: !5763)
!5772 = !DILocation(line: 1512, column: 5, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5770, file: !419, line: 1511, column: 3)
!5774 = !{i64 2149084999}
!5775 = !DILocation(line: 1513, column: 81, scope: !5773)
!5776 = !DILocation(line: 1513, column: 60, scope: !5773)
!5777 = !DILocation(line: 1513, column: 34, scope: !5773)
!5778 = !DILocation(line: 1513, column: 5, scope: !5773)
!5779 = !DILocation(line: 1513, column: 43, scope: !5773)
!5780 = !DILocation(line: 1514, column: 5, scope: !5773)
!5781 = !{i64 2149085113}
!5782 = !DILocation(line: 1515, column: 3, scope: !5773)
!5783 = !DILocation(line: 1516, column: 1, scope: !5763)
!5784 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5757, file: !5757, line: 45, type: !5382, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5785)
!5785 = !{!5786}
!5786 = !DILocalVariable(name: "irq", arg: 1, scope: !5784, file: !5757, line: 45, type: !32)
!5787 = !DILocation(line: 0, scope: !5784)
!5788 = !DILocation(line: 47, column: 2, scope: !5784)
!5789 = !DILocation(line: 48, column: 1, scope: !5784)
!5790 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !419, file: !419, line: 1546, type: !5764, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5791)
!5791 = !{!5792}
!5792 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5790, file: !419, line: 1546, type: !1751)
!5793 = !DILocation(line: 0, scope: !5790)
!5794 = !DILocation(line: 1548, column: 23, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5790, file: !419, line: 1548, column: 7)
!5796 = !DILocation(line: 1548, column: 7, scope: !5790)
!5797 = !DILocation(line: 1550, column: 81, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5795, file: !419, line: 1549, column: 3)
!5799 = !DILocation(line: 1550, column: 60, scope: !5798)
!5800 = !DILocation(line: 1550, column: 34, scope: !5798)
!5801 = !DILocation(line: 1550, column: 5, scope: !5798)
!5802 = !DILocation(line: 1550, column: 43, scope: !5798)
!5803 = !DILocation(line: 271, column: 3, scope: !5804, inlinedAt: !5806)
!5804 = distinct !DISubprogram(name: "__DSB", scope: !5805, file: !5805, line: 269, type: !646, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !162)
!5805 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5806 = distinct !DILocation(line: 1551, column: 5, scope: !5798)
!5807 = !{i64 1542503}
!5808 = !DILocation(line: 260, column: 3, scope: !5809, inlinedAt: !5810)
!5809 = distinct !DISubprogram(name: "__ISB", scope: !5805, file: !5805, line: 258, type: !646, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !162)
!5810 = distinct !DILocation(line: 1552, column: 5, scope: !5798)
!5811 = !{i64 1542220}
!5812 = !DILocation(line: 1553, column: 3, scope: !5798)
!5813 = !DILocation(line: 1554, column: 1, scope: !5790)
!5814 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5757, file: !5757, line: 50, type: !5815, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5817)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!103, !32}
!5817 = !{!5818}
!5818 = !DILocalVariable(name: "irq", arg: 1, scope: !5814, file: !5757, line: 50, type: !32)
!5819 = !DILocation(line: 0, scope: !5814)
!5820 = !DILocation(line: 52, column: 20, scope: !5814)
!5821 = !DILocation(line: 52, column: 9, scope: !5814)
!5822 = !DILocation(line: 52, column: 41, scope: !5814)
!5823 = !DILocation(line: 52, column: 39, scope: !5814)
!5824 = !DILocation(line: 52, column: 2, scope: !5814)
!5825 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5757, file: !5757, line: 64, type: !5826, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5828)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{null, !32, !32, !137}
!5828 = !{!5829, !5830, !5831}
!5829 = !DILocalVariable(name: "irq", arg: 1, scope: !5825, file: !5757, line: 64, type: !32)
!5830 = !DILocalVariable(name: "prio", arg: 2, scope: !5825, file: !5757, line: 64, type: !32)
!5831 = !DILocalVariable(name: "flags", arg: 3, scope: !5825, file: !5757, line: 64, type: !137)
!5832 = !DILocation(line: 0, scope: !5825)
!5833 = !DILocation(line: 83, column: 8, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !5757, line: 82, column: 9)
!5835 = distinct !DILexicalBlock(scope: !5825, file: !5757, line: 76, column: 6)
!5836 = !DILocation(line: 95, column: 2, scope: !5825)
!5837 = !DILocation(line: 96, column: 1, scope: !5825)
!5838 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !419, file: !419, line: 1638, type: !5839, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5841)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{null, !1751, !137}
!5841 = !{!5842, !5843}
!5842 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5838, file: !419, line: 1638, type: !1751)
!5843 = !DILocalVariable(name: "priority", arg: 2, scope: !5838, file: !419, line: 1638, type: !137)
!5844 = !DILocation(line: 0, scope: !5838)
!5845 = !DILocation(line: 0, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5838, file: !419, line: 1640, column: 7)
!5847 = !DILocation(line: 1640, column: 7, scope: !5838)
!5848 = !DILocation(line: 1648, column: 1, scope: !5838)
!5849 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5757, file: !5757, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !5850)
!5850 = !{!5851}
!5851 = !DILocalVariable(name: "unused", arg: 1, scope: !5849, file: !5757, line: 155, type: !13)
!5852 = !DILocation(line: 0, scope: !5849)
!5853 = !DILocation(line: 159, column: 2, scope: !5849)
!5854 = !DILocation(line: 160, column: 1, scope: !5849)
!5855 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5856, file: !5856, line: 87, type: !646, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1794, retainedNodes: !162)
!5856 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5857 = !DILocation(line: 89, column: 2, scope: !5855)
!5858 = !DILocation(line: 90, column: 2, scope: !5855)
!5859 = !DILocation(line: 91, column: 1, scope: !5855)
!5860 = !DISubprogram(name: "z_SysNmiOnReset", scope: !5856, file: !5856, line: 23, type: !646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!5861 = !DISubprogram(name: "z_arm_int_exit", scope: !5862, file: !5862, line: 153, type: !646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!5862 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5863 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5864, file: !5864, line: 256, type: !646, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !162)
!5864 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5865 = !DILocation(line: 258, column: 2, scope: !5863)
!5866 = !DILocation(line: 262, column: 2, scope: !5863)
!5867 = !DILocation(line: 263, column: 2, scope: !5863)
!5868 = !DILocation(line: 267, column: 2, scope: !5863)
!5869 = !DILocation(line: 268, column: 2, scope: !5863)
!5870 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5864, file: !5864, line: 53, type: !646, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !162)
!5871 = !DILocation(line: 55, column: 12, scope: !5870)
!5872 = !DILocation(line: 271, column: 3, scope: !5873, inlinedAt: !5874)
!5873 = distinct !DISubprogram(name: "__DSB", scope: !5805, file: !5805, line: 269, type: !646, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !162)
!5874 = distinct !DILocation(line: 56, column: 2, scope: !5870)
!5875 = !{i64 1541174}
!5876 = !DILocation(line: 260, column: 3, scope: !5877, inlinedAt: !5878)
!5877 = distinct !DISubprogram(name: "__ISB", scope: !5805, file: !5805, line: 258, type: !646, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !162)
!5878 = distinct !DILocation(line: 57, column: 2, scope: !5870)
!5879 = !{i64 1540891}
!5880 = !DILocation(line: 58, column: 1, scope: !5870)
!5881 = distinct !DISubprogram(name: "arch_swap", scope: !5882, file: !5882, line: 33, type: !5815, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !5883)
!5882 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5883 = !{!5884}
!5884 = !DILocalVariable(name: "key", arg: 1, scope: !5881, file: !5882, line: 33, type: !32)
!5885 = !DILocation(line: 0, scope: !5881)
!5886 = !DILocation(line: 36, column: 2, scope: !5881)
!5887 = !DILocation(line: 36, column: 17, scope: !5881)
!5888 = !DILocation(line: 36, column: 25, scope: !5881)
!5889 = !DILocation(line: 37, column: 37, scope: !5881)
!5890 = !DILocation(line: 37, column: 17, scope: !5881)
!5891 = !DILocation(line: 37, column: 35, scope: !5881)
!5892 = !DILocation(line: 41, column: 12, scope: !5881)
!5893 = !DILocalVariable(name: "key", arg: 1, scope: !5894, file: !5308, line: 84, type: !32)
!5894 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !5895)
!5895 = !{!5893}
!5896 = !DILocation(line: 0, scope: !5894, inlinedAt: !5897)
!5897 = distinct !DILocation(line: 44, column: 2, scope: !5881)
!5898 = !DILocation(line: 95, column: 2, scope: !5894, inlinedAt: !5897)
!5899 = !{i64 1319849}
!5900 = !DILocation(line: 53, column: 9, scope: !5881)
!5901 = !DILocation(line: 53, column: 24, scope: !5881)
!5902 = !DILocation(line: 53, column: 2, scope: !5881)
!5903 = distinct !DISubprogram(name: "arch_new_thread", scope: !5904, file: !5904, line: 56, type: !5905, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !6012)
!5904 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5905 = !DISubroutineType(types: !5906)
!5906 = !{null, !5907, !6007, !1131, !2412, !102, !102, !102}
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 32)
!5908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !5909)
!5909 = !{!5910, !5968, !5980, !5981, !5982, !5983, !5989, !6002}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5908, file: !282, line: 247, baseType: !5911, size: 384)
!5911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !5912)
!5912 = !{!5913, !5937, !5944, !5945, !5946, !5955, !5956, !5957}
!5913 = !DIDerivedType(tag: DW_TAG_member, scope: !5911, file: !282, line: 60, baseType: !5914, size: 64)
!5914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5911, file: !282, line: 60, size: 64, elements: !5915)
!5915 = !{!5916, !5931}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5914, file: !282, line: 61, baseType: !5917, size: 64)
!5917 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !5918)
!5918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !5919)
!5919 = !{!5920, !5926}
!5920 = !DIDerivedType(tag: DW_TAG_member, scope: !5918, file: !292, line: 38, baseType: !5921, size: 32)
!5921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5918, file: !292, line: 38, size: 32, elements: !5922)
!5922 = !{!5923, !5925}
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5921, file: !292, line: 39, baseType: !5924, size: 32)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5918, size: 32)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5921, file: !292, line: 40, baseType: !5924, size: 32)
!5926 = !DIDerivedType(tag: DW_TAG_member, scope: !5918, file: !292, line: 42, baseType: !5927, size: 32, offset: 32)
!5927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5918, file: !292, line: 42, size: 32, elements: !5928)
!5928 = !{!5929, !5930}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5927, file: !292, line: 43, baseType: !5924, size: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5927, file: !292, line: 44, baseType: !5924, size: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5914, file: !282, line: 62, baseType: !5932, size: 64)
!5932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !5933)
!5933 = !{!5934}
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5932, file: !308, line: 50, baseType: !5935, size: 64)
!5935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5936, size: 64, elements: !313)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5932, size: 32)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5911, file: !282, line: 68, baseType: !5938, size: 32, offset: 64)
!5938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5939, size: 32)
!5939 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !5940)
!5940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !5941)
!5941 = !{!5942}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5940, file: !318, line: 232, baseType: !5943, size: 64)
!5943 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !5918)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5911, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5911, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!5946 = !DIDerivedType(tag: DW_TAG_member, scope: !5911, file: !282, line: 90, baseType: !5947, size: 16, offset: 112)
!5947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5911, file: !282, line: 90, size: 16, elements: !5948)
!5948 = !{!5949, !5954}
!5949 = !DIDerivedType(tag: DW_TAG_member, scope: !5947, file: !282, line: 91, baseType: !5950, size: 16)
!5950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5947, file: !282, line: 91, size: 16, elements: !5951)
!5951 = !{!5952, !5953}
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5950, file: !282, line: 96, baseType: !332, size: 8)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5950, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5947, file: !282, line: 100, baseType: !151, size: 16)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5911, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5911, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5911, file: !282, line: 131, baseType: !5958, size: 192, offset: 192)
!5958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !5959)
!5959 = !{!5960, !5961, !5967}
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5958, file: !318, line: 245, baseType: !5917, size: 64)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5958, file: !318, line: 246, baseType: !5962, size: 32, offset: 64)
!5962 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !5963)
!5963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5964, size: 32)
!5964 = !DISubroutineType(types: !5965)
!5965 = !{null, !5966}
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5958, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5958, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5908, file: !282, line: 250, baseType: !5969, size: 288, offset: 384)
!5969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !5970)
!5970 = !{!5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978, !5979}
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5969, file: !353, line: 26, baseType: !137, size: 32)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5969, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5969, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5969, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5969, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5969, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5969, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5969, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5969, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5908, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5908, file: !282, line: 256, baseType: !5939, size: 64, offset: 704)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5908, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5908, file: !282, line: 300, baseType: !5984, size: 96, offset: 800)
!5984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !5985)
!5985 = !{!5986, !5987, !5988}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5984, file: !282, line: 153, baseType: !22, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5984, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5984, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5908, file: !282, line: 325, baseType: !5990, size: 32, offset: 896)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 32)
!5991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !5992)
!5992 = !{!5993, !5999, !6000}
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5991, file: !376, line: 5074, baseType: !5994, size: 96)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !5995)
!5995 = !{!5996, !5997, !5998}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5994, file: !113, line: 57, baseType: !116, size: 32)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5994, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5994, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5991, file: !376, line: 5075, baseType: !5939, size: 64, offset: 96)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5991, file: !376, line: 5076, baseType: !6001, offset: 160)
!6001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5908, file: !282, line: 343, baseType: !6003, size: 64, offset: 928)
!6003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !6004)
!6004 = !{!6005, !6006}
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6003, file: !353, line: 63, baseType: !137, size: 32)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6003, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 32)
!6008 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2413, line: 44, baseType: !6009)
!6009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1301, line: 47, size: 8, elements: !6010)
!6010 = !{!6011}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6009, file: !1301, line: 48, baseType: !109, size: 8)
!6012 = !{!6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020}
!6013 = !DILocalVariable(name: "thread", arg: 1, scope: !5903, file: !5904, line: 56, type: !5907)
!6014 = !DILocalVariable(name: "stack", arg: 2, scope: !5903, file: !5904, line: 56, type: !6007)
!6015 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5903, file: !5904, line: 57, type: !1131)
!6016 = !DILocalVariable(name: "entry", arg: 4, scope: !5903, file: !5904, line: 57, type: !2412)
!6017 = !DILocalVariable(name: "p1", arg: 5, scope: !5903, file: !5904, line: 58, type: !102)
!6018 = !DILocalVariable(name: "p2", arg: 6, scope: !5903, file: !5904, line: 58, type: !102)
!6019 = !DILocalVariable(name: "p3", arg: 7, scope: !5903, file: !5904, line: 58, type: !102)
!6020 = !DILocalVariable(name: "iframe", scope: !5903, file: !5904, line: 60, type: !1855)
!6021 = !DILocation(line: 0, scope: !5903)
!6022 = !DILocation(line: 85, column: 11, scope: !5903)
!6023 = !DILocation(line: 93, column: 10, scope: !5903)
!6024 = !DILocation(line: 98, column: 13, scope: !5903)
!6025 = !DILocation(line: 100, column: 15, scope: !5903)
!6026 = !DILocation(line: 100, column: 10, scope: !5903)
!6027 = !DILocation(line: 100, column: 13, scope: !5903)
!6028 = !DILocation(line: 101, column: 15, scope: !5903)
!6029 = !DILocation(line: 101, column: 10, scope: !5903)
!6030 = !DILocation(line: 101, column: 13, scope: !5903)
!6031 = !DILocation(line: 102, column: 15, scope: !5903)
!6032 = !DILocation(line: 102, column: 10, scope: !5903)
!6033 = !DILocation(line: 102, column: 13, scope: !5903)
!6034 = !DILocation(line: 103, column: 15, scope: !5903)
!6035 = !DILocation(line: 103, column: 10, scope: !5903)
!6036 = !DILocation(line: 103, column: 13, scope: !5903)
!6037 = !DILocation(line: 106, column: 10, scope: !5903)
!6038 = !DILocation(line: 106, column: 15, scope: !5903)
!6039 = !DILocation(line: 122, column: 29, scope: !5903)
!6040 = !DILocation(line: 122, column: 23, scope: !5903)
!6041 = !DILocation(line: 122, column: 27, scope: !5903)
!6042 = !DILocation(line: 123, column: 15, scope: !5903)
!6043 = !DILocation(line: 123, column: 23, scope: !5903)
!6044 = !DILocation(line: 143, column: 1, scope: !5903)
!6045 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5904, file: !5904, line: 385, type: !6046, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !6048)
!6046 = !DISubroutineType(types: !6047)
!6047 = !{!137, !1078, !1078}
!6048 = !{!6049, !6050, !6051, !6054}
!6049 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6045, file: !5904, line: 385, type: !1078)
!6050 = !DILocalVariable(name: "psp", arg: 2, scope: !6045, file: !5904, line: 385, type: !1078)
!6051 = !DILocalVariable(name: "thread", scope: !6045, file: !5904, line: 388, type: !6052)
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 32)
!6053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5908)
!6054 = !DILocalVariable(name: "guard_len", scope: !6045, file: !5904, line: 405, type: !137)
!6055 = !DILocation(line: 0, scope: !6045)
!6056 = !DILocation(line: 388, column: 34, scope: !6045)
!6057 = !DILocation(line: 390, column: 13, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6045, file: !5904, line: 390, column: 6)
!6059 = !DILocation(line: 390, column: 6, scope: !6045)
!6060 = !DILocation(line: 438, column: 6, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6045, file: !5904, line: 438, column: 6)
!6062 = !DILocation(line: 438, column: 6, scope: !6045)
!6063 = !DILocation(line: 442, column: 3, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6061, file: !5904, line: 440, column: 22)
!6065 = !DILocation(line: 455, column: 1, scope: !6045)
!6066 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5904, file: !5904, line: 530, type: !6067, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1852, retainedNodes: !6069)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{null, !5907, !1131, !2412}
!6069 = !{!6070, !6071, !6072}
!6070 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6066, file: !5904, line: 530, type: !5907)
!6071 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6066, file: !5904, line: 530, type: !1131)
!6072 = !DILocalVariable(name: "_main", arg: 3, scope: !6066, file: !5904, line: 531, type: !2412)
!6073 = !DILocation(line: 0, scope: !6066)
!6074 = !DILocation(line: 535, column: 11, scope: !6066)
!6075 = !DILocation(line: 560, column: 2, scope: !6066)
!6076 = !DILocation(line: 576, column: 2, scope: !6066)
!6077 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6078 = !DILocation(line: 603, column: 2, scope: !6066)
!6079 = distinct !DISubprogram(name: "z_arm_fault", scope: !6080, file: !6080, line: 1036, type: !6081, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6096)
!6080 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6081 = !DISubroutineType(types: !6082)
!6082 = !{null, !137, !137, !137, !6083}
!6083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6084, size: 32)
!6084 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !353, line: 37, baseType: !6085)
!6085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !6086)
!6086 = !{!6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095}
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6085, file: !353, line: 26, baseType: !137, size: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6085, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6085, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6085, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6085, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6085, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6085, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6085, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6085, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!6096 = !{!6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106}
!6097 = !DILocalVariable(name: "msp", arg: 1, scope: !6079, file: !6080, line: 1036, type: !137)
!6098 = !DILocalVariable(name: "psp", arg: 2, scope: !6079, file: !6080, line: 1036, type: !137)
!6099 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6079, file: !6080, line: 1036, type: !137)
!6100 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6079, file: !6080, line: 1037, type: !6083)
!6101 = !DILocalVariable(name: "reason", scope: !6079, file: !6080, line: 1039, type: !137)
!6102 = !DILocalVariable(name: "fault", scope: !6079, file: !6080, line: 1040, type: !103)
!6103 = !DILocalVariable(name: "recoverable", scope: !6079, file: !6080, line: 1041, type: !259)
!6104 = !DILocalVariable(name: "nested_exc", scope: !6079, file: !6080, line: 1041, type: !259)
!6105 = !DILocalVariable(name: "esf", scope: !6079, file: !6080, line: 1042, type: !1923)
!6106 = !DILocalVariable(name: "esf_copy", scope: !6079, file: !6080, line: 1047, type: !1924)
!6107 = !DILocation(line: 0, scope: !6079)
!6108 = !DILocation(line: 1040, column: 19, scope: !6079)
!6109 = !DILocation(line: 1040, column: 24, scope: !6079)
!6110 = !DILocation(line: 1041, column: 2, scope: !6079)
!6111 = !DILocation(line: 1047, column: 2, scope: !6079)
!6112 = !DILocation(line: 1047, column: 15, scope: !6079)
!6113 = !DILocalVariable(name: "key", arg: 1, scope: !6114, file: !5308, line: 84, type: !32)
!6114 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6115)
!6115 = !{!6113}
!6116 = !DILocation(line: 0, scope: !6114, inlinedAt: !6117)
!6117 = distinct !DILocation(line: 1050, column: 2, scope: !6079)
!6118 = !DILocation(line: 95, column: 2, scope: !6114, inlinedAt: !6117)
!6119 = !{i64 1353093}
!6120 = !DILocation(line: 1055, column: 9, scope: !6079)
!6121 = !DILocation(line: 1063, column: 11, scope: !6079)
!6122 = !DILocation(line: 1064, column: 6, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6079, file: !6080, line: 1064, column: 6)
!6124 = !{i8 0, i8 2}
!6125 = !DILocation(line: 1064, column: 6, scope: !6079)
!6126 = !DILocation(line: 1070, column: 20, scope: !6079)
!6127 = !DILocation(line: 1070, column: 2, scope: !6079)
!6128 = !DILocation(line: 1089, column: 6, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6079, file: !6080, line: 1089, column: 6)
!6130 = !DILocation(line: 0, scope: !6129)
!6131 = !DILocation(line: 1089, column: 6, scope: !6079)
!6132 = !DILocation(line: 1090, column: 28, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !6080, line: 1090, column: 7)
!6134 = distinct !DILexicalBlock(scope: !6129, file: !6080, line: 1089, column: 18)
!6135 = !DILocation(line: 1090, column: 44, scope: !6133)
!6136 = !DILocation(line: 1090, column: 7, scope: !6134)
!6137 = !DILocation(line: 1091, column: 24, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6133, file: !6080, line: 1090, column: 50)
!6139 = !DILocation(line: 1092, column: 3, scope: !6138)
!6140 = !DILocation(line: 1094, column: 23, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6129, file: !6080, line: 1093, column: 9)
!6142 = !DILocation(line: 1097, column: 2, scope: !6079)
!6143 = !DILocation(line: 1098, column: 1, scope: !6079)
!6144 = distinct !DISubprogram(name: "get_esf", scope: !6080, file: !6080, line: 894, type: !6145, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6148)
!6145 = !DISubroutineType(types: !6146)
!6146 = !{!1923, !137, !137, !137, !6147}
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!6148 = !{!6149, !6150, !6151, !6152, !6153, !6154}
!6149 = !DILocalVariable(name: "msp", arg: 1, scope: !6144, file: !6080, line: 894, type: !137)
!6150 = !DILocalVariable(name: "psp", arg: 2, scope: !6144, file: !6080, line: 894, type: !137)
!6151 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6144, file: !6080, line: 894, type: !137)
!6152 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6144, file: !6080, line: 895, type: !6147)
!6153 = !DILocalVariable(name: "alternative_state_exc", scope: !6144, file: !6080, line: 897, type: !259)
!6154 = !DILocalVariable(name: "ptr_esf", scope: !6144, file: !6080, line: 898, type: !1923)
!6155 = !DILocation(line: 0, scope: !6144)
!6156 = !DILocation(line: 900, column: 14, scope: !6144)
!6157 = !DILocation(line: 902, column: 49, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6144, file: !6080, line: 902, column: 6)
!6159 = !DILocation(line: 902, column: 6, scope: !6144)
!6160 = !DILocation(line: 983, column: 18, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6144, file: !6080, line: 983, column: 6)
!6162 = !DILocation(line: 991, column: 7, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6164, file: !6080, line: 990, column: 30)
!6164 = distinct !DILexicalBlock(scope: !6144, file: !6080, line: 990, column: 6)
!6165 = !DILocation(line: 998, column: 16, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !6080, line: 995, column: 10)
!6167 = distinct !DILexicalBlock(scope: !6163, file: !6080, line: 991, column: 7)
!6168 = !DILocation(line: 1002, column: 2, scope: !6144)
!6169 = !DILocation(line: 1003, column: 1, scope: !6144)
!6170 = distinct !DISubprogram(name: "fault_handle", scope: !6080, file: !6080, line: 786, type: !6171, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6173)
!6171 = !DISubroutineType(types: !6172)
!6172 = !{!137, !1923, !103, !6147}
!6173 = !{!6174, !6175, !6176, !6177}
!6174 = !DILocalVariable(name: "esf", arg: 1, scope: !6170, file: !6080, line: 786, type: !1923)
!6175 = !DILocalVariable(name: "fault", arg: 2, scope: !6170, file: !6080, line: 786, type: !103)
!6176 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6170, file: !6080, line: 786, type: !6147)
!6177 = !DILocalVariable(name: "reason", scope: !6170, file: !6080, line: 788, type: !137)
!6178 = !DILocation(line: 0, scope: !6170)
!6179 = !DILocation(line: 790, column: 15, scope: !6170)
!6180 = !DILocation(line: 792, column: 2, scope: !6170)
!6181 = !DILocation(line: 794, column: 12, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6170, file: !6080, line: 792, column: 17)
!6183 = !DILocation(line: 795, column: 3, scope: !6182)
!6184 = !DILocation(line: 800, column: 12, scope: !6182)
!6185 = !DILocation(line: 801, column: 3, scope: !6182)
!6186 = !DILocation(line: 803, column: 12, scope: !6182)
!6187 = !DILocation(line: 804, column: 3, scope: !6182)
!6188 = !DILocation(line: 806, column: 12, scope: !6182)
!6189 = !DILocation(line: 807, column: 3, scope: !6182)
!6190 = !DILocation(line: 814, column: 3, scope: !6182)
!6191 = !DILocation(line: 815, column: 3, scope: !6182)
!6192 = !DILocation(line: 829, column: 2, scope: !6170)
!6193 = distinct !DISubprogram(name: "hard_fault", scope: !6080, file: !6080, line: 709, type: !6194, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6196)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!137, !1923, !6147}
!6196 = !{!6197, !6198, !6199}
!6197 = !DILocalVariable(name: "esf", arg: 1, scope: !6193, file: !6080, line: 709, type: !1923)
!6198 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6193, file: !6080, line: 709, type: !6147)
!6199 = !DILocalVariable(name: "reason", scope: !6193, file: !6080, line: 711, type: !137)
!6200 = !DILocation(line: 0, scope: !6193)
!6201 = !DILocation(line: 732, column: 15, scope: !6193)
!6202 = !DILocation(line: 734, column: 12, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6193, file: !6080, line: 734, column: 6)
!6204 = !DILocation(line: 734, column: 17, scope: !6203)
!6205 = !DILocation(line: 734, column: 41, scope: !6203)
!6206 = !DILocation(line: 734, column: 6, scope: !6193)
!6207 = !DILocation(line: 736, column: 19, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6203, file: !6080, line: 736, column: 13)
!6209 = !DILocation(line: 736, column: 49, scope: !6208)
!6210 = !DILocation(line: 736, column: 13, scope: !6203)
!6211 = !DILocation(line: 738, column: 19, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6208, file: !6080, line: 738, column: 13)
!6213 = !DILocation(line: 738, column: 24, scope: !6212)
!6214 = !DILocation(line: 738, column: 47, scope: !6212)
!6215 = !DILocation(line: 738, column: 13, scope: !6208)
!6216 = !DILocation(line: 740, column: 7, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !6080, line: 740, column: 7)
!6218 = distinct !DILexicalBlock(scope: !6212, file: !6080, line: 738, column: 53)
!6219 = !DILocation(line: 740, column: 7, scope: !6218)
!6220 = !DILocation(line: 742, column: 24, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6217, file: !6080, line: 740, column: 38)
!6222 = !DILocation(line: 743, column: 3, scope: !6221)
!6223 = !DILocation(line: 743, column: 20, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6217, file: !6080, line: 743, column: 14)
!6225 = !DILocation(line: 743, column: 25, scope: !6224)
!6226 = !DILocation(line: 743, column: 52, scope: !6224)
!6227 = !DILocation(line: 743, column: 14, scope: !6217)
!6228 = !DILocation(line: 744, column: 13, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !6080, line: 743, column: 58)
!6230 = !DILocation(line: 745, column: 3, scope: !6229)
!6231 = !DILocation(line: 745, column: 20, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6224, file: !6080, line: 745, column: 14)
!6233 = !DILocation(line: 745, column: 25, scope: !6232)
!6234 = !DILocation(line: 745, column: 52, scope: !6232)
!6235 = !DILocation(line: 745, column: 14, scope: !6224)
!6236 = !DILocation(line: 746, column: 13, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6232, file: !6080, line: 745, column: 58)
!6238 = !DILocation(line: 747, column: 3, scope: !6237)
!6239 = !DILocation(line: 747, column: 20, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6232, file: !6080, line: 747, column: 14)
!6241 = !DILocation(line: 747, column: 52, scope: !6240)
!6242 = !DILocation(line: 747, column: 14, scope: !6232)
!6243 = !DILocation(line: 748, column: 13, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6240, file: !6080, line: 747, column: 58)
!6245 = !DILocation(line: 753, column: 3, scope: !6244)
!6246 = !DILocation(line: 766, column: 2, scope: !6193)
!6247 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6080, file: !6080, line: 229, type: !6171, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6248)
!6248 = !{!6249, !6250, !6251, !6252, !6253, !6254, !6257}
!6249 = !DILocalVariable(name: "esf", arg: 1, scope: !6247, file: !6080, line: 229, type: !1923)
!6250 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6247, file: !6080, line: 229, type: !103)
!6251 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6247, file: !6080, line: 230, type: !6147)
!6252 = !DILocalVariable(name: "reason", scope: !6247, file: !6080, line: 232, type: !137)
!6253 = !DILocalVariable(name: "mmfar", scope: !6247, file: !6080, line: 233, type: !137)
!6254 = !DILocalVariable(name: "temp", scope: !6255, file: !6080, line: 254, type: !137)
!6255 = distinct !DILexicalBlock(scope: !6256, file: !6080, line: 244, column: 48)
!6256 = distinct !DILexicalBlock(scope: !6247, file: !6080, line: 244, column: 6)
!6257 = !DILocalVariable(name: "min_stack_ptr", scope: !6258, file: !6080, line: 309, type: !137)
!6258 = distinct !DILexicalBlock(scope: !6259, file: !6080, line: 308, column: 43)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !6080, line: 308, column: 7)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !6080, line: 289, column: 40)
!6261 = distinct !DILexicalBlock(scope: !6247, file: !6080, line: 288, column: 6)
!6262 = !DILocation(line: 0, scope: !6247)
!6263 = !DILocation(line: 237, column: 12, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6247, file: !6080, line: 237, column: 6)
!6265 = !DILocation(line: 241, column: 12, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6247, file: !6080, line: 241, column: 6)
!6267 = !DILocation(line: 244, column: 12, scope: !6256)
!6268 = !DILocation(line: 244, column: 17, scope: !6256)
!6269 = !DILocation(line: 244, column: 42, scope: !6256)
!6270 = !DILocation(line: 244, column: 6, scope: !6247)
!6271 = !DILocation(line: 254, column: 24, scope: !6255)
!6272 = !DILocation(line: 0, scope: !6255)
!6273 = !DILocation(line: 256, column: 13, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6255, file: !6080, line: 256, column: 7)
!6275 = !DILocation(line: 256, column: 18, scope: !6274)
!6276 = !DILocation(line: 256, column: 44, scope: !6274)
!6277 = !DILocation(line: 256, column: 7, scope: !6255)
!6278 = !DILocation(line: 259, column: 24, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !6080, line: 259, column: 8)
!6280 = distinct !DILexicalBlock(scope: !6274, file: !6080, line: 256, column: 50)
!6281 = !DILocation(line: 259, column: 8, scope: !6280)
!6282 = !DILocation(line: 261, column: 15, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6279, file: !6080, line: 259, column: 30)
!6284 = !DILocation(line: 262, column: 4, scope: !6283)
!6285 = !DILocation(line: 265, column: 12, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6247, file: !6080, line: 265, column: 6)
!6287 = !DILocation(line: 288, column: 12, scope: !6261)
!6288 = !DILocation(line: 288, column: 17, scope: !6261)
!6289 = !DILocation(line: 288, column: 41, scope: !6261)
!6290 = !DILocation(line: 289, column: 9, scope: !6261)
!6291 = !DILocation(line: 289, column: 14, scope: !6261)
!6292 = !DILocation(line: 288, column: 6, scope: !6247)
!6293 = !DILocation(line: 308, column: 12, scope: !6259)
!6294 = !DILocation(line: 308, column: 17, scope: !6259)
!6295 = !DILocation(line: 308, column: 7, scope: !6260)
!6296 = !DILocation(line: 310, column: 6, scope: !6258)
!6297 = !DILocation(line: 309, column: 29, scope: !6258)
!6298 = !DILocation(line: 0, scope: !6258)
!6299 = !DILocation(line: 312, column: 8, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6258, file: !6080, line: 312, column: 8)
!6301 = !DILocation(line: 312, column: 8, scope: !6258)
!6302 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6303, file: !5805, line: 1099, type: !137)
!6303 = distinct !DISubprogram(name: "__set_PSP", scope: !5805, file: !5805, line: 1099, type: !5392, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6304)
!6304 = !{!6302}
!6305 = !DILocation(line: 0, scope: !6303, inlinedAt: !6306)
!6306 = distinct !DILocation(line: 338, column: 5, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6300, file: !6080, line: 312, column: 23)
!6308 = !DILocation(line: 1101, column: 3, scope: !6303, inlinedAt: !6306)
!6309 = !{i64 1592143}
!6310 = !DILocation(line: 341, column: 4, scope: !6307)
!6311 = !DILocation(line: 366, column: 12, scope: !6247)
!6312 = !DILocation(line: 369, column: 15, scope: !6247)
!6313 = !DILocation(line: 371, column: 2, scope: !6247)
!6314 = distinct !DISubprogram(name: "bus_fault", scope: !6080, file: !6080, line: 383, type: !6315, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6317)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!103, !1923, !103, !6147}
!6317 = !{!6318, !6319, !6320, !6321, !6322}
!6318 = !DILocalVariable(name: "esf", arg: 1, scope: !6314, file: !6080, line: 383, type: !1923)
!6319 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6314, file: !6080, line: 383, type: !103)
!6320 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6314, file: !6080, line: 383, type: !6147)
!6321 = !DILocalVariable(name: "reason", scope: !6314, file: !6080, line: 385, type: !137)
!6322 = !DILocalVariable(name: "bfar", scope: !6323, file: !6080, line: 405, type: !137)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !6080, line: 395, column: 42)
!6324 = distinct !DILexicalBlock(scope: !6314, file: !6080, line: 395, column: 6)
!6325 = !DILocation(line: 0, scope: !6314)
!6326 = !DILocation(line: 389, column: 11, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6314, file: !6080, line: 389, column: 6)
!6328 = !DILocation(line: 392, column: 11, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6314, file: !6080, line: 392, column: 6)
!6330 = !DILocation(line: 395, column: 11, scope: !6324)
!6331 = !DILocation(line: 395, column: 16, scope: !6324)
!6332 = !DILocation(line: 395, column: 6, scope: !6314)
!6333 = !DILocation(line: 405, column: 3, scope: !6323)
!6334 = !DILocation(line: 0, scope: !6323)
!6335 = !DILocation(line: 407, column: 13, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6323, file: !6080, line: 407, column: 7)
!6337 = !DILocation(line: 407, column: 18, scope: !6336)
!6338 = !DILocation(line: 407, column: 44, scope: !6336)
!6339 = !DILocation(line: 407, column: 7, scope: !6323)
!6340 = !DILocation(line: 411, column: 15, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !6080, line: 409, column: 30)
!6342 = distinct !DILexicalBlock(scope: !6343, file: !6080, line: 409, column: 8)
!6343 = distinct !DILexicalBlock(scope: !6336, file: !6080, line: 407, column: 50)
!6344 = !DILocation(line: 412, column: 4, scope: !6341)
!6345 = !DILocation(line: 415, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6314, file: !6080, line: 415, column: 6)
!6347 = !DILocation(line: 418, column: 12, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6314, file: !6080, line: 418, column: 6)
!6349 = !DILocation(line: 524, column: 12, scope: !6314)
!6350 = !DILocation(line: 526, column: 15, scope: !6314)
!6351 = !DILocation(line: 528, column: 2, scope: !6314)
!6352 = distinct !DISubprogram(name: "usage_fault", scope: !6080, file: !6080, line: 539, type: !6353, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6357)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{!137, !6355}
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 32)
!6356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!6357 = !{!6358, !6359}
!6358 = !DILocalVariable(name: "esf", arg: 1, scope: !6352, file: !6080, line: 539, type: !6355)
!6359 = !DILocalVariable(name: "reason", scope: !6352, file: !6080, line: 541, type: !137)
!6360 = !DILocation(line: 0, scope: !6352)
!6361 = !DILocation(line: 546, column: 12, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6352, file: !6080, line: 546, column: 6)
!6363 = !DILocation(line: 549, column: 12, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6352, file: !6080, line: 549, column: 6)
!6365 = !DILocation(line: 567, column: 12, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6352, file: !6080, line: 567, column: 6)
!6367 = !DILocation(line: 570, column: 12, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6352, file: !6080, line: 570, column: 6)
!6369 = !DILocation(line: 573, column: 12, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6352, file: !6080, line: 573, column: 6)
!6371 = !DILocation(line: 576, column: 12, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6352, file: !6080, line: 576, column: 6)
!6373 = !DILocation(line: 581, column: 12, scope: !6352)
!6374 = !DILocation(line: 583, column: 2, scope: !6352)
!6375 = distinct !DISubprogram(name: "debug_monitor", scope: !6080, file: !6080, line: 632, type: !6376, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6378)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{null, !1923, !6147}
!6378 = !{!6379, !6380}
!6379 = !DILocalVariable(name: "esf", arg: 1, scope: !6375, file: !6080, line: 632, type: !1923)
!6380 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6375, file: !6080, line: 632, type: !6147)
!6381 = !DILocation(line: 0, scope: !6375)
!6382 = !DILocation(line: 634, column: 15, scope: !6375)
!6383 = !DILocation(line: 652, column: 1, scope: !6375)
!6384 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6080, file: !6080, line: 658, type: !6385, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !6387)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{!259, !1923}
!6387 = !{!6388, !6389, !6390}
!6388 = !DILocalVariable(name: "esf", arg: 1, scope: !6384, file: !6080, line: 658, type: !1923)
!6389 = !DILocalVariable(name: "ret_addr", scope: !6384, file: !6080, line: 660, type: !150)
!6390 = !DILocalVariable(name: "fault_insn", scope: !6384, file: !6080, line: 686, type: !151)
!6391 = !DILocation(line: 0, scope: !6384)
!6392 = !DILocation(line: 660, column: 46, scope: !6384)
!6393 = !DILocation(line: 660, column: 23, scope: !6384)
!6394 = !DILocation(line: 682, column: 11, scope: !6384)
!6395 = !DILocation(line: 271, column: 3, scope: !6396, inlinedAt: !6397)
!6396 = distinct !DISubprogram(name: "__DSB", scope: !5805, file: !5805, line: 269, type: !646, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !162)
!6397 = distinct !DILocation(line: 683, column: 2, scope: !6384)
!6398 = !{i64 1568278}
!6399 = !DILocation(line: 260, column: 3, scope: !6400, inlinedAt: !6401)
!6400 = distinct !DISubprogram(name: "__ISB", scope: !5805, file: !5805, line: 258, type: !646, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !162)
!6401 = distinct !DILocation(line: 684, column: 2, scope: !6384)
!6402 = !{i64 1567995}
!6403 = !DILocation(line: 686, column: 35, scope: !6384)
!6404 = !DILocation(line: 686, column: 24, scope: !6384)
!6405 = !DILocation(line: 688, column: 11, scope: !6384)
!6406 = !DILocation(line: 271, column: 3, scope: !6396, inlinedAt: !6407)
!6407 = distinct !DILocation(line: 689, column: 2, scope: !6384)
!6408 = !DILocation(line: 260, column: 3, scope: !6400, inlinedAt: !6409)
!6409 = distinct !DILocation(line: 690, column: 2, scope: !6384)
!6410 = !DILocation(line: 693, column: 45, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6384, file: !6080, line: 693, column: 6)
!6412 = !DILocation(line: 699, column: 1, scope: !6384)
!6413 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6080, file: !6080, line: 1107, type: !646, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1895, retainedNodes: !162)
!6414 = !DILocation(line: 1111, column: 11, scope: !6413)
!6415 = !DILocation(line: 1136, column: 1, scope: !6413)
!6416 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6417, file: !6417, line: 26, type: !646, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !6418)
!6417 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6418 = !{!6419}
!6419 = !DILocalVariable(name: "irq", scope: !6416, file: !6417, line: 28, type: !103)
!6420 = !DILocation(line: 0, scope: !6416)
!6421 = !DILocation(line: 30, column: 2, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6416, file: !6417, line: 30, column: 2)
!6423 = !DILocation(line: 31, column: 3, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6425, file: !6417, line: 30, column: 39)
!6425 = distinct !DILexicalBlock(scope: !6422, file: !6417, line: 30, column: 2)
!6426 = !DILocation(line: 30, column: 35, scope: !6425)
!6427 = !DILocation(line: 30, column: 13, scope: !6425)
!6428 = distinct !{!6428, !6421, !6429}
!6429 = !DILocation(line: 32, column: 2, scope: !6422)
!6430 = !DILocation(line: 33, column: 1, scope: !6416)
!6431 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !419, file: !419, line: 1638, type: !5839, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1966, retainedNodes: !6432)
!6432 = !{!6433, !6434}
!6433 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6431, file: !419, line: 1638, type: !1751)
!6434 = !DILocalVariable(name: "priority", arg: 2, scope: !6431, file: !419, line: 1638, type: !137)
!6435 = !DILocation(line: 0, scope: !6431)
!6436 = !DILocation(line: 1640, column: 7, scope: !6431)
!6437 = !DILocation(line: 0, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6431, file: !419, line: 1640, column: 7)
!6439 = !DILocation(line: 1648, column: 1, scope: !6431)
!6440 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6441, file: !6441, line: 27, type: !6442, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2011, retainedNodes: !6545)
!6441 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !6444}
!6444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !282, line: 347, baseType: !6445)
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6446, size: 32)
!6446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !6447)
!6447 = !{!6448, !6506, !6518, !6519, !6520, !6521, !6527, !6540}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6446, file: !282, line: 247, baseType: !6449, size: 384)
!6449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !6450)
!6450 = !{!6451, !6475, !6482, !6483, !6484, !6493, !6494, !6495}
!6451 = !DIDerivedType(tag: DW_TAG_member, scope: !6449, file: !282, line: 60, baseType: !6452, size: 64)
!6452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6449, file: !282, line: 60, size: 64, elements: !6453)
!6453 = !{!6454, !6469}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6452, file: !282, line: 61, baseType: !6455, size: 64)
!6455 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !6456)
!6456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !6457)
!6457 = !{!6458, !6464}
!6458 = !DIDerivedType(tag: DW_TAG_member, scope: !6456, file: !292, line: 38, baseType: !6459, size: 32)
!6459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6456, file: !292, line: 38, size: 32, elements: !6460)
!6460 = !{!6461, !6463}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6459, file: !292, line: 39, baseType: !6462, size: 32)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6456, size: 32)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6459, file: !292, line: 40, baseType: !6462, size: 32)
!6464 = !DIDerivedType(tag: DW_TAG_member, scope: !6456, file: !292, line: 42, baseType: !6465, size: 32, offset: 32)
!6465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6456, file: !292, line: 42, size: 32, elements: !6466)
!6466 = !{!6467, !6468}
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6465, file: !292, line: 43, baseType: !6462, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6465, file: !292, line: 44, baseType: !6462, size: 32)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6452, file: !282, line: 62, baseType: !6470, size: 64)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !6471)
!6471 = !{!6472}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6470, file: !308, line: 50, baseType: !6473, size: 64)
!6473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6474, size: 64, elements: !313)
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 32)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6449, file: !282, line: 68, baseType: !6476, size: 32, offset: 64)
!6476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6477, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !6478)
!6478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !6479)
!6479 = !{!6480}
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6478, file: !318, line: 232, baseType: !6481, size: 64)
!6481 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !6456)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6449, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6449, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!6484 = !DIDerivedType(tag: DW_TAG_member, scope: !6449, file: !282, line: 90, baseType: !6485, size: 16, offset: 112)
!6485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6449, file: !282, line: 90, size: 16, elements: !6486)
!6486 = !{!6487, !6492}
!6487 = !DIDerivedType(tag: DW_TAG_member, scope: !6485, file: !282, line: 91, baseType: !6488, size: 16)
!6488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6485, file: !282, line: 91, size: 16, elements: !6489)
!6489 = !{!6490, !6491}
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6488, file: !282, line: 96, baseType: !332, size: 8)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6488, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6485, file: !282, line: 100, baseType: !151, size: 16)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6449, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6449, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6449, file: !282, line: 131, baseType: !6496, size: 192, offset: 192)
!6496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !6497)
!6497 = !{!6498, !6499, !6505}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6496, file: !318, line: 245, baseType: !6455, size: 64)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6496, file: !318, line: 246, baseType: !6500, size: 32, offset: 64)
!6500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !6501)
!6501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6502, size: 32)
!6502 = !DISubroutineType(types: !6503)
!6503 = !{null, !6504}
!6504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6496, size: 32)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6496, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6446, file: !282, line: 250, baseType: !6507, size: 288, offset: 384)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !6508)
!6508 = !{!6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6507, file: !353, line: 26, baseType: !137, size: 32)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6507, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6507, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6507, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6507, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6507, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6507, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6507, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6507, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6446, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6446, file: !282, line: 256, baseType: !6477, size: 64, offset: 704)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6446, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6446, file: !282, line: 300, baseType: !6522, size: 96, offset: 800)
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !6523)
!6523 = !{!6524, !6525, !6526}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6522, file: !282, line: 153, baseType: !22, size: 32)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6522, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6522, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6446, file: !282, line: 325, baseType: !6528, size: 32, offset: 896)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 32)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !6530)
!6530 = !{!6531, !6537, !6538}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6529, file: !376, line: 5074, baseType: !6532, size: 96)
!6532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !6533)
!6533 = !{!6534, !6535, !6536}
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6532, file: !113, line: 57, baseType: !116, size: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6532, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6532, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6529, file: !376, line: 5075, baseType: !6477, size: 64, offset: 96)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6529, file: !376, line: 5076, baseType: !6539, offset: 160)
!6539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6446, file: !282, line: 343, baseType: !6541, size: 64, offset: 928)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !6542)
!6542 = !{!6543, !6544}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6541, file: !353, line: 63, baseType: !137, size: 32)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6541, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!6545 = !{!6546}
!6546 = !DILocalVariable(name: "thread", arg: 1, scope: !6440, file: !6441, line: 27, type: !6444)
!6547 = !DILocation(line: 0, scope: !6440)
!6548 = !DILocation(line: 29, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6440, file: !6441, line: 29, column: 6)
!6550 = !DILocation(line: 29, column: 15, scope: !6549)
!6551 = !DILocation(line: 29, column: 6, scope: !6440)
!6552 = !DILocation(line: 1031, column: 3, scope: !6553, inlinedAt: !6556)
!6553 = distinct !DISubprogram(name: "__get_IPSR", scope: !5805, file: !5805, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2011, retainedNodes: !6554)
!6554 = !{!6555}
!6555 = !DILocalVariable(name: "result", scope: !6553, file: !5805, line: 1029, type: !137)
!6556 = distinct !DILocation(line: 48, column: 10, scope: !6557, inlinedAt: !6561)
!6557 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6558, file: !6558, line: 46, type: !6559, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2011, retainedNodes: !162)
!6558 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!259}
!6561 = distinct !DILocation(line: 30, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !6441, line: 30, column: 7)
!6563 = distinct !DILexicalBlock(scope: !6549, file: !6441, line: 29, column: 26)
!6564 = !{i64 1557126}
!6565 = !DILocation(line: 0, scope: !6553, inlinedAt: !6556)
!6566 = !DILocation(line: 48, column: 9, scope: !6557, inlinedAt: !6561)
!6567 = !DILocation(line: 30, column: 7, scope: !6563)
!6568 = !DILocation(line: 42, column: 14, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6562, file: !6441, line: 30, column: 25)
!6570 = !DILocation(line: 48, column: 15, scope: !6569)
!6571 = !DILocation(line: 49, column: 3, scope: !6569)
!6572 = !DILocation(line: 52, column: 2, scope: !6440)
!6573 = !DILocation(line: 53, column: 1, scope: !6440)
!6574 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !277, file: !277, line: 127, type: !646, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !162)
!6575 = !DILocation(line: 134, column: 2, scope: !6574)
!6576 = !DILocation(line: 156, column: 1, scope: !6574)
!6577 = !DILocation(line: 0, scope: !276)
!6578 = !DILocation(line: 289, column: 36, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !276, file: !277, line: 285, column: 2)
!6580 = !DILocation(line: 289, column: 42, scope: !6579)
!6581 = !DILocation(line: 300, column: 36, scope: !276)
!6582 = !DILocation(line: 301, column: 35, scope: !276)
!6583 = !DILocation(line: 302, column: 37, scope: !276)
!6584 = !DILocation(line: 311, column: 2, scope: !276)
!6585 = !DILocation(line: 316, column: 1, scope: !276)
!6586 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !446, file: !446, line: 180, type: !646, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !162)
!6587 = !DILocation(line: 188, column: 12, scope: !6586)
!6588 = !DILocation(line: 271, column: 3, scope: !6589, inlinedAt: !6590)
!6589 = distinct !DISubprogram(name: "__DSB", scope: !5805, file: !5805, line: 269, type: !646, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !162)
!6590 = distinct !DILocation(line: 192, column: 2, scope: !6586)
!6591 = !{i64 1707557}
!6592 = !DILocation(line: 260, column: 3, scope: !6593, inlinedAt: !6594)
!6593 = distinct !DISubprogram(name: "__ISB", scope: !5805, file: !5805, line: 258, type: !646, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !162)
!6594 = distinct !DILocation(line: 193, column: 2, scope: !6586)
!6595 = !{i64 1707274}
!6596 = !DILocation(line: 194, column: 1, scope: !6586)
!6597 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !446, file: !446, line: 199, type: !646, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !162)
!6598 = !DILocation(line: 282, column: 3, scope: !6599, inlinedAt: !6600)
!6599 = distinct !DISubprogram(name: "__DMB", scope: !5805, file: !5805, line: 280, type: !646, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !162)
!6600 = distinct !DILocation(line: 202, column: 2, scope: !6597)
!6601 = !{i64 1707833}
!6602 = !DILocation(line: 205, column: 12, scope: !6597)
!6603 = !DILocation(line: 206, column: 1, scope: !6597)
!6604 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !446, file: !446, line: 275, type: !6605, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6619)
!6605 = !DISubroutineType(types: !6606)
!6606 = !{null, !6607, !6618, !1078, !1078}
!6607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6608, size: 32)
!6608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6609)
!6609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !400, line: 52, size: 96, elements: !6610)
!6610 = !{!6611, !6612, !6613}
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6609, file: !400, line: 53, baseType: !22, size: 32)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6609, file: !400, line: 54, baseType: !120, size: 32, offset: 32)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6609, file: !400, line: 55, baseType: !6614, size: 32, offset: 64)
!6614 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !406, line: 151, baseType: !6615)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !406, line: 149, size: 32, elements: !6616)
!6616 = !{!6617}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6615, file: !406, line: 150, baseType: !137, size: 32)
!6618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!6619 = !{!6620, !6621, !6622, !6623}
!6620 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6604, file: !446, line: 276, type: !6607)
!6621 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6604, file: !446, line: 276, type: !6618)
!6622 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6604, file: !446, line: 277, type: !1078)
!6623 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6604, file: !446, line: 277, type: !1078)
!6624 = !DILocation(line: 0, scope: !6604)
!6625 = !DILocation(line: 279, column: 6, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6604, file: !446, line: 279, column: 6)
!6627 = !DILocation(line: 285, column: 1, scope: !6604)
!6628 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6629, file: !6629, line: 220, type: !6630, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6632)
!6629 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6630 = !DISubroutineType(types: !6631)
!6631 = !{!103, !6607, !6618, !1078, !1078}
!6632 = !{!6633, !6634, !6635, !6636, !6637}
!6633 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6628, file: !6629, line: 221, type: !6607)
!6634 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6628, file: !6629, line: 221, type: !6618)
!6635 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6628, file: !6629, line: 222, type: !1078)
!6636 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6628, file: !6629, line: 223, type: !1078)
!6637 = !DILocalVariable(name: "mpu_reg_index", scope: !6628, file: !6629, line: 225, type: !103)
!6638 = !DILocation(line: 0, scope: !6628)
!6639 = !DILocation(line: 225, column: 22, scope: !6628)
!6640 = !DILocation(line: 233, column: 18, scope: !6628)
!6641 = !DILocation(line: 236, column: 23, scope: !6628)
!6642 = !DILocation(line: 236, column: 21, scope: !6628)
!6643 = !DILocation(line: 238, column: 2, scope: !6628)
!6644 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !446, file: !446, line: 105, type: !6645, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6647)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{!103, !6607, !256, !256, !259}
!6647 = !{!6648, !6649, !6650, !6651, !6652, !6653}
!6648 = !DILocalVariable(name: "regions", arg: 1, scope: !6644, file: !446, line: 106, type: !6607)
!6649 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6644, file: !446, line: 106, type: !256)
!6650 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6644, file: !446, line: 106, type: !256)
!6651 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6644, file: !446, line: 107, type: !259)
!6652 = !DILocalVariable(name: "i", scope: !6644, file: !446, line: 109, type: !103)
!6653 = !DILocalVariable(name: "reg_index", scope: !6644, file: !446, line: 110, type: !103)
!6654 = !DILocation(line: 0, scope: !6644)
!6655 = !DILocation(line: 110, column: 18, scope: !6644)
!6656 = !DILocation(line: 112, column: 16, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !446, line: 112, column: 2)
!6658 = distinct !DILexicalBlock(scope: !6644, file: !446, line: 112, column: 2)
!6659 = !DILocation(line: 112, column: 2, scope: !6658)
!6660 = !DILocation(line: 113, column: 7, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !446, line: 113, column: 7)
!6662 = distinct !DILexicalBlock(scope: !6657, file: !446, line: 112, column: 36)
!6663 = !DILocation(line: 113, column: 18, scope: !6661)
!6664 = !DILocation(line: 113, column: 23, scope: !6661)
!6665 = !DILocation(line: 113, column: 7, scope: !6662)
!6666 = !DILocation(line: 118, column: 23, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6662, file: !446, line: 118, column: 7)
!6668 = !DILocation(line: 119, column: 7, scope: !6667)
!6669 = !DILocation(line: 118, column: 7, scope: !6662)
!6670 = !DILocation(line: 124, column: 36, scope: !6662)
!6671 = !DILocation(line: 124, column: 15, scope: !6662)
!6672 = !DILocation(line: 126, column: 17, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6662, file: !446, line: 126, column: 7)
!6674 = !DILocation(line: 126, column: 7, scope: !6662)
!6675 = !DILocation(line: 131, column: 12, scope: !6662)
!6676 = !DILocation(line: 132, column: 2, scope: !6662)
!6677 = !DILocation(line: 112, column: 32, scope: !6657)
!6678 = distinct !{!6678, !6659, !6679}
!6679 = !DILocation(line: 132, column: 2, scope: !6658)
!6680 = !DILocation(line: 135, column: 1, scope: !6644)
!6681 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6629, file: !6629, line: 63, type: !6682, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6684)
!6682 = !DISubroutineType(types: !6683)
!6683 = !{!103, !6607}
!6684 = !{!6685, !6686}
!6685 = !DILocalVariable(name: "part", arg: 1, scope: !6681, file: !6629, line: 63, type: !6607)
!6686 = !DILocalVariable(name: "partition_is_valid", scope: !6681, file: !6629, line: 70, type: !103)
!6687 = !DILocation(line: 0, scope: !6681)
!6688 = !DILocation(line: 71, column: 11, scope: !6681)
!6689 = !DILocation(line: 71, column: 37, scope: !6681)
!6690 = !DILocation(line: 72, column: 3, scope: !6681)
!6691 = !DILocation(line: 71, column: 30, scope: !6681)
!6692 = !DILocation(line: 75, column: 11, scope: !6681)
!6693 = !DILocation(line: 75, column: 17, scope: !6681)
!6694 = !DILocation(line: 75, column: 38, scope: !6681)
!6695 = !DILocation(line: 77, column: 2, scope: !6681)
!6696 = distinct !DISubprogram(name: "mpu_configure_region", scope: !446, file: !446, line: 79, type: !6697, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6699)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!103, !6618, !6607}
!6699 = !{!6700, !6701, !6702}
!6700 = !DILocalVariable(name: "index", arg: 1, scope: !6696, file: !446, line: 79, type: !6618)
!6701 = !DILocalVariable(name: "new_region", arg: 2, scope: !6696, file: !446, line: 80, type: !6607)
!6702 = !DILocalVariable(name: "region_conf", scope: !6696, file: !446, line: 82, type: !435)
!6703 = !DILocation(line: 0, scope: !6696)
!6704 = !DILocation(line: 82, column: 2, scope: !6696)
!6705 = !DILocation(line: 82, column: 24, scope: !6696)
!6706 = !DILocation(line: 87, column: 33, scope: !6696)
!6707 = !DILocation(line: 87, column: 14, scope: !6696)
!6708 = !DILocation(line: 87, column: 19, scope: !6696)
!6709 = !DILocation(line: 91, column: 55, scope: !6696)
!6710 = !DILocation(line: 92, column: 16, scope: !6696)
!6711 = !DILocation(line: 92, column: 53, scope: !6696)
!6712 = !DILocation(line: 91, column: 2, scope: !6696)
!6713 = !DILocation(line: 95, column: 9, scope: !6696)
!6714 = !DILocation(line: 97, column: 1, scope: !6696)
!6715 = !DILocation(line: 95, column: 2, scope: !6696)
!6716 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6629, file: !6629, line: 113, type: !6717, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6722)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{null, !6719, !6720, !137, !137}
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!6720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6721, size: 32)
!6721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6614)
!6722 = !{!6723, !6724, !6725, !6726}
!6723 = !DILocalVariable(name: "p_attr", arg: 1, scope: !6716, file: !6629, line: 114, type: !6719)
!6724 = !DILocalVariable(name: "attr", arg: 2, scope: !6716, file: !6629, line: 115, type: !6720)
!6725 = !DILocalVariable(name: "base", arg: 3, scope: !6716, file: !6629, line: 115, type: !137)
!6726 = !DILocalVariable(name: "size", arg: 4, scope: !6716, file: !6629, line: 115, type: !137)
!6727 = !DILocation(line: 0, scope: !6716)
!6728 = !DILocation(line: 127, column: 23, scope: !6716)
!6729 = !DILocation(line: 127, column: 35, scope: !6716)
!6730 = !DILocation(line: 127, column: 33, scope: !6716)
!6731 = !DILocation(line: 127, column: 10, scope: !6716)
!6732 = !DILocation(line: 127, column: 15, scope: !6716)
!6733 = !DILocation(line: 129, column: 1, scope: !6716)
!6734 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !446, file: !446, line: 57, type: !6735, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6737)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{!103, !6618, !433}
!6737 = !{!6738, !6739}
!6738 = !DILocalVariable(name: "index", arg: 1, scope: !6734, file: !446, line: 57, type: !6618)
!6739 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6734, file: !446, line: 58, type: !433)
!6740 = !DILocation(line: 0, scope: !6734)
!6741 = !DILocation(line: 61, column: 6, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6734, file: !446, line: 61, column: 6)
!6743 = !DILocation(line: 61, column: 12, scope: !6742)
!6744 = !DILocation(line: 61, column: 6, scope: !6734)
!6745 = !DILocation(line: 71, column: 2, scope: !6734)
!6746 = !DILocation(line: 73, column: 2, scope: !6734)
!6747 = !DILocation(line: 74, column: 1, scope: !6734)
!6748 = distinct !DISubprogram(name: "region_init", scope: !6629, file: !6629, line: 29, type: !6749, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6751)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{null, !1078, !433}
!6751 = !{!6752, !6753}
!6752 = !DILocalVariable(name: "index", arg: 1, scope: !6748, file: !6629, line: 29, type: !1078)
!6753 = !DILocalVariable(name: "region_conf", arg: 2, scope: !6748, file: !6629, line: 30, type: !433)
!6754 = !DILocation(line: 0, scope: !6748)
!6755 = !DILocation(line: 33, column: 2, scope: !6748)
!6756 = !DILocation(line: 47, column: 28, scope: !6748)
!6757 = !DILocation(line: 47, column: 33, scope: !6748)
!6758 = !DILocation(line: 48, column: 26, scope: !6748)
!6759 = !DILocation(line: 47, column: 12, scope: !6748)
!6760 = !DILocation(line: 49, column: 32, scope: !6748)
!6761 = !DILocation(line: 49, column: 37, scope: !6748)
!6762 = !DILocation(line: 49, column: 12, scope: !6748)
!6763 = !DILocation(line: 53, column: 1, scope: !6748)
!6764 = distinct !DISubprogram(name: "set_region_number", scope: !6765, file: !6765, line: 32, type: !5392, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6766)
!6765 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6766 = !{!6767}
!6767 = !DILocalVariable(name: "index", arg: 1, scope: !6764, file: !6765, line: 32, type: !137)
!6768 = !DILocation(line: 0, scope: !6764)
!6769 = !DILocation(line: 34, column: 11, scope: !6764)
!6770 = !DILocation(line: 35, column: 1, scope: !6764)
!6771 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6629, file: !6629, line: 88, type: !5428, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6772)
!6772 = !{!6773}
!6773 = !DILocalVariable(name: "size", arg: 1, scope: !6771, file: !6629, line: 88, type: !137)
!6774 = !DILocation(line: 0, scope: !6771)
!6775 = !DILocation(line: 91, column: 11, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6771, file: !6629, line: 91, column: 6)
!6777 = !DILocation(line: 91, column: 6, scope: !6771)
!6778 = !DILocation(line: 100, column: 11, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6771, file: !6629, line: 100, column: 6)
!6780 = !DILocation(line: 100, column: 6, scope: !6771)
!6781 = !DILocation(line: 104, column: 35, scope: !6771)
!6782 = !DILocation(line: 104, column: 16, scope: !6771)
!6783 = !DILocation(line: 104, column: 50, scope: !6771)
!6784 = !DILocation(line: 104, column: 72, scope: !6771)
!6785 = !DILocation(line: 104, column: 2, scope: !6771)
!6786 = !DILocation(line: 106, column: 1, scope: !6771)
!6787 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !446, file: !446, line: 307, type: !6788, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6790)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{null, !6607, !256}
!6790 = !{!6791, !6792}
!6791 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6787, file: !446, line: 308, type: !6607)
!6792 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6787, file: !446, line: 308, type: !256)
!6793 = !DILocation(line: 0, scope: !6787)
!6794 = !DILocation(line: 310, column: 6, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6787, file: !446, line: 310, column: 6)
!6796 = !DILocation(line: 316, column: 1, scope: !6787)
!6797 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6629, file: !6629, line: 249, type: !6798, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6800)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!103, !6607, !256}
!6800 = !{!6801, !6802, !6803, !6804}
!6801 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !6797, file: !6629, line: 250, type: !6607)
!6802 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6797, file: !6629, line: 250, type: !256)
!6803 = !DILocalVariable(name: "mpu_reg_index", scope: !6797, file: !6629, line: 252, type: !103)
!6804 = !DILocalVariable(name: "i", scope: !6805, file: !6629, line: 264, type: !103)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6629, line: 264, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6629, line: 261, column: 32)
!6807 = distinct !DILexicalBlock(scope: !6797, file: !6629, line: 261, column: 6)
!6808 = !DILocation(line: 0, scope: !6797)
!6809 = !DILocation(line: 252, column: 22, scope: !6797)
!6810 = !DILocation(line: 258, column: 18, scope: !6797)
!6811 = !DILocation(line: 261, column: 20, scope: !6807)
!6812 = !DILocation(line: 261, column: 6, scope: !6797)
!6813 = !DILocation(line: 0, scope: !6805)
!6814 = !DILocation(line: 265, column: 4, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6629, line: 264, column: 59)
!6816 = distinct !DILexicalBlock(scope: !6805, file: !6629, line: 264, column: 3)
!6817 = !DILocation(line: 264, column: 55, scope: !6816)
!6818 = !DILocation(line: 264, column: 33, scope: !6816)
!6819 = !DILocation(line: 264, column: 3, scope: !6805)
!6820 = distinct !{!6820, !6819, !6821}
!6821 = !DILocation(line: 266, column: 3, scope: !6805)
!6822 = !DILocation(line: 269, column: 2, scope: !6797)
!6823 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !6824, file: !6824, line: 218, type: !5392, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6825)
!6824 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6825 = !{!6826}
!6826 = !DILocalVariable(name: "rnr", arg: 1, scope: !6823, file: !6824, line: 218, type: !137)
!6827 = !DILocation(line: 0, scope: !6823)
!6828 = !DILocation(line: 220, column: 12, scope: !6823)
!6829 = !DILocation(line: 221, column: 13, scope: !6823)
!6830 = !DILocation(line: 222, column: 1, scope: !6823)
!6831 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !446, file: !446, line: 326, type: !6832, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6834)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{!103}
!6834 = !{!6835}
!6835 = !DILocalVariable(name: "r_index", scope: !6831, file: !446, line: 328, type: !137)
!6836 = !DILocation(line: 330, column: 17, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6831, file: !446, line: 330, column: 6)
!6838 = !DILocation(line: 330, column: 29, scope: !6837)
!6839 = !DILocation(line: 330, column: 6, scope: !6831)
!6840 = !DILocation(line: 347, column: 2, scope: !6831)
!6841 = !DILocation(line: 0, scope: !6831)
!6842 = !DILocation(line: 364, column: 29, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !446, line: 364, column: 2)
!6844 = distinct !DILexicalBlock(scope: !6831, file: !446, line: 364, column: 2)
!6845 = !DILocation(line: 364, column: 2, scope: !6844)
!6846 = !DILocation(line: 365, column: 25, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !446, line: 364, column: 66)
!6848 = !DILocation(line: 365, column: 3, scope: !6847)
!6849 = !DILocation(line: 364, column: 62, scope: !6843)
!6850 = distinct !{!6850, !6845, !6851}
!6851 = !DILocation(line: 366, column: 2, scope: !6844)
!6852 = !DILocation(line: 369, column: 23, scope: !6831)
!6853 = !DILocation(line: 369, column: 21, scope: !6831)
!6854 = !DILocation(line: 372, column: 2, scope: !6831)
!6855 = !DILocation(line: 443, column: 2, scope: !6831)
!6856 = !DILocation(line: 444, column: 1, scope: !6831)
!6857 = distinct !DISubprogram(name: "strcpy", scope: !6858, file: !6858, line: 20, type: !6859, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6863)
!6858 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6859 = !DISubroutineType(types: !6860)
!6860 = !{!1131, !6861, !6862}
!6861 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1131)
!6862 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !247)
!6863 = !{!6864, !6865, !6866}
!6864 = !DILocalVariable(name: "d", arg: 1, scope: !6857, file: !6858, line: 20, type: !6861)
!6865 = !DILocalVariable(name: "s", arg: 2, scope: !6857, file: !6858, line: 20, type: !6862)
!6866 = !DILocalVariable(name: "dest", scope: !6857, file: !6858, line: 22, type: !1131)
!6867 = !DILocation(line: 0, scope: !6857)
!6868 = !DILocation(line: 24, column: 9, scope: !6857)
!6869 = !DILocation(line: 24, column: 12, scope: !6857)
!6870 = !DILocation(line: 24, column: 2, scope: !6857)
!6871 = !DILocation(line: 25, column: 6, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6857, file: !6858, line: 24, column: 21)
!6873 = !DILocation(line: 26, column: 4, scope: !6872)
!6874 = !DILocation(line: 27, column: 4, scope: !6872)
!6875 = distinct !{!6875, !6870, !6876}
!6876 = !DILocation(line: 28, column: 2, scope: !6857)
!6877 = !DILocation(line: 30, column: 5, scope: !6857)
!6878 = !DILocation(line: 32, column: 2, scope: !6857)
!6879 = distinct !DISubprogram(name: "strncpy", scope: !6858, file: !6858, line: 42, type: !6880, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6882)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{!1131, !6861, !6862, !120}
!6882 = !{!6883, !6884, !6885, !6886}
!6883 = !DILocalVariable(name: "d", arg: 1, scope: !6879, file: !6858, line: 42, type: !6861)
!6884 = !DILocalVariable(name: "s", arg: 2, scope: !6879, file: !6858, line: 42, type: !6862)
!6885 = !DILocalVariable(name: "n", arg: 3, scope: !6879, file: !6858, line: 42, type: !120)
!6886 = !DILocalVariable(name: "dest", scope: !6879, file: !6858, line: 44, type: !1131)
!6887 = !DILocation(line: 0, scope: !6879)
!6888 = !DILocation(line: 46, column: 12, scope: !6879)
!6889 = !DILocation(line: 46, column: 17, scope: !6879)
!6890 = !DILocation(line: 46, column: 20, scope: !6879)
!6891 = !DILocation(line: 46, column: 23, scope: !6879)
!6892 = !DILocation(line: 46, column: 2, scope: !6879)
!6893 = !DILocation(line: 47, column: 6, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6879, file: !6858, line: 46, column: 32)
!6895 = !DILocation(line: 48, column: 4, scope: !6894)
!6896 = !DILocation(line: 49, column: 4, scope: !6894)
!6897 = !DILocation(line: 50, column: 4, scope: !6894)
!6898 = distinct !{!6898, !6892, !6899}
!6899 = !DILocation(line: 51, column: 2, scope: !6879)
!6900 = !DILocation(line: 54, column: 6, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6879, file: !6858, line: 53, column: 16)
!6902 = !DILocation(line: 55, column: 4, scope: !6901)
!6903 = !DILocation(line: 56, column: 4, scope: !6901)
!6904 = !DILocation(line: 53, column: 11, scope: !6879)
!6905 = !DILocation(line: 53, column: 2, scope: !6879)
!6906 = distinct !{!6906, !6905, !6907}
!6907 = !DILocation(line: 57, column: 2, scope: !6879)
!6908 = !DILocation(line: 59, column: 2, scope: !6879)
!6909 = distinct !DISubprogram(name: "strchr", scope: !6858, file: !6858, line: 69, type: !6910, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6912)
!6910 = !DISubroutineType(types: !6911)
!6911 = !{!1131, !247, !103}
!6912 = !{!6913, !6914, !6915}
!6913 = !DILocalVariable(name: "s", arg: 1, scope: !6909, file: !6858, line: 69, type: !247)
!6914 = !DILocalVariable(name: "c", arg: 2, scope: !6909, file: !6858, line: 69, type: !103)
!6915 = !DILocalVariable(name: "tmp", scope: !6909, file: !6858, line: 71, type: !109)
!6916 = !DILocation(line: 0, scope: !6909)
!6917 = !DILocation(line: 73, column: 2, scope: !6909)
!6918 = !DILocation(line: 73, column: 10, scope: !6909)
!6919 = !DILocation(line: 73, column: 13, scope: !6909)
!6920 = !DILocation(line: 73, column: 21, scope: !6909)
!6921 = !DILocation(line: 74, column: 4, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6909, file: !6858, line: 73, column: 38)
!6923 = distinct !{!6923, !6917, !6924}
!6924 = !DILocation(line: 75, column: 2, scope: !6909)
!6925 = !DILocation(line: 77, column: 9, scope: !6909)
!6926 = !DILocation(line: 77, column: 2, scope: !6909)
!6927 = distinct !DISubprogram(name: "strrchr", scope: !6858, file: !6858, line: 87, type: !6910, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6928)
!6928 = !{!6929, !6930, !6931}
!6929 = !DILocalVariable(name: "s", arg: 1, scope: !6927, file: !6858, line: 87, type: !247)
!6930 = !DILocalVariable(name: "c", arg: 2, scope: !6927, file: !6858, line: 87, type: !103)
!6931 = !DILocalVariable(name: "match", scope: !6927, file: !6858, line: 89, type: !1131)
!6932 = !DILocation(line: 0, scope: !6927)
!6933 = !DILocation(line: 91, column: 2, scope: !6927)
!6934 = !DILocation(line: 92, column: 7, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6858, line: 92, column: 7)
!6936 = distinct !DILexicalBlock(scope: !6927, file: !6858, line: 91, column: 5)
!6937 = !DILocation(line: 92, column: 10, scope: !6935)
!6938 = !DILocation(line: 92, column: 7, scope: !6936)
!6939 = !DILocation(line: 95, column: 13, scope: !6927)
!6940 = !DILocation(line: 95, column: 2, scope: !6936)
!6941 = distinct !{!6941, !6933, !6942}
!6942 = !DILocation(line: 95, column: 15, scope: !6927)
!6943 = !DILocation(line: 97, column: 2, scope: !6927)
!6944 = distinct !DISubprogram(name: "strlen", scope: !6858, file: !6858, line: 107, type: !6945, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6947)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!120, !247}
!6947 = !{!6948, !6949}
!6948 = !DILocalVariable(name: "s", arg: 1, scope: !6944, file: !6858, line: 107, type: !247)
!6949 = !DILocalVariable(name: "n", scope: !6944, file: !6858, line: 109, type: !120)
!6950 = !DILocation(line: 0, scope: !6944)
!6951 = !DILocation(line: 111, column: 9, scope: !6944)
!6952 = !DILocation(line: 111, column: 12, scope: !6944)
!6953 = !DILocation(line: 111, column: 2, scope: !6944)
!6954 = !DILocation(line: 112, column: 4, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6944, file: !6858, line: 111, column: 21)
!6956 = !DILocation(line: 113, column: 4, scope: !6955)
!6957 = distinct !{!6957, !6953, !6958}
!6958 = !DILocation(line: 114, column: 2, scope: !6944)
!6959 = !DILocation(line: 116, column: 2, scope: !6944)
!6960 = distinct !DISubprogram(name: "strnlen", scope: !6858, file: !6858, line: 126, type: !6961, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6963)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{!120, !247, !120}
!6963 = !{!6964, !6965, !6966}
!6964 = !DILocalVariable(name: "s", arg: 1, scope: !6960, file: !6858, line: 126, type: !247)
!6965 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6960, file: !6858, line: 126, type: !120)
!6966 = !DILocalVariable(name: "n", scope: !6960, file: !6858, line: 128, type: !120)
!6967 = !DILocation(line: 0, scope: !6960)
!6968 = !DILocation(line: 130, column: 9, scope: !6960)
!6969 = !DILocation(line: 130, column: 12, scope: !6960)
!6970 = !DILocation(line: 130, column: 20, scope: !6960)
!6971 = !DILocation(line: 130, column: 2, scope: !6960)
!6972 = !DILocation(line: 131, column: 4, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6960, file: !6858, line: 130, column: 35)
!6974 = !DILocation(line: 132, column: 4, scope: !6973)
!6975 = distinct !{!6975, !6971, !6976}
!6976 = !DILocation(line: 133, column: 2, scope: !6960)
!6977 = !DILocation(line: 135, column: 2, scope: !6960)
!6978 = distinct !DISubprogram(name: "strcmp", scope: !6858, file: !6858, line: 145, type: !6979, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !6981)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!103, !247, !247}
!6981 = !{!6982, !6983}
!6982 = !DILocalVariable(name: "s1", arg: 1, scope: !6978, file: !6858, line: 145, type: !247)
!6983 = !DILocalVariable(name: "s2", arg: 2, scope: !6978, file: !6858, line: 145, type: !247)
!6984 = !DILocation(line: 0, scope: !6978)
!6985 = !DILocation(line: 147, column: 10, scope: !6978)
!6986 = !DILocation(line: 147, column: 17, scope: !6978)
!6987 = !DILocation(line: 147, column: 14, scope: !6978)
!6988 = !DILocation(line: 147, column: 22, scope: !6978)
!6989 = !DILocation(line: 148, column: 5, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6978, file: !6858, line: 147, column: 40)
!6991 = !DILocation(line: 149, column: 5, scope: !6990)
!6992 = distinct !{!6992, !6993, !6994}
!6993 = !DILocation(line: 147, column: 2, scope: !6978)
!6994 = !DILocation(line: 150, column: 2, scope: !6978)
!6995 = !DILocation(line: 152, column: 9, scope: !6978)
!6996 = !DILocation(line: 152, column: 15, scope: !6978)
!6997 = !DILocation(line: 152, column: 13, scope: !6978)
!6998 = !DILocation(line: 152, column: 2, scope: !6978)
!6999 = distinct !DISubprogram(name: "strncmp", scope: !6858, file: !6858, line: 162, type: !7000, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7002)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!103, !247, !247, !120}
!7002 = !{!7003, !7004, !7005}
!7003 = !DILocalVariable(name: "s1", arg: 1, scope: !6999, file: !6858, line: 162, type: !247)
!7004 = !DILocalVariable(name: "s2", arg: 2, scope: !6999, file: !6858, line: 162, type: !247)
!7005 = !DILocalVariable(name: "n", arg: 3, scope: !6999, file: !6858, line: 162, type: !120)
!7006 = !DILocation(line: 0, scope: !6999)
!7007 = !DILocation(line: 164, column: 17, scope: !6999)
!7008 = !DILocation(line: 164, column: 21, scope: !6999)
!7009 = !DILocation(line: 164, column: 28, scope: !6999)
!7010 = !DILocation(line: 164, column: 25, scope: !6999)
!7011 = !DILocation(line: 164, column: 33, scope: !6999)
!7012 = !DILocation(line: 165, column: 5, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6999, file: !6858, line: 164, column: 51)
!7014 = !DILocation(line: 166, column: 5, scope: !7013)
!7015 = !DILocation(line: 167, column: 4, scope: !7013)
!7016 = distinct !{!7016, !7017, !7018}
!7017 = !DILocation(line: 164, column: 2, scope: !6999)
!7018 = !DILocation(line: 168, column: 2, scope: !6999)
!7019 = !DILocation(line: 170, column: 25, scope: !6999)
!7020 = !DILocation(line: 170, column: 31, scope: !6999)
!7021 = !DILocation(line: 170, column: 29, scope: !6999)
!7022 = !DILocation(line: 170, column: 9, scope: !6999)
!7023 = !DILocation(line: 170, column: 2, scope: !6999)
!7024 = distinct !DISubprogram(name: "strtok_r", scope: !6858, file: !6858, line: 180, type: !7025, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7028)
!7025 = !DISubroutineType(types: !7026)
!7026 = !{!1131, !1131, !247, !7027}
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!7028 = !{!7029, !7030, !7031, !7032, !7033}
!7029 = !DILocalVariable(name: "str", arg: 1, scope: !7024, file: !6858, line: 180, type: !1131)
!7030 = !DILocalVariable(name: "sep", arg: 2, scope: !7024, file: !6858, line: 180, type: !247)
!7031 = !DILocalVariable(name: "state", arg: 3, scope: !7024, file: !6858, line: 180, type: !7027)
!7032 = !DILocalVariable(name: "start", scope: !7024, file: !6858, line: 182, type: !1131)
!7033 = !DILocalVariable(name: "end", scope: !7024, file: !6858, line: 182, type: !1131)
!7034 = !DILocation(line: 0, scope: !7024)
!7035 = !DILocation(line: 184, column: 10, scope: !7024)
!7036 = !DILocation(line: 184, column: 22, scope: !7024)
!7037 = !DILocation(line: 187, column: 9, scope: !7024)
!7038 = !DILocation(line: 187, column: 16, scope: !7024)
!7039 = !DILocation(line: 187, column: 19, scope: !7024)
!7040 = !DILocation(line: 187, column: 2, scope: !7024)
!7041 = !DILocation(line: 188, column: 8, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7024, file: !6858, line: 187, column: 40)
!7043 = distinct !{!7043, !7040, !7044}
!7044 = !DILocation(line: 189, column: 2, scope: !7024)
!7045 = !DILocation(line: 198, column: 9, scope: !7024)
!7046 = !DILocation(line: 198, column: 18, scope: !7024)
!7047 = !DILocation(line: 198, column: 17, scope: !7024)
!7048 = !DILocation(line: 198, column: 2, scope: !7024)
!7049 = !DILocation(line: 199, column: 6, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7024, file: !6858, line: 198, column: 37)
!7051 = !DILocation(line: 198, column: 14, scope: !7024)
!7052 = distinct !{!7052, !7048, !7053}
!7053 = !DILocation(line: 200, column: 2, scope: !7024)
!7054 = !DILocation(line: 203, column: 8, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !6858, line: 202, column: 20)
!7056 = distinct !DILexicalBlock(scope: !7024, file: !6858, line: 202, column: 6)
!7057 = !DILocation(line: 204, column: 16, scope: !7055)
!7058 = !DILocation(line: 205, column: 2, scope: !7055)
!7059 = !DILocation(line: 210, column: 1, scope: !7024)
!7060 = distinct !DISubprogram(name: "strcat", scope: !6858, file: !6858, line: 212, type: !6859, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7061)
!7061 = !{!7062, !7063}
!7062 = !DILocalVariable(name: "dest", arg: 1, scope: !7060, file: !6858, line: 212, type: !6861)
!7063 = !DILocalVariable(name: "src", arg: 2, scope: !7060, file: !6858, line: 212, type: !6862)
!7064 = !DILocation(line: 0, scope: !7060)
!7065 = !DILocation(line: 214, column: 16, scope: !7060)
!7066 = !DILocation(line: 214, column: 14, scope: !7060)
!7067 = !DILocation(line: 214, column: 2, scope: !7060)
!7068 = !DILocation(line: 215, column: 2, scope: !7060)
!7069 = distinct !DISubprogram(name: "strncat", scope: !6858, file: !6858, line: 218, type: !6880, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7070)
!7070 = !{!7071, !7072, !7073, !7074, !7075}
!7071 = !DILocalVariable(name: "dest", arg: 1, scope: !7069, file: !6858, line: 218, type: !6861)
!7072 = !DILocalVariable(name: "src", arg: 2, scope: !7069, file: !6858, line: 218, type: !6862)
!7073 = !DILocalVariable(name: "n", arg: 3, scope: !7069, file: !6858, line: 219, type: !120)
!7074 = !DILocalVariable(name: "orig_dest", scope: !7069, file: !6858, line: 221, type: !1131)
!7075 = !DILocalVariable(name: "len", scope: !7069, file: !6858, line: 222, type: !120)
!7076 = !DILocation(line: 0, scope: !7069)
!7077 = !DILocation(line: 222, column: 15, scope: !7069)
!7078 = !DILocation(line: 224, column: 7, scope: !7069)
!7079 = !DILocation(line: 225, column: 14, scope: !7069)
!7080 = !DILocation(line: 225, column: 19, scope: !7069)
!7081 = !DILocation(line: 225, column: 11, scope: !7069)
!7082 = !DILocation(line: 225, column: 23, scope: !7069)
!7083 = !DILocation(line: 225, column: 28, scope: !7069)
!7084 = !DILocation(line: 225, column: 2, scope: !7069)
!7085 = !DILocation(line: 226, column: 17, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7069, file: !6858, line: 225, column: 38)
!7087 = !DILocation(line: 226, column: 8, scope: !7086)
!7088 = !DILocation(line: 226, column: 11, scope: !7086)
!7089 = distinct !{!7089, !7084, !7090}
!7090 = !DILocation(line: 227, column: 2, scope: !7069)
!7091 = !DILocation(line: 228, column: 8, scope: !7069)
!7092 = !DILocation(line: 230, column: 2, scope: !7069)
!7093 = distinct !DISubprogram(name: "memcmp", scope: !6858, file: !6858, line: 239, type: !7094, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7096)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{!103, !13, !13, !120}
!7096 = !{!7097, !7098, !7099, !7100, !7101}
!7097 = !DILocalVariable(name: "m1", arg: 1, scope: !7093, file: !6858, line: 239, type: !13)
!7098 = !DILocalVariable(name: "m2", arg: 2, scope: !7093, file: !6858, line: 239, type: !13)
!7099 = !DILocalVariable(name: "n", arg: 3, scope: !7093, file: !6858, line: 239, type: !120)
!7100 = !DILocalVariable(name: "c1", scope: !7093, file: !6858, line: 241, type: !247)
!7101 = !DILocalVariable(name: "c2", scope: !7093, file: !6858, line: 242, type: !247)
!7102 = !DILocation(line: 0, scope: !7093)
!7103 = !DILocation(line: 244, column: 7, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7093, file: !6858, line: 244, column: 6)
!7105 = !DILocation(line: 244, column: 6, scope: !7093)
!7106 = !DILocation(line: 248, column: 10, scope: !7093)
!7107 = !DILocation(line: 248, column: 14, scope: !7093)
!7108 = !DILocation(line: 248, column: 19, scope: !7093)
!7109 = !DILocation(line: 248, column: 2, scope: !7093)
!7110 = !DILocation(line: 248, column: 23, scope: !7093)
!7111 = !DILocation(line: 248, column: 30, scope: !7093)
!7112 = !DILocation(line: 248, column: 27, scope: !7093)
!7113 = !DILocation(line: 249, column: 5, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7093, file: !6858, line: 248, column: 36)
!7115 = !DILocation(line: 250, column: 5, scope: !7114)
!7116 = distinct !{!7116, !7109, !7117}
!7117 = !DILocation(line: 251, column: 2, scope: !7093)
!7118 = !DILocation(line: 253, column: 9, scope: !7093)
!7119 = !DILocation(line: 253, column: 15, scope: !7093)
!7120 = !DILocation(line: 253, column: 13, scope: !7093)
!7121 = !DILocation(line: 253, column: 2, scope: !7093)
!7122 = !DILocation(line: 254, column: 1, scope: !7093)
!7123 = distinct !DISubprogram(name: "memmove", scope: !6858, file: !6858, line: 263, type: !7124, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7126)
!7124 = !DISubroutineType(types: !7125)
!7125 = !{!102, !102, !13, !120}
!7126 = !{!7127, !7128, !7129, !7130, !7131}
!7127 = !DILocalVariable(name: "d", arg: 1, scope: !7123, file: !6858, line: 263, type: !102)
!7128 = !DILocalVariable(name: "s", arg: 2, scope: !7123, file: !6858, line: 263, type: !13)
!7129 = !DILocalVariable(name: "n", arg: 3, scope: !7123, file: !6858, line: 263, type: !120)
!7130 = !DILocalVariable(name: "dest", scope: !7123, file: !6858, line: 265, type: !1131)
!7131 = !DILocalVariable(name: "src", scope: !7123, file: !6858, line: 266, type: !247)
!7132 = !DILocation(line: 0, scope: !7123)
!7133 = !DILocation(line: 268, column: 21, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7123, file: !6858, line: 268, column: 6)
!7135 = !DILocation(line: 268, column: 28, scope: !7134)
!7136 = !DILocation(line: 268, column: 6, scope: !7123)
!7137 = !DILocation(line: 280, column: 12, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7134, file: !6858, line: 278, column: 9)
!7139 = !DILocation(line: 280, column: 3, scope: !7138)
!7140 = !DILocation(line: 275, column: 5, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !6858, line: 274, column: 17)
!7142 = distinct !DILexicalBlock(scope: !7134, file: !6858, line: 268, column: 33)
!7143 = !DILocation(line: 276, column: 14, scope: !7141)
!7144 = !DILocation(line: 276, column: 4, scope: !7141)
!7145 = !DILocation(line: 276, column: 12, scope: !7141)
!7146 = !DILocation(line: 274, column: 12, scope: !7142)
!7147 = !DILocation(line: 274, column: 3, scope: !7142)
!7148 = distinct !{!7148, !7147, !7149}
!7149 = !DILocation(line: 277, column: 3, scope: !7142)
!7150 = !DILocation(line: 281, column: 12, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7138, file: !6858, line: 280, column: 17)
!7152 = !DILocation(line: 281, column: 10, scope: !7151)
!7153 = !DILocation(line: 282, column: 8, scope: !7151)
!7154 = !DILocation(line: 283, column: 7, scope: !7151)
!7155 = !DILocation(line: 284, column: 5, scope: !7151)
!7156 = distinct !{!7156, !7139, !7157}
!7157 = !DILocation(line: 285, column: 3, scope: !7138)
!7158 = !DILocation(line: 288, column: 2, scope: !7123)
!7159 = distinct !DISubprogram(name: "memcpy", scope: !6858, file: !6858, line: 298, type: !7160, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7164)
!7160 = !DISubroutineType(types: !7161)
!7161 = !{!102, !7162, !7163, !120}
!7162 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7163 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7164 = !{!7165, !7166, !7167, !7168, !7169}
!7165 = !DILocalVariable(name: "d", arg: 1, scope: !7159, file: !6858, line: 298, type: !7162)
!7166 = !DILocalVariable(name: "s", arg: 2, scope: !7159, file: !6858, line: 298, type: !7163)
!7167 = !DILocalVariable(name: "n", arg: 3, scope: !7159, file: !6858, line: 298, type: !120)
!7168 = !DILocalVariable(name: "d_byte", scope: !7159, file: !6858, line: 302, type: !511)
!7169 = !DILocalVariable(name: "s_byte", scope: !7159, file: !6858, line: 303, type: !2042)
!7170 = !DILocation(line: 0, scope: !7159)
!7171 = !DILocation(line: 337, column: 11, scope: !7159)
!7172 = !DILocation(line: 337, column: 2, scope: !7159)
!7173 = !DILocation(line: 338, column: 25, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7159, file: !6858, line: 337, column: 16)
!7175 = !DILocation(line: 338, column: 17, scope: !7174)
!7176 = !DILocation(line: 338, column: 11, scope: !7174)
!7177 = !DILocation(line: 338, column: 15, scope: !7174)
!7178 = !DILocation(line: 339, column: 4, scope: !7174)
!7179 = distinct !{!7179, !7172, !7180}
!7180 = !DILocation(line: 340, column: 2, scope: !7159)
!7181 = !DILocation(line: 342, column: 2, scope: !7159)
!7182 = distinct !DISubprogram(name: "memset", scope: !6858, file: !6858, line: 352, type: !7183, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7185)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!102, !102, !103, !120}
!7185 = !{!7186, !7187, !7188, !7189, !7190}
!7186 = !DILocalVariable(name: "buf", arg: 1, scope: !7182, file: !6858, line: 352, type: !102)
!7187 = !DILocalVariable(name: "c", arg: 2, scope: !7182, file: !6858, line: 352, type: !103)
!7188 = !DILocalVariable(name: "n", arg: 3, scope: !7182, file: !6858, line: 352, type: !120)
!7189 = !DILocalVariable(name: "d_byte", scope: !7182, file: !6858, line: 356, type: !511)
!7190 = !DILocalVariable(name: "c_byte", scope: !7182, file: !6858, line: 357, type: !257)
!7191 = !DILocation(line: 0, scope: !7182)
!7192 = !DILocation(line: 357, column: 25, scope: !7182)
!7193 = !DILocation(line: 389, column: 11, scope: !7182)
!7194 = !DILocation(line: 389, column: 2, scope: !7182)
!7195 = !DILocation(line: 390, column: 11, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7182, file: !6858, line: 389, column: 16)
!7197 = !DILocation(line: 390, column: 15, scope: !7196)
!7198 = !DILocation(line: 391, column: 4, scope: !7196)
!7199 = distinct !{!7199, !7194, !7200}
!7200 = !DILocation(line: 392, column: 2, scope: !7182)
!7201 = !DILocation(line: 394, column: 2, scope: !7182)
!7202 = distinct !DISubprogram(name: "memchr", scope: !6858, file: !6858, line: 404, type: !7203, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2039, retainedNodes: !7205)
!7203 = !DISubroutineType(types: !7204)
!7204 = !{!102, !13, !103, !120}
!7205 = !{!7206, !7207, !7208, !7209}
!7206 = !DILocalVariable(name: "s", arg: 1, scope: !7202, file: !6858, line: 404, type: !13)
!7207 = !DILocalVariable(name: "c", arg: 2, scope: !7202, file: !6858, line: 404, type: !103)
!7208 = !DILocalVariable(name: "n", arg: 3, scope: !7202, file: !6858, line: 404, type: !120)
!7209 = !DILocalVariable(name: "p", scope: !7210, file: !6858, line: 407, type: !2042)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !6858, line: 406, column: 14)
!7211 = distinct !DILexicalBlock(scope: !7202, file: !6858, line: 406, column: 6)
!7212 = !DILocation(line: 0, scope: !7202)
!7213 = !DILocation(line: 406, column: 8, scope: !7211)
!7214 = !DILocation(line: 406, column: 6, scope: !7202)
!7215 = !DILocation(line: 409, column: 3, scope: !7210)
!7216 = !DILocation(line: 0, scope: !7210)
!7217 = !DILocation(line: 410, column: 8, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7219, file: !6858, line: 410, column: 8)
!7219 = distinct !DILexicalBlock(scope: !7210, file: !6858, line: 409, column: 6)
!7220 = !DILocation(line: 410, column: 13, scope: !7218)
!7221 = !DILocation(line: 410, column: 8, scope: !7219)
!7222 = distinct !{!7222, !7215, !7223}
!7223 = !DILocation(line: 414, column: 20, scope: !7210)
!7224 = !DILocation(line: 417, column: 2, scope: !7202)
!7225 = !DILocation(line: 418, column: 1, scope: !7202)
!7226 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !456, file: !456, line: 23, type: !2232, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7227)
!7227 = !{!7228}
!7228 = !DILocalVariable(name: "hook", arg: 1, scope: !7226, file: !456, line: 23, type: !128)
!7229 = !DILocation(line: 0, scope: !7226)
!7230 = !DILocation(line: 25, column: 15, scope: !7226)
!7231 = !DILocation(line: 26, column: 1, scope: !7226)
!7232 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !456, file: !456, line: 14, type: !129, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7233)
!7233 = !{!7234}
!7234 = !DILocalVariable(name: "c", arg: 1, scope: !7232, file: !456, line: 14, type: !103)
!7235 = !DILocation(line: 0, scope: !7232)
!7236 = !DILocation(line: 18, column: 2, scope: !7232)
!7237 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !456, file: !456, line: 28, type: !7238, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{!103, !103, !452}
!7240 = !{!7241, !7242}
!7241 = !DILocalVariable(name: "c", arg: 1, scope: !7237, file: !456, line: 28, type: !103)
!7242 = !DILocalVariable(name: "stream", arg: 2, scope: !7237, file: !456, line: 28, type: !452)
!7243 = !DILocation(line: 0, scope: !7237)
!7244 = !DILocation(line: 30, column: 27, scope: !7237)
!7245 = !DILocation(line: 30, column: 50, scope: !7237)
!7246 = !DILocation(line: 30, column: 9, scope: !7237)
!7247 = !DILocation(line: 30, column: 2, scope: !7237)
!7248 = distinct !DISubprogram(name: "fputc", scope: !456, file: !456, line: 41, type: !7238, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7249)
!7249 = !{!7250, !7251}
!7250 = !DILocalVariable(name: "c", arg: 1, scope: !7248, file: !456, line: 41, type: !103)
!7251 = !DILocalVariable(name: "stream", arg: 2, scope: !7248, file: !456, line: 41, type: !452)
!7252 = !DILocation(line: 0, scope: !7248)
!7253 = !DILocation(line: 43, column: 9, scope: !7248)
!7254 = !DILocation(line: 43, column: 2, scope: !7248)
!7255 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7256, file: !7256, line: 72, type: !7238, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7257)
!7256 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!7257 = !{!7258, !7259}
!7258 = !DILocalVariable(name: "c", arg: 1, scope: !7255, file: !7256, line: 72, type: !103)
!7259 = !DILocalVariable(name: "stream", arg: 2, scope: !7255, file: !7256, line: 72, type: !452)
!7260 = !DILocation(line: 0, scope: !7255)
!7261 = !DILocation(line: 81, column: 2, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7255, file: !7256, line: 81, column: 2)
!7263 = !{i64 2151151300}
!7264 = !DILocation(line: 82, column: 9, scope: !7255)
!7265 = !DILocation(line: 82, column: 2, scope: !7255)
!7266 = distinct !DISubprogram(name: "fputs", scope: !456, file: !456, line: 46, type: !7267, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7270)
!7267 = !DISubroutineType(types: !7268)
!7268 = !{!103, !6862, !7269}
!7269 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !452)
!7270 = !{!7271, !7272, !7273, !7274}
!7271 = !DILocalVariable(name: "s", arg: 1, scope: !7266, file: !456, line: 46, type: !6862)
!7272 = !DILocalVariable(name: "stream", arg: 2, scope: !7266, file: !456, line: 46, type: !7269)
!7273 = !DILocalVariable(name: "len", scope: !7266, file: !456, line: 48, type: !103)
!7274 = !DILocalVariable(name: "ret", scope: !7266, file: !456, line: 49, type: !103)
!7275 = !DILocation(line: 0, scope: !7266)
!7276 = !DILocation(line: 48, column: 12, scope: !7266)
!7277 = !DILocation(line: 51, column: 8, scope: !7266)
!7278 = !DILocation(line: 53, column: 13, scope: !7266)
!7279 = !DILocation(line: 53, column: 9, scope: !7266)
!7280 = !DILocation(line: 53, column: 2, scope: !7266)
!7281 = distinct !DISubprogram(name: "fwrite", scope: !456, file: !456, line: 99, type: !7282, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!120, !7163, !120, !120, !7269}
!7284 = !{!7285, !7286, !7287, !7288}
!7285 = !DILocalVariable(name: "ptr", arg: 1, scope: !7281, file: !456, line: 99, type: !7163)
!7286 = !DILocalVariable(name: "size", arg: 2, scope: !7281, file: !456, line: 99, type: !120)
!7287 = !DILocalVariable(name: "nitems", arg: 3, scope: !7281, file: !456, line: 99, type: !120)
!7288 = !DILocalVariable(name: "stream", arg: 4, scope: !7281, file: !456, line: 100, type: !7269)
!7289 = !DILocation(line: 0, scope: !7281)
!7290 = !DILocation(line: 102, column: 9, scope: !7281)
!7291 = !DILocation(line: 102, column: 2, scope: !7281)
!7292 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7256, file: !7256, line: 96, type: !7282, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7293)
!7293 = !{!7294, !7295, !7296, !7297}
!7294 = !DILocalVariable(name: "ptr", arg: 1, scope: !7292, file: !7256, line: 96, type: !7163)
!7295 = !DILocalVariable(name: "size", arg: 2, scope: !7292, file: !7256, line: 96, type: !120)
!7296 = !DILocalVariable(name: "nitems", arg: 3, scope: !7292, file: !7256, line: 96, type: !120)
!7297 = !DILocalVariable(name: "stream", arg: 4, scope: !7292, file: !7256, line: 96, type: !7269)
!7298 = !DILocation(line: 0, scope: !7292)
!7299 = !DILocation(line: 107, column: 2, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7292, file: !7256, line: 107, column: 2)
!7301 = !{i64 2151151404}
!7302 = !DILocation(line: 108, column: 9, scope: !7292)
!7303 = !DILocation(line: 108, column: 2, scope: !7292)
!7304 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !456, file: !456, line: 56, type: !7282, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7305)
!7305 = !{!7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313}
!7306 = !DILocalVariable(name: "ptr", arg: 1, scope: !7304, file: !456, line: 56, type: !7163)
!7307 = !DILocalVariable(name: "size", arg: 2, scope: !7304, file: !456, line: 56, type: !120)
!7308 = !DILocalVariable(name: "nitems", arg: 3, scope: !7304, file: !456, line: 57, type: !120)
!7309 = !DILocalVariable(name: "stream", arg: 4, scope: !7304, file: !456, line: 57, type: !7269)
!7310 = !DILocalVariable(name: "i", scope: !7304, file: !456, line: 59, type: !120)
!7311 = !DILocalVariable(name: "j", scope: !7304, file: !456, line: 60, type: !120)
!7312 = !DILocalVariable(name: "p", scope: !7304, file: !456, line: 61, type: !2042)
!7313 = !DILabel(scope: !7304, name: "done", file: !456, line: 82)
!7314 = !DILocation(line: 0, scope: !7304)
!7315 = !DILocation(line: 63, column: 14, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7304, file: !456, line: 63, column: 6)
!7317 = !DILocation(line: 63, column: 24, scope: !7316)
!7318 = !DILocation(line: 72, column: 3, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7304, file: !456, line: 70, column: 5)
!7320 = !DILocation(line: 0, scope: !7319)
!7321 = !DILocation(line: 73, column: 8, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !456, line: 73, column: 8)
!7323 = distinct !DILexicalBlock(scope: !7319, file: !456, line: 72, column: 6)
!7324 = !DILocation(line: 73, column: 29, scope: !7322)
!7325 = !DILocation(line: 73, column: 27, scope: !7322)
!7326 = !DILocation(line: 73, column: 21, scope: !7322)
!7327 = !DILocation(line: 73, column: 33, scope: !7322)
!7328 = !DILocation(line: 73, column: 8, scope: !7323)
!7329 = !DILocation(line: 76, column: 5, scope: !7323)
!7330 = !DILocation(line: 77, column: 14, scope: !7319)
!7331 = !DILocation(line: 77, column: 3, scope: !7323)
!7332 = distinct !{!7332, !7318, !7333}
!7333 = !DILocation(line: 77, column: 17, scope: !7319)
!7334 = !DILocation(line: 79, column: 4, scope: !7319)
!7335 = !DILocation(line: 80, column: 13, scope: !7304)
!7336 = !DILocation(line: 80, column: 2, scope: !7319)
!7337 = distinct !{!7337, !7338, !7339}
!7338 = !DILocation(line: 70, column: 2, scope: !7304)
!7339 = !DILocation(line: 80, column: 16, scope: !7304)
!7340 = !DILocation(line: 82, column: 1, scope: !7304)
!7341 = !DILocation(line: 83, column: 17, scope: !7304)
!7342 = !DILocation(line: 83, column: 2, scope: !7304)
!7343 = !DILocation(line: 84, column: 1, scope: !7304)
!7344 = distinct !DISubprogram(name: "puts", scope: !456, file: !456, line: 106, type: !7345, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !449, retainedNodes: !7347)
!7345 = !DISubroutineType(types: !7346)
!7346 = !{!103, !247}
!7347 = !{!7348}
!7348 = !DILocalVariable(name: "s", arg: 1, scope: !7344, file: !456, line: 106, type: !247)
!7349 = !DILocation(line: 0, scope: !7344)
!7350 = !DILocation(line: 108, column: 6, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7344, file: !456, line: 108, column: 6)
!7352 = !DILocation(line: 108, column: 23, scope: !7351)
!7353 = !DILocation(line: 108, column: 6, scope: !7344)
!7354 = !DILocation(line: 112, column: 9, scope: !7344)
!7355 = !DILocation(line: 112, column: 29, scope: !7344)
!7356 = !DILocation(line: 112, column: 2, scope: !7344)
!7357 = !DILocation(line: 113, column: 1, scope: !7344)
!7358 = distinct !DISubprogram(name: "uart_console_init", scope: !541, file: !541, line: 588, type: !518, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7359)
!7359 = !{!7360}
!7360 = !DILocalVariable(name: "arg", arg: 1, scope: !7358, file: !541, line: 588, type: !496)
!7361 = !DILocation(line: 0, scope: !7358)
!7362 = !DILocation(line: 593, column: 7, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7358, file: !541, line: 593, column: 6)
!7364 = !DILocation(line: 593, column: 6, scope: !7358)
!7365 = !DILocation(line: 597, column: 2, scope: !7358)
!7366 = !DILocation(line: 599, column: 2, scope: !7358)
!7367 = !DILocation(line: 600, column: 1, scope: !7358)
!7368 = distinct !DISubprogram(name: "device_is_ready", scope: !7369, file: !7369, line: 47, type: !7370, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7372)
!7369 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!7370 = !DISubroutineType(types: !7371)
!7371 = !{!259, !496}
!7372 = !{!7373}
!7373 = !DILocalVariable(name: "dev", arg: 1, scope: !7368, file: !7369, line: 47, type: !496)
!7374 = !DILocation(line: 0, scope: !7368)
!7375 = !DILocation(line: 55, column: 2, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7368, file: !7369, line: 55, column: 2)
!7377 = !{i64 2151276922}
!7378 = !DILocation(line: 56, column: 9, scope: !7368)
!7379 = !DILocation(line: 56, column: 2, scope: !7368)
!7380 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !541, file: !541, line: 573, type: !646, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !162)
!7381 = !DILocation(line: 576, column: 2, scope: !7380)
!7382 = !DILocation(line: 579, column: 2, scope: !7380)
!7383 = !DILocation(line: 581, column: 1, scope: !7380)
!7384 = distinct !DISubprogram(name: "console_out", scope: !541, file: !541, line: 77, type: !129, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7385)
!7385 = !{!7386}
!7386 = !DILocalVariable(name: "c", arg: 1, scope: !7384, file: !541, line: 77, type: !103)
!7387 = !DILocation(line: 0, scope: !7384)
!7388 = !DILocation(line: 89, column: 11, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7384, file: !541, line: 89, column: 6)
!7390 = !DILocation(line: 89, column: 6, scope: !7384)
!7391 = !DILocation(line: 90, column: 3, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7389, file: !541, line: 89, column: 17)
!7393 = !DILocation(line: 91, column: 2, scope: !7392)
!7394 = !DILocation(line: 92, column: 34, scope: !7384)
!7395 = !DILocation(line: 92, column: 2, scope: !7384)
!7396 = !DILocation(line: 94, column: 2, scope: !7384)
!7397 = distinct !DISubprogram(name: "uart_poll_out", scope: !7398, file: !7398, line: 95, type: !514, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7399)
!7398 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/arduino_due/basic/sys_heap")
!7399 = !{!7400, !7401}
!7400 = !DILocalVariable(name: "dev", arg: 1, scope: !7397, file: !7398, line: 95, type: !496)
!7401 = !DILocalVariable(name: "out_char", arg: 2, scope: !7397, file: !7398, line: 95, type: !257)
!7402 = !DILocation(line: 0, scope: !7397)
!7403 = !DILocation(line: 105, column: 2, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7397, file: !7398, line: 105, column: 2)
!7405 = !{i64 2151360313}
!7406 = !DILocation(line: 106, column: 2, scope: !7397)
!7407 = !DILocation(line: 107, column: 1, scope: !7397)
!7408 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !490, file: !490, line: 574, type: !514, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7409)
!7409 = !{!7410, !7411, !7412}
!7410 = !DILocalVariable(name: "dev", arg: 1, scope: !7408, file: !490, line: 574, type: !496)
!7411 = !DILocalVariable(name: "out_char", arg: 2, scope: !7408, file: !490, line: 575, type: !257)
!7412 = !DILocalVariable(name: "api", scope: !7408, file: !490, line: 577, type: !487)
!7413 = !DILocation(line: 0, scope: !7408)
!7414 = !DILocation(line: 578, column: 40, scope: !7408)
!7415 = !DILocation(line: 580, column: 7, scope: !7408)
!7416 = !DILocation(line: 580, column: 2, scope: !7408)
!7417 = !DILocation(line: 581, column: 1, scope: !7408)
!7418 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !244, file: !244, line: 730, type: !7370, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7419)
!7419 = !{!7420}
!7420 = !DILocalVariable(name: "dev", arg: 1, scope: !7418, file: !244, line: 730, type: !496)
!7421 = !DILocation(line: 0, scope: !7418)
!7422 = !DILocation(line: 732, column: 9, scope: !7418)
!7423 = !DILocation(line: 732, column: 2, scope: !7418)
!7424 = distinct !DISubprogram(name: "uart_register_input", scope: !541, file: !541, line: 560, type: !7425, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !484, retainedNodes: !7470)
!7425 = !DISubroutineType(types: !7426)
!7426 = !{null, !7427, !7427, !7467}
!7427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7428, size: 32)
!7428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !376, line: 2208, size: 128, elements: !7429)
!7429 = !{!7430}
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7428, file: !376, line: 2209, baseType: !7431, size: 128)
!7431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !376, line: 1709, size: 128, elements: !7432)
!7432 = !{!7433, !7446, !7448}
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7431, file: !376, line: 1710, baseType: !7434, size: 64)
!7434 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7435, line: 46, baseType: !7436)
!7435 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7435, line: 41, size: 64, elements: !7437)
!7437 = !{!7438, !7445}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7436, file: !7435, line: 42, baseType: !7439, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 32)
!7440 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7435, line: 39, baseType: !7441)
!7441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7435, line: 35, size: 32, elements: !7442)
!7442 = !{!7443}
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7441, file: !7435, line: 36, baseType: !7444, size: 32)
!7444 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7435, line: 32, baseType: !137)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7436, file: !7435, line: 43, baseType: !7439, size: 32, offset: 32)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7431, file: !376, line: 1711, baseType: !7447, offset: 64)
!7447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7431, file: !376, line: 1712, baseType: !7449, size: 64, offset: 64)
!7449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !7450)
!7450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !7451)
!7451 = !{!7452}
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7450, file: !318, line: 232, baseType: !7453, size: 64)
!7453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !7454)
!7454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !7455)
!7455 = !{!7456, !7462}
!7456 = !DIDerivedType(tag: DW_TAG_member, scope: !7454, file: !292, line: 38, baseType: !7457, size: 32)
!7457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7454, file: !292, line: 38, size: 32, elements: !7458)
!7458 = !{!7459, !7461}
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7457, file: !292, line: 39, baseType: !7460, size: 32)
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7454, size: 32)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7457, file: !292, line: 40, baseType: !7460, size: 32)
!7462 = !DIDerivedType(tag: DW_TAG_member, scope: !7454, file: !292, line: 42, baseType: !7463, size: 32, offset: 32)
!7463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7454, file: !292, line: 42, size: 32, elements: !7464)
!7464 = !{!7465, !7466}
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7463, file: !292, line: 43, baseType: !7460, size: 32)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7463, file: !292, line: 44, baseType: !7460, size: 32)
!7467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7468, size: 32)
!7468 = !DISubroutineType(types: !7469)
!7469 = !{!256, !1131, !256}
!7470 = !{!7471, !7472, !7473}
!7471 = !DILocalVariable(name: "avail", arg: 1, scope: !7424, file: !541, line: 560, type: !7427)
!7472 = !DILocalVariable(name: "lines", arg: 2, scope: !7424, file: !541, line: 560, type: !7427)
!7473 = !DILocalVariable(name: "completion", arg: 3, scope: !7424, file: !541, line: 561, type: !7467)
!7474 = !DILocation(line: 0, scope: !7424)
!7475 = !DILocation(line: 566, column: 1, scope: !7424)
!7476 = distinct !DISubprogram(name: "wdt_sam_setup", scope: !620, file: !620, line: 108, type: !570, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7477)
!7477 = !{!7478, !7479, !7480, !7482, !7484}
!7478 = !DILocalVariable(name: "dev", arg: 1, scope: !7476, file: !620, line: 108, type: !572)
!7479 = !DILocalVariable(name: "options", arg: 2, scope: !7476, file: !620, line: 108, type: !256)
!7480 = !DILocalVariable(name: "config", scope: !7476, file: !620, line: 110, type: !7481)
!7481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!7482 = !DILocalVariable(name: "wdt", scope: !7476, file: !620, line: 112, type: !7483)
!7483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !659)
!7484 = !DILocalVariable(name: "data", scope: !7476, file: !620, line: 113, type: !7485)
!7485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 32)
!7486 = !DILocation(line: 0, scope: !7476)
!7487 = !DILocation(line: 110, column: 46, scope: !7476)
!7488 = !DILocation(line: 112, column: 28, scope: !7476)
!7489 = !DILocation(line: 113, column: 39, scope: !7476)
!7490 = !DILocation(line: 115, column: 13, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7476, file: !620, line: 115, column: 6)
!7492 = !DILocation(line: 115, column: 6, scope: !7476)
!7493 = !DILocation(line: 123, column: 12, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7476, file: !620, line: 123, column: 6)
!7495 = !DILocation(line: 123, column: 6, scope: !7476)
!7496 = !DILocation(line: 127, column: 7, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7476, file: !620, line: 127, column: 6)
!7498 = !DILocation(line: 127, column: 15, scope: !7497)
!7499 = !DILocation(line: 127, column: 41, scope: !7497)
!7500 = !DILocation(line: 127, column: 6, scope: !7476)
!7501 = !DILocation(line: 128, column: 9, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7497, file: !620, line: 127, column: 68)
!7503 = !DILocation(line: 128, column: 14, scope: !7502)
!7504 = !DILocation(line: 129, column: 2, scope: !7502)
!7505 = !DILocation(line: 131, column: 15, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7476, file: !620, line: 131, column: 6)
!7507 = !DILocation(line: 131, column: 46, scope: !7506)
!7508 = !DILocation(line: 131, column: 6, scope: !7476)
!7509 = !DILocation(line: 133, column: 14, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7506, file: !620, line: 132, column: 35)
!7511 = !DILocation(line: 134, column: 2, scope: !7510)
!7512 = !DILocation(line: 136, column: 22, scope: !7476)
!7513 = !DILocation(line: 136, column: 7, scope: !7476)
!7514 = !DILocation(line: 136, column: 14, scope: !7476)
!7515 = !DILocation(line: 137, column: 17, scope: !7476)
!7516 = !DILocation(line: 139, column: 2, scope: !7476)
!7517 = !DILocation(line: 140, column: 1, scope: !7476)
!7518 = distinct !DISubprogram(name: "wdt_sam_disable", scope: !620, file: !620, line: 83, type: !590, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7519)
!7519 = !{!7520, !7521, !7522, !7523}
!7520 = !DILocalVariable(name: "dev", arg: 1, scope: !7518, file: !620, line: 83, type: !572)
!7521 = !DILocalVariable(name: "config", scope: !7518, file: !620, line: 85, type: !7481)
!7522 = !DILocalVariable(name: "wdt", scope: !7518, file: !620, line: 87, type: !7483)
!7523 = !DILocalVariable(name: "data", scope: !7518, file: !620, line: 88, type: !7485)
!7524 = !DILocation(line: 0, scope: !7518)
!7525 = !DILocation(line: 88, column: 39, scope: !7518)
!7526 = !DILocation(line: 93, column: 12, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7518, file: !620, line: 93, column: 6)
!7528 = !DILocation(line: 93, column: 6, scope: !7518)
!7529 = !DILocation(line: 85, column: 46, scope: !7518)
!7530 = !DILocation(line: 87, column: 28, scope: !7518)
!7531 = !DILocation(line: 102, column: 7, scope: !7518)
!7532 = !DILocation(line: 102, column: 14, scope: !7518)
!7533 = !DILocation(line: 103, column: 17, scope: !7518)
!7534 = !DILocation(line: 105, column: 2, scope: !7518)
!7535 = !DILocation(line: 106, column: 1, scope: !7518)
!7536 = distinct !DISubprogram(name: "wdt_sam_install_timeout", scope: !620, file: !620, line: 142, type: !595, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7537)
!7537 = !{!7538, !7539, !7540, !7541, !7542}
!7538 = !DILocalVariable(name: "dev", arg: 1, scope: !7536, file: !620, line: 142, type: !572)
!7539 = !DILocalVariable(name: "cfg", arg: 2, scope: !7536, file: !620, line: 143, type: !597)
!7540 = !DILocalVariable(name: "wdt_mode", scope: !7536, file: !620, line: 145, type: !137)
!7541 = !DILocalVariable(name: "timeout_value", scope: !7536, file: !620, line: 146, type: !103)
!7542 = !DILocalVariable(name: "data", scope: !7536, file: !620, line: 148, type: !7485)
!7543 = !DILocation(line: 0, scope: !7536)
!7544 = !DILocation(line: 148, column: 39, scope: !7536)
!7545 = !DILocation(line: 150, column: 12, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7536, file: !620, line: 150, column: 6)
!7547 = !DILocation(line: 150, column: 6, scope: !7536)
!7548 = !DILocation(line: 155, column: 18, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7536, file: !620, line: 155, column: 6)
!7550 = !DILocation(line: 155, column: 22, scope: !7549)
!7551 = !DILocation(line: 155, column: 6, scope: !7536)
!7552 = !DILocation(line: 164, column: 54, scope: !7536)
!7553 = !DILocation(line: 164, column: 18, scope: !7536)
!7554 = !DILocation(line: 167, column: 20, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7536, file: !620, line: 167, column: 6)
!7556 = !DILocation(line: 167, column: 6, scope: !7536)
!7557 = !DILocation(line: 171, column: 15, scope: !7536)
!7558 = !DILocation(line: 171, column: 2, scope: !7536)
!7559 = !DILocation(line: 179, column: 12, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !620, line: 179, column: 7)
!7561 = distinct !DILexicalBlock(scope: !7536, file: !620, line: 171, column: 22)
!7562 = !DILocation(line: 179, column: 7, scope: !7560)
!7563 = !DILocation(line: 179, column: 7, scope: !7561)
!7564 = !DILocation(line: 181, column: 10, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7560, file: !620, line: 179, column: 22)
!7566 = !DILocation(line: 181, column: 13, scope: !7565)
!7567 = !DILocation(line: 186, column: 3, scope: !7561)
!7568 = !DILocation(line: 195, column: 3, scope: !7561)
!7569 = !DILocation(line: 0, scope: !7561)
!7570 = !DILocation(line: 203, column: 8, scope: !7536)
!7571 = !DILocation(line: 204, column: 8, scope: !7536)
!7572 = !DILocation(line: 202, column: 24, scope: !7536)
!7573 = !DILocation(line: 203, column: 34, scope: !7536)
!7574 = !DILocation(line: 202, column: 8, scope: !7536)
!7575 = !DILocation(line: 202, column: 13, scope: !7536)
!7576 = !DILocation(line: 206, column: 22, scope: !7536)
!7577 = !DILocation(line: 208, column: 2, scope: !7536)
!7578 = !DILocation(line: 209, column: 1, scope: !7536)
!7579 = distinct !DISubprogram(name: "wdt_sam_feed", scope: !620, file: !620, line: 211, type: !615, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7580)
!7580 = !{!7581, !7582, !7583, !7584}
!7581 = !DILocalVariable(name: "dev", arg: 1, scope: !7579, file: !620, line: 211, type: !572)
!7582 = !DILocalVariable(name: "channel_id", arg: 2, scope: !7579, file: !620, line: 211, type: !103)
!7583 = !DILocalVariable(name: "config", scope: !7579, file: !620, line: 213, type: !7481)
!7584 = !DILocalVariable(name: "wdt", scope: !7579, file: !620, line: 220, type: !7483)
!7585 = !DILocation(line: 0, scope: !7579)
!7586 = !DILocation(line: 213, column: 46, scope: !7579)
!7587 = !DILocation(line: 220, column: 28, scope: !7579)
!7588 = !DILocation(line: 222, column: 7, scope: !7579)
!7589 = !DILocation(line: 222, column: 14, scope: !7579)
!7590 = !DILocation(line: 224, column: 2, scope: !7579)
!7591 = distinct !DISubprogram(name: "wdt_sam_convert_timeout", scope: !620, file: !620, line: 67, type: !7592, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7594)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!103, !137, !137}
!7594 = !{!7595, !7596, !7597, !7598}
!7595 = !DILocalVariable(name: "timeout", arg: 1, scope: !7591, file: !620, line: 67, type: !137)
!7596 = !DILocalVariable(name: "sclk", arg: 2, scope: !7591, file: !620, line: 67, type: !137)
!7597 = !DILocalVariable(name: "max", scope: !7591, file: !620, line: 69, type: !137)
!7598 = !DILocalVariable(name: "min", scope: !7591, file: !620, line: 69, type: !137)
!7599 = !DILocation(line: 0, scope: !7591)
!7600 = !DILocation(line: 71, column: 20, scope: !7591)
!7601 = !DILocation(line: 72, column: 35, scope: !7591)
!7602 = !DILocation(line: 74, column: 15, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7591, file: !620, line: 74, column: 6)
!7604 = !DILocation(line: 74, column: 22, scope: !7603)
!7605 = !DILocation(line: 80, column: 9, scope: !7591)
!7606 = !DILocation(line: 80, column: 2, scope: !7591)
!7607 = !DILocation(line: 81, column: 1, scope: !7591)
!7608 = distinct !DISubprogram(name: "wdt_sam_isr", scope: !620, file: !620, line: 47, type: !7609, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7611)
!7609 = !DISubroutineType(types: !7610)
!7610 = !{null, !572}
!7611 = !{!7612, !7613, !7614, !7615, !7616}
!7612 = !DILocalVariable(name: "dev", arg: 1, scope: !7608, file: !620, line: 47, type: !572)
!7613 = !DILocalVariable(name: "config", scope: !7608, file: !620, line: 49, type: !7481)
!7614 = !DILocalVariable(name: "wdt_sr", scope: !7608, file: !620, line: 50, type: !137)
!7615 = !DILocalVariable(name: "wdt", scope: !7608, file: !620, line: 51, type: !7483)
!7616 = !DILocalVariable(name: "data", scope: !7608, file: !620, line: 52, type: !7485)
!7617 = !DILocation(line: 0, scope: !7608)
!7618 = !DILocation(line: 49, column: 46, scope: !7608)
!7619 = !DILocation(line: 51, column: 28, scope: !7608)
!7620 = !DILocation(line: 52, column: 39, scope: !7608)
!7621 = !DILocation(line: 55, column: 16, scope: !7608)
!7622 = !DILocation(line: 57, column: 8, scope: !7608)
!7623 = !DILocation(line: 57, column: 2, scope: !7608)
!7624 = !DILocation(line: 58, column: 1, scope: !7608)
!7625 = distinct !DISubprogram(name: "wdt_sam_init", scope: !620, file: !620, line: 246, type: !590, scopeLine: 247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !559, retainedNodes: !7626)
!7626 = !{!7627}
!7627 = !DILocalVariable(name: "dev", arg: 1, scope: !7625, file: !620, line: 246, type: !572)
!7628 = !DILocation(line: 0, scope: !7625)
!7629 = !DILocation(line: 249, column: 2, scope: !7625)
!7630 = !DILocation(line: 252, column: 2, scope: !7625)
!7631 = !DILocation(line: 253, column: 2, scope: !7625)
!7632 = !DILocation(line: 240, column: 2, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !645, file: !620, line: 240, column: 2)
!7634 = !DILocation(line: 243, column: 2, scope: !645)
!7635 = !DILocation(line: 244, column: 1, scope: !645)
!7636 = distinct !DISubprogram(name: "uart_sam_poll_in", scope: !757, file: !757, line: 47, type: !711, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7637)
!7637 = !{!7638, !7639, !7640, !7643}
!7638 = !DILocalVariable(name: "dev", arg: 1, scope: !7636, file: !757, line: 47, type: !713)
!7639 = !DILocalVariable(name: "c", arg: 2, scope: !7636, file: !757, line: 47, type: !511)
!7640 = !DILocalVariable(name: "cfg", scope: !7636, file: !757, line: 49, type: !7641)
!7641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7642)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 32)
!7643 = !DILocalVariable(name: "uart", scope: !7636, file: !757, line: 51, type: !7644)
!7644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!7645 = !DILocation(line: 0, scope: !7636)
!7646 = !DILocation(line: 49, column: 50, scope: !7636)
!7647 = !DILocation(line: 51, column: 27, scope: !7636)
!7648 = !DILocation(line: 53, column: 14, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7636, file: !757, line: 53, column: 6)
!7650 = !DILocation(line: 53, column: 22, scope: !7649)
!7651 = !DILocation(line: 53, column: 6, scope: !7636)
!7652 = !DILocation(line: 58, column: 28, scope: !7636)
!7653 = !DILocation(line: 58, column: 7, scope: !7636)
!7654 = !DILocation(line: 58, column: 5, scope: !7636)
!7655 = !DILocation(line: 60, column: 2, scope: !7636)
!7656 = !DILocation(line: 61, column: 1, scope: !7636)
!7657 = distinct !DISubprogram(name: "uart_sam_poll_out", scope: !757, file: !757, line: 63, type: !730, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7658)
!7658 = !{!7659, !7660, !7661, !7662}
!7659 = !DILocalVariable(name: "dev", arg: 1, scope: !7657, file: !757, line: 63, type: !713)
!7660 = !DILocalVariable(name: "c", arg: 2, scope: !7657, file: !757, line: 63, type: !257)
!7661 = !DILocalVariable(name: "cfg", scope: !7657, file: !757, line: 65, type: !7641)
!7662 = !DILocalVariable(name: "uart", scope: !7657, file: !757, line: 67, type: !7644)
!7663 = !DILocation(line: 0, scope: !7657)
!7664 = !DILocation(line: 65, column: 50, scope: !7657)
!7665 = !DILocation(line: 67, column: 27, scope: !7657)
!7666 = !DILocation(line: 70, column: 2, scope: !7657)
!7667 = !DILocation(line: 70, column: 17, scope: !7657)
!7668 = !DILocation(line: 70, column: 25, scope: !7657)
!7669 = !DILocation(line: 70, column: 9, scope: !7657)
!7670 = distinct !{!7670, !7666, !7671}
!7671 = !DILocation(line: 71, column: 2, scope: !7657)
!7672 = !DILocation(line: 74, column: 19, scope: !7657)
!7673 = !DILocation(line: 74, column: 8, scope: !7657)
!7674 = !DILocation(line: 74, column: 17, scope: !7657)
!7675 = !DILocation(line: 75, column: 1, scope: !7657)
!7676 = distinct !DISubprogram(name: "uart_sam_err_check", scope: !757, file: !757, line: 77, type: !734, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7677)
!7677 = !{!7678, !7679, !7680, !7684}
!7678 = !DILocalVariable(name: "dev", arg: 1, scope: !7676, file: !757, line: 77, type: !713)
!7679 = !DILocalVariable(name: "cfg", scope: !7676, file: !757, line: 79, type: !7641)
!7680 = !DILocalVariable(name: "uart", scope: !7676, file: !757, line: 81, type: !7681)
!7681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7682)
!7682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7683, size: 32)
!7683 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !809)
!7684 = !DILocalVariable(name: "errors", scope: !7676, file: !757, line: 82, type: !103)
!7685 = !DILocation(line: 0, scope: !7676)
!7686 = !DILocation(line: 79, column: 50, scope: !7676)
!7687 = !DILocation(line: 81, column: 36, scope: !7676)
!7688 = !DILocation(line: 84, column: 12, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7676, file: !757, line: 84, column: 6)
!7690 = !DILocation(line: 84, column: 6, scope: !7676)
!7691 = !DILocation(line: 88, column: 12, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7676, file: !757, line: 88, column: 6)
!7693 = !DILocation(line: 88, column: 6, scope: !7676)
!7694 = !DILocation(line: 92, column: 12, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7676, file: !757, line: 92, column: 6)
!7696 = !DILocation(line: 92, column: 6, scope: !7676)
!7697 = !DILocation(line: 96, column: 2, scope: !7676)
!7698 = distinct !DISubprogram(name: "uart_sam_configure", scope: !757, file: !757, line: 164, type: !738, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7699)
!7699 = !{!7700, !7701, !7702, !7703, !7704}
!7700 = !DILocalVariable(name: "dev", arg: 1, scope: !7698, file: !757, line: 164, type: !713)
!7701 = !DILocalVariable(name: "cfg", arg: 2, scope: !7698, file: !757, line: 165, type: !740)
!7702 = !DILocalVariable(name: "retval", scope: !7698, file: !757, line: 167, type: !103)
!7703 = !DILocalVariable(name: "config", scope: !7698, file: !757, line: 169, type: !7641)
!7704 = !DILocalVariable(name: "uart", scope: !7698, file: !757, line: 171, type: !7681)
!7705 = !DILocation(line: 0, scope: !7698)
!7706 = !DILocation(line: 169, column: 53, scope: !7698)
!7707 = !DILocation(line: 171, column: 39, scope: !7698)
!7708 = !DILocation(line: 174, column: 11, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7698, file: !757, line: 174, column: 6)
!7710 = !DILocation(line: 174, column: 21, scope: !7709)
!7711 = !DILocation(line: 174, column: 45, scope: !7709)
!7712 = !DILocation(line: 175, column: 8, scope: !7709)
!7713 = !DILocation(line: 175, column: 18, scope: !7709)
!7714 = !DILocation(line: 175, column: 42, scope: !7709)
!7715 = !DILocation(line: 176, column: 8, scope: !7709)
!7716 = !DILocation(line: 176, column: 18, scope: !7709)
!7717 = !DILocation(line: 174, column: 6, scope: !7698)
!7718 = !DILocation(line: 181, column: 8, scope: !7698)
!7719 = !DILocation(line: 181, column: 16, scope: !7698)
!7720 = !DILocation(line: 189, column: 40, scope: !7698)
!7721 = !DILocation(line: 189, column: 11, scope: !7698)
!7722 = !DILocation(line: 188, column: 8, scope: !7698)
!7723 = !DILocation(line: 188, column: 16, scope: !7698)
!7724 = !DILocation(line: 192, column: 43, scope: !7698)
!7725 = !DILocation(line: 192, column: 11, scope: !7698)
!7726 = !DILocation(line: 193, column: 13, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7698, file: !757, line: 193, column: 6)
!7728 = !DILocation(line: 193, column: 6, scope: !7698)
!7729 = !DILocation(line: 198, column: 16, scope: !7698)
!7730 = !DILocation(line: 200, column: 2, scope: !7698)
!7731 = !DILocation(line: 201, column: 1, scope: !7698)
!7732 = distinct !DISubprogram(name: "uart_sam_config_get", scope: !757, file: !757, line: 203, type: !751, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7733)
!7733 = !{!7734, !7735, !7736}
!7734 = !DILocalVariable(name: "dev", arg: 1, scope: !7732, file: !757, line: 203, type: !713)
!7735 = !DILocalVariable(name: "cfg", arg: 2, scope: !7732, file: !757, line: 204, type: !753)
!7736 = !DILocalVariable(name: "dev_data", scope: !7732, file: !757, line: 206, type: !7737)
!7737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7738)
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!7739 = !DILocation(line: 0, scope: !7732)
!7740 = !DILocation(line: 206, column: 50, scope: !7732)
!7741 = !DILocation(line: 208, column: 28, scope: !7732)
!7742 = !DILocation(line: 208, column: 7, scope: !7732)
!7743 = !DILocation(line: 208, column: 16, scope: !7732)
!7744 = !DILocation(line: 209, column: 16, scope: !7732)
!7745 = !DILocation(line: 209, column: 7, scope: !7732)
!7746 = !DILocation(line: 209, column: 14, scope: !7732)
!7747 = !DILocation(line: 211, column: 7, scope: !7732)
!7748 = !DILocation(line: 211, column: 17, scope: !7732)
!7749 = !DILocation(line: 212, column: 7, scope: !7732)
!7750 = !DILocation(line: 212, column: 17, scope: !7732)
!7751 = !DILocation(line: 213, column: 7, scope: !7732)
!7752 = !DILocation(line: 213, column: 17, scope: !7732)
!7753 = !DILocation(line: 215, column: 2, scope: !7732)
!7754 = distinct !DISubprogram(name: "uart_sam_get_parity", scope: !757, file: !757, line: 143, type: !7755, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7757)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!256, !713}
!7757 = !{!7758, !7759, !7760}
!7758 = !DILocalVariable(name: "dev", arg: 1, scope: !7754, file: !757, line: 143, type: !713)
!7759 = !DILocalVariable(name: "cfg", scope: !7754, file: !757, line: 145, type: !7641)
!7760 = !DILocalVariable(name: "uart", scope: !7754, file: !757, line: 147, type: !7681)
!7761 = !DILocation(line: 0, scope: !7754)
!7762 = !DILocation(line: 145, column: 50, scope: !7754)
!7763 = !DILocation(line: 147, column: 36, scope: !7754)
!7764 = !DILocation(line: 149, column: 16, scope: !7754)
!7765 = !DILocation(line: 149, column: 2, scope: !7754)
!7766 = !DILocation(line: 162, column: 1, scope: !7754)
!7767 = distinct !DISubprogram(name: "uart_sam_cfg2sam_parity", scope: !757, file: !757, line: 126, type: !7768, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7770)
!7768 = !DISubroutineType(types: !7769)
!7769 = !{!137, !256}
!7770 = !{!7771}
!7771 = !DILocalVariable(name: "parity", arg: 1, scope: !7767, file: !757, line: 126, type: !256)
!7772 = !DILocation(line: 0, scope: !7767)
!7773 = !DILocation(line: 128, column: 2, scope: !7767)
!7774 = !DILocation(line: 0, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7767, file: !757, line: 128, column: 18)
!7776 = !DILocation(line: 141, column: 1, scope: !7767)
!7777 = distinct !DISubprogram(name: "uart_sam_baudrate_set", scope: !757, file: !757, line: 99, type: !7778, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7780)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!103, !713, !137}
!7780 = !{!7781, !7782, !7783, !7784, !7785, !7786}
!7781 = !DILocalVariable(name: "dev", arg: 1, scope: !7777, file: !757, line: 99, type: !713)
!7782 = !DILocalVariable(name: "baudrate", arg: 2, scope: !7777, file: !757, line: 99, type: !137)
!7783 = !DILocalVariable(name: "dev_data", scope: !7777, file: !757, line: 101, type: !7737)
!7784 = !DILocalVariable(name: "cfg", scope: !7777, file: !757, line: 103, type: !7641)
!7785 = !DILocalVariable(name: "uart", scope: !7777, file: !757, line: 105, type: !7681)
!7786 = !DILocalVariable(name: "divisor", scope: !7777, file: !757, line: 107, type: !137)
!7787 = !DILocation(line: 0, scope: !7777)
!7788 = !DILocation(line: 116, column: 14, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7777, file: !757, line: 116, column: 6)
!7790 = !DILocation(line: 116, column: 6, scope: !7777)
!7791 = !DILocation(line: 114, column: 44, scope: !7777)
!7792 = !DILocation(line: 103, column: 50, scope: !7777)
!7793 = !DILocation(line: 105, column: 36, scope: !7777)
!7794 = !DILocation(line: 101, column: 50, scope: !7777)
!7795 = !DILocation(line: 120, column: 8, scope: !7777)
!7796 = !DILocation(line: 120, column: 18, scope: !7777)
!7797 = !DILocation(line: 121, column: 12, scope: !7777)
!7798 = !DILocation(line: 121, column: 22, scope: !7777)
!7799 = !DILocation(line: 123, column: 2, scope: !7777)
!7800 = !DILocation(line: 124, column: 1, scope: !7777)
!7801 = distinct !DISubprogram(name: "uart_sam_init", scope: !757, file: !757, line: 383, type: !734, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7802)
!7802 = !{!7803, !7804, !7805, !7806, !7807, !7808}
!7803 = !DILocalVariable(name: "dev", arg: 1, scope: !7801, file: !757, line: 383, type: !713)
!7804 = !DILocalVariable(name: "retval", scope: !7801, file: !757, line: 385, type: !103)
!7805 = !DILocalVariable(name: "cfg", scope: !7801, file: !757, line: 387, type: !7641)
!7806 = !DILocalVariable(name: "dev_data", scope: !7801, file: !757, line: 389, type: !7737)
!7807 = !DILocalVariable(name: "uart", scope: !7801, file: !757, line: 391, type: !7644)
!7808 = !DILocalVariable(name: "uart_config", scope: !7801, file: !757, line: 409, type: !742)
!7809 = !DILocation(line: 0, scope: !7801)
!7810 = !DILocation(line: 387, column: 50, scope: !7801)
!7811 = !DILocation(line: 389, column: 50, scope: !7801)
!7812 = !DILocation(line: 391, column: 27, scope: !7801)
!7813 = !DILocation(line: 394, column: 33, scope: !7801)
!7814 = !DILocation(line: 394, column: 2, scope: !7801)
!7815 = !DILocation(line: 397, column: 36, scope: !7801)
!7816 = !DILocation(line: 397, column: 11, scope: !7801)
!7817 = !DILocation(line: 398, column: 13, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7801, file: !757, line: 398, column: 6)
!7819 = !DILocation(line: 398, column: 6, scope: !7801)
!7820 = !DILocation(line: 403, column: 8, scope: !7801)
!7821 = !DILocation(line: 403, column: 17, scope: !7801)
!7822 = !DILocation(line: 409, column: 2, scope: !7801)
!7823 = !DILocation(line: 409, column: 21, scope: !7801)
!7824 = !DILocation(line: 409, column: 35, scope: !7801)
!7825 = !DILocation(line: 410, column: 25, scope: !7801)
!7826 = !DILocation(line: 416, column: 9, scope: !7801)
!7827 = !DILocation(line: 417, column: 1, scope: !7801)
!7828 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !783, file: !783, line: 342, type: !7829, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7831)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{!103, !838, !256}
!7831 = !{!7832, !7833, !7834, !7835}
!7832 = !DILocalVariable(name: "config", arg: 1, scope: !7828, file: !783, line: 342, type: !838)
!7833 = !DILocalVariable(name: "id", arg: 2, scope: !7828, file: !783, line: 343, type: !256)
!7834 = !DILocalVariable(name: "ret", scope: !7828, file: !783, line: 345, type: !103)
!7835 = !DILocalVariable(name: "state", scope: !7828, file: !783, line: 346, type: !786)
!7836 = !DILocation(line: 0, scope: !7828)
!7837 = !DILocation(line: 346, column: 2, scope: !7828)
!7838 = !DILocation(line: 348, column: 8, scope: !7828)
!7839 = !DILocation(line: 349, column: 10, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7828, file: !783, line: 349, column: 6)
!7841 = !DILocation(line: 349, column: 6, scope: !7828)
!7842 = !DILocation(line: 353, column: 44, scope: !7828)
!7843 = !DILocation(line: 353, column: 9, scope: !7828)
!7844 = !DILocation(line: 353, column: 2, scope: !7828)
!7845 = !DILocation(line: 354, column: 1, scope: !7828)
!7846 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !783, file: !783, line: 316, type: !7847, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !669, retainedNodes: !7849)
!7847 = !DISubroutineType(types: !7848)
!7848 = !{!103, !838, !786}
!7849 = !{!7850, !7851, !7852}
!7850 = !DILocalVariable(name: "config", arg: 1, scope: !7846, file: !783, line: 317, type: !838)
!7851 = !DILocalVariable(name: "state", arg: 2, scope: !7846, file: !783, line: 318, type: !786)
!7852 = !DILocalVariable(name: "reg", scope: !7846, file: !783, line: 320, type: !22)
!7853 = !DILocation(line: 0, scope: !7846)
!7854 = !DILocation(line: 329, column: 39, scope: !7846)
!7855 = !DILocation(line: 329, column: 52, scope: !7846)
!7856 = !DILocation(line: 329, column: 9, scope: !7846)
!7857 = !DILocation(line: 329, column: 2, scope: !7846)
!7858 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !975, file: !975, line: 270, type: !981, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7859)
!7859 = !{!7860}
!7860 = !DILocalVariable(name: "dev", arg: 1, scope: !7858, file: !975, line: 270, type: !983)
!7861 = !DILocation(line: 0, scope: !7858)
!7862 = !DILocation(line: 274, column: 2, scope: !7858)
!7863 = !DILocation(line: 275, column: 12, scope: !7858)
!7864 = !DILocation(line: 276, column: 15, scope: !7858)
!7865 = !DILocation(line: 277, column: 16, scope: !7858)
!7866 = !DILocation(line: 278, column: 15, scope: !7858)
!7867 = !DILocation(line: 279, column: 16, scope: !7858)
!7868 = !DILocation(line: 282, column: 2, scope: !7858)
!7869 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !419, file: !419, line: 1638, type: !5839, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7870)
!7870 = !{!7871, !7872}
!7871 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7869, file: !419, line: 1638, type: !1751)
!7872 = !DILocalVariable(name: "priority", arg: 2, scope: !7869, file: !419, line: 1638, type: !137)
!7873 = !DILocation(line: 0, scope: !7869)
!7874 = !DILocation(line: 1646, column: 46, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !419, line: 1645, column: 3)
!7876 = distinct !DILexicalBlock(scope: !7869, file: !419, line: 1640, column: 7)
!7877 = !DILocation(line: 1648, column: 1, scope: !7869)
!7878 = distinct !DISubprogram(name: "sys_clock_isr", scope: !975, file: !975, line: 118, type: !5742, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7879)
!7879 = !{!7880, !7881}
!7880 = !DILocalVariable(name: "arg", arg: 1, scope: !7878, file: !975, line: 118, type: !102)
!7881 = !DILocalVariable(name: "dticks", scope: !7878, file: !975, line: 121, type: !137)
!7882 = !DILocation(line: 0, scope: !7878)
!7883 = !DILocation(line: 124, column: 2, scope: !7878)
!7884 = !DILocation(line: 129, column: 17, scope: !7878)
!7885 = !DILocation(line: 129, column: 14, scope: !7878)
!7886 = !DILocation(line: 130, column: 15, scope: !7878)
!7887 = !DILocation(line: 145, column: 27, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7889, file: !975, line: 132, column: 16)
!7889 = distinct !DILexicalBlock(scope: !7878, file: !975, line: 132, column: 6)
!7890 = !DILocation(line: 145, column: 25, scope: !7888)
!7891 = !DILocation(line: 145, column: 45, scope: !7888)
!7892 = !DILocation(line: 146, column: 30, scope: !7888)
!7893 = !DILocation(line: 146, column: 20, scope: !7888)
!7894 = !DILocation(line: 147, column: 3, scope: !7888)
!7895 = !DILocation(line: 151, column: 2, scope: !7878)
!7896 = !DILocation(line: 152, column: 1, scope: !7878)
!7897 = distinct !DISubprogram(name: "elapsed", scope: !975, file: !975, line: 85, type: !135, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7898)
!7898 = !{!7899, !7900, !7901}
!7899 = !DILocalVariable(name: "val1", scope: !7897, file: !975, line: 87, type: !137)
!7900 = !DILocalVariable(name: "ctrl", scope: !7897, file: !975, line: 88, type: !137)
!7901 = !DILocalVariable(name: "val2", scope: !7897, file: !975, line: 89, type: !137)
!7902 = !DILocation(line: 87, column: 27, scope: !7897)
!7903 = !DILocation(line: 0, scope: !7897)
!7904 = !DILocation(line: 88, column: 27, scope: !7897)
!7905 = !DILocation(line: 89, column: 27, scope: !7897)
!7906 = !DILocation(line: 105, column: 12, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7897, file: !975, line: 105, column: 6)
!7908 = !DILocation(line: 106, column: 6, scope: !7907)
!7909 = !DILocation(line: 107, column: 16, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7907, file: !975, line: 106, column: 24)
!7911 = !DILocation(line: 111, column: 18, scope: !7910)
!7912 = !DILocation(line: 112, column: 2, scope: !7910)
!7913 = !DILocation(line: 114, column: 20, scope: !7897)
!7914 = !DILocation(line: 114, column: 30, scope: !7897)
!7915 = !DILocation(line: 114, column: 28, scope: !7897)
!7916 = !DILocation(line: 114, column: 2, scope: !7897)
!7917 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !975, file: !975, line: 154, type: !7918, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7920)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{null, !651, !259}
!7920 = !{!7921, !7922, !7923, !7924, !7925, !7926, !7927, !7932, !7933}
!7921 = !DILocalVariable(name: "ticks", arg: 1, scope: !7917, file: !975, line: 154, type: !651)
!7922 = !DILocalVariable(name: "idle", arg: 2, scope: !7917, file: !975, line: 154, type: !259)
!7923 = !DILocalVariable(name: "delay", scope: !7917, file: !975, line: 169, type: !137)
!7924 = !DILocalVariable(name: "val1", scope: !7917, file: !975, line: 170, type: !137)
!7925 = !DILocalVariable(name: "val2", scope: !7917, file: !975, line: 170, type: !137)
!7926 = !DILocalVariable(name: "last_load_", scope: !7917, file: !975, line: 171, type: !137)
!7927 = !DILocalVariable(name: "key", scope: !7917, file: !975, line: 176, type: !7928)
!7928 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !387, line: 106, baseType: !7929)
!7929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !387, line: 32, size: 32, elements: !7930)
!7930 = !{!7931}
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7929, file: !387, line: 33, baseType: !103, size: 32)
!7932 = !DILocalVariable(name: "pending", scope: !7917, file: !975, line: 178, type: !137)
!7933 = !DILocalVariable(name: "unannounced", scope: !7917, file: !975, line: 185, type: !137)
!7934 = !DILocation(line: 0, scope: !7917)
!7935 = !DILocation(line: 162, column: 49, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7917, file: !975, line: 162, column: 6)
!7937 = !DILocation(line: 163, column: 17, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7936, file: !975, line: 162, column: 78)
!7939 = !DILocation(line: 164, column: 13, scope: !7938)
!7940 = !DILocation(line: 165, column: 3, scope: !7938)
!7941 = !DILocation(line: 171, column: 24, scope: !7917)
!7942 = !DILocation(line: 173, column: 10, scope: !7917)
!7943 = !DILocation(line: 174, column: 10, scope: !7917)
!7944 = !DILocalVariable(name: "l", arg: 1, scope: !7945, file: !387, line: 136, type: !7948)
!7945 = distinct !DISubprogram(name: "k_spin_lock", scope: !387, file: !387, line: 136, type: !7946, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7949)
!7946 = !DISubroutineType(types: !7947)
!7947 = !{!7928, !7948}
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!7949 = !{!7944, !7950}
!7950 = !DILocalVariable(name: "k", scope: !7945, file: !387, line: 139, type: !7928)
!7951 = !DILocation(line: 0, scope: !7945, inlinedAt: !7952)
!7952 = distinct !DILocation(line: 176, column: 25, scope: !7917)
!7953 = !DILocation(line: 55, column: 2, scope: !7954, inlinedAt: !7958)
!7954 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5308, file: !5308, line: 42, type: !5309, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7955)
!7955 = !{!7956, !7957}
!7956 = !DILocalVariable(name: "key", scope: !7954, file: !5308, line: 44, type: !32)
!7957 = !DILocalVariable(name: "tmp", scope: !7954, file: !5308, line: 53, type: !32)
!7958 = distinct !DILocation(line: 145, column: 10, scope: !7945, inlinedAt: !7952)
!7959 = !{i64 1283588}
!7960 = !DILocation(line: 0, scope: !7954, inlinedAt: !7958)
!7961 = !DILocation(line: 178, column: 21, scope: !7917)
!7962 = !DILocation(line: 180, column: 18, scope: !7917)
!7963 = !DILocation(line: 182, column: 14, scope: !7917)
!7964 = !DILocation(line: 183, column: 15, scope: !7917)
!7965 = !DILocation(line: 185, column: 39, scope: !7917)
!7966 = !DILocation(line: 185, column: 37, scope: !7917)
!7967 = !DILocation(line: 187, column: 27, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7917, file: !975, line: 187, column: 6)
!7969 = !DILocation(line: 187, column: 6, scope: !7917)
!7970 = !DILocation(line: 202, column: 27, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7968, file: !975, line: 195, column: 9)
!7972 = !DILocation(line: 202, column: 48, scope: !7971)
!7973 = !DILocation(line: 203, column: 9, scope: !7971)
!7974 = !DILocation(line: 204, column: 11, scope: !7971)
!7975 = !DILocation(line: 205, column: 13, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7971, file: !975, line: 205, column: 7)
!7977 = !DILocation(line: 205, column: 7, scope: !7971)
!7978 = !DILocation(line: 0, scope: !7968)
!7979 = !DILocation(line: 212, column: 18, scope: !7917)
!7980 = !DILocation(line: 214, column: 28, scope: !7917)
!7981 = !DILocation(line: 214, column: 16, scope: !7917)
!7982 = !DILocation(line: 215, column: 15, scope: !7917)
!7983 = !DILocation(line: 227, column: 11, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7917, file: !975, line: 227, column: 6)
!7985 = !DILocation(line: 227, column: 6, scope: !7917)
!7986 = !DILocation(line: 228, column: 15, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7984, file: !975, line: 227, column: 19)
!7988 = !DILocation(line: 228, column: 38, scope: !7987)
!7989 = !DILocation(line: 228, column: 24, scope: !7987)
!7990 = !DILocation(line: 229, column: 2, scope: !7987)
!7991 = !DILocation(line: 230, column: 24, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7984, file: !975, line: 229, column: 9)
!7993 = !DILocation(line: 230, column: 15, scope: !7992)
!7994 = !DILocation(line: 0, scope: !7984)
!7995 = !DILocalVariable(name: "key", arg: 2, scope: !7996, file: !387, line: 190, type: !7928)
!7996 = distinct !DISubprogram(name: "k_spin_unlock", scope: !387, file: !387, line: 189, type: !7997, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !7999)
!7997 = !DISubroutineType(types: !7998)
!7998 = !{null, !7948, !7928}
!7999 = !{!8000, !7995}
!8000 = !DILocalVariable(name: "l", arg: 1, scope: !7996, file: !387, line: 189, type: !7948)
!8001 = !DILocation(line: 0, scope: !7996, inlinedAt: !8002)
!8002 = distinct !DILocation(line: 232, column: 2, scope: !7917)
!8003 = !DILocalVariable(name: "key", arg: 1, scope: !8004, file: !5308, line: 84, type: !32)
!8004 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8005)
!8005 = !{!8003}
!8006 = !DILocation(line: 0, scope: !8004, inlinedAt: !8007)
!8007 = distinct !DILocation(line: 215, column: 2, scope: !7996, inlinedAt: !8002)
!8008 = !DILocation(line: 95, column: 2, scope: !8004, inlinedAt: !8007)
!8009 = !{i64 1284405}
!8010 = !DILocation(line: 234, column: 1, scope: !7917)
!8011 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !975, file: !975, line: 236, type: !135, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8012)
!8012 = !{!8013, !8014}
!8013 = !DILocalVariable(name: "key", scope: !8011, file: !975, line: 242, type: !7928)
!8014 = !DILocalVariable(name: "cyc", scope: !8011, file: !975, line: 243, type: !137)
!8015 = !DILocation(line: 0, scope: !7945, inlinedAt: !8016)
!8016 = distinct !DILocation(line: 242, column: 25, scope: !8011)
!8017 = !DILocation(line: 55, column: 2, scope: !7954, inlinedAt: !8018)
!8018 = distinct !DILocation(line: 145, column: 10, scope: !7945, inlinedAt: !8016)
!8019 = !DILocation(line: 0, scope: !7954, inlinedAt: !8018)
!8020 = !DILocation(line: 0, scope: !8011)
!8021 = !DILocation(line: 243, column: 17, scope: !8011)
!8022 = !DILocation(line: 243, column: 29, scope: !8011)
!8023 = !DILocation(line: 243, column: 27, scope: !8011)
!8024 = !DILocation(line: 243, column: 43, scope: !8011)
!8025 = !DILocation(line: 243, column: 41, scope: !8011)
!8026 = !DILocation(line: 0, scope: !7996, inlinedAt: !8027)
!8027 = distinct !DILocation(line: 245, column: 2, scope: !8011)
!8028 = !DILocation(line: 0, scope: !8004, inlinedAt: !8029)
!8029 = distinct !DILocation(line: 215, column: 2, scope: !7996, inlinedAt: !8027)
!8030 = !DILocation(line: 95, column: 2, scope: !8004, inlinedAt: !8029)
!8031 = !DILocation(line: 246, column: 13, scope: !8011)
!8032 = !DILocation(line: 246, column: 2, scope: !8011)
!8033 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !975, file: !975, line: 249, type: !135, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8034)
!8034 = !{!8035, !8036}
!8035 = !DILocalVariable(name: "key", scope: !8033, file: !975, line: 251, type: !7928)
!8036 = !DILocalVariable(name: "ret", scope: !8033, file: !975, line: 252, type: !137)
!8037 = !DILocation(line: 0, scope: !7945, inlinedAt: !8038)
!8038 = distinct !DILocation(line: 251, column: 25, scope: !8033)
!8039 = !DILocation(line: 55, column: 2, scope: !7954, inlinedAt: !8040)
!8040 = distinct !DILocation(line: 145, column: 10, scope: !7945, inlinedAt: !8038)
!8041 = !DILocation(line: 0, scope: !7954, inlinedAt: !8040)
!8042 = !DILocation(line: 0, scope: !8033)
!8043 = !DILocation(line: 252, column: 17, scope: !8033)
!8044 = !DILocation(line: 252, column: 29, scope: !8033)
!8045 = !DILocation(line: 252, column: 27, scope: !8033)
!8046 = !DILocation(line: 0, scope: !7996, inlinedAt: !8047)
!8047 = distinct !DILocation(line: 254, column: 2, scope: !8033)
!8048 = !DILocation(line: 0, scope: !8004, inlinedAt: !8049)
!8049 = distinct !DILocation(line: 215, column: 2, scope: !7996, inlinedAt: !8047)
!8050 = !DILocation(line: 95, column: 2, scope: !8004, inlinedAt: !8049)
!8051 = !DILocation(line: 255, column: 2, scope: !8033)
!8052 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !975, file: !975, line: 258, type: !646, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !162)
!8053 = !DILocation(line: 260, column: 6, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8052, file: !975, line: 260, column: 6)
!8055 = !DILocation(line: 260, column: 16, scope: !8054)
!8056 = !DILocation(line: 260, column: 6, scope: !8052)
!8057 = !DILocation(line: 261, column: 17, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8054, file: !975, line: 260, column: 34)
!8059 = !DILocation(line: 262, column: 2, scope: !8058)
!8060 = !DILocation(line: 263, column: 1, scope: !8052)
!8061 = distinct !DISubprogram(name: "sys_clock_disable", scope: !975, file: !975, line: 265, type: !646, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !162)
!8062 = !DILocation(line: 267, column: 16, scope: !8061)
!8063 = !DILocation(line: 268, column: 1, scope: !8061)
!8064 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8065, file: !8065, line: 9, type: !8066, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !8082)
!8065 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!103, !8068, !256, !8081}
!8068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8069, size: 32)
!8069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8070)
!8070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !783, line: 60, size: 64, elements: !8071)
!8071 = !{!8072, !8080}
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8070, file: !783, line: 69, baseType: !8073, size: 32)
!8073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8074, size: 32)
!8074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8075)
!8075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !783, line: 50, size: 64, elements: !8076)
!8076 = !{!8077, !8078, !8079}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8075, file: !783, line: 52, baseType: !791, size: 32)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8075, file: !783, line: 54, baseType: !256, size: 8, offset: 32)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8075, file: !783, line: 56, baseType: !256, size: 8, offset: 40)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8070, file: !783, line: 71, baseType: !256, size: 8, offset: 32)
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8073, size: 32)
!8082 = !{!8083, !8084, !8085}
!8083 = !DILocalVariable(name: "config", arg: 1, scope: !8064, file: !8065, line: 9, type: !8068)
!8084 = !DILocalVariable(name: "id", arg: 2, scope: !8064, file: !8065, line: 9, type: !256)
!8085 = !DILocalVariable(name: "state", arg: 3, scope: !8064, file: !8065, line: 10, type: !8081)
!8086 = !DILocation(line: 0, scope: !8064)
!8087 = !DILocation(line: 12, column: 20, scope: !8064)
!8088 = !DILocation(line: 13, column: 27, scope: !8064)
!8089 = !DILocation(line: 13, column: 42, scope: !8064)
!8090 = !DILocation(line: 13, column: 19, scope: !8064)
!8091 = !DILocation(line: 13, column: 16, scope: !8064)
!8092 = !DILocation(line: 13, column: 2, scope: !8064)
!8093 = distinct !{!8093, !8092, !8094}
!8094 = !DILocation(line: 19, column: 2, scope: !8064)
!8095 = !DILocation(line: 14, column: 23, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !8065, line: 14, column: 7)
!8097 = distinct !DILexicalBlock(scope: !8064, file: !8065, line: 13, column: 54)
!8098 = !DILocation(line: 14, column: 10, scope: !8096)
!8099 = !DILocation(line: 18, column: 11, scope: !8097)
!8100 = !DILocation(line: 14, column: 7, scope: !8097)
!8101 = !DILocation(line: 22, column: 1, scope: !8064)
!8102 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1076, file: !1076, line: 78, type: !8103, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !8105)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!103, !791, !256, !22}
!8105 = !{!8106, !8107, !8108, !8109}
!8106 = !DILocalVariable(name: "pins", arg: 1, scope: !8102, file: !1076, line: 78, type: !791)
!8107 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8102, file: !1076, line: 78, type: !256)
!8108 = !DILocalVariable(name: "reg", arg: 3, scope: !8102, file: !1076, line: 79, type: !22)
!8109 = !DILocalVariable(name: "i", scope: !8110, file: !1076, line: 83, type: !256)
!8110 = distinct !DILexicalBlock(scope: !8102, file: !1076, line: 83, column: 2)
!8111 = !DILocation(line: 0, scope: !8102)
!8112 = !DILocation(line: 0, scope: !8110)
!8113 = !DILocation(line: 83, column: 25, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8110, file: !1076, line: 83, column: 2)
!8115 = !DILocation(line: 83, column: 2, scope: !8110)
!8116 = !DILocation(line: 87, column: 2, scope: !8102)
!8117 = !DILocation(line: 84, column: 30, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8114, file: !1076, line: 83, column: 41)
!8119 = !DILocation(line: 84, column: 25, scope: !8118)
!8120 = !DILocation(line: 84, column: 3, scope: !8118)
!8121 = !DILocation(line: 83, column: 37, scope: !8114)
!8122 = distinct !{!8122, !8115, !8123}
!8123 = !DILocation(line: 85, column: 2, scope: !8110)
!8124 = distinct !DISubprogram(name: "pinctrl_configure_pin", scope: !1076, file: !1076, line: 52, type: !8125, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1010, retainedNodes: !8127)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{null, !793}
!8127 = !{!8128, !8129, !8136, !8137}
!8128 = !DILocalVariable(name: "pin", arg: 1, scope: !8124, file: !1076, line: 52, type: !793)
!8129 = !DILocalVariable(name: "soc_pin", scope: !8124, file: !1076, line: 54, type: !8130)
!8130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "soc_gpio_pin", file: !5459, line: 85, size: 128, elements: !8131)
!8131 = !{!8132, !8133, !8134, !8135}
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !8130, file: !5459, line: 86, baseType: !137, size: 32)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !8130, file: !5459, line: 90, baseType: !1013, size: 32, offset: 32)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "periph_id", scope: !8130, file: !5459, line: 92, baseType: !256, size: 8, offset: 64)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8130, file: !5459, line: 93, baseType: !137, size: 32, offset: 96)
!8136 = !DILocalVariable(name: "port_idx", scope: !8124, file: !1076, line: 55, type: !256)
!8137 = !DILocalVariable(name: "port_func", scope: !8124, file: !1076, line: 55, type: !256)
!8138 = !DILocation(line: 0, scope: !8124)
!8139 = !DILocation(line: 54, column: 2, scope: !8124)
!8140 = !DILocation(line: 54, column: 22, scope: !8124)
!8141 = !DILocation(line: 57, column: 13, scope: !8124)
!8142 = !DILocation(line: 64, column: 25, scope: !8124)
!8143 = !DILocation(line: 64, column: 17, scope: !8124)
!8144 = !DILocation(line: 64, column: 10, scope: !8124)
!8145 = !DILocation(line: 64, column: 15, scope: !8124)
!8146 = !DILocation(line: 66, column: 22, scope: !8124)
!8147 = !DILocation(line: 66, column: 10, scope: !8124)
!8148 = !DILocation(line: 66, column: 20, scope: !8124)
!8149 = !DILocation(line: 67, column: 22, scope: !8124)
!8150 = !DILocation(line: 67, column: 19, scope: !8124)
!8151 = !DILocation(line: 67, column: 10, scope: !8124)
!8152 = !DILocation(line: 67, column: 15, scope: !8124)
!8153 = !DILocation(line: 68, column: 18, scope: !8124)
!8154 = !DILocation(line: 70, column: 16, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8124, file: !1076, line: 70, column: 6)
!8156 = !DILocation(line: 70, column: 6, scope: !8124)
!8157 = !DILocation(line: 68, column: 10, scope: !8124)
!8158 = !DILocation(line: 75, column: 2, scope: !8124)
!8159 = !DILocation(line: 76, column: 1, scope: !8124)
!8160 = distinct !DISubprogram(name: "z_device_state_init", scope: !8161, file: !8161, line: 23, type: !646, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8162)
!8161 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8162 = !{!8163}
!8163 = !DILocalVariable(name: "dev", scope: !8160, file: !8161, line: 25, type: !8164)
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8165, size: 32)
!8165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8166)
!8166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !244, line: 378, size: 192, elements: !8167)
!8167 = !{!8168, !8169, !8170, !8171, !8177, !8178}
!8168 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8166, file: !244, line: 380, baseType: !247, size: 32)
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !8166, file: !244, line: 382, baseType: !13, size: 32, offset: 32)
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !8166, file: !244, line: 384, baseType: !13, size: 32, offset: 64)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8166, file: !244, line: 386, baseType: !8172, size: 32, offset: 96)
!8172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8173, size: 32)
!8173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !244, line: 351, size: 16, elements: !8174)
!8174 = !{!8175, !8176}
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !8173, file: !244, line: 359, baseType: !256, size: 8)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !8173, file: !244, line: 364, baseType: !259, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8166, file: !244, line: 388, baseType: !102, size: 32, offset: 128)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !8166, file: !244, line: 396, baseType: !262, size: 32, offset: 160)
!8179 = !DILocation(line: 0, scope: !8160)
!8180 = !DILocation(line: 31, column: 1, scope: !8160)
!8181 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !8161, file: !8161, line: 33, type: !8182, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8184)
!8182 = !DISubroutineType(types: !8183)
!8183 = !{!8164, !247}
!8184 = !{!8185, !8186}
!8185 = !DILocalVariable(name: "name", arg: 1, scope: !8181, file: !8161, line: 33, type: !247)
!8186 = !DILocalVariable(name: "dev", scope: !8181, file: !8161, line: 35, type: !8164)
!8187 = !DILocation(line: 0, scope: !8181)
!8188 = !DILocation(line: 40, column: 12, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8181, file: !8161, line: 40, column: 6)
!8190 = !DILocation(line: 40, column: 21, scope: !8189)
!8191 = !DILocation(line: 40, column: 25, scope: !8189)
!8192 = !DILocation(line: 40, column: 33, scope: !8189)
!8193 = !DILocation(line: 40, column: 6, scope: !8181)
!8194 = !DILocation(line: 55, column: 2, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8181, file: !8161, line: 55, column: 2)
!8196 = !DILocation(line: 50, column: 7, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8161, line: 50, column: 7)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !8161, line: 49, column: 57)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !8161, line: 49, column: 2)
!8200 = distinct !DILexicalBlock(scope: !8181, file: !8161, line: 49, column: 2)
!8201 = !DILocation(line: 50, column: 30, scope: !8197)
!8202 = !DILocation(line: 50, column: 39, scope: !8197)
!8203 = !DILocation(line: 50, column: 44, scope: !8197)
!8204 = !DILocation(line: 50, column: 7, scope: !8198)
!8205 = !DILocation(line: 49, column: 53, scope: !8199)
!8206 = !DILocation(line: 49, column: 33, scope: !8199)
!8207 = !DILocation(line: 49, column: 2, scope: !8200)
!8208 = distinct !{!8208, !8207, !8209}
!8209 = !DILocation(line: 53, column: 2, scope: !8200)
!8210 = !DILocation(line: 56, column: 7, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8212, file: !8161, line: 56, column: 7)
!8212 = distinct !DILexicalBlock(scope: !8213, file: !8161, line: 55, column: 57)
!8213 = distinct !DILexicalBlock(scope: !8195, file: !8161, line: 55, column: 2)
!8214 = !DILocation(line: 56, column: 30, scope: !8211)
!8215 = !DILocation(line: 56, column: 52, scope: !8211)
!8216 = !DILocation(line: 56, column: 34, scope: !8211)
!8217 = !DILocation(line: 56, column: 58, scope: !8211)
!8218 = !DILocation(line: 56, column: 7, scope: !8212)
!8219 = !DILocation(line: 55, column: 53, scope: !8213)
!8220 = !DILocation(line: 55, column: 33, scope: !8213)
!8221 = distinct !{!8221, !8194, !8222}
!8222 = !DILocation(line: 59, column: 2, scope: !8195)
!8223 = !DILocation(line: 62, column: 1, scope: !8181)
!8224 = distinct !DISubprogram(name: "z_device_is_ready", scope: !8161, file: !8161, line: 93, type: !8225, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8227)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!259, !8164}
!8227 = !{!8228}
!8228 = !DILocalVariable(name: "dev", arg: 1, scope: !8224, file: !8161, line: 93, type: !8164)
!8229 = !DILocation(line: 0, scope: !8224)
!8230 = !DILocation(line: 99, column: 10, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8224, file: !8161, line: 99, column: 6)
!8232 = !DILocation(line: 99, column: 6, scope: !8224)
!8233 = !DILocation(line: 103, column: 14, scope: !8224)
!8234 = !DILocation(line: 103, column: 21, scope: !8224)
!8235 = !DILocation(line: 103, column: 33, scope: !8224)
!8236 = !DILocation(line: 103, column: 49, scope: !8224)
!8237 = !DILocation(line: 103, column: 58, scope: !8224)
!8238 = !DILocation(line: 104, column: 1, scope: !8224)
!8239 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !8161, file: !8161, line: 87, type: !8240, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8243)
!8240 = !DISubroutineType(types: !8241)
!8241 = !{!120, !8242}
!8242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8164, size: 32)
!8243 = !{!8244}
!8244 = !DILocalVariable(name: "devices", arg: 1, scope: !8239, file: !8161, line: 87, type: !8242)
!8245 = !DILocation(line: 0, scope: !8239)
!8246 = !DILocation(line: 89, column: 11, scope: !8239)
!8247 = !DILocation(line: 90, column: 2, scope: !8239)
!8248 = distinct !DISubprogram(name: "device_required_foreach", scope: !8161, file: !8161, line: 125, type: !8249, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8255)
!8249 = !DISubroutineType(types: !8250)
!8250 = !{!103, !8164, !8251, !102}
!8251 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !244, line: 471, baseType: !8252)
!8252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8253, size: 32)
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!103, !8164, !102}
!8255 = !{!8256, !8257, !8258, !8259, !8260}
!8256 = !DILocalVariable(name: "dev", arg: 1, scope: !8248, file: !8161, line: 125, type: !8164)
!8257 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !8248, file: !8161, line: 126, type: !8251)
!8258 = !DILocalVariable(name: "context", arg: 3, scope: !8248, file: !8161, line: 127, type: !102)
!8259 = !DILocalVariable(name: "handle_count", scope: !8248, file: !8161, line: 129, type: !120)
!8260 = !DILocalVariable(name: "handles", scope: !8248, file: !8161, line: 130, type: !262)
!8261 = !DILocation(line: 0, scope: !8248)
!8262 = !DILocation(line: 129, column: 2, scope: !8248)
!8263 = !DILocation(line: 129, column: 9, scope: !8248)
!8264 = !DILocation(line: 130, column: 35, scope: !8248)
!8265 = !DILocation(line: 132, column: 33, scope: !8248)
!8266 = !DILocation(line: 132, column: 9, scope: !8248)
!8267 = !DILocation(line: 133, column: 1, scope: !8248)
!8268 = !DILocation(line: 132, column: 2, scope: !8248)
!8269 = distinct !DISubprogram(name: "device_required_handles_get", scope: !244, file: !244, line: 493, type: !8270, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8272)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{!262, !8164, !1689}
!8272 = !{!8273, !8274, !8275, !8276}
!8273 = !DILocalVariable(name: "dev", arg: 1, scope: !8269, file: !244, line: 493, type: !8164)
!8274 = !DILocalVariable(name: "count", arg: 2, scope: !8269, file: !244, line: 493, type: !1689)
!8275 = !DILocalVariable(name: "rv", scope: !8269, file: !244, line: 495, type: !262)
!8276 = !DILocalVariable(name: "i", scope: !8277, file: !244, line: 498, type: !120)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !244, line: 497, column: 18)
!8278 = distinct !DILexicalBlock(scope: !8269, file: !244, line: 497, column: 6)
!8279 = !DILocation(line: 0, scope: !8269)
!8280 = !DILocation(line: 495, column: 35, scope: !8269)
!8281 = !DILocation(line: 497, column: 9, scope: !8278)
!8282 = !DILocation(line: 497, column: 6, scope: !8269)
!8283 = !DILocation(line: 0, scope: !8277)
!8284 = !DILocation(line: 500, column: 11, scope: !8277)
!8285 = !DILocation(line: 500, column: 40, scope: !8277)
!8286 = !DILocation(line: 502, column: 4, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8277, file: !244, line: 501, column: 40)
!8288 = distinct !{!8288, !8289, !8290}
!8289 = !DILocation(line: 500, column: 3, scope: !8277)
!8290 = !DILocation(line: 503, column: 3, scope: !8277)
!8291 = !DILocation(line: 504, column: 10, scope: !8277)
!8292 = !DILocation(line: 505, column: 2, scope: !8277)
!8293 = !DILocation(line: 507, column: 2, scope: !8269)
!8294 = distinct !DISubprogram(name: "device_visitor", scope: !8161, file: !8161, line: 106, type: !8295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!103, !262, !120, !8251, !102}
!8297 = !{!8298, !8299, !8300, !8301, !8302, !8304, !8307, !8308}
!8298 = !DILocalVariable(name: "handles", arg: 1, scope: !8294, file: !8161, line: 106, type: !262)
!8299 = !DILocalVariable(name: "handle_count", arg: 2, scope: !8294, file: !8161, line: 107, type: !120)
!8300 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !8294, file: !8161, line: 108, type: !8251)
!8301 = !DILocalVariable(name: "context", arg: 4, scope: !8294, file: !8161, line: 109, type: !102)
!8302 = !DILocalVariable(name: "i", scope: !8303, file: !8161, line: 112, type: !120)
!8303 = distinct !DILexicalBlock(scope: !8294, file: !8161, line: 112, column: 2)
!8304 = !DILocalVariable(name: "dh", scope: !8305, file: !8161, line: 113, type: !264)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !8161, line: 112, column: 44)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !8161, line: 112, column: 2)
!8307 = !DILocalVariable(name: "rdev", scope: !8305, file: !8161, line: 114, type: !8164)
!8308 = !DILocalVariable(name: "rc", scope: !8305, file: !8161, line: 115, type: !103)
!8309 = !DILocation(line: 0, scope: !8294)
!8310 = !DILocation(line: 0, scope: !8303)
!8311 = !DILocation(line: 112, column: 23, scope: !8306)
!8312 = !DILocation(line: 112, column: 2, scope: !8303)
!8313 = distinct !{!8313, !8312, !8314}
!8314 = !DILocation(line: 120, column: 2, scope: !8303)
!8315 = !DILocation(line: 113, column: 24, scope: !8305)
!8316 = !DILocation(line: 0, scope: !8305)
!8317 = !DILocation(line: 114, column: 31, scope: !8305)
!8318 = !DILocation(line: 115, column: 12, scope: !8305)
!8319 = !DILocation(line: 117, column: 10, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8305, file: !8161, line: 117, column: 7)
!8321 = !DILocation(line: 112, column: 39, scope: !8306)
!8322 = !DILocation(line: 123, column: 1, scope: !8294)
!8323 = distinct !DISubprogram(name: "device_from_handle", scope: !244, file: !244, line: 439, type: !8324, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8326)
!8324 = !DISubroutineType(types: !8325)
!8325 = !{!8164, !264}
!8326 = !{!8327, !8328, !8329}
!8327 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !8323, file: !244, line: 439, type: !264)
!8328 = !DILocalVariable(name: "dev", scope: !8323, file: !244, line: 443, type: !8164)
!8329 = !DILocalVariable(name: "numdev", scope: !8323, file: !244, line: 444, type: !120)
!8330 = !DILocation(line: 0, scope: !8323)
!8331 = !DILocation(line: 446, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8323, file: !244, line: 446, column: 6)
!8333 = !DILocation(line: 446, column: 18, scope: !8332)
!8334 = !DILocation(line: 446, column: 23, scope: !8332)
!8335 = !DILocation(line: 450, column: 2, scope: !8323)
!8336 = distinct !DISubprogram(name: "device_supported_foreach", scope: !8161, file: !8161, line: 135, type: !8249, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8337)
!8337 = !{!8338, !8339, !8340, !8341, !8342}
!8338 = !DILocalVariable(name: "dev", arg: 1, scope: !8336, file: !8161, line: 135, type: !8164)
!8339 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !8336, file: !8161, line: 136, type: !8251)
!8340 = !DILocalVariable(name: "context", arg: 3, scope: !8336, file: !8161, line: 137, type: !102)
!8341 = !DILocalVariable(name: "handle_count", scope: !8336, file: !8161, line: 139, type: !120)
!8342 = !DILocalVariable(name: "handles", scope: !8336, file: !8161, line: 140, type: !262)
!8343 = !DILocation(line: 0, scope: !8336)
!8344 = !DILocation(line: 139, column: 2, scope: !8336)
!8345 = !DILocation(line: 139, column: 9, scope: !8336)
!8346 = !DILocation(line: 140, column: 35, scope: !8336)
!8347 = !DILocation(line: 142, column: 33, scope: !8336)
!8348 = !DILocation(line: 142, column: 9, scope: !8336)
!8349 = !DILocation(line: 143, column: 1, scope: !8336)
!8350 = !DILocation(line: 142, column: 2, scope: !8336)
!8351 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !244, file: !244, line: 573, type: !8270, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2046, retainedNodes: !8352)
!8352 = !{!8353, !8354, !8355, !8356, !8357}
!8353 = !DILocalVariable(name: "dev", arg: 1, scope: !8351, file: !244, line: 573, type: !8164)
!8354 = !DILocalVariable(name: "count", arg: 2, scope: !8351, file: !244, line: 573, type: !1689)
!8355 = !DILocalVariable(name: "rv", scope: !8351, file: !244, line: 575, type: !262)
!8356 = !DILocalVariable(name: "region", scope: !8351, file: !244, line: 576, type: !120)
!8357 = !DILocalVariable(name: "i", scope: !8351, file: !244, line: 577, type: !120)
!8358 = !DILocation(line: 0, scope: !8351)
!8359 = !DILocation(line: 575, column: 35, scope: !8351)
!8360 = !DILocation(line: 579, column: 9, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8351, file: !244, line: 579, column: 6)
!8362 = !DILocation(line: 579, column: 6, scope: !8351)
!8363 = !DILocation(line: 582, column: 8, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !244, line: 582, column: 8)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !244, line: 581, column: 23)
!8366 = distinct !DILexicalBlock(scope: !8361, file: !244, line: 579, column: 18)
!8367 = !DILocation(line: 582, column: 12, scope: !8364)
!8368 = !DILocation(line: 585, column: 6, scope: !8365)
!8369 = !DILocation(line: 0, scope: !8366)
!8370 = !DILocation(line: 581, column: 17, scope: !8366)
!8371 = !DILocation(line: 581, column: 3, scope: !8366)
!8372 = !DILocation(line: 588, column: 10, scope: !8366)
!8373 = !DILocation(line: 588, column: 16, scope: !8366)
!8374 = !DILocation(line: 589, column: 4, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8366, file: !244, line: 588, column: 39)
!8376 = !DILocation(line: 588, column: 3, scope: !8366)
!8377 = distinct !{!8377, !8376, !8378}
!8378 = !DILocation(line: 590, column: 3, scope: !8366)
!8379 = !DILocation(line: 591, column: 10, scope: !8366)
!8380 = !DILocation(line: 592, column: 2, scope: !8366)
!8381 = !DILocation(line: 575, column: 25, scope: !8351)
!8382 = !DILocation(line: 594, column: 2, scope: !8351)
!8383 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1084, file: !1084, line: 49, type: !8384, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !162)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{!1682}
!8386 = !DILocation(line: 51, column: 10, scope: !8383)
!8387 = !DILocation(line: 51, column: 20, scope: !8383)
!8388 = !DILocation(line: 51, column: 2, scope: !8383)
!8389 = distinct !DISubprogram(name: "coredump", scope: !2053, file: !2053, line: 209, type: !8390, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8536)
!8390 = !DISubroutineType(types: !8391)
!8391 = !{null, !32, !8392, !8436}
!8392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8393, size: 32)
!8393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8394)
!8394 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !1857, line: 141, baseType: !8395)
!8395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !1857, line: 97, size: 256, elements: !8396)
!8396 = !{!8397}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8395, file: !1857, line: 107, baseType: !8398, size: 256)
!8398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !1857, line: 98, size: 256, elements: !8399)
!8399 = !{!8400, !8405, !8410, !8415, !8420, !8425, !8430, !8435}
!8400 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 99, baseType: !8401, size: 32)
!8401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 99, size: 32, elements: !8402)
!8402 = !{!8403, !8404}
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8401, file: !1857, line: 99, baseType: !137, size: 32)
!8404 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8401, file: !1857, line: 99, baseType: !137, size: 32)
!8405 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 100, baseType: !8406, size: 32, offset: 32)
!8406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 100, size: 32, elements: !8407)
!8407 = !{!8408, !8409}
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8406, file: !1857, line: 100, baseType: !137, size: 32)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8406, file: !1857, line: 100, baseType: !137, size: 32)
!8410 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 101, baseType: !8411, size: 32, offset: 64)
!8411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 101, size: 32, elements: !8412)
!8412 = !{!8413, !8414}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8411, file: !1857, line: 101, baseType: !137, size: 32)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8411, file: !1857, line: 101, baseType: !137, size: 32)
!8415 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 102, baseType: !8416, size: 32, offset: 96)
!8416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 102, size: 32, elements: !8417)
!8417 = !{!8418, !8419}
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8416, file: !1857, line: 102, baseType: !137, size: 32)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8416, file: !1857, line: 102, baseType: !137, size: 32)
!8420 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 103, baseType: !8421, size: 32, offset: 128)
!8421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 103, size: 32, elements: !8422)
!8422 = !{!8423, !8424}
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8421, file: !1857, line: 103, baseType: !137, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8421, file: !1857, line: 103, baseType: !137, size: 32)
!8425 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 104, baseType: !8426, size: 32, offset: 160)
!8426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 104, size: 32, elements: !8427)
!8427 = !{!8428, !8429}
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8426, file: !1857, line: 104, baseType: !137, size: 32)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8426, file: !1857, line: 104, baseType: !137, size: 32)
!8430 = !DIDerivedType(tag: DW_TAG_member, scope: !8398, file: !1857, line: 105, baseType: !8431, size: 32, offset: 192)
!8431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8398, file: !1857, line: 105, size: 32, elements: !8432)
!8432 = !{!8433, !8434}
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8431, file: !1857, line: 105, baseType: !137, size: 32)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8431, file: !1857, line: 105, baseType: !137, size: 32)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8398, file: !1857, line: 106, baseType: !137, size: 32, offset: 224)
!8436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8437, size: 32)
!8437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !282, line: 245, size: 1024, elements: !8438)
!8438 = !{!8439, !8497, !8509, !8510, !8511, !8512, !8518, !8531}
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8437, file: !282, line: 247, baseType: !8440, size: 384)
!8440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !282, line: 57, size: 384, elements: !8441)
!8441 = !{!8442, !8466, !8473, !8474, !8475, !8484, !8485, !8486}
!8442 = !DIDerivedType(tag: DW_TAG_member, scope: !8440, file: !282, line: 60, baseType: !8443, size: 64)
!8443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8440, file: !282, line: 60, size: 64, elements: !8444)
!8444 = !{!8445, !8460}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8443, file: !282, line: 61, baseType: !8446, size: 64)
!8446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !292, line: 49, baseType: !8447)
!8447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !292, line: 37, size: 64, elements: !8448)
!8448 = !{!8449, !8455}
!8449 = !DIDerivedType(tag: DW_TAG_member, scope: !8447, file: !292, line: 38, baseType: !8450, size: 32)
!8450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8447, file: !292, line: 38, size: 32, elements: !8451)
!8451 = !{!8452, !8454}
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8450, file: !292, line: 39, baseType: !8453, size: 32)
!8453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8447, size: 32)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8450, file: !292, line: 40, baseType: !8453, size: 32)
!8455 = !DIDerivedType(tag: DW_TAG_member, scope: !8447, file: !292, line: 42, baseType: !8456, size: 32, offset: 32)
!8456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8447, file: !292, line: 42, size: 32, elements: !8457)
!8457 = !{!8458, !8459}
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8456, file: !292, line: 43, baseType: !8453, size: 32)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8456, file: !292, line: 44, baseType: !8453, size: 32)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8443, file: !282, line: 62, baseType: !8461, size: 64)
!8461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !308, line: 49, size: 64, elements: !8462)
!8462 = !{!8463}
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8461, file: !308, line: 50, baseType: !8464, size: 64)
!8464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8465, size: 64, elements: !313)
!8465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8461, size: 32)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8440, file: !282, line: 68, baseType: !8467, size: 32, offset: 64)
!8467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8468, size: 32)
!8468 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !318, line: 233, baseType: !8469)
!8469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !318, line: 231, size: 64, elements: !8470)
!8470 = !{!8471}
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8469, file: !318, line: 232, baseType: !8472, size: 64)
!8472 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !292, line: 48, baseType: !8447)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8440, file: !282, line: 71, baseType: !256, size: 8, offset: 96)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8440, file: !282, line: 74, baseType: !256, size: 8, offset: 104)
!8475 = !DIDerivedType(tag: DW_TAG_member, scope: !8440, file: !282, line: 90, baseType: !8476, size: 16, offset: 112)
!8476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8440, file: !282, line: 90, size: 16, elements: !8477)
!8477 = !{!8478, !8483}
!8478 = !DIDerivedType(tag: DW_TAG_member, scope: !8476, file: !282, line: 91, baseType: !8479, size: 16)
!8479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8476, file: !282, line: 91, size: 16, elements: !8480)
!8480 = !{!8481, !8482}
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8479, file: !282, line: 96, baseType: !332, size: 8)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8479, file: !282, line: 97, baseType: !256, size: 8, offset: 8)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8476, file: !282, line: 100, baseType: !151, size: 16)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8440, file: !282, line: 107, baseType: !137, size: 32, offset: 128)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8440, file: !282, line: 127, baseType: !102, size: 32, offset: 160)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8440, file: !282, line: 131, baseType: !8487, size: 192, offset: 192)
!8487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !318, line: 244, size: 192, elements: !8488)
!8488 = !{!8489, !8490, !8496}
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8487, file: !318, line: 245, baseType: !8446, size: 64)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8487, file: !318, line: 246, baseType: !8491, size: 32, offset: 64)
!8491 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !318, line: 242, baseType: !8492)
!8492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8493, size: 32)
!8493 = !DISubroutineType(types: !8494)
!8494 = !{null, !8495}
!8495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8487, size: 32)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8487, file: !318, line: 249, baseType: !349, size: 64, offset: 128)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8437, file: !282, line: 250, baseType: !8498, size: 288, offset: 384)
!8498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !353, line: 25, size: 288, elements: !8499)
!8499 = !{!8500, !8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508}
!8500 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8498, file: !353, line: 26, baseType: !137, size: 32)
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8498, file: !353, line: 27, baseType: !137, size: 32, offset: 32)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8498, file: !353, line: 28, baseType: !137, size: 32, offset: 64)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8498, file: !353, line: 29, baseType: !137, size: 32, offset: 96)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8498, file: !353, line: 30, baseType: !137, size: 32, offset: 128)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8498, file: !353, line: 31, baseType: !137, size: 32, offset: 160)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8498, file: !353, line: 32, baseType: !137, size: 32, offset: 192)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8498, file: !353, line: 33, baseType: !137, size: 32, offset: 224)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8498, file: !353, line: 34, baseType: !137, size: 32, offset: 256)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8437, file: !282, line: 253, baseType: !102, size: 32, offset: 672)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8437, file: !282, line: 256, baseType: !8468, size: 64, offset: 704)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8437, file: !282, line: 294, baseType: !103, size: 32, offset: 768)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8437, file: !282, line: 300, baseType: !8513, size: 96, offset: 800)
!8513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !282, line: 149, size: 96, elements: !8514)
!8514 = !{!8515, !8516, !8517}
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8513, file: !282, line: 153, baseType: !22, size: 32)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8513, file: !282, line: 162, baseType: !120, size: 32, offset: 32)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8513, file: !282, line: 168, baseType: !120, size: 32, offset: 64)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8437, file: !282, line: 325, baseType: !8519, size: 32, offset: 896)
!8519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8520, size: 32)
!8520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !376, line: 5073, size: 160, elements: !8521)
!8521 = !{!8522, !8528, !8529}
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8520, file: !376, line: 5074, baseType: !8523, size: 96)
!8523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !113, line: 56, size: 96, elements: !8524)
!8524 = !{!8525, !8526, !8527}
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8523, file: !113, line: 57, baseType: !116, size: 32)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8523, file: !113, line: 58, baseType: !102, size: 32, offset: 32)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8523, file: !113, line: 59, baseType: !120, size: 32, offset: 64)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8520, file: !376, line: 5075, baseType: !8468, size: 64, offset: 96)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8520, file: !376, line: 5076, baseType: !8530, offset: 160)
!8530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !387, line: 43, elements: !162)
!8531 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8437, file: !282, line: 343, baseType: !8532, size: 64, offset: 928)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !353, line: 60, size: 64, elements: !8533)
!8533 = !{!8534, !8535}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8532, file: !353, line: 63, baseType: !137, size: 32)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8532, file: !353, line: 66, baseType: !137, size: 32, offset: 32)
!8536 = !{!8537, !8538, !8539}
!8537 = !DILocalVariable(name: "reason", arg: 1, scope: !8389, file: !2053, line: 209, type: !32)
!8538 = !DILocalVariable(name: "esf", arg: 2, scope: !8389, file: !2053, line: 209, type: !8392)
!8539 = !DILocalVariable(name: "thread", arg: 3, scope: !8389, file: !2053, line: 210, type: !8436)
!8540 = !DILocation(line: 0, scope: !8389)
!8541 = !DILocation(line: 212, column: 1, scope: !8389)
!8542 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2053, file: !2053, line: 214, type: !8543, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8545)
!8543 = !DISubroutineType(types: !8544)
!8544 = !{null, !22, !22}
!8545 = !{!8546, !8547}
!8546 = !DILocalVariable(name: "start_addr", arg: 1, scope: !8542, file: !2053, line: 214, type: !22)
!8547 = !DILocalVariable(name: "end_addr", arg: 2, scope: !8542, file: !2053, line: 214, type: !22)
!8548 = !DILocation(line: 0, scope: !8542)
!8549 = !DILocation(line: 216, column: 1, scope: !8542)
!8550 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2053, file: !2053, line: 218, type: !8551, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8553)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{null, !1125, !120}
!8553 = !{!8554, !8555}
!8554 = !DILocalVariable(name: "buf", arg: 1, scope: !8550, file: !2053, line: 218, type: !1125)
!8555 = !DILocalVariable(name: "buflen", arg: 2, scope: !8550, file: !2053, line: 218, type: !120)
!8556 = !DILocation(line: 0, scope: !8550)
!8557 = !DILocation(line: 220, column: 1, scope: !8550)
!8558 = distinct !DISubprogram(name: "coredump_query", scope: !2053, file: !2053, line: 222, type: !8559, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8561)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!103, !2052, !102}
!8561 = !{!8562, !8563}
!8562 = !DILocalVariable(name: "query_id", arg: 1, scope: !8558, file: !2053, line: 222, type: !2052)
!8563 = !DILocalVariable(name: "arg", arg: 2, scope: !8558, file: !2053, line: 222, type: !102)
!8564 = !DILocation(line: 0, scope: !8558)
!8565 = !DILocation(line: 224, column: 2, scope: !8558)
!8566 = distinct !DISubprogram(name: "coredump_cmd", scope: !2053, file: !2053, line: 227, type: !8567, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8569)
!8567 = !DISubroutineType(types: !8568)
!8568 = !{!103, !2059, !102}
!8569 = !{!8570, !8571}
!8570 = !DILocalVariable(name: "query_id", arg: 1, scope: !8566, file: !2053, line: 227, type: !2059)
!8571 = !DILocalVariable(name: "arg", arg: 2, scope: !8566, file: !2053, line: 227, type: !102)
!8572 = !DILocation(line: 0, scope: !8566)
!8573 = !DILocation(line: 229, column: 2, scope: !8566)
!8574 = distinct !DISubprogram(name: "arch_system_halt", scope: !8575, file: !8575, line: 23, type: !5382, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8576)
!8575 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8576 = !{!8577}
!8577 = !DILocalVariable(name: "reason", arg: 1, scope: !8574, file: !8575, line: 23, type: !32)
!8578 = !DILocation(line: 0, scope: !8574)
!8579 = !DILocation(line: 55, column: 2, scope: !8580, inlinedAt: !8584)
!8580 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5308, file: !5308, line: 42, type: !5309, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8581)
!8581 = !{!8582, !8583}
!8582 = !DILocalVariable(name: "key", scope: !8580, file: !5308, line: 44, type: !32)
!8583 = !DILocalVariable(name: "tmp", scope: !8580, file: !5308, line: 53, type: !32)
!8584 = distinct !DILocation(line: 31, column: 8, scope: !8574)
!8585 = !{i64 1322010}
!8586 = !DILocation(line: 0, scope: !8580, inlinedAt: !8584)
!8587 = !DILocation(line: 32, column: 2, scope: !8574)
!8588 = !DILocation(line: 32, column: 2, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !8575, line: 32, column: 2)
!8590 = distinct !DILexicalBlock(scope: !8574, file: !8575, line: 32, column: 2)
!8591 = distinct !{!8591, !8592, !8593}
!8592 = !DILocation(line: 32, column: 2, scope: !8590)
!8593 = !DILocation(line: 34, column: 2, scope: !8590)
!8594 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !8575, file: !8575, line: 39, type: !8595, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8597)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{null, !32, !8392}
!8597 = !{!8598, !8599}
!8598 = !DILocalVariable(name: "reason", arg: 1, scope: !8594, file: !8575, line: 39, type: !32)
!8599 = !DILocalVariable(name: "esf", arg: 2, scope: !8594, file: !8575, line: 40, type: !8392)
!8600 = !DILocation(line: 0, scope: !8594)
!8601 = !DILocation(line: 46, column: 2, scope: !8594)
!8602 = distinct !DISubprogram(name: "k_fatal_halt", scope: !8575, file: !8575, line: 81, type: !5382, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8603)
!8603 = !{!8604}
!8604 = !DILocalVariable(name: "reason", arg: 1, scope: !8602, file: !8575, line: 81, type: !32)
!8605 = !DILocation(line: 0, scope: !8602)
!8606 = !DILocation(line: 83, column: 2, scope: !8602)
!8607 = distinct !DISubprogram(name: "z_fatal_error", scope: !8575, file: !8575, line: 96, type: !8595, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8608)
!8608 = !{!8609, !8610, !8611, !8612}
!8609 = !DILocalVariable(name: "reason", arg: 1, scope: !8607, file: !8575, line: 96, type: !32)
!8610 = !DILocalVariable(name: "esf", arg: 2, scope: !8607, file: !8575, line: 96, type: !8392)
!8611 = !DILocalVariable(name: "key", scope: !8607, file: !8575, line: 102, type: !32)
!8612 = !DILocalVariable(name: "thread", scope: !8607, file: !8575, line: 103, type: !8436)
!8613 = !DILocation(line: 0, scope: !8607)
!8614 = !DILocation(line: 55, column: 2, scope: !8580, inlinedAt: !8615)
!8615 = distinct !DILocation(line: 102, column: 21, scope: !8607)
!8616 = !DILocation(line: 0, scope: !8580, inlinedAt: !8615)
!8617 = !DILocation(line: 119, column: 11, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8607, file: !8575, line: 119, column: 6)
!8619 = !DILocation(line: 119, column: 20, scope: !8618)
!8620 = !DILocation(line: 131, column: 2, scope: !8607)
!8621 = !DILocation(line: 151, column: 7, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !8575, line: 146, column: 32)
!8623 = distinct !DILexicalBlock(scope: !8607, file: !8575, line: 146, column: 6)
!8624 = !DILocation(line: 151, column: 21, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8622, file: !8575, line: 151, column: 7)
!8626 = !DILocation(line: 104, column: 4, scope: !8607)
!8627 = !DILocalVariable(name: "key", arg: 1, scope: !8628, file: !5308, line: 84, type: !32)
!8628 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8629)
!8629 = !{!8627}
!8630 = !DILocation(line: 0, scope: !8628, inlinedAt: !8631)
!8631 = distinct !DILocation(line: 186, column: 2, scope: !8607)
!8632 = !DILocation(line: 95, column: 2, scope: !8628, inlinedAt: !8631)
!8633 = !{i64 1322827}
!8634 = !DILocation(line: 189, column: 3, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !8575, line: 188, column: 41)
!8636 = distinct !DILexicalBlock(scope: !8607, file: !8575, line: 188, column: 6)
!8637 = !DILocation(line: 191, column: 1, scope: !8607)
!8638 = distinct !DISubprogram(name: "k_current_get", scope: !376, file: !376, line: 530, type: !8639, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !162)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{!8641}
!8641 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !282, line: 347, baseType: !8436)
!8642 = !DILocation(line: 535, column: 9, scope: !8638)
!8643 = !DILocation(line: 535, column: 2, scope: !8638)
!8644 = distinct !DISubprogram(name: "k_thread_abort", scope: !2534, file: !2534, line: 188, type: !8645, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !8647)
!8645 = !DISubroutineType(types: !8646)
!8646 = !{null, !8641}
!8647 = !{!8648}
!8648 = !DILocalVariable(name: "thread", arg: 1, scope: !8644, file: !2534, line: 188, type: !8641)
!8649 = !DILocation(line: 0, scope: !8644)
!8650 = !DILocation(line: 197, column: 2, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8644, file: !2534, line: 197, column: 2)
!8652 = !{i64 2151089456}
!8653 = !DILocation(line: 198, column: 2, scope: !8644)
!8654 = !DILocation(line: 199, column: 1, scope: !8644)
!8655 = distinct !DISubprogram(name: "z_current_get", scope: !2534, file: !2534, line: 173, type: !8639, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2049, retainedNodes: !162)
!8656 = !DILocation(line: 180, column: 2, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8655, file: !2534, line: 180, column: 2)
!8658 = !{i64 2151089388}
!8659 = !DILocation(line: 181, column: 9, scope: !8655)
!8660 = !DILocation(line: 181, column: 2, scope: !8655)
!8661 = distinct !DISubprogram(name: "z_early_memset", scope: !1092, file: !1092, line: 108, type: !8662, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{null, !102, !103, !120}
!8664 = !{!8665, !8666, !8667}
!8665 = !DILocalVariable(name: "dst", arg: 1, scope: !8661, file: !1092, line: 108, type: !102)
!8666 = !DILocalVariable(name: "c", arg: 2, scope: !8661, file: !1092, line: 108, type: !103)
!8667 = !DILocalVariable(name: "n", arg: 3, scope: !8661, file: !1092, line: 108, type: !120)
!8668 = !DILocation(line: 0, scope: !8661)
!8669 = !DILocation(line: 110, column: 9, scope: !8661)
!8670 = !DILocation(line: 111, column: 1, scope: !8661)
!8671 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1092, file: !1092, line: 121, type: !8672, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8674)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{null, !102, !13, !120}
!8674 = !{!8675, !8676, !8677}
!8675 = !DILocalVariable(name: "dst", arg: 1, scope: !8671, file: !1092, line: 121, type: !102)
!8676 = !DILocalVariable(name: "src", arg: 2, scope: !8671, file: !1092, line: 121, type: !13)
!8677 = !DILocalVariable(name: "n", arg: 3, scope: !8671, file: !1092, line: 121, type: !120)
!8678 = !DILocation(line: 0, scope: !8671)
!8679 = !DILocation(line: 123, column: 9, scope: !8671)
!8680 = !DILocation(line: 124, column: 1, scope: !8671)
!8681 = distinct !DISubprogram(name: "z_bss_zero", scope: !1092, file: !1092, line: 132, type: !646, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !162)
!8682 = !DILocation(line: 143, column: 2, scope: !8681)
!8683 = !DILocation(line: 168, column: 1, scope: !8681)
!8684 = distinct !DISubprogram(name: "z_init_cpu", scope: !1092, file: !1092, line: 372, type: !8685, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8687)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{null, !103}
!8687 = !{!8688}
!8688 = !DILocalVariable(name: "id", arg: 1, scope: !8684, file: !1092, line: 372, type: !103)
!8689 = !DILocation(line: 0, scope: !8684)
!8690 = !DILocation(line: 374, column: 2, scope: !8684)
!8691 = !DILocation(line: 375, column: 34, scope: !8684)
!8692 = !DILocation(line: 375, column: 19, scope: !8684)
!8693 = !DILocation(line: 375, column: 31, scope: !8684)
!8694 = !DILocation(line: 376, column: 24, scope: !8684)
!8695 = !DILocation(line: 376, column: 19, scope: !8684)
!8696 = !DILocation(line: 376, column: 22, scope: !8684)
!8697 = !DILocation(line: 378, column: 26, scope: !8684)
!8698 = !DILocation(line: 378, column: 4, scope: !8684)
!8699 = !DILocation(line: 378, column: 50, scope: !8684)
!8700 = !DILocation(line: 377, column: 19, scope: !8684)
!8701 = !DILocation(line: 377, column: 29, scope: !8684)
!8702 = !DILocation(line: 384, column: 1, scope: !8684)
!8703 = distinct !DISubprogram(name: "init_idle_thread", scope: !1092, file: !1092, line: 343, type: !8685, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8704)
!8704 = !{!8705, !8706, !8707, !8710}
!8705 = !DILocalVariable(name: "i", arg: 1, scope: !8703, file: !1092, line: 343, type: !103)
!8706 = !DILocalVariable(name: "thread", scope: !8703, file: !1092, line: 345, type: !1186)
!8707 = !DILocalVariable(name: "stack", scope: !8703, file: !1092, line: 346, type: !8708)
!8708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8709, size: 32)
!8709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2413, line: 44, baseType: !1300)
!8710 = !DILocalVariable(name: "tname", scope: !8703, file: !1092, line: 358, type: !1131)
!8711 = !DILocation(line: 0, scope: !8703)
!8712 = !DILocation(line: 345, column: 29, scope: !8703)
!8713 = !DILocation(line: 346, column: 28, scope: !8703)
!8714 = !DILocation(line: 362, column: 37, scope: !8703)
!8715 = !DILocation(line: 362, column: 36, scope: !8703)
!8716 = !DILocation(line: 361, column: 2, scope: !8703)
!8717 = !DILocation(line: 365, column: 2, scope: !8703)
!8718 = !DILocation(line: 370, column: 1, scope: !8703)
!8719 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1301, file: !1301, line: 331, type: !8720, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8722)
!8720 = !DISubroutineType(types: !8721)
!8721 = !{!1131, !8708}
!8722 = !{!8723}
!8723 = !DILocalVariable(name: "sym", arg: 1, scope: !8719, file: !1301, line: 331, type: !8708)
!8724 = !DILocation(line: 0, scope: !8719)
!8725 = !DILocation(line: 333, column: 21, scope: !8719)
!8726 = !DILocation(line: 333, column: 2, scope: !8719)
!8727 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !8728, file: !8728, line: 155, type: !8729, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8731)
!8728 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8729 = !DISubroutineType(types: !8730)
!8730 = !{null, !1186}
!8731 = !{!8732}
!8732 = !DILocalVariable(name: "thread", arg: 1, scope: !8727, file: !8728, line: 155, type: !1186)
!8733 = !DILocation(line: 0, scope: !8727)
!8734 = !DILocation(line: 157, column: 15, scope: !8727)
!8735 = !DILocation(line: 157, column: 28, scope: !8727)
!8736 = !DILocation(line: 158, column: 1, scope: !8727)
!8737 = distinct !DISubprogram(name: "z_cstart", scope: !1092, file: !1092, line: 501, type: !646, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8738)
!8738 = !{!8739}
!8739 = !DILocalVariable(name: "dummy_thread", scope: !8737, file: !1092, line: 518, type: !1187)
!8740 = !DILocation(line: 507, column: 2, scope: !8737)
!8741 = !DILocation(line: 43, column: 14, scope: !8742, inlinedAt: !8746)
!8742 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !8743, file: !8743, line: 40, type: !646, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8744)
!8743 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8744 = !{!8745}
!8745 = !DILocalVariable(name: "msp", scope: !8742, file: !8743, line: 42, type: !137)
!8746 = distinct !DILocation(line: 44, column: 2, scope: !8747, inlinedAt: !8749)
!8747 = distinct !DISubprogram(name: "arch_kernel_init", scope: !8748, file: !8748, line: 42, type: !646, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !162)
!8748 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8749 = distinct !DILocation(line: 510, column: 2, scope: !8737)
!8750 = !DILocation(line: 43, column: 3, scope: !8742, inlinedAt: !8746)
!8751 = !DILocation(line: 43, column: 60, scope: !8742, inlinedAt: !8746)
!8752 = !DILocation(line: 0, scope: !8742, inlinedAt: !8746)
!8753 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !8754, file: !5805, line: 1153, type: !137)
!8754 = distinct !DISubprogram(name: "__set_MSP", scope: !5805, file: !5805, line: 1153, type: !5392, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8755)
!8755 = !{!8753}
!8756 = !DILocation(line: 0, scope: !8754, inlinedAt: !8757)
!8757 = distinct !DILocation(line: 46, column: 2, scope: !8742, inlinedAt: !8746)
!8758 = !DILocation(line: 1155, column: 3, scope: !8754, inlinedAt: !8757)
!8759 = !{i64 1579775}
!8760 = !DILocation(line: 62, column: 11, scope: !8742, inlinedAt: !8746)
!8761 = !DILocation(line: 102, column: 2, scope: !8762, inlinedAt: !8763)
!8762 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6558, file: !6558, line: 97, type: !646, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !162)
!8763 = distinct !DILocation(line: 45, column: 2, scope: !8747, inlinedAt: !8749)
!8764 = !DILocation(line: 108, column: 2, scope: !8762, inlinedAt: !8763)
!8765 = !DILocation(line: 112, column: 2, scope: !8762, inlinedAt: !8763)
!8766 = !DILocation(line: 113, column: 2, scope: !8762, inlinedAt: !8763)
!8767 = !DILocation(line: 114, column: 2, scope: !8762, inlinedAt: !8763)
!8768 = !DILocation(line: 116, column: 2, scope: !8762, inlinedAt: !8763)
!8769 = !DILocation(line: 123, column: 13, scope: !8762, inlinedAt: !8763)
!8770 = !DILocation(line: 46, column: 2, scope: !8747, inlinedAt: !8749)
!8771 = !DILocation(line: 47, column: 2, scope: !8747, inlinedAt: !8749)
!8772 = !DILocation(line: 174, column: 12, scope: !8773, inlinedAt: !8774)
!8773 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6558, file: !6558, line: 169, type: !646, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !162)
!8774 = distinct !DILocation(line: 48, column: 2, scope: !8747, inlinedAt: !8749)
!8775 = !DILocation(line: 179, column: 12, scope: !8773, inlinedAt: !8774)
!8776 = !DILocation(line: 50, column: 2, scope: !8747, inlinedAt: !8749)
!8777 = !DILocation(line: 57, column: 2, scope: !8747, inlinedAt: !8749)
!8778 = !DILocation(line: 518, column: 2, scope: !8737)
!8779 = !DILocation(line: 518, column: 18, scope: !8737)
!8780 = !DILocation(line: 520, column: 2, scope: !8737)
!8781 = !DILocation(line: 523, column: 2, scope: !8737)
!8782 = !DILocation(line: 526, column: 2, scope: !8737)
!8783 = !DILocation(line: 527, column: 2, scope: !8737)
!8784 = !DILocation(line: 543, column: 24, scope: !8737)
!8785 = !DILocation(line: 543, column: 2, scope: !8737)
!8786 = !DILocation(line: 0, scope: !1320)
!8787 = !DILocation(line: 246, column: 15, scope: !1338)
!8788 = !DILocation(line: 246, column: 36, scope: !1337)
!8789 = !DILocation(line: 246, column: 2, scope: !1338)
!8790 = !DILocation(line: 247, column: 37, scope: !1336)
!8791 = !DILocation(line: 0, scope: !1336)
!8792 = !DILocation(line: 248, column: 19, scope: !1336)
!8793 = !DILocation(line: 248, column: 12, scope: !1336)
!8794 = !DILocation(line: 250, column: 11, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !1336, file: !1092, line: 250, column: 7)
!8796 = !DILocation(line: 250, column: 7, scope: !1336)
!8797 = !DILocation(line: 254, column: 11, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !1092, line: 254, column: 8)
!8799 = distinct !DILexicalBlock(scope: !8795, file: !1092, line: 250, column: 20)
!8800 = !DILocation(line: 254, column: 8, scope: !8799)
!8801 = !DILocation(line: 255, column: 9, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8798, file: !1092, line: 254, column: 17)
!8803 = !DILocation(line: 258, column: 9, scope: !8802)
!8804 = !DILocation(line: 261, column: 28, scope: !8802)
!8805 = !DILocation(line: 261, column: 10, scope: !8802)
!8806 = !DILocation(line: 261, column: 17, scope: !8802)
!8807 = !DILocation(line: 261, column: 26, scope: !8802)
!8808 = !DILocation(line: 262, column: 4, scope: !8802)
!8809 = !DILocation(line: 263, column: 9, scope: !8799)
!8810 = !DILocation(line: 263, column: 16, scope: !8799)
!8811 = !DILocation(line: 263, column: 28, scope: !8799)
!8812 = !DILocation(line: 264, column: 3, scope: !8799)
!8813 = !DILocation(line: 246, column: 60, scope: !1337)
!8814 = distinct !{!8814, !8789, !8815}
!8815 = !DILocation(line: 265, column: 2, scope: !1338)
!8816 = !DILocation(line: 266, column: 1, scope: !1320)
!8817 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !419, file: !419, line: 1638, type: !5839, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8818)
!8818 = !{!8819, !8820}
!8819 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8817, file: !419, line: 1638, type: !1751)
!8820 = !DILocalVariable(name: "priority", arg: 2, scope: !8817, file: !419, line: 1638, type: !137)
!8821 = !DILocation(line: 0, scope: !8817)
!8822 = !DILocation(line: 1646, column: 48, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !419, line: 1645, column: 3)
!8824 = distinct !DILexicalBlock(scope: !8817, file: !419, line: 1640, column: 7)
!8825 = !DILocation(line: 1646, column: 32, scope: !8823)
!8826 = !DILocation(line: 1646, column: 40, scope: !8823)
!8827 = !DILocation(line: 1646, column: 5, scope: !8823)
!8828 = !DILocation(line: 1646, column: 46, scope: !8823)
!8829 = !DILocation(line: 1648, column: 1, scope: !8817)
!8830 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !8748, file: !8748, line: 32, type: !646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!8831 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !8832, file: !8832, line: 215, type: !8729, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8833)
!8832 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8833 = !{!8834}
!8834 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !8831, file: !8832, line: 215, type: !1186)
!8835 = !DILocation(line: 0, scope: !8831)
!8836 = !DILocation(line: 217, column: 21, scope: !8831)
!8837 = !DILocation(line: 217, column: 34, scope: !8831)
!8838 = !DILocation(line: 221, column: 21, scope: !8831)
!8839 = !DILocation(line: 221, column: 34, scope: !8831)
!8840 = !DILocation(line: 223, column: 27, scope: !8831)
!8841 = !DILocation(line: 223, column: 33, scope: !8831)
!8842 = !DILocation(line: 224, column: 27, scope: !8831)
!8843 = !DILocation(line: 224, column: 32, scope: !8831)
!8844 = !DILocation(line: 232, column: 16, scope: !8831)
!8845 = !DILocation(line: 232, column: 30, scope: !8831)
!8846 = !DILocation(line: 239, column: 24, scope: !8831)
!8847 = !DILocation(line: 240, column: 1, scope: !8831)
!8848 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1092, file: !1092, line: 399, type: !8849, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8851)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!1131}
!8851 = !{!8852}
!8852 = !DILocalVariable(name: "stack_ptr", scope: !8848, file: !1092, line: 401, type: !1131)
!8853 = !DILocation(line: 404, column: 2, scope: !8848)
!8854 = !DILocation(line: 416, column: 24, scope: !8848)
!8855 = !DILocation(line: 418, column: 14, scope: !8848)
!8856 = !DILocation(line: 0, scope: !8848)
!8857 = !DILocation(line: 423, column: 2, scope: !8848)
!8858 = !DILocation(line: 424, column: 2, scope: !8848)
!8859 = !DILocation(line: 426, column: 2, scope: !8848)
!8860 = !DILocation(line: 428, column: 2, scope: !8848)
!8861 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1092, file: !1092, line: 432, type: !8862, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8864)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{null, !1131}
!8864 = !{!8865}
!8865 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !8861, file: !1092, line: 432, type: !1131)
!8866 = !DILocation(line: 0, scope: !8861)
!8867 = !DILocation(line: 435, column: 2, scope: !8861)
!8868 = !DILocation(line: 445, column: 2, scope: !8861)
!8869 = distinct !DISubprogram(name: "bg_thread_main", scope: !1092, file: !1092, line: 277, type: !2415, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1088, retainedNodes: !8870)
!8870 = !{!8871, !8872, !8873}
!8871 = !DILocalVariable(name: "unused1", arg: 1, scope: !8869, file: !1092, line: 277, type: !102)
!8872 = !DILocalVariable(name: "unused2", arg: 2, scope: !8869, file: !1092, line: 277, type: !102)
!8873 = !DILocalVariable(name: "unused3", arg: 3, scope: !8869, file: !1092, line: 277, type: !102)
!8874 = !DILocation(line: 0, scope: !8869)
!8875 = !DILocation(line: 291, column: 20, scope: !8869)
!8876 = !DILocation(line: 293, column: 2, scope: !8869)
!8877 = !DILocation(line: 297, column: 2, scope: !8869)
!8878 = !DILocation(line: 305, column: 2, scope: !8869)
!8879 = !DILocation(line: 307, column: 2, scope: !8869)
!8880 = !DILocation(line: 330, column: 8, scope: !8869)
!8881 = !DILocation(line: 333, column: 34, scope: !8869)
!8882 = !DILocation(line: 339, column: 1, scope: !8869)
!8883 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1347, file: !1347, line: 45, type: !8884, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8892)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{null, !8886, !102}
!8886 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !376, line: 103, baseType: !8887)
!8887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8888, size: 32)
!8888 = !DISubroutineType(types: !8889)
!8889 = !{null, !8890, !102}
!8890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8891, size: 32)
!8891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!8892 = !{!8893, !8894}
!8893 = !DILocalVariable(name: "user_cb", arg: 1, scope: !8883, file: !1347, line: 45, type: !8886)
!8894 = !DILocalVariable(name: "user_data", arg: 2, scope: !8883, file: !1347, line: 45, type: !102)
!8895 = !DILocation(line: 0, scope: !8883)
!8896 = !DILocation(line: 71, column: 1, scope: !8883)
!8897 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1347, file: !1347, line: 73, type: !8884, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8898)
!8898 = !{!8899, !8900}
!8899 = !DILocalVariable(name: "user_cb", arg: 1, scope: !8897, file: !1347, line: 73, type: !8886)
!8900 = !DILocalVariable(name: "user_data", arg: 2, scope: !8897, file: !1347, line: 73, type: !102)
!8901 = !DILocation(line: 0, scope: !8897)
!8902 = !DILocation(line: 95, column: 1, scope: !8897)
!8903 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1347, file: !1347, line: 97, type: !6559, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !162)
!8904 = !DILocation(line: 1031, column: 3, scope: !8905, inlinedAt: !8908)
!8905 = distinct !DISubprogram(name: "__get_IPSR", scope: !5805, file: !5805, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8906)
!8906 = !{!8907}
!8907 = !DILocalVariable(name: "result", scope: !8905, file: !5805, line: 1029, type: !137)
!8908 = distinct !DILocation(line: 48, column: 10, scope: !8909, inlinedAt: !8910)
!8909 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6558, file: !6558, line: 46, type: !6559, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !162)
!8910 = distinct !DILocation(line: 99, column: 9, scope: !8903)
!8911 = !{i64 1585426}
!8912 = !DILocation(line: 0, scope: !8905, inlinedAt: !8908)
!8913 = !DILocation(line: 48, column: 9, scope: !8909, inlinedAt: !8910)
!8914 = !DILocation(line: 99, column: 2, scope: !8903)
!8915 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1347, file: !1347, line: 106, type: !646, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !162)
!8916 = !DILocation(line: 108, column: 2, scope: !8915)
!8917 = !DILocation(line: 108, column: 17, scope: !8915)
!8918 = !DILocation(line: 108, column: 30, scope: !8915)
!8919 = !DILocation(line: 109, column: 1, scope: !8915)
!8920 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1347, file: !1347, line: 116, type: !646, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !162)
!8921 = !DILocation(line: 118, column: 2, scope: !8920)
!8922 = !DILocation(line: 118, column: 17, scope: !8920)
!8923 = !DILocation(line: 118, column: 30, scope: !8920)
!8924 = !DILocation(line: 119, column: 1, scope: !8920)
!8925 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1347, file: !1347, line: 126, type: !6559, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !162)
!8926 = !DILocation(line: 128, column: 10, scope: !8925)
!8927 = !DILocation(line: 128, column: 25, scope: !8925)
!8928 = !DILocation(line: 128, column: 38, scope: !8925)
!8929 = !DILocation(line: 128, column: 53, scope: !8925)
!8930 = !DILocation(line: 128, column: 2, scope: !8925)
!8931 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1347, file: !1347, line: 187, type: !8932, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8934)
!8932 = !DISubroutineType(types: !8933)
!8933 = !{!103, !1351, !247}
!8934 = !{!8935, !8936}
!8935 = !DILocalVariable(name: "thread", arg: 1, scope: !8931, file: !1347, line: 187, type: !1351)
!8936 = !DILocalVariable(name: "value", arg: 2, scope: !8931, file: !1347, line: 187, type: !247)
!8937 = !DILocation(line: 0, scope: !8931)
!8938 = !DILocation(line: 206, column: 2, scope: !8931)
!8939 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1347, file: !1347, line: 238, type: !8940, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8942)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!247, !1351}
!8942 = !{!8943}
!8943 = !DILocalVariable(name: "thread", arg: 1, scope: !8939, file: !1347, line: 238, type: !1351)
!8944 = !DILocation(line: 0, scope: !8939)
!8945 = !DILocation(line: 244, column: 2, scope: !8939)
!8946 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1347, file: !1347, line: 248, type: !8947, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8949)
!8947 = !DISubroutineType(types: !8948)
!8948 = !{!103, !1350, !1131, !120}
!8949 = !{!8950, !8951, !8952}
!8950 = !DILocalVariable(name: "thread", arg: 1, scope: !8946, file: !1347, line: 248, type: !1350)
!8951 = !DILocalVariable(name: "buf", arg: 2, scope: !8946, file: !1347, line: 248, type: !1131)
!8952 = !DILocalVariable(name: "size", arg: 3, scope: !8946, file: !1347, line: 248, type: !120)
!8953 = !DILocation(line: 0, scope: !8946)
!8954 = !DILocation(line: 257, column: 2, scope: !8946)
!8955 = !DILocation(line: 0, scope: !1346)
!8956 = !DILocation(line: 281, column: 11, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !1346, file: !1347, line: 281, column: 6)
!8958 = !DILocation(line: 281, column: 20, scope: !8957)
!8959 = !DILocation(line: 275, column: 45, scope: !1346)
!8960 = !DILocation(line: 285, column: 10, scope: !1346)
!8961 = !DILocation(line: 0, scope: !1468)
!8962 = !DILocation(line: 293, column: 39, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !1468, file: !1347, line: 293, column: 2)
!8964 = !DILocation(line: 293, column: 2, scope: !1468)
!8965 = !DILocation(line: 273, column: 14, scope: !1346)
!8966 = !DILocation(line: 309, column: 2, scope: !1346)
!8967 = !DILocation(line: 309, column: 11, scope: !1346)
!8968 = !DILocation(line: 311, column: 2, scope: !1346)
!8969 = !DILocation(line: 293, column: 26, scope: !8963)
!8970 = !DILocation(line: 294, column: 9, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8963, file: !1347, line: 293, column: 54)
!8972 = !DILocation(line: 295, column: 21, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8971, file: !1347, line: 295, column: 7)
!8974 = !DILocation(line: 295, column: 28, scope: !8973)
!8975 = !DILocation(line: 295, column: 7, scope: !8971)
!8976 = !DILocation(line: 299, column: 25, scope: !8971)
!8977 = !DILocation(line: 299, column: 41, scope: !8971)
!8978 = !DILocation(line: 300, column: 7, scope: !8971)
!8979 = !DILocation(line: 300, column: 26, scope: !8971)
!8980 = !DILocation(line: 299, column: 10, scope: !8971)
!8981 = !DILocation(line: 299, column: 7, scope: !8971)
!8982 = !DILocation(line: 302, column: 16, scope: !8971)
!8983 = !DILocation(line: 304, column: 20, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8971, file: !1347, line: 304, column: 7)
!8985 = !DILocation(line: 304, column: 7, scope: !8971)
!8986 = !DILocation(line: 305, column: 26, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8984, file: !1347, line: 304, column: 26)
!8988 = !DILocation(line: 305, column: 42, scope: !8987)
!8989 = !DILocation(line: 305, column: 11, scope: !8987)
!8990 = !DILocation(line: 305, column: 8, scope: !8987)
!8991 = !DILocation(line: 306, column: 3, scope: !8987)
!8992 = !DILocation(line: 293, column: 50, scope: !8963)
!8993 = !DILocation(line: 312, column: 1, scope: !1346)
!8994 = distinct !DISubprogram(name: "copy_bytes", scope: !1347, file: !1347, line: 261, type: !8995, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{!120, !1131, !120, !247, !120}
!8997 = !{!8998, !8999, !9000, !9001, !9002}
!8998 = !DILocalVariable(name: "dest", arg: 1, scope: !8994, file: !1347, line: 261, type: !1131)
!8999 = !DILocalVariable(name: "dest_size", arg: 2, scope: !8994, file: !1347, line: 261, type: !120)
!9000 = !DILocalVariable(name: "src", arg: 3, scope: !8994, file: !1347, line: 261, type: !247)
!9001 = !DILocalVariable(name: "src_size", arg: 4, scope: !8994, file: !1347, line: 261, type: !120)
!9002 = !DILocalVariable(name: "bytes_to_copy", scope: !8994, file: !1347, line: 263, type: !120)
!9003 = !DILocation(line: 0, scope: !8994)
!9004 = !DILocation(line: 265, column: 18, scope: !8994)
!9005 = !DILocation(line: 266, column: 2, scope: !8994)
!9006 = !DILocation(line: 268, column: 2, scope: !8994)
!9007 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1347, file: !1347, line: 383, type: !9008, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9010)
!9008 = !DISubroutineType(types: !9009)
!9009 = !{null, !1351}
!9010 = !{!9011}
!9011 = !DILocalVariable(name: "thread", arg: 1, scope: !9007, file: !1347, line: 383, type: !1351)
!9012 = !DILocation(line: 0, scope: !9007)
!9013 = !DILocation(line: 387, column: 2, scope: !9007)
!9014 = !DILocation(line: 388, column: 1, scope: !9007)
!9015 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1347, file: !1347, line: 528, type: !9016, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9023)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{!1131, !1351, !9018, !120, !2412, !102, !102, !102, !103, !137, !247}
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 32)
!9019 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !2413, line: 44, baseType: !9020)
!9020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1301, line: 47, size: 8, elements: !9021)
!9021 = !{!9022}
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9020, file: !1301, line: 48, baseType: !109, size: 8)
!9023 = !{!9024, !9025, !9026, !9027, !9028, !9029, !9030, !9031, !9032, !9033, !9034}
!9024 = !DILocalVariable(name: "new_thread", arg: 1, scope: !9015, file: !1347, line: 528, type: !1351)
!9025 = !DILocalVariable(name: "stack", arg: 2, scope: !9015, file: !1347, line: 529, type: !9018)
!9026 = !DILocalVariable(name: "stack_size", arg: 3, scope: !9015, file: !1347, line: 529, type: !120)
!9027 = !DILocalVariable(name: "entry", arg: 4, scope: !9015, file: !1347, line: 530, type: !2412)
!9028 = !DILocalVariable(name: "p1", arg: 5, scope: !9015, file: !1347, line: 531, type: !102)
!9029 = !DILocalVariable(name: "p2", arg: 6, scope: !9015, file: !1347, line: 531, type: !102)
!9030 = !DILocalVariable(name: "p3", arg: 7, scope: !9015, file: !1347, line: 531, type: !102)
!9031 = !DILocalVariable(name: "prio", arg: 8, scope: !9015, file: !1347, line: 532, type: !103)
!9032 = !DILocalVariable(name: "options", arg: 9, scope: !9015, file: !1347, line: 532, type: !137)
!9033 = !DILocalVariable(name: "name", arg: 10, scope: !9015, file: !1347, line: 532, type: !247)
!9034 = !DILocalVariable(name: "stack_ptr", scope: !9015, file: !1347, line: 534, type: !1131)
!9035 = !DILocation(line: 0, scope: !9015)
!9036 = !DILocation(line: 550, column: 28, scope: !9015)
!9037 = !DILocation(line: 550, column: 2, scope: !9015)
!9038 = !DILocation(line: 553, column: 34, scope: !9015)
!9039 = !DILocation(line: 553, column: 2, scope: !9015)
!9040 = !DILocation(line: 554, column: 14, scope: !9015)
!9041 = !DILocation(line: 564, column: 2, scope: !9015)
!9042 = !DILocation(line: 567, column: 14, scope: !9015)
!9043 = !DILocation(line: 567, column: 24, scope: !9015)
!9044 = !DILocation(line: 612, column: 7, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9015, file: !1347, line: 612, column: 6)
!9046 = !DILocation(line: 612, column: 6, scope: !9015)
!9047 = !DILocation(line: 627, column: 40, scope: !9015)
!9048 = !DILocation(line: 637, column: 2, scope: !9015)
!9049 = !DILocation(line: 613, column: 15, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9045, file: !1347, line: 612, column: 17)
!9051 = !DILocation(line: 613, column: 29, scope: !9050)
!9052 = !DILocation(line: 638, column: 1, scope: !9015)
!9053 = distinct !DISubprogram(name: "z_waitq_init", scope: !9054, file: !9054, line: 47, type: !9055, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9057)
!9054 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9055 = !DISubroutineType(types: !9056)
!9056 = !{null, !1382}
!9057 = !{!9058}
!9058 = !DILocalVariable(name: "w", arg: 1, scope: !9053, file: !9054, line: 47, type: !1382)
!9059 = !DILocation(line: 0, scope: !9053)
!9060 = !DILocation(line: 49, column: 21, scope: !9053)
!9061 = !DILocation(line: 49, column: 2, scope: !9053)
!9062 = !DILocation(line: 50, column: 1, scope: !9053)
!9063 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1347, file: !1347, line: 791, type: !9064, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9067)
!9064 = !DISubroutineType(types: !9065)
!9065 = !{null, !9066, !103, !137, !32}
!9066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!9067 = !{!9068, !9069, !9070, !9071}
!9068 = !DILocalVariable(name: "thread_base", arg: 1, scope: !9063, file: !1347, line: 791, type: !9066)
!9069 = !DILocalVariable(name: "priority", arg: 2, scope: !9063, file: !1347, line: 791, type: !103)
!9070 = !DILocalVariable(name: "initial_state", arg: 3, scope: !9063, file: !1347, line: 792, type: !137)
!9071 = !DILocalVariable(name: "options", arg: 4, scope: !9063, file: !1347, line: 792, type: !32)
!9072 = !DILocation(line: 0, scope: !9063)
!9073 = !DILocation(line: 795, column: 15, scope: !9063)
!9074 = !DILocation(line: 795, column: 25, scope: !9063)
!9075 = !DILocation(line: 796, column: 30, scope: !9063)
!9076 = !DILocation(line: 796, column: 15, scope: !9063)
!9077 = !DILocation(line: 796, column: 28, scope: !9063)
!9078 = !DILocation(line: 797, column: 30, scope: !9063)
!9079 = !DILocation(line: 797, column: 15, scope: !9063)
!9080 = !DILocation(line: 797, column: 28, scope: !9063)
!9081 = !DILocation(line: 799, column: 22, scope: !9063)
!9082 = !DILocation(line: 799, column: 15, scope: !9063)
!9083 = !DILocation(line: 799, column: 20, scope: !9063)
!9084 = !DILocation(line: 801, column: 15, scope: !9063)
!9085 = !DILocation(line: 801, column: 28, scope: !9063)
!9086 = !DILocation(line: 814, column: 2, scope: !9063)
!9087 = !DILocation(line: 815, column: 1, scope: !9063)
!9088 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1347, file: !1347, line: 449, type: !9089, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9091)
!9089 = !DISubroutineType(types: !9090)
!9090 = !{!1131, !1351, !9018, !120}
!9091 = !{!9092, !9093, !9094, !9095, !9096, !9097, !9098, !9099}
!9092 = !DILocalVariable(name: "new_thread", arg: 1, scope: !9088, file: !1347, line: 449, type: !1351)
!9093 = !DILocalVariable(name: "stack", arg: 2, scope: !9088, file: !1347, line: 450, type: !9018)
!9094 = !DILocalVariable(name: "stack_size", arg: 3, scope: !9088, file: !1347, line: 450, type: !120)
!9095 = !DILocalVariable(name: "stack_obj_size", scope: !9088, file: !1347, line: 452, type: !120)
!9096 = !DILocalVariable(name: "stack_buf_size", scope: !9088, file: !1347, line: 452, type: !120)
!9097 = !DILocalVariable(name: "stack_ptr", scope: !9088, file: !1347, line: 453, type: !1131)
!9098 = !DILocalVariable(name: "stack_buf_start", scope: !9088, file: !1347, line: 453, type: !1131)
!9099 = !DILocalVariable(name: "delta", scope: !9088, file: !1347, line: 454, type: !120)
!9100 = !DILocation(line: 0, scope: !9088)
!9101 = !DILocation(line: 465, column: 20, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9088, file: !1347, line: 463, column: 2)
!9103 = !DILocation(line: 466, column: 21, scope: !9102)
!9104 = !DILocation(line: 473, column: 28, scope: !9088)
!9105 = !DILocation(line: 514, column: 33, scope: !9088)
!9106 = !DILocation(line: 514, column: 25, scope: !9088)
!9107 = !DILocation(line: 514, column: 31, scope: !9088)
!9108 = !DILocation(line: 515, column: 25, scope: !9088)
!9109 = !DILocation(line: 515, column: 30, scope: !9088)
!9110 = !DILocation(line: 516, column: 25, scope: !9088)
!9111 = !DILocation(line: 516, column: 31, scope: !9088)
!9112 = !DILocation(line: 520, column: 2, scope: !9088)
!9113 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1301, file: !1301, line: 331, type: !9114, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9116)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!1131, !9018}
!9116 = !{!9117}
!9117 = !DILocalVariable(name: "sym", arg: 1, scope: !9113, file: !1301, line: 331, type: !9018)
!9118 = !DILocation(line: 0, scope: !9113)
!9119 = !DILocation(line: 333, column: 21, scope: !9113)
!9120 = !DILocation(line: 333, column: 2, scope: !9113)
!9121 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !9122, file: !9122, line: 40, type: !9123, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9125)
!9122 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9123 = !DISubroutineType(types: !9124)
!9124 = !{null, !9066}
!9125 = !{!9126}
!9126 = !DILocalVariable(name: "thread_base", arg: 1, scope: !9121, file: !9122, line: 40, type: !9066)
!9127 = !DILocation(line: 0, scope: !9121)
!9128 = !DILocation(line: 42, column: 31, scope: !9121)
!9129 = !DILocation(line: 42, column: 2, scope: !9121)
!9130 = !DILocation(line: 43, column: 1, scope: !9121)
!9131 = distinct !DISubprogram(name: "z_init_timeout", scope: !9122, file: !9122, line: 25, type: !1408, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9132)
!9132 = !{!9133}
!9133 = !DILocalVariable(name: "to", arg: 1, scope: !9131, file: !9122, line: 25, type: !1410)
!9134 = !DILocation(line: 0, scope: !9131)
!9135 = !DILocation(line: 27, column: 22, scope: !9131)
!9136 = !DILocation(line: 27, column: 2, scope: !9131)
!9137 = !DILocation(line: 28, column: 1, scope: !9131)
!9138 = distinct !DISubprogram(name: "sys_dnode_init", scope: !292, file: !292, line: 211, type: !9139, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9141)
!9139 = !DISubroutineType(types: !9140)
!9140 = !{null, !1454}
!9141 = !{!9142}
!9142 = !DILocalVariable(name: "node", arg: 1, scope: !9138, file: !292, line: 211, type: !1454)
!9143 = !DILocation(line: 0, scope: !9138)
!9144 = !DILocation(line: 213, column: 8, scope: !9138)
!9145 = !DILocation(line: 213, column: 13, scope: !9138)
!9146 = !DILocation(line: 214, column: 8, scope: !9138)
!9147 = !DILocation(line: 214, column: 13, scope: !9138)
!9148 = !DILocation(line: 215, column: 1, scope: !9138)
!9149 = distinct !DISubprogram(name: "sys_dlist_init", scope: !292, file: !292, line: 197, type: !9150, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9153)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{null, !9152}
!9152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!9153 = !{!9154}
!9154 = !DILocalVariable(name: "list", arg: 1, scope: !9149, file: !292, line: 197, type: !9152)
!9155 = !DILocation(line: 0, scope: !9149)
!9156 = !DILocation(line: 199, column: 8, scope: !9149)
!9157 = !DILocation(line: 199, column: 13, scope: !9149)
!9158 = !DILocation(line: 200, column: 8, scope: !9149)
!9159 = !DILocation(line: 200, column: 13, scope: !9149)
!9160 = !DILocation(line: 201, column: 1, scope: !9149)
!9161 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1347, file: !1347, line: 641, type: !9162, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9168)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!1350, !1351, !9018, !120, !2412, !102, !102, !102, !103, !137, !9164}
!9164 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !899, line: 67, baseType: !9165)
!9165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 65, size: 64, elements: !9166)
!9166 = !{!9167}
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9165, file: !899, line: 66, baseType: !898, size: 64)
!9168 = !{!9169, !9170, !9171, !9172, !9173, !9174, !9175, !9176, !9177, !9178}
!9169 = !DILocalVariable(name: "new_thread", arg: 1, scope: !9161, file: !1347, line: 641, type: !1351)
!9170 = !DILocalVariable(name: "stack", arg: 2, scope: !9161, file: !1347, line: 642, type: !9018)
!9171 = !DILocalVariable(name: "stack_size", arg: 3, scope: !9161, file: !1347, line: 643, type: !120)
!9172 = !DILocalVariable(name: "entry", arg: 4, scope: !9161, file: !1347, line: 643, type: !2412)
!9173 = !DILocalVariable(name: "p1", arg: 5, scope: !9161, file: !1347, line: 644, type: !102)
!9174 = !DILocalVariable(name: "p2", arg: 6, scope: !9161, file: !1347, line: 644, type: !102)
!9175 = !DILocalVariable(name: "p3", arg: 7, scope: !9161, file: !1347, line: 644, type: !102)
!9176 = !DILocalVariable(name: "prio", arg: 8, scope: !9161, file: !1347, line: 645, type: !103)
!9177 = !DILocalVariable(name: "options", arg: 9, scope: !9161, file: !1347, line: 645, type: !137)
!9178 = !DILocalVariable(name: "delay", arg: 10, scope: !9161, file: !1347, line: 645, type: !9164)
!9179 = !DILocation(line: 0, scope: !9161)
!9180 = !DILocation(line: 649, column: 2, scope: !9161)
!9181 = !DILocation(line: 652, column: 7, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9161, file: !1347, line: 652, column: 6)
!9183 = !DILocation(line: 652, column: 6, scope: !9161)
!9184 = !DILocation(line: 653, column: 3, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9182, file: !1347, line: 652, column: 39)
!9186 = !DILocation(line: 654, column: 2, scope: !9185)
!9187 = !DILocation(line: 656, column: 2, scope: !9161)
!9188 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1347, file: !1347, line: 401, type: !9189, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9191)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{null, !1351, !9164}
!9191 = !{!9192, !9193}
!9192 = !DILocalVariable(name: "thread", arg: 1, scope: !9188, file: !1347, line: 401, type: !1351)
!9193 = !DILocalVariable(name: "delay", arg: 2, scope: !9188, file: !1347, line: 401, type: !9164)
!9194 = !DILocation(line: 0, scope: !9188)
!9195 = !DILocation(line: 404, column: 6, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9188, file: !1347, line: 404, column: 6)
!9197 = !DILocation(line: 404, column: 6, scope: !9188)
!9198 = !DILocation(line: 405, column: 3, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9196, file: !1347, line: 404, column: 38)
!9200 = !DILocation(line: 406, column: 2, scope: !9199)
!9201 = !DILocation(line: 407, column: 3, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9196, file: !1347, line: 406, column: 9)
!9203 = !DILocation(line: 413, column: 1, scope: !9188)
!9204 = distinct !DISubprogram(name: "k_thread_start", scope: !2534, file: !2534, line: 205, type: !9205, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9207)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{null, !1350}
!9207 = !{!9208}
!9208 = !DILocalVariable(name: "thread", arg: 1, scope: !9204, file: !2534, line: 205, type: !1350)
!9209 = !DILocation(line: 0, scope: !9204)
!9210 = !DILocation(line: 214, column: 2, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9204, file: !2534, line: 214, column: 2)
!9212 = !{i64 2151114680}
!9213 = !DILocation(line: 215, column: 2, scope: !9204)
!9214 = !DILocation(line: 216, column: 1, scope: !9204)
!9215 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !9122, file: !9122, line: 47, type: !9189, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9216)
!9216 = !{!9217, !9218}
!9217 = !DILocalVariable(name: "thread", arg: 1, scope: !9215, file: !9122, line: 47, type: !1351)
!9218 = !DILocalVariable(name: "ticks", arg: 2, scope: !9215, file: !9122, line: 47, type: !9164)
!9219 = !DILocation(line: 0, scope: !9215)
!9220 = !DILocation(line: 49, column: 30, scope: !9215)
!9221 = !DILocation(line: 49, column: 2, scope: !9215)
!9222 = !DILocation(line: 50, column: 1, scope: !9215)
!9223 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1347, file: !1347, line: 748, type: !646, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9224)
!9224 = !{!9225, !9243}
!9225 = !DILocalVariable(name: "thread_data", scope: !9226, file: !1347, line: 750, type: !9227)
!9226 = distinct !DILexicalBlock(scope: !9223, file: !1347, line: 750, column: 2)
!9227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9228, size: 32)
!9228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !376, line: 620, size: 384, elements: !9229)
!9229 = !{!9230, !9231, !9232, !9233, !9234, !9235, !9236, !9237, !9238, !9239, !9240, !9242}
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !9228, file: !376, line: 621, baseType: !1351, size: 32)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !9228, file: !376, line: 622, baseType: !9018, size: 32, offset: 32)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !9228, file: !376, line: 623, baseType: !32, size: 32, offset: 64)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !9228, file: !376, line: 624, baseType: !2412, size: 32, offset: 96)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !9228, file: !376, line: 625, baseType: !102, size: 32, offset: 128)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !9228, file: !376, line: 626, baseType: !102, size: 32, offset: 160)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !9228, file: !376, line: 627, baseType: !102, size: 32, offset: 192)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !9228, file: !376, line: 628, baseType: !103, size: 32, offset: 224)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !9228, file: !376, line: 629, baseType: !137, size: 32, offset: 256)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !9228, file: !376, line: 630, baseType: !651, size: 32, offset: 288)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !9228, file: !376, line: 631, baseType: !9241, size: 32, offset: 320)
!9241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !9228, file: !376, line: 632, baseType: !247, size: 32, offset: 352)
!9243 = !DILocalVariable(name: "thread_data", scope: !9244, file: !1347, line: 781, type: !9227)
!9244 = distinct !DILexicalBlock(scope: !9223, file: !1347, line: 781, column: 2)
!9245 = !DILocation(line: 0, scope: !9226)
!9246 = !DILocation(line: 750, column: 2, scope: !9226)
!9247 = !DILocation(line: 780, column: 2, scope: !9223)
!9248 = !DILocation(line: 0, scope: !9244)
!9249 = !DILocation(line: 781, column: 2, scope: !9244)
!9250 = !DILocation(line: 752, column: 17, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !1347, line: 750, column: 38)
!9252 = distinct !DILexicalBlock(scope: !9226, file: !1347, line: 750, column: 2)
!9253 = !DILocation(line: 753, column: 17, scope: !9251)
!9254 = !DILocation(line: 754, column: 17, scope: !9251)
!9255 = !DILocation(line: 755, column: 17, scope: !9251)
!9256 = !DILocation(line: 756, column: 17, scope: !9251)
!9257 = !DILocation(line: 757, column: 17, scope: !9251)
!9258 = !DILocation(line: 758, column: 17, scope: !9251)
!9259 = !DILocation(line: 759, column: 17, scope: !9251)
!9260 = !DILocation(line: 760, column: 17, scope: !9251)
!9261 = !DILocation(line: 751, column: 3, scope: !9251)
!9262 = !DILocation(line: 763, column: 16, scope: !9251)
!9263 = !DILocation(line: 763, column: 29, scope: !9251)
!9264 = !DILocation(line: 763, column: 39, scope: !9251)
!9265 = !DILocation(line: 750, column: 2, scope: !9252)
!9266 = !DILocation(line: 750, column: 2, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9252, file: !1347, line: 750, column: 2)
!9268 = distinct !{!9268, !9246, !9269}
!9269 = !DILocation(line: 764, column: 2, scope: !9226)
!9270 = !DILocation(line: 787, column: 2, scope: !9223)
!9271 = !DILocation(line: 788, column: 1, scope: !9223)
!9272 = !DILocation(line: 782, column: 20, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !1347, line: 782, column: 7)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !1347, line: 781, column: 38)
!9275 = distinct !DILexicalBlock(scope: !9244, file: !1347, line: 781, column: 2)
!9276 = !DILocation(line: 782, column: 31, scope: !9273)
!9277 = !DILocation(line: 782, column: 7, scope: !9274)
!9278 = !DILocation(line: 783, column: 37, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9273, file: !1347, line: 782, column: 51)
!9280 = !DILocation(line: 784, column: 10, scope: !9279)
!9281 = !DILocation(line: 783, column: 4, scope: !9279)
!9282 = !DILocation(line: 785, column: 3, scope: !9279)
!9283 = !DILocation(line: 781, column: 2, scope: !9275)
!9284 = !DILocation(line: 781, column: 2, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9275, file: !1347, line: 781, column: 2)
!9286 = distinct !{!9286, !9249, !9287}
!9287 = !DILocation(line: 786, column: 2, scope: !9244)
!9288 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !9289, file: !9289, line: 403, type: !9290, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9292)
!9289 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9290 = !DISubroutineType(types: !9291)
!9291 = !{!163, !163}
!9292 = !{!9293}
!9293 = !DILocalVariable(name: "t", arg: 1, scope: !9288, file: !9289, line: 403, type: !163)
!9294 = !DILocation(line: 0, scope: !9288)
!9295 = !DILocalVariable(name: "t", arg: 1, scope: !9296, file: !9289, line: 102, type: !163)
!9296 = distinct !DISubprogram(name: "z_tmcvt", scope: !9289, file: !9289, line: 102, type: !9297, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9299)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!163, !163, !137, !137, !259, !259, !259, !259}
!9299 = !{!9295, !9300, !9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309}
!9300 = !DILocalVariable(name: "from_hz", arg: 2, scope: !9296, file: !9289, line: 102, type: !137)
!9301 = !DILocalVariable(name: "to_hz", arg: 3, scope: !9296, file: !9289, line: 103, type: !137)
!9302 = !DILocalVariable(name: "const_hz", arg: 4, scope: !9296, file: !9289, line: 103, type: !259)
!9303 = !DILocalVariable(name: "result32", arg: 5, scope: !9296, file: !9289, line: 104, type: !259)
!9304 = !DILocalVariable(name: "round_up", arg: 6, scope: !9296, file: !9289, line: 104, type: !259)
!9305 = !DILocalVariable(name: "round_off", arg: 7, scope: !9296, file: !9289, line: 105, type: !259)
!9306 = !DILocalVariable(name: "mul_ratio", scope: !9296, file: !9289, line: 107, type: !259)
!9307 = !DILocalVariable(name: "div_ratio", scope: !9296, file: !9289, line: 109, type: !259)
!9308 = !DILocalVariable(name: "off", scope: !9296, file: !9289, line: 116, type: !163)
!9309 = !DILocalVariable(name: "rdivisor", scope: !9310, file: !9289, line: 119, type: !137)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !9289, line: 118, column: 18)
!9311 = distinct !DILexicalBlock(scope: !9296, file: !9289, line: 118, column: 6)
!9312 = !DILocation(line: 0, scope: !9296, inlinedAt: !9313)
!9313 = distinct !DILocation(line: 406, column: 9, scope: !9288)
!9314 = !DILocation(line: 145, column: 13, scope: !9315, inlinedAt: !9313)
!9315 = distinct !DILexicalBlock(scope: !9316, file: !9289, line: 144, column: 10)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !9289, line: 142, column: 7)
!9317 = distinct !DILexicalBlock(scope: !9318, file: !9289, line: 141, column: 24)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !9289, line: 141, column: 13)
!9319 = distinct !DILexicalBlock(scope: !9296, file: !9289, line: 134, column: 6)
!9320 = !DILocation(line: 406, column: 2, scope: !9288)
!9321 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1347, file: !1347, line: 817, type: !2410, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9322)
!9322 = !{!9323, !9324, !9325, !9326}
!9323 = !DILocalVariable(name: "entry", arg: 1, scope: !9321, file: !1347, line: 817, type: !2412)
!9324 = !DILocalVariable(name: "p1", arg: 2, scope: !9321, file: !1347, line: 818, type: !102)
!9325 = !DILocalVariable(name: "p2", arg: 3, scope: !9321, file: !1347, line: 818, type: !102)
!9326 = !DILocalVariable(name: "p3", arg: 4, scope: !9321, file: !1347, line: 818, type: !102)
!9327 = !DILocation(line: 0, scope: !9321)
!9328 = !DILocation(line: 822, column: 2, scope: !9321)
!9329 = !DILocation(line: 822, column: 17, scope: !9321)
!9330 = !DILocation(line: 822, column: 30, scope: !9321)
!9331 = !DILocation(line: 823, column: 2, scope: !9321)
!9332 = !DILocation(line: 845, column: 2, scope: !9321)
!9333 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1347, file: !1347, line: 888, type: !9334, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9336)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!103, !1351}
!9336 = !{!9337}
!9337 = !DILocalVariable(name: "thread", arg: 1, scope: !9333, file: !1347, line: 888, type: !1351)
!9338 = !DILocation(line: 0, scope: !9333)
!9339 = !DILocation(line: 893, column: 2, scope: !9333)
!9340 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1347, file: !1347, line: 897, type: !9341, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9343)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!103, !1351, !32}
!9343 = !{!9344, !9345}
!9344 = !DILocalVariable(name: "thread", arg: 1, scope: !9340, file: !1347, line: 897, type: !1351)
!9345 = !DILocalVariable(name: "options", arg: 2, scope: !9340, file: !1347, line: 897, type: !32)
!9346 = !DILocation(line: 0, scope: !9340)
!9347 = !DILocation(line: 902, column: 2, scope: !9340)
!9348 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1347, file: !1347, line: 1072, type: !9349, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9354)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!103, !1350, !9351}
!9351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9352, size: 32)
!9352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !282, line: 234, baseType: !9353)
!9353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !282, line: 192, elements: !162)
!9354 = !{!9355, !9356}
!9355 = !DILocalVariable(name: "thread", arg: 1, scope: !9348, file: !1347, line: 1072, type: !1350)
!9356 = !DILocalVariable(name: "stats", arg: 2, scope: !9348, file: !1347, line: 1073, type: !9351)
!9357 = !DILocation(line: 0, scope: !9348)
!9358 = !DILocation(line: 1075, column: 14, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9348, file: !1347, line: 1075, column: 6)
!9360 = !DILocation(line: 1075, column: 23, scope: !9359)
!9361 = !DILocation(line: 1086, column: 1, scope: !9348)
!9362 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1347, file: !1347, line: 1088, type: !9363, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !9365)
!9363 = !DISubroutineType(types: !9364)
!9364 = !{!103, !9351}
!9365 = !{!9366}
!9366 = !DILocalVariable(name: "stats", arg: 1, scope: !9362, file: !1347, line: 1088, type: !9351)
!9367 = !DILocation(line: 0, scope: !9362)
!9368 = !DILocation(line: 1094, column: 12, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9362, file: !1347, line: 1094, column: 6)
!9370 = !DILocation(line: 1120, column: 1, scope: !9362)
!9371 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !9372, file: !9372, line: 20, type: !646, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!9372 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9373 = !DILocation(line: 30, column: 2, scope: !9371)
!9374 = !DILocation(line: 31, column: 1, scope: !9371)
!9375 = distinct !DISubprogram(name: "idle", scope: !9372, file: !9372, line: 33, type: !2415, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !9376)
!9376 = !{!9377, !9378, !9379}
!9377 = !DILocalVariable(name: "unused1", arg: 1, scope: !9375, file: !9372, line: 33, type: !102)
!9378 = !DILocalVariable(name: "unused2", arg: 2, scope: !9375, file: !9372, line: 33, type: !102)
!9379 = !DILocalVariable(name: "unused3", arg: 3, scope: !9375, file: !9372, line: 33, type: !102)
!9380 = !DILocation(line: 0, scope: !9375)
!9381 = !DILocation(line: 41, column: 2, scope: !9375)
!9382 = !DILocation(line: 55, column: 2, scope: !9383, inlinedAt: !9387)
!9383 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5308, file: !5308, line: 42, type: !5309, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !9384)
!9384 = !{!9385, !9386}
!9385 = !DILocalVariable(name: "key", scope: !9383, file: !5308, line: 44, type: !32)
!9386 = !DILocalVariable(name: "tmp", scope: !9383, file: !5308, line: 53, type: !32)
!9387 = distinct !DILocation(line: 62, column: 10, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9375, file: !9372, line: 41, column: 15)
!9389 = !{i64 1320352}
!9390 = !DILocation(line: 0, scope: !9383, inlinedAt: !9387)
!9391 = !DILocation(line: 86, column: 3, scope: !9388)
!9392 = distinct !{!9392, !9381, !9393}
!9393 = !DILocation(line: 105, column: 2, scope: !9375)
!9394 = distinct !DISubprogram(name: "k_cpu_idle", scope: !376, file: !376, line: 5627, type: !646, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2067, retainedNodes: !162)
!9395 = !DILocation(line: 5629, column: 2, scope: !9394)
!9396 = !DILocation(line: 5630, column: 1, scope: !9394)
!9397 = !DISubprogram(name: "arch_cpu_idle", scope: !2413, file: !2413, line: 167, type: !646, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!9398 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !1580, file: !1580, line: 93, type: !9399, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9401)
!9399 = !DISubroutineType(types: !9400)
!9400 = !{!651, !1475, !1475}
!9401 = !{!9402, !9403, !9404, !9405}
!9402 = !DILocalVariable(name: "thread_1", arg: 1, scope: !9398, file: !1580, line: 93, type: !1475)
!9403 = !DILocalVariable(name: "thread_2", arg: 2, scope: !9398, file: !1580, line: 94, type: !1475)
!9404 = !DILocalVariable(name: "b1", scope: !9398, file: !1580, line: 97, type: !651)
!9405 = !DILocalVariable(name: "b2", scope: !9398, file: !1580, line: 98, type: !651)
!9406 = !DILocation(line: 0, scope: !9398)
!9407 = !DILocation(line: 97, column: 30, scope: !9398)
!9408 = !DILocation(line: 98, column: 30, scope: !9398)
!9409 = !DILocation(line: 100, column: 9, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9398, file: !1580, line: 100, column: 6)
!9411 = !DILocation(line: 100, column: 6, scope: !9398)
!9412 = !DILocation(line: 125, column: 1, scope: !9398)
!9413 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !1580, file: !1580, line: 428, type: !9414, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9416)
!9414 = !DISubroutineType(types: !9415)
!9415 = !{null, !1475}
!9416 = !{!9417}
!9417 = !DILocalVariable(name: "curr", arg: 1, scope: !9413, file: !1580, line: 428, type: !1475)
!9418 = !DILocation(line: 0, scope: !9413)
!9419 = !DILocation(line: 434, column: 6, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9413, file: !1580, line: 434, column: 6)
!9421 = !DILocation(line: 434, column: 23, scope: !9420)
!9422 = !DILocation(line: 434, column: 6, scope: !9413)
!9423 = !DILocation(line: 435, column: 50, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9420, file: !1580, line: 434, column: 29)
!9425 = !DILocation(line: 435, column: 48, scope: !9424)
!9426 = !DILocation(line: 435, column: 29, scope: !9424)
!9427 = !DILocation(line: 436, column: 24, scope: !9424)
!9428 = !DILocation(line: 436, column: 3, scope: !9424)
!9429 = !DILocation(line: 437, column: 2, scope: !9424)
!9430 = !DILocation(line: 438, column: 1, scope: !9413)
!9431 = distinct !DISubprogram(name: "slice_time", scope: !1580, file: !1580, line: 407, type: !9432, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9434)
!9432 = !DISubroutineType(types: !9433)
!9433 = !{!103, !1475}
!9434 = !{!9435, !9436}
!9435 = !DILocalVariable(name: "curr", arg: 1, scope: !9431, file: !1580, line: 407, type: !1475)
!9436 = !DILocalVariable(name: "ret", scope: !9431, file: !1580, line: 409, type: !103)
!9437 = !DILocation(line: 0, scope: !9431)
!9438 = !DILocation(line: 409, column: 12, scope: !9431)
!9439 = !DILocation(line: 416, column: 2, scope: !9431)
!9440 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !1580, file: !1580, line: 440, type: !9441, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{null, !651, !103}
!9443 = !{!9444, !9445, !9446, !9452}
!9444 = !DILocalVariable(name: "slice", arg: 1, scope: !9440, file: !1580, line: 440, type: !651)
!9445 = !DILocalVariable(name: "prio", arg: 2, scope: !9440, file: !1580, line: 440, type: !103)
!9446 = !DILocalVariable(name: "__i", scope: !9447, file: !1580, line: 442, type: !9448)
!9447 = distinct !DILexicalBlock(scope: !9440, file: !1580, line: 442, column: 2)
!9448 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !387, line: 106, baseType: !9449)
!9449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !387, line: 32, size: 32, elements: !9450)
!9450 = !{!9451}
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9449, file: !387, line: 33, baseType: !103, size: 32)
!9452 = !DILocalVariable(name: "__key", scope: !9447, file: !1580, line: 442, type: !9448)
!9453 = !DILocation(line: 0, scope: !9440)
!9454 = !DILocation(line: 0, scope: !9447)
!9455 = !DILocalVariable(name: "l", arg: 1, scope: !9456, file: !387, line: 136, type: !9459)
!9456 = distinct !DISubprogram(name: "k_spin_lock", scope: !387, file: !387, line: 136, type: !9457, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9460)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{!9448, !9459}
!9459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!9460 = !{!9455, !9461}
!9461 = !DILocalVariable(name: "k", scope: !9456, file: !387, line: 139, type: !9448)
!9462 = !DILocation(line: 0, scope: !9456, inlinedAt: !9463)
!9463 = distinct !DILocation(line: 442, column: 2, scope: !9447)
!9464 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !9469)
!9465 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5308, file: !5308, line: 42, type: !5309, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9466)
!9466 = !{!9467, !9468}
!9467 = !DILocalVariable(name: "key", scope: !9465, file: !5308, line: 44, type: !32)
!9468 = !DILocalVariable(name: "tmp", scope: !9465, file: !5308, line: 53, type: !32)
!9469 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !9463)
!9470 = !{i64 1364323}
!9471 = !DILocation(line: 0, scope: !9465, inlinedAt: !9469)
!9472 = !DILocation(line: 443, column: 29, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9474, file: !1580, line: 442, column: 26)
!9474 = distinct !DILexicalBlock(scope: !9447, file: !1580, line: 442, column: 2)
!9475 = !DILocation(line: 444, column: 17, scope: !9473)
!9476 = !DILocation(line: 445, column: 51, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9473, file: !1580, line: 445, column: 7)
!9478 = !DILocation(line: 445, column: 7, scope: !9473)
!9479 = !DILocation(line: 0, scope: !9473)
!9480 = !DILocation(line: 451, column: 18, scope: !9473)
!9481 = !DILocation(line: 452, column: 3, scope: !9473)
!9482 = !DILocalVariable(name: "key", arg: 2, scope: !9483, file: !387, line: 190, type: !9448)
!9483 = distinct !DISubprogram(name: "k_spin_unlock", scope: !387, file: !387, line: 189, type: !9484, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9486)
!9484 = !DISubroutineType(types: !9485)
!9485 = !{null, !9459, !9448}
!9486 = !{!9487, !9482}
!9487 = !DILocalVariable(name: "l", arg: 1, scope: !9483, file: !387, line: 189, type: !9459)
!9488 = !DILocation(line: 0, scope: !9483, inlinedAt: !9489)
!9489 = distinct !DILocation(line: 442, column: 2, scope: !9474)
!9490 = !DILocalVariable(name: "key", arg: 1, scope: !9491, file: !5308, line: 84, type: !32)
!9491 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9492)
!9492 = !{!9490}
!9493 = !DILocation(line: 0, scope: !9491, inlinedAt: !9494)
!9494 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !9489)
!9495 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !9494)
!9496 = !{i64 1365140}
!9497 = !DILocation(line: 454, column: 1, scope: !9440)
!9498 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !9289, file: !9289, line: 389, type: !5428, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9499)
!9499 = !{!9500}
!9500 = !DILocalVariable(name: "t", arg: 1, scope: !9498, file: !9289, line: 389, type: !137)
!9501 = !DILocation(line: 0, scope: !9498)
!9502 = !DILocalVariable(name: "t", arg: 1, scope: !9503, file: !9289, line: 102, type: !163)
!9503 = distinct !DISubprogram(name: "z_tmcvt", scope: !9289, file: !9289, line: 102, type: !9297, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9504)
!9504 = !{!9502, !9505, !9506, !9507, !9508, !9509, !9510, !9511, !9512, !9513, !9514}
!9505 = !DILocalVariable(name: "from_hz", arg: 2, scope: !9503, file: !9289, line: 102, type: !137)
!9506 = !DILocalVariable(name: "to_hz", arg: 3, scope: !9503, file: !9289, line: 103, type: !137)
!9507 = !DILocalVariable(name: "const_hz", arg: 4, scope: !9503, file: !9289, line: 103, type: !259)
!9508 = !DILocalVariable(name: "result32", arg: 5, scope: !9503, file: !9289, line: 104, type: !259)
!9509 = !DILocalVariable(name: "round_up", arg: 6, scope: !9503, file: !9289, line: 104, type: !259)
!9510 = !DILocalVariable(name: "round_off", arg: 7, scope: !9503, file: !9289, line: 105, type: !259)
!9511 = !DILocalVariable(name: "mul_ratio", scope: !9503, file: !9289, line: 107, type: !259)
!9512 = !DILocalVariable(name: "div_ratio", scope: !9503, file: !9289, line: 109, type: !259)
!9513 = !DILocalVariable(name: "off", scope: !9503, file: !9289, line: 116, type: !163)
!9514 = !DILocalVariable(name: "rdivisor", scope: !9515, file: !9289, line: 119, type: !137)
!9515 = distinct !DILexicalBlock(scope: !9516, file: !9289, line: 118, column: 18)
!9516 = distinct !DILexicalBlock(scope: !9503, file: !9289, line: 118, column: 6)
!9517 = !DILocation(line: 0, scope: !9503, inlinedAt: !9518)
!9518 = distinct !DILocation(line: 392, column: 9, scope: !9498)
!9519 = !DILocation(line: 143, column: 25, scope: !9520, inlinedAt: !9518)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !9289, line: 142, column: 17)
!9521 = distinct !DILexicalBlock(scope: !9522, file: !9289, line: 142, column: 7)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !9289, line: 141, column: 24)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !9289, line: 141, column: 13)
!9524 = distinct !DILexicalBlock(scope: !9503, file: !9289, line: 134, column: 6)
!9525 = !DILocation(line: 392, column: 2, scope: !9498)
!9526 = distinct !DISubprogram(name: "z_time_slice", scope: !1580, file: !1580, line: 502, type: !8685, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9527)
!9527 = !{!9528, !9529}
!9528 = !DILocalVariable(name: "ticks", arg: 1, scope: !9526, file: !1580, line: 502, type: !103)
!9529 = !DILocalVariable(name: "key", scope: !9526, file: !1580, line: 511, type: !9448)
!9530 = !DILocation(line: 0, scope: !9526)
!9531 = !DILocation(line: 0, scope: !9456, inlinedAt: !9532)
!9532 = distinct !DILocation(line: 511, column: 25, scope: !9526)
!9533 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !9534)
!9534 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !9532)
!9535 = !DILocation(line: 0, scope: !9465, inlinedAt: !9534)
!9536 = !DILocation(line: 514, column: 6, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9526, file: !1580, line: 514, column: 6)
!9538 = !DILocation(line: 514, column: 25, scope: !9537)
!9539 = !DILocation(line: 514, column: 22, scope: !9537)
!9540 = !DILocation(line: 514, column: 6, scope: !9526)
!9541 = !DILocation(line: 515, column: 3, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9537, file: !1580, line: 514, column: 35)
!9543 = !DILocation(line: 0, scope: !9483, inlinedAt: !9544)
!9544 = distinct !DILocation(line: 516, column: 3, scope: !9542)
!9545 = !DILocation(line: 0, scope: !9491, inlinedAt: !9546)
!9546 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !9544)
!9547 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !9546)
!9548 = !DILocation(line: 517, column: 3, scope: !9542)
!9549 = !DILocation(line: 519, column: 18, scope: !9526)
!9550 = !DILocation(line: 522, column: 6, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9526, file: !1580, line: 522, column: 6)
!9552 = !DILocation(line: 522, column: 27, scope: !9551)
!9553 = !DILocation(line: 522, column: 30, scope: !9551)
!9554 = !DILocation(line: 522, column: 6, scope: !9526)
!9555 = !DILocation(line: 523, column: 30, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9557, file: !1580, line: 523, column: 7)
!9557 = distinct !DILexicalBlock(scope: !9551, file: !1580, line: 522, column: 51)
!9558 = !DILocation(line: 523, column: 13, scope: !9556)
!9559 = !DILocation(line: 523, column: 7, scope: !9557)
!9560 = !DILocation(line: 530, column: 10, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9556, file: !1580, line: 523, column: 43)
!9562 = !DILocation(line: 531, column: 3, scope: !9561)
!9563 = !DILocation(line: 532, column: 30, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9556, file: !1580, line: 531, column: 10)
!9565 = !DILocation(line: 535, column: 29, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9551, file: !1580, line: 534, column: 9)
!9567 = !DILocation(line: 0, scope: !9483, inlinedAt: !9568)
!9568 = distinct !DILocation(line: 537, column: 2, scope: !9526)
!9569 = !DILocation(line: 0, scope: !9491, inlinedAt: !9570)
!9570 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !9568)
!9571 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !9570)
!9572 = !DILocation(line: 538, column: 1, scope: !9526)
!9573 = distinct !DISubprogram(name: "sliceable", scope: !1580, file: !1580, line: 468, type: !9574, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9576)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{!259, !1475}
!9576 = !{!9577, !9578}
!9577 = !DILocalVariable(name: "thread", arg: 1, scope: !9573, file: !1580, line: 468, type: !1475)
!9578 = !DILocalVariable(name: "ret", scope: !9573, file: !1580, line: 470, type: !259)
!9579 = !DILocation(line: 0, scope: !9573)
!9580 = !DILocation(line: 470, column: 13, scope: !9573)
!9581 = !DILocation(line: 471, column: 3, scope: !9573)
!9582 = !DILocation(line: 471, column: 7, scope: !9573)
!9583 = !DILocation(line: 472, column: 3, scope: !9573)
!9584 = !DILocation(line: 472, column: 37, scope: !9573)
!9585 = !DILocation(line: 472, column: 24, scope: !9573)
!9586 = !DILocation(line: 472, column: 43, scope: !9573)
!9587 = !DILocation(line: 472, column: 7, scope: !9573)
!9588 = !DILocation(line: 473, column: 3, scope: !9573)
!9589 = !DILocation(line: 473, column: 7, scope: !9573)
!9590 = !DILocation(line: 473, column: 6, scope: !9573)
!9591 = !DILocation(line: 479, column: 2, scope: !9573)
!9592 = distinct !DISubprogram(name: "slice_expired_locked", scope: !1580, file: !1580, line: 482, type: !9593, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9595)
!9593 = !DISubroutineType(types: !9594)
!9594 = !{!9448, !9448}
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !9592, file: !1580, line: 482, type: !9448)
!9597 = !DILocalVariable(name: "curr", scope: !9592, file: !1580, line: 484, type: !1475)
!9598 = !DILocation(line: 0, scope: !9592)
!9599 = !DILocation(line: 484, column: 26, scope: !9592)
!9600 = !DILocation(line: 493, column: 7, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9592, file: !1580, line: 493, column: 6)
!9602 = !DILocation(line: 493, column: 6, scope: !9592)
!9603 = !DILocation(line: 494, column: 3, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9601, file: !1580, line: 493, column: 49)
!9605 = !DILocation(line: 495, column: 2, scope: !9604)
!9606 = !DILocation(line: 496, column: 2, scope: !9592)
!9607 = !DILocation(line: 499, column: 1, scope: !9592)
!9608 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !8728, file: !8728, line: 106, type: !9574, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9609)
!9609 = !{!9610, !9611}
!9610 = !DILocalVariable(name: "thread", arg: 1, scope: !9608, file: !8728, line: 106, type: !1475)
!9611 = !DILocalVariable(name: "state", scope: !9608, file: !8728, line: 108, type: !256)
!9612 = !DILocation(line: 0, scope: !9608)
!9613 = !DILocation(line: 108, column: 31, scope: !9608)
!9614 = !DILocation(line: 110, column: 16, scope: !9608)
!9615 = !DILocation(line: 111, column: 41, scope: !9608)
!9616 = !DILocation(line: 110, column: 2, scope: !9608)
!9617 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !1580, file: !1580, line: 393, type: !9414, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9618)
!9618 = !{!9619}
!9619 = !DILocalVariable(name: "thread", arg: 1, scope: !9617, file: !1580, line: 393, type: !1475)
!9620 = !DILocation(line: 0, scope: !9617)
!9621 = !DILocation(line: 395, column: 6, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9617, file: !1580, line: 395, column: 6)
!9623 = !DILocation(line: 395, column: 6, scope: !9617)
!9624 = !DILocalVariable(name: "thread", arg: 1, scope: !9625, file: !1580, line: 264, type: !1475)
!9625 = distinct !DISubprogram(name: "dequeue_thread", scope: !1580, file: !1580, line: 264, type: !9414, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9626)
!9626 = !{!9624}
!9627 = !DILocation(line: 0, scope: !9625, inlinedAt: !9628)
!9628 = distinct !DILocation(line: 396, column: 3, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9622, file: !1580, line: 395, column: 34)
!9630 = !DILocation(line: 266, column: 15, scope: !9625, inlinedAt: !9628)
!9631 = !DILocation(line: 266, column: 28, scope: !9625, inlinedAt: !9628)
!9632 = !DILocalVariable(name: "thread", arg: 1, scope: !9633, file: !1580, line: 232, type: !1475)
!9633 = distinct !DISubprogram(name: "runq_remove", scope: !1580, file: !1580, line: 232, type: !9414, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9634)
!9634 = !{!9632}
!9635 = !DILocation(line: 0, scope: !9633, inlinedAt: !9636)
!9636 = distinct !DILocation(line: 268, column: 3, scope: !9637, inlinedAt: !9628)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !1580, line: 267, column: 35)
!9638 = distinct !DILexicalBlock(scope: !9625, file: !1580, line: 267, column: 6)
!9639 = !DILocation(line: 234, column: 2, scope: !9633, inlinedAt: !9636)
!9640 = !DILocation(line: 397, column: 2, scope: !9629)
!9641 = !DILocalVariable(name: "thread", arg: 1, scope: !9642, file: !1580, line: 250, type: !1475)
!9642 = distinct !DISubprogram(name: "queue_thread", scope: !1580, file: !1580, line: 250, type: !9414, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9643)
!9643 = !{!9641}
!9644 = !DILocation(line: 0, scope: !9642, inlinedAt: !9645)
!9645 = distinct !DILocation(line: 398, column: 2, scope: !9617)
!9646 = !DILocation(line: 252, column: 15, scope: !9642, inlinedAt: !9645)
!9647 = !DILocation(line: 252, column: 28, scope: !9642, inlinedAt: !9645)
!9648 = !DILocalVariable(name: "thread", arg: 1, scope: !9649, file: !1580, line: 227, type: !1475)
!9649 = distinct !DISubprogram(name: "runq_add", scope: !1580, file: !1580, line: 227, type: !9414, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9650)
!9650 = !{!9648}
!9651 = !DILocation(line: 0, scope: !9649, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 254, column: 3, scope: !9653, inlinedAt: !9645)
!9653 = distinct !DILexicalBlock(scope: !9654, file: !1580, line: 253, column: 35)
!9654 = distinct !DILexicalBlock(scope: !9642, file: !1580, line: 253, column: 6)
!9655 = !DILocalVariable(name: "pq", arg: 1, scope: !9656, file: !1580, line: 181, type: !9659)
!9656 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !1580, file: !1580, line: 181, type: !9657, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9660)
!9657 = !DISubroutineType(types: !9658)
!9658 = !{null, !9659, !1475}
!9659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 32)
!9660 = !{!9655, !9661, !9662}
!9661 = !DILocalVariable(name: "thread", arg: 2, scope: !9656, file: !1580, line: 182, type: !1475)
!9662 = !DILocalVariable(name: "t", scope: !9656, file: !1580, line: 184, type: !1475)
!9663 = !DILocation(line: 0, scope: !9656, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 229, column: 2, scope: !9649, inlinedAt: !9652)
!9665 = !DILocation(line: 188, column: 2, scope: !9666, inlinedAt: !9664)
!9666 = distinct !DILexicalBlock(scope: !9656, file: !1580, line: 188, column: 2)
!9667 = !DILocation(line: 188, column: 2, scope: !9668, inlinedAt: !9664)
!9668 = distinct !DILexicalBlock(scope: !9666, file: !1580, line: 188, column: 2)
!9669 = !DILocation(line: 0, scope: !9666, inlinedAt: !9664)
!9670 = !DILocation(line: 189, column: 7, scope: !9671, inlinedAt: !9664)
!9671 = distinct !DILexicalBlock(scope: !9672, file: !1580, line: 189, column: 7)
!9672 = distinct !DILexicalBlock(scope: !9668, file: !1580, line: 188, column: 56)
!9673 = !DILocation(line: 189, column: 35, scope: !9671, inlinedAt: !9664)
!9674 = !DILocation(line: 189, column: 7, scope: !9672, inlinedAt: !9664)
!9675 = !DILocation(line: 191, column: 21, scope: !9676, inlinedAt: !9664)
!9676 = distinct !DILexicalBlock(scope: !9671, file: !1580, line: 189, column: 40)
!9677 = !DILocation(line: 190, column: 4, scope: !9676, inlinedAt: !9664)
!9678 = !DILocation(line: 192, column: 4, scope: !9676, inlinedAt: !9664)
!9679 = distinct !{!9679, !9665, !9680}
!9680 = !DILocation(line: 194, column: 2, scope: !9666, inlinedAt: !9664)
!9681 = !DILocation(line: 196, column: 37, scope: !9656, inlinedAt: !9664)
!9682 = !DILocation(line: 196, column: 2, scope: !9656, inlinedAt: !9664)
!9683 = !DILocation(line: 197, column: 1, scope: !9656, inlinedAt: !9664)
!9684 = !DILocation(line: 399, column: 25, scope: !9617)
!9685 = !DILocation(line: 399, column: 22, scope: !9617)
!9686 = !DILocation(line: 399, column: 2, scope: !9617)
!9687 = !DILocation(line: 400, column: 1, scope: !9617)
!9688 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !8728, file: !8728, line: 136, type: !9574, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9689)
!9689 = !{!9690}
!9690 = !DILocalVariable(name: "thread", arg: 1, scope: !9688, file: !8728, line: 136, type: !1475)
!9691 = !DILocation(line: 0, scope: !9688)
!9692 = !DILocation(line: 138, column: 9, scope: !9688)
!9693 = !DILocation(line: 138, column: 2, scope: !9688)
!9694 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !1580, file: !1580, line: 1137, type: !9657, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9695)
!9695 = !{!9696, !9697}
!9696 = !DILocalVariable(name: "pq", arg: 1, scope: !9694, file: !1580, line: 1137, type: !9659)
!9697 = !DILocalVariable(name: "thread", arg: 2, scope: !9694, file: !1580, line: 1137, type: !1475)
!9698 = !DILocation(line: 0, scope: !9694)
!9699 = !DILocation(line: 1141, column: 33, scope: !9694)
!9700 = !DILocation(line: 1141, column: 2, scope: !9694)
!9701 = !DILocation(line: 1142, column: 1, scope: !9694)
!9702 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !292, file: !292, line: 294, type: !9703, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9705)
!9703 = !DISubroutineType(types: !9704)
!9704 = !{!1576, !9659}
!9705 = !{!9706}
!9706 = !DILocalVariable(name: "list", arg: 1, scope: !9702, file: !292, line: 294, type: !9659)
!9707 = !DILocation(line: 0, scope: !9702)
!9708 = !DILocation(line: 296, column: 9, scope: !9702)
!9709 = !DILocation(line: 296, column: 49, scope: !9702)
!9710 = !DILocation(line: 296, column: 2, scope: !9702)
!9711 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !292, file: !292, line: 443, type: !9712, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9714)
!9712 = !DISubroutineType(types: !9713)
!9713 = !{null, !1576, !1576}
!9714 = !{!9715, !9716, !9717}
!9715 = !DILocalVariable(name: "successor", arg: 1, scope: !9711, file: !292, line: 443, type: !1576)
!9716 = !DILocalVariable(name: "node", arg: 2, scope: !9711, file: !292, line: 443, type: !1576)
!9717 = !DILocalVariable(name: "prev", scope: !9711, file: !292, line: 445, type: !9718)
!9718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1576)
!9719 = !DILocation(line: 0, scope: !9711)
!9720 = !DILocation(line: 445, column: 39, scope: !9711)
!9721 = !DILocation(line: 447, column: 8, scope: !9711)
!9722 = !DILocation(line: 447, column: 13, scope: !9711)
!9723 = !DILocation(line: 448, column: 8, scope: !9711)
!9724 = !DILocation(line: 448, column: 13, scope: !9711)
!9725 = !DILocation(line: 449, column: 8, scope: !9711)
!9726 = !DILocation(line: 449, column: 13, scope: !9711)
!9727 = !DILocation(line: 450, column: 18, scope: !9711)
!9728 = !DILocation(line: 451, column: 1, scope: !9711)
!9729 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !292, file: !292, line: 341, type: !9730, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9732)
!9730 = !DISubroutineType(types: !9731)
!9731 = !{!1576, !9659, !1576}
!9732 = !{!9733, !9734}
!9733 = !DILocalVariable(name: "list", arg: 1, scope: !9729, file: !292, line: 341, type: !9659)
!9734 = !DILocalVariable(name: "node", arg: 2, scope: !9729, file: !292, line: 342, type: !1576)
!9735 = !DILocation(line: 0, scope: !9729)
!9736 = !DILocation(line: 344, column: 15, scope: !9729)
!9737 = !DILocation(line: 344, column: 9, scope: !9729)
!9738 = !DILocation(line: 344, column: 26, scope: !9729)
!9739 = !DILocation(line: 344, column: 2, scope: !9729)
!9740 = distinct !DISubprogram(name: "sys_dlist_append", scope: !292, file: !292, line: 404, type: !9741, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9743)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{null, !9659, !1576}
!9743 = !{!9744, !9745, !9746}
!9744 = !DILocalVariable(name: "list", arg: 1, scope: !9740, file: !292, line: 404, type: !9659)
!9745 = !DILocalVariable(name: "node", arg: 2, scope: !9740, file: !292, line: 404, type: !1576)
!9746 = !DILocalVariable(name: "tail", scope: !9740, file: !292, line: 406, type: !9718)
!9747 = !DILocation(line: 0, scope: !9740)
!9748 = !DILocation(line: 406, column: 34, scope: !9740)
!9749 = !DILocation(line: 408, column: 8, scope: !9740)
!9750 = !DILocation(line: 408, column: 13, scope: !9740)
!9751 = !DILocation(line: 409, column: 8, scope: !9740)
!9752 = !DILocation(line: 409, column: 13, scope: !9740)
!9753 = !DILocation(line: 411, column: 8, scope: !9740)
!9754 = !DILocation(line: 411, column: 13, scope: !9740)
!9755 = !DILocation(line: 412, column: 13, scope: !9740)
!9756 = !DILocation(line: 413, column: 1, scope: !9740)
!9757 = distinct !DISubprogram(name: "update_cache", scope: !1580, file: !1580, line: 559, type: !8685, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9758)
!9758 = !{!9759, !9760}
!9759 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !9757, file: !1580, line: 559, type: !103)
!9760 = !DILocalVariable(name: "thread", scope: !9757, file: !1580, line: 562, type: !1475)
!9761 = !DILocation(line: 0, scope: !9757)
!9762 = !DILocation(line: 239, column: 9, scope: !9763, inlinedAt: !9766)
!9763 = distinct !DISubprogram(name: "runq_best", scope: !1580, file: !1580, line: 237, type: !9764, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!9764 = !DISubroutineType(types: !9765)
!9765 = !{!1475}
!9766 = distinct !DILocation(line: 314, column: 28, scope: !9767, inlinedAt: !9770)
!9767 = distinct !DISubprogram(name: "next_up", scope: !1580, file: !1580, line: 312, type: !9764, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9768)
!9768 = !{!9769}
!9769 = !DILocalVariable(name: "thread", scope: !9767, file: !1580, line: 314, type: !1475)
!9770 = distinct !DILocation(line: 562, column: 28, scope: !9757)
!9771 = !DILocation(line: 0, scope: !9767, inlinedAt: !9770)
!9772 = !DILocation(line: 340, column: 17, scope: !9767, inlinedAt: !9770)
!9773 = !DILocation(line: 340, column: 9, scope: !9767, inlinedAt: !9770)
!9774 = !DILocalVariable(name: "thread", arg: 1, scope: !9775, file: !1580, line: 127, type: !1475)
!9775 = distinct !DISubprogram(name: "should_preempt", scope: !1580, file: !1580, line: 127, type: !9776, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9778)
!9776 = !DISubroutineType(types: !9777)
!9777 = !{!259, !1475, !103}
!9778 = !{!9774, !9779}
!9779 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !9775, file: !1580, line: 128, type: !103)
!9780 = !DILocation(line: 0, scope: !9775, inlinedAt: !9781)
!9781 = distinct !DILocation(line: 564, column: 6, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9757, file: !1580, line: 564, column: 6)
!9783 = !DILocation(line: 133, column: 17, scope: !9784, inlinedAt: !9781)
!9784 = distinct !DILexicalBlock(scope: !9775, file: !1580, line: 133, column: 6)
!9785 = !DILocation(line: 0, scope: !9782)
!9786 = !DILocation(line: 133, column: 6, scope: !9775, inlinedAt: !9781)
!9787 = !DILocation(line: 140, column: 6, scope: !9788, inlinedAt: !9781)
!9788 = distinct !DILexicalBlock(scope: !9775, file: !1580, line: 140, column: 6)
!9789 = !DILocation(line: 140, column: 6, scope: !9775, inlinedAt: !9781)
!9790 = !DILocation(line: 150, column: 9, scope: !9791, inlinedAt: !9781)
!9791 = distinct !DILexicalBlock(scope: !9775, file: !1580, line: 149, column: 6)
!9792 = !DILocation(line: 149, column: 6, scope: !9775, inlinedAt: !9781)
!9793 = !DILocation(line: 157, column: 6, scope: !9794, inlinedAt: !9781)
!9794 = distinct !DILexicalBlock(scope: !9775, file: !1580, line: 157, column: 6)
!9795 = !DILocation(line: 564, column: 6, scope: !9757)
!9796 = !DILocation(line: 566, column: 14, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9798, file: !1580, line: 566, column: 7)
!9798 = distinct !DILexicalBlock(scope: !9782, file: !1580, line: 564, column: 42)
!9799 = !DILocation(line: 566, column: 7, scope: !9798)
!9800 = !DILocation(line: 567, column: 4, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9797, file: !1580, line: 566, column: 27)
!9802 = !DILocation(line: 568, column: 3, scope: !9801)
!9803 = !DILocation(line: 585, column: 1, scope: !9757)
!9804 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !1580, file: !1580, line: 1144, type: !9805, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9807)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{!1475, !9659}
!9807 = !{!9808, !9809, !9810}
!9808 = !DILocalVariable(name: "pq", arg: 1, scope: !9804, file: !1580, line: 1144, type: !9659)
!9809 = !DILocalVariable(name: "thread", scope: !9804, file: !1580, line: 1146, type: !1475)
!9810 = !DILocalVariable(name: "n", scope: !9804, file: !1580, line: 1147, type: !1576)
!9811 = !DILocation(line: 0, scope: !9804)
!9812 = !DILocation(line: 1147, column: 19, scope: !9804)
!9813 = !DILocation(line: 1152, column: 2, scope: !9804)
!9814 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !8728, file: !8728, line: 115, type: !9574, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9815)
!9815 = !{!9816}
!9816 = !DILocalVariable(name: "thread", arg: 1, scope: !9814, file: !8728, line: 115, type: !1475)
!9817 = !DILocation(line: 0, scope: !9814)
!9818 = !DILocation(line: 117, column: 46, scope: !9814)
!9819 = !DILocation(line: 117, column: 10, scope: !9814)
!9820 = !DILocation(line: 117, column: 9, scope: !9814)
!9821 = !DILocation(line: 117, column: 2, scope: !9814)
!9822 = distinct !DISubprogram(name: "is_preempt", scope: !1580, file: !1580, line: 62, type: !9432, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9823)
!9823 = !{!9824}
!9824 = !DILocalVariable(name: "thread", arg: 1, scope: !9822, file: !1580, line: 62, type: !1475)
!9825 = !DILocation(line: 0, scope: !9822)
!9826 = !DILocation(line: 65, column: 22, scope: !9822)
!9827 = !DILocation(line: 65, column: 30, scope: !9822)
!9828 = !DILocation(line: 65, column: 2, scope: !9822)
!9829 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !9122, file: !9122, line: 35, type: !9830, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9834)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{!259, !9832}
!9832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9833, size: 32)
!9833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1526)
!9834 = !{!9835}
!9835 = !DILocalVariable(name: "to", arg: 1, scope: !9829, file: !9122, line: 35, type: !9832)
!9836 = !DILocation(line: 0, scope: !9829)
!9837 = !DILocation(line: 37, column: 35, scope: !9829)
!9838 = !DILocation(line: 37, column: 10, scope: !9829)
!9839 = !DILocation(line: 37, column: 9, scope: !9829)
!9840 = !DILocation(line: 37, column: 2, scope: !9829)
!9841 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !292, file: !292, line: 225, type: !9842, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9846)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{!259, !9844}
!9844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9845, size: 32)
!9845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1485)
!9846 = !{!9847}
!9847 = !DILocalVariable(name: "node", arg: 1, scope: !9841, file: !292, line: 225, type: !9844)
!9848 = !DILocation(line: 0, scope: !9841)
!9849 = !DILocation(line: 227, column: 15, scope: !9841)
!9850 = !DILocation(line: 227, column: 20, scope: !9841)
!9851 = !DILocation(line: 227, column: 2, scope: !9841)
!9852 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !292, file: !292, line: 325, type: !9730, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9853)
!9853 = !{!9854, !9855}
!9854 = !DILocalVariable(name: "list", arg: 1, scope: !9852, file: !292, line: 325, type: !9659)
!9855 = !DILocalVariable(name: "node", arg: 2, scope: !9852, file: !292, line: 326, type: !1576)
!9856 = !DILocation(line: 0, scope: !9852)
!9857 = !DILocation(line: 328, column: 24, scope: !9852)
!9858 = !DILocation(line: 328, column: 15, scope: !9852)
!9859 = !DILocation(line: 328, column: 9, scope: !9852)
!9860 = !DILocation(line: 328, column: 45, scope: !9852)
!9861 = !DILocation(line: 328, column: 2, scope: !9852)
!9862 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !292, file: !292, line: 266, type: !9863, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9865)
!9863 = !DISubroutineType(types: !9864)
!9864 = !{!259, !9659}
!9865 = !{!9866}
!9866 = !DILocalVariable(name: "list", arg: 1, scope: !9862, file: !292, line: 266, type: !9659)
!9867 = !DILocation(line: 0, scope: !9862)
!9868 = !DILocation(line: 268, column: 15, scope: !9862)
!9869 = !DILocation(line: 268, column: 20, scope: !9862)
!9870 = !DILocation(line: 268, column: 2, scope: !9862)
!9871 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !292, file: !292, line: 496, type: !9872, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9874)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{null, !1576}
!9874 = !{!9875, !9876, !9877}
!9875 = !DILocalVariable(name: "node", arg: 1, scope: !9871, file: !292, line: 496, type: !1576)
!9876 = !DILocalVariable(name: "prev", scope: !9871, file: !292, line: 498, type: !9718)
!9877 = !DILocalVariable(name: "next", scope: !9871, file: !292, line: 499, type: !9718)
!9878 = !DILocation(line: 0, scope: !9871)
!9879 = !DILocation(line: 498, column: 34, scope: !9871)
!9880 = !DILocation(line: 499, column: 34, scope: !9871)
!9881 = !DILocation(line: 501, column: 8, scope: !9871)
!9882 = !DILocation(line: 501, column: 13, scope: !9871)
!9883 = !DILocation(line: 502, column: 8, scope: !9871)
!9884 = !DILocation(line: 502, column: 13, scope: !9871)
!9885 = !DILocation(line: 503, column: 2, scope: !9871)
!9886 = !DILocation(line: 504, column: 1, scope: !9871)
!9887 = distinct !DISubprogram(name: "sys_dnode_init", scope: !292, file: !292, line: 211, type: !9872, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9888)
!9888 = !{!9889}
!9889 = !DILocalVariable(name: "node", arg: 1, scope: !9887, file: !292, line: 211, type: !1576)
!9890 = !DILocation(line: 0, scope: !9887)
!9891 = !DILocation(line: 213, column: 8, scope: !9887)
!9892 = !DILocation(line: 213, column: 13, scope: !9887)
!9893 = !DILocation(line: 214, column: 8, scope: !9887)
!9894 = !DILocation(line: 214, column: 13, scope: !9887)
!9895 = !DILocation(line: 215, column: 1, scope: !9887)
!9896 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !8728, file: !8728, line: 131, type: !9897, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9899)
!9897 = !DISubroutineType(types: !9898)
!9898 = !{!259, !1475, !137}
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "thread", arg: 1, scope: !9896, file: !8728, line: 131, type: !1475)
!9901 = !DILocalVariable(name: "state", arg: 2, scope: !9896, file: !8728, line: 131, type: !137)
!9902 = !DILocation(line: 0, scope: !9896)
!9903 = !DILocation(line: 133, column: 23, scope: !9896)
!9904 = !DILocation(line: 133, column: 45, scope: !9896)
!9905 = !DILocation(line: 133, column: 2, scope: !9896)
!9906 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !8728, file: !8728, line: 211, type: !9907, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9909)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!259, !103, !103}
!9909 = !{!9910, !9911}
!9910 = !DILocalVariable(name: "prio", arg: 1, scope: !9906, file: !8728, line: 211, type: !103)
!9911 = !DILocalVariable(name: "test_prio", arg: 2, scope: !9906, file: !8728, line: 211, type: !103)
!9912 = !DILocation(line: 0, scope: !9906)
!9913 = !DILocation(line: 213, column: 9, scope: !9906)
!9914 = !DILocation(line: 213, column: 2, scope: !9906)
!9915 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !8728, file: !8728, line: 83, type: !9574, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9916)
!9916 = !{!9917}
!9917 = !DILocalVariable(name: "thread", arg: 1, scope: !9915, file: !8728, line: 83, type: !1475)
!9918 = !DILocation(line: 0, scope: !9915)
!9919 = !DILocation(line: 89, column: 16, scope: !9915)
!9920 = !DILocation(line: 89, column: 2, scope: !9915)
!9921 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !8728, file: !8728, line: 206, type: !9907, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9922)
!9922 = !{!9923, !9924}
!9923 = !DILocalVariable(name: "prio1", arg: 1, scope: !9921, file: !8728, line: 206, type: !103)
!9924 = !DILocalVariable(name: "prio2", arg: 2, scope: !9921, file: !8728, line: 206, type: !103)
!9925 = !DILocation(line: 0, scope: !9921)
!9926 = !DILocation(line: 208, column: 15, scope: !9921)
!9927 = !DILocation(line: 208, column: 2, scope: !9921)
!9928 = distinct !DISubprogram(name: "z_ready_thread", scope: !1580, file: !1580, line: 635, type: !9414, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9929)
!9929 = !{!9930, !9931, !9933}
!9930 = !DILocalVariable(name: "thread", arg: 1, scope: !9928, file: !1580, line: 635, type: !1475)
!9931 = !DILocalVariable(name: "__i", scope: !9932, file: !1580, line: 637, type: !9448)
!9932 = distinct !DILexicalBlock(scope: !9928, file: !1580, line: 637, column: 2)
!9933 = !DILocalVariable(name: "__key", scope: !9932, file: !1580, line: 637, type: !9448)
!9934 = !DILocation(line: 0, scope: !9928)
!9935 = !DILocation(line: 0, scope: !9932)
!9936 = !DILocation(line: 0, scope: !9456, inlinedAt: !9937)
!9937 = distinct !DILocation(line: 637, column: 2, scope: !9932)
!9938 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !9939)
!9939 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !9937)
!9940 = !DILocation(line: 0, scope: !9465, inlinedAt: !9939)
!9941 = !DILocation(line: 639, column: 4, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !1580, line: 638, column: 41)
!9943 = distinct !DILexicalBlock(scope: !9944, file: !1580, line: 638, column: 7)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !1580, line: 637, column: 26)
!9945 = distinct !DILexicalBlock(scope: !9932, file: !1580, line: 637, column: 2)
!9946 = !DILocation(line: 0, scope: !9483, inlinedAt: !9947)
!9947 = distinct !DILocation(line: 637, column: 2, scope: !9945)
!9948 = !DILocation(line: 0, scope: !9491, inlinedAt: !9949)
!9949 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !9947)
!9950 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !9949)
!9951 = !DILocation(line: 642, column: 1, scope: !9928)
!9952 = distinct !DISubprogram(name: "ready_thread", scope: !1580, file: !1580, line: 617, type: !9414, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9953)
!9953 = !{!9954}
!9954 = !DILocalVariable(name: "thread", arg: 1, scope: !9952, file: !1580, line: 617, type: !1475)
!9955 = !DILocation(line: 0, scope: !9952)
!9956 = !DILocation(line: 626, column: 7, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9952, file: !1580, line: 626, column: 6)
!9958 = !DILocation(line: 626, column: 34, scope: !9957)
!9959 = !DILocation(line: 626, column: 37, scope: !9957)
!9960 = !DILocation(line: 626, column: 6, scope: !9952)
!9961 = !DILocation(line: 0, scope: !9642, inlinedAt: !9962)
!9962 = distinct !DILocation(line: 629, column: 3, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9957, file: !1580, line: 626, column: 64)
!9964 = !DILocation(line: 252, column: 15, scope: !9642, inlinedAt: !9962)
!9965 = !DILocation(line: 252, column: 28, scope: !9642, inlinedAt: !9962)
!9966 = !DILocation(line: 0, scope: !9649, inlinedAt: !9967)
!9967 = distinct !DILocation(line: 254, column: 3, scope: !9653, inlinedAt: !9962)
!9968 = !DILocation(line: 0, scope: !9656, inlinedAt: !9969)
!9969 = distinct !DILocation(line: 229, column: 2, scope: !9649, inlinedAt: !9967)
!9970 = !DILocation(line: 188, column: 2, scope: !9666, inlinedAt: !9969)
!9971 = !DILocation(line: 188, column: 2, scope: !9668, inlinedAt: !9969)
!9972 = !DILocation(line: 0, scope: !9666, inlinedAt: !9969)
!9973 = !DILocation(line: 189, column: 7, scope: !9671, inlinedAt: !9969)
!9974 = !DILocation(line: 189, column: 35, scope: !9671, inlinedAt: !9969)
!9975 = !DILocation(line: 189, column: 7, scope: !9672, inlinedAt: !9969)
!9976 = !DILocation(line: 191, column: 21, scope: !9676, inlinedAt: !9969)
!9977 = !DILocation(line: 190, column: 4, scope: !9676, inlinedAt: !9969)
!9978 = !DILocation(line: 192, column: 4, scope: !9676, inlinedAt: !9969)
!9979 = distinct !{!9979, !9970, !9980}
!9980 = !DILocation(line: 194, column: 2, scope: !9666, inlinedAt: !9969)
!9981 = !DILocation(line: 196, column: 37, scope: !9656, inlinedAt: !9969)
!9982 = !DILocation(line: 196, column: 2, scope: !9656, inlinedAt: !9969)
!9983 = !DILocation(line: 197, column: 1, scope: !9656, inlinedAt: !9969)
!9984 = !DILocation(line: 630, column: 3, scope: !9963)
!9985 = !DILocation(line: 632, column: 2, scope: !9963)
!9986 = !DILocation(line: 633, column: 1, scope: !9952)
!9987 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !8728, file: !8728, line: 120, type: !9574, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9988)
!9988 = !{!9989}
!9989 = !DILocalVariable(name: "thread", arg: 1, scope: !9987, file: !8728, line: 120, type: !1475)
!9990 = !DILocation(line: 0, scope: !9987)
!9991 = !DILocation(line: 122, column: 12, scope: !9987)
!9992 = !DILocation(line: 122, column: 62, scope: !9987)
!9993 = !DILocation(line: 123, column: 4, scope: !9987)
!9994 = !DILocation(line: 122, column: 2, scope: !9987)
!9995 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !1580, file: !1580, line: 644, type: !9414, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !9996)
!9996 = !{!9997, !9998, !10000}
!9997 = !DILocalVariable(name: "thread", arg: 1, scope: !9995, file: !1580, line: 644, type: !1475)
!9998 = !DILocalVariable(name: "__i", scope: !9999, file: !1580, line: 646, type: !9448)
!9999 = distinct !DILexicalBlock(scope: !9995, file: !1580, line: 646, column: 2)
!10000 = !DILocalVariable(name: "__key", scope: !9999, file: !1580, line: 646, type: !9448)
!10001 = !DILocation(line: 0, scope: !9995)
!10002 = !DILocation(line: 0, scope: !9999)
!10003 = !DILocation(line: 0, scope: !9456, inlinedAt: !10004)
!10004 = distinct !DILocation(line: 646, column: 2, scope: !9999)
!10005 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10006)
!10006 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10004)
!10007 = !DILocation(line: 0, scope: !9465, inlinedAt: !10006)
!10008 = !DILocation(line: 647, column: 3, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !1580, line: 646, column: 26)
!10010 = distinct !DILexicalBlock(scope: !9999, file: !1580, line: 646, column: 2)
!10011 = !DILocation(line: 0, scope: !9483, inlinedAt: !10012)
!10012 = distinct !DILocation(line: 646, column: 2, scope: !10010)
!10013 = !DILocation(line: 0, scope: !9491, inlinedAt: !10014)
!10014 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10012)
!10015 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10014)
!10016 = !DILocation(line: 649, column: 1, scope: !9995)
!10017 = distinct !DISubprogram(name: "z_sched_start", scope: !1580, file: !1580, line: 651, type: !9414, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10018)
!10018 = !{!10019, !10020}
!10019 = !DILocalVariable(name: "thread", arg: 1, scope: !10017, file: !1580, line: 651, type: !1475)
!10020 = !DILocalVariable(name: "key", scope: !10017, file: !1580, line: 653, type: !9448)
!10021 = !DILocation(line: 0, scope: !10017)
!10022 = !DILocation(line: 0, scope: !9456, inlinedAt: !10023)
!10023 = distinct !DILocation(line: 653, column: 25, scope: !10017)
!10024 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10025)
!10025 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10023)
!10026 = !DILocation(line: 0, scope: !9465, inlinedAt: !10025)
!10027 = !DILocation(line: 655, column: 6, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10017, file: !1580, line: 655, column: 6)
!10029 = !DILocation(line: 655, column: 6, scope: !10017)
!10030 = !DILocation(line: 0, scope: !9483, inlinedAt: !10031)
!10031 = distinct !DILocation(line: 656, column: 3, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10028, file: !1580, line: 655, column: 36)
!10033 = !DILocation(line: 0, scope: !9491, inlinedAt: !10034)
!10034 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10031)
!10035 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10034)
!10036 = !DILocation(line: 657, column: 3, scope: !10032)
!10037 = !DILocation(line: 660, column: 2, scope: !10017)
!10038 = !DILocation(line: 661, column: 2, scope: !10017)
!10039 = !DILocation(line: 662, column: 2, scope: !10017)
!10040 = !DILocation(line: 663, column: 1, scope: !10017)
!10041 = distinct !DISubprogram(name: "z_has_thread_started", scope: !8728, file: !8728, line: 126, type: !9574, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10042)
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "thread", arg: 1, scope: !10041, file: !8728, line: 126, type: !1475)
!10044 = !DILocation(line: 0, scope: !10041)
!10045 = !DILocation(line: 128, column: 23, scope: !10041)
!10046 = !DILocation(line: 128, column: 36, scope: !10041)
!10047 = !DILocation(line: 128, column: 56, scope: !10041)
!10048 = !DILocation(line: 128, column: 2, scope: !10041)
!10049 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !8728, file: !8728, line: 155, type: !9414, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10050)
!10050 = !{!10051}
!10051 = !DILocalVariable(name: "thread", arg: 1, scope: !10049, file: !8728, line: 155, type: !1475)
!10052 = !DILocation(line: 0, scope: !10049)
!10053 = !DILocation(line: 157, column: 15, scope: !10049)
!10054 = !DILocation(line: 157, column: 28, scope: !10049)
!10055 = !DILocation(line: 158, column: 1, scope: !10049)
!10056 = distinct !DISubprogram(name: "z_reschedule", scope: !1580, file: !1580, line: 967, type: !9484, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10057)
!10057 = !{!10058, !10059}
!10058 = !DILocalVariable(name: "lock", arg: 1, scope: !10056, file: !1580, line: 967, type: !9459)
!10059 = !DILocalVariable(name: "key", arg: 2, scope: !10056, file: !1580, line: 967, type: !9448)
!10060 = !DILocation(line: 0, scope: !10056)
!10061 = !DILocation(line: 969, column: 6, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10056, file: !1580, line: 969, column: 6)
!10063 = !DILocation(line: 969, column: 23, scope: !10062)
!10064 = !DILocation(line: 969, column: 26, scope: !10062)
!10065 = !DILocation(line: 969, column: 6, scope: !10056)
!10066 = !DILocalVariable(name: "key", arg: 2, scope: !10067, file: !8832, line: 193, type: !9448)
!10067 = distinct !DISubprogram(name: "z_swap", scope: !8832, file: !8832, line: 193, type: !10068, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10070)
!10068 = !DISubroutineType(types: !10069)
!10069 = !{!103, !9459, !9448}
!10070 = !{!10071, !10066}
!10071 = !DILocalVariable(name: "lock", arg: 1, scope: !10067, file: !8832, line: 193, type: !9459)
!10072 = !DILocation(line: 0, scope: !10067, inlinedAt: !10073)
!10073 = distinct !DILocation(line: 970, column: 3, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10062, file: !1580, line: 969, column: 39)
!10075 = !DILocation(line: 196, column: 9, scope: !10067, inlinedAt: !10073)
!10076 = !DILocation(line: 971, column: 2, scope: !10074)
!10077 = !DILocation(line: 0, scope: !9483, inlinedAt: !10078)
!10078 = distinct !DILocation(line: 972, column: 3, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10062, file: !1580, line: 971, column: 9)
!10080 = !DILocation(line: 0, scope: !9491, inlinedAt: !10081)
!10081 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10078)
!10082 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10081)
!10083 = !DILocation(line: 975, column: 1, scope: !10056)
!10084 = distinct !DISubprogram(name: "resched", scope: !1580, file: !1580, line: 940, type: !10085, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10087)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{!259, !137}
!10087 = !{!10088}
!10088 = !DILocalVariable(name: "key", arg: 1, scope: !10084, file: !1580, line: 940, type: !137)
!10089 = !DILocation(line: 0, scope: !10084)
!10090 = !DILocalVariable(name: "key", arg: 1, scope: !10091, file: !5308, line: 112, type: !32)
!10091 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5308, file: !5308, line: 112, type: !10092, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10094)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{!259, !32}
!10094 = !{!10090}
!10095 = !DILocation(line: 0, scope: !10091, inlinedAt: !10096)
!10096 = distinct !DILocation(line: 946, column: 9, scope: !10084)
!10097 = !DILocation(line: 115, column: 13, scope: !10091, inlinedAt: !10096)
!10098 = !DILocation(line: 946, column: 32, scope: !10084)
!10099 = !DILocation(line: 1031, column: 3, scope: !10100, inlinedAt: !10103)
!10100 = distinct !DISubprogram(name: "__get_IPSR", scope: !5805, file: !5805, line: 1027, type: !135, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10101)
!10101 = !{!10102}
!10102 = !DILocalVariable(name: "result", scope: !10100, file: !5805, line: 1029, type: !137)
!10103 = distinct !DILocation(line: 48, column: 10, scope: !10104, inlinedAt: !10105)
!10104 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6558, file: !6558, line: 46, type: !6559, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10105 = distinct !DILocation(line: 946, column: 36, scope: !10084)
!10106 = !{i64 1602583}
!10107 = !DILocation(line: 0, scope: !10100, inlinedAt: !10103)
!10108 = !DILocation(line: 48, column: 9, scope: !10104, inlinedAt: !10105)
!10109 = !DILocation(line: 946, column: 2, scope: !10084)
!10110 = distinct !DISubprogram(name: "need_swap", scope: !1580, file: !1580, line: 953, type: !6559, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10111)
!10111 = !{!10112}
!10112 = !DILocalVariable(name: "new_thread", scope: !10110, file: !1580, line: 959, type: !1475)
!10113 = !DILocation(line: 962, column: 31, scope: !10110)
!10114 = !DILocation(line: 0, scope: !10110)
!10115 = !DILocation(line: 963, column: 23, scope: !10110)
!10116 = !DILocation(line: 963, column: 20, scope: !10110)
!10117 = !DILocation(line: 963, column: 2, scope: !10110)
!10118 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !8832, file: !8832, line: 181, type: !5815, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10119)
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "key", arg: 1, scope: !10118, file: !8832, line: 181, type: !32)
!10121 = !DILocalVariable(name: "ret", scope: !10118, file: !8832, line: 183, type: !103)
!10122 = !DILocation(line: 0, scope: !10118)
!10123 = !DILocation(line: 185, column: 8, scope: !10118)
!10124 = !DILocation(line: 186, column: 2, scope: !10118)
!10125 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !1580, file: !1580, line: 665, type: !9414, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10126)
!10126 = !{!10127, !10128, !10130}
!10127 = !DILocalVariable(name: "thread", arg: 1, scope: !10125, file: !1580, line: 665, type: !1475)
!10128 = !DILocalVariable(name: "__i", scope: !10129, file: !1580, line: 671, type: !9448)
!10129 = distinct !DILexicalBlock(scope: !10125, file: !1580, line: 671, column: 2)
!10130 = !DILocalVariable(name: "__key", scope: !10129, file: !1580, line: 671, type: !9448)
!10131 = !DILocation(line: 0, scope: !10125)
!10132 = !DILocation(line: 669, column: 8, scope: !10125)
!10133 = !DILocation(line: 0, scope: !10129)
!10134 = !DILocation(line: 0, scope: !9456, inlinedAt: !10135)
!10135 = distinct !DILocation(line: 671, column: 2, scope: !10129)
!10136 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10137)
!10137 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10135)
!10138 = !DILocation(line: 0, scope: !9465, inlinedAt: !10137)
!10139 = !DILocation(line: 672, column: 7, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10141, file: !1580, line: 672, column: 7)
!10141 = distinct !DILexicalBlock(scope: !10142, file: !1580, line: 671, column: 26)
!10142 = distinct !DILexicalBlock(scope: !10129, file: !1580, line: 671, column: 2)
!10143 = !DILocation(line: 672, column: 7, scope: !10141)
!10144 = !DILocation(line: 0, scope: !9625, inlinedAt: !10145)
!10145 = distinct !DILocation(line: 673, column: 4, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10140, file: !1580, line: 672, column: 35)
!10147 = !DILocation(line: 266, column: 15, scope: !9625, inlinedAt: !10145)
!10148 = !DILocation(line: 266, column: 28, scope: !9625, inlinedAt: !10145)
!10149 = !DILocation(line: 0, scope: !9633, inlinedAt: !10150)
!10150 = distinct !DILocation(line: 268, column: 3, scope: !9637, inlinedAt: !10145)
!10151 = !DILocation(line: 234, column: 2, scope: !9633, inlinedAt: !10150)
!10152 = !DILocation(line: 674, column: 3, scope: !10146)
!10153 = !DILocation(line: 675, column: 3, scope: !10141)
!10154 = !DILocation(line: 676, column: 26, scope: !10141)
!10155 = !DILocation(line: 676, column: 23, scope: !10141)
!10156 = !DILocation(line: 676, column: 3, scope: !10141)
!10157 = !DILocation(line: 0, scope: !9483, inlinedAt: !10158)
!10158 = distinct !DILocation(line: 671, column: 2, scope: !10142)
!10159 = !DILocation(line: 0, scope: !9491, inlinedAt: !10160)
!10160 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10158)
!10161 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10160)
!10162 = !DILocation(line: 679, column: 16, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10125, file: !1580, line: 679, column: 6)
!10164 = !DILocation(line: 679, column: 13, scope: !10163)
!10165 = !DILocation(line: 679, column: 6, scope: !10125)
!10166 = !DILocation(line: 680, column: 3, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10163, file: !1580, line: 679, column: 26)
!10168 = !DILocation(line: 681, column: 2, scope: !10167)
!10169 = !DILocation(line: 684, column: 1, scope: !10125)
!10170 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !9122, file: !9122, line: 52, type: !9432, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10171)
!10171 = !{!10172}
!10172 = !DILocalVariable(name: "thread", arg: 1, scope: !10170, file: !9122, line: 52, type: !1475)
!10173 = !DILocation(line: 0, scope: !10170)
!10174 = !DILocation(line: 54, column: 39, scope: !10170)
!10175 = !DILocation(line: 54, column: 9, scope: !10170)
!10176 = !DILocation(line: 54, column: 2, scope: !10170)
!10177 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !8728, file: !8728, line: 141, type: !9414, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10178)
!10178 = !{!10179}
!10179 = !DILocalVariable(name: "thread", arg: 1, scope: !10177, file: !8728, line: 141, type: !1475)
!10180 = !DILocation(line: 0, scope: !10177)
!10181 = !DILocation(line: 143, column: 15, scope: !10177)
!10182 = !DILocation(line: 143, column: 28, scope: !10177)
!10183 = !DILocation(line: 146, column: 1, scope: !10177)
!10184 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !8728, file: !8728, line: 73, type: !646, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10185 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10186)
!10186 = distinct !DILocation(line: 75, column: 30, scope: !10184)
!10187 = !DILocation(line: 0, scope: !9465, inlinedAt: !10186)
!10188 = !DILocation(line: 75, column: 9, scope: !10184)
!10189 = !DILocation(line: 76, column: 1, scope: !10184)
!10190 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !1580, file: !1580, line: 977, type: !5392, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10191)
!10191 = !{!10192}
!10192 = !DILocalVariable(name: "key", arg: 1, scope: !10190, file: !1580, line: 977, type: !137)
!10193 = !DILocation(line: 0, scope: !10190)
!10194 = !DILocation(line: 979, column: 6, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10190, file: !1580, line: 979, column: 6)
!10196 = !DILocation(line: 979, column: 6, scope: !10190)
!10197 = !DILocation(line: 980, column: 3, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10195, file: !1580, line: 979, column: 20)
!10199 = !DILocation(line: 981, column: 2, scope: !10198)
!10200 = !DILocation(line: 0, scope: !9491, inlinedAt: !10201)
!10201 = distinct !DILocation(line: 982, column: 3, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10195, file: !1580, line: 981, column: 9)
!10203 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10201)
!10204 = !DILocation(line: 985, column: 1, scope: !10190)
!10205 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !1580, file: !1580, line: 695, type: !9414, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10206)
!10206 = !{!10207, !10208}
!10207 = !DILocalVariable(name: "thread", arg: 1, scope: !10205, file: !1580, line: 695, type: !1475)
!10208 = !DILocalVariable(name: "key", scope: !10205, file: !1580, line: 699, type: !9448)
!10209 = !DILocation(line: 0, scope: !10205)
!10210 = !DILocation(line: 0, scope: !9456, inlinedAt: !10211)
!10211 = distinct !DILocation(line: 699, column: 25, scope: !10205)
!10212 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10213)
!10213 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10211)
!10214 = !DILocation(line: 0, scope: !9465, inlinedAt: !10213)
!10215 = !DILocation(line: 702, column: 7, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10205, file: !1580, line: 702, column: 6)
!10217 = !DILocation(line: 702, column: 6, scope: !10205)
!10218 = !DILocation(line: 0, scope: !9483, inlinedAt: !10219)
!10219 = distinct !DILocation(line: 703, column: 3, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10216, file: !1580, line: 702, column: 38)
!10221 = !DILocation(line: 0, scope: !9491, inlinedAt: !10222)
!10222 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10219)
!10223 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10222)
!10224 = !DILocation(line: 704, column: 3, scope: !10220)
!10225 = !DILocation(line: 707, column: 2, scope: !10205)
!10226 = !DILocation(line: 708, column: 2, scope: !10205)
!10227 = !DILocation(line: 710, column: 2, scope: !10205)
!10228 = !DILocation(line: 713, column: 1, scope: !10205)
!10229 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !8728, file: !8728, line: 96, type: !9574, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10230)
!10230 = !{!10231}
!10231 = !DILocalVariable(name: "thread", arg: 1, scope: !10229, file: !8728, line: 96, type: !1475)
!10232 = !DILocation(line: 0, scope: !10229)
!10233 = !DILocation(line: 98, column: 23, scope: !10229)
!10234 = !DILocation(line: 98, column: 36, scope: !10229)
!10235 = !DILocation(line: 98, column: 57, scope: !10229)
!10236 = !DILocation(line: 98, column: 2, scope: !10229)
!10237 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !8728, file: !8728, line: 148, type: !9414, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10238)
!10238 = !{!10239}
!10239 = !DILocalVariable(name: "thread", arg: 1, scope: !10237, file: !8728, line: 148, type: !1475)
!10240 = !DILocation(line: 0, scope: !10237)
!10241 = !DILocation(line: 150, column: 15, scope: !10237)
!10242 = !DILocation(line: 150, column: 28, scope: !10237)
!10243 = !DILocation(line: 153, column: 1, scope: !10237)
!10244 = distinct !DISubprogram(name: "z_pend_thread", scope: !1580, file: !1580, line: 770, type: !10245, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10251)
!10245 = !DISubroutineType(types: !10246)
!10246 = !{null, !1475, !1506, !10247}
!10247 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !899, line: 67, baseType: !10248)
!10248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 65, size: 64, elements: !10249)
!10249 = !{!10250}
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !10248, file: !899, line: 66, baseType: !898, size: 64)
!10251 = !{!10252, !10253, !10254, !10255, !10257}
!10252 = !DILocalVariable(name: "thread", arg: 1, scope: !10244, file: !1580, line: 770, type: !1475)
!10253 = !DILocalVariable(name: "wait_q", arg: 2, scope: !10244, file: !1580, line: 770, type: !1506)
!10254 = !DILocalVariable(name: "timeout", arg: 3, scope: !10244, file: !1580, line: 771, type: !10247)
!10255 = !DILocalVariable(name: "__i", scope: !10256, file: !1580, line: 774, type: !9448)
!10256 = distinct !DILexicalBlock(scope: !10244, file: !1580, line: 774, column: 2)
!10257 = !DILocalVariable(name: "__key", scope: !10256, file: !1580, line: 774, type: !9448)
!10258 = !DILocation(line: 0, scope: !10244)
!10259 = !DILocation(line: 0, scope: !10256)
!10260 = !DILocation(line: 0, scope: !9456, inlinedAt: !10261)
!10261 = distinct !DILocation(line: 774, column: 2, scope: !10256)
!10262 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10263)
!10263 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10261)
!10264 = !DILocation(line: 0, scope: !9465, inlinedAt: !10263)
!10265 = !DILocation(line: 775, column: 3, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !1580, line: 774, column: 26)
!10267 = distinct !DILexicalBlock(scope: !10256, file: !1580, line: 774, column: 2)
!10268 = !DILocation(line: 0, scope: !9483, inlinedAt: !10269)
!10269 = distinct !DILocation(line: 774, column: 2, scope: !10267)
!10270 = !DILocation(line: 0, scope: !9491, inlinedAt: !10271)
!10271 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10269)
!10272 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10271)
!10273 = !DILocation(line: 777, column: 1, scope: !10244)
!10274 = distinct !DISubprogram(name: "pend_locked", scope: !1580, file: !1580, line: 760, type: !10245, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10275)
!10275 = !{!10276, !10277, !10278}
!10276 = !DILocalVariable(name: "thread", arg: 1, scope: !10274, file: !1580, line: 760, type: !1475)
!10277 = !DILocalVariable(name: "wait_q", arg: 2, scope: !10274, file: !1580, line: 760, type: !1506)
!10278 = !DILocalVariable(name: "timeout", arg: 3, scope: !10274, file: !1580, line: 761, type: !10247)
!10279 = !DILocation(line: 0, scope: !10274)
!10280 = !DILocation(line: 766, column: 2, scope: !10274)
!10281 = !DILocation(line: 767, column: 2, scope: !10274)
!10282 = !DILocation(line: 768, column: 1, scope: !10274)
!10283 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !1580, file: !1580, line: 740, type: !10284, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10286)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{null, !1475, !1506}
!10286 = !{!10287, !10288}
!10287 = !DILocalVariable(name: "thread", arg: 1, scope: !10283, file: !1580, line: 740, type: !1475)
!10288 = !DILocalVariable(name: "wait_q", arg: 2, scope: !10283, file: !1580, line: 740, type: !1506)
!10289 = !DILocation(line: 0, scope: !10283)
!10290 = !DILocation(line: 742, column: 2, scope: !10283)
!10291 = !DILocation(line: 743, column: 2, scope: !10283)
!10292 = !DILocation(line: 747, column: 13, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10283, file: !1580, line: 747, column: 6)
!10294 = !DILocation(line: 747, column: 6, scope: !10283)
!10295 = !DILocation(line: 748, column: 16, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !1580, line: 747, column: 22)
!10297 = !DILocation(line: 748, column: 26, scope: !10296)
!10298 = !DILocation(line: 749, column: 28, scope: !10296)
!10299 = !DILocation(line: 0, scope: !9656, inlinedAt: !10300)
!10300 = distinct !DILocation(line: 749, column: 3, scope: !10296)
!10301 = !DILocation(line: 188, column: 2, scope: !9666, inlinedAt: !10300)
!10302 = !DILocation(line: 188, column: 2, scope: !9668, inlinedAt: !10300)
!10303 = !DILocation(line: 0, scope: !9666, inlinedAt: !10300)
!10304 = !DILocation(line: 189, column: 7, scope: !9671, inlinedAt: !10300)
!10305 = !DILocation(line: 189, column: 35, scope: !9671, inlinedAt: !10300)
!10306 = !DILocation(line: 189, column: 7, scope: !9672, inlinedAt: !10300)
!10307 = !DILocation(line: 191, column: 21, scope: !9676, inlinedAt: !10300)
!10308 = !DILocation(line: 190, column: 4, scope: !9676, inlinedAt: !10300)
!10309 = !DILocation(line: 192, column: 4, scope: !9676, inlinedAt: !10300)
!10310 = distinct !{!10310, !10301, !10311}
!10311 = !DILocation(line: 194, column: 2, scope: !9666, inlinedAt: !10300)
!10312 = !DILocation(line: 196, column: 37, scope: !9656, inlinedAt: !10300)
!10313 = !DILocation(line: 196, column: 2, scope: !9656, inlinedAt: !10300)
!10314 = !DILocation(line: 197, column: 1, scope: !9656, inlinedAt: !10300)
!10315 = !DILocation(line: 751, column: 1, scope: !10283)
!10316 = distinct !DISubprogram(name: "add_thread_timeout", scope: !1580, file: !1580, line: 753, type: !10317, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10319)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{null, !1475, !10247}
!10319 = !{!10320, !10321}
!10320 = !DILocalVariable(name: "thread", arg: 1, scope: !10316, file: !1580, line: 753, type: !1475)
!10321 = !DILocalVariable(name: "timeout", arg: 2, scope: !10316, file: !1580, line: 753, type: !10247)
!10322 = !DILocation(line: 0, scope: !10316)
!10323 = !DILocation(line: 755, column: 7, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10316, file: !1580, line: 755, column: 6)
!10325 = !DILocation(line: 755, column: 6, scope: !10316)
!10326 = !DILocation(line: 756, column: 3, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10324, file: !1580, line: 755, column: 41)
!10328 = !DILocation(line: 757, column: 2, scope: !10327)
!10329 = !DILocation(line: 758, column: 1, scope: !10316)
!10330 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !9122, file: !9122, line: 47, type: !10317, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10331)
!10331 = !{!10332, !10333}
!10332 = !DILocalVariable(name: "thread", arg: 1, scope: !10330, file: !9122, line: 47, type: !1475)
!10333 = !DILocalVariable(name: "ticks", arg: 2, scope: !10330, file: !9122, line: 47, type: !10247)
!10334 = !DILocation(line: 0, scope: !10330)
!10335 = !DILocation(line: 49, column: 30, scope: !10330)
!10336 = !DILocation(line: 49, column: 2, scope: !10330)
!10337 = !DILocation(line: 50, column: 1, scope: !10330)
!10338 = distinct !DISubprogram(name: "z_thread_timeout", scope: !1580, file: !1580, line: 795, type: !1532, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10339)
!10339 = !{!10340, !10341, !10342, !10344, !10345}
!10340 = !DILocalVariable(name: "timeout", arg: 1, scope: !10338, file: !1580, line: 795, type: !1534)
!10341 = !DILocalVariable(name: "thread", scope: !10338, file: !1580, line: 797, type: !1475)
!10342 = !DILocalVariable(name: "__i", scope: !10343, file: !1580, line: 800, type: !9448)
!10343 = distinct !DILexicalBlock(scope: !10338, file: !1580, line: 800, column: 2)
!10344 = !DILocalVariable(name: "__key", scope: !10343, file: !1580, line: 800, type: !9448)
!10345 = !DILocalVariable(name: "killed", scope: !10346, file: !1580, line: 801, type: !259)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !1580, line: 800, column: 26)
!10347 = distinct !DILexicalBlock(scope: !10343, file: !1580, line: 800, column: 2)
!10348 = !DILocation(line: 0, scope: !10338)
!10349 = !DILocation(line: 797, column: 28, scope: !10338)
!10350 = !DILocation(line: 0, scope: !10343)
!10351 = !DILocation(line: 0, scope: !9456, inlinedAt: !10352)
!10352 = distinct !DILocation(line: 800, column: 2, scope: !10343)
!10353 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10354)
!10354 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10352)
!10355 = !DILocation(line: 0, scope: !9465, inlinedAt: !10354)
!10356 = !DILocation(line: 801, column: 27, scope: !10346)
!10357 = !DILocation(line: 801, column: 32, scope: !10346)
!10358 = !DILocation(line: 801, column: 61, scope: !10346)
!10359 = !DILocation(line: 0, scope: !10346)
!10360 = !DILocation(line: 804, column: 7, scope: !10346)
!10361 = !DILocation(line: 805, column: 21, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !1580, line: 805, column: 8)
!10363 = distinct !DILexicalBlock(scope: !10364, file: !1580, line: 804, column: 16)
!10364 = distinct !DILexicalBlock(scope: !10346, file: !1580, line: 804, column: 7)
!10365 = !DILocation(line: 805, column: 31, scope: !10362)
!10366 = !DILocation(line: 805, column: 8, scope: !10363)
!10367 = !DILocation(line: 806, column: 5, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10362, file: !1580, line: 805, column: 40)
!10369 = !DILocation(line: 807, column: 4, scope: !10368)
!10370 = !DILocation(line: 808, column: 4, scope: !10363)
!10371 = !DILocation(line: 809, column: 4, scope: !10363)
!10372 = !DILocation(line: 810, column: 4, scope: !10363)
!10373 = !DILocation(line: 811, column: 3, scope: !10363)
!10374 = !DILocation(line: 0, scope: !9483, inlinedAt: !10375)
!10375 = distinct !DILocation(line: 800, column: 2, scope: !10347)
!10376 = !DILocation(line: 0, scope: !9491, inlinedAt: !10377)
!10377 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10375)
!10378 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10377)
!10379 = !DILocation(line: 813, column: 1, scope: !10338)
!10380 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !1580, file: !1580, line: 779, type: !9414, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10381)
!10381 = !{!10382}
!10382 = !DILocalVariable(name: "thread", arg: 1, scope: !10380, file: !1580, line: 779, type: !1475)
!10383 = !DILocation(line: 0, scope: !10380)
!10384 = !DILocation(line: 781, column: 2, scope: !10380)
!10385 = !DILocation(line: 782, column: 2, scope: !10380)
!10386 = !DILocation(line: 783, column: 15, scope: !10380)
!10387 = !DILocation(line: 783, column: 25, scope: !10380)
!10388 = !DILocation(line: 784, column: 1, scope: !10380)
!10389 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !8728, file: !8728, line: 165, type: !9414, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10390)
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "thread", arg: 1, scope: !10389, file: !8728, line: 165, type: !1475)
!10392 = !DILocation(line: 0, scope: !10389)
!10393 = !DILocation(line: 167, column: 15, scope: !10389)
!10394 = !DILocation(line: 167, column: 28, scope: !10389)
!10395 = !DILocation(line: 168, column: 1, scope: !10389)
!10396 = distinct !DISubprogram(name: "unready_thread", scope: !1580, file: !1580, line: 731, type: !9414, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10397)
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "thread", arg: 1, scope: !10396, file: !1580, line: 731, type: !1475)
!10399 = !DILocation(line: 0, scope: !10396)
!10400 = !DILocation(line: 733, column: 6, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10396, file: !1580, line: 733, column: 6)
!10402 = !DILocation(line: 733, column: 6, scope: !10396)
!10403 = !DILocation(line: 0, scope: !9625, inlinedAt: !10404)
!10404 = distinct !DILocation(line: 734, column: 3, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10401, file: !1580, line: 733, column: 34)
!10406 = !DILocation(line: 266, column: 15, scope: !9625, inlinedAt: !10404)
!10407 = !DILocation(line: 266, column: 28, scope: !9625, inlinedAt: !10404)
!10408 = !DILocation(line: 0, scope: !9633, inlinedAt: !10409)
!10409 = distinct !DILocation(line: 268, column: 3, scope: !9637, inlinedAt: !10404)
!10410 = !DILocation(line: 234, column: 2, scope: !9633, inlinedAt: !10409)
!10411 = !DILocation(line: 735, column: 2, scope: !10405)
!10412 = !DILocation(line: 736, column: 25, scope: !10396)
!10413 = !DILocation(line: 736, column: 22, scope: !10396)
!10414 = !DILocation(line: 736, column: 2, scope: !10396)
!10415 = !DILocation(line: 737, column: 1, scope: !10396)
!10416 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !8728, file: !8728, line: 160, type: !9414, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10417)
!10417 = !{!10418}
!10418 = !DILocalVariable(name: "thread", arg: 1, scope: !10416, file: !8728, line: 160, type: !1475)
!10419 = !DILocation(line: 0, scope: !10416)
!10420 = !DILocation(line: 162, column: 15, scope: !10416)
!10421 = !DILocation(line: 162, column: 28, scope: !10416)
!10422 = !DILocation(line: 163, column: 1, scope: !10416)
!10423 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !1580, file: !1580, line: 786, type: !9414, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10424)
!10424 = !{!10425, !10426, !10428}
!10425 = !DILocalVariable(name: "thread", arg: 1, scope: !10423, file: !1580, line: 786, type: !1475)
!10426 = !DILocalVariable(name: "__i", scope: !10427, file: !1580, line: 788, type: !9448)
!10427 = distinct !DILexicalBlock(scope: !10423, file: !1580, line: 788, column: 2)
!10428 = !DILocalVariable(name: "__key", scope: !10427, file: !1580, line: 788, type: !9448)
!10429 = !DILocation(line: 0, scope: !10423)
!10430 = !DILocation(line: 0, scope: !10427)
!10431 = !DILocation(line: 0, scope: !9456, inlinedAt: !10432)
!10432 = distinct !DILocation(line: 788, column: 2, scope: !10427)
!10433 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10434)
!10434 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10432)
!10435 = !DILocation(line: 0, scope: !9465, inlinedAt: !10434)
!10436 = !DILocation(line: 789, column: 3, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !1580, line: 788, column: 26)
!10438 = distinct !DILexicalBlock(scope: !10427, file: !1580, line: 788, column: 2)
!10439 = !DILocation(line: 0, scope: !9483, inlinedAt: !10440)
!10440 = distinct !DILocation(line: 788, column: 2, scope: !10438)
!10441 = !DILocation(line: 0, scope: !9491, inlinedAt: !10442)
!10442 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10440)
!10443 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10442)
!10444 = !DILocation(line: 791, column: 1, scope: !10423)
!10445 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !1580, file: !1580, line: 816, type: !10446, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10448)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{!103, !137, !1506, !10247}
!10448 = !{!10449, !10450, !10451, !10452, !10453, !10455}
!10449 = !DILocalVariable(name: "key", arg: 1, scope: !10445, file: !1580, line: 816, type: !137)
!10450 = !DILocalVariable(name: "wait_q", arg: 2, scope: !10445, file: !1580, line: 816, type: !1506)
!10451 = !DILocalVariable(name: "timeout", arg: 3, scope: !10445, file: !1580, line: 816, type: !10247)
!10452 = !DILocalVariable(name: "ret", scope: !10445, file: !1580, line: 828, type: !103)
!10453 = !DILocalVariable(name: "__i", scope: !10454, file: !1580, line: 829, type: !9448)
!10454 = distinct !DILexicalBlock(scope: !10445, file: !1580, line: 829, column: 2)
!10455 = !DILocalVariable(name: "__key", scope: !10454, file: !1580, line: 829, type: !9448)
!10456 = !DILocation(line: 0, scope: !10445)
!10457 = !DILocation(line: 823, column: 14, scope: !10445)
!10458 = !DILocation(line: 823, column: 2, scope: !10445)
!10459 = !DILocation(line: 826, column: 20, scope: !10445)
!10460 = !DILocation(line: 826, column: 18, scope: !10445)
!10461 = !DILocation(line: 828, column: 12, scope: !10445)
!10462 = !DILocation(line: 0, scope: !10454)
!10463 = !DILocation(line: 0, scope: !9456, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 829, column: 2, scope: !10454)
!10465 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10466)
!10466 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10464)
!10467 = !DILocation(line: 0, scope: !9465, inlinedAt: !10466)
!10468 = !DILocation(line: 830, column: 7, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !1580, line: 830, column: 7)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !1580, line: 829, column: 26)
!10471 = distinct !DILexicalBlock(scope: !10454, file: !1580, line: 829, column: 2)
!10472 = !DILocation(line: 830, column: 26, scope: !10469)
!10473 = !DILocation(line: 830, column: 23, scope: !10469)
!10474 = !DILocation(line: 830, column: 7, scope: !10470)
!10475 = !DILocation(line: 831, column: 20, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10469, file: !1580, line: 830, column: 36)
!10477 = !DILocation(line: 832, column: 3, scope: !10476)
!10478 = !DILocation(line: 0, scope: !9483, inlinedAt: !10479)
!10479 = distinct !DILocation(line: 829, column: 2, scope: !10471)
!10480 = !DILocation(line: 0, scope: !9491, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10479)
!10482 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10481)
!10483 = !DILocation(line: 834, column: 2, scope: !10445)
!10484 = distinct !DISubprogram(name: "z_pend_curr", scope: !1580, file: !1580, line: 840, type: !10485, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10487)
!10485 = !DISubroutineType(types: !10486)
!10486 = !{!103, !9459, !9448, !1506, !10247}
!10487 = !{!10488, !10489, !10490, !10491}
!10488 = !DILocalVariable(name: "lock", arg: 1, scope: !10484, file: !1580, line: 840, type: !9459)
!10489 = !DILocalVariable(name: "key", arg: 2, scope: !10484, file: !1580, line: 840, type: !9448)
!10490 = !DILocalVariable(name: "wait_q", arg: 3, scope: !10484, file: !1580, line: 841, type: !1506)
!10491 = !DILocalVariable(name: "timeout", arg: 4, scope: !10484, file: !1580, line: 841, type: !10247)
!10492 = !DILocation(line: 0, scope: !10484)
!10493 = !DILocation(line: 844, column: 20, scope: !10484)
!10494 = !DILocation(line: 844, column: 18, scope: !10484)
!10495 = !DILocation(line: 0, scope: !9456, inlinedAt: !10496)
!10496 = distinct !DILocation(line: 856, column: 9, scope: !10484)
!10497 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10498)
!10498 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10496)
!10499 = !DILocation(line: 0, scope: !9465, inlinedAt: !10498)
!10500 = !DILocation(line: 857, column: 14, scope: !10484)
!10501 = !DILocation(line: 857, column: 2, scope: !10484)
!10502 = !DILocation(line: 0, scope: !10067, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 859, column: 9, scope: !10484)
!10504 = !DILocation(line: 196, column: 9, scope: !10067, inlinedAt: !10503)
!10505 = !DILocation(line: 859, column: 2, scope: !10484)
!10506 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !1580, file: !1580, line: 862, type: !10507, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10509)
!10507 = !DISubroutineType(types: !10508)
!10508 = !{!1475, !1506}
!10509 = !{!10510, !10511, !10512, !10514}
!10510 = !DILocalVariable(name: "wait_q", arg: 1, scope: !10506, file: !1580, line: 862, type: !1506)
!10511 = !DILocalVariable(name: "thread", scope: !10506, file: !1580, line: 864, type: !1475)
!10512 = !DILocalVariable(name: "__i", scope: !10513, file: !1580, line: 866, type: !9448)
!10513 = distinct !DILexicalBlock(scope: !10506, file: !1580, line: 866, column: 2)
!10514 = !DILocalVariable(name: "__key", scope: !10513, file: !1580, line: 866, type: !9448)
!10515 = !DILocation(line: 0, scope: !10506)
!10516 = !DILocation(line: 0, scope: !10513)
!10517 = !DILocation(line: 0, scope: !9456, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 866, column: 2, scope: !10513)
!10519 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10520)
!10520 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10518)
!10521 = !DILocation(line: 0, scope: !9465, inlinedAt: !10520)
!10522 = !DILocation(line: 867, column: 12, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10524, file: !1580, line: 866, column: 26)
!10524 = distinct !DILexicalBlock(scope: !10513, file: !1580, line: 866, column: 2)
!10525 = !DILocation(line: 869, column: 14, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10523, file: !1580, line: 869, column: 7)
!10527 = !DILocation(line: 869, column: 7, scope: !10523)
!10528 = !DILocation(line: 870, column: 4, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10526, file: !1580, line: 869, column: 23)
!10530 = !DILocation(line: 871, column: 3, scope: !10529)
!10531 = !DILocation(line: 0, scope: !9483, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 866, column: 2, scope: !10524)
!10533 = !DILocation(line: 0, scope: !9491, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10532)
!10535 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10534)
!10536 = !DILocation(line: 874, column: 2, scope: !10506)
!10537 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !1580, file: !1580, line: 877, type: !10507, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10538)
!10538 = !{!10539, !10540, !10541, !10543}
!10539 = !DILocalVariable(name: "wait_q", arg: 1, scope: !10537, file: !1580, line: 877, type: !1506)
!10540 = !DILocalVariable(name: "thread", scope: !10537, file: !1580, line: 879, type: !1475)
!10541 = !DILocalVariable(name: "__i", scope: !10542, file: !1580, line: 881, type: !9448)
!10542 = distinct !DILexicalBlock(scope: !10537, file: !1580, line: 881, column: 2)
!10543 = !DILocalVariable(name: "__key", scope: !10542, file: !1580, line: 881, type: !9448)
!10544 = !DILocation(line: 0, scope: !10537)
!10545 = !DILocation(line: 0, scope: !10542)
!10546 = !DILocation(line: 0, scope: !9456, inlinedAt: !10547)
!10547 = distinct !DILocation(line: 881, column: 2, scope: !10542)
!10548 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10549)
!10549 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10547)
!10550 = !DILocation(line: 0, scope: !9465, inlinedAt: !10549)
!10551 = !DILocation(line: 882, column: 12, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10553, file: !1580, line: 881, column: 26)
!10553 = distinct !DILexicalBlock(scope: !10542, file: !1580, line: 881, column: 2)
!10554 = !DILocation(line: 884, column: 14, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10552, file: !1580, line: 884, column: 7)
!10556 = !DILocation(line: 884, column: 7, scope: !10552)
!10557 = !DILocation(line: 885, column: 4, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10555, file: !1580, line: 884, column: 23)
!10559 = !DILocation(line: 886, column: 10, scope: !10558)
!10560 = !DILocation(line: 887, column: 3, scope: !10558)
!10561 = !DILocation(line: 0, scope: !9483, inlinedAt: !10562)
!10562 = distinct !DILocation(line: 881, column: 2, scope: !10553)
!10563 = !DILocation(line: 0, scope: !9491, inlinedAt: !10564)
!10564 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10562)
!10565 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10564)
!10566 = !DILocation(line: 890, column: 2, scope: !10537)
!10567 = distinct !DISubprogram(name: "z_unpend_thread", scope: !1580, file: !1580, line: 893, type: !9414, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10568)
!10568 = !{!10569}
!10569 = !DILocalVariable(name: "thread", arg: 1, scope: !10567, file: !1580, line: 893, type: !1475)
!10570 = !DILocation(line: 0, scope: !10567)
!10571 = !DILocation(line: 0, scope: !10423, inlinedAt: !10572)
!10572 = distinct !DILocation(line: 895, column: 2, scope: !10567)
!10573 = !DILocation(line: 0, scope: !10427, inlinedAt: !10572)
!10574 = !DILocation(line: 0, scope: !9456, inlinedAt: !10575)
!10575 = distinct !DILocation(line: 788, column: 2, scope: !10427, inlinedAt: !10572)
!10576 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10577)
!10577 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10575)
!10578 = !DILocation(line: 0, scope: !9465, inlinedAt: !10577)
!10579 = !DILocation(line: 789, column: 3, scope: !10437, inlinedAt: !10572)
!10580 = !DILocation(line: 0, scope: !9483, inlinedAt: !10581)
!10581 = distinct !DILocation(line: 788, column: 2, scope: !10438, inlinedAt: !10572)
!10582 = !DILocation(line: 0, scope: !9491, inlinedAt: !10583)
!10583 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10581)
!10584 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10583)
!10585 = !DILocation(line: 896, column: 8, scope: !10567)
!10586 = !DILocation(line: 897, column: 1, scope: !10567)
!10587 = distinct !DISubprogram(name: "z_set_prio", scope: !1580, file: !1580, line: 902, type: !9776, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10588)
!10588 = !{!10589, !10590, !10591, !10592, !10594}
!10589 = !DILocalVariable(name: "thread", arg: 1, scope: !10587, file: !1580, line: 902, type: !1475)
!10590 = !DILocalVariable(name: "prio", arg: 2, scope: !10587, file: !1580, line: 902, type: !103)
!10591 = !DILocalVariable(name: "need_sched", scope: !10587, file: !1580, line: 904, type: !259)
!10592 = !DILocalVariable(name: "__i", scope: !10593, file: !1580, line: 906, type: !9448)
!10593 = distinct !DILexicalBlock(scope: !10587, file: !1580, line: 906, column: 2)
!10594 = !DILocalVariable(name: "__key", scope: !10593, file: !1580, line: 906, type: !9448)
!10595 = !DILocation(line: 0, scope: !10587)
!10596 = !DILocation(line: 0, scope: !10593)
!10597 = !DILocation(line: 0, scope: !9456, inlinedAt: !10598)
!10598 = distinct !DILocation(line: 906, column: 2, scope: !10593)
!10599 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10600)
!10600 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10598)
!10601 = !DILocation(line: 0, scope: !9465, inlinedAt: !10600)
!10602 = !DILocation(line: 907, column: 16, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !1580, line: 906, column: 26)
!10604 = distinct !DILexicalBlock(scope: !10593, file: !1580, line: 906, column: 2)
!10605 = !DILocation(line: 909, column: 7, scope: !10603)
!10606 = !DILocation(line: 0, scope: !9625, inlinedAt: !10607)
!10607 = distinct !DILocation(line: 912, column: 5, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10609, file: !1580, line: 911, column: 63)
!10609 = distinct !DILexicalBlock(scope: !10610, file: !1580, line: 911, column: 8)
!10610 = distinct !DILexicalBlock(scope: !10611, file: !1580, line: 909, column: 19)
!10611 = distinct !DILexicalBlock(scope: !10603, file: !1580, line: 909, column: 7)
!10612 = !DILocation(line: 266, column: 28, scope: !9625, inlinedAt: !10607)
!10613 = !DILocation(line: 0, scope: !9633, inlinedAt: !10614)
!10614 = distinct !DILocation(line: 268, column: 3, scope: !9637, inlinedAt: !10607)
!10615 = !DILocation(line: 234, column: 2, scope: !9633, inlinedAt: !10614)
!10616 = !DILocation(line: 913, column: 23, scope: !10608)
!10617 = !DILocation(line: 0, scope: !9642, inlinedAt: !10618)
!10618 = distinct !DILocation(line: 914, column: 5, scope: !10608)
!10619 = !DILocation(line: 252, column: 28, scope: !9642, inlinedAt: !10618)
!10620 = !DILocation(line: 0, scope: !9649, inlinedAt: !10621)
!10621 = distinct !DILocation(line: 254, column: 3, scope: !9653, inlinedAt: !10618)
!10622 = !DILocation(line: 0, scope: !9656, inlinedAt: !10623)
!10623 = distinct !DILocation(line: 229, column: 2, scope: !9649, inlinedAt: !10621)
!10624 = !DILocation(line: 188, column: 2, scope: !9666, inlinedAt: !10623)
!10625 = !DILocation(line: 188, column: 2, scope: !9668, inlinedAt: !10623)
!10626 = !DILocation(line: 0, scope: !9666, inlinedAt: !10623)
!10627 = !DILocation(line: 189, column: 7, scope: !9671, inlinedAt: !10623)
!10628 = !DILocation(line: 189, column: 35, scope: !9671, inlinedAt: !10623)
!10629 = !DILocation(line: 189, column: 7, scope: !9672, inlinedAt: !10623)
!10630 = !DILocation(line: 190, column: 4, scope: !9676, inlinedAt: !10623)
!10631 = !DILocation(line: 192, column: 4, scope: !9676, inlinedAt: !10623)
!10632 = distinct !{!10632, !10624, !10633}
!10633 = !DILocation(line: 194, column: 2, scope: !9666, inlinedAt: !10623)
!10634 = !DILocation(line: 196, column: 2, scope: !9656, inlinedAt: !10623)
!10635 = !DILocation(line: 197, column: 1, scope: !9656, inlinedAt: !10623)
!10636 = !DILocation(line: 918, column: 4, scope: !10610)
!10637 = !DILocation(line: 919, column: 3, scope: !10610)
!10638 = !DILocation(line: 920, column: 22, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10611, file: !1580, line: 919, column: 10)
!10640 = !DILocation(line: 0, scope: !9483, inlinedAt: !10641)
!10641 = distinct !DILocation(line: 906, column: 2, scope: !10604)
!10642 = !DILocation(line: 0, scope: !9491, inlinedAt: !10643)
!10643 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10641)
!10644 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10643)
!10645 = !DILocation(line: 926, column: 2, scope: !10587)
!10646 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !1580, file: !1580, line: 929, type: !10647, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10649)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !1475, !103}
!10649 = !{!10650, !10651, !10652}
!10650 = !DILocalVariable(name: "thread", arg: 1, scope: !10646, file: !1580, line: 929, type: !1475)
!10651 = !DILocalVariable(name: "prio", arg: 2, scope: !10646, file: !1580, line: 929, type: !103)
!10652 = !DILocalVariable(name: "need_sched", scope: !10646, file: !1580, line: 931, type: !259)
!10653 = !DILocation(line: 0, scope: !10646)
!10654 = !DILocation(line: 931, column: 20, scope: !10646)
!10655 = !DILocation(line: 935, column: 17, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10646, file: !1580, line: 935, column: 6)
!10657 = !DILocation(line: 935, column: 20, scope: !10656)
!10658 = !DILocation(line: 935, column: 35, scope: !10656)
!10659 = !DILocation(line: 935, column: 48, scope: !10656)
!10660 = !DILocation(line: 935, column: 6, scope: !10646)
!10661 = !DILocation(line: 936, column: 3, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10656, file: !1580, line: 935, column: 55)
!10663 = !DILocation(line: 937, column: 2, scope: !10662)
!10664 = !DILocation(line: 938, column: 1, scope: !10646)
!10665 = distinct !DISubprogram(name: "k_sched_lock", scope: !1580, file: !1580, line: 987, type: !646, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10666)
!10666 = !{!10667, !10669}
!10667 = !DILocalVariable(name: "__i", scope: !10668, file: !1580, line: 989, type: !9448)
!10668 = distinct !DILexicalBlock(scope: !10665, file: !1580, line: 989, column: 2)
!10669 = !DILocalVariable(name: "__key", scope: !10668, file: !1580, line: 989, type: !9448)
!10670 = !DILocation(line: 0, scope: !10668)
!10671 = !DILocation(line: 0, scope: !9456, inlinedAt: !10672)
!10672 = distinct !DILocation(line: 989, column: 2, scope: !10668)
!10673 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10674)
!10674 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10672)
!10675 = !DILocation(line: 0, scope: !9465, inlinedAt: !10674)
!10676 = !DILocation(line: 992, column: 3, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10678, file: !1580, line: 989, column: 26)
!10678 = distinct !DILexicalBlock(scope: !10668, file: !1580, line: 989, column: 2)
!10679 = !DILocation(line: 0, scope: !9483, inlinedAt: !10680)
!10680 = distinct !DILocation(line: 989, column: 2, scope: !10678)
!10681 = !DILocation(line: 0, scope: !9491, inlinedAt: !10682)
!10682 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10680)
!10683 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10682)
!10684 = !DILocation(line: 994, column: 1, scope: !10665)
!10685 = distinct !DISubprogram(name: "z_sched_lock", scope: !8728, file: !8728, line: 251, type: !646, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10686 = !DILocation(line: 256, column: 4, scope: !10685)
!10687 = !DILocation(line: 256, column: 19, scope: !10685)
!10688 = !DILocation(line: 256, column: 2, scope: !10685)
!10689 = !DILocation(line: 258, column: 2, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10685, file: !8728, line: 258, column: 2)
!10691 = !{i64 2151213856}
!10692 = !DILocation(line: 259, column: 1, scope: !10685)
!10693 = distinct !DISubprogram(name: "k_sched_unlock", scope: !1580, file: !1580, line: 996, type: !646, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10694)
!10694 = !{!10695, !10697}
!10695 = !DILocalVariable(name: "__i", scope: !10696, file: !1580, line: 998, type: !9448)
!10696 = distinct !DILexicalBlock(scope: !10693, file: !1580, line: 998, column: 2)
!10697 = !DILocalVariable(name: "__key", scope: !10696, file: !1580, line: 998, type: !9448)
!10698 = !DILocation(line: 0, scope: !10696)
!10699 = !DILocation(line: 0, scope: !9456, inlinedAt: !10700)
!10700 = distinct !DILocation(line: 998, column: 2, scope: !10696)
!10701 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10702)
!10702 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10700)
!10703 = !DILocation(line: 0, scope: !9465, inlinedAt: !10702)
!10704 = !DILocation(line: 1002, column: 5, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !1580, line: 998, column: 26)
!10706 = distinct !DILexicalBlock(scope: !10696, file: !1580, line: 998, column: 2)
!10707 = !DILocation(line: 1002, column: 20, scope: !10705)
!10708 = !DILocation(line: 1002, column: 3, scope: !10705)
!10709 = !DILocation(line: 1003, column: 3, scope: !10705)
!10710 = !DILocation(line: 0, scope: !9483, inlinedAt: !10711)
!10711 = distinct !DILocation(line: 998, column: 2, scope: !10706)
!10712 = !DILocation(line: 0, scope: !9491, inlinedAt: !10713)
!10713 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !10711)
!10714 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !10713)
!10715 = !DILocation(line: 1011, column: 2, scope: !10693)
!10716 = !DILocation(line: 1012, column: 1, scope: !10693)
!10717 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !1580, file: !1580, line: 1014, type: !9764, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10718 = !DILocation(line: 1028, column: 25, scope: !10717)
!10719 = !DILocation(line: 1028, column: 2, scope: !10717)
!10720 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !1580, file: !1580, line: 1155, type: !10721, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10723)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!259, !1504, !1504}
!10723 = !{!10724, !10725, !10726, !10727, !10728}
!10724 = !DILocalVariable(name: "a", arg: 1, scope: !10720, file: !1580, line: 1155, type: !1504)
!10725 = !DILocalVariable(name: "b", arg: 2, scope: !10720, file: !1580, line: 1155, type: !1504)
!10726 = !DILocalVariable(name: "thread_a", scope: !10720, file: !1580, line: 1157, type: !1475)
!10727 = !DILocalVariable(name: "thread_b", scope: !10720, file: !1580, line: 1157, type: !1475)
!10728 = !DILocalVariable(name: "cmp", scope: !10720, file: !1580, line: 1158, type: !651)
!10729 = !DILocation(line: 0, scope: !10720)
!10730 = !DILocation(line: 1160, column: 13, scope: !10720)
!10731 = !DILocation(line: 1161, column: 13, scope: !10720)
!10732 = !DILocation(line: 1163, column: 8, scope: !10720)
!10733 = !DILocation(line: 1165, column: 10, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10720, file: !1580, line: 1165, column: 6)
!10735 = !DILocation(line: 1165, column: 6, scope: !10720)
!10736 = !DILocation(line: 1167, column: 17, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10734, file: !1580, line: 1167, column: 13)
!10738 = !DILocation(line: 1167, column: 13, scope: !10734)
!10739 = !DILocation(line: 1170, column: 25, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10737, file: !1580, line: 1169, column: 9)
!10741 = !DILocation(line: 1170, column: 52, scope: !10740)
!10742 = !DILocation(line: 1170, column: 35, scope: !10740)
!10743 = !DILocation(line: 1170, column: 3, scope: !10740)
!10744 = !DILocation(line: 0, scope: !10734)
!10745 = !DILocation(line: 1173, column: 1, scope: !10720)
!10746 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !1580, file: !1580, line: 1175, type: !10747, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10762)
!10747 = !DISubroutineType(types: !10748)
!10748 = !{null, !10749, !1475}
!10749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10750, size: 32)
!10750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !10751, line: 37, size: 128, elements: !10752)
!10751 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10752 = !{!10753, !10761}
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !10750, file: !10751, line: 38, baseType: !10754, size: 96)
!10754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !308, line: 83, size: 96, elements: !10755)
!10755 = !{!10756, !10757, !10760}
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10754, file: !308, line: 84, baseType: !1504, size: 32)
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !10754, file: !308, line: 85, baseType: !10758, size: 32, offset: 32)
!10758 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !308, line: 81, baseType: !10759)
!10759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10721, size: 32)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !10754, file: !308, line: 86, baseType: !103, size: 32, offset: 64)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !10750, file: !10751, line: 39, baseType: !103, size: 32, offset: 96)
!10762 = !{!10763, !10764, !10765, !10766, !10775}
!10763 = !DILocalVariable(name: "pq", arg: 1, scope: !10746, file: !1580, line: 1175, type: !10749)
!10764 = !DILocalVariable(name: "thread", arg: 2, scope: !10746, file: !1580, line: 1175, type: !1475)
!10765 = !DILocalVariable(name: "t", scope: !10746, file: !1580, line: 1177, type: !1475)
!10766 = !DILocalVariable(name: "__f", scope: !10767, file: !1580, line: 1190, type: !10770)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !1580, line: 1190, column: 3)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !1580, line: 1189, column: 27)
!10769 = distinct !DILexicalBlock(scope: !10746, file: !1580, line: 1189, column: 6)
!10770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !308, line: 155, size: 96, elements: !10771)
!10771 = !{!10772, !10773, !10774}
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !10770, file: !308, line: 156, baseType: !1575, size: 32)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !10770, file: !308, line: 157, baseType: !1125, size: 32, offset: 32)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !10770, file: !308, line: 158, baseType: !651, size: 32, offset: 64)
!10775 = !DILocalVariable(name: "n", scope: !10776, file: !1580, line: 1190, type: !1504)
!10776 = distinct !DILexicalBlock(scope: !10777, file: !1580, line: 1190, column: 3)
!10777 = distinct !DILexicalBlock(scope: !10767, file: !1580, line: 1190, column: 3)
!10778 = !DILocation(line: 0, scope: !10746)
!10779 = !DILocation(line: 1181, column: 31, scope: !10746)
!10780 = !DILocation(line: 1181, column: 45, scope: !10746)
!10781 = !DILocation(line: 1181, column: 15, scope: !10746)
!10782 = !DILocation(line: 1181, column: 25, scope: !10746)
!10783 = !DILocation(line: 1189, column: 11, scope: !10769)
!10784 = !DILocation(line: 1189, column: 7, scope: !10769)
!10785 = !DILocation(line: 1189, column: 6, scope: !10746)
!10786 = !DILocation(line: 1190, column: 3, scope: !10767)
!10787 = !DILocation(line: 1190, column: 3, scope: !10776)
!10788 = !DILocation(line: 0, scope: !10776)
!10789 = !DILocation(line: 1190, column: 3, scope: !10777)
!10790 = !DILocation(line: 1193, column: 2, scope: !10768)
!10791 = !DILocation(line: 1191, column: 42, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10777, file: !1580, line: 1190, column: 54)
!10793 = !DILocation(line: 1191, column: 12, scope: !10792)
!10794 = !DILocation(line: 1191, column: 22, scope: !10792)
!10795 = distinct !{!10795, !10786, !10796}
!10796 = !DILocation(line: 1192, column: 3, scope: !10767)
!10797 = !DILocation(line: 1195, column: 17, scope: !10746)
!10798 = !DILocation(line: 1195, column: 37, scope: !10746)
!10799 = !DILocation(line: 1195, column: 2, scope: !10746)
!10800 = !DILocation(line: 1196, column: 1, scope: !10746)
!10801 = !DISubprogram(name: "z_rb_foreach_next", scope: !308, file: !308, line: 176, type: !10802, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10802 = !DISubroutineType(types: !10803)
!10803 = !{!1504, !10804, !10805}
!10804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10754, size: 32)
!10805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10770, size: 32)
!10806 = !DISubprogram(name: "rb_insert", scope: !308, file: !308, line: 105, type: !10807, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{null, !10804, !1504}
!10809 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !1580, file: !1580, line: 1198, type: !10747, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10810)
!10810 = !{!10811, !10812}
!10811 = !DILocalVariable(name: "pq", arg: 1, scope: !10809, file: !1580, line: 1198, type: !10749)
!10812 = !DILocalVariable(name: "thread", arg: 2, scope: !10809, file: !1580, line: 1198, type: !1475)
!10813 = !DILocation(line: 0, scope: !10809)
!10814 = !DILocation(line: 1202, column: 17, scope: !10809)
!10815 = !DILocation(line: 1202, column: 37, scope: !10809)
!10816 = !DILocation(line: 1202, column: 2, scope: !10809)
!10817 = !DILocation(line: 1204, column: 16, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10809, file: !1580, line: 1204, column: 6)
!10819 = !DILocation(line: 1204, column: 7, scope: !10818)
!10820 = !DILocation(line: 1204, column: 6, scope: !10809)
!10821 = !DILocation(line: 1205, column: 7, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10818, file: !1580, line: 1204, column: 22)
!10823 = !DILocation(line: 1205, column: 22, scope: !10822)
!10824 = !DILocation(line: 1206, column: 2, scope: !10822)
!10825 = !DILocation(line: 1207, column: 1, scope: !10809)
!10826 = !DISubprogram(name: "rb_remove", scope: !308, file: !308, line: 110, type: !10807, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10827 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !1580, file: !1580, line: 1209, type: !10828, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10830)
!10828 = !DISubroutineType(types: !10829)
!10829 = !{!1475, !10749}
!10830 = !{!10831, !10832, !10833}
!10831 = !DILocalVariable(name: "pq", arg: 1, scope: !10827, file: !1580, line: 1209, type: !10749)
!10832 = !DILocalVariable(name: "thread", scope: !10827, file: !1580, line: 1211, type: !1475)
!10833 = !DILocalVariable(name: "n", scope: !10827, file: !1580, line: 1212, type: !1504)
!10834 = !DILocation(line: 0, scope: !10827)
!10835 = !DILocation(line: 1212, column: 37, scope: !10827)
!10836 = !DILocation(line: 1212, column: 21, scope: !10827)
!10837 = !DILocation(line: 1217, column: 2, scope: !10827)
!10838 = distinct !DISubprogram(name: "rb_get_min", scope: !308, file: !308, line: 115, type: !10839, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10841)
!10839 = !DISubroutineType(types: !10840)
!10840 = !{!1504, !10804}
!10841 = !{!10842}
!10842 = !DILocalVariable(name: "tree", arg: 1, scope: !10838, file: !308, line: 115, type: !10804)
!10843 = !DILocation(line: 0, scope: !10838)
!10844 = !DILocation(line: 117, column: 9, scope: !10838)
!10845 = !DILocation(line: 117, column: 2, scope: !10838)
!10846 = !DISubprogram(name: "z_rb_get_minmax", scope: !308, file: !308, line: 100, type: !10847, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !162)
!10847 = !DISubroutineType(types: !10848)
!10848 = !{!1504, !10804, !256}
!10849 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !1580, file: !1580, line: 1246, type: !10850, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10860)
!10850 = !DISubroutineType(types: !10851)
!10851 = !{!1475, !10852}
!10852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10853, size: 32)
!10853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !10751, line: 53, size: 2080, elements: !10854)
!10854 = !{!10855, !10859}
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !10853, file: !10751, line: 54, baseType: !10856, size: 2048)
!10856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1511, size: 2048, elements: !10857)
!10857 = !{!10858}
!10858 = !DISubrange(count: 32)
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !10853, file: !10751, line: 55, baseType: !32, size: 32, offset: 2048)
!10860 = !{!10861, !10862, !10863, !10864}
!10861 = !DILocalVariable(name: "pq", arg: 1, scope: !10849, file: !1580, line: 1246, type: !10852)
!10862 = !DILocalVariable(name: "thread", scope: !10849, file: !1580, line: 1252, type: !1475)
!10863 = !DILocalVariable(name: "l", scope: !10849, file: !1580, line: 1253, type: !9659)
!10864 = !DILocalVariable(name: "n", scope: !10849, file: !1580, line: 1254, type: !1576)
!10865 = !DILocation(line: 0, scope: !10849)
!10866 = !DILocation(line: 1248, column: 11, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10849, file: !1580, line: 1248, column: 6)
!10868 = !DILocation(line: 1248, column: 7, scope: !10867)
!10869 = !DILocation(line: 1248, column: 6, scope: !10849)
!10870 = !DILocation(line: 1253, column: 31, scope: !10849)
!10871 = !DILocation(line: 1253, column: 20, scope: !10849)
!10872 = !DILocation(line: 1254, column: 19, scope: !10849)
!10873 = !DILocation(line: 1260, column: 1, scope: !10849)
!10874 = distinct !DISubprogram(name: "z_unpend_all", scope: !1580, file: !1580, line: 1262, type: !10875, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10877)
!10875 = !DISubroutineType(types: !10876)
!10876 = !{!103, !1506}
!10877 = !{!10878, !10879, !10880}
!10878 = !DILocalVariable(name: "wait_q", arg: 1, scope: !10874, file: !1580, line: 1262, type: !1506)
!10879 = !DILocalVariable(name: "need_sched", scope: !10874, file: !1580, line: 1264, type: !103)
!10880 = !DILocalVariable(name: "thread", scope: !10874, file: !1580, line: 1265, type: !1475)
!10881 = !DILocation(line: 0, scope: !10874)
!10882 = !DILocation(line: 1267, column: 19, scope: !10874)
!10883 = !DILocation(line: 1267, column: 41, scope: !10874)
!10884 = !DILocation(line: 1267, column: 2, scope: !10874)
!10885 = !DILocation(line: 1268, column: 3, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10874, file: !1580, line: 1267, column: 50)
!10887 = !DILocation(line: 1269, column: 3, scope: !10886)
!10888 = distinct !{!10888, !10884, !10889}
!10889 = !DILocation(line: 1271, column: 2, scope: !10874)
!10890 = !DILocation(line: 1273, column: 2, scope: !10874)
!10891 = distinct !DISubprogram(name: "z_waitq_head", scope: !9054, file: !9054, line: 52, type: !10507, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10892)
!10892 = !{!10893}
!10893 = !DILocalVariable(name: "w", arg: 1, scope: !10891, file: !9054, line: 52, type: !1506)
!10894 = !DILocation(line: 0, scope: !10891)
!10895 = !DILocation(line: 54, column: 52, scope: !10891)
!10896 = !DILocation(line: 54, column: 28, scope: !10891)
!10897 = !DILocation(line: 54, column: 9, scope: !10891)
!10898 = !DILocation(line: 54, column: 2, scope: !10891)
!10899 = distinct !DISubprogram(name: "init_ready_q", scope: !1580, file: !1580, line: 1276, type: !10900, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10907)
!10900 = !DISubroutineType(types: !10901)
!10901 = !{null, !10902}
!10902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10903, size: 32)
!10903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !318, line: 83, size: 96, elements: !10904)
!10904 = !{!10905, !10906}
!10905 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !10903, file: !318, line: 86, baseType: !1475, size: 32)
!10906 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !10903, file: !318, line: 90, baseType: !1511, size: 64, offset: 32)
!10907 = !{!10908}
!10908 = !DILocalVariable(name: "rq", arg: 1, scope: !10899, file: !1580, line: 1276, type: !10902)
!10909 = !DILocation(line: 0, scope: !10899)
!10910 = !DILocation(line: 1289, column: 22, scope: !10899)
!10911 = !DILocation(line: 1289, column: 2, scope: !10899)
!10912 = !DILocation(line: 1291, column: 1, scope: !10899)
!10913 = distinct !DISubprogram(name: "sys_dlist_init", scope: !292, file: !292, line: 197, type: !10914, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10916)
!10914 = !DISubroutineType(types: !10915)
!10915 = !{null, !9659}
!10916 = !{!10917}
!10917 = !DILocalVariable(name: "list", arg: 1, scope: !10913, file: !292, line: 197, type: !9659)
!10918 = !DILocation(line: 0, scope: !10913)
!10919 = !DILocation(line: 199, column: 8, scope: !10913)
!10920 = !DILocation(line: 199, column: 13, scope: !10913)
!10921 = !DILocation(line: 200, column: 8, scope: !10913)
!10922 = !DILocation(line: 200, column: 13, scope: !10913)
!10923 = !DILocation(line: 201, column: 1, scope: !10913)
!10924 = distinct !DISubprogram(name: "z_sched_init", scope: !1580, file: !1580, line: 1293, type: !646, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10925 = !DILocation(line: 1302, column: 2, scope: !10924)
!10926 = !DILocation(line: 1306, column: 2, scope: !10924)
!10927 = !DILocation(line: 1309, column: 1, scope: !10924)
!10928 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !1580, file: !1580, line: 1311, type: !10929, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10932)
!10929 = !DISubroutineType(types: !10930)
!10930 = !{!103, !10931}
!10931 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !282, line: 347, baseType: !1475)
!10932 = !{!10933}
!10933 = !DILocalVariable(name: "thread", arg: 1, scope: !10928, file: !1580, line: 1311, type: !10931)
!10934 = !DILocation(line: 0, scope: !10928)
!10935 = !DILocation(line: 1313, column: 22, scope: !10928)
!10936 = !DILocation(line: 1313, column: 9, scope: !10928)
!10937 = !DILocation(line: 1313, column: 2, scope: !10928)
!10938 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !1580, file: !1580, line: 1325, type: !10939, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10941)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{null, !10931, !103}
!10941 = !{!10942, !10943, !10944}
!10942 = !DILocalVariable(name: "thread", arg: 1, scope: !10938, file: !1580, line: 1325, type: !10931)
!10943 = !DILocalVariable(name: "prio", arg: 2, scope: !10938, file: !1580, line: 1325, type: !103)
!10944 = !DILocalVariable(name: "th", scope: !10938, file: !1580, line: 1334, type: !1475)
!10945 = !DILocation(line: 0, scope: !10938)
!10946 = !DILocation(line: 1336, column: 2, scope: !10938)
!10947 = !DILocation(line: 1337, column: 1, scope: !10938)
!10948 = distinct !DISubprogram(name: "k_can_yield", scope: !1580, file: !1580, line: 1384, type: !6559, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10949 = !DILocation(line: 1386, column: 11, scope: !10948)
!10950 = !DILocation(line: 1386, column: 29, scope: !10948)
!10951 = !DILocation(line: 1386, column: 32, scope: !10948)
!10952 = !DILocation(line: 1386, column: 46, scope: !10948)
!10953 = !DILocation(line: 1387, column: 28, scope: !10948)
!10954 = !DILocation(line: 1387, column: 4, scope: !10948)
!10955 = !DILocation(line: 1386, column: 2, scope: !10948)
!10956 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !376, file: !376, line: 989, type: !6559, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!10957 = !DILocation(line: 993, column: 10, scope: !10956)
!10958 = !DILocation(line: 993, column: 2, scope: !10956)
!10959 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !1580, file: !1580, line: 1390, type: !646, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !10960)
!10960 = !{!10961}
!10961 = !DILocalVariable(name: "key", scope: !10959, file: !1580, line: 1396, type: !9448)
!10962 = !DILocation(line: 0, scope: !9456, inlinedAt: !10963)
!10963 = distinct !DILocation(line: 1396, column: 25, scope: !10959)
!10964 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !10965)
!10965 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !10963)
!10966 = !DILocation(line: 0, scope: !9465, inlinedAt: !10965)
!10967 = !DILocation(line: 0, scope: !10959)
!10968 = !DILocation(line: 1400, column: 18, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10970, file: !1580, line: 1399, column: 36)
!10970 = distinct !DILexicalBlock(scope: !10959, file: !1580, line: 1398, column: 6)
!10971 = !DILocation(line: 0, scope: !9625, inlinedAt: !10972)
!10972 = distinct !DILocation(line: 1400, column: 3, scope: !10969)
!10973 = !DILocation(line: 266, column: 15, scope: !9625, inlinedAt: !10972)
!10974 = !DILocation(line: 266, column: 28, scope: !9625, inlinedAt: !10972)
!10975 = !DILocation(line: 0, scope: !9633, inlinedAt: !10976)
!10976 = distinct !DILocation(line: 268, column: 3, scope: !9637, inlinedAt: !10972)
!10977 = !DILocation(line: 234, column: 2, scope: !9633, inlinedAt: !10976)
!10978 = !DILocation(line: 1402, column: 15, scope: !10959)
!10979 = !DILocation(line: 0, scope: !9642, inlinedAt: !10980)
!10980 = distinct !DILocation(line: 1402, column: 2, scope: !10959)
!10981 = !DILocation(line: 252, column: 15, scope: !9642, inlinedAt: !10980)
!10982 = !DILocation(line: 252, column: 28, scope: !9642, inlinedAt: !10980)
!10983 = !DILocation(line: 0, scope: !9649, inlinedAt: !10984)
!10984 = distinct !DILocation(line: 254, column: 3, scope: !9653, inlinedAt: !10980)
!10985 = !DILocation(line: 0, scope: !9656, inlinedAt: !10986)
!10986 = distinct !DILocation(line: 229, column: 2, scope: !9649, inlinedAt: !10984)
!10987 = !DILocation(line: 188, column: 2, scope: !9666, inlinedAt: !10986)
!10988 = !DILocation(line: 188, column: 2, scope: !9668, inlinedAt: !10986)
!10989 = !DILocation(line: 0, scope: !9666, inlinedAt: !10986)
!10990 = !DILocation(line: 189, column: 7, scope: !9671, inlinedAt: !10986)
!10991 = !DILocation(line: 189, column: 35, scope: !9671, inlinedAt: !10986)
!10992 = !DILocation(line: 189, column: 7, scope: !9672, inlinedAt: !10986)
!10993 = !DILocation(line: 191, column: 21, scope: !9676, inlinedAt: !10986)
!10994 = !DILocation(line: 190, column: 4, scope: !9676, inlinedAt: !10986)
!10995 = !DILocation(line: 192, column: 4, scope: !9676, inlinedAt: !10986)
!10996 = distinct !{!10996, !10987, !10997}
!10997 = !DILocation(line: 194, column: 2, scope: !9666, inlinedAt: !10986)
!10998 = !DILocation(line: 196, column: 37, scope: !9656, inlinedAt: !10986)
!10999 = !DILocation(line: 196, column: 2, scope: !9656, inlinedAt: !10986)
!11000 = !DILocation(line: 197, column: 1, scope: !9656, inlinedAt: !10986)
!11001 = !DILocation(line: 1403, column: 2, scope: !10959)
!11002 = !DILocation(line: 0, scope: !10067, inlinedAt: !11003)
!11003 = distinct !DILocation(line: 1404, column: 2, scope: !10959)
!11004 = !DILocation(line: 196, column: 9, scope: !10067, inlinedAt: !11003)
!11005 = !DILocation(line: 1405, column: 1, scope: !10959)
!11006 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !1580, file: !1580, line: 1459, type: !11007, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11009)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{!651, !10247}
!11009 = !{!11010, !11011, !11012}
!11010 = !DILocalVariable(name: "timeout", arg: 1, scope: !11006, file: !1580, line: 1459, type: !10247)
!11011 = !DILocalVariable(name: "ticks", scope: !11006, file: !1580, line: 1461, type: !898)
!11012 = !DILocalVariable(name: "ret", scope: !11006, file: !1580, line: 1480, type: !651)
!11013 = !DILocation(line: 0, scope: !11006)
!11014 = !DILocation(line: 1468, column: 6, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11006, file: !1580, line: 1468, column: 6)
!11016 = !DILocation(line: 1468, column: 6, scope: !11006)
!11017 = !DILocation(line: 1469, column: 20, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11015, file: !1580, line: 1468, column: 40)
!11019 = !DILocation(line: 1469, column: 3, scope: !11018)
!11020 = !DILocation(line: 1473, column: 3, scope: !11018)
!11021 = !DILocation(line: 1478, column: 10, scope: !11006)
!11022 = !DILocation(line: 1480, column: 16, scope: !11006)
!11023 = !DILocation(line: 1485, column: 1, scope: !11006)
!11024 = distinct !DISubprogram(name: "k_thread_suspend", scope: !2534, file: !2534, line: 310, type: !11025, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11027)
!11025 = !DISubroutineType(types: !11026)
!11026 = !{null, !10931}
!11027 = !{!11028}
!11028 = !DILocalVariable(name: "thread", arg: 1, scope: !11024, file: !2534, line: 310, type: !10931)
!11029 = !DILocation(line: 0, scope: !11024)
!11030 = !DILocation(line: 319, column: 2, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11024, file: !2534, line: 319, column: 2)
!11032 = !{i64 2151132245}
!11033 = !DILocation(line: 320, column: 2, scope: !11024)
!11034 = !DILocation(line: 321, column: 1, scope: !11024)
!11035 = distinct !DISubprogram(name: "z_tick_sleep", scope: !1580, file: !1580, line: 1415, type: !11036, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11038)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{!651, !898}
!11038 = !{!11039, !11040, !11041, !11042}
!11039 = !DILocalVariable(name: "ticks", arg: 1, scope: !11035, file: !1580, line: 1415, type: !898)
!11040 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !11035, file: !1580, line: 1418, type: !137)
!11041 = !DILocalVariable(name: "timeout", scope: !11035, file: !1580, line: 1430, type: !10247)
!11042 = !DILocalVariable(name: "key", scope: !11035, file: !1580, line: 1437, type: !9448)
!11043 = !DILocation(line: 0, scope: !11035)
!11044 = !DILocation(line: 1425, column: 12, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11035, file: !1580, line: 1425, column: 6)
!11046 = !DILocation(line: 1425, column: 6, scope: !11035)
!11047 = !DILocation(line: 1426, column: 3, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11045, file: !1580, line: 1425, column: 18)
!11049 = !DILocation(line: 1427, column: 3, scope: !11048)
!11050 = !DILocation(line: 1431, column: 24, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11035, file: !1580, line: 1431, column: 6)
!11052 = !DILocation(line: 1431, column: 6, scope: !11035)
!11053 = !DILocation(line: 1432, column: 35, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11051, file: !1580, line: 1431, column: 30)
!11055 = !DILocation(line: 1432, column: 27, scope: !11054)
!11056 = !DILocation(line: 1433, column: 2, scope: !11054)
!11057 = !DILocation(line: 1434, column: 27, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11051, file: !1580, line: 1433, column: 9)
!11059 = !DILocation(line: 0, scope: !11051)
!11060 = !DILocation(line: 0, scope: !9456, inlinedAt: !11061)
!11061 = distinct !DILocation(line: 1437, column: 25, scope: !11035)
!11062 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !11063)
!11063 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !11061)
!11064 = !DILocation(line: 0, scope: !9465, inlinedAt: !11063)
!11065 = !DILocation(line: 1440, column: 20, scope: !11035)
!11066 = !DILocation(line: 1440, column: 18, scope: !11035)
!11067 = !DILocation(line: 1442, column: 2, scope: !11035)
!11068 = !DILocation(line: 1443, column: 23, scope: !11035)
!11069 = !DILocation(line: 1443, column: 2, scope: !11035)
!11070 = !DILocation(line: 1444, column: 29, scope: !11035)
!11071 = !DILocation(line: 1444, column: 2, scope: !11035)
!11072 = !DILocation(line: 0, scope: !10067, inlinedAt: !11073)
!11073 = distinct !DILocation(line: 1446, column: 8, scope: !11035)
!11074 = !DILocation(line: 196, column: 9, scope: !10067, inlinedAt: !11073)
!11075 = !DILocation(line: 1450, column: 10, scope: !11035)
!11076 = !DILocation(line: 1450, column: 45, scope: !11035)
!11077 = !DILocation(line: 1450, column: 43, scope: !11035)
!11078 = !DILocation(line: 1451, column: 6, scope: !11035)
!11079 = !DILocation(line: 1457, column: 1, scope: !11035)
!11080 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !9289, file: !9289, line: 1103, type: !9290, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11081)
!11081 = !{!11082}
!11082 = !DILocalVariable(name: "t", arg: 1, scope: !11080, file: !9289, line: 1103, type: !163)
!11083 = !DILocation(line: 0, scope: !11080)
!11084 = !DILocation(line: 0, scope: !9503, inlinedAt: !11085)
!11085 = distinct !DILocation(line: 1106, column: 9, scope: !11080)
!11086 = !DILocation(line: 139, column: 13, scope: !11087, inlinedAt: !11085)
!11087 = distinct !DILexicalBlock(scope: !11088, file: !9289, line: 138, column: 10)
!11088 = distinct !DILexicalBlock(scope: !11089, file: !9289, line: 136, column: 7)
!11089 = distinct !DILexicalBlock(scope: !9524, file: !9289, line: 134, column: 17)
!11090 = !DILocation(line: 1106, column: 2, scope: !11080)
!11091 = distinct !DISubprogram(name: "k_yield", scope: !2534, file: !2534, line: 140, type: !646, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!11092 = !DILocation(line: 148, column: 2, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11091, file: !2534, line: 148, column: 2)
!11094 = !{i64 2151131565}
!11095 = !DILocation(line: 149, column: 2, scope: !11091)
!11096 = !DILocation(line: 150, column: 1, scope: !11091)
!11097 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !1580, file: !1580, line: 1495, type: !11098, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11100)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{!651, !103}
!11100 = !{!11101, !11102}
!11101 = !DILocalVariable(name: "us", arg: 1, scope: !11097, file: !1580, line: 1495, type: !103)
!11102 = !DILocalVariable(name: "ticks", scope: !11097, file: !1580, line: 1497, type: !651)
!11103 = !DILocation(line: 0, scope: !11097)
!11104 = !DILocation(line: 1501, column: 31, scope: !11097)
!11105 = !DILocation(line: 1501, column: 10, scope: !11097)
!11106 = !DILocation(line: 1502, column: 23, scope: !11097)
!11107 = !DILocation(line: 1502, column: 10, scope: !11097)
!11108 = !DILocation(line: 1506, column: 31, scope: !11097)
!11109 = !DILocation(line: 1506, column: 9, scope: !11097)
!11110 = !DILocation(line: 1506, column: 2, scope: !11097)
!11111 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !9289, file: !9289, line: 571, type: !9290, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11112)
!11112 = !{!11113}
!11113 = !DILocalVariable(name: "t", arg: 1, scope: !11111, file: !9289, line: 571, type: !163)
!11114 = !DILocation(line: 0, scope: !11111)
!11115 = !DILocation(line: 0, scope: !9503, inlinedAt: !11116)
!11116 = distinct !DILocation(line: 574, column: 9, scope: !11111)
!11117 = !DILocation(line: 135, column: 5, scope: !11089, inlinedAt: !11116)
!11118 = !DILocation(line: 139, column: 13, scope: !11087, inlinedAt: !11116)
!11119 = !DILocation(line: 574, column: 2, scope: !11111)
!11120 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !9289, file: !9289, line: 1187, type: !9290, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11121)
!11121 = !{!11122}
!11122 = !DILocalVariable(name: "t", arg: 1, scope: !11120, file: !9289, line: 1187, type: !163)
!11123 = !DILocation(line: 0, scope: !11120)
!11124 = !DILocation(line: 0, scope: !9503, inlinedAt: !11125)
!11125 = distinct !DILocation(line: 1190, column: 9, scope: !11120)
!11126 = !DILocation(line: 145, column: 13, scope: !11127, inlinedAt: !11125)
!11127 = distinct !DILexicalBlock(scope: !9521, file: !9289, line: 144, column: 10)
!11128 = !DILocation(line: 1190, column: 2, scope: !11120)
!11129 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !1580, file: !1580, line: 1517, type: !11025, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11130)
!11130 = !{!11131}
!11131 = !DILocalVariable(name: "thread", arg: 1, scope: !11129, file: !1580, line: 1517, type: !10931)
!11132 = !DILocation(line: 0, scope: !11129)
!11133 = !DILocation(line: 1521, column: 6, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11129, file: !1580, line: 1521, column: 6)
!11135 = !DILocation(line: 1521, column: 6, scope: !11129)
!11136 = !DILocation(line: 1525, column: 6, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11129, file: !1580, line: 1525, column: 6)
!11138 = !DILocation(line: 1525, column: 37, scope: !11137)
!11139 = !DILocation(line: 1525, column: 6, scope: !11129)
!11140 = !DILocation(line: 1527, column: 20, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !1580, line: 1527, column: 7)
!11142 = distinct !DILexicalBlock(scope: !11137, file: !1580, line: 1525, column: 42)
!11143 = !DILocation(line: 1527, column: 33, scope: !11141)
!11144 = !DILocation(line: 1527, column: 7, scope: !11142)
!11145 = !DILocation(line: 1532, column: 2, scope: !11129)
!11146 = !DILocation(line: 1533, column: 2, scope: !11129)
!11147 = !DILocation(line: 1031, column: 3, scope: !10100, inlinedAt: !11148)
!11148 = distinct !DILocation(line: 48, column: 10, scope: !10104, inlinedAt: !11149)
!11149 = distinct !DILocation(line: 1537, column: 7, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11129, file: !1580, line: 1537, column: 6)
!11151 = !DILocation(line: 0, scope: !10100, inlinedAt: !11148)
!11152 = !DILocation(line: 48, column: 9, scope: !10104, inlinedAt: !11149)
!11153 = !DILocation(line: 1537, column: 6, scope: !11129)
!11154 = !DILocation(line: 1538, column: 3, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11150, file: !1580, line: 1537, column: 25)
!11156 = !DILocation(line: 1539, column: 2, scope: !11155)
!11157 = !DILocation(line: 1540, column: 1, scope: !11129)
!11158 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !8728, file: !8728, line: 101, type: !9574, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11159)
!11159 = !{!11160}
!11160 = !DILocalVariable(name: "thread", arg: 1, scope: !11158, file: !8728, line: 101, type: !1475)
!11161 = !DILocation(line: 0, scope: !11158)
!11162 = !DILocation(line: 103, column: 23, scope: !11158)
!11163 = !DILocation(line: 103, column: 36, scope: !11158)
!11164 = !DILocation(line: 103, column: 55, scope: !11158)
!11165 = !DILocation(line: 103, column: 2, scope: !11158)
!11166 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !1580, file: !1580, line: 1567, type: !11167, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11169)
!11167 = !DISubroutineType(types: !11168)
!11168 = !{!10931}
!11169 = !{!11170}
!11170 = !DILocalVariable(name: "ret", scope: !11166, file: !1580, line: 1577, type: !10931)
!11171 = !DILocation(line: 1577, column: 30, scope: !11166)
!11172 = !DILocation(line: 0, scope: !11166)
!11173 = !DILocation(line: 1582, column: 2, scope: !11166)
!11174 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !1580, file: !1580, line: 1593, type: !6832, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !162)
!11175 = !DILocation(line: 1031, column: 3, scope: !10100, inlinedAt: !11176)
!11176 = distinct !DILocation(line: 48, column: 10, scope: !10104, inlinedAt: !11177)
!11177 = distinct !DILocation(line: 1595, column: 10, scope: !11174)
!11178 = !DILocation(line: 0, scope: !10100, inlinedAt: !11176)
!11179 = !DILocation(line: 48, column: 9, scope: !10104, inlinedAt: !11177)
!11180 = !DILocation(line: 1595, column: 27, scope: !11174)
!11181 = !DILocation(line: 1595, column: 41, scope: !11174)
!11182 = !DILocation(line: 1595, column: 30, scope: !11174)
!11183 = !DILocation(line: 1595, column: 2, scope: !11174)
!11184 = distinct !DISubprogram(name: "z_thread_abort", scope: !1580, file: !1580, line: 1725, type: !9414, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11185)
!11185 = !{!11186, !11187}
!11186 = !DILocalVariable(name: "thread", arg: 1, scope: !11184, file: !1580, line: 1725, type: !1475)
!11187 = !DILocalVariable(name: "key", scope: !11184, file: !1580, line: 1727, type: !9448)
!11188 = !DILocation(line: 0, scope: !11184)
!11189 = !DILocation(line: 0, scope: !9456, inlinedAt: !11190)
!11190 = distinct !DILocation(line: 1727, column: 25, scope: !11184)
!11191 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !11192)
!11192 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !11190)
!11193 = !DILocation(line: 0, scope: !9465, inlinedAt: !11192)
!11194 = !DILocation(line: 1729, column: 20, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11184, file: !1580, line: 1729, column: 6)
!11196 = !DILocation(line: 1729, column: 33, scope: !11195)
!11197 = !DILocation(line: 1729, column: 48, scope: !11195)
!11198 = !DILocation(line: 1729, column: 6, scope: !11184)
!11199 = !DILocation(line: 0, scope: !9483, inlinedAt: !11200)
!11200 = distinct !DILocation(line: 1730, column: 3, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11195, file: !1580, line: 1729, column: 54)
!11202 = !DILocation(line: 0, scope: !9491, inlinedAt: !11203)
!11203 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !11200)
!11204 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !11203)
!11205 = !DILocation(line: 1732, column: 3, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11201, file: !1580, line: 1732, column: 3)
!11207 = !{i64 2151868975, i64 2151868991, i64 2151869017, i64 2151869045, i64 2151869065}
!11208 = !DILocation(line: 1733, column: 3, scope: !11201)
!11209 = !DILocation(line: 1736, column: 20, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11184, file: !1580, line: 1736, column: 6)
!11211 = !DILocation(line: 1736, column: 33, scope: !11210)
!11212 = !DILocation(line: 1736, column: 49, scope: !11210)
!11213 = !DILocation(line: 1736, column: 6, scope: !11184)
!11214 = !DILocation(line: 0, scope: !9483, inlinedAt: !11215)
!11215 = distinct !DILocation(line: 1737, column: 3, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11210, file: !1580, line: 1736, column: 56)
!11217 = !DILocation(line: 0, scope: !9491, inlinedAt: !11218)
!11218 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !11215)
!11219 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !11218)
!11220 = !DILocation(line: 1738, column: 3, scope: !11216)
!11221 = !DILocation(line: 1775, column: 2, scope: !11184)
!11222 = !DILocation(line: 1776, column: 16, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11184, file: !1580, line: 1776, column: 6)
!11224 = !DILocation(line: 1776, column: 13, scope: !11223)
!11225 = !DILocation(line: 1776, column: 25, scope: !11223)
!11226 = !DILocation(line: 1031, column: 3, scope: !10100, inlinedAt: !11227)
!11227 = distinct !DILocation(line: 48, column: 10, scope: !10104, inlinedAt: !11228)
!11228 = distinct !DILocation(line: 1776, column: 29, scope: !11223)
!11229 = !DILocation(line: 0, scope: !10100, inlinedAt: !11227)
!11230 = !DILocation(line: 48, column: 9, scope: !10104, inlinedAt: !11228)
!11231 = !DILocation(line: 1776, column: 6, scope: !11184)
!11232 = !DILocation(line: 0, scope: !10067, inlinedAt: !11233)
!11233 = distinct !DILocation(line: 1777, column: 3, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11223, file: !1580, line: 1776, column: 47)
!11235 = !DILocation(line: 196, column: 9, scope: !10067, inlinedAt: !11233)
!11236 = !DILocation(line: 1779, column: 2, scope: !11234)
!11237 = !DILocation(line: 0, scope: !9483, inlinedAt: !11238)
!11238 = distinct !DILocation(line: 1780, column: 2, scope: !11184)
!11239 = !DILocation(line: 0, scope: !9491, inlinedAt: !11240)
!11240 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !11238)
!11241 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !11240)
!11242 = !DILocation(line: 1781, column: 1, scope: !11184)
!11243 = distinct !DISubprogram(name: "end_thread", scope: !1580, file: !1580, line: 1690, type: !9414, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11244)
!11244 = !{!11245}
!11245 = !DILocalVariable(name: "thread", arg: 1, scope: !11243, file: !1580, line: 1690, type: !1475)
!11246 = !DILocation(line: 0, scope: !11243)
!11247 = !DILocation(line: 1695, column: 20, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11243, file: !1580, line: 1695, column: 6)
!11249 = !DILocation(line: 1695, column: 33, scope: !11248)
!11250 = !DILocation(line: 1695, column: 49, scope: !11248)
!11251 = !DILocation(line: 1695, column: 6, scope: !11243)
!11252 = !DILocation(line: 1697, column: 29, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11248, file: !1580, line: 1695, column: 56)
!11254 = !DILocation(line: 1698, column: 7, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11253, file: !1580, line: 1698, column: 7)
!11256 = !DILocation(line: 1698, column: 7, scope: !11253)
!11257 = !DILocation(line: 0, scope: !9625, inlinedAt: !11258)
!11258 = distinct !DILocation(line: 1699, column: 4, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11255, file: !1580, line: 1698, column: 35)
!11260 = !DILocation(line: 266, column: 28, scope: !9625, inlinedAt: !11258)
!11261 = !DILocation(line: 0, scope: !9633, inlinedAt: !11262)
!11262 = distinct !DILocation(line: 268, column: 3, scope: !9637, inlinedAt: !11258)
!11263 = !DILocation(line: 234, column: 2, scope: !9633, inlinedAt: !11262)
!11264 = !DILocation(line: 1700, column: 3, scope: !11259)
!11265 = !DILocation(line: 1701, column: 20, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11253, file: !1580, line: 1701, column: 7)
!11267 = !DILocation(line: 1701, column: 30, scope: !11266)
!11268 = !DILocation(line: 1701, column: 7, scope: !11253)
!11269 = !DILocation(line: 1702, column: 4, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11266, file: !1580, line: 1701, column: 39)
!11271 = !DILocation(line: 1703, column: 3, scope: !11270)
!11272 = !DILocation(line: 1704, column: 9, scope: !11253)
!11273 = !DILocation(line: 1705, column: 23, scope: !11253)
!11274 = !DILocation(line: 1705, column: 3, scope: !11253)
!11275 = !DILocation(line: 1706, column: 3, scope: !11253)
!11276 = !DILocation(line: 1722, column: 2, scope: !11253)
!11277 = !DILocation(line: 1723, column: 1, scope: !11243)
!11278 = distinct !DISubprogram(name: "unpend_all", scope: !1580, file: !1580, line: 1674, type: !11279, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11281)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{null, !1506}
!11281 = !{!11282, !11283}
!11282 = !DILocalVariable(name: "wait_q", arg: 1, scope: !11278, file: !1580, line: 1674, type: !1506)
!11283 = !DILocalVariable(name: "thread", scope: !11278, file: !1580, line: 1676, type: !1475)
!11284 = !DILocation(line: 0, scope: !11278)
!11285 = !DILocation(line: 1678, column: 19, scope: !11278)
!11286 = !DILocation(line: 1678, column: 41, scope: !11278)
!11287 = !DILocation(line: 1678, column: 2, scope: !11278)
!11288 = !DILocation(line: 1679, column: 3, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11278, file: !1580, line: 1678, column: 50)
!11290 = !DILocation(line: 1680, column: 9, scope: !11289)
!11291 = !DILocalVariable(name: "thread", arg: 1, scope: !11292, file: !8748, line: 65, type: !1475)
!11292 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !8748, file: !8748, line: 65, type: !11293, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11295)
!11293 = !DISubroutineType(types: !11294)
!11294 = !{null, !1475, !32}
!11295 = !{!11291, !11296}
!11296 = !DILocalVariable(name: "value", arg: 2, scope: !11292, file: !8748, line: 65, type: !32)
!11297 = !DILocation(line: 0, scope: !11292, inlinedAt: !11298)
!11298 = distinct !DILocation(line: 1681, column: 3, scope: !11289)
!11299 = !DILocation(line: 67, column: 15, scope: !11292, inlinedAt: !11298)
!11300 = !DILocation(line: 67, column: 33, scope: !11292, inlinedAt: !11298)
!11301 = !DILocation(line: 1682, column: 3, scope: !11289)
!11302 = distinct !{!11302, !11287, !11303}
!11303 = !DILocation(line: 1683, column: 2, scope: !11278)
!11304 = !DILocation(line: 1684, column: 1, scope: !11278)
!11305 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !1580, file: !1580, line: 1794, type: !11306, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11308)
!11306 = !DISubroutineType(types: !11307)
!11307 = !{!103, !1475, !10247}
!11308 = !{!11309, !11310, !11311, !11312}
!11309 = !DILocalVariable(name: "thread", arg: 1, scope: !11305, file: !1580, line: 1794, type: !1475)
!11310 = !DILocalVariable(name: "timeout", arg: 2, scope: !11305, file: !1580, line: 1794, type: !10247)
!11311 = !DILocalVariable(name: "key", scope: !11305, file: !1580, line: 1796, type: !9448)
!11312 = !DILocalVariable(name: "ret", scope: !11305, file: !1580, line: 1797, type: !103)
!11313 = !DILocation(line: 0, scope: !11305)
!11314 = !DILocation(line: 0, scope: !9456, inlinedAt: !11315)
!11315 = distinct !DILocation(line: 1796, column: 25, scope: !11305)
!11316 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !11317)
!11317 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !11315)
!11318 = !DILocation(line: 0, scope: !9465, inlinedAt: !11317)
!11319 = !DILocation(line: 1801, column: 20, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11305, file: !1580, line: 1801, column: 6)
!11321 = !DILocation(line: 1801, column: 33, scope: !11320)
!11322 = !DILocation(line: 1801, column: 49, scope: !11320)
!11323 = !DILocation(line: 1801, column: 6, scope: !11305)
!11324 = !DILocation(line: 1803, column: 13, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11320, file: !1580, line: 1803, column: 13)
!11326 = !DILocation(line: 1803, column: 13, scope: !11320)
!11327 = !DILocation(line: 1805, column: 24, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11325, file: !1580, line: 1805, column: 13)
!11329 = !DILocation(line: 1805, column: 21, scope: !11328)
!11330 = !DILocation(line: 1805, column: 34, scope: !11328)
!11331 = !DILocation(line: 1806, column: 20, scope: !11328)
!11332 = !DILocation(line: 1806, column: 44, scope: !11328)
!11333 = !DILocation(line: 1806, column: 30, scope: !11328)
!11334 = !DILocation(line: 1805, column: 13, scope: !11325)
!11335 = !DILocation(line: 1810, column: 42, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11328, file: !1580, line: 1808, column: 9)
!11337 = !DILocation(line: 1810, column: 3, scope: !11336)
!11338 = !DILocation(line: 1811, column: 22, scope: !11336)
!11339 = !DILocation(line: 1811, column: 3, scope: !11336)
!11340 = !DILocation(line: 0, scope: !10067, inlinedAt: !11341)
!11341 = distinct !DILocation(line: 1814, column: 9, scope: !11336)
!11342 = !DILocation(line: 196, column: 9, scope: !10067, inlinedAt: !11341)
!11343 = !DILocation(line: 1817, column: 3, scope: !11336)
!11344 = !DILocation(line: 0, scope: !11320)
!11345 = !DILocation(line: 0, scope: !9483, inlinedAt: !11346)
!11346 = distinct !DILocation(line: 1822, column: 2, scope: !11305)
!11347 = !DILocation(line: 0, scope: !9491, inlinedAt: !11348)
!11348 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !11346)
!11349 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !11348)
!11350 = !DILocation(line: 1823, column: 2, scope: !11305)
!11351 = !DILocation(line: 1824, column: 1, scope: !11305)
!11352 = distinct !DISubprogram(name: "z_sched_wake", scope: !1580, file: !1580, line: 1882, type: !11353, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11355)
!11353 = !DISubroutineType(types: !11354)
!11354 = !{!259, !1506, !103, !102}
!11355 = !{!11356, !11357, !11358, !11359, !11360, !11361, !11363}
!11356 = !DILocalVariable(name: "wait_q", arg: 1, scope: !11352, file: !1580, line: 1882, type: !1506)
!11357 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !11352, file: !1580, line: 1882, type: !103)
!11358 = !DILocalVariable(name: "swap_data", arg: 3, scope: !11352, file: !1580, line: 1882, type: !102)
!11359 = !DILocalVariable(name: "thread", scope: !11352, file: !1580, line: 1884, type: !1475)
!11360 = !DILocalVariable(name: "ret", scope: !11352, file: !1580, line: 1885, type: !259)
!11361 = !DILocalVariable(name: "__i", scope: !11362, file: !1580, line: 1887, type: !9448)
!11362 = distinct !DILexicalBlock(scope: !11352, file: !1580, line: 1887, column: 2)
!11363 = !DILocalVariable(name: "__key", scope: !11362, file: !1580, line: 1887, type: !9448)
!11364 = !DILocation(line: 0, scope: !11352)
!11365 = !DILocation(line: 0, scope: !11362)
!11366 = !DILocation(line: 0, scope: !9456, inlinedAt: !11367)
!11367 = distinct !DILocation(line: 1887, column: 2, scope: !11362)
!11368 = !DILocation(line: 55, column: 2, scope: !9465, inlinedAt: !11369)
!11369 = distinct !DILocation(line: 145, column: 10, scope: !9456, inlinedAt: !11367)
!11370 = !DILocation(line: 0, scope: !9465, inlinedAt: !11369)
!11371 = !DILocation(line: 1888, column: 12, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !1580, line: 1887, column: 26)
!11373 = distinct !DILexicalBlock(scope: !11362, file: !1580, line: 1887, column: 2)
!11374 = !DILocation(line: 1890, column: 14, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11372, file: !1580, line: 1890, column: 7)
!11376 = !DILocation(line: 1890, column: 7, scope: !11372)
!11377 = !DILocalVariable(name: "thread", arg: 1, scope: !11378, file: !11379, line: 134, type: !1475)
!11378 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !11379, file: !11379, line: 134, type: !11380, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11382)
!11379 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11380 = !DISubroutineType(types: !11381)
!11381 = !{null, !1475, !32, !102}
!11382 = !{!11377, !11383, !11384}
!11383 = !DILocalVariable(name: "value", arg: 2, scope: !11378, file: !11379, line: 135, type: !32)
!11384 = !DILocalVariable(name: "data", arg: 3, scope: !11378, file: !11379, line: 136, type: !102)
!11385 = !DILocation(line: 0, scope: !11378, inlinedAt: !11386)
!11386 = distinct !DILocation(line: 1891, column: 4, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11375, file: !1580, line: 1890, column: 23)
!11388 = !DILocation(line: 0, scope: !11292, inlinedAt: !11389)
!11389 = distinct !DILocation(line: 138, column: 2, scope: !11378, inlinedAt: !11386)
!11390 = !DILocation(line: 67, column: 15, scope: !11292, inlinedAt: !11389)
!11391 = !DILocation(line: 67, column: 33, scope: !11292, inlinedAt: !11389)
!11392 = !DILocation(line: 139, column: 15, scope: !11378, inlinedAt: !11386)
!11393 = !DILocation(line: 139, column: 25, scope: !11378, inlinedAt: !11386)
!11394 = !DILocation(line: 1894, column: 4, scope: !11387)
!11395 = !DILocation(line: 1895, column: 10, scope: !11387)
!11396 = !DILocation(line: 1896, column: 4, scope: !11387)
!11397 = !DILocation(line: 1898, column: 3, scope: !11387)
!11398 = !DILocation(line: 0, scope: !9483, inlinedAt: !11399)
!11399 = distinct !DILocation(line: 1887, column: 2, scope: !11373)
!11400 = !DILocation(line: 0, scope: !9491, inlinedAt: !11401)
!11401 = distinct !DILocation(line: 215, column: 2, scope: !9483, inlinedAt: !11399)
!11402 = !DILocation(line: 95, column: 2, scope: !9491, inlinedAt: !11401)
!11403 = !DILocation(line: 1901, column: 2, scope: !11352)
!11404 = distinct !DISubprogram(name: "z_sched_wait", scope: !1580, file: !1580, line: 1904, type: !11405, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1472, retainedNodes: !11408)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{!103, !9459, !9448, !1506, !10247, !11407}
!11407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!11408 = !{!11409, !11410, !11411, !11412, !11413, !11414}
!11409 = !DILocalVariable(name: "lock", arg: 1, scope: !11404, file: !1580, line: 1904, type: !9459)
!11410 = !DILocalVariable(name: "key", arg: 2, scope: !11404, file: !1580, line: 1904, type: !9448)
!11411 = !DILocalVariable(name: "wait_q", arg: 3, scope: !11404, file: !1580, line: 1905, type: !1506)
!11412 = !DILocalVariable(name: "timeout", arg: 4, scope: !11404, file: !1580, line: 1905, type: !10247)
!11413 = !DILocalVariable(name: "data", arg: 5, scope: !11404, file: !1580, line: 1905, type: !11407)
!11414 = !DILocalVariable(name: "ret", scope: !11404, file: !1580, line: 1907, type: !103)
!11415 = !DILocation(line: 0, scope: !11404)
!11416 = !DILocation(line: 1907, column: 12, scope: !11404)
!11417 = !DILocation(line: 1909, column: 11, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11404, file: !1580, line: 1909, column: 6)
!11419 = !DILocation(line: 1909, column: 6, scope: !11404)
!11420 = !DILocation(line: 1910, column: 11, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11418, file: !1580, line: 1909, column: 20)
!11422 = !DILocation(line: 1910, column: 26, scope: !11421)
!11423 = !DILocation(line: 1910, column: 9, scope: !11421)
!11424 = !DILocation(line: 1911, column: 2, scope: !11421)
!11425 = !DILocation(line: 1912, column: 2, scope: !11404)
!11426 = distinct !DISubprogram(name: "z_data_copy", scope: !11427, file: !11427, line: 22, type: !646, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !162)
!11427 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11428 = !DILocation(line: 24, column: 2, scope: !11426)
!11429 = !DILocation(line: 27, column: 2, scope: !11426)
!11430 = !DILocation(line: 71, column: 1, scope: !11426)
!11431 = distinct !DISubprogram(name: "z_add_timeout", scope: !1617, file: !1617, line: 88, type: !11432, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11438)
!11432 = !DISubroutineType(types: !11433)
!11433 = !{null, !1590, !1609, !11434}
!11434 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !899, line: 67, baseType: !11435)
!11435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 65, size: 64, elements: !11436)
!11436 = !{!11437}
!11437 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11435, file: !899, line: 66, baseType: !898, size: 64)
!11438 = !{!11439, !11440, !11441, !11442, !11448, !11449, !11452, !11455}
!11439 = !DILocalVariable(name: "to", arg: 1, scope: !11431, file: !1617, line: 88, type: !1590)
!11440 = !DILocalVariable(name: "fn", arg: 2, scope: !11431, file: !1617, line: 88, type: !1609)
!11441 = !DILocalVariable(name: "timeout", arg: 3, scope: !11431, file: !1617, line: 89, type: !11434)
!11442 = !DILocalVariable(name: "__i", scope: !11443, file: !1617, line: 102, type: !11444)
!11443 = distinct !DILexicalBlock(scope: !11431, file: !1617, line: 102, column: 2)
!11444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !387, line: 106, baseType: !11445)
!11445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !387, line: 32, size: 32, elements: !11446)
!11446 = !{!11447}
!11447 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11445, file: !387, line: 33, baseType: !103, size: 32)
!11448 = !DILocalVariable(name: "__key", scope: !11443, file: !1617, line: 102, type: !11444)
!11449 = !DILocalVariable(name: "t", scope: !11450, file: !1617, line: 103, type: !1590)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !1617, line: 102, column: 24)
!11451 = distinct !DILexicalBlock(scope: !11443, file: !1617, line: 102, column: 2)
!11452 = !DILocalVariable(name: "ticks", scope: !11453, file: !1617, line: 107, type: !898)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !1617, line: 106, column: 39)
!11454 = distinct !DILexicalBlock(scope: !11450, file: !1617, line: 105, column: 7)
!11455 = !DILocalVariable(name: "next_time", scope: !11456, file: !1617, line: 137, type: !651)
!11456 = distinct !DILexicalBlock(scope: !11457, file: !1617, line: 127, column: 22)
!11457 = distinct !DILexicalBlock(scope: !11450, file: !1617, line: 127, column: 7)
!11458 = !DILocation(line: 0, scope: !11431)
!11459 = !DILocation(line: 91, column: 6, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11431, file: !1617, line: 91, column: 6)
!11461 = !DILocation(line: 91, column: 6, scope: !11431)
!11462 = !DILocation(line: 100, column: 6, scope: !11431)
!11463 = !DILocation(line: 100, column: 9, scope: !11431)
!11464 = !DILocation(line: 0, scope: !11443)
!11465 = !DILocalVariable(name: "l", arg: 1, scope: !11466, file: !387, line: 136, type: !11469)
!11466 = distinct !DISubprogram(name: "k_spin_lock", scope: !387, file: !387, line: 136, type: !11467, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11470)
!11467 = !DISubroutineType(types: !11468)
!11468 = !{!11444, !11469}
!11469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 32)
!11470 = !{!11465, !11471}
!11471 = !DILocalVariable(name: "k", scope: !11466, file: !387, line: 139, type: !11444)
!11472 = !DILocation(line: 0, scope: !11466, inlinedAt: !11473)
!11473 = distinct !DILocation(line: 102, column: 2, scope: !11443)
!11474 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11479)
!11475 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5308, file: !5308, line: 42, type: !5309, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11476)
!11476 = !{!11477, !11478}
!11477 = !DILocalVariable(name: "key", scope: !11475, file: !5308, line: 44, type: !32)
!11478 = !DILocalVariable(name: "tmp", scope: !11475, file: !5308, line: 53, type: !32)
!11479 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11473)
!11480 = !{i64 1325865}
!11481 = !DILocation(line: 0, scope: !11475, inlinedAt: !11479)
!11482 = !DILocation(line: 106, column: 33, scope: !11454)
!11483 = !DILocation(line: 105, column: 7, scope: !11450)
!11484 = !DILocation(line: 107, column: 50, scope: !11453)
!11485 = !DILocation(line: 107, column: 48, scope: !11453)
!11486 = !DILocation(line: 0, scope: !11453)
!11487 = !DILocation(line: 109, column: 17, scope: !11453)
!11488 = !DILocation(line: 110, column: 3, scope: !11453)
!11489 = !DILocation(line: 111, column: 31, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11454, file: !1617, line: 110, column: 10)
!11491 = !DILocation(line: 111, column: 37, scope: !11490)
!11492 = !DILocation(line: 111, column: 35, scope: !11490)
!11493 = !DILocation(line: 0, scope: !11454)
!11494 = !DILocation(line: 109, column: 8, scope: !11453)
!11495 = !DILocation(line: 109, column: 15, scope: !11453)
!11496 = !DILocation(line: 114, column: 12, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11450, file: !1617, line: 114, column: 3)
!11498 = !DILocation(line: 0, scope: !11450)
!11499 = !DILocation(line: 114, column: 3, scope: !11497)
!11500 = !DILocation(line: 115, column: 24, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !1617, line: 115, column: 8)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !1617, line: 114, column: 45)
!11503 = distinct !DILexicalBlock(scope: !11497, file: !1617, line: 114, column: 3)
!11504 = !DILocation(line: 115, column: 11, scope: !11501)
!11505 = !DILocation(line: 115, column: 18, scope: !11501)
!11506 = !DILocation(line: 115, column: 8, scope: !11502)
!11507 = !DILocation(line: 116, column: 15, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11501, file: !1617, line: 115, column: 32)
!11509 = !DILocation(line: 117, column: 26, scope: !11508)
!11510 = !DILocation(line: 117, column: 37, scope: !11508)
!11511 = !DILocation(line: 117, column: 5, scope: !11508)
!11512 = !DILocation(line: 123, column: 7, scope: !11450)
!11513 = !DILocation(line: 120, column: 15, scope: !11502)
!11514 = !DILocation(line: 114, column: 36, scope: !11503)
!11515 = distinct !{!11515, !11499, !11516}
!11516 = !DILocation(line: 121, column: 3, scope: !11497)
!11517 = !DILocation(line: 124, column: 41, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11519, file: !1617, line: 123, column: 18)
!11519 = distinct !DILexicalBlock(scope: !11450, file: !1617, line: 123, column: 7)
!11520 = !DILocation(line: 124, column: 4, scope: !11518)
!11521 = !DILocation(line: 125, column: 3, scope: !11518)
!11522 = !DILocation(line: 127, column: 13, scope: !11457)
!11523 = !DILocation(line: 127, column: 10, scope: !11457)
!11524 = !DILocation(line: 127, column: 7, scope: !11450)
!11525 = !DILocation(line: 137, column: 24, scope: !11456)
!11526 = !DILocation(line: 0, scope: !11456)
!11527 = !DILocation(line: 139, column: 18, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11456, file: !1617, line: 139, column: 8)
!11529 = !DILocation(line: 139, column: 23, scope: !11528)
!11530 = !DILocation(line: 141, column: 5, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11528, file: !1617, line: 140, column: 48)
!11532 = !DILocation(line: 142, column: 4, scope: !11531)
!11533 = !DILocalVariable(name: "key", arg: 2, scope: !11534, file: !387, line: 190, type: !11444)
!11534 = distinct !DISubprogram(name: "k_spin_unlock", scope: !387, file: !387, line: 189, type: !11535, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11537)
!11535 = !DISubroutineType(types: !11536)
!11536 = !{null, !11469, !11444}
!11537 = !{!11538, !11533}
!11538 = !DILocalVariable(name: "l", arg: 1, scope: !11534, file: !387, line: 189, type: !11469)
!11539 = !DILocation(line: 0, scope: !11534, inlinedAt: !11540)
!11540 = distinct !DILocation(line: 102, column: 2, scope: !11451)
!11541 = !DILocalVariable(name: "key", arg: 1, scope: !11542, file: !5308, line: 84, type: !32)
!11542 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5308, file: !5308, line: 84, type: !5382, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11543)
!11543 = !{!11541}
!11544 = !DILocation(line: 0, scope: !11542, inlinedAt: !11545)
!11545 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11540)
!11546 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11545)
!11547 = !{i64 1326682}
!11548 = !DILocation(line: 148, column: 1, scope: !11431)
!11549 = distinct !DISubprogram(name: "elapsed", scope: !1617, file: !1617, line: 62, type: !11550, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !162)
!11550 = !DISubroutineType(types: !11551)
!11551 = !{!651}
!11552 = !DILocation(line: 64, column: 9, scope: !11549)
!11553 = !DILocation(line: 64, column: 28, scope: !11549)
!11554 = !DILocation(line: 64, column: 35, scope: !11549)
!11555 = !DILocation(line: 64, column: 2, scope: !11549)
!11556 = distinct !DISubprogram(name: "first", scope: !1617, file: !1617, line: 39, type: !11557, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11559)
!11557 = !DISubroutineType(types: !11558)
!11558 = !{!1590}
!11559 = !{!11560}
!11560 = !DILocalVariable(name: "t", scope: !11556, file: !1617, line: 41, type: !11561)
!11561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!11562 = !DILocation(line: 41, column: 19, scope: !11556)
!11563 = !DILocation(line: 0, scope: !11556)
!11564 = !DILocation(line: 43, column: 9, scope: !11556)
!11565 = !DILocation(line: 43, column: 2, scope: !11556)
!11566 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !292, file: !292, line: 443, type: !11567, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11569)
!11567 = !DISubroutineType(types: !11568)
!11568 = !{null, !11561, !11561}
!11569 = !{!11570, !11571, !11572}
!11570 = !DILocalVariable(name: "successor", arg: 1, scope: !11566, file: !292, line: 443, type: !11561)
!11571 = !DILocalVariable(name: "node", arg: 2, scope: !11566, file: !292, line: 443, type: !11561)
!11572 = !DILocalVariable(name: "prev", scope: !11566, file: !292, line: 445, type: !11573)
!11573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11561)
!11574 = !DILocation(line: 0, scope: !11566)
!11575 = !DILocation(line: 445, column: 39, scope: !11566)
!11576 = !DILocation(line: 447, column: 8, scope: !11566)
!11577 = !DILocation(line: 447, column: 13, scope: !11566)
!11578 = !DILocation(line: 448, column: 8, scope: !11566)
!11579 = !DILocation(line: 448, column: 13, scope: !11566)
!11580 = !DILocation(line: 449, column: 8, scope: !11566)
!11581 = !DILocation(line: 449, column: 13, scope: !11566)
!11582 = !DILocation(line: 450, column: 18, scope: !11566)
!11583 = !DILocation(line: 451, column: 1, scope: !11566)
!11584 = distinct !DISubprogram(name: "next", scope: !1617, file: !1617, line: 46, type: !11585, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11587)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!1590, !1590}
!11587 = !{!11588, !11589}
!11588 = !DILocalVariable(name: "t", arg: 1, scope: !11584, file: !1617, line: 46, type: !1590)
!11589 = !DILocalVariable(name: "n", scope: !11584, file: !1617, line: 48, type: !11561)
!11590 = !DILocation(line: 0, scope: !11584)
!11591 = !DILocation(line: 48, column: 58, scope: !11584)
!11592 = !DILocation(line: 48, column: 19, scope: !11584)
!11593 = !DILocation(line: 50, column: 9, scope: !11584)
!11594 = !DILocation(line: 50, column: 2, scope: !11584)
!11595 = distinct !DISubprogram(name: "sys_dlist_append", scope: !292, file: !292, line: 404, type: !11596, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11599)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{null, !11598, !11561}
!11598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 32)
!11599 = !{!11600, !11601, !11602}
!11600 = !DILocalVariable(name: "list", arg: 1, scope: !11595, file: !292, line: 404, type: !11598)
!11601 = !DILocalVariable(name: "node", arg: 2, scope: !11595, file: !292, line: 404, type: !11561)
!11602 = !DILocalVariable(name: "tail", scope: !11595, file: !292, line: 406, type: !11573)
!11603 = !DILocation(line: 0, scope: !11595)
!11604 = !DILocation(line: 406, column: 34, scope: !11595)
!11605 = !DILocation(line: 408, column: 8, scope: !11595)
!11606 = !DILocation(line: 408, column: 13, scope: !11595)
!11607 = !DILocation(line: 409, column: 8, scope: !11595)
!11608 = !DILocation(line: 409, column: 13, scope: !11595)
!11609 = !DILocation(line: 411, column: 8, scope: !11595)
!11610 = !DILocation(line: 411, column: 13, scope: !11595)
!11611 = !DILocation(line: 412, column: 13, scope: !11595)
!11612 = !DILocation(line: 413, column: 1, scope: !11595)
!11613 = distinct !DISubprogram(name: "next_timeout", scope: !1617, file: !1617, line: 67, type: !11550, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11614)
!11614 = !{!11615, !11616, !11617}
!11615 = !DILocalVariable(name: "to", scope: !11613, file: !1617, line: 69, type: !1590)
!11616 = !DILocalVariable(name: "ticks_elapsed", scope: !11613, file: !1617, line: 70, type: !651)
!11617 = !DILocalVariable(name: "ret", scope: !11613, file: !1617, line: 71, type: !651)
!11618 = !DILocation(line: 69, column: 24, scope: !11613)
!11619 = !DILocation(line: 0, scope: !11613)
!11620 = !DILocation(line: 70, column: 26, scope: !11613)
!11621 = !DILocation(line: 73, column: 10, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11613, file: !1617, line: 73, column: 6)
!11623 = !DILocation(line: 73, column: 19, scope: !11622)
!11624 = !DILocation(line: 74, column: 21, scope: !11622)
!11625 = !DILocation(line: 74, column: 30, scope: !11622)
!11626 = !DILocation(line: 74, column: 28, scope: !11622)
!11627 = !DILocation(line: 74, column: 45, scope: !11622)
!11628 = !DILocation(line: 73, column: 6, scope: !11613)
!11629 = !DILocation(line: 77, column: 9, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11622, file: !1617, line: 76, column: 9)
!11631 = !DILocation(line: 0, scope: !11622)
!11632 = !DILocation(line: 81, column: 20, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11613, file: !1617, line: 81, column: 6)
!11634 = !DILocation(line: 81, column: 6, scope: !11633)
!11635 = !DILocation(line: 81, column: 32, scope: !11633)
!11636 = !DILocation(line: 85, column: 2, scope: !11613)
!11637 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !292, file: !292, line: 341, type: !11638, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11640)
!11638 = !DISubroutineType(types: !11639)
!11639 = !{!11561, !11598, !11561}
!11640 = !{!11641, !11642}
!11641 = !DILocalVariable(name: "list", arg: 1, scope: !11637, file: !292, line: 341, type: !11598)
!11642 = !DILocalVariable(name: "node", arg: 2, scope: !11637, file: !292, line: 342, type: !11561)
!11643 = !DILocation(line: 0, scope: !11637)
!11644 = !DILocation(line: 344, column: 15, scope: !11637)
!11645 = !DILocation(line: 344, column: 9, scope: !11637)
!11646 = !DILocation(line: 344, column: 26, scope: !11637)
!11647 = !DILocation(line: 344, column: 2, scope: !11637)
!11648 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !292, file: !292, line: 325, type: !11638, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11649)
!11649 = !{!11650, !11651}
!11650 = !DILocalVariable(name: "list", arg: 1, scope: !11648, file: !292, line: 325, type: !11598)
!11651 = !DILocalVariable(name: "node", arg: 2, scope: !11648, file: !292, line: 326, type: !11561)
!11652 = !DILocation(line: 0, scope: !11648)
!11653 = !DILocation(line: 328, column: 24, scope: !11648)
!11654 = !DILocation(line: 328, column: 15, scope: !11648)
!11655 = !DILocation(line: 328, column: 9, scope: !11648)
!11656 = !DILocation(line: 328, column: 45, scope: !11648)
!11657 = !DILocation(line: 328, column: 2, scope: !11648)
!11658 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !292, file: !292, line: 294, type: !11659, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11661)
!11659 = !DISubroutineType(types: !11660)
!11660 = !{!11561, !11598}
!11661 = !{!11662}
!11662 = !DILocalVariable(name: "list", arg: 1, scope: !11658, file: !292, line: 294, type: !11598)
!11663 = !DILocation(line: 0, scope: !11658)
!11664 = !DILocation(line: 296, column: 9, scope: !11658)
!11665 = !DILocation(line: 296, column: 2, scope: !11658)
!11666 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !292, file: !292, line: 266, type: !11667, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11669)
!11667 = !DISubroutineType(types: !11668)
!11668 = !{!259, !11598}
!11669 = !{!11670}
!11670 = !DILocalVariable(name: "list", arg: 1, scope: !11666, file: !292, line: 266, type: !11598)
!11671 = !DILocation(line: 0, scope: !11666)
!11672 = !DILocation(line: 268, column: 15, scope: !11666)
!11673 = !DILocation(line: 268, column: 20, scope: !11666)
!11674 = !DILocation(line: 268, column: 2, scope: !11666)
!11675 = distinct !DISubprogram(name: "z_abort_timeout", scope: !1617, file: !1617, line: 150, type: !11676, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11678)
!11676 = !DISubroutineType(types: !11677)
!11677 = !{!103, !1590}
!11678 = !{!11679, !11680, !11681, !11683}
!11679 = !DILocalVariable(name: "to", arg: 1, scope: !11675, file: !1617, line: 150, type: !1590)
!11680 = !DILocalVariable(name: "ret", scope: !11675, file: !1617, line: 152, type: !103)
!11681 = !DILocalVariable(name: "__i", scope: !11682, file: !1617, line: 154, type: !11444)
!11682 = distinct !DILexicalBlock(scope: !11675, file: !1617, line: 154, column: 2)
!11683 = !DILocalVariable(name: "__key", scope: !11682, file: !1617, line: 154, type: !11444)
!11684 = !DILocation(line: 0, scope: !11675)
!11685 = !DILocation(line: 0, scope: !11682)
!11686 = !DILocation(line: 0, scope: !11466, inlinedAt: !11687)
!11687 = distinct !DILocation(line: 154, column: 2, scope: !11682)
!11688 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11689)
!11689 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11687)
!11690 = !DILocation(line: 0, scope: !11475, inlinedAt: !11689)
!11691 = !DILocation(line: 155, column: 7, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11693, file: !1617, line: 155, column: 7)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !1617, line: 154, column: 24)
!11694 = distinct !DILexicalBlock(scope: !11682, file: !1617, line: 154, column: 2)
!11695 = !DILocation(line: 155, column: 7, scope: !11693)
!11696 = !DILocation(line: 156, column: 4, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11692, file: !1617, line: 155, column: 39)
!11698 = !DILocation(line: 158, column: 3, scope: !11697)
!11699 = !DILocation(line: 0, scope: !11534, inlinedAt: !11700)
!11700 = distinct !DILocation(line: 154, column: 2, scope: !11694)
!11701 = !DILocation(line: 0, scope: !11542, inlinedAt: !11702)
!11702 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11700)
!11703 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11702)
!11704 = !DILocation(line: 161, column: 2, scope: !11675)
!11705 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !292, file: !292, line: 225, type: !11706, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11710)
!11706 = !DISubroutineType(types: !11707)
!11707 = !{!259, !11708}
!11708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11709, size: 32)
!11709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!11710 = !{!11711}
!11711 = !DILocalVariable(name: "node", arg: 1, scope: !11705, file: !292, line: 225, type: !11708)
!11712 = !DILocation(line: 0, scope: !11705)
!11713 = !DILocation(line: 227, column: 15, scope: !11705)
!11714 = !DILocation(line: 227, column: 20, scope: !11705)
!11715 = !DILocation(line: 227, column: 2, scope: !11705)
!11716 = distinct !DISubprogram(name: "remove_timeout", scope: !1617, file: !1617, line: 53, type: !1611, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11717)
!11717 = !{!11718}
!11718 = !DILocalVariable(name: "t", arg: 1, scope: !11716, file: !1617, line: 53, type: !1590)
!11719 = !DILocation(line: 0, scope: !11716)
!11720 = !DILocation(line: 55, column: 6, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11716, file: !1617, line: 55, column: 6)
!11722 = !DILocation(line: 55, column: 14, scope: !11721)
!11723 = !DILocation(line: 55, column: 6, scope: !11716)
!11724 = !DILocation(line: 56, column: 25, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11721, file: !1617, line: 55, column: 23)
!11726 = !DILocation(line: 56, column: 12, scope: !11725)
!11727 = !DILocation(line: 56, column: 19, scope: !11725)
!11728 = !DILocation(line: 57, column: 2, scope: !11725)
!11729 = !DILocation(line: 59, column: 23, scope: !11716)
!11730 = !DILocation(line: 59, column: 2, scope: !11716)
!11731 = !DILocation(line: 60, column: 1, scope: !11716)
!11732 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !292, file: !292, line: 496, type: !11733, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11735)
!11733 = !DISubroutineType(types: !11734)
!11734 = !{null, !11561}
!11735 = !{!11736, !11737, !11738}
!11736 = !DILocalVariable(name: "node", arg: 1, scope: !11732, file: !292, line: 496, type: !11561)
!11737 = !DILocalVariable(name: "prev", scope: !11732, file: !292, line: 498, type: !11573)
!11738 = !DILocalVariable(name: "next", scope: !11732, file: !292, line: 499, type: !11573)
!11739 = !DILocation(line: 0, scope: !11732)
!11740 = !DILocation(line: 498, column: 34, scope: !11732)
!11741 = !DILocation(line: 499, column: 34, scope: !11732)
!11742 = !DILocation(line: 501, column: 8, scope: !11732)
!11743 = !DILocation(line: 501, column: 13, scope: !11732)
!11744 = !DILocation(line: 502, column: 8, scope: !11732)
!11745 = !DILocation(line: 502, column: 13, scope: !11732)
!11746 = !DILocation(line: 503, column: 2, scope: !11732)
!11747 = !DILocation(line: 504, column: 1, scope: !11732)
!11748 = distinct !DISubprogram(name: "sys_dnode_init", scope: !292, file: !292, line: 211, type: !11733, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11749)
!11749 = !{!11750}
!11750 = !DILocalVariable(name: "node", arg: 1, scope: !11748, file: !292, line: 211, type: !11561)
!11751 = !DILocation(line: 0, scope: !11748)
!11752 = !DILocation(line: 213, column: 8, scope: !11748)
!11753 = !DILocation(line: 213, column: 13, scope: !11748)
!11754 = !DILocation(line: 214, column: 8, scope: !11748)
!11755 = !DILocation(line: 214, column: 13, scope: !11748)
!11756 = !DILocation(line: 215, column: 1, scope: !11748)
!11757 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !1617, file: !1617, line: 183, type: !11758, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11762)
!11758 = !DISubroutineType(types: !11759)
!11759 = !{!898, !11760}
!11760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11761, size: 32)
!11761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!11762 = !{!11763, !11764, !11765, !11767}
!11763 = !DILocalVariable(name: "timeout", arg: 1, scope: !11757, file: !1617, line: 183, type: !11760)
!11764 = !DILocalVariable(name: "ticks", scope: !11757, file: !1617, line: 185, type: !898)
!11765 = !DILocalVariable(name: "__i", scope: !11766, file: !1617, line: 187, type: !11444)
!11766 = distinct !DILexicalBlock(scope: !11757, file: !1617, line: 187, column: 2)
!11767 = !DILocalVariable(name: "__key", scope: !11766, file: !1617, line: 187, type: !11444)
!11768 = !DILocation(line: 0, scope: !11757)
!11769 = !DILocation(line: 0, scope: !11766)
!11770 = !DILocation(line: 0, scope: !11466, inlinedAt: !11771)
!11771 = distinct !DILocation(line: 187, column: 2, scope: !11766)
!11772 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11773)
!11773 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11771)
!11774 = !DILocation(line: 0, scope: !11475, inlinedAt: !11773)
!11775 = !DILocation(line: 188, column: 11, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !1617, line: 187, column: 24)
!11777 = distinct !DILexicalBlock(scope: !11766, file: !1617, line: 187, column: 2)
!11778 = !DILocation(line: 0, scope: !11534, inlinedAt: !11779)
!11779 = distinct !DILocation(line: 187, column: 2, scope: !11777)
!11780 = !DILocation(line: 0, scope: !11542, inlinedAt: !11781)
!11781 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11779)
!11782 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11781)
!11783 = !DILocation(line: 191, column: 2, scope: !11757)
!11784 = distinct !DISubprogram(name: "timeout_rem", scope: !1617, file: !1617, line: 165, type: !11758, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11785)
!11785 = !{!11786, !11787, !11788}
!11786 = !DILocalVariable(name: "timeout", arg: 1, scope: !11784, file: !1617, line: 165, type: !11760)
!11787 = !DILocalVariable(name: "ticks", scope: !11784, file: !1617, line: 167, type: !898)
!11788 = !DILocalVariable(name: "t", scope: !11789, file: !1617, line: 173, type: !1590)
!11789 = distinct !DILexicalBlock(scope: !11784, file: !1617, line: 173, column: 2)
!11790 = !DILocation(line: 0, scope: !11784)
!11791 = !DILocation(line: 169, column: 6, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11784, file: !1617, line: 169, column: 6)
!11793 = !DILocation(line: 169, column: 6, scope: !11784)
!11794 = !DILocation(line: 173, column: 28, scope: !11789)
!11795 = !DILocation(line: 0, scope: !11789)
!11796 = !DILocation(line: 173, column: 39, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11789, file: !1617, line: 173, column: 2)
!11798 = !DILocation(line: 173, column: 2, scope: !11789)
!11799 = !DILocation(line: 174, column: 15, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11797, file: !1617, line: 173, column: 61)
!11801 = !DILocation(line: 174, column: 9, scope: !11800)
!11802 = !DILocation(line: 175, column: 15, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11800, file: !1617, line: 175, column: 7)
!11804 = !DILocation(line: 175, column: 7, scope: !11800)
!11805 = !DILocation(line: 173, column: 52, scope: !11797)
!11806 = distinct !{!11806, !11798, !11807}
!11807 = !DILocation(line: 178, column: 2, scope: !11789)
!11808 = !DILocation(line: 180, column: 17, scope: !11784)
!11809 = !DILocation(line: 180, column: 15, scope: !11784)
!11810 = !DILocation(line: 180, column: 2, scope: !11784)
!11811 = !DILocation(line: 181, column: 1, scope: !11784)
!11812 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !9122, file: !9122, line: 35, type: !11813, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11815)
!11813 = !DISubroutineType(types: !11814)
!11814 = !{!259, !11760}
!11815 = !{!11816}
!11816 = !DILocalVariable(name: "to", arg: 1, scope: !11812, file: !9122, line: 35, type: !11760)
!11817 = !DILocation(line: 0, scope: !11812)
!11818 = !DILocation(line: 37, column: 35, scope: !11812)
!11819 = !DILocation(line: 37, column: 10, scope: !11812)
!11820 = !DILocation(line: 37, column: 9, scope: !11812)
!11821 = !DILocation(line: 37, column: 2, scope: !11812)
!11822 = distinct !DISubprogram(name: "z_timeout_expires", scope: !1617, file: !1617, line: 194, type: !11758, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11823)
!11823 = !{!11824, !11825, !11826, !11828}
!11824 = !DILocalVariable(name: "timeout", arg: 1, scope: !11822, file: !1617, line: 194, type: !11760)
!11825 = !DILocalVariable(name: "ticks", scope: !11822, file: !1617, line: 196, type: !898)
!11826 = !DILocalVariable(name: "__i", scope: !11827, file: !1617, line: 198, type: !11444)
!11827 = distinct !DILexicalBlock(scope: !11822, file: !1617, line: 198, column: 2)
!11828 = !DILocalVariable(name: "__key", scope: !11827, file: !1617, line: 198, type: !11444)
!11829 = !DILocation(line: 0, scope: !11822)
!11830 = !DILocation(line: 0, scope: !11827)
!11831 = !DILocation(line: 0, scope: !11466, inlinedAt: !11832)
!11832 = distinct !DILocation(line: 198, column: 2, scope: !11827)
!11833 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11834)
!11834 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11832)
!11835 = !DILocation(line: 0, scope: !11475, inlinedAt: !11834)
!11836 = !DILocation(line: 199, column: 11, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !1617, line: 198, column: 24)
!11838 = distinct !DILexicalBlock(scope: !11827, file: !1617, line: 198, column: 2)
!11839 = !DILocation(line: 199, column: 23, scope: !11837)
!11840 = !DILocation(line: 0, scope: !11534, inlinedAt: !11841)
!11841 = distinct !DILocation(line: 198, column: 2, scope: !11838)
!11842 = !DILocation(line: 0, scope: !11542, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11841)
!11844 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11843)
!11845 = !DILocation(line: 199, column: 21, scope: !11837)
!11846 = !DILocation(line: 202, column: 2, scope: !11822)
!11847 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !1617, file: !1617, line: 205, type: !11550, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11848)
!11848 = !{!11849, !11850, !11852}
!11849 = !DILocalVariable(name: "ret", scope: !11847, file: !1617, line: 207, type: !651)
!11850 = !DILocalVariable(name: "__i", scope: !11851, file: !1617, line: 209, type: !11444)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !1617, line: 209, column: 2)
!11852 = !DILocalVariable(name: "__key", scope: !11851, file: !1617, line: 209, type: !11444)
!11853 = !DILocation(line: 0, scope: !11847)
!11854 = !DILocation(line: 0, scope: !11851)
!11855 = !DILocation(line: 0, scope: !11466, inlinedAt: !11856)
!11856 = distinct !DILocation(line: 209, column: 2, scope: !11851)
!11857 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11858)
!11858 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11856)
!11859 = !DILocation(line: 0, scope: !11475, inlinedAt: !11858)
!11860 = !DILocation(line: 210, column: 9, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !1617, line: 209, column: 24)
!11862 = distinct !DILexicalBlock(scope: !11851, file: !1617, line: 209, column: 2)
!11863 = !DILocation(line: 0, scope: !11534, inlinedAt: !11864)
!11864 = distinct !DILocation(line: 209, column: 2, scope: !11862)
!11865 = !DILocation(line: 0, scope: !11542, inlinedAt: !11866)
!11866 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11864)
!11867 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11866)
!11868 = !DILocation(line: 212, column: 2, scope: !11847)
!11869 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !1617, file: !1617, line: 215, type: !7918, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11870)
!11870 = !{!11871, !11872, !11873, !11875, !11876, !11879, !11880}
!11871 = !DILocalVariable(name: "ticks", arg: 1, scope: !11869, file: !1617, line: 215, type: !651)
!11872 = !DILocalVariable(name: "is_idle", arg: 2, scope: !11869, file: !1617, line: 215, type: !259)
!11873 = !DILocalVariable(name: "__i", scope: !11874, file: !1617, line: 217, type: !11444)
!11874 = distinct !DILexicalBlock(scope: !11869, file: !1617, line: 217, column: 2)
!11875 = !DILocalVariable(name: "__key", scope: !11874, file: !1617, line: 217, type: !11444)
!11876 = !DILocalVariable(name: "next_to", scope: !11877, file: !1617, line: 218, type: !103)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !1617, line: 217, column: 24)
!11878 = distinct !DILexicalBlock(scope: !11874, file: !1617, line: 217, column: 2)
!11879 = !DILocalVariable(name: "sooner", scope: !11877, file: !1617, line: 219, type: !259)
!11880 = !DILocalVariable(name: "imminent", scope: !11877, file: !1617, line: 221, type: !259)
!11881 = !DILocation(line: 0, scope: !11869)
!11882 = !DILocation(line: 0, scope: !11874)
!11883 = !DILocation(line: 0, scope: !11466, inlinedAt: !11884)
!11884 = distinct !DILocation(line: 217, column: 2, scope: !11874)
!11885 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11886)
!11886 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11884)
!11887 = !DILocation(line: 0, scope: !11475, inlinedAt: !11886)
!11888 = !DILocation(line: 218, column: 17, scope: !11877)
!11889 = !DILocation(line: 0, scope: !11877)
!11890 = !DILocation(line: 221, column: 27, scope: !11877)
!11891 = !DILocation(line: 233, column: 17, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !11877, file: !1617, line: 233, column: 7)
!11893 = !DILocation(line: 234, column: 26, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11892, file: !1617, line: 233, column: 56)
!11895 = !DILocation(line: 234, column: 4, scope: !11894)
!11896 = !DILocation(line: 235, column: 3, scope: !11894)
!11897 = !DILocation(line: 0, scope: !11534, inlinedAt: !11898)
!11898 = distinct !DILocation(line: 217, column: 2, scope: !11878)
!11899 = !DILocation(line: 0, scope: !11542, inlinedAt: !11900)
!11900 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11898)
!11901 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11900)
!11902 = !DILocation(line: 237, column: 1, scope: !11869)
!11903 = distinct !DISubprogram(name: "sys_clock_announce", scope: !1617, file: !1617, line: 239, type: !11904, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11906)
!11904 = !DISubroutineType(types: !11905)
!11905 = !{null, !651}
!11906 = !{!11907, !11908, !11909, !11911}
!11907 = !DILocalVariable(name: "ticks", arg: 1, scope: !11903, file: !1617, line: 239, type: !651)
!11908 = !DILocalVariable(name: "key", scope: !11903, file: !1617, line: 245, type: !11444)
!11909 = !DILocalVariable(name: "t", scope: !11910, file: !1617, line: 262, type: !1590)
!11910 = distinct !DILexicalBlock(scope: !11903, file: !1617, line: 261, column: 67)
!11911 = !DILocalVariable(name: "dt", scope: !11910, file: !1617, line: 263, type: !103)
!11912 = !DILocation(line: 0, scope: !11903)
!11913 = !DILocation(line: 242, column: 2, scope: !11903)
!11914 = !DILocation(line: 0, scope: !11466, inlinedAt: !11915)
!11915 = distinct !DILocation(line: 245, column: 25, scope: !11903)
!11916 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11917)
!11917 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11915)
!11918 = !DILocation(line: 0, scope: !11475, inlinedAt: !11917)
!11919 = !DILocation(line: 261, column: 9, scope: !11903)
!11920 = !DILocation(line: 261, column: 17, scope: !11903)
!11921 = !DILocation(line: 261, column: 25, scope: !11903)
!11922 = !DILocation(line: 261, column: 37, scope: !11903)
!11923 = !DILocation(line: 261, column: 47, scope: !11903)
!11924 = !DILocation(line: 261, column: 44, scope: !11903)
!11925 = !DILocation(line: 261, column: 2, scope: !11903)
!11926 = !DILocation(line: 0, scope: !11910)
!11927 = !DILocation(line: 263, column: 12, scope: !11910)
!11928 = !DILocation(line: 265, column: 16, scope: !11910)
!11929 = !DILocation(line: 265, column: 13, scope: !11910)
!11930 = !DILocation(line: 266, column: 13, scope: !11910)
!11931 = !DILocation(line: 267, column: 3, scope: !11910)
!11932 = !DILocation(line: 0, scope: !11534, inlinedAt: !11933)
!11933 = distinct !DILocation(line: 269, column: 3, scope: !11910)
!11934 = !DILocation(line: 0, scope: !11542, inlinedAt: !11935)
!11935 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11933)
!11936 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11935)
!11937 = !DILocation(line: 270, column: 6, scope: !11910)
!11938 = !DILocation(line: 270, column: 3, scope: !11910)
!11939 = !DILocation(line: 0, scope: !11466, inlinedAt: !11940)
!11940 = distinct !DILocation(line: 271, column: 9, scope: !11910)
!11941 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11942)
!11942 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11940)
!11943 = !DILocation(line: 0, scope: !11475, inlinedAt: !11942)
!11944 = !DILocation(line: 272, column: 22, scope: !11910)
!11945 = distinct !{!11945, !11925, !11946}
!11946 = !DILocation(line: 273, column: 2, scope: !11903)
!11947 = !DILocation(line: 276, column: 19, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1617, line: 275, column: 23)
!11949 = distinct !DILexicalBlock(scope: !11903, file: !1617, line: 275, column: 6)
!11950 = !DILocation(line: 277, column: 2, scope: !11948)
!11951 = !DILocation(line: 279, column: 15, scope: !11903)
!11952 = !DILocation(line: 279, column: 12, scope: !11903)
!11953 = !DILocation(line: 280, column: 21, scope: !11903)
!11954 = !DILocation(line: 282, column: 24, scope: !11903)
!11955 = !DILocation(line: 282, column: 2, scope: !11903)
!11956 = !DILocation(line: 0, scope: !11534, inlinedAt: !11957)
!11957 = distinct !DILocation(line: 284, column: 2, scope: !11903)
!11958 = !DILocation(line: 0, scope: !11542, inlinedAt: !11959)
!11959 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11957)
!11960 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11959)
!11961 = !DILocation(line: 285, column: 1, scope: !11903)
!11962 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !1617, file: !1617, line: 287, type: !11963, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11965)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{!349}
!11965 = !{!11966, !11967, !11969}
!11966 = !DILocalVariable(name: "t", scope: !11962, file: !1617, line: 289, type: !163)
!11967 = !DILocalVariable(name: "__i", scope: !11968, file: !1617, line: 291, type: !11444)
!11968 = distinct !DILexicalBlock(scope: !11962, file: !1617, line: 291, column: 2)
!11969 = !DILocalVariable(name: "__key", scope: !11968, file: !1617, line: 291, type: !11444)
!11970 = !DILocation(line: 0, scope: !11962)
!11971 = !DILocation(line: 0, scope: !11968)
!11972 = !DILocation(line: 0, scope: !11466, inlinedAt: !11973)
!11973 = distinct !DILocation(line: 291, column: 2, scope: !11968)
!11974 = !DILocation(line: 55, column: 2, scope: !11475, inlinedAt: !11975)
!11975 = distinct !DILocation(line: 145, column: 10, scope: !11466, inlinedAt: !11973)
!11976 = !DILocation(line: 0, scope: !11475, inlinedAt: !11975)
!11977 = !DILocation(line: 292, column: 7, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !1617, line: 291, column: 24)
!11979 = distinct !DILexicalBlock(scope: !11968, file: !1617, line: 291, column: 2)
!11980 = !DILocation(line: 292, column: 19, scope: !11978)
!11981 = !DILocation(line: 0, scope: !11534, inlinedAt: !11982)
!11982 = distinct !DILocation(line: 291, column: 2, scope: !11979)
!11983 = !DILocation(line: 0, scope: !11542, inlinedAt: !11984)
!11984 = distinct !DILocation(line: 215, column: 2, scope: !11534, inlinedAt: !11982)
!11985 = !DILocation(line: 95, column: 2, scope: !11542, inlinedAt: !11984)
!11986 = !DILocation(line: 292, column: 17, scope: !11978)
!11987 = !DILocation(line: 294, column: 2, scope: !11962)
!11988 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !1617, file: !1617, line: 297, type: !135, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !162)
!11989 = !DILocation(line: 300, column: 19, scope: !11988)
!11990 = !DILocation(line: 300, column: 9, scope: !11988)
!11991 = !DILocation(line: 300, column: 2, scope: !11988)
!11992 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !1617, file: !1617, line: 306, type: !11963, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !162)
!11993 = !DILocation(line: 308, column: 9, scope: !11992)
!11994 = !DILocation(line: 308, column: 2, scope: !11992)
!11995 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !1617, file: !1617, line: 319, type: !5392, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !11996)
!11996 = !{!11997, !11998, !11999, !12000}
!11997 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !11995, file: !1617, line: 319, type: !137)
!11998 = !DILocalVariable(name: "start_cycles", scope: !11995, file: !1617, line: 328, type: !137)
!11999 = !DILocalVariable(name: "cycles_to_wait", scope: !11995, file: !1617, line: 331, type: !137)
!12000 = !DILocalVariable(name: "current_cycles", scope: !12001, file: !1617, line: 338, type: !137)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !1617, line: 337, column: 11)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !1617, line: 337, column: 2)
!12003 = distinct !DILexicalBlock(scope: !11995, file: !1617, line: 337, column: 2)
!12004 = !DILocation(line: 0, scope: !11995)
!12005 = !DILocation(line: 322, column: 19, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !11995, file: !1617, line: 322, column: 6)
!12007 = !DILocation(line: 322, column: 6, scope: !11995)
!12008 = !DILocation(line: 328, column: 26, scope: !11995)
!12009 = !DILocation(line: 333, column: 43, scope: !11995)
!12010 = !DILocation(line: 337, column: 2, scope: !11995)
!12011 = !DILocation(line: 338, column: 29, scope: !12001)
!12012 = !DILocation(line: 0, scope: !12001)
!12013 = !DILocation(line: 341, column: 23, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12001, file: !1617, line: 341, column: 7)
!12015 = !DILocation(line: 341, column: 39, scope: !12014)
!12016 = !DILocation(line: 349, column: 1, scope: !11995)
!12017 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !376, file: !376, line: 1675, type: !135, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !162)
!12018 = !DILocation(line: 1677, column: 9, scope: !12017)
!12019 = !DILocation(line: 1677, column: 2, scope: !12017)
!12020 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !12021, file: !12021, line: 24, type: !135, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !162)
!12021 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12022 = !DILocation(line: 26, column: 9, scope: !12020)
!12023 = !DILocation(line: 26, column: 2, scope: !12020)
!12024 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !1617, file: !1617, line: 364, type: !12025, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1587, retainedNodes: !12027)
!12025 = !DISubroutineType(types: !12026)
!12026 = !{!163, !11434}
!12027 = !{!12028, !12029}
!12028 = !DILocalVariable(name: "timeout", arg: 1, scope: !12024, file: !1617, line: 364, type: !11434)
!12029 = !DILocalVariable(name: "dt", scope: !12024, file: !1617, line: 366, type: !898)
!12030 = !DILocation(line: 0, scope: !12024)
!12031 = !DILocation(line: 368, column: 6, scope: !12024)
!12032 = !DILocation(line: 371, column: 10, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12034, file: !1617, line: 370, column: 47)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !1617, line: 370, column: 13)
!12035 = distinct !DILexicalBlock(scope: !12024, file: !1617, line: 368, column: 6)
!12036 = !DILocation(line: 371, column: 3, scope: !12033)
!12037 = !DILocation(line: 376, column: 58, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12039, file: !1617, line: 376, column: 7)
!12039 = distinct !DILexicalBlock(scope: !12034, file: !1617, line: 372, column: 9)
!12040 = !DILocation(line: 376, column: 7, scope: !12039)
!12041 = !DILocation(line: 376, column: 43, scope: !12038)
!12042 = !DILocation(line: 377, column: 4, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12038, file: !1617, line: 376, column: 64)
!12044 = !DILocation(line: 379, column: 10, scope: !12039)
!12045 = !DILocation(line: 379, column: 33, scope: !12039)
!12046 = !DILocation(line: 379, column: 31, scope: !12039)
!12047 = !DILocation(line: 379, column: 3, scope: !12039)
!12048 = !DILocation(line: 0, scope: !12035)
!12049 = !DILocation(line: 381, column: 1, scope: !12024)
!12050 = distinct !DISubprogram(name: "boot_banner", scope: !12051, file: !12051, line: 26, type: !646, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2072, retainedNodes: !162)
!12051 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12052 = !DILocation(line: 34, column: 2, scope: !12050)
!12053 = !DILocation(line: 36, column: 1, scope: !12050)
