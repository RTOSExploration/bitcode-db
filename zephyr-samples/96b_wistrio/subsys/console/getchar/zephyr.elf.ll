; ModuleID = 'build/96b_wistrio/getchar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.tty_serial = type { %struct.device*, %struct.k_sem, i8*, i32, i16, i16, i32, %struct.k_sem, i8*, i32, i16, i16, i32 }
%struct.k_sem = type { %union.anon, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.k_spinlock = type {}
%struct.console_input = type { i32, i8, [128 x i8] }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229723 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229713 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229703 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229693 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229683 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229673 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232184 to i8*), void (i8*)* inttoptr (i32 134230931 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232208 to i8*), void (i8*)* inttoptr (i32 134230931 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232016 to i8*), void (i8*)* inttoptr (i32 134229663 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [56 x i8] c"Start typing characters to see their hex codes printed\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"char: [0x%x] %c\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [35 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !179
@console_serial = internal global %struct.tty_serial zeroinitializer, align 4, !dbg !208
@console_txbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !305
@console_rxbuf = internal global [16 x i8] zeroinitializer, align 1, !dbg !299
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !352
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !360
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !501
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !537
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), %struct.z_heap_bucket { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.33, i32 0, i32 0), %struct.z_heap_bucket { i32 285933596 } }], align 4, !dbg !547
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !552
@.str.32 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.33 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !572
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !680
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !830
@.str.37 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !800
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !785
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !758
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !774
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !802
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !815
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !817
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !819
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !821
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !823
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !825
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !835
@.str.39 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !860
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !937
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !926
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@debug_hook_in = internal unnamed_addr global i32 (i8)* null, align 4, !dbg !978
@debug_hook_out = internal unnamed_addr global i32 (i8)* @debug_hook_out_nop, align 4, !dbg !1129
@avail_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1079
@lines_queue = internal unnamed_addr global %struct.k_fifo* null, align 4, !dbg !1121
@completion_cb = internal unnamed_addr global i8 (i8*, i8)* null, align 4, !dbg !1123
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1072
@uart_console_isr.cmd = internal unnamed_addr global %struct.console_input* null, align 4, !dbg !1139
@esc_state = internal global i32 0, align 4, !dbg !1164
@cur = internal unnamed_addr global i8 0, align 1, !dbg !1172
@end = internal unnamed_addr global i8 0, align 1, !dbg !1174
@ansi_val = internal unnamed_addr global i32 0, align 4, !dbg !1168
@ansi_val_2 = internal unnamed_addr global i32 0, align 4, !dbg !1170
@.str.60 = private unnamed_addr constant [6 x i8] c"\1B[%uD\00", align 1
@.str.1.59 = private unnamed_addr constant [6 x i8] c"\1B[%uC\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"\1B[s\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"\1B[u\00", align 1
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !851
@.str.66 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1180
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1426
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1404
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1390
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1338
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !849
@.str.1.69 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1428
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1408
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1406
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1355
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !847
@.str.2.70 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1441
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1412
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1410
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1364
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !845
@.str.3.71 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1443
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1416
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1414
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !843
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1445
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1420
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1418
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1379
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !841
@.str.5.72 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1447
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1424
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1422
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1388
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !855
@.str.76 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1449
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1687
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1635
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1689
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.76, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1620
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1622
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !853
@.str.1.79 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1698
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1637
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1730
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.79, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1631
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1633
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1639
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1647
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1670
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1673
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !1676
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !910
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1717
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1719
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1721
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1723
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1725
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1732
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1843
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1845
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1841
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1812
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1847
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1336
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.69, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1353
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.70, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1362
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.71, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1377
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.72, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1386
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1934
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1958
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1961
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1964
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1968
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1974
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2183
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2192
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2199
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2204
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.130 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.134, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.135, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.138, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !2230
@.str.133 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.134 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.135 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.136 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.137 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.138 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2344
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@lock = internal global %struct.k_spinlock zeroinitializer, align 1, !dbg !2357
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2380
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2488
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2491
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2493
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2197
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2194
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2495
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2531
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2061
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2529
@.str.208 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2534
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3215 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #24, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #24, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #24, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #24, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #24, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #24, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #24, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3273, !srcloc !3276
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #24, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #24, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #24, !dbg !3323, !srcloc !3324
  ret void, !dbg !3325
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !3328 {
  %1 = tail call i32 @console_init() #25, !dbg !3333
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i32 0, i32 0)) #25, !dbg !3334
  br label %2, !dbg !3335

2:                                                ; preds = %0, %2
  %3 = tail call i32 @console_getchar() #25, !dbg !3336
  %4 = and i32 %3, 255, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %3, metadata !3331, metadata !DIExpression()), !dbg !3338
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %4) #25, !dbg !3339
  br label %2, !dbg !3335, !llvm.loop !3340
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3344, metadata !DIExpression()), !dbg !3345
  ret i32 0, !dbg !3346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3347 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3351, metadata !DIExpression()), !dbg !3352
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3353
  ret void, !dbg !3354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3355 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3358
  ret i8* %1, !dbg !3359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3360 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3372, metadata !DIExpression()), !dbg !3381
  call void @llvm.dbg.value(metadata i8* %0, metadata !3371, metadata !DIExpression()), !dbg !3381
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3382
  ret void, !dbg !3384
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3389, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i8* %1, metadata !3390, metadata !DIExpression()), !dbg !3391
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3392
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !3392
  ret i32 %4, !dbg !3393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3394 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3406, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3403, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.value(metadata i8* %1, metadata !3404, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.value(metadata i8* %2, metadata !3405, metadata !DIExpression()), !dbg !3407
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !3408
  ret void, !dbg !3409
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3410 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3414, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 %1, metadata !3415, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 0, metadata !3416, metadata !DIExpression()), !dbg !3417
  %3 = icmp eq i32 %1, 0, !dbg !3418
  br i1 %3, label %13, label %4, !dbg !3421

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3416, metadata !DIExpression()), !dbg !3417
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3422
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3424
  %8 = load i8, i8* %7, align 1, !dbg !3424
  %9 = zext i8 %8 to i32, !dbg !3424
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !3422
  %11 = add nuw i32 %5, 1, !dbg !3425
  call void @llvm.dbg.value(metadata i32 %11, metadata !3416, metadata !DIExpression()), !dbg !3417
  %12 = icmp eq i32 %11, %1, !dbg !3418
  br i1 %12, label %13, label %4, !dbg !3421, !llvm.loop !3426

13:                                               ; preds = %4, %2
  ret void, !dbg !3428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3429 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3433, metadata !DIExpression()), !dbg !3435
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3436
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3436
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3434, metadata !DIExpression()), !dbg !3437
  call void @llvm.va_start(i8* nonnull %3), !dbg !3438
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3439
  %5 = load i32, i32* %4, align 4, !dbg !3439
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3439
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3439
  call void @llvm.va_end(i8* nonnull %3), !dbg !3440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !3441
  ret void, !dbg !3441
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3442 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3446, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.value(metadata i32 %1, metadata !3447, metadata !DIExpression()), !dbg !3451
  call void @llvm.dbg.value(metadata i8* %2, metadata !3448, metadata !DIExpression()), !dbg !3451
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3452
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3449, metadata !DIExpression()), !dbg !3453
  call void @llvm.va_start(i8* nonnull %5), !dbg !3454
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3455
  %7 = load i32, i32* %6, align 4, !dbg !3455
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3455
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %9, metadata !3450, metadata !DIExpression()), !dbg !3451
  call void @llvm.va_end(i8* nonnull %5), !dbg !3456
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !3457
  ret i32 %9, !dbg !3458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3459 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3466, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i8* %0, metadata !3463, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i32 %1, metadata !3464, metadata !DIExpression()), !dbg !3473
  call void @llvm.dbg.value(metadata i8* %2, metadata !3465, metadata !DIExpression()), !dbg !3473
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3474
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3474
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3467, metadata !DIExpression()), !dbg !3475
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3476
  store i8* %0, i8** %7, align 4, !dbg !3476
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3476
  store i32 %1, i32* %8, align 4, !dbg !3476
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3476
  store i32 0, i32* %9, align 4, !dbg !3476
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3477
  %10 = load i32, i32* %9, align 4, !dbg !3478
  %11 = load i32, i32* %8, align 4, !dbg !3480
  %12 = icmp slt i32 %10, %11, !dbg !3481
  br i1 %12, label %13, label %15, !dbg !3482

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3483
  store i8 0, i8* %14, align 1, !dbg !3485
  br label %15, !dbg !3486

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !3487
  ret i32 %10, !dbg !3488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3494, metadata !DIExpression()), !dbg !3496
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3495, metadata !DIExpression()), !dbg !3496
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3497
  %4 = load i8*, i8** %3, align 4, !dbg !3497
  %5 = icmp eq i8* %4, null, !dbg !3499
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3500
  br i1 %5, label %12, label %8, !dbg !3501

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3502
  %10 = load i32, i32* %9, align 4, !dbg !3502
  %11 = icmp slt i32 %7, %10, !dbg !3503
  br i1 %11, label %15, label %12, !dbg !3504

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3505
  %14 = add nsw i32 %7, 1, !dbg !3507
  store i32 %14, i32* %13, align 4, !dbg !3507
  br label %25, !dbg !3508

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3509
  %17 = icmp eq i32 %7, %16, !dbg !3511
  br i1 %17, label %18, label %21, !dbg !3512

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3513
  store i32 %19, i32* %6, align 4, !dbg !3513
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3515
  store i8 0, i8* %20, align 1, !dbg !3516
  br label %25, !dbg !3517

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3518
  %23 = add nsw i32 %7, 1, !dbg !3520
  store i32 %23, i32* %6, align 4, !dbg !3520
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3521
  store i8 %22, i8* %24, align 1, !dbg !3522
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3523
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3524 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3534, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i8* %1, metadata !3535, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i8* %2, metadata !3536, metadata !DIExpression()), !dbg !3538
  call void @llvm.dbg.value(metadata i8* %3, metadata !3537, metadata !DIExpression()), !dbg !3538
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !3539
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3540
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3541
  unreachable, !dbg !3542
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3543 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3647
  ret %struct.k_thread* %1, !dbg !3648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3649 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3654, metadata !DIExpression()), !dbg !3655
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3656, !srcloc !3658
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !3659
  ret void, !dbg !3660
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3661 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3662, !srcloc !3664
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3665
  ret %struct.k_thread* %1, !dbg !3666
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3667 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3678, metadata !DIExpression()), !dbg !3682
  call void @llvm.dbg.value(metadata i8* %1, metadata !3679, metadata !DIExpression()), !dbg !3682
  %3 = icmp eq i8* %1, null, !dbg !3683
  br i1 %3, label %8, label %4, !dbg !3685

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3686
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3686
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3680, metadata !DIExpression()), !dbg !3682
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3687, !range !3688
  call void @llvm.dbg.value(metadata i32 %7, metadata !3681, metadata !DIExpression()), !dbg !3682
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3689
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3690
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3692 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3696, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata i8* %1, metadata !3697, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata i8* %1, metadata !3698, metadata !DIExpression()), !dbg !3700
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3701
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3699, metadata !DIExpression()), !dbg !3700
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3702
  %5 = ptrtoint i8* %4 to i32, !dbg !3703
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3703
  %7 = sub i32 %5, %6, !dbg !3703
  %8 = lshr i32 %7, 3, !dbg !3704
  ret i32 %8, !dbg !3705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #8 !dbg !3706 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3710, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i32 %1, metadata !3711, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i1 %2, metadata !3712, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3715
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3716
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3714, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3715
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3717
  %6 = bitcast i8* %5 to i16*, !dbg !3717
  %7 = load i16, i16* %6, align 2, !dbg !3717
  %8 = and i16 %7, -2, !dbg !3721
  %9 = zext i1 %2 to i16, !dbg !3721
  %10 = or i16 %8, %9, !dbg !3721
  store i16 %10, i16* %6, align 2, !dbg !3717
  ret void, !dbg !3722
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3723 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3727, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.value(metadata i32 %1, metadata !3728, metadata !DIExpression()), !dbg !3729
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3730
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3732
  br i1 %4, label %7, label %5, !dbg !3733

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3734
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3736
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3737
  br label %7, !dbg !3738

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3739, !range !3741
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3742
  br i1 %9, label %13, label %10, !dbg !3743

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3744
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3746, !range !3741
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3747
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3748
  call void @llvm.dbg.value(metadata i32 %12, metadata !3728, metadata !DIExpression()), !dbg !3729
  br label %13, !dbg !3749

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3728, metadata !DIExpression()), !dbg !3729
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3750
  ret void, !dbg !3751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3752 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3756, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %1, metadata !3757, metadata !DIExpression()), !dbg !3758
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3759
  %4 = add i32 %3, %1, !dbg !3760
  ret i32 %4, !dbg !3761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3762 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3766, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.value(metadata i32 %1, metadata !3767, metadata !DIExpression()), !dbg !3768
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3769
  %4 = and i32 %3, 1, !dbg !3770
  %5 = icmp ne i32 %4, 0, !dbg !3769
  ret i1 %5, !dbg !3771
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3772 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3774, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.value(metadata i32 %1, metadata !3775, metadata !DIExpression()), !dbg !3779
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3780, !range !3781
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %4, metadata !3776, metadata !DIExpression()), !dbg !3783
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3784
  ret void, !dbg !3785
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3786 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3790, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %1, metadata !3791, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.value(metadata i32 %2, metadata !3792, metadata !DIExpression()), !dbg !3795
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3796
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3797
  %6 = add i32 %5, %4, !dbg !3798
  call void @llvm.dbg.value(metadata i32 %6, metadata !3793, metadata !DIExpression()), !dbg !3795
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3799
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3800
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3801
  ret void, !dbg !3802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3803 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3805, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i32 %1, metadata !3806, metadata !DIExpression()), !dbg !3807
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3808
  %4 = sub i32 %1, %3, !dbg !3809
  ret i32 %4, !dbg !3810
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3811 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3813, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata i32 %1, metadata !3814, metadata !DIExpression()), !dbg !3818
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3819, !range !3781
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %4, metadata !3815, metadata !DIExpression()), !dbg !3821
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3822
  ret void, !dbg !3823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3824 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1, metadata !3829, metadata !DIExpression()), !dbg !3830
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3831
  %4 = lshr i32 %3, 1, !dbg !3832
  ret i32 %4, !dbg !3833
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3834 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3838, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %1, metadata !3839, metadata !DIExpression()), !dbg !3841
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3842
  %4 = add i32 %1, 1, !dbg !3843
  %5 = sub i32 %4, %3, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %5, metadata !3840, metadata !DIExpression()), !dbg !3841
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3845, !range !3846
  %7 = sub nsw i32 31, %6, !dbg !3847
  ret i32 %7, !dbg !3848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3849 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3853, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %1, metadata !3854, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %2, metadata !3855, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3856, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !3862
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !3863
  %5 = load i32, i32* %4, align 4, !dbg !3863
  %6 = icmp eq i32 %5, 0, !dbg !3864
  br i1 %6, label %7, label %12, !dbg !3865

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !3866
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !3868
  %10 = load i32, i32* %9, align 4, !dbg !3869
  %11 = or i32 %10, %8, !dbg !3869
  store i32 %11, i32* %9, align 4, !dbg !3869
  store i32 %1, i32* %4, align 4, !dbg !3870
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3871
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !3872
  br label %14, !dbg !3873

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3858, metadata !DIExpression()), !dbg !3874
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !3875, !range !3876
  call void @llvm.dbg.value(metadata i32 %13, metadata !3861, metadata !DIExpression()), !dbg !3874
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !3877
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !3878
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !3879
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !3880
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !3881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3882 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3884, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.value(metadata i32 %2, metadata !3886, metadata !DIExpression()), !dbg !3887
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !3888
  ret void, !dbg !3889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3890 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3892, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i32 %1, metadata !3893, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.value(metadata i32 %2, metadata !3894, metadata !DIExpression()), !dbg !3895
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !3896
  ret void, !dbg !3897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !3898 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3900, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.value(metadata i32 %1, metadata !3901, metadata !DIExpression()), !dbg !3902
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !3903
  ret i32 %3, !dbg !3904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !3905 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3909, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %1, metadata !3910, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata i32 %2, metadata !3911, metadata !DIExpression()), !dbg !3914
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3915
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3912, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3913, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3914
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3913, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3914
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !3916
  call void @llvm.dbg.value(metadata i8* %5, metadata !3913, metadata !DIExpression()), !dbg !3914
  %6 = bitcast i8* %5 to i16*, !dbg !3917
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !3920
  %8 = load i16, i16* %7, align 2, !dbg !3920
  %9 = zext i16 %8 to i32, !dbg !3920
  ret i32 %9, !dbg !3921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !3922 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3926, metadata !DIExpression()), !dbg !3927
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !3928
  ret %struct.chunk_unit_t* %2, !dbg !3929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !3930 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3934, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %1, metadata !3935, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %2, metadata !3936, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata i32 %3, metadata !3937, metadata !DIExpression()), !dbg !3940
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3941
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !3938, metadata !DIExpression()), !dbg !3940
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !3939, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3940
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !3942
  call void @llvm.dbg.value(metadata i8* %6, metadata !3939, metadata !DIExpression()), !dbg !3940
  %7 = trunc i32 %3 to i16, !dbg !3943
  %8 = bitcast i8* %6 to i16*, !dbg !3946
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !3947
  store i16 %7, i16* %9, align 2, !dbg !3948
  ret void, !dbg !3949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !3950 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3954, metadata !DIExpression()), !dbg !3955
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !3956
  ret i32 %2, !dbg !3957
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !3958 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3962, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %1, metadata !3963, metadata !DIExpression()), !dbg !3964
  %3 = add i32 %1, 4, !dbg !3965
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !3966
  ret i32 %4, !dbg !3967
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !3968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3972, metadata !DIExpression()), !dbg !3973
  %2 = add i32 %0, 7, !dbg !3974
  %3 = lshr i32 %2, 3, !dbg !3975
  ret i32 %3, !dbg !3976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3977 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3981, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %1, metadata !3982, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata i32 %2, metadata !3983, metadata !DIExpression()), !dbg !3984
  %4 = shl i32 %2, 1, !dbg !3985
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !3986
  ret void, !dbg !3987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !3988 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3990, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.value(metadata i32 %1, metadata !3991, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.value(metadata i32 %2, metadata !3992, metadata !DIExpression()), !dbg !3993
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !3994
  ret void, !dbg !3995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !3996 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3998, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %1, metadata !3999, metadata !DIExpression()), !dbg !4006
  call void @llvm.dbg.value(metadata i32 %2, metadata !4000, metadata !DIExpression()), !dbg !4006
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4007
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4001, metadata !DIExpression()), !dbg !4006
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4008
  %6 = icmp eq i32 %5, %1, !dbg !4009
  br i1 %6, label %7, label %14, !dbg !4010

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4011
  %9 = xor i32 %8, -1, !dbg !4013
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4014
  %11 = load i32, i32* %10, align 4, !dbg !4015
  %12 = and i32 %11, %9, !dbg !4015
  store i32 %12, i32* %10, align 4, !dbg !4015
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4016
  store i32 0, i32* %13, align 4, !dbg !4017
  br label %17, !dbg !4018

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4019
  call void @llvm.dbg.value(metadata i32 %15, metadata !4002, metadata !DIExpression()), !dbg !4020
  call void @llvm.dbg.value(metadata i32 %5, metadata !4005, metadata !DIExpression()), !dbg !4020
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4021
  store i32 %5, i32* %16, align 4, !dbg !4022
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4023
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4024
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4026 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4028, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 %1, metadata !4029, metadata !DIExpression()), !dbg !4030
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4031
  ret i32 %3, !dbg !4032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4033 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4037, metadata !DIExpression()), !dbg !4044
  call void @llvm.dbg.value(metadata i8* %1, metadata !4038, metadata !DIExpression()), !dbg !4044
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4045
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4045
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4039, metadata !DIExpression()), !dbg !4044
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %5, metadata !4040, metadata !DIExpression()), !dbg !4044
  %6 = ptrtoint i8* %1 to i32, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %6, metadata !4041, metadata !DIExpression()), !dbg !4044
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4048
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4048
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %9, metadata !4042, metadata !DIExpression()), !dbg !4044
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4050
  %11 = shl i32 %10, 3, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %11, metadata !4043, metadata !DIExpression()), !dbg !4044
  %12 = sub i32 %9, %6, !dbg !4052
  %13 = add i32 %12, %11, !dbg !4053
  ret i32 %13, !dbg !4054
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4055 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4059, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.value(metadata i32 %1, metadata !4060, metadata !DIExpression()), !dbg !4065
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4066
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4066
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4061, metadata !DIExpression()), !dbg !4065
  %5 = icmp eq i32 %1, 0, !dbg !4067
  br i1 %5, label %19, label %6, !dbg !4069

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4070
  br i1 %7, label %19, label %8, !dbg !4071

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4072, !range !3688
  call void @llvm.dbg.value(metadata i32 %9, metadata !4063, metadata !DIExpression()), !dbg !4065
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %10, metadata !4064, metadata !DIExpression()), !dbg !4065
  %11 = icmp eq i32 %10, 0, !dbg !4074
  br i1 %11, label %19, label %12, !dbg !4076

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4077
  %14 = icmp ugt i32 %13, %9, !dbg !4079
  br i1 %14, label %15, label %17, !dbg !4080

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4081
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4083
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4084
  br label %17, !dbg !4085

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4086
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4087
  call void @llvm.dbg.value(metadata i8* %18, metadata !4062, metadata !DIExpression()), !dbg !4065
  br label %19, !dbg !4088

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4065
  ret i8* %20, !dbg !4089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4090 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4094, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i32 %1, metadata !4095, metadata !DIExpression()), !dbg !4096
  %3 = lshr i32 %1, 3, !dbg !4097
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4098
  %5 = load i32, i32* %4, align 4, !dbg !4098
  %6 = icmp uge i32 %3, %5, !dbg !4099
  ret i1 %6, !dbg !4100
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4101 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4105, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata i32 %1, metadata !4106, metadata !DIExpression()), !dbg !4120
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %3, metadata !4107, metadata !DIExpression()), !dbg !4120
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4108, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4120
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4122
  %5 = load i32, i32* %4, align 4, !dbg !4122
  %6 = icmp eq i32 %5, 0, !dbg !4123
  br i1 %6, label %19, label %7, !dbg !4124

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4125
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4126
  call void @llvm.dbg.value(metadata i32 %9, metadata !4112, metadata !DIExpression()), !dbg !4126
  call void @llvm.dbg.value(metadata i32 %8, metadata !4113, metadata !DIExpression()), !dbg !4127
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4128
  %11 = icmp ult i32 %10, %1, !dbg !4130
  br i1 %11, label %13, label %12, !dbg !4131

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4132
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4134
  store i32 %14, i32* %4, align 4, !dbg !4135
  %15 = add nsw i32 %9, -1, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %15, metadata !4112, metadata !DIExpression()), !dbg !4126
  %16 = icmp eq i32 %15, 0, !dbg !4136
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4137
  br i1 %18, label %19, label %7, !dbg !4137, !llvm.loop !4138

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4141
  %21 = load i32, i32* %20, align 4, !dbg !4141
  %22 = add nsw i32 %3, 1, !dbg !4142
  %23 = shl nsw i32 -1, %22, !dbg !4142
  %24 = and i32 %21, %23, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %24, metadata !4115, metadata !DIExpression()), !dbg !4120
  %25 = icmp eq i32 %24, 0, !dbg !4144
  br i1 %25, label %30, label %26, !dbg !4145

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4146, !range !3846
  call void @llvm.dbg.value(metadata i32 %27, metadata !4116, metadata !DIExpression()), !dbg !4147
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4148
  %29 = load i32, i32* %28, align 4, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %29, metadata !4119, metadata !DIExpression()), !dbg !4147
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4149
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4120
  ret i32 %31, !dbg !4150
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !4151 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4153, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %1, metadata !4154, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.value(metadata i32 %2, metadata !4155, metadata !DIExpression()), !dbg !4159
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %4, metadata !4156, metadata !DIExpression()), !dbg !4159
  %5 = sub i32 %2, %1, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %5, metadata !4157, metadata !DIExpression()), !dbg !4159
  %6 = sub i32 %4, %5, !dbg !4162
  call void @llvm.dbg.value(metadata i32 %6, metadata !4158, metadata !DIExpression()), !dbg !4159
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4163
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4164
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4165
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4166
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4167
  ret void, !dbg !4168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4169 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4173, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.value(metadata i32 %1, metadata !4174, metadata !DIExpression()), !dbg !4177
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4178
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4175, metadata !DIExpression()), !dbg !4177
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4179
  call void @llvm.dbg.value(metadata i8* %4, metadata !4176, metadata !DIExpression()), !dbg !4177
  ret i8* %4, !dbg !4180
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4181 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4185, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 %1, metadata !4186, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 %2, metadata !4187, metadata !DIExpression()), !dbg !4197
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4198
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4198
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4188, metadata !DIExpression()), !dbg !4197
  %6 = sub i32 0, %1, !dbg !4199
  %7 = and i32 %6, %1, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %7, metadata !4190, metadata !DIExpression()), !dbg !4197
  %8 = icmp eq i32 %7, %1, !dbg !4201
  br i1 %8, label %13, label %9, !dbg !4203

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %10, metadata !4186, metadata !DIExpression()), !dbg !4197
  %11 = icmp ult i32 %7, 4, !dbg !4206
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4206
  br label %17, !dbg !4206

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4207
  br i1 %14, label %15, label %17, !dbg !4210

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4211
  br label %57, !dbg !4213

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4197
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4214
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4186, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 %19, metadata !4189, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.value(metadata i32 %18, metadata !4190, metadata !DIExpression()), !dbg !4197
  %21 = icmp eq i32 %2, 0, !dbg !4215
  br i1 %21, label %57, label %22, !dbg !4217

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4218
  br i1 %23, label %57, label %24, !dbg !4219

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4220
  %26 = add i32 %25, %20, !dbg !4221
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4222, !range !3688
  call void @llvm.dbg.value(metadata i32 %27, metadata !4191, metadata !DIExpression()), !dbg !4197
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %28, metadata !4192, metadata !DIExpression()), !dbg !4197
  %29 = icmp eq i32 %28, 0, !dbg !4224
  br i1 %29, label %57, label %30, !dbg !4226

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4227
  call void @llvm.dbg.value(metadata i8* %31, metadata !4193, metadata !DIExpression()), !dbg !4197
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4228
  %33 = ptrtoint i8* %32 to i32, !dbg !4228
  %34 = add i32 %20, -1, !dbg !4228
  %35 = add i32 %34, %33, !dbg !4228
  %36 = sub i32 0, %20, !dbg !4228
  %37 = and i32 %35, %36, !dbg !4228
  %38 = inttoptr i32 %37 to i8*, !dbg !4229
  %39 = sub i32 0, %18, !dbg !4230
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %40, metadata !4193, metadata !DIExpression()), !dbg !4197
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4231
  %42 = ptrtoint i8* %41 to i32, !dbg !4231
  %43 = add i32 %42, 7, !dbg !4231
  %44 = and i32 %43, -8, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %44, metadata !4194, metadata !DIExpression()), !dbg !4197
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %45, metadata !4195, metadata !DIExpression()), !dbg !4197
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4233
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4234
  %48 = sub i32 %44, %47, !dbg !4234
  %49 = ashr exact i32 %48, 3, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %49, metadata !4196, metadata !DIExpression()), !dbg !4197
  %50 = icmp ugt i32 %45, %28, !dbg !4235
  br i1 %50, label %51, label %52, !dbg !4237

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4238
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4240
  br label %52, !dbg !4241

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4242
  %54 = icmp ugt i32 %53, %49, !dbg !4244
  br i1 %54, label %55, label %56, !dbg !4245

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4246
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4248
  br label %56, !dbg !4249

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4250
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4197
  ret i8* %58, !dbg !4251
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4252 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4256, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.value(metadata i8* %1, metadata !4257, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.value(metadata i32 %2, metadata !4258, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.value(metadata i32 %3, metadata !4259, metadata !DIExpression()), !dbg !4275
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4276
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4276
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4260, metadata !DIExpression()), !dbg !4275
  %7 = icmp eq i8* %1, null, !dbg !4277
  br i1 %7, label %8, label %10, !dbg !4279

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4280
  br label %59, !dbg !4282

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4283
  br i1 %11, label %12, label %13, !dbg !4285

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4286
  br label %59, !dbg !4288

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4289
  br i1 %14, label %59, label %15, !dbg !4291

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4292, !range !3688
  call void @llvm.dbg.value(metadata i32 %16, metadata !4261, metadata !DIExpression()), !dbg !4275
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %17, metadata !4262, metadata !DIExpression()), !dbg !4275
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4294
  %19 = ptrtoint i8* %1 to i32, !dbg !4295
  %20 = ptrtoint i8* %18 to i32, !dbg !4295
  %21 = sub i32 %19, %20, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %21, metadata !4263, metadata !DIExpression()), !dbg !4275
  %22 = add i32 %21, %3, !dbg !4296
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %23, metadata !4264, metadata !DIExpression()), !dbg !4275
  %24 = icmp eq i32 %2, 0, !dbg !4298
  br i1 %24, label %29, label %25, !dbg !4299

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4300
  %27 = and i32 %26, %19, !dbg !4301
  %28 = icmp eq i32 %27, 0, !dbg !4301
  br i1 %28, label %29, label %49, !dbg !4302

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4303
  %31 = icmp eq i32 %23, %30, !dbg !4304
  br i1 %31, label %59, label %32, !dbg !4305

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4306
  br i1 %33, label %34, label %36, !dbg !4307

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4308
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4310
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4311
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4312
  br label %59, !dbg !4313

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4314
  br i1 %37, label %49, label %38, !dbg !4315

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4316
  %40 = add i32 %39, %30, !dbg !4317
  %41 = icmp ult i32 %40, %23, !dbg !4318
  br i1 %41, label %49, label %42, !dbg !4319

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %43, metadata !4265, metadata !DIExpression()), !dbg !4321
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4322
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4323
  %45 = icmp ult i32 %43, %44, !dbg !4325
  br i1 %45, label %46, label %48, !dbg !4326

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4327
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4329
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4330
  br label %48, !dbg !4331

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4332
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4333
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4334
  call void @llvm.dbg.value(metadata i8* %50, metadata !4271, metadata !DIExpression()), !dbg !4275
  %51 = icmp eq i8* %50, null, !dbg !4335
  br i1 %51, label %59, label %52, !dbg !4336

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4337, !range !3781
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4338
  %55 = sub i32 %54, %21, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %55, metadata !4272, metadata !DIExpression()), !dbg !4340
  %56 = icmp ult i32 %55, %3, !dbg !4341
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4341
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #25, !dbg !4342
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4343
  br label %59, !dbg !4344

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4275
  ret i8* %60, !dbg !4345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4346 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4350, metadata !DIExpression()), !dbg !4352
  call void @llvm.dbg.value(metadata i32 %1, metadata !4351, metadata !DIExpression()), !dbg !4352
  %3 = shl i32 %1, 3, !dbg !4353
  %4 = add i32 %3, -4, !dbg !4354
  ret i32 %4, !dbg !4355
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4356 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4360, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i8* %1, metadata !4361, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 %2, metadata !4362, metadata !DIExpression()), !dbg !4371
  %4 = add i32 %2, -4, !dbg !4372
  call void @llvm.dbg.value(metadata i32 %4, metadata !4362, metadata !DIExpression()), !dbg !4371
  %5 = ptrtoint i8* %1 to i32, !dbg !4373
  %6 = add i32 %5, 7, !dbg !4373
  %7 = and i32 %6, -8, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %7, metadata !4363, metadata !DIExpression()), !dbg !4371
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4374
  %9 = ptrtoint i8* %8 to i32, !dbg !4374
  %10 = and i32 %9, -8, !dbg !4374
  call void @llvm.dbg.value(metadata i32 %10, metadata !4364, metadata !DIExpression()), !dbg !4371
  %11 = sub i32 %10, %7, !dbg !4375
  %12 = lshr exact i32 %11, 3, !dbg !4376
  call void @llvm.dbg.value(metadata i32 %12, metadata !4365, metadata !DIExpression()), !dbg !4371
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4377
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4366, metadata !DIExpression()), !dbg !4371
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4378
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4379
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4380
  store i32 %12, i32* %15, align 8, !dbg !4381
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4382
  store i32 0, i32* %16, align 4, !dbg !4383
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %17, metadata !4367, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4371
  %18 = shl i32 %17, 2, !dbg !4385
  %19 = add i32 %18, 20, !dbg !4386
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %20, metadata !4368, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.value(metadata i32 0, metadata !4369, metadata !DIExpression()), !dbg !4388
  %21 = icmp slt i32 %17, 0, !dbg !4389
  br i1 %21, label %22, label %24, !dbg !4391

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4392
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4393
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4394
  %23 = sub i32 %12, %20, !dbg !4395
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4396
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4397
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4398
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4399
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4400
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4401
  ret void, !dbg !4402

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4369, metadata !DIExpression()), !dbg !4388
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4403
  store i32 0, i32* %26, align 4, !dbg !4405
  %27 = add nuw i32 %25, 1, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %27, metadata !4369, metadata !DIExpression()), !dbg !4388
  %28 = icmp eq i32 %25, %17, !dbg !4389
  br i1 %28, label %22, label %24, !dbg !4391, !llvm.loop !4407
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4409 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4422, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4419, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* %1, metadata !4420, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* %2, metadata !4421, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %4, metadata !4423, metadata !DIExpression()), !dbg !4550
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4551
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4551
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4424, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 0, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i1 undef, metadata !4430, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4550
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4553

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4553

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4554
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4422, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* %30, metadata !4421, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %29, metadata !4428, metadata !DIExpression()), !dbg !4550
  %31 = load i8, i8* %30, align 1, !dbg !4555
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4553

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4555
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4556
  call void @llvm.dbg.value(metadata i8* %34, metadata !4421, metadata !DIExpression()), !dbg !4550
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4556
  call void @llvm.dbg.value(metadata i32 %35, metadata !4432, metadata !DIExpression()), !dbg !4557
  %36 = icmp slt i32 %35, 0, !dbg !4558
  %37 = add i32 %29, 1, !dbg !4556
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %36, label %365, label %28, !llvm.loop !4560

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4562
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4437, metadata !DIExpression()), !dbg !4563
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4563
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4482, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4485, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* %30, metadata !4488, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i32 -1, metadata !4489, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i32 -1, metadata !4490, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* null, metadata !4491, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* %14, metadata !4492, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8 0, metadata !4493, metadata !DIExpression()), !dbg !4564
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4565
  call void @llvm.dbg.value(metadata i8* %39, metadata !4421, metadata !DIExpression()), !dbg !4550
  %40 = load i24, i24* %15, align 8, !dbg !4566
  %41 = and i24 %40, 256, !dbg !4566
  %42 = icmp eq i24 %41, 0, !dbg !4566
  br i1 %42, label %51, label %43, !dbg !4568

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4569
  call void @llvm.dbg.value(metadata i8* %44, metadata !4422, metadata !DIExpression()), !dbg !4550
  %45 = bitcast i8* %27 to i32*, !dbg !4569
  %46 = load i32, i32* %45, align 4, !dbg !4569
  call void @llvm.dbg.value(metadata i32 %46, metadata !4489, metadata !DIExpression()), !dbg !4564
  %47 = icmp slt i32 %46, 0, !dbg !4571
  br i1 %47, label %48, label %56, !dbg !4573

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4574
  store i24 %49, i24* %15, align 8, !dbg !4574
  %50 = sub nsw i32 0, %46, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %50, metadata !4489, metadata !DIExpression()), !dbg !4564
  br label %56, !dbg !4577

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4578
  %53 = icmp eq i24 %52, 0, !dbg !4578
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4580
  br label %56, !dbg !4580

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4581
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4564
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4422, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %58, metadata !4489, metadata !DIExpression()), !dbg !4564
  %60 = and i24 %57, 1024, !dbg !4581
  %61 = icmp eq i24 %60, 0, !dbg !4581
  br i1 %61, label %69, label %62, !dbg !4582

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4583
  call void @llvm.dbg.value(metadata i8* %63, metadata !4422, metadata !DIExpression()), !dbg !4550
  %64 = bitcast i8* %59 to i32*, !dbg !4583
  %65 = load i32, i32* %64, align 4, !dbg !4583
  call void @llvm.dbg.value(metadata i32 %65, metadata !4494, metadata !DIExpression()), !dbg !4584
  %66 = icmp slt i32 %65, 0, !dbg !4585
  br i1 %66, label %67, label %74, !dbg !4587

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4588
  store i24 %68, i24* %15, align 8, !dbg !4588
  br label %74, !dbg !4590

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4591
  %71 = icmp eq i24 %70, 0, !dbg !4591
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4593
  br label %74, !dbg !4593

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4594
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4564
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4564
  call void @llvm.dbg.value(metadata i8* %77, metadata !4422, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %76, metadata !4490, metadata !DIExpression()), !dbg !4564
  store i32 0, i32* %16, align 4, !dbg !4595
  store i32 0, i32* %17, align 8, !dbg !4596
  %78 = lshr i24 %75, 16, !dbg !4594
  call void @llvm.dbg.value(metadata i24 %78, metadata !4497, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4564
  %79 = lshr i24 %75, 11, !dbg !4597
  %80 = and i24 %79, 15, !dbg !4597
  %81 = zext i24 %80 to i32, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %81, metadata !4498, metadata !DIExpression()), !dbg !4564
  %82 = trunc i24 %78 to i3, !dbg !4598
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4598

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4599

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %85, metadata !4422, metadata !DIExpression()), !dbg !4550
  %86 = bitcast i8* %77 to i32*, !dbg !4602
  %87 = load i32, i32* %86, align 4, !dbg !4602
  %88 = sext i32 %87 to i64, !dbg !4602
  store i64 %88, i64* %20, align 8, !dbg !4604
  br label %115, !dbg !4605

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %90, metadata !4422, metadata !DIExpression()), !dbg !4550
  %91 = bitcast i8* %77 to i32*, !dbg !4606
  %92 = load i32, i32* %91, align 4, !dbg !4606
  %93 = sext i32 %92 to i64, !dbg !4606
  store i64 %93, i64* %20, align 8, !dbg !4609
  br label %115, !dbg !4610

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4611
  %96 = add i32 %95, 7, !dbg !4611
  %97 = and i32 %96, -8, !dbg !4611
  %98 = inttoptr i32 %97 to i8*, !dbg !4611
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4611
  call void @llvm.dbg.value(metadata i8* %99, metadata !4422, metadata !DIExpression()), !dbg !4550
  %100 = inttoptr i32 %97 to i64*, !dbg !4611
  %101 = load i64, i64* %100, align 8, !dbg !4611
  store i64 %101, i64* %20, align 8, !dbg !4612
  br label %115, !dbg !4613

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4614
  %104 = add i32 %103, 7, !dbg !4614
  %105 = and i32 %104, -8, !dbg !4614
  %106 = inttoptr i32 %105 to i8*, !dbg !4614
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4614
  call void @llvm.dbg.value(metadata i8* %107, metadata !4422, metadata !DIExpression()), !dbg !4550
  %108 = inttoptr i32 %105 to i64*, !dbg !4614
  %109 = load i64, i64* %108, align 8, !dbg !4614
  store i64 %109, i64* %20, align 8, !dbg !4615
  br label %115, !dbg !4616

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4617
  call void @llvm.dbg.value(metadata i8* %111, metadata !4422, metadata !DIExpression()), !dbg !4550
  %112 = bitcast i8* %77 to i32*, !dbg !4617
  %113 = load i32, i32* %112, align 4, !dbg !4617
  %114 = sext i32 %113 to i64, !dbg !4618
  store i64 %114, i64* %20, align 8, !dbg !4619
  br label %115, !dbg !4620

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4621
  call void @llvm.dbg.value(metadata i8* %117, metadata !4422, metadata !DIExpression()), !dbg !4550
  %118 = trunc i24 %79 to i4, !dbg !4622
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4622

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4623
  %121 = ashr exact i64 %120, 56, !dbg !4623
  store i64 %121, i64* %20, align 8, !dbg !4626
  br label %177, !dbg !4627

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4628
  %124 = ashr exact i64 %123, 48, !dbg !4628
  store i64 %124, i64* %20, align 8, !dbg !4631
  br label %177, !dbg !4632

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4633

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4636
  call void @llvm.dbg.value(metadata i8* %127, metadata !4422, metadata !DIExpression()), !dbg !4550
  %128 = bitcast i8* %77 to i32*, !dbg !4636
  %129 = load i32, i32* %128, align 4, !dbg !4636
  %130 = zext i32 %129 to i64, !dbg !4636
  store i64 %130, i64* %20, align 8, !dbg !4638
  br label %157, !dbg !4639

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4640
  call void @llvm.dbg.value(metadata i8* %132, metadata !4422, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* %132, metadata !4422, metadata !DIExpression()), !dbg !4550
  %133 = bitcast i8* %77 to i32*, !dbg !4640
  %134 = load i32, i32* %133, align 4, !dbg !4640
  %135 = zext i32 %134 to i64, !dbg !4640
  store i64 %135, i64* %20, align 8, !dbg !4640
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4642
  %138 = add i32 %137, 7, !dbg !4642
  %139 = and i32 %138, -8, !dbg !4642
  %140 = inttoptr i32 %139 to i8*, !dbg !4642
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4642
  call void @llvm.dbg.value(metadata i8* %141, metadata !4422, metadata !DIExpression()), !dbg !4550
  %142 = inttoptr i32 %139 to i64*, !dbg !4642
  %143 = load i64, i64* %142, align 8, !dbg !4642
  store i64 %143, i64* %20, align 8, !dbg !4643
  br label %157, !dbg !4644

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4645
  %146 = add i32 %145, 7, !dbg !4645
  %147 = and i32 %146, -8, !dbg !4645
  %148 = inttoptr i32 %147 to i8*, !dbg !4645
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4645
  call void @llvm.dbg.value(metadata i8* %149, metadata !4422, metadata !DIExpression()), !dbg !4550
  %150 = inttoptr i32 %147 to i64*, !dbg !4645
  %151 = load i64, i64* %150, align 8, !dbg !4645
  store i64 %151, i64* %20, align 8, !dbg !4646
  br label %157, !dbg !4647

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %153, metadata !4422, metadata !DIExpression()), !dbg !4550
  %154 = bitcast i8* %77 to i32*, !dbg !4648
  %155 = load i32, i32* %154, align 4, !dbg !4648
  %156 = zext i32 %155 to i64, !dbg !4649
  store i64 %156, i64* %20, align 8, !dbg !4650
  br label %157, !dbg !4651

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4652
  call void @llvm.dbg.value(metadata i8* %159, metadata !4422, metadata !DIExpression()), !dbg !4550
  %160 = trunc i24 %79 to i4, !dbg !4653
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4653

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4654
  store i64 %162, i64* %20, align 8, !dbg !4657
  br label %177, !dbg !4658

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4659
  store i64 %164, i64* %20, align 8, !dbg !4662
  br label %177, !dbg !4663

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4664
  %167 = add i32 %166, 7, !dbg !4664
  %168 = and i32 %167, -8, !dbg !4664
  %169 = inttoptr i32 %168 to i8*, !dbg !4664
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %170, metadata !4422, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* %170, metadata !4422, metadata !DIExpression()), !dbg !4550
  %171 = inttoptr i32 %168 to double*, !dbg !4664
  %172 = load double, double* %171, align 8, !dbg !4664
  store double %172, double* %19, align 8, !dbg !4664
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4668
  call void @llvm.dbg.value(metadata i8* %174, metadata !4422, metadata !DIExpression()), !dbg !4550
  %175 = bitcast i8* %77 to i8**, !dbg !4668
  %176 = load i8*, i8** %175, align 4, !dbg !4668
  store i8* %176, i8** %18, align 8, !dbg !4671
  br label %177, !dbg !4672

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4564
  call void @llvm.dbg.value(metadata i8* %178, metadata !4422, metadata !DIExpression()), !dbg !4550
  %179 = and i24 %75, 3, !dbg !4673
  %180 = icmp eq i24 %179, 0, !dbg !4673
  br i1 %180, label %185, label %181, !dbg !4673

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %182, metadata !4499, metadata !DIExpression()), !dbg !4675
  %183 = icmp slt i32 %182, 0, !dbg !4676
  %184 = add i32 %182, %29, !dbg !4674
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4678
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4679

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %188, metadata !4503, metadata !DIExpression()), !dbg !4681
  %189 = icmp slt i32 %188, 0, !dbg !4682
  %190 = add i32 %29, 1, !dbg !4680
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4684
  call void @llvm.dbg.value(metadata i8* %192, metadata !4491, metadata !DIExpression()), !dbg !4564
  %193 = icmp sgt i32 %76, -1, !dbg !4685
  br i1 %193, label %194, label %196, !dbg !4687

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %195, metadata !4506, metadata !DIExpression()), !dbg !4690
  br label %241, !dbg !4691

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4692
  call void @llvm.dbg.value(metadata i32 %197, metadata !4506, metadata !DIExpression()), !dbg !4690
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4491, metadata !DIExpression()), !dbg !4564
  %199 = load i64, i64* %20, align 8, !dbg !4694
  %200 = trunc i64 %199 to i8, !dbg !4695
  store i8 %200, i8* %10, align 1, !dbg !4696
  call void @llvm.dbg.value(metadata i8* %23, metadata !4492, metadata !DIExpression()), !dbg !4564
  br label %245, !dbg !4697

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4698
  %203 = icmp eq i24 %202, 0, !dbg !4698
  %204 = trunc i24 %75 to i8, !dbg !4700
  %205 = shl i8 %204, 1, !dbg !4700
  %206 = and i8 %205, 32, !dbg !4700
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4700
  call void @llvm.dbg.value(metadata i8 %207, metadata !4493, metadata !DIExpression()), !dbg !4564
  %208 = load i64, i64* %20, align 8, !dbg !4701
  call void @llvm.dbg.value(metadata i64 %208, metadata !4429, metadata !DIExpression()), !dbg !4550
  %209 = icmp slt i64 %208, 0, !dbg !4702
  br i1 %209, label %210, label %212, !dbg !4704

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4493, metadata !DIExpression()), !dbg !4564
  %211 = sub nsw i64 0, %208, !dbg !4705
  store i64 %211, i64* %20, align 8, !dbg !4707
  br label %212, !dbg !4708

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4564
  call void @llvm.dbg.value(metadata i8 %213, metadata !4493, metadata !DIExpression()), !dbg !4564
  %214 = load i64, i64* %20, align 8, !dbg !4709
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4710
  call void @llvm.dbg.value(metadata i8* %215, metadata !4491, metadata !DIExpression()), !dbg !4564
  br label %216, !dbg !4711

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4712
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4713
  call void @llvm.dbg.value(metadata i8* %218, metadata !4491, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8 %217, metadata !4493, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.label(metadata !4549), !dbg !4714
  %219 = icmp sgt i32 %76, -1, !dbg !4715
  br i1 %219, label %222, label %220, !dbg !4716

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4717
  br label %245, !dbg !4716

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4719
  %224 = sub i32 %22, %223, !dbg !4719
  call void @llvm.dbg.value(metadata i32 %224, metadata !4508, metadata !DIExpression()), !dbg !4720
  %225 = load i24, i24* %15, align 8, !dbg !4721
  %226 = and i24 %225, -65, !dbg !4721
  store i24 %226, i24* %15, align 8, !dbg !4721
  %227 = icmp ugt i32 %76, %224, !dbg !4722
  br i1 %227, label %228, label %245, !dbg !4724

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4725
  store i32 %229, i32* %16, align 4, !dbg !4727
  br label %245, !dbg !4728

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4729
  %232 = icmp eq i8* %231, null, !dbg !4731
  br i1 %232, label %245, label %233, !dbg !4732

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4733
  %235 = zext i32 %234 to i64, !dbg !4733
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %236, metadata !4491, metadata !DIExpression()), !dbg !4564
  %237 = load i24, i24* %15, align 8, !dbg !4736
  %238 = or i24 %237, 1048576, !dbg !4736
  store i24 %238, i24* %15, align 8, !dbg !4736
  store i8 120, i8* %21, align 1, !dbg !4737
  br label %216, !dbg !4738

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4739
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4742
  br label %363, !dbg !4743

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4744
  call void @llvm.dbg.value(metadata i32 %242, metadata !4506, metadata !DIExpression()), !dbg !4690
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4745
  call void @llvm.dbg.value(metadata i32 -1, metadata !4490, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i32 %29, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8* %192, metadata !4491, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8* %243, metadata !4492, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8 0, metadata !4493, metadata !DIExpression()), !dbg !4564
  %244 = icmp eq i8* %192, null, !dbg !4746
  br i1 %244, label %363, label %245, !dbg !4748, !llvm.loop !4560

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4717
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4564
  call void @llvm.dbg.value(metadata i32 0, metadata !4512, metadata !DIExpression()), !dbg !4564
  %250 = zext i8 %249 to i32, !dbg !4749
  %251 = icmp eq i8 %249, 0, !dbg !4751
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  call void @llvm.dbg.value(metadata i32 undef, metadata !4511, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  call void @llvm.dbg.value(metadata i32 undef, metadata !4511, metadata !DIExpression()), !dbg !4564
  %252 = icmp sgt i32 %58, 0, !dbg !4752
  br i1 %252, label %253, label %302, !dbg !4753

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4717
  %255 = icmp eq i24 %254, 0, !dbg !4717
  %256 = ptrtoint i8* %248 to i32, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  %257 = ptrtoint i8* %247 to i32, !dbg !4754
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  %258 = xor i1 %251, true, !dbg !4755
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  %259 = sext i1 %258 to i32, !dbg !4755
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  %260 = lshr i24 %246, 19, !dbg !4756
  %261 = and i24 %260, 1, !dbg !4756
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4756
  %263 = zext i24 %262 to i32, !dbg !4756
  %264 = add i32 %257, %259, !dbg !4756
  %265 = add i32 %256, %263, !dbg !4756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  %266 = and i24 %246, 4194304, !dbg !4757
  %267 = icmp eq i24 %266, 0, !dbg !4757
  %268 = load i32, i32* %16, align 4, !dbg !4759
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4511, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4564
  call void @llvm.dbg.value(metadata i32 undef, metadata !4511, metadata !DIExpression()), !dbg !4564
  %269 = load i32, i32* %17, align 8, !dbg !4760
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4760
  call void @llvm.dbg.value(metadata i32 undef, metadata !4511, metadata !DIExpression()), !dbg !4564
  %271 = add i32 %264, %58, !dbg !4760
  %272 = add i32 %265, %268, !dbg !4760
  %273 = add i32 %272, %270, !dbg !4761
  %274 = sub i32 %271, %273, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %274, metadata !4489, metadata !DIExpression()), !dbg !4564
  %275 = and i24 %246, 4, !dbg !4762
  %276 = icmp eq i24 %275, 0, !dbg !4762
  br i1 %276, label %277, label %302, !dbg !4763

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4513, metadata !DIExpression()), !dbg !4764
  %278 = and i24 %246, 64, !dbg !4765
  %279 = icmp eq i24 %278, 0, !dbg !4765
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4766
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4766
  %282 = select i1 %279, i32 32, i32 48, !dbg !4766
  br i1 %280, label %287, label %283, !dbg !4766

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %284, metadata !4518, metadata !DIExpression()), !dbg !4768
  %285 = icmp slt i32 %284, 0, !dbg !4769
  %286 = add i32 %29, 1, !dbg !4767
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4564
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %290, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i8 undef, metadata !4513, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata i8 %288, metadata !4493, metadata !DIExpression()), !dbg !4564
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4771
  %292 = add i32 %291, -1, !dbg !4771
  br label %293, !dbg !4771

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4772
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %295, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %294, metadata !4489, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i32 %294, metadata !4489, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4564
  %296 = icmp sgt i32 %294, 0, !dbg !4773
  br i1 %296, label %297, label %302, !dbg !4771

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4774
  call void @llvm.dbg.value(metadata i32 %298, metadata !4489, metadata !DIExpression()), !dbg !4564
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4775
  call void @llvm.dbg.value(metadata i32 %299, metadata !4524, metadata !DIExpression()), !dbg !4776
  %300 = icmp slt i32 %299, 0, !dbg !4777
  %301 = add i32 %295, 1, !dbg !4775
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %300, label %361, label %293, !llvm.loop !4779

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4564
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4564
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %305, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %304, metadata !4489, metadata !DIExpression()), !dbg !4564
  call void @llvm.dbg.value(metadata i8 %303, metadata !4493, metadata !DIExpression()), !dbg !4564
  %306 = icmp eq i8 %303, 0, !dbg !4781
  br i1 %306, label %312, label %307, !dbg !4782

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4783
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %309, metadata !4527, metadata !DIExpression()), !dbg !4785
  %310 = icmp slt i32 %309, 0, !dbg !4786
  %311 = add i32 %305, 1, !dbg !4784
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %313, metadata !4428, metadata !DIExpression()), !dbg !4550
  %314 = lshr i24 %246, 20, !dbg !4788
  %315 = lshr i24 %246, 19, !dbg !4789
  %316 = or i24 %314, %315, !dbg !4790
  %317 = and i24 %316, 1, !dbg !4790
  %318 = icmp eq i24 %317, 0, !dbg !4790
  br i1 %318, label %323, label %319, !dbg !4791

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4792
  call void @llvm.dbg.value(metadata i32 %320, metadata !4531, metadata !DIExpression()), !dbg !4793
  %321 = icmp slt i32 %320, 0, !dbg !4794
  %322 = add i32 %313, 1, !dbg !4792
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %324, metadata !4428, metadata !DIExpression()), !dbg !4550
  %325 = and i24 %246, 1048576, !dbg !4796
  %326 = icmp eq i24 %325, 0, !dbg !4796
  br i1 %326, label %333, label %327, !dbg !4797

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4798
  %329 = zext i8 %328 to i32, !dbg !4798
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %330, metadata !4537, metadata !DIExpression()), !dbg !4799
  %331 = icmp slt i32 %330, 0, !dbg !4800
  %332 = add i32 %324, 1, !dbg !4798
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %334, metadata !4428, metadata !DIExpression()), !dbg !4550
  %335 = load i32, i32* %16, align 4, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %335, metadata !4512, metadata !DIExpression()), !dbg !4564
  br label %336, !dbg !4803

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4804
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %338, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %337, metadata !4512, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4564
  %339 = icmp sgt i32 %337, 0, !dbg !4805
  br i1 %339, label %340, label %345, !dbg !4803

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %341, metadata !4512, metadata !DIExpression()), !dbg !4564
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %342, metadata !4541, metadata !DIExpression()), !dbg !4808
  %343 = icmp slt i32 %342, 0, !dbg !4809
  %344 = add i32 %338, 1, !dbg !4807
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %343, label %361, label %336, !llvm.loop !4811

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %346, metadata !4544, metadata !DIExpression()), !dbg !4814
  %347 = icmp slt i32 %346, 0, !dbg !4815
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %349, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %304, metadata !4489, metadata !DIExpression()), !dbg !4564
  %350 = icmp sgt i32 %304, 0, !dbg !4817
  br i1 %350, label %351, label %363, !dbg !4818

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4818
  %353 = add i32 %352, %338, !dbg !4818
  br label %354, !dbg !4818

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %355, metadata !4489, metadata !DIExpression()), !dbg !4564
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %356, metadata !4546, metadata !DIExpression()), !dbg !4820
  %357 = icmp slt i32 %356, 0, !dbg !4821
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4428, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4550
  call void @llvm.dbg.value(metadata i32 %359, metadata !4489, metadata !DIExpression()), !dbg !4564
  %360 = icmp sgt i32 %355, 1, !dbg !4817
  br i1 %360, label %354, label %363, !dbg !4818, !llvm.loop !4824

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4561
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4554
  call void @llvm.dbg.value(metadata i32 %364, metadata !4428, metadata !DIExpression()), !dbg !4550
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !4561
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4550
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !4826
  ret i32 %366, !dbg !4826
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4827 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4831, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i8* %1, metadata !4832, metadata !DIExpression()), !dbg !4833
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4834
  store i24 0, i24* %3, align 4, !dbg !4834
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4834
  store i8 0, i8* %4, align 1, !dbg !4834
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4834
  store i32 0, i32* %5, align 4, !dbg !4834
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4834
  store i32 0, i32* %6, align 4, !dbg !4834
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4835
  call void @llvm.dbg.value(metadata i8* %7, metadata !4832, metadata !DIExpression()), !dbg !4833
  %8 = load i8, i8* %7, align 1, !dbg !4836
  %9 = icmp eq i8 %8, 37, !dbg !4838
  br i1 %9, label %10, label %12, !dbg !4839

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %11, metadata !4832, metadata !DIExpression()), !dbg !4833
  store i8 37, i8* %4, align 1, !dbg !4842
  br label %18, !dbg !4843

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %13, metadata !4832, metadata !DIExpression()), !dbg !4833
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4845
  call void @llvm.dbg.value(metadata i8* %14, metadata !4832, metadata !DIExpression()), !dbg !4833
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %15, metadata !4832, metadata !DIExpression()), !dbg !4833
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %16, metadata !4832, metadata !DIExpression()), !dbg !4833
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %17, metadata !4832, metadata !DIExpression()), !dbg !4833
  br label %18, !dbg !4849

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4833
  ret i8* %19, !dbg !4850
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4851 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4855, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i8* %1, metadata !4856, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i8* %2, metadata !4857, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i8* %3, metadata !4858, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i32 0, metadata !4859, metadata !DIExpression()), !dbg !4862
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4863

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4864
  call void @llvm.dbg.value(metadata i32 %9, metadata !4859, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i8* %8, metadata !4857, metadata !DIExpression()), !dbg !4862
  %10 = icmp ult i8* %8, %3, !dbg !4865
  br i1 %10, label %11, label %13, !dbg !4866

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4867
  br label %17, !dbg !4866

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4868

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4869
  %16 = icmp eq i8 %15, 0, !dbg !4868
  br i1 %16, label %24, label %17, !dbg !4863

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4867
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %19, metadata !4857, metadata !DIExpression()), !dbg !4862
  %20 = zext i8 %18 to i32, !dbg !4871
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %21, metadata !4860, metadata !DIExpression()), !dbg !4873
  %22 = icmp slt i32 %21, 0, !dbg !4874
  %23 = add i32 %9, 1, !dbg !4876
  call void @llvm.dbg.value(metadata i32 undef, metadata !4859, metadata !DIExpression()), !dbg !4862
  br i1 %22, label %24, label %7, !llvm.loop !4877

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4862
  ret i32 %25, !dbg !4879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !4880 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4884, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4885, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i8* %2, metadata !4886, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i8* %3, metadata !4887, metadata !DIExpression()), !dbg !4894
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4895
  %6 = load i8, i8* %5, align 1, !dbg !4895
  %7 = zext i8 %6 to i32, !dbg !4896
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !4897
  %9 = icmp eq i32 %8, 0, !dbg !4897
  call void @llvm.dbg.value(metadata i1 %9, metadata !4888, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4894
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %10, metadata !4889, metadata !DIExpression()), !dbg !4894
  %11 = ptrtoint i8* %3 to i32, !dbg !4899
  %12 = ptrtoint i8* %2 to i32, !dbg !4899
  %13 = sub i32 %11, %12, !dbg !4899
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4900
  call void @llvm.dbg.value(metadata i8* %14, metadata !4891, metadata !DIExpression()), !dbg !4894
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4901

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4894
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4884, metadata !DIExpression()), !dbg !4894
  call void @llvm.dbg.value(metadata i8* %18, metadata !4891, metadata !DIExpression()), !dbg !4894
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4902
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %25, metadata !4892, metadata !DIExpression()), !dbg !4904
  %26 = icmp ult i32 %25, 10, !dbg !4905
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4906
  %28 = add i32 %27, %25, !dbg !4904
  %29 = trunc i32 %28 to i8, !dbg !4906
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4907
  call void @llvm.dbg.value(metadata i8* %30, metadata !4891, metadata !DIExpression()), !dbg !4894
  store i8 %29, i8* %30, align 1, !dbg !4908
  call void @llvm.dbg.value(metadata i64 %22, metadata !4884, metadata !DIExpression()), !dbg !4894
  %31 = icmp uge i64 %19, %15, !dbg !4909
  %32 = icmp ugt i8* %30, %2, !dbg !4910
  %33 = and i1 %31, %32, !dbg !4910
  br i1 %33, label %17, label %34, !dbg !4911, !llvm.loop !4912

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4914
  %36 = load i24, i24* %35, align 4, !dbg !4914
  %37 = and i24 %36, 32, !dbg !4914
  %38 = icmp eq i24 %37, 0, !dbg !4914
  br i1 %38, label %44, label %39, !dbg !4916

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4917

40:                                               ; preds = %39
  br label %41, !dbg !4919

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4923
  store i24 %43, i24* %35, align 4, !dbg !4923
  br label %44, !dbg !4924

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4924
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !4925 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4931, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i8* %1, metadata !4932, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.value(metadata i32 %2, metadata !4933, metadata !DIExpression()), !dbg !4934
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4935
  %5 = load i24, i24* %4, align 4, !dbg !4935
  %6 = lshr i24 %5, 11, !dbg !4935
  %7 = and i24 %6, 15, !dbg !4935
  %8 = zext i24 %7 to i32, !dbg !4935
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4936

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4937
  store i32 %2, i32* %10, align 4, !dbg !4939
  br label %28, !dbg !4940

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4941
  store i8 %12, i8* %1, align 1, !dbg !4942
  br label %28, !dbg !4943

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4944
  %15 = bitcast i8* %1 to i16*, !dbg !4945
  store i16 %14, i16* %15, align 2, !dbg !4946
  br label %28, !dbg !4947

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4948
  store i32 %2, i32* %17, align 4, !dbg !4949
  br label %28, !dbg !4950

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4951
  %20 = bitcast i8* %1 to i64*, !dbg !4952
  store i64 %19, i64* %20, align 8, !dbg !4953
  br label %28, !dbg !4954

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4955
  %23 = bitcast i8* %1 to i64*, !dbg !4956
  store i64 %22, i64* %23, align 8, !dbg !4957
  br label %28, !dbg !4958

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4959
  store i32 %2, i32* %25, align 4, !dbg !4960
  br label %28, !dbg !4961

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4962
  store i32 %2, i32* %27, align 4, !dbg !4963
  br label %28, !dbg !4964

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4965
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !4966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4969, metadata !DIExpression()), !dbg !4970
  %2 = add i32 %0, -65, !dbg !4971
  %3 = icmp ult i32 %2, 26, !dbg !4972
  %4 = zext i1 %3 to i32, !dbg !4972
  ret i32 %4, !dbg !4973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !4974 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4978, metadata !DIExpression()), !dbg !4979
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4980

2:                                                ; preds = %1
  br label %4, !dbg !4981

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4983

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4984
  ret i32 %5, !dbg !4985
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !4986 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4988, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i8* %1, metadata !4989, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i8 1, metadata !4990, metadata !DIExpression()), !dbg !4991
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4992

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4990, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i8* %5, metadata !4989, metadata !DIExpression()), !dbg !4991
  %6 = load i8, i8* %5, align 1, !dbg !4993
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4995

7:                                                ; preds = %4
  br label %11, !dbg !4996

8:                                                ; preds = %4
  br label %11, !dbg !4998

9:                                                ; preds = %4
  br label %11, !dbg !4999

10:                                               ; preds = %4
  br label %11, !dbg !5000

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5001
  %14 = or i24 %13, %12, !dbg !5001
  store i24 %14, i24* %3, align 4, !dbg !5001
  call void @llvm.dbg.value(metadata i8 poison, metadata !4990, metadata !DIExpression()), !dbg !4991
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4989, metadata !DIExpression()), !dbg !4991
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4990, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata i8* %15, metadata !4989, metadata !DIExpression()), !dbg !4991
  %17 = load i24, i24* %3, align 4, !dbg !5002
  %18 = and i24 %17, 68, !dbg !5004
  %19 = icmp eq i24 %18, 68, !dbg !5004
  br i1 %19, label %20, label %22, !dbg !5004

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5005
  store i24 %21, i24* %3, align 4, !dbg !5005
  br label %22, !dbg !5007

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5008
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5009 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5011, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5015
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5016
  %5 = load i24, i24* %4, align 4, !dbg !5017
  %6 = or i24 %5, 128, !dbg !5017
  store i24 %6, i24* %4, align 4, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5015
  %7 = load i8, i8* %1, align 1, !dbg !5018
  %8 = icmp eq i8 %7, 42, !dbg !5020
  br i1 %8, label %9, label %12, !dbg !5021

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5022
  store i24 %10, i24* %4, align 4, !dbg !5022
  call void @llvm.dbg.value(metadata i8* %1, metadata !5012, metadata !DIExpression()), !dbg !5015
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %11, metadata !5012, metadata !DIExpression()), !dbg !5015
  store i8* %11, i8** %3, align 4, !dbg !5024
  br label %29, !dbg !5025

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5013, metadata !DIExpression()), !dbg !5015
  call void @llvm.dbg.value(metadata i8** %3, metadata !5012, metadata !DIExpression(DW_OP_deref)), !dbg !5015
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %13, metadata !5014, metadata !DIExpression()), !dbg !5015
  %14 = load i8*, i8** %3, align 4, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %14, metadata !5012, metadata !DIExpression()), !dbg !5015
  %15 = icmp eq i8* %14, %1, !dbg !5029
  br i1 %15, label %29, label %16, !dbg !5030

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5031
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5033
  store i32 %13, i32* %18, align 4, !dbg !5034
  %19 = lshr i32 %13, 31, !dbg !5035
  %20 = lshr i24 %17, 1, !dbg !5036
  %21 = and i24 %20, 1, !dbg !5036
  %22 = zext i24 %21 to i32, !dbg !5036
  %23 = or i32 %19, %22, !dbg !5036
  %24 = trunc i32 %23 to i24, !dbg !5036
  %25 = shl nuw nsw i24 %24, 1, !dbg !5036
  %26 = and i24 %17, -131, !dbg !5036
  %27 = or i24 %26, 128, !dbg !5036
  %28 = or i24 %25, %27, !dbg !5036
  store i24 %28, i24* %4, align 4, !dbg !5036
  br label %29, !dbg !5037

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5015
  ret i8* %30, !dbg !5038
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5039 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5041, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i8* %1, metadata !5042, metadata !DIExpression()), !dbg !5044
  %4 = load i8, i8* %1, align 1, !dbg !5045
  %5 = icmp eq i8 %4, 46, !dbg !5046
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5047
  %7 = load i24, i24* %6, align 4, !dbg !5048
  %8 = select i1 %5, i24 512, i24 0, !dbg !5048
  %9 = and i24 %7, -513, !dbg !5048
  %10 = or i24 %9, %8, !dbg !5048
  store i24 %10, i24* %6, align 4, !dbg !5048
  br i1 %5, label %11, label %32, !dbg !5049

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5042, metadata !DIExpression()), !dbg !5044
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %12, metadata !5042, metadata !DIExpression()), !dbg !5044
  store i8* %12, i8** %3, align 4, !dbg !5050
  %13 = load i8, i8* %12, align 1, !dbg !5051
  %14 = icmp eq i8 %13, 42, !dbg !5053
  br i1 %14, label %15, label %18, !dbg !5054

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5055
  store i24 %16, i24* %6, align 4, !dbg !5055
  call void @llvm.dbg.value(metadata i8* %12, metadata !5042, metadata !DIExpression()), !dbg !5044
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %17, metadata !5042, metadata !DIExpression()), !dbg !5044
  store i8* %17, i8** %3, align 4, !dbg !5057
  br label %32, !dbg !5058

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5042, metadata !DIExpression(DW_OP_deref)), !dbg !5044
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5059
  call void @llvm.dbg.value(metadata i32 %19, metadata !5043, metadata !DIExpression()), !dbg !5044
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5060
  store i32 %19, i32* %20, align 4, !dbg !5061
  %21 = lshr i32 %19, 31, !dbg !5062
  %22 = load i24, i24* %6, align 4, !dbg !5063
  %23 = lshr i24 %22, 1, !dbg !5063
  %24 = and i24 %23, 1, !dbg !5063
  %25 = zext i24 %24 to i32, !dbg !5063
  %26 = or i32 %21, %25, !dbg !5063
  %27 = trunc i32 %26 to i24, !dbg !5063
  %28 = shl nuw nsw i24 %27, 1, !dbg !5063
  %29 = and i24 %22, -3, !dbg !5063
  %30 = or i24 %28, %29, !dbg !5063
  store i24 %30, i24* %6, align 4, !dbg !5063
  %31 = load i8*, i8** %3, align 4, !dbg !5064
  call void @llvm.dbg.value(metadata i8* %31, metadata !5042, metadata !DIExpression()), !dbg !5044
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5044
  ret i8* %33, !dbg !5065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5066 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5068, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.value(metadata i8* %1, metadata !5069, metadata !DIExpression()), !dbg !5070
  %3 = load i8, i8* %1, align 1, !dbg !5071
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5072

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5073
  call void @llvm.dbg.value(metadata i8* %5, metadata !5069, metadata !DIExpression()), !dbg !5070
  %6 = load i8, i8* %5, align 1, !dbg !5076
  %7 = icmp eq i8 %6, 104, !dbg !5077
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5078
  %9 = load i24, i24* %8, align 4, !dbg !5078
  %10 = and i24 %9, -30721, !dbg !5078
  br i1 %7, label %11, label %14, !dbg !5079

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5080
  store i24 %12, i24* %8, align 4, !dbg !5080
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5082
  call void @llvm.dbg.value(metadata i8* %13, metadata !5069, metadata !DIExpression()), !dbg !5070
  br label %56, !dbg !5083

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5084
  store i24 %15, i24* %8, align 4, !dbg !5084
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %17, metadata !5069, metadata !DIExpression()), !dbg !5070
  %18 = load i8, i8* %17, align 1, !dbg !5088
  %19 = icmp eq i8 %18, 108, !dbg !5089
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5090
  %21 = load i24, i24* %20, align 4, !dbg !5090
  %22 = and i24 %21, -30721, !dbg !5090
  br i1 %19, label %23, label %26, !dbg !5091

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5092
  store i24 %24, i24* %20, align 4, !dbg !5092
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5094
  call void @llvm.dbg.value(metadata i8* %25, metadata !5069, metadata !DIExpression()), !dbg !5070
  br label %56, !dbg !5095

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5096
  store i24 %27, i24* %20, align 4, !dbg !5096
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5098
  %30 = load i24, i24* %29, align 4, !dbg !5099
  %31 = and i24 %30, -30721, !dbg !5099
  %32 = or i24 %31, 10240, !dbg !5099
  store i24 %32, i24* %29, align 4, !dbg !5099
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %33, metadata !5069, metadata !DIExpression()), !dbg !5070
  br label %56, !dbg !5101

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5102
  %36 = load i24, i24* %35, align 4, !dbg !5103
  %37 = and i24 %36, -30721, !dbg !5103
  %38 = or i24 %37, 12288, !dbg !5103
  store i24 %38, i24* %35, align 4, !dbg !5103
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5104
  call void @llvm.dbg.value(metadata i8* %39, metadata !5069, metadata !DIExpression()), !dbg !5070
  br label %56, !dbg !5105

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5106
  %42 = load i24, i24* %41, align 4, !dbg !5107
  %43 = and i24 %42, -30721, !dbg !5107
  %44 = or i24 %43, 14336, !dbg !5107
  store i24 %44, i24* %41, align 4, !dbg !5107
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5108
  call void @llvm.dbg.value(metadata i8* %45, metadata !5069, metadata !DIExpression()), !dbg !5070
  br label %56, !dbg !5109

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5110
  %48 = load i24, i24* %47, align 4, !dbg !5111
  %49 = and i24 %48, -30723, !dbg !5111
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5112
  call void @llvm.dbg.value(metadata i8* %50, metadata !5069, metadata !DIExpression()), !dbg !5070
  %51 = or i24 %49, 16386, !dbg !5113
  store i24 %51, i24* %47, align 4, !dbg !5113
  br label %56, !dbg !5114

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5115
  %54 = load i24, i24* %53, align 4, !dbg !5116
  %55 = and i24 %54, -30721, !dbg !5116
  store i24 %55, i24* %53, align 4, !dbg !5116
  br label %56, !dbg !5117

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5069, metadata !DIExpression()), !dbg !5070
  ret i8* %57, !dbg !5118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !5119 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5121, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8* %1, metadata !5122, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8 0, metadata !5123, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8* %1, metadata !5122, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5126
  %3 = load i8, i8* %1, align 1, !dbg !5127
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5128
  store i8 %3, i8* %4, align 1, !dbg !5129
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5130

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5131

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5132
  %9 = load i24, i24* %8, align 4, !dbg !5132
  %10 = and i24 %9, -458753, !dbg !5132
  %11 = or i24 %10, %7, !dbg !5132
  call void @llvm.dbg.label(metadata !5124), !dbg !5133
  %12 = and i24 %9, 30720, !dbg !5134
  %13 = icmp eq i24 %12, 16384, !dbg !5134
  %14 = zext i1 %13 to i24, !dbg !5136
  %15 = or i24 %11, %14, !dbg !5136
  %16 = icmp eq i8 %3, 99, !dbg !5137
  br i1 %16, label %17, label %43, !dbg !5139

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5140
  %19 = icmp ne i24 %18, 0, !dbg !5140
  call void @llvm.dbg.value(metadata i1 %19, metadata !5123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5126
  br label %43, !dbg !5142

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5143
  %22 = load i24, i24* %21, align 4, !dbg !5144
  %23 = and i24 %22, -458753, !dbg !5144
  %24 = or i24 %23, 262144, !dbg !5144
  call void @llvm.dbg.value(metadata i8 1, metadata !5123, metadata !DIExpression()), !dbg !5126
  br label %43, !dbg !5145

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5148
  %27 = load i24, i24* %26, align 4, !dbg !5149
  %28 = and i24 %27, -458753, !dbg !5149
  %29 = or i24 %28, 196608, !dbg !5149
  %30 = and i24 %27, 30720, !dbg !5150
  %31 = icmp eq i24 %30, 16384, !dbg !5150
  br label %43, !dbg !5152

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5153
  %34 = load i24, i24* %33, align 4, !dbg !5154
  %35 = and i24 %34, -458753, !dbg !5154
  %36 = or i24 %35, 196608, !dbg !5154
  %37 = and i24 %34, 30720, !dbg !5155
  %38 = icmp ne i24 %37, 0, !dbg !5155
  br label %43, !dbg !5157

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5158
  %41 = load i24, i24* %40, align 4, !dbg !5159
  %42 = or i24 %41, 1, !dbg !5159
  br label %43, !dbg !5160

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5161
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5162
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5163
  call void @llvm.dbg.value(metadata i8* %48, metadata !5122, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8 poison, metadata !5123, metadata !DIExpression()), !dbg !5126
  %49 = lshr i24 %44, 1, !dbg !5161
  %50 = and i24 %49, 1, !dbg !5161
  %51 = zext i24 %50 to i32, !dbg !5161
  %52 = or i32 %51, %47, !dbg !5161
  %53 = trunc i32 %52 to i24, !dbg !5161
  %54 = shl nuw nsw i24 %53, 1, !dbg !5161
  %55 = and i24 %44, -3, !dbg !5161
  %56 = or i24 %54, %55, !dbg !5161
  store i24 %56, i24* %46, align 4, !dbg !5161
  ret i8* %48, !dbg !5164
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5165 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5170, metadata !DIExpression()), !dbg !5173
  %2 = load i8*, i8** %0, align 4, !dbg !5174
  call void @llvm.dbg.value(metadata i8* %2, metadata !5171, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i32 0, metadata !5172, metadata !DIExpression()), !dbg !5173
  %3 = load i8, i8* %2, align 1, !dbg !5175
  %4 = zext i8 %3 to i32, !dbg !5176
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5177
  %6 = icmp eq i32 %5, 0, !dbg !5178
  br i1 %6, label %19, label %7, !dbg !5178

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5172, metadata !DIExpression()), !dbg !5173
  call void @llvm.dbg.value(metadata i8* %10, metadata !5171, metadata !DIExpression()), !dbg !5173
  %11 = mul i32 %9, 10, !dbg !5179
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5181
  call void @llvm.dbg.value(metadata i8* %12, metadata !5171, metadata !DIExpression()), !dbg !5173
  %13 = add i32 %11, -48, !dbg !5182
  %14 = add i32 %13, %8, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %14, metadata !5172, metadata !DIExpression()), !dbg !5173
  %15 = load i8, i8* %12, align 1, !dbg !5175
  %16 = zext i8 %15 to i32, !dbg !5176
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5177
  %18 = icmp eq i32 %17, 0, !dbg !5178
  br i1 %18, label %19, label %7, !dbg !5178, !llvm.loop !5184

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5173
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5173
  store i8* %20, i8** %0, align 4, !dbg !5186
  ret i32 %21, !dbg !5187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5190, metadata !DIExpression()), !dbg !5191
  %2 = add i32 %0, -48, !dbg !5192
  %3 = icmp ult i32 %2, 10, !dbg !5193
  %4 = zext i1 %3 to i32, !dbg !5193
  ret i32 %4, !dbg !5194
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5195 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !5197, !srcloc !5198
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !5199, !srcloc !5200
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !5201, !srcloc !5202
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !5203, !srcloc !5204
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !5205, !srcloc !5206
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !5207, !srcloc !5208
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !5209, !srcloc !5210
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !5211, !srcloc !5212
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !5213, !srcloc !5214
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !5215, !srcloc !5216
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #24, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #24, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #24, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #24, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #24, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #24, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #24, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #24, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #24, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #24, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #24, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #24, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #24, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #24, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #24, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #24, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #24, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #24, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #24, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #24, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #24, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #24, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #24, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #24, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #24, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #24, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #24, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #24, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #24, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #24, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #24, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #24, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #24, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #24, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #24, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #24, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #24, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #24, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #24, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #24, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #24, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #24, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #24, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #24, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #24, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #24, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #24, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #24, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #24, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #24, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #24, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HANDLER\0A\09.equ\09CONFIG_CONSOLE_HANDLER,1\0A\09.type\09CONFIG_CONSOLE_HANDLER,%object", ""() #24, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS\0A\09.equ\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,1\0A\09.type\09CONFIG_UART_CONSOLE_DEBUG_SERVER_HOOKS,%object", ""() #24, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #24, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #24, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #24, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #24, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #24, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #24, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #24, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #24, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #24, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #24, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #24, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #24, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #24, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #24, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #24, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_SUBSYS\0A\09.equ\09CONFIG_CONSOLE_SUBSYS,1\0A\09.type\09CONFIG_CONSOLE_SUBSYS,%object", ""() #24, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR\0A\09.equ\09CONFIG_CONSOLE_GETCHAR,1\0A\09.type\09CONFIG_CONSOLE_GETCHAR,%object", ""() #24, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_GETCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_GETCHAR_BUFSIZE,%object", ""() #24, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE\0A\09.equ\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,16\0A\09.type\09CONFIG_CONSOLE_PUTCHAR_BUFSIZE,%object", ""() #24, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !5751, !srcloc !5752
  ret void, !dbg !5753
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5756, metadata !DIExpression()), !dbg !5758
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5759, !srcloc !5768
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5759
  call void @llvm.dbg.value(metadata i32 %3, metadata !5765, metadata !DIExpression()) #24, !dbg !5769
  call void @llvm.dbg.value(metadata i32 undef, metadata !5766, metadata !DIExpression()) #24, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %3, metadata !5757, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.value(metadata i32 %3, metadata !5770, metadata !DIExpression()) #24, !dbg !5775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !5777, !srcloc !5778
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5779
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !5780
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #26, !dbg !5781
  ret i32 0, !dbg !5782
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !5783 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5788, metadata !DIExpression()), !dbg !5790
  %2 = bitcast i32* %1 to i8*, !dbg !5791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5791
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5789, metadata !DIExpression()), !dbg !5792
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5793
  %4 = or i32 %3, 268435456, !dbg !5793
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5793
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5794
  %6 = and i32 %5, 268435456, !dbg !5794
  store volatile i32 %6, i32* %1, align 4, !dbg !5795
  %7 = load volatile i32, i32* %1, align 4, !dbg !5796
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5797
  ret void, !dbg !5797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #16 !dbg !5798 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5801, metadata !DIExpression()), !dbg !5802
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5803
  %2 = and i32 %1, -6145, !dbg !5803
  %3 = or i32 %2, 2048, !dbg !5803
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5803
  ret void, !dbg !5804
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5807, metadata !DIExpression()), !dbg !5808
  ret i32 0, !dbg !5809
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_write(%struct.tty_serial* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5810 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5856, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %1, metadata !5857, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5858, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %1, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 0, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 0, metadata !5861, metadata !DIExpression()), !dbg !5862
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5863
  %5 = load i32, i32* %4, align 4, !dbg !5863
  %6 = icmp eq i32 %5, 0, !dbg !5865
  %7 = icmp eq i32 %2, 0, !dbg !5862
  br i1 %6, label %9, label %8, !dbg !5866

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %1, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5858, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5862
  br i1 %7, label %37, label %20, !dbg !5867

9:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5858, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %2, metadata !5858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5862
  br i1 %7, label %37, label %10, !dbg !5868

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %12, !dbg !5868

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %1, %10 ], [ %17, %12 ]
  %14 = phi i32 [ %2, %10 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %14, metadata !5858, metadata !DIExpression()), !dbg !5862
  %15 = add i32 %14, -1, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %15, metadata !5858, metadata !DIExpression()), !dbg !5862
  %16 = load %struct.device*, %struct.device** %11, align 4, !dbg !5871
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5873
  call void @llvm.dbg.value(metadata i8* %17, metadata !5859, metadata !DIExpression()), !dbg !5862
  %18 = load i8, i8* %13, align 1, !dbg !5874
  tail call fastcc void @uart_poll_out(%struct.device* noundef %16, i8 noundef zeroext %18) #26, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %15, metadata !5858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5862
  %19 = icmp eq i32 %15, 0, !dbg !5868
  br i1 %19, label %37, label %12, !dbg !5868, !llvm.loop !5876

20:                                               ; preds = %8, %33
  %21 = phi i32 [ %24, %33 ], [ %2, %8 ]
  %22 = phi i32 [ %35, %33 ], [ 0, %8 ]
  %23 = phi i8* [ %34, %33 ], [ %1, %8 ]
  %24 = add i32 %21, -1, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %22, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %23, metadata !5859, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i8* %23, metadata !5859, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5862
  %25 = load i8, i8* %23, align 1, !dbg !5879
  %26 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %25) #26, !dbg !5881
  call void @llvm.dbg.value(metadata i32 %26, metadata !5861, metadata !DIExpression()), !dbg !5862
  %27 = icmp slt i32 %26, 0, !dbg !5882
  br i1 %27, label %28, label %33, !dbg !5884

28:                                               ; preds = %20
  %29 = icmp eq i32 %22, 0, !dbg !5885
  br i1 %29, label %30, label %37, !dbg !5888

30:                                               ; preds = %28
  %31 = sub nsw i32 0, %26, !dbg !5889
  %32 = tail call fastcc i32* @z_errno() #26, !dbg !5891
  store i32 %31, i32* %32, align 4, !dbg !5892
  br label %37, !dbg !5893

33:                                               ; preds = %20
  %34 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5894
  call void @llvm.dbg.value(metadata i8* %34, metadata !5859, metadata !DIExpression()), !dbg !5862
  %35 = add nuw i32 %22, 1, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %35, metadata !5860, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %24, metadata !5858, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.value(metadata i32 %24, metadata !5858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5862
  %36 = icmp eq i32 %24, 0, !dbg !5867
  br i1 %36, label %37, label %20, !dbg !5867, !llvm.loop !5896

37:                                               ; preds = %33, %12, %8, %9, %28, %30
  %38 = phi i32 [ %26, %30 ], [ %22, %28 ], [ 0, %9 ], [ 0, %8 ], [ %2, %12 ], [ %2, %33 ], !dbg !5862
  ret i32 %38, !dbg !5898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5899 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5902, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.value(metadata i8 %1, metadata !5903, metadata !DIExpression()), !dbg !5904
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5905, !srcloc !5907
  tail call fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) #26, !dbg !5908
  ret void, !dbg !5909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_putchar(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !5910 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !5914, metadata !DIExpression()), !dbg !5919
  call void @llvm.dbg.value(metadata i8 %1, metadata !5915, metadata !DIExpression()), !dbg !5919
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !5920
  %4 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !5921
  br i1 %4, label %14, label %5, !dbg !5921

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !5922
  %7 = load i32, i32* %6, align 4, !dbg !5922
  %8 = icmp eq i32 %7, -1, !dbg !5922
  br i1 %8, label %14, label %9, !dbg !5922

9:                                                ; preds = %5
  %10 = icmp sgt i32 %7, 0, !dbg !5922
  %11 = select i1 %10, i32 %7, i32 0, !dbg !5922
  %12 = zext i32 %11 to i64, !dbg !5922
  %13 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %12) #26, !dbg !5922
  br label %14, !dbg !5922

14:                                               ; preds = %5, %2, %9
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ], [ -1, %5 ], !dbg !5919
  %16 = insertvalue [1 x i64] poison, i64 %15, 0, !dbg !5923
  %17 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %3, [1 x i64] %16) #26, !dbg !5923
  call void @llvm.dbg.value(metadata i32 %17, metadata !5918, metadata !DIExpression()), !dbg !5919
  %18 = icmp slt i32 %17, 0, !dbg !5924
  br i1 %18, label %42, label %19, !dbg !5926

19:                                               ; preds = %14
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !5927, !srcloc !5933
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %21, metadata !5930, metadata !DIExpression()) #24, !dbg !5934
  call void @llvm.dbg.value(metadata i32 undef, metadata !5931, metadata !DIExpression()) #24, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %21, metadata !5916, metadata !DIExpression()), !dbg !5919
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !5935
  %23 = load i16, i16* %22, align 2, !dbg !5935
  %24 = zext i16 %23 to i32, !dbg !5936
  %25 = add nuw nsw i32 %24, 1, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %25, metadata !5917, metadata !DIExpression()), !dbg !5919
  %26 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !5938
  %27 = load i32, i32* %26, align 4, !dbg !5938
  %28 = icmp ult i32 %25, %27, !dbg !5940
  %29 = select i1 %28, i32 %25, i32 0, !dbg !5941
  call void @llvm.dbg.value(metadata i32 %29, metadata !5917, metadata !DIExpression()), !dbg !5919
  %30 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !5942
  %31 = load i16, i16* %30, align 4, !dbg !5942
  %32 = zext i16 %31 to i32, !dbg !5944
  %33 = icmp eq i32 %29, %32, !dbg !5945
  br i1 %33, label %34, label %35, !dbg !5946

34:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 %21, metadata !5947, metadata !DIExpression()) #24, !dbg !5950
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5953, !srcloc !5954
  br label %42, !dbg !5955

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !5956
  %37 = load i8*, i8** %36, align 4, !dbg !5956
  %38 = getelementptr inbounds i8, i8* %37, i32 %24, !dbg !5957
  store i8 %1, i8* %38, align 1, !dbg !5958
  %39 = trunc i32 %29 to i16, !dbg !5959
  store i16 %39, i16* %22, align 2, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %21, metadata !5947, metadata !DIExpression()) #24, !dbg !5961
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !5963, !srcloc !5954
  %40 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !5964
  %41 = load %struct.device*, %struct.device** %40, align 4, !dbg !5964
  tail call fastcc void @uart_irq_tx_enable(%struct.device* noundef %41) #26, !dbg !5965
  br label %42, !dbg !5966

42:                                               ; preds = %14, %35, %34
  %43 = phi i32 [ -28, %34 ], [ 0, %35 ], [ %17, %14 ], !dbg !5919
  ret i32 %43, !dbg !5967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32* @z_errno() unnamed_addr #1 !dbg !5968 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5972, !srcloc !5974
  %1 = tail call i32* @z_impl_z_errno() #25, !dbg !5975
  ret i32* %1, !dbg !5976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !5977 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5982, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.value(metadata i64 %0, metadata !5984, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 1000, metadata !5989, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i32 10000, metadata !5990, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8 1, metadata !5991, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8 0, metadata !5992, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8 1, metadata !5993, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8 0, metadata !5994, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8 1, metadata !5995, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i8 0, metadata !5996, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i64 0, metadata !5997, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.value(metadata i64 0, metadata !5997, metadata !DIExpression()), !dbg !6001
  %2 = mul i64 %0, 10, !dbg !6003
  ret i64 %2, !dbg !6009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !6010 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6020, metadata !DIExpression()), !dbg !6021
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6019, metadata !DIExpression()), !dbg !6021
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6022, !srcloc !6024
  %3 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) #25, !dbg !6025
  ret i32 %3, !dbg !6026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6029, metadata !DIExpression()), !dbg !6030
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6031, !srcloc !6033
  tail call fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) #26, !dbg !6034
  ret void, !dbg !6035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6038, metadata !DIExpression()), !dbg !6040
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6041
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6041
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6041
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6039, metadata !DIExpression()), !dbg !6040
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 7, !dbg !6042
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6042
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6044
  br i1 %7, label %9, label %8, !dbg !6045

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6046
  br label %9, !dbg !6048

9:                                                ; preds = %8, %1
  ret void, !dbg !6049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(%struct.device* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6052, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.value(metadata i8 %1, metadata !6053, metadata !DIExpression()), !dbg !6055
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6056
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6056
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6056
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6054, metadata !DIExpression()), !dbg !6055
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 1, !dbg !6057
  %7 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %6, align 4, !dbg !6057
  tail call void %7(%struct.device* noundef %0, i8 noundef zeroext %1) #25, !dbg !6058
  ret void, !dbg !6059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_read(%struct.tty_serial* noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6060 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6064, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i8* %1, metadata !6065, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %2, metadata !6066, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i8* %1, metadata !6067, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 0, metadata !6068, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 0, metadata !6069, metadata !DIExpression()), !dbg !6070
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6071
  %5 = load i32, i32* %4, align 4, !dbg !6071
  %6 = icmp eq i32 %5, 0, !dbg !6073
  br i1 %6, label %9, label %7, !dbg !6074

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !6068, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i8* %1, metadata !6067, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %2, metadata !6066, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %2, metadata !6066, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6070
  %8 = icmp eq i32 %2, 0, !dbg !6075
  br i1 %8, label %28, label %11, !dbg !6075

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @tty_read_unbuf(%struct.tty_serial* noundef nonnull %0, i8* noundef %1, i32 noundef %2) #26, !dbg !6076
  br label %28, !dbg !6078

11:                                               ; preds = %7, %23
  %12 = phi i32 [ %15, %23 ], [ %2, %7 ]
  %13 = phi i32 [ %26, %23 ], [ 0, %7 ]
  %14 = phi i8* [ %25, %23 ], [ %1, %7 ]
  %15 = add i32 %12, -1, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %13, metadata !6068, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i8* %14, metadata !6067, metadata !DIExpression()), !dbg !6070
  %16 = tail call fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) #26, !dbg !6080
  call void @llvm.dbg.value(metadata i32 %16, metadata !6069, metadata !DIExpression()), !dbg !6070
  %17 = icmp slt i32 %16, 0, !dbg !6082
  br i1 %17, label %18, label %23, !dbg !6084

18:                                               ; preds = %11
  %19 = icmp eq i32 %13, 0, !dbg !6085
  br i1 %19, label %20, label %28, !dbg !6088

20:                                               ; preds = %18
  %21 = sub nsw i32 0, %16, !dbg !6089
  %22 = tail call fastcc i32* @z_errno() #26, !dbg !6091
  store i32 %21, i32* %22, align 4, !dbg !6092
  br label %28, !dbg !6093

23:                                               ; preds = %11
  %24 = trunc i32 %16 to i8, !dbg !6094
  %25 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6095
  call void @llvm.dbg.value(metadata i8* %25, metadata !6067, metadata !DIExpression()), !dbg !6070
  store i8 %24, i8* %14, align 1, !dbg !6096
  %26 = add nuw i32 %13, 1, !dbg !6097
  call void @llvm.dbg.value(metadata i32 %26, metadata !6068, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %15, metadata !6066, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %15, metadata !6066, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6070
  %27 = icmp eq i32 %15, 0, !dbg !6075
  br i1 %27, label %28, label %11, !dbg !6075, !llvm.loop !6098

28:                                               ; preds = %23, %7, %18, %20, %9
  %29 = phi i32 [ %10, %9 ], [ %16, %20 ], [ %13, %18 ], [ 0, %7 ], [ %2, %23 ], !dbg !6070
  ret i32 %29, !dbg !6100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_read_unbuf(%struct.tty_serial* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #1 !dbg !6101 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6103, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %1, metadata !6104, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %2, metadata !6105, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %1, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 0, metadata !6107, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 0, metadata !6108, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 undef, metadata !6109, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 0, metadata !6107, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %1, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %2, metadata !6105, metadata !DIExpression()), !dbg !6112
  %5 = icmp eq i32 %2, 0, !dbg !6113
  br i1 %5, label %48, label %6, !dbg !6113

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6114
  %8 = load i32, i32* %7, align 4, !dbg !6114
  call void @llvm.dbg.value(metadata i32 %8, metadata !6109, metadata !DIExpression()), !dbg !6112
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0
  br label %10, !dbg !6113

10:                                               ; preds = %6, %46
  %11 = phi i32 [ %8, %6 ], [ %39, %46 ]
  %12 = phi i32 [ 0, %6 ], [ %31, %46 ]
  %13 = phi i8* [ %1, %6 ], [ %32, %46 ]
  %14 = phi i32 [ %2, %6 ], [ %33, %46 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6109, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %12, metadata !6107, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %13, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %14, metadata !6105, metadata !DIExpression()), !dbg !6112
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6115
  %15 = load %struct.device*, %struct.device** %9, align 4, !dbg !6116
  call void @llvm.dbg.value(metadata i8* %4, metadata !6110, metadata !DIExpression(DW_OP_deref)), !dbg !6117
  %16 = call fastcc i32 @uart_poll_in(%struct.device* noundef %15, i8* noundef nonnull %4) #26, !dbg !6118
  call void @llvm.dbg.value(metadata i32 %16, metadata !6108, metadata !DIExpression()), !dbg !6112
  %17 = icmp slt i32 %16, -1, !dbg !6119
  br i1 %17, label %18, label %22, !dbg !6121

18:                                               ; preds = %10
  %19 = icmp eq i32 %12, 0, !dbg !6122
  br i1 %19, label %20, label %44, !dbg !6125

20:                                               ; preds = %18
  %21 = call fastcc i32* @z_errno() #26, !dbg !6126
  store i32 %16, i32* %21, align 4, !dbg !6128
  call void @llvm.dbg.value(metadata i32 %39, metadata !6109, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 undef, metadata !6107, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %32, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %33, metadata !6105, metadata !DIExpression()), !dbg !6112
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6129
  br label %48

22:                                               ; preds = %10
  %23 = icmp eq i32 %16, 0, !dbg !6130
  br i1 %23, label %24, label %30, !dbg !6132

24:                                               ; preds = %22
  %25 = load i8, i8* %4, align 1, !dbg !6133
  call void @llvm.dbg.value(metadata i8 %25, metadata !6110, metadata !DIExpression()), !dbg !6117
  %26 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6135
  call void @llvm.dbg.value(metadata i8* %26, metadata !6106, metadata !DIExpression()), !dbg !6112
  store i8 %25, i8* %13, align 1, !dbg !6136
  %27 = add i32 %12, 1, !dbg !6137
  call void @llvm.dbg.value(metadata i32 %27, metadata !6107, metadata !DIExpression()), !dbg !6112
  %28 = add i32 %14, -1, !dbg !6138
  call void @llvm.dbg.value(metadata i32 %28, metadata !6105, metadata !DIExpression()), !dbg !6112
  %29 = icmp eq i32 %28, 0, !dbg !6139
  br i1 %29, label %44, label %30, !dbg !6141

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %27, %24 ], [ %12, %22 ]
  %32 = phi i8* [ %26, %24 ], [ %13, %22 ]
  %33 = phi i32 [ %28, %24 ], [ %14, %22 ]
  %34 = icmp eq i32 %11, -1, !dbg !6142
  br i1 %34, label %38, label %35, !dbg !6143

35:                                               ; preds = %30
  %36 = add i32 %11, -1, !dbg !6144
  call void @llvm.dbg.value(metadata i32 %36, metadata !6109, metadata !DIExpression()), !dbg !6112
  %37 = icmp eq i32 %11, 0, !dbg !6145
  br i1 %37, label %44, label %38, !dbg !6146

38:                                               ; preds = %35, %30
  %39 = phi i32 [ %36, %35 ], [ -1, %30 ], !dbg !6112
  call void @llvm.dbg.value(metadata i32 %39, metadata !6109, metadata !DIExpression()), !dbg !6112
  %40 = icmp eq i32 %16, -1, !dbg !6147
  br i1 %40, label %41, label %46, !dbg !6149

41:                                               ; preds = %38
  %42 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1) #26, !dbg !6150
  %43 = insertvalue [1 x i64] poison, i64 %42, 0, !dbg !6152
  call fastcc void @k_sleep([1 x i64] %43) #26, !dbg !6152
  br label %46, !dbg !6153

44:                                               ; preds = %35, %24, %18
  %45 = phi i32 [ %12, %18 ], [ %31, %35 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata i32 %39, metadata !6109, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 undef, metadata !6107, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %32, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %33, metadata !6105, metadata !DIExpression()), !dbg !6112
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6129
  br label %48

46:                                               ; preds = %38, %41
  call void @llvm.dbg.value(metadata i32 %39, metadata !6109, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %31, metadata !6107, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i8* %32, metadata !6106, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata i32 %33, metadata !6105, metadata !DIExpression()), !dbg !6112
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #24, !dbg !6129
  %47 = icmp eq i32 %33, 0, !dbg !6113
  br i1 %47, label %48, label %10, !dbg !6113

48:                                               ; preds = %46, %3, %44, %20
  %49 = phi i32 [ -1, %20 ], [ %45, %44 ], [ 0, %3 ], [ %31, %46 ], !dbg !6112
  ret i32 %49, !dbg !6154
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @tty_getchar(%struct.tty_serial* noundef %0) unnamed_addr #1 !dbg !6155 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6159, metadata !DIExpression()), !dbg !6163
  %2 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6164
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6165
  %4 = load i32, i32* %3, align 4, !dbg !6165
  %5 = icmp eq i32 %4, -1, !dbg !6165
  br i1 %5, label %11, label %6, !dbg !6165

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0, !dbg !6165
  %8 = select i1 %7, i32 %4, i32 0, !dbg !6165
  %9 = zext i32 %8 to i64, !dbg !6165
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %9) #26, !dbg !6165
  br label %11, !dbg !6165

11:                                               ; preds = %1, %6
  %12 = phi i64 [ %10, %6 ], [ -1, %1 ], !dbg !6165
  %13 = insertvalue [1 x i64] poison, i64 %12, 0, !dbg !6166
  %14 = tail call fastcc i32 @k_sem_take(%struct.k_sem* noundef nonnull %2, [1 x i64] %13) #26, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %14, metadata !6162, metadata !DIExpression()), !dbg !6163
  %15 = icmp slt i32 %14, 0, !dbg !6167
  br i1 %15, label %33, label %16, !dbg !6169

16:                                               ; preds = %11
  %17 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !6170, !srcloc !5933
  %18 = extractvalue { i32, i32 } %17, 0, !dbg !6170
  call void @llvm.dbg.value(metadata i32 %18, metadata !5930, metadata !DIExpression()) #24, !dbg !6172
  call void @llvm.dbg.value(metadata i32 undef, metadata !5931, metadata !DIExpression()) #24, !dbg !6172
  call void @llvm.dbg.value(metadata i32 %18, metadata !6160, metadata !DIExpression()), !dbg !6163
  %19 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6173
  %20 = load i8*, i8** %19, align 4, !dbg !6173
  %21 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6174
  %22 = load i16, i16* %21, align 4, !dbg !6175
  %23 = add i16 %22, 1, !dbg !6175
  store i16 %23, i16* %21, align 4, !dbg !6175
  %24 = zext i16 %22 to i32, !dbg !6176
  %25 = getelementptr inbounds i8, i8* %20, i32 %24, !dbg !6176
  %26 = load i8, i8* %25, align 1, !dbg !6176
  call void @llvm.dbg.value(metadata i8 %26, metadata !6161, metadata !DIExpression()), !dbg !6163
  %27 = zext i16 %23 to i32, !dbg !6177
  %28 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6179
  %29 = load i32, i32* %28, align 4, !dbg !6179
  %30 = icmp ugt i32 %29, %27, !dbg !6180
  %31 = select i1 %30, i16 %23, i16 0, !dbg !6181
  store i16 %31, i16* %21, align 4, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %18, metadata !5947, metadata !DIExpression()) #24, !dbg !6182
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !6184, !srcloc !5954
  %32 = zext i8 %26 to i32, !dbg !6185
  br label %33, !dbg !6186

33:                                               ; preds = %11, %16
  %34 = phi i32 [ %32, %16 ], [ %14, %11 ], !dbg !6163
  ret i32 %34, !dbg !6187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6188 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6190, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.value(metadata i8* %1, metadata !6191, metadata !DIExpression()), !dbg !6192
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6193, !srcloc !6195
  %3 = tail call fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !6196
  ret i32 %3, !dbg !6197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !6198 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !6202, metadata !DIExpression()), !dbg !6203
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6204, !srcloc !6206
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !6207
  ret void, !dbg !6208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_poll_in(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6211, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.value(metadata i8* %1, metadata !6212, metadata !DIExpression()), !dbg !6214
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6215
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6215
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6215
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6213, metadata !DIExpression()), !dbg !6214
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 0, !dbg !6216
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !6216
  %8 = icmp eq i32 (%struct.device*, i8*)* %7, null, !dbg !6218
  br i1 %8, label %11, label %9, !dbg !6219

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1) #25, !dbg !6220
  br label %11, !dbg !6221

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6214
  ret i32 %12, !dbg !6222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_init(%struct.tty_serial* noundef %0, %struct.device* noundef %1) local_unnamed_addr #1 !dbg !6223 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6227, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !6228, metadata !DIExpression()), !dbg !6229
  %3 = icmp eq %struct.device* %1, null, !dbg !6230
  br i1 %3, label %17, label %4, !dbg !6232

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6233
  store %struct.device* %1, %struct.device** %5, align 4, !dbg !6234
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6235
  store i8* null, i8** %6, align 4, !dbg !6236
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6237
  store i32 0, i32* %7, align 4, !dbg !6238
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6239
  store i8* null, i8** %8, align 4, !dbg !6240
  %9 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6241
  store i32 0, i32* %9, align 4, !dbg !6242
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 11, !dbg !6243
  store i16 0, i16* %10, align 2, !dbg !6244
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 10, !dbg !6245
  store i16 0, i16* %11, align 4, !dbg !6246
  %12 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6247
  store i16 0, i16* %12, align 2, !dbg !6248
  %13 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6249
  store i16 0, i16* %13, align 4, !dbg !6250
  %14 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 6, !dbg !6251
  store i32 -1, i32* %14, align 4, !dbg !6252
  %15 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 12, !dbg !6253
  store i32 -1, i32* %15, align 4, !dbg !6254
  %16 = bitcast %struct.tty_serial* %0 to i8*, !dbg !6255
  tail call fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef nonnull %1, i8* noundef %16) #26, !dbg !6256
  br label %17, !dbg !6257

17:                                               ; preds = %2, %4
  %18 = phi i32 [ 0, %4 ], [ -19, %2 ], !dbg !6229
  ret i32 %18, !dbg !6258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6261, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @tty_uart_isr, metadata !6262, metadata !DIExpression()), !dbg !6265
  call void @llvm.dbg.value(metadata i8* %1, metadata !6263, metadata !DIExpression()), !dbg !6265
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6266
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6266
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6266
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6264, metadata !DIExpression()), !dbg !6265
  %6 = icmp eq %struct.uart_driver_api* %5, null, !dbg !6267
  br i1 %6, label %12, label %7, !dbg !6269

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 18, !dbg !6270
  %9 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %8, align 4, !dbg !6270
  %10 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %9, null, !dbg !6271
  br i1 %10, label %12, label %11, !dbg !6272

11:                                               ; preds = %7
  tail call void %9(%struct.device* noundef nonnull %0, void (%struct.device*, i8*)* noundef nonnull @tty_uart_isr, i8* noundef %1) #25, !dbg !6273
  br label %12, !dbg !6275

12:                                               ; preds = %11, %7, %2
  ret void, !dbg !6276
}

; Function Attrs: noinline nounwind optsize
define internal void @tty_uart_isr(%struct.device* noundef %0, i8* noundef %1) #1 !dbg !6277 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6279, metadata !DIExpression()), !dbg !6285
  call void @llvm.dbg.value(metadata i8* %1, metadata !6280, metadata !DIExpression()), !dbg !6285
  %4 = bitcast i8* %1 to %struct.tty_serial*, !dbg !6286
  call void @llvm.dbg.value(metadata %struct.tty_serial* %4, metadata !6281, metadata !DIExpression()), !dbg !6285
  tail call fastcc void @uart_irq_update(%struct.device* noundef %0) #26, !dbg !6287
  %5 = tail call fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) #26, !dbg !6288
  %6 = icmp eq i32 %5, 0, !dbg !6288
  br i1 %6, label %15, label %7, !dbg !6289

7:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6290
  call void @llvm.dbg.value(metadata i8* %3, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6291
  %8 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6292
  %9 = icmp eq i32 %8, 0, !dbg !6295
  br i1 %9, label %14, label %10, !dbg !6296

10:                                               ; preds = %7, %10
  %11 = load i8, i8* %3, align 1, !dbg !6297
  call void @llvm.dbg.value(metadata i8 %11, metadata !6282, metadata !DIExpression()), !dbg !6291
  call fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %4, i8 noundef zeroext %11) #26, !dbg !6298
  call void @llvm.dbg.value(metadata i8* %3, metadata !6282, metadata !DIExpression(DW_OP_deref)), !dbg !6291
  %12 = call fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef nonnull %3) #26, !dbg !6292
  %13 = icmp eq i32 %12, 0, !dbg !6295
  br i1 %13, label %14, label %10, !dbg !6296, !llvm.loop !6299

14:                                               ; preds = %10, %7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !6302
  br label %15, !dbg !6303

15:                                               ; preds = %14, %2
  %16 = call fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) #26, !dbg !6304
  %17 = icmp eq i32 %16, 0, !dbg !6304
  br i1 %17, label %44, label %18, !dbg !6306

18:                                               ; preds = %15
  %19 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !6307
  %20 = bitcast i8* %19 to i16*, !dbg !6307
  %21 = load i16, i16* %20, align 4, !dbg !6307
  %22 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !6310
  %23 = bitcast i8* %22 to i16*, !dbg !6310
  %24 = load i16, i16* %23, align 2, !dbg !6310
  %25 = icmp eq i16 %21, %24, !dbg !6311
  br i1 %25, label %26, label %27, !dbg !6312

26:                                               ; preds = %18
  call fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6313
  br label %44, !dbg !6315

27:                                               ; preds = %18
  %28 = zext i16 %21 to i32, !dbg !6316
  %29 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !6317
  %30 = bitcast i8* %29 to i8**, !dbg !6317
  %31 = load i8*, i8** %30, align 4, !dbg !6317
  %32 = add i16 %21, 1, !dbg !6319
  store i16 %32, i16* %20, align 4, !dbg !6319
  %33 = getelementptr inbounds i8, i8* %31, i32 %28, !dbg !6320
  call fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %33) #26, !dbg !6321
  %34 = load i16, i16* %20, align 4, !dbg !6322
  %35 = zext i16 %34 to i32, !dbg !6324
  %36 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !6325
  %37 = bitcast i8* %36 to i32*, !dbg !6325
  %38 = load i32, i32* %37, align 4, !dbg !6325
  %39 = icmp ugt i32 %38, %35, !dbg !6326
  br i1 %39, label %41, label %40, !dbg !6327

40:                                               ; preds = %27
  store i16 0, i16* %20, align 4, !dbg !6328
  br label %41, !dbg !6330

41:                                               ; preds = %40, %27
  %42 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !6331
  %43 = bitcast i8* %42 to %struct.k_sem*, !dbg !6331
  call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %43) #26, !dbg !6332
  br label %44

44:                                               ; preds = %26, %41, %15
  ret void, !dbg !6333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6334 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6336, metadata !DIExpression()), !dbg !6337
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6338, !srcloc !6340
  tail call fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) #26, !dbg !6341
  ret void, !dbg !6342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6345, metadata !DIExpression()), !dbg !6347
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6348
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6348
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6348
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6346, metadata !DIExpression()), !dbg !6347
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 13, !dbg !6349
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6349
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6351
  br i1 %7, label %10, label %8, !dbg !6352

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6353
  br label %10, !dbg !6354

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6347
  ret i32 %11, !dbg !6355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6356 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6358, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i8* %1, metadata !6359, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata i32 1, metadata !6360, metadata !DIExpression()), !dbg !6362
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6363
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6363
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6363
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6361, metadata !DIExpression()), !dbg !6362
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 6, !dbg !6364
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6364
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6366
  br i1 %8, label %11, label %9, !dbg !6367

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6368
  br label %11, !dbg !6369

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -88, %2 ], !dbg !6362
  ret i32 %12, !dbg !6370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @tty_irq_input_hook(%struct.tty_serial* noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !6371 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6373, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.value(metadata i8 %1, metadata !6374, metadata !DIExpression()), !dbg !6376
  %3 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 5, !dbg !6377
  %4 = load i16, i16* %3, align 2, !dbg !6377
  %5 = zext i16 %4 to i32, !dbg !6378
  %6 = add nuw nsw i32 %5, 1, !dbg !6379
  call void @llvm.dbg.value(metadata i32 %6, metadata !6375, metadata !DIExpression()), !dbg !6376
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6380
  %8 = load i32, i32* %7, align 4, !dbg !6380
  %9 = icmp ult i32 %6, %8, !dbg !6382
  %10 = select i1 %9, i32 %6, i32 0, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %10, metadata !6375, metadata !DIExpression()), !dbg !6376
  %11 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 4, !dbg !6384
  %12 = load i16, i16* %11, align 4, !dbg !6384
  %13 = zext i16 %12 to i32, !dbg !6386
  %14 = icmp eq i32 %10, %13, !dbg !6387
  br i1 %14, label %15, label %17, !dbg !6388

15:                                               ; preds = %2
  %16 = tail call fastcc i32 @tty_putchar(%struct.tty_serial* noundef nonnull %0, i8 noundef zeroext 126) #26, !dbg !6389
  br label %23, !dbg !6391

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6392
  %19 = load i8*, i8** %18, align 4, !dbg !6392
  %20 = getelementptr inbounds i8, i8* %19, i32 %5, !dbg !6393
  store i8 %1, i8* %20, align 1, !dbg !6394
  %21 = trunc i32 %10 to i16, !dbg !6395
  store i16 %21, i16* %3, align 2, !dbg !6396
  %22 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6397
  tail call fastcc void @k_sem_give(%struct.k_sem* noundef nonnull %22) #26, !dbg !6398
  br label %23, !dbg !6399

23:                                               ; preds = %17, %15
  ret void, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_tx_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6403, metadata !DIExpression()), !dbg !6405
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6406
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6406
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6406
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6404, metadata !DIExpression()), !dbg !6405
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 9, !dbg !6407
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6407
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6409
  br i1 %7, label %10, label %8, !dbg !6410

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6411
  br label %10, !dbg !6412

10:                                               ; preds = %1, %8
  %11 = phi i32 [ %9, %8 ], [ -88, %1 ], !dbg !6405
  ret i32 %11, !dbg !6413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6416, metadata !DIExpression()), !dbg !6417
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6418, !srcloc !6420
  tail call fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) #26, !dbg !6421
  ret void, !dbg !6422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_fill(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !6423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6425, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %1, metadata !6426, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 1, metadata !6427, metadata !DIExpression()), !dbg !6429
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6430
  %4 = bitcast i8** %3 to %struct.uart_driver_api**, !dbg !6430
  %5 = load %struct.uart_driver_api*, %struct.uart_driver_api** %4, align 4, !dbg !6430
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %5, metadata !6428, metadata !DIExpression()), !dbg !6429
  %6 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %5, i32 0, i32 5, !dbg !6431
  %7 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %6, align 4, !dbg !6431
  %8 = icmp eq i32 (%struct.device*, i8*, i32)* %7, null, !dbg !6433
  br i1 %8, label %11, label %9, !dbg !6434

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.device* noundef nonnull %0, i8* noundef %1, i32 noundef 1) #25, !dbg !6435
  br label %11, !dbg !6436

11:                                               ; preds = %2, %9
  ret void, !dbg !6437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_give(%struct.k_sem* noundef %0) unnamed_addr #1 !dbg !6438 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6442, metadata !DIExpression()), !dbg !6443
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6444, !srcloc !6446
  tail call void @z_impl_k_sem_give(%struct.k_sem* noundef %0) #25, !dbg !6447
  ret void, !dbg !6448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6449 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6451, metadata !DIExpression()), !dbg !6453
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6454
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6454
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6454
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6452, metadata !DIExpression()), !dbg !6453
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 8, !dbg !6455
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6455
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6457
  br i1 %7, label %9, label %8, !dbg !6458

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6459
  br label %9, !dbg !6461

9:                                                ; preds = %8, %1
  ret void, !dbg !6462
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_update(%struct.device* noundef %0) unnamed_addr #1 !dbg !6463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6465, metadata !DIExpression()), !dbg !6467
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6468
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6468
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6468
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6466, metadata !DIExpression()), !dbg !6467
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 17, !dbg !6469
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !6469
  %7 = icmp eq i32 (%struct.device*)* %6, null, !dbg !6471
  br i1 %7, label %10, label %8, !dbg !6472

8:                                                ; preds = %1
  %9 = tail call i32 %6(%struct.device* noundef nonnull %0) #25, !dbg !6473
  br label %10, !dbg !6474

10:                                               ; preds = %1, %8
  ret void, !dbg !6475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_rx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6476 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6480, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i8* %1, metadata !6481, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %2, metadata !6482, metadata !DIExpression()), !dbg !6483
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6484
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6484
  tail call fastcc void @uart_irq_rx_disable(%struct.device* noundef %5) #26, !dbg !6485
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 2, !dbg !6486
  store i8* %1, i8** %6, align 4, !dbg !6487
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 3, !dbg !6488
  store i32 %2, i32* %7, align 4, !dbg !6489
  %8 = icmp eq i32 %2, 0, !dbg !6490
  br i1 %8, label %12, label %9, !dbg !6492

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 1, !dbg !6493
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %10, i32 noundef 0) #26, !dbg !6495
  %11 = load %struct.device*, %struct.device** %4, align 4, !dbg !6496
  tail call fastcc void @uart_irq_rx_enable(%struct.device* noundef %11) #26, !dbg !6497
  br label %12, !dbg !6498

12:                                               ; preds = %9, %3
  ret i32 0, !dbg !6499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6500 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6502, metadata !DIExpression()), !dbg !6503
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6504, !srcloc !6506
  tail call fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) #26, !dbg !6507
  ret void, !dbg !6508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6509 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !6513, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 %1, metadata !6514, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.value(metadata i32 -1, metadata !6515, metadata !DIExpression()), !dbg !6516
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6517, !srcloc !6519
  %3 = tail call i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef -1) #25, !dbg !6520
  ret void, !dbg !6521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6524, metadata !DIExpression()), !dbg !6525
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6526, !srcloc !6528
  tail call fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) #26, !dbg !6529
  ret void, !dbg !6530
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6531 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6533, metadata !DIExpression()), !dbg !6535
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6536
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6536
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6536
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6534, metadata !DIExpression()), !dbg !6535
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 10, !dbg !6537
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6537
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6539
  br i1 %7, label %9, label %8, !dbg !6540

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6541
  br label %9, !dbg !6543

9:                                                ; preds = %8, %1
  ret void, !dbg !6544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable(%struct.device* noundef %0) unnamed_addr #1 !dbg !6545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6547, metadata !DIExpression()), !dbg !6549
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6550
  %3 = bitcast i8** %2 to %struct.uart_driver_api**, !dbg !6550
  %4 = load %struct.uart_driver_api*, %struct.uart_driver_api** %3, align 4, !dbg !6550
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %4, metadata !6548, metadata !DIExpression()), !dbg !6549
  %5 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %4, i32 0, i32 11, !dbg !6551
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !6551
  %7 = icmp eq void (%struct.device*)* %6, null, !dbg !6553
  br i1 %7, label %9, label %8, !dbg !6554

8:                                                ; preds = %1
  tail call void %6(%struct.device* noundef nonnull %0) #25, !dbg !6555
  br label %9, !dbg !6557

9:                                                ; preds = %8, %1
  ret void, !dbg !6558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tty_set_tx_buf(%struct.tty_serial* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6559 {
  call void @llvm.dbg.value(metadata %struct.tty_serial* %0, metadata !6561, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.value(metadata i8* %1, metadata !6562, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.value(metadata i32 %2, metadata !6563, metadata !DIExpression()), !dbg !6564
  %4 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 0, !dbg !6565
  %5 = load %struct.device*, %struct.device** %4, align 4, !dbg !6565
  tail call fastcc void @uart_irq_tx_disable(%struct.device* noundef %5) #26, !dbg !6566
  %6 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 8, !dbg !6567
  store i8* %1, i8** %6, align 4, !dbg !6568
  %7 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 9, !dbg !6569
  store i32 %2, i32* %7, align 4, !dbg !6570
  %8 = getelementptr inbounds %struct.tty_serial, %struct.tty_serial* %0, i32 0, i32 7, !dbg !6571
  %9 = add i32 %2, -1, !dbg !6572
  tail call fastcc void @k_sem_init(%struct.k_sem* noundef nonnull %8, i32 noundef %9) #26, !dbg !6573
  ret i32 0, !dbg !6574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_write(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6575 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6579, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i8* %1, metadata !6580, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.value(metadata i32 %2, metadata !6581, metadata !DIExpression()), !dbg !6582
  %4 = tail call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6583
  ret i32 %4, !dbg !6584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_read(i8* nocapture noundef readnone %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6589, metadata !DIExpression()), !dbg !6592
  call void @llvm.dbg.value(metadata i8* %1, metadata !6590, metadata !DIExpression()), !dbg !6592
  call void @llvm.dbg.value(metadata i32 %2, metadata !6591, metadata !DIExpression()), !dbg !6592
  %4 = tail call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef %1, i32 noundef %2) #25, !dbg !6593
  ret i32 %4, !dbg !6594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_putchar(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !6595 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !6597, metadata !DIExpression()), !dbg !6598
  store i8 %0, i8* %2, align 1
  call void @llvm.dbg.value(metadata i8* %2, metadata !6597, metadata !DIExpression(DW_OP_deref)), !dbg !6598
  %3 = call i32 @tty_write(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %2, i32 noundef 1) #25, !dbg !6599
  ret i32 %3, !dbg !6600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_getchar() local_unnamed_addr #1 !dbg !6601 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6607
  call void @llvm.dbg.value(metadata i8* %1, metadata !6605, metadata !DIExpression(DW_OP_deref)), !dbg !6608
  %2 = call i32 @tty_read(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef nonnull %1, i32 noundef 1) #25, !dbg !6609
  call void @llvm.dbg.value(metadata i32 %2, metadata !6606, metadata !DIExpression()), !dbg !6608
  %3 = icmp slt i32 %2, 0, !dbg !6610
  %4 = load i8, i8* %1, align 1, !dbg !6612
  %5 = zext i8 %4 to i32, !dbg !6612
  %6 = select i1 %3, i32 %2, i32 %5, !dbg !6612
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !6613
  ret i32 %6, !dbg !6613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @console_init() local_unnamed_addr #1 !dbg !6614 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6616, metadata !DIExpression()), !dbg !6621
  %1 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !6622
  br i1 %1, label %2, label %13, !dbg !6624

2:                                                ; preds = %0
  %3 = tail call i32 @tty_init(%struct.tty_serial* noundef nonnull @console_serial, %struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !6625
  call void @llvm.dbg.value(metadata i32 %3, metadata !6617, metadata !DIExpression()), !dbg !6621
  %4 = icmp eq i32 %3, 0, !dbg !6626
  br i1 %4, label %5, label %13, !dbg !6628

5:                                                ; preds = %2
  %6 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6629
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %6, metadata !6618, metadata !DIExpression()), !dbg !6630
  %7 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %6, i32 0, i32 18, !dbg !6631
  %8 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %7, align 4, !dbg !6631
  %9 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %8, null, !dbg !6633
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = tail call i32 @tty_set_tx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_txbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6634
  %12 = tail call i32 @tty_set_rx_buf(%struct.tty_serial* noundef nonnull @console_serial, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @console_rxbuf, i32 0, i32 0), i32 noundef 16) #25, !dbg !6635
  br label %13, !dbg !6636

13:                                               ; preds = %2, %0, %5, %10
  %14 = phi i32 [ 0, %10 ], [ -134, %5 ], [ -19, %0 ], [ %3, %2 ]
  ret i32 %14, !dbg !6637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !6638 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6643, metadata !DIExpression()), !dbg !6644
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6645, !srcloc !6647
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !6648
  ret i1 %1, !dbg !6649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !6650 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6652, metadata !DIExpression()), !dbg !6653
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !6654
  ret i1 %1, !dbg !6655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6705, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6706, metadata !DIExpression()), !dbg !6707
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6708
  ret void, !dbg !6709
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6710 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6727, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6728, metadata !DIExpression()), !dbg !6730
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6731
  %4 = load i32, i32* %3, align 4, !dbg !6731
  call void @llvm.dbg.value(metadata i32 %4, metadata !6729, metadata !DIExpression()), !dbg !6730
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6732
  ret void, !dbg !6733
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6734 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6738, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8* %0, metadata !6739, metadata !DIExpression()), !dbg !6741
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6742
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !6742
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6740, metadata !DIExpression()), !dbg !6743
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6743
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6744
  %5 = bitcast i8* %4 to i32*, !dbg !6744
  %6 = load i32, i32* %5, align 4, !dbg !6744
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6745
  store i32 %6, i32* %7, align 4, !dbg !6746
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6747
  unreachable, !dbg !6748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6752, metadata !DIExpression()), !dbg !6753
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6754
  ret void, !dbg !6755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6760, metadata !DIExpression()), !dbg !6761
  %2 = icmp sgt i32 %0, -1, !dbg !6762
  br i1 %2, label %3, label %8, !dbg !6764

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6765, !srcloc !6767
  %4 = and i32 %0, 31, !dbg !6768
  %5 = shl nuw i32 1, %4, !dbg !6769
  %6 = lshr i32 %0, 5, !dbg !6770
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6771
  store volatile i32 %5, i32* %7, align 4, !dbg !6772
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !6773, !srcloc !6774
  br label %8, !dbg !6775

8:                                                ; preds = %3, %1
  ret void, !dbg !6776
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6780
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6781
  ret void, !dbg !6782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6785, metadata !DIExpression()), !dbg !6786
  %2 = icmp sgt i32 %0, -1, !dbg !6787
  br i1 %2, label %3, label %8, !dbg !6789

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6790
  %5 = shl nuw i32 1, %4, !dbg !6792
  %6 = lshr i32 %0, 5, !dbg !6793
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6794
  store volatile i32 %5, i32* %7, align 4, !dbg !6795
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6796, !srcloc !6800
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6801, !srcloc !6804
  br label %8, !dbg !6805

8:                                                ; preds = %3, %1
  ret void, !dbg !6806
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !6807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6811, metadata !DIExpression()), !dbg !6812
  %2 = lshr i32 %0, 5, !dbg !6813
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6814
  %4 = load volatile i32, i32* %3, align 4, !dbg !6814
  %5 = and i32 %0, 31, !dbg !6815
  %6 = shl nuw i32 1, %5, !dbg !6815
  %7 = and i32 %4, %6, !dbg !6816
  ret i32 %7, !dbg !6817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !6818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6822, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata i32 %1, metadata !6823, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.value(metadata i32 %2, metadata !6824, metadata !DIExpression()), !dbg !6825
  %4 = add i32 %1, 1, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %4, metadata !6823, metadata !DIExpression()), !dbg !6825
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6829
  ret void, !dbg !6830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !6831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6835, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.value(metadata i32 %1, metadata !6836, metadata !DIExpression()), !dbg !6837
  %3 = trunc i32 %1 to i8, !dbg !6838
  %4 = shl i8 %3, 4, !dbg !6838
  %5 = and i32 %0, 15, !dbg !6840
  %6 = add nsw i32 %5, -4, !dbg !6840
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6840
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6840
  %9 = icmp slt i32 %0, 0, !dbg !6840
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6840
  store volatile i8 %4, i8* %10, align 1, !dbg !6838
  ret void, !dbg !6841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6842 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6844, metadata !DIExpression()), !dbg !6845
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6846
  ret void, !dbg !6847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6848 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6850
  tail call void @z_arm_int_exit() #25, !dbg !6851
  ret void, !dbg !6852
}

; Function Attrs: optsize
declare !dbg !6853 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6854 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6856 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6858
  tail call void @z_bss_zero() #25, !dbg !6859
  tail call void @z_data_copy() #25, !dbg !6860
  tail call void @z_arm_interrupt_init() #25, !dbg !6861
  tail call void @z_cstart() #28, !dbg !6862
  unreachable, !dbg !6862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6863 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6864
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !6865, !srcloc !6868
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !6869, !srcloc !6872
  ret void, !dbg !6873
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6877, metadata !DIExpression()), !dbg !6878
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6879
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6880
  store i32 %0, i32* %3, align 4, !dbg !6881
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6882
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6883
  store i32 %4, i32* %5, align 4, !dbg !6884
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6885
  %7 = or i32 %6, 268435456, !dbg !6885
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6885
  call void @llvm.dbg.value(metadata i32 0, metadata !6886, metadata !DIExpression()) #24, !dbg !6889
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !6891, !srcloc !6892
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6893
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6894
  %10 = load i32, i32* %9, align 4, !dbg !6894
  ret i32 %10, !dbg !6895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7006, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7007, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i8* %2, metadata !7008, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7009, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i8* %4, metadata !7010, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i8* %5, metadata !7011, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.value(metadata i8* %6, metadata !7012, metadata !DIExpression()), !dbg !7014
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7015
  call void @llvm.dbg.value(metadata i8* %8, metadata !7013, metadata !DIExpression()), !dbg !7014
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7016
  %10 = bitcast i8* %9 to i32*, !dbg !7016
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7017
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7018
  %12 = bitcast i8* %8 to i32*, !dbg !7019
  store i32 %11, i32* %12, align 4, !dbg !7020
  %13 = ptrtoint i8* %4 to i32, !dbg !7021
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7022
  %15 = bitcast i8* %14 to i32*, !dbg !7022
  store i32 %13, i32* %15, align 4, !dbg !7023
  %16 = ptrtoint i8* %5 to i32, !dbg !7024
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7025
  %18 = bitcast i8* %17 to i32*, !dbg !7025
  store i32 %16, i32* %18, align 4, !dbg !7026
  %19 = ptrtoint i8* %6 to i32, !dbg !7027
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7028
  %21 = bitcast i8* %20 to i32*, !dbg !7028
  store i32 %19, i32* %21, align 4, !dbg !7029
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7030
  %23 = bitcast i8* %22 to i32*, !dbg !7030
  store i32 16777216, i32* %23, align 4, !dbg !7031
  %24 = ptrtoint i8* %8 to i32, !dbg !7032
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7033
  store i32 %24, i32* %25, align 8, !dbg !7034
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !7035
  store i32 0, i32* %26, align 4, !dbg !7036
  ret void, !dbg !7037
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !7038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7043, metadata !DIExpression()), !dbg !7049
  call void @llvm.dbg.value(metadata i32 %1, metadata !7044, metadata !DIExpression()), !dbg !7049
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7050
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !7045, metadata !DIExpression()), !dbg !7049
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !7051
  br i1 %4, label %19, label %5, !dbg !7053

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !7048, metadata !DIExpression()), !dbg !7049
  %6 = icmp eq i32 %0, -22, !dbg !7054
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !7054
  %8 = load i32, i32* %7, align 4, !dbg !7054
  br i1 %6, label %16, label %9, !dbg !7056

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !7054
  %11 = icmp ule i32 %10, %0, !dbg !7054
  %12 = icmp ugt i32 %8, %0, !dbg !7054
  %13 = and i1 %12, %11, !dbg !7054
  %14 = icmp ugt i32 %8, %1, !dbg !7054
  %15 = and i1 %14, %13, !dbg !7054
  br i1 %15, label %18, label %19, !dbg !7054

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !7054
  br i1 %17, label %18, label %19, !dbg !7056

18:                                               ; preds = %9, %16
  br label %19, !dbg !7057

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !7049
  ret i32 %20, !dbg !7059
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7064, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.value(metadata i8* %1, metadata !7065, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7066, metadata !DIExpression()), !dbg !7067
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7068
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !7069
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7070, !srcloc !7071
  unreachable, !dbg !7072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7073 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7091, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 %1, metadata !7092, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 %2, metadata !7093, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7094, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 0, metadata !7095, metadata !DIExpression()), !dbg !7101
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7102
  %9 = and i32 %8, 511, !dbg !7103
  call void @llvm.dbg.value(metadata i32 %9, metadata !7096, metadata !DIExpression()), !dbg !7101
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7104
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7104
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !7105
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7105
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7100, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 0, metadata !7107, metadata !DIExpression()) #24, !dbg !7110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7112, !srcloc !7113
  call void @llvm.dbg.value(metadata i8* %6, metadata !7098, metadata !DIExpression(DW_OP_deref)), !dbg !7101
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7114
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !7099, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i8* %5, metadata !7097, metadata !DIExpression(DW_OP_deref)), !dbg !7101
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !7115
  call void @llvm.dbg.value(metadata i32 %12, metadata !7095, metadata !DIExpression()), !dbg !7101
  %13 = load i8, i8* %5, align 1, !dbg !7116, !range !7118
  call void @llvm.dbg.value(metadata i8 %13, metadata !7097, metadata !DIExpression()), !dbg !7101
  %14 = icmp eq i8 %13, 0, !dbg !7116
  br i1 %14, label %15, label %32, !dbg !7119

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !7120
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #25, !dbg !7121
  %18 = load i8, i8* %6, align 1, !dbg !7122, !range !7118
  call void @llvm.dbg.value(metadata i8 %18, metadata !7098, metadata !DIExpression()), !dbg !7101
  %19 = icmp eq i8 %18, 0, !dbg !7122
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7124
  %21 = load i32, i32* %20, align 4, !dbg !7124
  br i1 %19, label %27, label %22, !dbg !7125

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !7126
  %24 = icmp eq i32 %23, 0, !dbg !7129
  br i1 %24, label %25, label %31, !dbg !7130

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !7131
  br label %29, !dbg !7133

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !7134
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !7124
  br label %31, !dbg !7136

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #25, !dbg !7136
  br label %32, !dbg !7137

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #24, !dbg !7137
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7137
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7137
  ret void, !dbg !7137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !7138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7143, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 %1, metadata !7144, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 %2, metadata !7145, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i8* %3, metadata !7146, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i8 0, metadata !7147, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7148, metadata !DIExpression()), !dbg !7149
  store i8 0, i8* %3, align 1, !dbg !7150
  %5 = icmp ult i32 %2, -16777216, !dbg !7151
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !7153
  br i1 %8, label %16, label %9, !dbg !7153

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !7154
  %11 = icmp eq i32 %10, 0, !dbg !7154
  br i1 %11, label %12, label %13, !dbg !7156

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !7148, metadata !DIExpression()), !dbg !7149
  store i8 1, i8* %3, align 1, !dbg !7159
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !7149
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !7148, metadata !DIExpression()), !dbg !7149
  br label %16, !dbg !7162

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !7149
  ret %struct.__esf* %17, !dbg !7163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7164 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7168, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 %1, metadata !7169, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i8* %2, metadata !7170, metadata !DIExpression()), !dbg !7172
  call void @llvm.dbg.value(metadata i32 0, metadata !7171, metadata !DIExpression()), !dbg !7172
  store i8 0, i8* %2, align 1, !dbg !7173
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !7174

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7175
  call void @llvm.dbg.value(metadata i32 %5, metadata !7171, metadata !DIExpression()), !dbg !7172
  br label %11, !dbg !7177

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7178
  call void @llvm.dbg.value(metadata i32 %7, metadata !7171, metadata !DIExpression()), !dbg !7172
  br label %11, !dbg !7179

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7180
  call void @llvm.dbg.value(metadata i32 0, metadata !7171, metadata !DIExpression()), !dbg !7172
  br label %11, !dbg !7181

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7182
  call void @llvm.dbg.value(metadata i32 0, metadata !7171, metadata !DIExpression()), !dbg !7172
  br label %11, !dbg !7183

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7184
  br label %11, !dbg !7185

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !7186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7187 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7191, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i8* %1, metadata !7192, metadata !DIExpression()), !dbg !7194
  call void @llvm.dbg.value(metadata i32 0, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i8 0, i8* %1, align 1, !dbg !7195
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7196
  %4 = and i32 %3, 2, !dbg !7198
  %5 = icmp eq i32 %4, 0, !dbg !7199
  br i1 %5, label %6, label %33, !dbg !7200

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7201
  %8 = icmp sgt i32 %7, -1, !dbg !7203
  br i1 %8, label %9, label %33, !dbg !7204

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7205
  %11 = and i32 %10, 1073741824, !dbg !7207
  %12 = icmp eq i32 %11, 0, !dbg !7208
  br i1 %12, label %33, label %13, !dbg !7209

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7210
  br i1 %14, label %15, label %18, !dbg !7213

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7214
  %17 = load i32, i32* %16, align 4, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %17, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %33, !dbg !7216

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7217
  %20 = and i32 %19, 255, !dbg !7219
  %21 = icmp eq i32 %20, 0, !dbg !7220
  br i1 %21, label %24, label %22, !dbg !7221

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7222
  call void @llvm.dbg.value(metadata i32 %23, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %33, !dbg !7224

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7225
  %26 = and i32 %25, 65280, !dbg !7227
  %27 = icmp eq i32 %26, 0, !dbg !7228
  br i1 %27, label %29, label %28, !dbg !7229

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7230
  call void @llvm.dbg.value(metadata i32 0, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %33, !dbg !7232

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7233
  %31 = icmp ult i32 %30, 65536, !dbg !7235
  br i1 %31, label %33, label %32, !dbg !7236

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !7237
  call void @llvm.dbg.value(metadata i32 0, metadata !7193, metadata !DIExpression()), !dbg !7194
  br label %33, !dbg !7239

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !7194
  call void @llvm.dbg.value(metadata i32 %34, metadata !7193, metadata !DIExpression()), !dbg !7194
  ret i32 %34, !dbg !7240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7241 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7243, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %1, metadata !7244, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %2, metadata !7245, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 0, metadata !7246, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 -22, metadata !7247, metadata !DIExpression()), !dbg !7256
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7257
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7259
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7261
  %7 = and i32 %6, 2, !dbg !7262
  %8 = icmp eq i32 %7, 0, !dbg !7263
  br i1 %8, label %19, label %9, !dbg !7264

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7265
  call void @llvm.dbg.value(metadata i32 %10, metadata !7248, metadata !DIExpression()), !dbg !7266
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7267
  %12 = and i32 %11, 128, !dbg !7269
  %13 = icmp eq i32 %12, 0, !dbg !7270
  br i1 %13, label %19, label %14, !dbg !7271

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !7247, metadata !DIExpression()), !dbg !7256
  %15 = icmp eq i32 %1, 0, !dbg !7272
  br i1 %15, label %19, label %16, !dbg !7275

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7276
  %18 = and i32 %17, -129, !dbg !7276
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7276
  br label %19, !dbg !7278

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !7256
  call void @llvm.dbg.value(metadata i32 %20, metadata !7247, metadata !DIExpression()), !dbg !7256
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7279
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7281
  %23 = and i32 %22, 16, !dbg !7282
  %24 = icmp eq i32 %23, 0, !dbg !7282
  br i1 %24, label %25, label %29, !dbg !7283

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7284
  %27 = and i32 %26, 2, !dbg !7285
  %28 = icmp eq i32 %27, 0, !dbg !7285
  br i1 %28, label %38, label %29, !dbg !7286

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7287
  %31 = and i32 %30, 2048, !dbg !7288
  %32 = icmp eq i32 %31, 0, !dbg !7288
  br i1 %32, label %38, label %33, !dbg !7289

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !7290
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #25, !dbg !7291
  call void @llvm.dbg.value(metadata i32 %35, metadata !7251, metadata !DIExpression()), !dbg !7292
  %36 = icmp eq i32 %35, 0, !dbg !7293
  br i1 %36, label %38, label %37, !dbg !7295

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !7296, metadata !DIExpression()) #24, !dbg !7299
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #24, !dbg !7302, !srcloc !7303
  call void @llvm.dbg.value(metadata i32 2, metadata !7246, metadata !DIExpression()), !dbg !7256
  br label %38, !dbg !7304

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !7256
  call void @llvm.dbg.value(metadata i32 %39, metadata !7246, metadata !DIExpression()), !dbg !7256
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7305
  %41 = or i32 %40, 255, !dbg !7305
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7305
  store i8 0, i8* %2, align 1, !dbg !7306
  ret i32 %39, !dbg !7307
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #16 !dbg !7308 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7312, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i32 %0, metadata !7313, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i8* %1, metadata !7314, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.value(metadata i32 0, metadata !7315, metadata !DIExpression()), !dbg !7319
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7320
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7322
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7324
  %6 = and i32 %5, 512, !dbg !7325
  %7 = icmp eq i32 %6, 0, !dbg !7325
  br i1 %7, label %18, label %8, !dbg !7326

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7327
  call void @llvm.dbg.value(metadata i32 %9, metadata !7316, metadata !DIExpression()), !dbg !7328
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7329
  %11 = and i32 %10, 32768, !dbg !7331
  %12 = icmp ne i32 %11, 0, !dbg !7332
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !7333
  br i1 %14, label %15, label %18, !dbg !7333

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7334
  %17 = and i32 %16, -32769, !dbg !7334
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7334
  br label %18, !dbg !7338

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7339
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7341
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7343
  %22 = or i32 %21, 65280, !dbg !7343
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7343
  store i8 0, i8* %1, align 1, !dbg !7344
  ret void, !dbg !7345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #16 !dbg !7346 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i32 0, metadata !7353, metadata !DIExpression()), !dbg !7354
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7355
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7357
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7359
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7361
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7363
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7365
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7367
  %8 = or i32 %7, -65536, !dbg !7367
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7367
  ret void, !dbg !7368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !7369 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7373, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i8* %0, metadata !7374, metadata !DIExpression()), !dbg !7375
  store i8 0, i8* %0, align 1, !dbg !7376
  ret void, !dbg !7377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7378 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7382, metadata !DIExpression()), !dbg !7385
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7386
  %3 = load i32, i32* %2, align 4, !dbg !7386
  %4 = inttoptr i32 %3 to i16*, !dbg !7387
  call void @llvm.dbg.value(metadata i16* %4, metadata !7383, metadata !DIExpression()), !dbg !7385
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7388
  %6 = or i32 %5, 256, !dbg !7388
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7388
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7389, !srcloc !7392
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7393, !srcloc !7396
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7397
  %8 = load i16, i16* %7, align 2, !dbg !7398
  call void @llvm.dbg.value(metadata i16 %8, metadata !7384, metadata !DIExpression()), !dbg !7385
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7399
  %10 = and i32 %9, -257, !dbg !7399
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7399
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7400, !srcloc !7392
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7402, !srcloc !7396
  %11 = icmp eq i16 %8, -8446, !dbg !7404
  ret i1 %11, !dbg !7406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #16 !dbg !7407 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7408
  %2 = or i32 %1, 16, !dbg !7408
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #16 !dbg !7410 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7413, metadata !DIExpression()), !dbg !7414
  br label %1, !dbg !7415

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7413, metadata !DIExpression()), !dbg !7414
  tail call fastcc void @__NVIC_SetPriority.15(i32 noundef %2) #26, !dbg !7417
  %3 = add nuw nsw i32 %2, 1, !dbg !7420
  call void @llvm.dbg.value(metadata i32 %3, metadata !7413, metadata !DIExpression()), !dbg !7414
  %4 = icmp eq i32 %3, 45, !dbg !7421
  br i1 %4, label %5, label %1, !dbg !7415, !llvm.loop !7422

5:                                                ; preds = %1
  ret void, !dbg !7424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.15(i32 noundef %0) unnamed_addr #16 !dbg !7425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7427, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 1, metadata !7428, metadata !DIExpression()), !dbg !7429
  %2 = and i32 %0, 15, !dbg !7430
  %3 = add nsw i32 %2, -4, !dbg !7430
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7430
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7430
  %6 = icmp slt i32 %0, 0, !dbg !7430
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7430
  store volatile i8 16, i8* %7, align 1, !dbg !7431
  ret void, !dbg !7433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7540, metadata !DIExpression()), !dbg !7541
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7542
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7544
  br i1 %3, label %4, label %12, !dbg !7545

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !7546, !srcloc !7560
  call void @llvm.dbg.value(metadata i32 %5, metadata !7551, metadata !DIExpression()) #24, !dbg !7561
  %6 = icmp eq i32 %5, 0, !dbg !7562
  br i1 %6, label %12, label %7, !dbg !7563

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7564
  %9 = or i32 %8, 268435456, !dbg !7564
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7564
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7566
  %11 = and i32 %10, -32769, !dbg !7566
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7566
  br label %12, !dbg !7567

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7568
  ret void, !dbg !7569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7570 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7571
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !362 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !481, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i8 0, metadata !482, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.value(metadata i32 64, metadata !484, metadata !DIExpression()), !dbg !7573
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7574
  %3 = load i32, i32* %2, align 4, !dbg !7574
  %4 = add i32 %3, -64, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %4, metadata !483, metadata !DIExpression()), !dbg !7573
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7577
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7578
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7579
  call void @llvm.dbg.value(metadata i8 1, metadata !482, metadata !DIExpression()), !dbg !7573
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7580
  ret void, !dbg !7581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7582 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7583
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7584, !srcloc !7587
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7588, !srcloc !7591
  ret void, !dbg !7592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7593 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #24, !dbg !7594, !srcloc !7597
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7598
  ret void, !dbg !7599
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !7600 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7615, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i8 %1, metadata !7616, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %2, metadata !7617, metadata !DIExpression()), !dbg !7619
  call void @llvm.dbg.value(metadata i32 %3, metadata !7618, metadata !DIExpression()), !dbg !7619
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7620
  ret void, !dbg !7622
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7623 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7628, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i8 %1, metadata !7629, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 undef, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 undef, metadata !7631, metadata !DIExpression()), !dbg !7633
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7634
  call void @llvm.dbg.value(metadata i8 %3, metadata !7632, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7633
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7635
  call void @llvm.dbg.value(metadata i32 %4, metadata !7632, metadata !DIExpression()), !dbg !7633
  %5 = trunc i32 %4 to i8, !dbg !7636
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7637
  ret void, !dbg !7638
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !7639 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7643, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i8 %1, metadata !7644, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i8 %2, metadata !7645, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i1 %3, metadata !7646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7649
  %5 = zext i8 %2 to i32, !dbg !7650
  call void @llvm.dbg.value(metadata i32 %5, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 0, metadata !7647, metadata !DIExpression()), !dbg !7649
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 0, metadata !7647, metadata !DIExpression()), !dbg !7649
  %7 = icmp eq i8 %1, 0, !dbg !7651
  br i1 %7, label %29, label %8, !dbg !7654

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.value(metadata i32 %10, metadata !7647, metadata !DIExpression()), !dbg !7649
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7655
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7658
  %13 = load i32, i32* %12, align 4, !dbg !7658
  %14 = icmp eq i32 %13, 0, !dbg !7659
  br i1 %14, label %25, label %15, !dbg !7660

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7661

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7663
  %18 = icmp eq i32 %17, 0, !dbg !7663
  br i1 %18, label %29, label %19, !dbg !7664

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7665
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %21, metadata !7648, metadata !DIExpression()), !dbg !7649
  %22 = icmp eq i32 %21, -22, !dbg !7667
  br i1 %22, label %29, label %23, !dbg !7669

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %24, metadata !7648, metadata !DIExpression()), !dbg !7649
  br label %25, !dbg !7671

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7649
  call void @llvm.dbg.value(metadata i32 %26, metadata !7648, metadata !DIExpression()), !dbg !7649
  %27 = add nuw nsw i32 %10, 1, !dbg !7672
  call void @llvm.dbg.value(metadata i32 %27, metadata !7647, metadata !DIExpression()), !dbg !7649
  %28 = icmp eq i32 %27, %6, !dbg !7651
  br i1 %28, label %29, label %8, !dbg !7654, !llvm.loop !7673

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7649
  ret i32 %30, !dbg !7675
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7680, metadata !DIExpression()), !dbg !7682
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7683
  %3 = load i32, i32* %2, align 4, !dbg !7683
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7684, !range !3846
  %5 = icmp ult i32 %4, 2, !dbg !7684
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7685
  br i1 %7, label %8, label %15, !dbg !7685

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7686
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7687
  %11 = load i32, i32* %10, align 4, !dbg !7687
  %12 = and i32 %11, %9, !dbg !7688
  %13 = icmp eq i32 %12, 0, !dbg !7689
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7681, metadata !DIExpression()), !dbg !7682
  ret i32 %16, !dbg !7690
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7691 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7695, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7696, metadata !DIExpression()), !dbg !7698
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7699
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7699
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7697, metadata !DIExpression()), !dbg !7700
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7701
  %6 = load i32, i32* %5, align 4, !dbg !7701
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7702
  store i32 %6, i32* %7, align 4, !dbg !7703
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7704
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7705
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7706
  %11 = load i32, i32* %10, align 4, !dbg !7706
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7707
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7708
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #24, !dbg !7709
  ret i32 %12, !dbg !7710
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7711 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7718, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 undef, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %2, metadata !7721, metadata !DIExpression()), !dbg !7722
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7723
  %5 = load i32, i32* %4, align 4, !dbg !7723
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7724
  %7 = or i32 %6, %5, !dbg !7725
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7726
  store i32 %7, i32* %8, align 4, !dbg !7727
  ret void, !dbg !7728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7729 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7733, metadata !DIExpression()), !dbg !7735
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7734, metadata !DIExpression()), !dbg !7735
  %3 = zext i8 %0 to i32, !dbg !7736
  %4 = icmp ugt i8 %0, 7, !dbg !7738
  br i1 %4, label %6, label %5, !dbg !7739

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7740
  br label %6, !dbg !7741

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7735
  ret i32 %7, !dbg !7742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7747, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7748, metadata !DIExpression()), !dbg !7749
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7750
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7751
  %4 = load i32, i32* %3, align 4, !dbg !7751
  %5 = and i32 %4, -32, !dbg !7752
  %6 = or i32 %5, %0, !dbg !7753
  %7 = or i32 %6, 16, !dbg !7753
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7754
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7755
  %9 = load i32, i32* %8, align 4, !dbg !7755
  %10 = or i32 %9, 1, !dbg !7756
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7757
  ret void, !dbg !7758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #16 !dbg !7759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7762, metadata !DIExpression()), !dbg !7763
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7764
  ret void, !dbg !7765
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7770, metadata !DIExpression()), !dbg !7771
  %2 = icmp ult i32 %0, 33, !dbg !7772
  br i1 %2, label %11, label %3, !dbg !7774

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7775
  br i1 %4, label %11, label %5, !dbg !7777

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7778
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7779, !range !3846
  %8 = mul nsw i32 %7, -2, !dbg !7780
  %9 = add nsw i32 %8, 62, !dbg !7780
  %10 = and i32 %9, 62, !dbg !7781
  br label %11, !dbg !7782

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7771
  ret i32 %12, !dbg !7783
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !7784 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7788, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.value(metadata i8 %1, metadata !7789, metadata !DIExpression()), !dbg !7790
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7791
  ret void, !dbg !7793
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !7794 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7798, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8 %1, metadata !7799, metadata !DIExpression()), !dbg !7805
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7806
  call void @llvm.dbg.value(metadata i8 %3, metadata !7800, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7805
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7807
  call void @llvm.dbg.value(metadata i32 %4, metadata !7800, metadata !DIExpression()), !dbg !7805
  %5 = icmp ne i32 %4, -22, !dbg !7808
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7809
  call void @llvm.dbg.value(metadata i32 %4, metadata !7801, metadata !DIExpression()), !dbg !7810
  br i1 %7, label %8, label %12, !dbg !7809

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7801, metadata !DIExpression()), !dbg !7810
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7811
  %10 = add i32 %9, 1, !dbg !7814
  call void @llvm.dbg.value(metadata i32 %10, metadata !7801, metadata !DIExpression()), !dbg !7810
  %11 = icmp eq i32 %10, 8, !dbg !7815
  br i1 %11, label %12, label %8, !dbg !7816, !llvm.loop !7817

12:                                               ; preds = %8, %2
  ret void, !dbg !7819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #16 !dbg !7820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7823, metadata !DIExpression()), !dbg !7824
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7825
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7826
  ret void, !dbg !7827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7828 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7831
  %2 = icmp ugt i32 %1, 8, !dbg !7833
  br i1 %2, label %14, label %3, !dbg !7834

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7835
  call void @llvm.dbg.value(metadata i32 0, metadata !7830, metadata !DIExpression()), !dbg !7836
  %4 = icmp eq i32 %1, 0, !dbg !7837
  br i1 %4, label %12, label %5, !dbg !7840

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7840

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7830, metadata !DIExpression()), !dbg !7836
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7841
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7843
  %10 = add nuw i32 %8, 1, !dbg !7844
  call void @llvm.dbg.value(metadata i32 %10, metadata !7830, metadata !DIExpression()), !dbg !7836
  %11 = icmp eq i32 %10, %1, !dbg !7837
  br i1 %11, label %12, label %7, !dbg !7840, !llvm.loop !7845

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7847
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7848
  tail call void @arm_core_mpu_enable() #26, !dbg !7849
  br label %14, !dbg !7850

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7836
  ret i32 %15, !dbg !7851
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7852 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7859, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %1, metadata !7860, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %0, metadata !7861, metadata !DIExpression()), !dbg !7862
  %3 = load i8, i8* %1, align 1, !dbg !7863
  %4 = icmp eq i8 %3, 0, !dbg !7864
  br i1 %4, label %13, label %5, !dbg !7865

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7859, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i8* %8, metadata !7860, metadata !DIExpression()), !dbg !7862
  store i8 %6, i8* %7, align 1, !dbg !7866
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %9, metadata !7859, metadata !DIExpression()), !dbg !7862
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7869
  call void @llvm.dbg.value(metadata i8* %10, metadata !7860, metadata !DIExpression()), !dbg !7862
  %11 = load i8, i8* %10, align 1, !dbg !7863
  %12 = icmp eq i8 %11, 0, !dbg !7864
  br i1 %12, label %13, label %5, !dbg !7865, !llvm.loop !7870

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7872
  ret i8* %0, !dbg !7873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %1, metadata !7879, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %2, metadata !7880, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %0, metadata !7881, metadata !DIExpression()), !dbg !7882
  %4 = icmp eq i32 %2, 0, !dbg !7883
  br i1 %4, label %22, label %5, !dbg !7884

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %7, metadata !7880, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i8* %8, metadata !7879, metadata !DIExpression()), !dbg !7882
  %9 = load i8, i8* %8, align 1, !dbg !7885
  %10 = icmp eq i8 %9, 0, !dbg !7886
  br i1 %10, label %16, label %11, !dbg !7887

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7888
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7890
  call void @llvm.dbg.value(metadata i8* %12, metadata !7879, metadata !DIExpression()), !dbg !7882
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7891
  call void @llvm.dbg.value(metadata i8* %13, metadata !7878, metadata !DIExpression()), !dbg !7882
  %14 = add i32 %7, -1, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %14, metadata !7880, metadata !DIExpression()), !dbg !7882
  %15 = icmp eq i32 %14, 0, !dbg !7883
  br i1 %15, label %22, label %5, !dbg !7884, !llvm.loop !7893

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7878, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.value(metadata i32 %18, metadata !7880, metadata !DIExpression()), !dbg !7882
  store i8 0, i8* %17, align 1, !dbg !7895
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7897
  call void @llvm.dbg.value(metadata i8* %19, metadata !7878, metadata !DIExpression()), !dbg !7882
  %20 = add i32 %18, -1, !dbg !7898
  call void @llvm.dbg.value(metadata i32 %20, metadata !7880, metadata !DIExpression()), !dbg !7882
  %21 = icmp eq i32 %20, 0, !dbg !7899
  br i1 %21, label %22, label %16, !dbg !7900, !llvm.loop !7901

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7903
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7904 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7908, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %1, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 %1, metadata !7910, metadata !DIExpression()), !dbg !7911
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7912

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7908, metadata !DIExpression()), !dbg !7911
  %6 = load i8, i8* %5, align 1, !dbg !7913
  %7 = icmp eq i8 %6, %3, !dbg !7914
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7915
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7916
  call void @llvm.dbg.value(metadata i8* %10, metadata !7908, metadata !DIExpression()), !dbg !7911
  br i1 %9, label %11, label %4, !dbg !7915, !llvm.loop !7918

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7920
  ret i8* %12, !dbg !7921
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7922 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7924, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %1, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* null, metadata !7926, metadata !DIExpression()), !dbg !7927
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7928

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7927
  call void @llvm.dbg.value(metadata i8* %6, metadata !7926, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %5, metadata !7924, metadata !DIExpression()), !dbg !7927
  %7 = load i8, i8* %5, align 1, !dbg !7929
  %8 = icmp eq i8 %7, %3, !dbg !7932
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7933
  call void @llvm.dbg.value(metadata i8* %9, metadata !7926, metadata !DIExpression()), !dbg !7927
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7934
  call void @llvm.dbg.value(metadata i8* %10, metadata !7924, metadata !DIExpression()), !dbg !7927
  %11 = icmp eq i8 %7, 0, !dbg !7935
  br i1 %11, label %12, label %4, !dbg !7935, !llvm.loop !7936

12:                                               ; preds = %4
  ret i8* %9, !dbg !7938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7943, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i32 0, metadata !7944, metadata !DIExpression()), !dbg !7945
  %2 = load i8, i8* %0, align 1, !dbg !7946
  %3 = icmp eq i8 %2, 0, !dbg !7947
  br i1 %3, label %11, label %4, !dbg !7948

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7944, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.value(metadata i8* %6, metadata !7943, metadata !DIExpression()), !dbg !7945
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7949
  call void @llvm.dbg.value(metadata i8* %7, metadata !7943, metadata !DIExpression()), !dbg !7945
  %8 = add i32 %5, 1, !dbg !7951
  call void @llvm.dbg.value(metadata i32 %8, metadata !7944, metadata !DIExpression()), !dbg !7945
  %9 = load i8, i8* %7, align 1, !dbg !7946
  %10 = icmp eq i8 %9, 0, !dbg !7947
  br i1 %10, label %11, label %4, !dbg !7948, !llvm.loop !7952

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7945
  ret i32 %12, !dbg !7954
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7955 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7959, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i32 %1, metadata !7960, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i32 0, metadata !7961, metadata !DIExpression()), !dbg !7962
  %3 = load i8, i8* %0, align 1, !dbg !7963
  %4 = icmp ne i8 %3, 0, !dbg !7964
  %5 = icmp ne i32 %1, 0, !dbg !7965
  %6 = and i1 %4, %5, !dbg !7965
  br i1 %6, label %7, label %16, !dbg !7966

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7961, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i8* %9, metadata !7959, metadata !DIExpression()), !dbg !7962
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7967
  call void @llvm.dbg.value(metadata i8* %10, metadata !7959, metadata !DIExpression()), !dbg !7962
  %11 = add nuw i32 %8, 1, !dbg !7969
  call void @llvm.dbg.value(metadata i32 %11, metadata !7961, metadata !DIExpression()), !dbg !7962
  %12 = load i8, i8* %10, align 1, !dbg !7963
  %13 = icmp ne i8 %12, 0, !dbg !7964
  %14 = icmp ult i32 %11, %1, !dbg !7965
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7965
  br i1 %15, label %7, label %16, !dbg !7966, !llvm.loop !7970

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7962
  ret i32 %17, !dbg !7972
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7973 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7977, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %1, metadata !7978, metadata !DIExpression()), !dbg !7979
  %3 = load i8, i8* %0, align 1, !dbg !7980
  %4 = load i8, i8* %1, align 1, !dbg !7981
  %5 = icmp ne i8 %3, %4, !dbg !7982
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7983
  br i1 %7, label %18, label %8, !dbg !7983

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7978, metadata !DIExpression()), !dbg !7979
  call void @llvm.dbg.value(metadata i8* %10, metadata !7977, metadata !DIExpression()), !dbg !7979
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7984
  call void @llvm.dbg.value(metadata i8* %11, metadata !7977, metadata !DIExpression()), !dbg !7979
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7986
  call void @llvm.dbg.value(metadata i8* %12, metadata !7978, metadata !DIExpression()), !dbg !7979
  %13 = load i8, i8* %11, align 1, !dbg !7980
  %14 = load i8, i8* %12, align 1, !dbg !7981
  %15 = icmp ne i8 %13, %14, !dbg !7982
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7983
  br i1 %17, label %18, label %8, !dbg !7983, !llvm.loop !7987

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7980
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7981
  %21 = zext i8 %19 to i32, !dbg !7990
  %22 = zext i8 %20 to i32, !dbg !7991
  %23 = sub nsw i32 %21, %22, !dbg !7992
  ret i32 %23, !dbg !7993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7998, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %1, metadata !7999, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i32 %2, metadata !8000, metadata !DIExpression()), !dbg !8001
  %4 = icmp eq i32 %2, 0, !dbg !8002
  br i1 %4, label %23, label %5, !dbg !8002

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8000, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %7, metadata !7999, metadata !DIExpression()), !dbg !8001
  call void @llvm.dbg.value(metadata i8* %8, metadata !7998, metadata !DIExpression()), !dbg !8001
  %9 = load i8, i8* %8, align 1, !dbg !8003
  %10 = load i8, i8* %7, align 1, !dbg !8004
  %11 = icmp ne i8 %9, %10, !dbg !8005
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8006
  br i1 %13, label %19, label %14, !dbg !8006

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8007
  call void @llvm.dbg.value(metadata i8* %15, metadata !7998, metadata !DIExpression()), !dbg !8001
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8009
  call void @llvm.dbg.value(metadata i8* %16, metadata !7999, metadata !DIExpression()), !dbg !8001
  %17 = add i32 %6, -1, !dbg !8010
  call void @llvm.dbg.value(metadata i32 %17, metadata !8000, metadata !DIExpression()), !dbg !8001
  %18 = icmp eq i32 %17, 0, !dbg !8002
  br i1 %18, label %23, label %5, !dbg !8002, !llvm.loop !8011

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8014
  %21 = zext i8 %10 to i32, !dbg !8015
  %22 = sub nsw i32 %20, %21, !dbg !8016
  br label %23, !dbg !8017

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8017
  ret i32 %24, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8024, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %1, metadata !8025, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8** %2, metadata !8026, metadata !DIExpression()), !dbg !8029
  %4 = icmp eq i8* %0, null, !dbg !8030
  br i1 %4, label %5, label %7, !dbg !8030

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8031
  br label %7, !dbg !8030

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8030
  call void @llvm.dbg.value(metadata i8* %8, metadata !8027, metadata !DIExpression()), !dbg !8029
  %9 = load i8, i8* %8, align 1, !dbg !8032
  %10 = icmp eq i8 %9, 0, !dbg !8032
  br i1 %10, label %33, label %11, !dbg !8033

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8027, metadata !DIExpression()), !dbg !8029
  %14 = zext i8 %12 to i32, !dbg !8032
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8034
  %16 = icmp eq i8* %15, null, !dbg !8033
  br i1 %16, label %21, label %17, !dbg !8035

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8036
  call void @llvm.dbg.value(metadata i8* %18, metadata !8027, metadata !DIExpression()), !dbg !8029
  %19 = load i8, i8* %18, align 1, !dbg !8032
  %20 = icmp eq i8 %19, 0, !dbg !8032
  br i1 %20, label %33, label %11, !dbg !8033, !llvm.loop !8038

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8028, metadata !DIExpression()), !dbg !8029
  %24 = zext i8 %22 to i32, !dbg !8040
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8041
  %26 = icmp eq i8* %25, null, !dbg !8042
  br i1 %26, label %27, label %31, !dbg !8043

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8044
  call void @llvm.dbg.value(metadata i8* %28, metadata !8028, metadata !DIExpression()), !dbg !8029
  %29 = load i8, i8* %28, align 1, !dbg !8040
  %30 = icmp eq i8 %29, 0, !dbg !8040
  br i1 %30, label %33, label %21, !dbg !8046, !llvm.loop !8047

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8049
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8052
  br label %33, !dbg !8053

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8029
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8029
  store i8* %34, i8** %2, align 4, !dbg !8029
  ret i8* %35, !dbg !8054
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %1, metadata !8058, metadata !DIExpression()), !dbg !8059
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8060
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8061
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8062
  ret i8* %0, !dbg !8063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8064 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8066, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %1, metadata !8067, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %2, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8072
  call void @llvm.dbg.value(metadata i32 %4, metadata !8070, metadata !DIExpression()), !dbg !8071
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8073
  call void @llvm.dbg.value(metadata i8* %5, metadata !8066, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %1, metadata !8067, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %2, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %2, metadata !8068, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8071
  %6 = icmp eq i32 %2, 0, !dbg !8074
  br i1 %6, label %18, label %7, !dbg !8075

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8076
  call void @llvm.dbg.value(metadata i8* %9, metadata !8066, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i8* %10, metadata !8067, metadata !DIExpression()), !dbg !8071
  %12 = load i8, i8* %10, align 1, !dbg !8077
  %13 = icmp eq i8 %12, 0, !dbg !8078
  br i1 %13, label %18, label %14, !dbg !8079

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8080
  call void @llvm.dbg.value(metadata i8* %15, metadata !8067, metadata !DIExpression()), !dbg !8071
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8082
  call void @llvm.dbg.value(metadata i8* %16, metadata !8066, metadata !DIExpression()), !dbg !8071
  store i8 %12, i8* %9, align 1, !dbg !8083
  call void @llvm.dbg.value(metadata i32 %11, metadata !8068, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 %11, metadata !8068, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8071
  %17 = icmp eq i32 %11, 0, !dbg !8074
  br i1 %17, label %18, label %7, !dbg !8075, !llvm.loop !8084

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8071
  store i8 0, i8* %19, align 1, !dbg !8086
  ret i8* %0, !dbg !8087
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8092, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %1, metadata !8093, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %2, metadata !8094, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %0, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %1, metadata !8096, metadata !DIExpression()), !dbg !8097
  %4 = icmp eq i32 %2, 0, !dbg !8098
  br i1 %4, label %31, label %5, !dbg !8100

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %0, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %2, metadata !8094, metadata !DIExpression()), !dbg !8097
  %6 = add i32 %2, -1, !dbg !8101
  call void @llvm.dbg.value(metadata i32 %6, metadata !8094, metadata !DIExpression()), !dbg !8097
  %7 = icmp eq i32 %6, 0, !dbg !8102
  br i1 %7, label %23, label %8, !dbg !8103

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8104
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8104
  br label %11, !dbg !8104

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %14, metadata !8095, metadata !DIExpression()), !dbg !8097
  %15 = load i8, i8* %14, align 1, !dbg !8105
  %16 = load i8, i8* %13, align 1, !dbg !8106
  %17 = icmp eq i8 %15, %16, !dbg !8107
  br i1 %17, label %18, label %23, !dbg !8104

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8108
  call void @llvm.dbg.value(metadata i8* %19, metadata !8095, metadata !DIExpression()), !dbg !8097
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8110
  call void @llvm.dbg.value(metadata i8* %20, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %12, metadata !8094, metadata !DIExpression()), !dbg !8097
  %21 = add i32 %12, -1, !dbg !8101
  call void @llvm.dbg.value(metadata i32 %21, metadata !8094, metadata !DIExpression()), !dbg !8097
  %22 = icmp eq i32 %21, 0, !dbg !8102
  br i1 %22, label %23, label %11, !dbg !8103, !llvm.loop !8111

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8097
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8097
  %26 = load i8, i8* %24, align 1, !dbg !8113
  %27 = zext i8 %26 to i32, !dbg !8113
  %28 = load i8, i8* %25, align 1, !dbg !8114
  %29 = zext i8 %28 to i32, !dbg !8114
  %30 = sub nsw i32 %27, %29, !dbg !8115
  br label %31, !dbg !8116

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8097
  ret i32 %32, !dbg !8117
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8118 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8122, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %1, metadata !8123, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %2, metadata !8124, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %0, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %1, metadata !8126, metadata !DIExpression()), !dbg !8127
  %4 = ptrtoint i8* %0 to i32, !dbg !8128
  %5 = ptrtoint i8* %1 to i32, !dbg !8128
  %6 = sub i32 %4, %5, !dbg !8128
  %7 = icmp ult i32 %6, %2, !dbg !8130
  br i1 %7, label %10, label %8, !dbg !8131

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %0, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %2, metadata !8124, metadata !DIExpression()), !dbg !8127
  %9 = icmp eq i32 %2, 0, !dbg !8132
  br i1 %9, label %26, label %17, !dbg !8134

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8124, metadata !DIExpression()), !dbg !8127
  %12 = add i32 %11, -1, !dbg !8135
  call void @llvm.dbg.value(metadata i32 %12, metadata !8124, metadata !DIExpression()), !dbg !8127
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8138
  %14 = load i8, i8* %13, align 1, !dbg !8138
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8139
  store i8 %14, i8* %15, align 1, !dbg !8140
  %16 = icmp eq i32 %12, 0, !dbg !8141
  br i1 %16, label %26, label %10, !dbg !8142, !llvm.loop !8143

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i8* %19, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %20, metadata !8124, metadata !DIExpression()), !dbg !8127
  %21 = load i8, i8* %18, align 1, !dbg !8145
  store i8 %21, i8* %19, align 1, !dbg !8147
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8148
  call void @llvm.dbg.value(metadata i8* %22, metadata !8125, metadata !DIExpression()), !dbg !8127
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8149
  call void @llvm.dbg.value(metadata i8* %23, metadata !8126, metadata !DIExpression()), !dbg !8127
  %24 = add i32 %20, -1, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %24, metadata !8124, metadata !DIExpression()), !dbg !8127
  %25 = icmp eq i32 %24, 0, !dbg !8132
  br i1 %25, label %26, label %17, !dbg !8134, !llvm.loop !8151

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8160, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8* %1, metadata !8161, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %2, metadata !8162, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8* %0, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8* %1, metadata !8164, metadata !DIExpression()), !dbg !8165
  %4 = icmp eq i32 %2, 0, !dbg !8166
  br i1 %4, label %14, label %5, !dbg !8167

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8164, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i8* %7, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %8, metadata !8162, metadata !DIExpression()), !dbg !8165
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8168
  call void @llvm.dbg.value(metadata i8* %9, metadata !8164, metadata !DIExpression()), !dbg !8165
  %10 = load i8, i8* %6, align 1, !dbg !8170
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8171
  call void @llvm.dbg.value(metadata i8* %11, metadata !8163, metadata !DIExpression()), !dbg !8165
  store i8 %10, i8* %7, align 1, !dbg !8172
  %12 = add i32 %8, -1, !dbg !8173
  call void @llvm.dbg.value(metadata i32 %12, metadata !8162, metadata !DIExpression()), !dbg !8165
  %13 = icmp eq i32 %12, 0, !dbg !8166
  br i1 %13, label %14, label %5, !dbg !8167, !llvm.loop !8174

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8176
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !8177 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8181, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %1, metadata !8182, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %2, metadata !8183, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i8* %0, metadata !8184, metadata !DIExpression()), !dbg !8186
  %4 = trunc i32 %1 to i8, !dbg !8187
  call void @llvm.dbg.value(metadata i8 %4, metadata !8185, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i32 %2, metadata !8183, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i8* %0, metadata !8184, metadata !DIExpression()), !dbg !8186
  %5 = icmp eq i32 %2, 0, !dbg !8188
  br i1 %5, label %12, label %6, !dbg !8189

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8183, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata i8* %8, metadata !8184, metadata !DIExpression()), !dbg !8186
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8190
  call void @llvm.dbg.value(metadata i8* %9, metadata !8184, metadata !DIExpression()), !dbg !8186
  store i8 %4, i8* %8, align 1, !dbg !8192
  %10 = add i32 %7, -1, !dbg !8193
  call void @llvm.dbg.value(metadata i32 %10, metadata !8183, metadata !DIExpression()), !dbg !8186
  %11 = icmp eq i32 %10, 0, !dbg !8188
  br i1 %11, label %12, label %6, !dbg !8189, !llvm.loop !8194

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8197 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8201, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32 %1, metadata !8202, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32 %2, metadata !8203, metadata !DIExpression()), !dbg !8207
  %4 = icmp eq i32 %2, 0, !dbg !8208
  br i1 %4, label %17, label %5, !dbg !8209

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8210

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8211
  call void @llvm.dbg.value(metadata i8* %9, metadata !8204, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %8, metadata !8203, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i8* %9, metadata !8204, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8211
  %10 = load i8, i8* %9, align 1, !dbg !8212
  %11 = icmp eq i8 %10, %6, !dbg !8215
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8216
  call void @llvm.dbg.value(metadata i8* %12, metadata !8204, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.value(metadata i32 %13, metadata !8203, metadata !DIExpression()), !dbg !8207
  br i1 %15, label %16, label %7, !dbg !8216, !llvm.loop !8217

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8219

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8207
  ret i8* %19, !dbg !8220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !8221 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8223, metadata !DIExpression()), !dbg !8224
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8225
  ret void, !dbg !8226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !8227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8229, metadata !DIExpression()), !dbg !8230
  ret i32 -1, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8236, metadata !DIExpression()), !dbg !8238
  call void @llvm.dbg.value(metadata i32* %1, metadata !8237, metadata !DIExpression()), !dbg !8238
  %3 = ptrtoint i32* %1 to i32, !dbg !8239
  %4 = and i32 %3, -2, !dbg !8239
  %5 = icmp eq i32 %4, 2, !dbg !8239
  br i1 %5, label %6, label %9, !dbg !8239

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8240
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8240
  br label %9, !dbg !8241

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8241
  ret i32 %10, !dbg !8242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8245, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.value(metadata i32* %1, metadata !8246, metadata !DIExpression()), !dbg !8247
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8248
  ret i32 %3, !dbg !8249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8253, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i32* %1, metadata !8254, metadata !DIExpression()), !dbg !8255
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8256, !srcloc !8258
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8259
  ret i32 %3, !dbg !8260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8266, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.value(metadata i32* %1, metadata !8267, metadata !DIExpression()), !dbg !8270
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %3, metadata !8268, metadata !DIExpression()), !dbg !8270
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8272
  call void @llvm.dbg.value(metadata i32 %4, metadata !8269, metadata !DIExpression()), !dbg !8270
  %5 = icmp ne i32 %3, %4, !dbg !8273
  %6 = sext i1 %5 to i32, !dbg !8274
  ret i32 %6, !dbg !8275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8276 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8280, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %1, metadata !8281, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32 %2, metadata !8282, metadata !DIExpression()), !dbg !8284
  call void @llvm.dbg.value(metadata i32* %3, metadata !8283, metadata !DIExpression()), !dbg !8284
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8285
  ret i32 %5, !dbg !8286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8287 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8289, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32 %1, metadata !8290, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32 %2, metadata !8291, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32* %3, metadata !8292, metadata !DIExpression()), !dbg !8293
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8294, !srcloc !8296
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8297
  ret i32 %5, !dbg !8298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8299 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8301, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %1, metadata !8302, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %2, metadata !8303, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32* %3, metadata !8304, metadata !DIExpression()), !dbg !8309
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8310
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8312
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8312
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8312
  br i1 %11, label %33, label %12, !dbg !8312

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8309
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8309
  call void @llvm.dbg.value(metadata i8* %14, metadata !8307, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %13, metadata !8305, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %1, metadata !8306, metadata !DIExpression()), !dbg !8309
  br label %15, !dbg !8313

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8315
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8309
  call void @llvm.dbg.value(metadata i8* %17, metadata !8307, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.value(metadata i32 %16, metadata !8306, metadata !DIExpression()), !dbg !8309
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8316
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8319
  call void @llvm.dbg.value(metadata i8* %19, metadata !8307, metadata !DIExpression()), !dbg !8309
  %20 = load i8, i8* %17, align 1, !dbg !8320
  %21 = zext i8 %20 to i32, !dbg !8321
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8316
  %23 = icmp eq i32 %22, -1, !dbg !8322
  br i1 %23, label %30, label %24, !dbg !8323

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8324
  call void @llvm.dbg.value(metadata i32 %25, metadata !8306, metadata !DIExpression()), !dbg !8309
  %26 = icmp eq i32 %25, 0, !dbg !8325
  br i1 %26, label %27, label %15, !dbg !8326, !llvm.loop !8327

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8329
  call void @llvm.dbg.value(metadata i32 %28, metadata !8305, metadata !DIExpression()), !dbg !8309
  %29 = icmp eq i32 %28, 0, !dbg !8330
  br i1 %29, label %30, label %12, !dbg !8331, !llvm.loop !8332

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8309
  call void @llvm.dbg.value(metadata i32 %31, metadata !8305, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.label(metadata !8308), !dbg !8335
  %32 = sub i32 %2, %31, !dbg !8336
  br label %33, !dbg !8337

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8309
  ret i32 %34, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8339 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8343, metadata !DIExpression()), !dbg !8344
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8345
  %3 = icmp eq i32 %2, -1, !dbg !8347
  br i1 %3, label %8, label %4, !dbg !8348

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !8349
  %6 = icmp eq i32 %5, -1, !dbg !8350
  %7 = sext i1 %6 to i32, !dbg !8349
  br label %8, !dbg !8351

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8344
  ret i32 %9, !dbg !8352
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8353 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8355, metadata !DIExpression()), !dbg !8366
  %8 = bitcast i64* %2 to i8*, !dbg !8367
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #24, !dbg !8367
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8356, metadata !DIExpression()), !dbg !8368
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8368
  store i64 %9, i64* %2, align 8, !dbg !8368
  %10 = bitcast i64* %4 to i8*, !dbg !8369
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #24, !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8364, metadata !DIExpression()), !dbg !8370
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8370
  store i64 %11, i64* %4, align 8, !dbg !8370
  %12 = bitcast i64* %6 to i8*, !dbg !8371
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #24, !dbg !8371
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8365, metadata !DIExpression()), !dbg !8372
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8372
  store i64 %13, i64* %6, align 8, !dbg !8372
  %14 = trunc i64 %9 to i32, !dbg !8373
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8373
  %16 = tail call fastcc zeroext i1 @device_is_ready.35(%struct.device* noundef %15) #26, !dbg !8375
  %17 = trunc i64 %13 to i32, !dbg !8376
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8376
  br i1 %16, label %19, label %26, !dbg !8376

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8376
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8376
  %22 = tail call fastcc zeroext i1 @device_is_ready.35(%struct.device* noundef %21) #26, !dbg !8377
  br i1 %22, label %23, label %26, !dbg !8378

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready.35(%struct.device* noundef %18) #26, !dbg !8379
  br i1 %24, label %25, label %26, !dbg !8380

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #26, !dbg !8381
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #26, !dbg !8382
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #26, !dbg !8383
  br label %26, !dbg !8384

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #24, !dbg !8385
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #24, !dbg !8385
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #24, !dbg !8385
  ret i32 %27, !dbg !8385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.35(%struct.device* noundef %0) unnamed_addr #1 !dbg !8386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8390, metadata !DIExpression()), !dbg !8391
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8392, !srcloc !8394
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.36(%struct.device* noundef %0) #26, !dbg !8395
  ret i1 %2, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8402, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.value(metadata i32 %1, metadata !8403, metadata !DIExpression()), !dbg !8404
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8405
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8405
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8406
  %6 = load i8, i8* %5, align 4, !dbg !8406
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8407
  %8 = load i16, i16* %7, align 2, !dbg !8407
  %9 = zext i16 %8 to i32, !dbg !8408
  %10 = or i32 %9, %1, !dbg !8409
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #26, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8415, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.value(metadata i8 %1, metadata !8416, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.value(metadata i32 %2, metadata !8417, metadata !DIExpression()), !dbg !8418
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8419, !srcloc !8421
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8426, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i8 %1, metadata !8427, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %2, metadata !8428, metadata !DIExpression()), !dbg !8433
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8434
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8434
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8434
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8429, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i8* undef, metadata !8430, metadata !DIExpression()), !dbg !8433
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8435
  %8 = bitcast i8** %7 to %struct.z_heap_bucket**, !dbg !8435
  %9 = load %struct.z_heap_bucket*, %struct.z_heap_bucket** %8, align 4, !dbg !8435
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %9, metadata !8432, metadata !DIExpression()), !dbg !8433
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !8436
  %13 = icmp ne i32 %12, 1048577, !dbg !8436
  %14 = or i1 %13, %11, !dbg !8436
  %15 = xor i32 %2, 786432, !dbg !8436
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !8436
  call void @llvm.dbg.value(metadata i32 %16, metadata !8428, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %16, metadata !8428, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8433
  %17 = and i32 %16, 1, !dbg !8438
  %18 = icmp eq i32 %17, 0, !dbg !8440
  %19 = zext i8 %1 to i32, !dbg !8441
  %20 = shl nuw i32 1, %19, !dbg !8441
  br i1 %18, label %25, label %21, !dbg !8442

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !8443
  %23 = load i32, i32* %22, align 4, !dbg !8445
  %24 = or i32 %23, %20, !dbg !8445
  store i32 %24, i32* %22, align 4, !dbg !8445
  br label %30, !dbg !8446

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !8447
  %27 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %9, i32 0, i32 0, !dbg !8449
  %28 = load i32, i32* %27, align 4, !dbg !8450
  %29 = and i32 %28, %26, !dbg !8450
  store i32 %29, i32* %27, align 4, !dbg !8450
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !8451
  call void @llvm.dbg.value(metadata i32 %31, metadata !8428, metadata !DIExpression()), !dbg !8433
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8452
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !8452
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #25, !dbg !8453
  ret void, !dbg !8454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.36(%struct.device* noundef %0) unnamed_addr #1 !dbg !8455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8457, metadata !DIExpression()), !dbg !8458
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8459
  ret i1 %2, !dbg !8460
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8461 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8463, metadata !DIExpression()), !dbg !8464
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !8465
  ret void, !dbg !8466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8471, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 %1, metadata !8472, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8473, metadata !DIExpression()), !dbg !8477
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8478
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8478
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8478
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8474, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.value(metadata i32 %0, metadata !8476, metadata !DIExpression()), !dbg !8477
  %7 = icmp slt i32 %0, %1, !dbg !8479
  br i1 %7, label %8, label %22, !dbg !8482

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8476, metadata !DIExpression()), !dbg !8477
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !8483
  %11 = icmp eq i32 %10, 0, !dbg !8483
  br i1 %11, label %19, label %12, !dbg !8486

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !8487
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8489
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8489
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8491
  br i1 %15, label %19, label %16, !dbg !8492

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8493
  %18 = load i8*, i8** %17, align 4, !dbg !8493
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8494
  br label %19, !dbg !8495

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8496
  call void @llvm.dbg.value(metadata i32 %20, metadata !8476, metadata !DIExpression()), !dbg !8477
  %21 = icmp eq i32 %20, %1, !dbg !8479
  br i1 %21, label %22, label %8, !dbg !8482, !llvm.loop !8497

22:                                               ; preds = %19, %3
  ret void, !dbg !8499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !8500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8502, metadata !DIExpression()), !dbg !8503
  %2 = shl nuw i32 1, %0, !dbg !8504
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8507
  ret i32 %3, !dbg !8508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #16 !dbg !8509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8513, metadata !DIExpression()), !dbg !8514
  %2 = shl nuw i32 1, %0, !dbg !8515
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8518
  ret void, !dbg !8519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8523, metadata !DIExpression()), !dbg !8524
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8525
  ret void, !dbg !8526
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !8527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8531
  %3 = and i32 %2, %0, !dbg !8531
  %4 = icmp eq i32 %3, %0, !dbg !8532
  %5 = zext i1 %4 to i32, !dbg !8532
  ret i32 %5, !dbg !8533
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8536, metadata !DIExpression()), !dbg !8537
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8538
  ret void, !dbg !8539
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8540 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8548, metadata !DIExpression()), !dbg !8549
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8550
  ret void, !dbg !8551
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8552 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8554, metadata !DIExpression()), !dbg !8555
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8566, metadata !DIExpression()), !dbg !8567
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8568
  ret void, !dbg !8569
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8570 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8572, metadata !DIExpression()), !dbg !8573
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8574
  ret i32 0, !dbg !8575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !804 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !808, metadata !DIExpression()), !dbg !8576
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8577
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8579
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8581
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8583
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8585
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8587
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8589
  ret void, !dbg !8591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8594, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i32 0, metadata !8595, metadata !DIExpression()), !dbg !8596
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8597
  %3 = load i32, i32* %2, align 4, !dbg !8597
  call void @llvm.dbg.value(metadata i32 %3, metadata !8595, metadata !DIExpression()), !dbg !8596
  %4 = shl nuw i32 1, %0, !dbg !8598
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !8599
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8600
  ret void, !dbg !8601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8604, metadata !DIExpression()), !dbg !8605
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8606
  %3 = or i32 %2, %0, !dbg !8606
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8606
  ret void, !dbg !8607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #16 !dbg !8608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8610, metadata !DIExpression()), !dbg !8611
  %2 = icmp slt i32 %0, 32, !dbg !8612
  br i1 %2, label %3, label %5, !dbg !8614

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8615
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8617
  br label %5, !dbg !8618

5:                                                ; preds = %1, %3
  ret void, !dbg !8619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8622, metadata !DIExpression()), !dbg !8623
  %2 = xor i32 %0, -1, !dbg !8624
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8624
  %4 = and i32 %3, %2, !dbg !8624
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8624
  ret void, !dbg !8625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 !dbg !8626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8630, metadata !DIExpression()), !dbg !8632
  call void @llvm.dbg.value(metadata i32 %1, metadata !8631, metadata !DIExpression()), !dbg !8632
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8633

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8634
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8636
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8637
  br label %11, !dbg !8638

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8639
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8640
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8641
  br label %11, !dbg !8642

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8643
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8644
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8645
  br label %11, !dbg !8646

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8647
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8648
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8649
  br label %11, !dbg !8650

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8654, metadata !DIExpression()), !dbg !8655
  %2 = xor i32 %0, -1, !dbg !8656
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8656
  %4 = and i32 %3, %2, !dbg !8656
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8656
  ret void, !dbg !8657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8660, metadata !DIExpression()), !dbg !8661
  %2 = xor i32 %0, -1, !dbg !8662
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8662
  %4 = and i32 %3, %2, !dbg !8662
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8662
  ret void, !dbg !8663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8666, metadata !DIExpression()), !dbg !8667
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8668
  %3 = or i32 %2, %0, !dbg !8668
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8672, metadata !DIExpression()), !dbg !8673
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8674
  %3 = or i32 %2, %0, !dbg !8674
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8674
  ret void, !dbg !8675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !8676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8680, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8681, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %2, metadata !8682, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8683, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8685, metadata !DIExpression()), !dbg !8686
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8687
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8687
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8689
  br i1 %6, label %7, label %9, !dbg !8690

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8691
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8692
  store i8* %2, i8** %8, align 4, !dbg !8693
  br label %9, !dbg !8694

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8686
  ret i32 %10, !dbg !8695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8698, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8699, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8700, metadata !DIExpression()), !dbg !8701
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8702
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8703
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8704
  store i8* null, i8** %3, align 4, !dbg !8705
  ret void, !dbg !8706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !8707 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8709, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata i8* %1, metadata !8710, metadata !DIExpression()), !dbg !8714
  call void @llvm.dbg.value(metadata i8* %1, metadata !8711, metadata !DIExpression()), !dbg !8714
  %3 = bitcast i8* %1 to i32*, !dbg !8715
  %4 = load i32, i32* %3, align 4, !dbg !8715
  %5 = add i32 %4, -37, !dbg !8715
  %6 = icmp ult i32 %5, -9, !dbg !8715
  br i1 %6, label %15, label %7, !dbg !8717

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8718
  %9 = inttoptr i32 %8 to i32*, !dbg !8719
  call void @llvm.dbg.value(metadata i32* %9, metadata !8712, metadata !DIExpression()), !dbg !8714
  %10 = load volatile i32, i32* %9, align 4, !dbg !8720
  call void @llvm.dbg.value(metadata i32 %10, metadata !8713, metadata !DIExpression()), !dbg !8714
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8721
  %12 = bitcast i8* %11 to i32*, !dbg !8721
  %13 = load i32, i32* %12, align 4, !dbg !8721
  %14 = or i32 %13, %10, !dbg !8722
  call void @llvm.dbg.value(metadata i32 %14, metadata !8713, metadata !DIExpression()), !dbg !8714
  store volatile i32 %14, i32* %9, align 4, !dbg !8723
  br label %15, !dbg !8724

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8714
  ret i32 %16, !dbg !8725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #16 !dbg !8726 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8728, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %1, metadata !8729, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.value(metadata i8* %1, metadata !8730, metadata !DIExpression()), !dbg !8733
  %3 = bitcast i8* %1 to i32*, !dbg !8734
  %4 = load i32, i32* %3, align 4, !dbg !8734
  %5 = add i32 %4, -37, !dbg !8734
  %6 = icmp ult i32 %5, -9, !dbg !8734
  br i1 %6, label %16, label %7, !dbg !8736

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8737
  %9 = inttoptr i32 %8 to i32*, !dbg !8738
  call void @llvm.dbg.value(metadata i32* %9, metadata !8731, metadata !DIExpression()), !dbg !8733
  %10 = load volatile i32, i32* %9, align 4, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %10, metadata !8732, metadata !DIExpression()), !dbg !8733
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8740
  %12 = bitcast i8* %11 to i32*, !dbg !8740
  %13 = load i32, i32* %12, align 4, !dbg !8740
  %14 = xor i32 %13, -1, !dbg !8741
  %15 = and i32 %10, %14, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %15, metadata !8732, metadata !DIExpression()), !dbg !8733
  store volatile i32 %15, i32* %9, align 4, !dbg !8743
  br label %16, !dbg !8744

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8733
  ret i32 %17, !dbg !8745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #8 !dbg !8746 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8748, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i8* %1, metadata !8749, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32* %2, metadata !8750, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i8* %1, metadata !8751, metadata !DIExpression()), !dbg !8755
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8756
  call void @llvm.dbg.value(metadata i32 %4, metadata !8752, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %4, metadata !8753, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.value(metadata i32 %4, metadata !8754, metadata !DIExpression()), !dbg !8755
  %5 = bitcast i8* %1 to i32*, !dbg !8757
  %6 = load i32, i32* %5, align 4, !dbg !8757
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8758

7:                                                ; preds = %3
  br label %10, !dbg !8759

8:                                                ; preds = %3
  br label %10, !dbg !8761

9:                                                ; preds = %3
  br label %10, !dbg !8762

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8763
  br label %12, !dbg !8764

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8755
  ret i32 %13, !dbg !8764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #16 !dbg !8765 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8767, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i8* %1, metadata !8768, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i8* %2, metadata !8769, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i8* %1, metadata !8770, metadata !DIExpression()), !dbg !8775
  %4 = bitcast i8* %1 to i32*, !dbg !8776
  %5 = load i32, i32* %4, align 4, !dbg !8776
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8777
  call void @llvm.dbg.value(metadata i32 %6, metadata !8774, metadata !DIExpression()), !dbg !8775
  %7 = icmp slt i32 %6, 0, !dbg !8778
  br i1 %7, label %22, label %8, !dbg !8780

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8770, metadata !DIExpression()), !dbg !8775
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8781
  %10 = bitcast i8* %9 to i32*, !dbg !8781
  %11 = load i32, i32* %10, align 4, !dbg !8781
  %12 = lshr i32 %11, 16, !dbg !8781
  %13 = and i32 %12, 7, !dbg !8781
  %14 = lshr i32 %11, 8, !dbg !8782
  %15 = and i32 %14, 31, !dbg !8782
  %16 = shl i32 %13, %15, !dbg !8783
  call void @llvm.dbg.value(metadata i32 %16, metadata !8773, metadata !DIExpression()), !dbg !8775
  %17 = and i32 %11, 255, !dbg !8784
  %18 = or i32 %17, 1073887232, !dbg !8785
  %19 = inttoptr i32 %18 to i32*, !dbg !8786
  call void @llvm.dbg.value(metadata i32* %19, metadata !8771, metadata !DIExpression()), !dbg !8775
  %20 = load volatile i32, i32* %19, align 4, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %20, metadata !8772, metadata !DIExpression()), !dbg !8775
  %21 = or i32 %16, %20, !dbg !8788
  call void @llvm.dbg.value(metadata i32 %21, metadata !8772, metadata !DIExpression()), !dbg !8775
  store volatile i32 %21, i32* %19, align 4, !dbg !8789
  br label %22, !dbg !8790

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8775
  ret i32 %23, !dbg !8791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8796, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 0, metadata !8797, metadata !DIExpression()), !dbg !8798
  %2 = add i32 %0, -1, !dbg !8799
  %3 = icmp ult i32 %2, 4, !dbg !8799
  br i1 %3, label %4, label %7, !dbg !8799

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8799
  %6 = load i32, i32* %5, align 4, !dbg !8799
  call void @llvm.dbg.value(metadata i32 %6, metadata !8797, metadata !DIExpression()), !dbg !8798
  br label %7, !dbg !8800

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8798
  ret i32 %8, !dbg !8801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8802 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8804, metadata !DIExpression()), !dbg !8807
  tail call void @config_enable_default_clocks() #25, !dbg !8808
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8809
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8809
  %4 = lshr i32 %3, 4, !dbg !8809
  %5 = and i32 %4, 15, !dbg !8809
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8809
  %7 = load i8, i8* %6, align 1, !dbg !8809
  %8 = zext i8 %7 to i32, !dbg !8809
  %9 = lshr i32 %2, %8, !dbg !8809
  call void @llvm.dbg.value(metadata i32 %9, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8806, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8807
  %10 = icmp ult i32 %9, 32000000, !dbg !8810
  br i1 %10, label %11, label %13, !dbg !8812

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8813
  br label %13, !dbg !8815

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8816
  tail call fastcc void @set_up_plls() #26, !dbg !8817
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8818
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #26, !dbg !8821
  br label %14, !dbg !8822

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8823
  %16 = icmp eq i32 %15, 12, !dbg !8824
  br i1 %16, label %17, label %14, !dbg !8822, !llvm.loop !8825

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8827
  br i1 %18, label %19, label %21, !dbg !8829

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8830
  br label %21, !dbg !8832

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8833
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8834
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8835
  ret i32 0, !dbg !8836
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !8837 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8839
  %2 = and i32 %1, 240, !dbg !8839
  ret i32 %2, !dbg !8840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #16 !dbg !8841 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8842
  %2 = icmp eq i32 %1, 1, !dbg !8846
  br i1 %2, label %7, label %3, !dbg !8847

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8848
  br label %4, !dbg !8850

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8851
  %6 = icmp eq i32 %5, 1, !dbg !8852
  br i1 %6, label %7, label %4, !dbg !8850, !llvm.loop !8853

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8855
  br label %8, !dbg !8858

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8859
  %10 = icmp eq i32 %9, 1, !dbg !8860
  br i1 %10, label %11, label %8, !dbg !8858, !llvm.loop !8861

11:                                               ; preds = %8
  ret void, !dbg !8863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8864 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8865
  %2 = icmp eq i32 %1, 12, !dbg !8867
  br i1 %2, label %3, label %4, !dbg !8868

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8869
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8871
  br label %4, !dbg !8872

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8873
  tail call void @config_pll_sysclock() #25, !dbg !8874
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8875
  br label %5, !dbg !8876

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8877
  %7 = icmp eq i32 %6, 1, !dbg !8878
  br i1 %7, label %8, label %5, !dbg !8876, !llvm.loop !8879

8:                                                ; preds = %5
  ret void, !dbg !8881
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #16 !dbg !8882 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8884, metadata !DIExpression()), !dbg !8885
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8886
  %2 = and i32 %1, -241, !dbg !8886
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8886
  ret void, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #16 !dbg !8888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8890, metadata !DIExpression()), !dbg !8891
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8892
  %3 = and i32 %2, -4, !dbg !8892
  %4 = or i32 %3, %0, !dbg !8892
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8892
  ret void, !dbg !8893
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !8894 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8895
  %2 = and i32 %1, 12, !dbg !8895
  ret i32 %2, !dbg !8896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #16 !dbg !8897 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8899, metadata !DIExpression()), !dbg !8900
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8901
  %2 = and i32 %1, -1793, !dbg !8901
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8901
  ret void, !dbg !8902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #16 !dbg !8903 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8905, metadata !DIExpression()), !dbg !8906
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8907
  %2 = and i32 %1, -14337, !dbg !8907
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8907
  ret void, !dbg !8908
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #16 !dbg !8909 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8910
  %2 = icmp eq i32 %1, 1, !dbg !8912
  br i1 %2, label %7, label %3, !dbg !8913

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8914
  br label %4, !dbg !8916

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8917
  %6 = icmp eq i32 %5, 1, !dbg !8918
  br i1 %6, label %7, label %4, !dbg !8916, !llvm.loop !8919

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #26, !dbg !8921
  br label %8, !dbg !8922

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8923
  %10 = icmp eq i32 %9, 4, !dbg !8924
  br i1 %10, label %11, label %8, !dbg !8922, !llvm.loop !8925

11:                                               ; preds = %8
  ret void, !dbg !8927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #16 !dbg !8928 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8929
  %2 = and i32 %1, -16777217, !dbg !8929
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #16 !dbg !8931 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8932
  %2 = or i32 %1, 16777216, !dbg !8932
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !8934 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8935
  %2 = lshr i32 %1, 25, !dbg !8936
  %3 = and i32 %2, 1, !dbg !8936
  ret i32 %3, !dbg !8937
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !8938 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8939
  %2 = lshr i32 %1, 1, !dbg !8940
  %3 = and i32 %2, 1, !dbg !8940
  ret i32 %3, !dbg !8941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #16 !dbg !8942 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8943
  %2 = or i32 %1, 1, !dbg !8943
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8943
  ret void, !dbg !8944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #16 !dbg !8945 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8946
  %2 = or i32 %1, 1, !dbg !8946
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8946
  ret void, !dbg !8947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !8948 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8949
  %2 = lshr i32 %1, 1, !dbg !8950
  %3 = and i32 %2, 1, !dbg !8950
  ret i32 %3, !dbg !8951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8952 {
  ret i32 16000000, !dbg !8954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #16 !dbg !8957 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8958
  ret void, !dbg !8959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #16 !dbg !8960 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8964, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 262144, metadata !8965, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8966, metadata !DIExpression()), !dbg !8967
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8968
  %2 = and i32 %1, -16580609, !dbg !8968
  %3 = or i32 %2, 4456448, !dbg !8968
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #11 !dbg !8970 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8971
  %2 = zext i8 %1 to i32, !dbg !8971
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8971
  ret i32 %3, !dbg !8972
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !8973 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #26, !dbg !8974
  ret void, !dbg !8975
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #15 !dbg !8976 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8978, metadata !DIExpression()), !dbg !8980
  %2 = bitcast i32* %1 to i8*, !dbg !8981
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8981
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8979, metadata !DIExpression()), !dbg !8982
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8983
  %4 = or i32 %3, 1, !dbg !8983
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8983
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8984
  %6 = and i32 %5, 1, !dbg !8984
  store volatile i32 %6, i32* %1, align 4, !dbg !8985
  %7 = load volatile i32, i32* %1, align 4, !dbg !8986
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8987
  ret void, !dbg !8987
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8990, metadata !DIExpression()), !dbg !8991
  %2 = tail call fastcc zeroext i1 @device_is_ready.46() #26, !dbg !8992
  br i1 %2, label %3, label %4, !dbg !8994

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8995
  br label %4, !dbg !8996

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8991
  ret i32 %5, !dbg !8997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.46() unnamed_addr #1 !dbg !8998 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9002, metadata !DIExpression()), !dbg !9003
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9004, !srcloc !9006
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.49() #26, !dbg !9007
  ret i1 %1, !dbg !9008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9009 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9010
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9011
  ret void, !dbg !9012
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9015, metadata !DIExpression()), !dbg !9017
  %2 = load i32 (i8)*, i32 (i8)** @debug_hook_out, align 4, !dbg !9018
  %3 = trunc i32 %0 to i8, !dbg !9018
  %4 = tail call i32 %2(i8 noundef zeroext %3) #25, !dbg !9018
  %5 = icmp eq i32 %4, 1, !dbg !9018
  call void @llvm.dbg.value(metadata i1 %5, metadata !9016, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9017
  br i1 %5, label %10, label %6, !dbg !9019

6:                                                ; preds = %1
  %7 = icmp eq i32 %0, 10, !dbg !9020
  br i1 %7, label %8, label %9, !dbg !9022

8:                                                ; preds = %6
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext 13) #26, !dbg !9023
  br label %9, !dbg !9025

9:                                                ; preds = %8, %6
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext %3) #26, !dbg !9026
  br label %10, !dbg !9027

10:                                               ; preds = %1, %9
  ret i32 %0, !dbg !9028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.47(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9029 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9031, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata i8 %0, metadata !9032, metadata !DIExpression()), !dbg !9033
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9034, !srcloc !9036
  tail call fastcc void @z_impl_uart_poll_out.48(i8 noundef zeroext %0) #26, !dbg !9037
  ret void, !dbg !9038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.48(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9039 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9041, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i8 %0, metadata !9042, metadata !DIExpression()), !dbg !9044
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9045
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9043, metadata !DIExpression()), !dbg !9044
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9046
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9046
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !9047
  ret void, !dbg !9048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @debug_hook_out_nop(i8 noundef zeroext %0) #11 !dbg !9049 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9051, metadata !DIExpression()), !dbg !9052
  ret i32 0, !dbg !9053
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.49() unnamed_addr #1 !dbg !9054 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9056, metadata !DIExpression()), !dbg !9057
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9058
  ret i1 %1, !dbg !9059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_in_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9060 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9064, metadata !DIExpression()), !dbg !9065
  store i32 (i8)* %0, i32 (i8)** @debug_hook_in, align 4, !dbg !9066
  ret void, !dbg !9067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_console_out_debug_hook_install(i32 (i8)* noundef %0) local_unnamed_addr #4 !dbg !9068 {
  call void @llvm.dbg.value(metadata i32 (i8)* %0, metadata !9072, metadata !DIExpression()), !dbg !9073
  store i32 (i8)* %0, i32 (i8)** @debug_hook_out, align 4, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) local_unnamed_addr #1 !dbg !9076 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9080, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9082, metadata !DIExpression()), !dbg !9083
  store %struct.k_fifo* %0, %struct.k_fifo** @avail_queue, align 4, !dbg !9084
  store %struct.k_fifo* %1, %struct.k_fifo** @lines_queue, align 4, !dbg !9085
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9086
  tail call fastcc void @console_input_init() #26, !dbg !9087
  ret void, !dbg !9088
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @console_input_init() unnamed_addr #1 !dbg !9089 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9092
  tail call fastcc void @uart_irq_rx_disable.50() #26, !dbg !9093
  tail call fastcc void @uart_irq_tx_disable.51() #26, !dbg !9094
  tail call fastcc void @uart_irq_callback_set() #26, !dbg !9095
  %2 = call fastcc i32 @uart_irq_rx_ready.52() #26, !dbg !9096
  %3 = icmp eq i32 %2, 0, !dbg !9097
  br i1 %3, label %8, label %4, !dbg !9097

4:                                                ; preds = %0, %4
  call void @llvm.dbg.value(metadata i8* %1, metadata !9091, metadata !DIExpression(DW_OP_deref)), !dbg !9098
  %5 = call fastcc i32 @uart_fifo_read.53(i8* noundef nonnull %1) #26, !dbg !9099
  %6 = call fastcc i32 @uart_irq_rx_ready.52() #26, !dbg !9096
  %7 = icmp eq i32 %6, 0, !dbg !9097
  br i1 %7, label %8, label %4, !dbg !9097, !llvm.loop !9101

8:                                                ; preds = %4, %0
  call fastcc void @uart_irq_rx_enable.54() #26, !dbg !9103
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24, !dbg !9104
  ret void, !dbg !9104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_disable.50() unnamed_addr #1 !dbg !9105 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9107, metadata !DIExpression()), !dbg !9108
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9109, !srcloc !9111
  tail call fastcc void @z_impl_uart_irq_rx_disable.63() #26, !dbg !9112
  ret void, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_tx_disable.51() unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9116, metadata !DIExpression()), !dbg !9117
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9118, !srcloc !9120
  tail call fastcc void @z_impl_uart_irq_tx_disable.62() #26, !dbg !9121
  ret void, !dbg !9122
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_set() unnamed_addr #1 !dbg !9123 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9127, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9128, metadata !DIExpression()), !dbg !9129
  tail call fastcc void @uart_irq_callback_user_data_set.56() #26, !dbg !9130
  ret void, !dbg !9131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready.52() unnamed_addr #1 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9134, metadata !DIExpression()), !dbg !9136
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9137
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9135, metadata !DIExpression()), !dbg !9136
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !9138
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9138
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9140
  br i1 %4, label %7, label %5, !dbg !9141

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9142
  br label %7, !dbg !9143

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9136
  ret i32 %8, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_fifo_read.53(i8* noundef %0) unnamed_addr #1 !dbg !9145 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9147, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i8* %0, metadata !9148, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 1, metadata !9149, metadata !DIExpression()), !dbg !9151
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9152
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9150, metadata !DIExpression()), !dbg !9151
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !9153
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !9153
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !9155
  br i1 %5, label %8, label %6, !dbg !9156

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8* noundef %0, i32 noundef 1) #25, !dbg !9157
  br label %8, !dbg !9158

8:                                                ; preds = %1, %6
  %9 = phi i32 [ %7, %6 ], [ -88, %1 ], !dbg !9151
  ret i32 %9, !dbg !9159
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable.54() unnamed_addr #1 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9162, metadata !DIExpression()), !dbg !9163
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9164, !srcloc !9166
  tail call fastcc void @z_impl_uart_irq_rx_enable.55() #26, !dbg !9167
  ret void, !dbg !9168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable.55() unnamed_addr #1 !dbg !9169 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9171, metadata !DIExpression()), !dbg !9173
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9174
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9172, metadata !DIExpression()), !dbg !9173
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !9175
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9175
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9177
  br i1 %4, label %6, label %5, !dbg !9178

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9179
  br label %6, !dbg !9181

6:                                                ; preds = %5, %0
  ret void, !dbg !9182
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_console_isr(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) #1 !dbg !1141 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1143, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i8* %1, metadata !1144, metadata !DIExpression()), !dbg !9183
  %4 = call fastcc i32 @uart_irq_update.57() #26, !dbg !9184
  %5 = icmp eq i32 %4, 0, !dbg !9184
  br i1 %5, label %96, label %6, !dbg !9185

6:                                                ; preds = %2, %93
  %7 = call fastcc i32 @uart_irq_is_pending() #26, !dbg !9186
  %8 = icmp eq i32 %7, 0, !dbg !9185
  br i1 %8, label %96, label %9, !dbg !9187

9:                                                ; preds = %6
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9188
  %10 = call fastcc i32 @uart_irq_rx_ready.52() #26, !dbg !9189
  %11 = icmp eq i32 %10, 0, !dbg !9189
  br i1 %11, label %93, label %12, !dbg !9191, !llvm.loop !9192

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i8* %3, metadata !1145, metadata !DIExpression(DW_OP_deref)), !dbg !9194
  %13 = call fastcc i32 @read_uart(i8* noundef nonnull %3) #26, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %13, metadata !1147, metadata !DIExpression()), !dbg !9194
  %14 = icmp slt i32 %13, 0, !dbg !9196
  br i1 %14, label %92, label %15, !dbg !9198

15:                                               ; preds = %12
  %16 = load i32 (i8)*, i32 (i8)** @debug_hook_in, align 4, !dbg !9199
  %17 = icmp eq i32 (i8)* %16, null, !dbg !9201
  br i1 %17, label %22, label %18, !dbg !9202

18:                                               ; preds = %15
  %19 = load i8, i8* %3, align 1, !dbg !9203
  call void @llvm.dbg.value(metadata i8 %19, metadata !1145, metadata !DIExpression()), !dbg !9194
  %20 = call i32 %16(i8 noundef zeroext %19) #25, !dbg !9204
  %21 = icmp eq i32 %20, 0, !dbg !9205
  br i1 %21, label %22, label %92, !dbg !9206

22:                                               ; preds = %18, %15
  %23 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9207
  %24 = icmp eq %struct.console_input* %23, null, !dbg !9207
  br i1 %24, label %25, label %30, !dbg !9208

25:                                               ; preds = %22
  %26 = load %struct.k_fifo*, %struct.k_fifo** @avail_queue, align 4, !dbg !9209
  %27 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %26, i32 0, i32 0, !dbg !9209
  %28 = call fastcc i8* @k_queue_get(%struct.k_queue* noundef %27) #26, !dbg !9209
  call void @llvm.dbg.value(metadata i8* %28, metadata !1148, metadata !DIExpression()), !dbg !9210
  store i8* %28, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9211
  %29 = icmp eq i8* %28, null, !dbg !9212
  br i1 %29, label %92, label %30, !dbg !9214

30:                                               ; preds = %25, %22
  %31 = call fastcc zeroext i1 @atomic_test_bit(i32 noundef 1) #26, !dbg !9215
  br i1 %31, label %32, label %36, !dbg !9217

32:                                               ; preds = %30
  %33 = load i8, i8* %3, align 1, !dbg !9218
  call void @llvm.dbg.value(metadata i8 %33, metadata !1145, metadata !DIExpression()), !dbg !9194
  %34 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9220
  %35 = getelementptr inbounds %struct.console_input, %struct.console_input* %34, i32 0, i32 2, i32 0, !dbg !9220
  call fastcc void @handle_ansi(i8 noundef zeroext %33, i8* noundef nonnull %35) #26, !dbg !9221
  br label %93, !dbg !9222, !llvm.loop !9192

36:                                               ; preds = %30
  %37 = call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 0) #26, !dbg !9223
  %38 = load i8, i8* %3, align 1, !dbg !9194
  call void @llvm.dbg.value(metadata i8 %38, metadata !1145, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.value(metadata i8 %38, metadata !1145, metadata !DIExpression()), !dbg !9194
  br i1 %37, label %39, label %42, !dbg !9225

39:                                               ; preds = %36
  %40 = icmp eq i8 %38, 91, !dbg !9226
  br i1 %40, label %41, label %93, !dbg !9229, !llvm.loop !9192

41:                                               ; preds = %39
  call fastcc void @atomic_set_bit(i32 noundef 1) #26, !dbg !9230
  call fastcc void @atomic_set_bit(i32 noundef 2) #26, !dbg !9232
  br label %93, !dbg !9233, !llvm.loop !9192

42:                                               ; preds = %36
  %43 = zext i8 %38 to i32, !dbg !9234
  %44 = call fastcc i32 @isprint(i32 noundef %43) #26, !dbg !9236
  %45 = icmp eq i32 %44, 0, !dbg !9236
  br i1 %45, label %46, label %81, !dbg !9237

46:                                               ; preds = %42
  call void @llvm.dbg.value(metadata i8 undef, metadata !1145, metadata !DIExpression()), !dbg !9194
  switch i8 %38, label %93 [
    i8 8, label %47
    i8 127, label %47
    i8 27, label %56
    i8 13, label %57
    i8 9, label %68
  ], !dbg !9238, !llvm.loop !9192

47:                                               ; preds = %46, %46
  %48 = load i8, i8* @cur, align 1, !dbg !9240
  %49 = icmp eq i8 %48, 0, !dbg !9243
  br i1 %49, label %93, label %50, !dbg !9244, !llvm.loop !9192

50:                                               ; preds = %47
  %51 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9245
  %52 = add i8 %48, -1, !dbg !9247
  store i8 %52, i8* @cur, align 1, !dbg !9247
  %53 = zext i8 %52 to i32, !dbg !9245
  %54 = getelementptr inbounds %struct.console_input, %struct.console_input* %51, i32 0, i32 2, i32 %53, !dbg !9245
  %55 = load i8, i8* @end, align 1, !dbg !9248
  call fastcc void @del_char(i8* noundef nonnull %54, i8 noundef zeroext %55) #26, !dbg !9249
  br label %93, !dbg !9250, !llvm.loop !9192

56:                                               ; preds = %46
  call fastcc void @atomic_set_bit(i32 noundef 0) #26, !dbg !9251
  br label %93, !dbg !9252, !llvm.loop !9192

57:                                               ; preds = %46
  %58 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9253
  %59 = load i8, i8* @cur, align 1, !dbg !9254
  %60 = zext i8 %59 to i32, !dbg !9254
  %61 = load i8, i8* @end, align 1, !dbg !9255
  %62 = zext i8 %61 to i32, !dbg !9255
  %63 = add nuw nsw i32 %62, %60, !dbg !9256
  %64 = getelementptr inbounds %struct.console_input, %struct.console_input* %58, i32 0, i32 2, i32 %63, !dbg !9253
  store i8 0, i8* %64, align 1, !dbg !9257
  call fastcc void @uart_poll_out.47(i8 noundef zeroext 13) #26, !dbg !9258
  call fastcc void @uart_poll_out.47(i8 noundef zeroext 10) #26, !dbg !9259
  store i8 0, i8* @cur, align 1, !dbg !9260
  store i8 0, i8* @end, align 1, !dbg !9261
  %65 = load %struct.k_fifo*, %struct.k_fifo** @lines_queue, align 4, !dbg !9262
  %66 = getelementptr inbounds %struct.k_fifo, %struct.k_fifo* %65, i32 0, i32 0, !dbg !9262
  %67 = load i8*, i8** bitcast (%struct.console_input** @uart_console_isr.cmd to i8**), align 4, !dbg !9262
  call void @k_queue_append(%struct.k_queue* noundef %66, i8* noundef %67) #25, !dbg !9262
  store %struct.console_input* null, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9264
  br label %93, !dbg !9265, !llvm.loop !9192

68:                                               ; preds = %46
  %69 = load i8 (i8*, i8)*, i8 (i8*, i8)** @completion_cb, align 4, !dbg !9266
  %70 = icmp eq i8 (i8*, i8)* %69, null, !dbg !9266
  %71 = load i8, i8* @end, align 1
  %72 = icmp ne i8 %71, 0
  %73 = select i1 %70, i1 true, i1 %72, !dbg !9268
  br i1 %73, label %93, label %74, !dbg !9268, !llvm.loop !9192

74:                                               ; preds = %68
  %75 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9269
  %76 = getelementptr inbounds %struct.console_input, %struct.console_input* %75, i32 0, i32 2, i32 0, !dbg !9269
  %77 = load i8, i8* @cur, align 1, !dbg !9271
  %78 = call zeroext i8 %69(i8* noundef nonnull %76, i8 noundef zeroext %77) #25, !dbg !9272
  %79 = load i8, i8* @cur, align 1, !dbg !9273
  %80 = add i8 %79, %78, !dbg !9273
  store i8 %80, i8* @cur, align 1, !dbg !9273
  br label %93, !dbg !9274, !llvm.loop !9192

81:                                               ; preds = %42
  %82 = load i8, i8* @cur, align 1, !dbg !9275
  %83 = zext i8 %82 to i32, !dbg !9275
  %84 = load i8, i8* @end, align 1, !dbg !9277
  %85 = zext i8 %84 to i32, !dbg !9277
  %86 = add nuw nsw i32 %85, %83, !dbg !9278
  %87 = icmp ult i32 %86, 127, !dbg !9279
  br i1 %87, label %88, label %93, !dbg !9280

88:                                               ; preds = %81
  %89 = load %struct.console_input*, %struct.console_input** @uart_console_isr.cmd, align 4, !dbg !9281
  %90 = add i8 %82, 1, !dbg !9283
  store i8 %90, i8* @cur, align 1, !dbg !9283
  %91 = getelementptr inbounds %struct.console_input, %struct.console_input* %89, i32 0, i32 2, i32 %83, !dbg !9281
  call void @llvm.dbg.value(metadata i8 %38, metadata !1145, metadata !DIExpression()), !dbg !9194
  call fastcc void @insert_char(i8* noundef nonnull %91, i8 noundef zeroext %38, i8 noundef zeroext %84) #26, !dbg !9284
  br label %93, !dbg !9285

92:                                               ; preds = %12, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9193
  br label %96

93:                                               ; preds = %81, %88, %56, %57, %50, %47, %74, %68, %46, %39, %41, %9, %32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24, !dbg !9193
  %94 = call fastcc i32 @uart_irq_update.57() #26, !dbg !9184
  %95 = icmp eq i32 %94, 0, !dbg !9184
  br i1 %95, label %96, label %6, !dbg !9185

96:                                               ; preds = %6, %93, %2, %92
  ret void, !dbg !9286
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set.56() unnamed_addr #1 !dbg !9287 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9289, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @uart_console_isr, metadata !9290, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i8* null, metadata !9291, metadata !DIExpression()), !dbg !9293
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9294
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9292, metadata !DIExpression()), !dbg !9293
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !9295
  br i1 %2, label %8, label %3, !dbg !9297

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !9298
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !9298
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !9299
  br i1 %6, label %8, label %7, !dbg !9300

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_42, void (%struct.device*, i8*)* noundef nonnull @uart_console_isr, i8* noundef null) #25, !dbg !9301
  br label %8, !dbg !9303

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !9304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update.57() unnamed_addr #1 !dbg !9305 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9307, metadata !DIExpression()), !dbg !9308
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9309, !srcloc !9311
  %1 = tail call fastcc i32 @z_impl_uart_irq_update.61() #26, !dbg !9312
  ret i32 %1, !dbg !9313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_is_pending() unnamed_addr #1 !dbg !9314 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9316, metadata !DIExpression()), !dbg !9317
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9318, !srcloc !9320
  %1 = tail call fastcc i32 @z_impl_uart_irq_is_pending() #26, !dbg !9321
  ret i32 %1, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @read_uart(i8* noundef %0) unnamed_addr #1 !dbg !9323 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9327, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata i8* %0, metadata !9328, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.value(metadata i32 1, metadata !9329, metadata !DIExpression()), !dbg !9331
  %2 = tail call fastcc i32 @uart_fifo_read.53(i8* noundef %0) #26, !dbg !9332
  call void @llvm.dbg.value(metadata i32 %2, metadata !9330, metadata !DIExpression()), !dbg !9331
  %3 = icmp slt i32 %2, 0, !dbg !9333
  br i1 %3, label %4, label %5, !dbg !9335

4:                                                ; preds = %1
  tail call fastcc void @uart_irq_rx_disable.50() #26, !dbg !9336
  br label %5, !dbg !9338

5:                                                ; preds = %1, %4
  %6 = phi i32 [ -5, %4 ], [ %2, %1 ], !dbg !9331
  ret i32 %6, !dbg !9339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get(%struct.k_queue* noundef %0) unnamed_addr #1 !dbg !9340 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9350, metadata !DIExpression()), !dbg !9351
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !9349, metadata !DIExpression()), !dbg !9351
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9352, !srcloc !9354
  %2 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !9355
  ret i8* %2, !dbg !9356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_bit(i32 noundef %0) unnamed_addr #17 !dbg !9357 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9363, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9367
  %2 = tail call fastcc i32 @atomic_get() #26, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %2, metadata !9365, metadata !DIExpression()), !dbg !9367
  %3 = and i32 %0, 31, !dbg !9369
  %4 = shl nuw i32 1, %3, !dbg !9370
  %5 = and i32 %2, %4, !dbg !9370
  %6 = icmp ne i32 %5, 0, !dbg !9370
  ret i1 %6, !dbg !9371
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @handle_ansi(i8 noundef zeroext %0, i8* nocapture noundef %1) unnamed_addr #1 !dbg !9372 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9376, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.value(metadata i8* %1, metadata !9377, metadata !DIExpression()), !dbg !9379
  %3 = tail call fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef 2) #26, !dbg !9380
  br i1 %3, label %4, label %11, !dbg !9382

4:                                                ; preds = %2
  %5 = zext i8 %0 to i32, !dbg !9383
  %6 = tail call fastcc i32 @isdigit.58(i32 noundef %5) #26, !dbg !9386
  %7 = icmp eq i32 %6, 0, !dbg !9386
  br i1 %7, label %8, label %9, !dbg !9387

8:                                                ; preds = %4
  store i32 1, i32* @ansi_val, align 4, !dbg !9388
  br label %34, !dbg !9390

9:                                                ; preds = %4
  tail call fastcc void @atomic_set_bit(i32 noundef 3) #26, !dbg !9391
  %10 = add nsw i32 %5, -48, !dbg !9392
  store i32 %10, i32* @ansi_val, align 4, !dbg !9393
  store i32 0, i32* @ansi_val_2, align 4, !dbg !9394
  br label %81, !dbg !9395

11:                                               ; preds = %2
  %12 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 3) #26, !dbg !9396
  br i1 %12, label %13, label %34, !dbg !9398

13:                                               ; preds = %11
  %14 = zext i8 %0 to i32, !dbg !9399
  %15 = tail call fastcc i32 @isdigit.58(i32 noundef %14) #26, !dbg !9402
  %16 = icmp eq i32 %15, 0, !dbg !9402
  br i1 %16, label %29, label %17, !dbg !9403

17:                                               ; preds = %13
  %18 = tail call fastcc zeroext i1 @atomic_test_bit(i32 noundef 4) #26, !dbg !9404
  br i1 %18, label %19, label %24, !dbg !9407

19:                                               ; preds = %17
  %20 = load i32, i32* @ansi_val_2, align 4, !dbg !9408
  %21 = mul i32 %20, 10, !dbg !9408
  %22 = add nsw i32 %14, -48, !dbg !9410
  %23 = add i32 %22, %21, !dbg !9411
  store i32 %23, i32* @ansi_val_2, align 4, !dbg !9411
  br label %81, !dbg !9412

24:                                               ; preds = %17
  %25 = load i32, i32* @ansi_val, align 4, !dbg !9413
  %26 = mul i32 %25, 10, !dbg !9413
  %27 = add nsw i32 %14, -48, !dbg !9415
  %28 = add i32 %27, %26, !dbg !9416
  store i32 %28, i32* @ansi_val, align 4, !dbg !9416
  br label %81

29:                                               ; preds = %13
  %30 = icmp eq i8 %0, 59, !dbg !9417
  br i1 %30, label %31, label %33, !dbg !9419

31:                                               ; preds = %29
  %32 = tail call fastcc zeroext i1 @atomic_test_and_set_bit() #26, !dbg !9420
  br i1 %32, label %33, label %81, !dbg !9421

33:                                               ; preds = %31, %29
  tail call fastcc void @atomic_clear_bit(i32 noundef 3) #26, !dbg !9422
  tail call fastcc void @atomic_clear_bit(i32 noundef 4) #26, !dbg !9423
  br label %34, !dbg !9424

34:                                               ; preds = %11, %33, %8
  call void @llvm.dbg.label(metadata !9378), !dbg !9425
  switch i8 %0, label %80 [
    i8 68, label %35
    i8 67, label %45
    i8 72, label %55
    i8 70, label %63
    i8 126, label %71
  ], !dbg !9426

35:                                               ; preds = %34
  %36 = load i32, i32* @ansi_val, align 4, !dbg !9427
  %37 = load i8, i8* @cur, align 1, !dbg !9430
  %38 = zext i8 %37 to i32, !dbg !9430
  %39 = icmp ugt i32 %36, %38, !dbg !9431
  br i1 %39, label %80, label %40, !dbg !9432

40:                                               ; preds = %35
  %41 = load i8, i8* @end, align 1, !dbg !9433
  %42 = trunc i32 %36 to i8, !dbg !9433
  %43 = add i8 %41, %42, !dbg !9433
  store i8 %43, i8* @end, align 1, !dbg !9433
  %44 = sub i8 %37, %42, !dbg !9434
  store i8 %44, i8* @cur, align 1, !dbg !9434
  tail call fastcc void @cursor_backward(i32 noundef %36) #26, !dbg !9435
  br label %80, !dbg !9436

45:                                               ; preds = %34
  %46 = load i32, i32* @ansi_val, align 4, !dbg !9437
  %47 = load i8, i8* @end, align 1, !dbg !9439
  %48 = zext i8 %47 to i32, !dbg !9439
  %49 = icmp ugt i32 %46, %48, !dbg !9440
  br i1 %49, label %80, label %50, !dbg !9441

50:                                               ; preds = %45
  %51 = trunc i32 %46 to i8, !dbg !9442
  %52 = sub i8 %47, %51, !dbg !9442
  store i8 %52, i8* @end, align 1, !dbg !9442
  %53 = load i8, i8* @cur, align 1, !dbg !9443
  %54 = add i8 %53, %51, !dbg !9443
  store i8 %54, i8* @cur, align 1, !dbg !9443
  tail call fastcc void @cursor_forward(i32 noundef %46) #26, !dbg !9444
  br label %80, !dbg !9445

55:                                               ; preds = %34
  %56 = load i8, i8* @cur, align 1, !dbg !9446
  %57 = icmp eq i8 %56, 0, !dbg !9446
  br i1 %57, label %80, label %58, !dbg !9448

58:                                               ; preds = %55
  %59 = zext i8 %56 to i32, !dbg !9449
  tail call fastcc void @cursor_backward(i32 noundef %59) #26, !dbg !9450
  %60 = load i8, i8* @cur, align 1, !dbg !9451
  %61 = load i8, i8* @end, align 1, !dbg !9452
  %62 = add i8 %61, %60, !dbg !9452
  store i8 %62, i8* @end, align 1, !dbg !9452
  store i8 0, i8* @cur, align 1, !dbg !9453
  br label %80, !dbg !9454

63:                                               ; preds = %34
  %64 = load i8, i8* @end, align 1, !dbg !9455
  %65 = icmp eq i8 %64, 0, !dbg !9455
  br i1 %65, label %80, label %66, !dbg !9457

66:                                               ; preds = %63
  %67 = zext i8 %64 to i32, !dbg !9458
  tail call fastcc void @cursor_forward(i32 noundef %67) #26, !dbg !9459
  %68 = load i8, i8* @end, align 1, !dbg !9460
  %69 = load i8, i8* @cur, align 1, !dbg !9461
  %70 = add i8 %69, %68, !dbg !9461
  store i8 %70, i8* @cur, align 1, !dbg !9461
  store i8 0, i8* @end, align 1, !dbg !9462
  br label %80, !dbg !9463

71:                                               ; preds = %34
  %72 = load i8, i8* @end, align 1, !dbg !9464
  %73 = icmp eq i8 %72, 0, !dbg !9464
  br i1 %73, label %80, label %74, !dbg !9466

74:                                               ; preds = %71
  tail call fastcc void @cursor_forward(i32 noundef 1) #26, !dbg !9467
  %75 = load i8, i8* @cur, align 1, !dbg !9468
  %76 = zext i8 %75 to i32, !dbg !9469
  %77 = getelementptr inbounds i8, i8* %1, i32 %76, !dbg !9469
  %78 = load i8, i8* @end, align 1, !dbg !9470
  %79 = add i8 %78, -1, !dbg !9470
  store i8 %79, i8* @end, align 1, !dbg !9470
  tail call fastcc void @del_char(i8* noundef %77, i8 noundef zeroext %79) #26, !dbg !9471
  br label %80, !dbg !9472

80:                                               ; preds = %34, %71, %63, %55, %45, %35, %74, %66, %58, %50, %40
  tail call fastcc void @atomic_clear_bit(i32 noundef 1) #26, !dbg !9473
  br label %81, !dbg !9474

81:                                               ; preds = %31, %19, %24, %80, %9
  ret void, !dbg !9474
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_clear_bit(i32 noundef %0) unnamed_addr #17 !dbg !9475 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9480, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i32 %0, metadata !9481, metadata !DIExpression()), !dbg !9484
  %2 = and i32 %0, 31, !dbg !9485
  %3 = shl nuw i32 1, %2, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %3, metadata !9482, metadata !DIExpression()), !dbg !9484
  %4 = xor i32 %3, -1, !dbg !9486
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %5, metadata !9483, metadata !DIExpression()), !dbg !9484
  %6 = and i32 %5, %3, !dbg !9488
  %7 = icmp ne i32 %6, 0, !dbg !9489
  ret i1 %7, !dbg !9490
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_set_bit(i32 noundef %0) unnamed_addr #17 !dbg !9491 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9495, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.value(metadata i32 %0, metadata !9496, metadata !DIExpression()), !dbg !9498
  %2 = and i32 %0, 31, !dbg !9499
  %3 = shl nuw i32 1, %2, !dbg !9499
  call void @llvm.dbg.value(metadata i32 %3, metadata !9497, metadata !DIExpression()), !dbg !9498
  %4 = tail call fastcc i32 @atomic_or(i32 noundef %3) #26, !dbg !9500
  ret void, !dbg !9501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #11 !dbg !9502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9504, metadata !DIExpression()), !dbg !9505
  %2 = add i32 %0, -32, !dbg !9506
  %3 = icmp ult i32 %2, 95, !dbg !9506
  %4 = zext i1 %3 to i32, !dbg !9506
  ret i32 %4, !dbg !9507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @del_char(i8* nocapture noundef %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9508 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9512, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8 %1, metadata !9513, metadata !DIExpression()), !dbg !9514
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext 8) #26, !dbg !9515
  %3 = icmp eq i8 %1, 0, !dbg !9516
  br i1 %3, label %4, label %5, !dbg !9518

4:                                                ; preds = %2
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext 32) #26, !dbg !9519
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext 8) #26, !dbg !9521
  br label %14, !dbg !9522

5:                                                ; preds = %2
  tail call fastcc void @cursor_save() #26, !dbg !9523
  call void @llvm.dbg.value(metadata i8 %1, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8* %0, metadata !9512, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8 %1, metadata !9513, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9514
  br label %6, !dbg !9524

6:                                                ; preds = %5, %6
  %7 = phi i8 [ %1, %5 ], [ %9, %6 ]
  %8 = phi i8* [ %0, %5 ], [ %10, %6 ]
  call void @llvm.dbg.value(metadata i8 %7, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8* %8, metadata !9512, metadata !DIExpression()), !dbg !9514
  %9 = add i8 %7, -1, !dbg !9525
  call void @llvm.dbg.value(metadata i8 %9, metadata !9513, metadata !DIExpression()), !dbg !9514
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9526
  %11 = load i8, i8* %10, align 1, !dbg !9528
  store i8 %11, i8* %8, align 1, !dbg !9529
  call void @llvm.dbg.value(metadata i8* %10, metadata !9512, metadata !DIExpression()), !dbg !9514
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext %11) #26, !dbg !9530
  call void @llvm.dbg.value(metadata i8 %9, metadata !9513, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9514
  %12 = icmp eq i8 %9, 0, !dbg !9531
  br i1 %12, label %13, label %6, !dbg !9524, !llvm.loop !9532

13:                                               ; preds = %6
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext 32) #26, !dbg !9534
  tail call fastcc void @cursor_restore() #26, !dbg !9535
  br label %14, !dbg !9536

14:                                               ; preds = %13, %4
  ret void, !dbg !9536
}

; Function Attrs: optsize
declare !dbg !9537 dso_local void @k_queue_append(%struct.k_queue* noundef, i8* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @insert_char(i8* nocapture noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2) unnamed_addr #1 !dbg !9540 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9544, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8 %1, metadata !9545, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8 %2, metadata !9546, metadata !DIExpression()), !dbg !9548
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext %1) #26, !dbg !9549
  %4 = icmp eq i8 %2, 0, !dbg !9550
  br i1 %4, label %5, label %6, !dbg !9552

5:                                                ; preds = %3
  store i8 %1, i8* %0, align 1, !dbg !9553
  br label %17, !dbg !9555

6:                                                ; preds = %3
  %7 = load i8, i8* %0, align 1, !dbg !9556
  call void @llvm.dbg.value(metadata i8 %7, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8* %0, metadata !9544, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9548
  store i8 %1, i8* %0, align 1, !dbg !9557
  tail call fastcc void @cursor_save() #26, !dbg !9558
  call void @llvm.dbg.value(metadata i8 %7, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8 %2, metadata !9546, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8* %0, metadata !9544, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9548
  call void @llvm.dbg.value(metadata i8 %2, metadata !9546, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9548
  br label %8, !dbg !9559

8:                                                ; preds = %6, %8
  %9 = phi i8* [ %0, %6 ], [ %12, %8 ]
  %10 = phi i8 [ %7, %6 ], [ %14, %8 ]
  %11 = phi i8 [ %2, %6 ], [ %13, %8 ]
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9548
  call void @llvm.dbg.value(metadata i8 %10, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8 %11, metadata !9546, metadata !DIExpression()), !dbg !9548
  %13 = add i8 %11, -1, !dbg !9560
  call void @llvm.dbg.value(metadata i8 %13, metadata !9546, metadata !DIExpression()), !dbg !9548
  tail call fastcc void @uart_poll_out.47(i8 noundef zeroext %10) #26, !dbg !9561
  %14 = load i8, i8* %12, align 1, !dbg !9563
  call void @llvm.dbg.value(metadata i8 %14, metadata !9545, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8* %12, metadata !9544, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9548
  store i8 %10, i8* %12, align 1, !dbg !9564
  call void @llvm.dbg.value(metadata i8 %14, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata i8* %12, metadata !9544, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9548
  call void @llvm.dbg.value(metadata i8 %13, metadata !9546, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9548
  %15 = icmp eq i8 %13, 0, !dbg !9565
  br i1 %15, label %16, label %8, !dbg !9559, !llvm.loop !9566

16:                                               ; preds = %8
  tail call fastcc void @cursor_restore() #26, !dbg !9568
  br label %17, !dbg !9569

17:                                               ; preds = %16, %5
  ret void, !dbg !9569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_save() unnamed_addr #1 !dbg !9570 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0)) #25, !dbg !9571
  ret void, !dbg !9572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_restore() unnamed_addr #1 !dbg !9573 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0)) #25, !dbg !9574
  ret void, !dbg !9575
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_or(i32 noundef %0) unnamed_addr #17 !dbg !9576 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9581, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %0, metadata !9582, metadata !DIExpression()), !dbg !9583
  %2 = atomicrmw or i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9584
  ret i32 %2, !dbg !9585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_and(i32 noundef %0) unnamed_addr #17 !dbg !9586 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9588, metadata !DIExpression()), !dbg !9590
  call void @llvm.dbg.value(metadata i32 %0, metadata !9589, metadata !DIExpression()), !dbg !9590
  %2 = atomicrmw and i32* @esc_state, i32 %0 seq_cst, align 4, !dbg !9591
  ret i32 %2, !dbg !9592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit.58(i32 noundef %0) unnamed_addr #11 !dbg !9593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9595, metadata !DIExpression()), !dbg !9596
  %2 = add i32 %0, -48, !dbg !9597
  %3 = icmp ult i32 %2, 10, !dbg !9598
  %4 = zext i1 %3 to i32, !dbg !9598
  ret i32 %4, !dbg !9599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @atomic_test_and_set_bit() unnamed_addr #17 !dbg !9600 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9602, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata i32 4, metadata !9603, metadata !DIExpression()), !dbg !9606
  call void @llvm.dbg.value(metadata i32 16, metadata !9604, metadata !DIExpression()), !dbg !9606
  %1 = tail call fastcc i32 @atomic_or(i32 noundef 16) #26, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %1, metadata !9605, metadata !DIExpression()), !dbg !9606
  %2 = and i32 %1, 16, !dbg !9608
  %3 = icmp ne i32 %2, 0, !dbg !9609
  ret i1 %3, !dbg !9610
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_clear_bit(i32 noundef %0) unnamed_addr #17 !dbg !9611 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9613, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.value(metadata i32 %0, metadata !9614, metadata !DIExpression()), !dbg !9616
  %2 = and i32 %0, 31, !dbg !9617
  %3 = shl nuw i32 1, %2, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %3, metadata !9615, metadata !DIExpression()), !dbg !9616
  %4 = xor i32 %3, -1, !dbg !9618
  %5 = tail call fastcc i32 @atomic_and(i32 noundef %4) #26, !dbg !9619
  ret void, !dbg !9620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_backward(i32 noundef %0) unnamed_addr #1 !dbg !9621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9623, metadata !DIExpression()), !dbg !9624
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 noundef %0) #25, !dbg !9625
  ret void, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cursor_forward(i32 noundef %0) unnamed_addr #1 !dbg !9627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9629, metadata !DIExpression()), !dbg !9630
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.59, i32 0, i32 0), i32 noundef %0) #25, !dbg !9631
  ret void, !dbg !9632
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_get() unnamed_addr #17 !dbg !9633 {
  call void @llvm.dbg.value(metadata i32* @esc_state, metadata !9637, metadata !DIExpression()), !dbg !9638
  %1 = load atomic i32, i32* @esc_state seq_cst, align 4, !dbg !9639
  ret i32 %1, !dbg !9640
}

; Function Attrs: optsize
declare !dbg !9641 dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef, [1 x i64]) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_is_pending() unnamed_addr #1 !dbg !9642 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9644, metadata !DIExpression()), !dbg !9646
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9647
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9645, metadata !DIExpression()), !dbg !9646
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 16, !dbg !9648
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9648
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9650
  br i1 %4, label %7, label %5, !dbg !9651

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9652
  br label %7, !dbg !9653

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9646
  ret i32 %8, !dbg !9654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update.61() unnamed_addr #1 !dbg !9655 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9657, metadata !DIExpression()), !dbg !9659
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9660
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9658, metadata !DIExpression()), !dbg !9659
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !9661
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !9661
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !9663
  br i1 %4, label %7, label %5, !dbg !9664

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9665
  br label %7, !dbg !9666

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !9659
  ret i32 %8, !dbg !9667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_tx_disable.62() unnamed_addr #1 !dbg !9668 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9670, metadata !DIExpression()), !dbg !9672
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9673
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9671, metadata !DIExpression()), !dbg !9672
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 8, !dbg !9674
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9674
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9676
  br i1 %4, label %6, label %5, !dbg !9677

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9678
  br label %6, !dbg !9680

6:                                                ; preds = %5, %0
  ret void, !dbg !9681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_disable.63() unnamed_addr #1 !dbg !9682 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9684, metadata !DIExpression()), !dbg !9686
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9687
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !9685, metadata !DIExpression()), !dbg !9686
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 11, !dbg !9688
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !9688
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !9690
  br i1 %4, label %6, label %5, !dbg !9691

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9692
  br label %6, !dbg !9694

6:                                                ; preds = %5, %0
  ret void, !dbg !9695
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9696 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9698, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.value(metadata i8 %1, metadata !9699, metadata !DIExpression()), !dbg !9703
  call void @llvm.dbg.value(metadata i32 %2, metadata !9700, metadata !DIExpression()), !dbg !9703
  %5 = bitcast i32* %4 to i8*, !dbg !9704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9704
  call void @llvm.dbg.value(metadata i32* %4, metadata !9702, metadata !DIExpression(DW_OP_deref)), !dbg !9703
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %6, metadata !9701, metadata !DIExpression()), !dbg !9703
  %7 = icmp eq i32 %6, 0, !dbg !9706
  br i1 %7, label %8, label %31, !dbg !9708

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9701, metadata !DIExpression()), !dbg !9703
  %9 = and i32 %2, 131072, !dbg !9709
  %10 = icmp eq i32 %9, 0, !dbg !9711
  br i1 %10, label %28, label %11, !dbg !9712

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9713
  %13 = icmp eq i32 %12, 0, !dbg !9716
  br i1 %13, label %18, label %14, !dbg !9717

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9718
  %16 = shl nuw i32 1, %15, !dbg !9718
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !9720
  br label %25, !dbg !9721

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9722
  %20 = icmp eq i32 %19, 0, !dbg !9724
  %21 = zext i8 %1 to i32, !dbg !9703
  br i1 %20, label %25, label %22, !dbg !9725

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9726
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !9728
  br label %25, !dbg !9729

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9730
  %27 = load i32, i32* %4, align 4, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %30, metadata !9702, metadata !DIExpression()), !dbg !9703
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !9732
  br label %31, !dbg !9733

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9730
  %30 = load i32, i32* %4, align 4, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %30, metadata !9702, metadata !DIExpression()), !dbg !9703
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !9732
  call void @llvm.dbg.value(metadata i32 0, metadata !9701, metadata !DIExpression()), !dbg !9703
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !9734
  ret i32 %6, !dbg !9734
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !9735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9739, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.value(metadata i32* %1, metadata !9740, metadata !DIExpression()), !dbg !9744
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9745
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9745
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9745
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9741, metadata !DIExpression()), !dbg !9744
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9746
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9746
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9746
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9743, metadata !DIExpression()), !dbg !9744
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !9747
  store i32 %9, i32* %1, align 4, !dbg !9748
  ret i32 0, !dbg !9749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #16 !dbg !9750 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9752, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %1, metadata !9753, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %2, metadata !9754, metadata !DIExpression()), !dbg !9758
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9759
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9759
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9759
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9755, metadata !DIExpression()), !dbg !9758
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9760
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9760
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9760
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9756, metadata !DIExpression()), !dbg !9758
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %10, metadata !9757, metadata !DIExpression()), !dbg !9758
  %11 = xor i32 %1, -1, !dbg !9762
  %12 = and i32 %10, %11, !dbg !9763
  %13 = and i32 %2, %1, !dbg !9764
  %14 = or i32 %12, %13, !dbg !9765
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !9766
  ret i32 0, !dbg !9767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9774
  call void @llvm.dbg.value(metadata i32 %1, metadata !9771, metadata !DIExpression()), !dbg !9774
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9775
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9775
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9775
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9772, metadata !DIExpression()), !dbg !9774
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9776
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9776
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9776
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9773, metadata !DIExpression()), !dbg !9774
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9777
  store volatile i32 %1, i32* %9, align 4, !dbg !9777
  ret i32 0, !dbg !9778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9781, metadata !DIExpression()), !dbg !9785
  call void @llvm.dbg.value(metadata i32 %1, metadata !9782, metadata !DIExpression()), !dbg !9785
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9786
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9786
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9786
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9783, metadata !DIExpression()), !dbg !9785
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9787
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9787
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9784, metadata !DIExpression()), !dbg !9785
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !9788
  ret i32 0, !dbg !9789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #16 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9792, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.value(metadata i32 %1, metadata !9793, metadata !DIExpression()), !dbg !9796
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9797
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9797
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9797
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9794, metadata !DIExpression()), !dbg !9796
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9798
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9798
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9798
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9795, metadata !DIExpression()), !dbg !9796
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9799
  %10 = load volatile i32, i32* %9, align 4, !dbg !9799
  %11 = xor i32 %10, %1, !dbg !9799
  store volatile i32 %11, i32* %9, align 4, !dbg !9799
  ret i32 0, !dbg !9800
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9803, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata i8 %1, metadata !9804, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata i32 %2, metadata !9805, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata i32 %3, metadata !9806, metadata !DIExpression()), !dbg !9813
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9814
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9814
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9814
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9807, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata i8* undef, metadata !9808, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata i32 0, metadata !9810, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.value(metadata i32 0, metadata !9811, metadata !DIExpression()), !dbg !9813
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9815

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9816
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !9820
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9821
  %12 = load i32, i32* %11, align 4, !dbg !9821
  %13 = icmp eq i32 %10, %12, !dbg !9822
  br i1 %13, label %14, label %29, !dbg !9823

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9824
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9826
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9827
  br label %29, !dbg !9828

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9829
  %17 = load i8*, i8** %16, align 4, !dbg !9829
  call void @llvm.dbg.value(metadata i8* %17, metadata !9808, metadata !DIExpression()), !dbg !9813
  %18 = zext i8 %1 to i32, !dbg !9830
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9832
  %20 = icmp eq i32 %19, 0, !dbg !9833
  br i1 %20, label %21, label %29, !dbg !9834

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9835
  %23 = load i32, i32* %22, align 4, !dbg !9835
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !9836
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9837

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9810, metadata !DIExpression()), !dbg !9813
  br label %27, !dbg !9838

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9810, metadata !DIExpression()), !dbg !9813
  br label %27, !dbg !9840

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9810, metadata !DIExpression()), !dbg !9813
  br label %27, !dbg !9841

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9813
  call void @llvm.dbg.value(metadata i32 %28, metadata !9810, metadata !DIExpression()), !dbg !9813
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9842
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9843
  br label %29, !dbg !9843

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9813
  call void @llvm.dbg.value(metadata i32 %30, metadata !9811, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.label(metadata !9812), !dbg !9844
  ret i32 %30, !dbg !9845
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9848, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9849, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i1 %2, metadata !9850, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9852
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9853
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9853
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9853
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9851, metadata !DIExpression()), !dbg !9852
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9854
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9855
  ret i32 %8, !dbg !9856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !9857 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9863, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i1 %2, metadata !9865, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9866
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9867
  br i1 %4, label %10, label %5, !dbg !9869

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9870
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !9873
  %8 = or i1 %7, %2, !dbg !9874
  %9 = select i1 %8, i32 0, i32 -22, !dbg !9874
  br i1 %2, label %11, label %13, !dbg !9874

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !9875

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9876
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !9879
  br label %13, !dbg !9880

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !9866
  ret i32 %14, !dbg !9881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9886, metadata !DIExpression()), !dbg !9887
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9888
  %3 = icmp eq %struct._snode* %2, null, !dbg !9888
  ret i1 %3, !dbg !9888
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9889 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9894, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9895, metadata !DIExpression()), !dbg !9897
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9898
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9895, metadata !DIExpression()), !dbg !9897
  %4 = icmp eq %struct._snode* %3, null, !dbg !9900
  br i1 %4, label %15, label %5, !dbg !9898

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9895, metadata !DIExpression()), !dbg !9897
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9902
  br i1 %6, label %9, label %11, !dbg !9905

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9895, metadata !DIExpression()), !dbg !9897
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9902
  br i1 %8, label %9, label %11, !dbg !9905, !llvm.loop !9906

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9907
  br label %15, !dbg !9907

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9895, metadata !DIExpression()), !dbg !9897
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9900
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9896, metadata !DIExpression()), !dbg !9897
  %14 = icmp eq %struct._snode* %13, null, !dbg !9900
  br i1 %14, label %15, label %7, !dbg !9898, !llvm.loop !9906

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !9910 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9914, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9915, metadata !DIExpression()), !dbg !9916
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9917
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9917
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9917
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9918
  %5 = icmp eq %struct._snode* %4, null, !dbg !9918
  br i1 %5, label %6, label %8, !dbg !9917

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9920
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9920
  br label %8, !dbg !9920

8:                                                ; preds = %6, %2
  ret void, !dbg !9917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9926, metadata !DIExpression()), !dbg !9927
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9928
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9928
  ret %struct._snode* %3, !dbg !9929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9930 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9935, metadata !DIExpression()), !dbg !9936
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9937
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9938
  ret void, !dbg !9939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9940 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9942, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9943, metadata !DIExpression()), !dbg !9944
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9945
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9946
  ret void, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9948 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9950, metadata !DIExpression()), !dbg !9951
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9952
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9952
  ret %struct._snode* %3, !dbg !9953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !9954 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9956, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9957, metadata !DIExpression()), !dbg !9958
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9959
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9960
  ret void, !dbg !9961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9966, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9967, metadata !DIExpression()), !dbg !9969
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9968, metadata !DIExpression()), !dbg !9969
  %4 = icmp eq %struct._snode* %1, null, !dbg !9970
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9972
  br i1 %4, label %6, label %11, !dbg !9973

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9974
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9976
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9976
  br i1 %8, label %9, label %15, !dbg !9974

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9978
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9978
  br label %15, !dbg !9978

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9980
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9982
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9982
  br i1 %13, label %14, label %15, !dbg !9980

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9984
  br label %15, !dbg !9984

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9973
  ret void, !dbg !9973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9990, metadata !DIExpression()), !dbg !9991
  %2 = icmp eq %struct._snode* %0, null, !dbg !9992
  br i1 %2, label %5, label %3, !dbg !9992

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9992
  br label %5, !dbg !9992

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9992
  ret %struct._snode* %6, !dbg !9992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9997
  ret %struct._snode* %2, !dbg !9997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !9998 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10000, metadata !DIExpression()), !dbg !10001
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10002
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10002
  ret %struct._snode* %3, !dbg !10003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10006, metadata !DIExpression()), !dbg !10009
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !10010, !range !10011
  call void @llvm.dbg.value(metadata i32 %2, metadata !10007, metadata !DIExpression()), !dbg !10009
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !10012
  call void @llvm.dbg.value(metadata i32 %3, metadata !10008, metadata !DIExpression()), !dbg !10009
  ret i32 %3, !dbg !10013
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i8* %1, metadata !10017, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i8* %1, metadata !10018, metadata !DIExpression()), !dbg !10019
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10020
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10020
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10021
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10021
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10021
  %8 = shl nuw i32 1, %0, !dbg !10022
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !10023
  ret void, !dbg !10024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10025 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10029, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata i32 %1, metadata !10030, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10031, metadata !DIExpression()), !dbg !10035
  %4 = bitcast i64* %3 to i8*, !dbg !10036
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10036
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10033, metadata !DIExpression()), !dbg !10035
  store i64 4294967328, i64* %3, align 8, !dbg !10037
  call void @llvm.dbg.value(metadata i64* %3, metadata !10033, metadata !DIExpression(DW_OP_deref)), !dbg !10035
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !10038
  call void @llvm.dbg.value(metadata i32 %5, metadata !10034, metadata !DIExpression()), !dbg !10035
  %6 = icmp eq i32 %5, 0, !dbg !10039
  br i1 %6, label %7, label %8, !dbg !10041

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !10042
  br label %8, !dbg !10043

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #24, !dbg !10044
  ret void, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10047, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* %0, metadata !10048, metadata !DIExpression()), !dbg !10050
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10051
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10049, metadata !DIExpression()), !dbg !10050
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10052
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10052
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10053
  ret i32 %5, !dbg !10054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10057, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata i32 %1, metadata !10058, metadata !DIExpression()), !dbg !10060
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !10061
  call void @llvm.dbg.value(metadata i32 %3, metadata !10059, metadata !DIExpression()), !dbg !10060
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !10062
  ret void, !dbg !10063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !10064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10068, metadata !DIExpression()), !dbg !10069
  %2 = sdiv i32 %0, 4, !dbg !10070
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10071
  %6 = add nsw i32 %5, 16, !dbg !10072
  %7 = shl i32 15, %6, !dbg !10073
  %8 = or i32 %7, %2, !dbg !10074
  ret i32 %8, !dbg !10075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 %1, metadata !10082, metadata !DIExpression()), !dbg !10083
  %3 = and i32 %1, 3, !dbg !10084
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10084
  %5 = load volatile i32, i32* %4, align 4, !dbg !10084
  %6 = lshr i32 %1, 16, !dbg !10084
  %7 = xor i32 %6, -1, !dbg !10084
  %8 = and i32 %5, %7, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %6, metadata !10085, metadata !DIExpression()) #24, !dbg !10089
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10091, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %9, metadata !10088, metadata !DIExpression()) #24, !dbg !10089
  call void @llvm.dbg.value(metadata i32 %9, metadata !10093, metadata !DIExpression()) #24, !dbg !10098
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #24, !dbg !10100, !range !3846
  %11 = shl i32 %0, %10, !dbg !10084
  %12 = or i32 %11, %8, !dbg !10084
  store volatile i32 %12, i32* %4, align 4, !dbg !10084
  ret void, !dbg !10101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10106, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10107, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %2, metadata !10108, metadata !DIExpression()), !dbg !10111
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !10112
  %5 = icmp eq %struct._snode* %4, null, !dbg !10112
  br i1 %5, label %21, label %6, !dbg !10112

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !10114
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10110, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !10109, metadata !DIExpression()), !dbg !10111
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10115
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !10115
  %11 = load i32, i32* %10, align 4, !dbg !10115
  %12 = and i32 %11, %2, !dbg !10119
  %13 = icmp eq i32 %12, 0, !dbg !10119
  br i1 %13, label %19, label %14, !dbg !10120

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !10109, metadata !DIExpression()), !dbg !10111
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10121
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10121
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10121
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #25, !dbg !10123
  br label %19, !dbg !10124

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10109, metadata !DIExpression()), !dbg !10111
  %20 = icmp eq %struct._snode* %8, null, !dbg !10125
  br i1 %20, label %21, label %6, !dbg !10125

21:                                               ; preds = %19, %3
  ret void, !dbg !10126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10129, metadata !DIExpression()), !dbg !10130
  %2 = and i32 %0, 3, !dbg !10131
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10131
  %4 = load volatile i32, i32* %3, align 4, !dbg !10131
  %5 = lshr i32 %0, 16, !dbg !10131
  %6 = and i32 %4, %5, !dbg !10131
  call void @llvm.dbg.value(metadata i32 %5, metadata !10085, metadata !DIExpression()) #24, !dbg !10132
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #29, !dbg !10134, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %7, metadata !10088, metadata !DIExpression()) #24, !dbg !10132
  call void @llvm.dbg.value(metadata i32 %7, metadata !10093, metadata !DIExpression()) #24, !dbg !10135
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10137, !range !3846
  %9 = lshr i32 %6, %8, !dbg !10138
  ret i32 %9, !dbg !10139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10140 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10145, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 %1, metadata !10146, metadata !DIExpression()), !dbg !10147
  %3 = shl i32 %1, 16, !dbg !10148
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10148
  store volatile i32 %3, i32* %4, align 4, !dbg !10148
  ret void, !dbg !10149
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10150 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10154, metadata !DIExpression()), !dbg !10155
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10156
  %3 = load volatile i32, i32* %2, align 4, !dbg !10156
  ret i32 %3, !dbg !10157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !10158 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10160, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.value(metadata i32 %1, metadata !10161, metadata !DIExpression()), !dbg !10162
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10163
  store volatile i32 %1, i32* %3, align 4, !dbg !10163
  ret void, !dbg !10164
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !10165 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10167, metadata !DIExpression()), !dbg !10168
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10169
  %3 = load volatile i32, i32* %2, align 4, !dbg !10169
  ret i32 %3, !dbg !10170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !10171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10175, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.value(metadata i32* %1, metadata !10176, metadata !DIExpression()), !dbg !10177
  %3 = and i32 %0, 131072, !dbg !10178
  %4 = icmp eq i32 %3, 0, !dbg !10180
  br i1 %4, label %22, label %5, !dbg !10181

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10182
  %6 = and i32 %0, 2, !dbg !10184
  %7 = icmp eq i32 %6, 0, !dbg !10186
  br i1 %7, label %11, label %8, !dbg !10187

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10188
  %10 = icmp eq i32 %9, 0, !dbg !10188
  br i1 %10, label %33, label %11, !dbg !10191

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10192
  store i32 %12, i32* %1, align 4, !dbg !10192
  %13 = and i32 %0, 16, !dbg !10193
  %14 = icmp eq i32 %13, 0, !dbg !10195
  br i1 %14, label %17, label %15, !dbg !10196

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10197
  br label %31, !dbg !10199

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10200
  %19 = icmp eq i32 %18, 0, !dbg !10202
  br i1 %19, label %33, label %20, !dbg !10203

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10204
  br label %31, !dbg !10206

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10207
  %24 = icmp eq i32 %23, 0, !dbg !10209
  br i1 %24, label %31, label %25, !dbg !10210

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10211
  %27 = icmp eq i32 %26, 0, !dbg !10214
  br i1 %27, label %28, label %31, !dbg !10215

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10216
  br label %33, !dbg !10217

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10177
  ret i32 %34, !dbg !10217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10222, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %1, metadata !10223, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %2, metadata !10224, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %3, metadata !10225, metadata !DIExpression()), !dbg !10233
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10234
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10234
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10234
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10226, metadata !DIExpression()), !dbg !10233
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10235
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10235
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10235
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10227, metadata !DIExpression()), !dbg !10233
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !10236
  call void @llvm.dbg.value(metadata i32 %11, metadata !10228, metadata !DIExpression()), !dbg !10233
  %12 = and i32 %2, 48, !dbg !10237
  call void @llvm.dbg.value(metadata i32 %12, metadata !10229, metadata !DIExpression()), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %2, metadata !10230, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %2, metadata !10231, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10233
  call void @llvm.dbg.value(metadata i32 %2, metadata !10232, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10233
  %13 = lshr i32 %2, 6, !dbg !10238
  %14 = and i32 %13, 1, !dbg !10238
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !10239
  %15 = lshr i32 %2, 7, !dbg !10240
  %16 = and i32 %15, 3, !dbg !10240
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !10241
  %17 = lshr i32 %2, 9, !dbg !10242
  %18 = and i32 %17, 3, !dbg !10242
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !10243
  %19 = icmp eq i32 %12, 32, !dbg !10244
  br i1 %19, label %20, label %24, !dbg !10246

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10247
  br i1 %21, label %22, label %23, !dbg !10250

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10251
  br label %24, !dbg !10253

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !10254
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10256
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !10257
  ret void, !dbg !10258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !10259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10261, metadata !DIExpression()), !dbg !10263
  %2 = shl nuw i32 1, %0, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %2, metadata !10262, metadata !DIExpression()), !dbg !10263
  ret i32 %2, !dbg !10265
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10270, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i32 %1, metadata !10271, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i32 %2, metadata !10272, metadata !DIExpression()), !dbg !10273
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10274
  %5 = load volatile i32, i32* %4, align 4, !dbg !10274
  %6 = xor i32 %1, -1, !dbg !10274
  %7 = and i32 %5, %6, !dbg !10274
  %8 = mul i32 %2, %1, !dbg !10274
  %9 = or i32 %7, %8, !dbg !10274
  store volatile i32 %9, i32* %4, align 4, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10278, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 %1, metadata !10279, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.value(metadata i32 %2, metadata !10280, metadata !DIExpression()), !dbg !10281
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10282
  %5 = load volatile i32, i32* %4, align 4, !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10283
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10285, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10286
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10288, !range !3846
  %8 = shl nuw nsw i32 %7, 1, !dbg !10282
  %9 = shl i32 3, %8, !dbg !10282
  %10 = xor i32 %9, -1, !dbg !10282
  %11 = and i32 %5, %10, !dbg !10282
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10291
  %12 = shl i32 %2, %8, !dbg !10282
  %13 = or i32 %11, %12, !dbg !10282
  store volatile i32 %13, i32* %4, align 4, !dbg !10282
  ret void, !dbg !10293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10294 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10296, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 %1, metadata !10297, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.value(metadata i32 %2, metadata !10298, metadata !DIExpression()), !dbg !10299
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10300
  %5 = load volatile i32, i32* %4, align 4, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10301
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10303, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10301
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10304
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10306, !range !3846
  %8 = shl nuw nsw i32 %7, 1, !dbg !10300
  %9 = shl i32 3, %8, !dbg !10300
  %10 = xor i32 %9, -1, !dbg !10300
  %11 = and i32 %5, %10, !dbg !10300
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10309
  %12 = shl i32 %2, %8, !dbg !10300
  %13 = or i32 %11, %12, !dbg !10300
  store volatile i32 %13, i32* %4, align 4, !dbg !10300
  ret void, !dbg !10311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10312 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10314, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %1, metadata !10315, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %2, metadata !10316, metadata !DIExpression()), !dbg !10317
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10318
  %5 = load volatile i32, i32* %4, align 4, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10319
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10321, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10322
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10324, !range !3846
  %8 = shl nuw nsw i32 %7, 2, !dbg !10318
  %9 = shl i32 15, %8, !dbg !10318
  %10 = xor i32 %9, -1, !dbg !10318
  %11 = and i32 %5, %10, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10325
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10327
  %12 = shl i32 %2, %8, !dbg !10318
  %13 = or i32 %11, %12, !dbg !10318
  store volatile i32 %13, i32* %4, align 4, !dbg !10318
  ret void, !dbg !10329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10330 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10332, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %1, metadata !10333, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %2, metadata !10334, metadata !DIExpression()), !dbg !10335
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10336
  %5 = load volatile i32, i32* %4, align 4, !dbg !10336
  %6 = lshr i32 %1, 8, !dbg !10336
  call void @llvm.dbg.value(metadata i32 %6, metadata !10085, metadata !DIExpression()) #24, !dbg !10337
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #29, !dbg !10339, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %7, metadata !10088, metadata !DIExpression()) #24, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %7, metadata !10093, metadata !DIExpression()) #24, !dbg !10340
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #24, !dbg !10342, !range !3846
  %9 = shl nuw nsw i32 %8, 2, !dbg !10336
  %10 = shl i32 15, %9, !dbg !10336
  %11 = xor i32 %10, -1, !dbg !10336
  %12 = and i32 %5, %11, !dbg !10336
  call void @llvm.dbg.value(metadata i32 %6, metadata !10085, metadata !DIExpression()) #24, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %7, metadata !10088, metadata !DIExpression()) #24, !dbg !10343
  call void @llvm.dbg.value(metadata i32 %7, metadata !10093, metadata !DIExpression()) #24, !dbg !10345
  %13 = shl i32 %2, %9, !dbg !10336
  %14 = or i32 %12, %13, !dbg !10336
  store volatile i32 %14, i32* %4, align 4, !dbg !10336
  ret void, !dbg !10347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10348 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10350, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %1, metadata !10351, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %2, metadata !10352, metadata !DIExpression()), !dbg !10353
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10354
  %5 = load volatile i32, i32* %4, align 4, !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10355
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #29, !dbg !10357, !srcloc !10092
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10355
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10358
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #24, !dbg !10360, !range !3846
  %8 = shl nuw nsw i32 %7, 1, !dbg !10354
  %9 = shl i32 3, %8, !dbg !10354
  %10 = xor i32 %9, -1, !dbg !10354
  %11 = and i32 %5, %10, !dbg !10354
  call void @llvm.dbg.value(metadata i32 %1, metadata !10085, metadata !DIExpression()) #24, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %6, metadata !10088, metadata !DIExpression()) #24, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %6, metadata !10093, metadata !DIExpression()) #24, !dbg !10363
  %12 = shl i32 %2, %8, !dbg !10354
  %13 = or i32 %11, %12, !dbg !10354
  store volatile i32 %13, i32* %4, align 4, !dbg !10354
  ret void, !dbg !10365
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10368, metadata !DIExpression()), !dbg !10371
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10372
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10372
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10372
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10369, metadata !DIExpression()), !dbg !10371
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10373
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10374
  %6 = tail call fastcc zeroext i1 @device_is_ready.74() #26, !dbg !10375
  br i1 %6, label %7, label %11, !dbg !10377

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !10378
  call void @llvm.dbg.value(metadata i32 %8, metadata !10370, metadata !DIExpression()), !dbg !10371
  %9 = icmp slt i32 %8, 0, !dbg !10379
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10381
  br label %11, !dbg !10381

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10371
  ret i32 %12, !dbg !10382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.74() unnamed_addr #1 !dbg !10383 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10387, metadata !DIExpression()), !dbg !10388
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !10389, !srcloc !10391
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.75() #26, !dbg !10392
  ret i1 %1, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10394 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10398, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i8 1, metadata !10399, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !10400, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i32 0, metadata !10401, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10402, metadata !DIExpression()), !dbg !10403
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10404
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10404
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10404
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10400, metadata !DIExpression()), !dbg !10403
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10405
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10408
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !10409
  call void @llvm.dbg.value(metadata i32 %7, metadata !10401, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i32 %7, metadata !10401, metadata !DIExpression()), !dbg !10403
  ret i32 %7, !dbg !10410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.75() unnamed_addr #1 !dbg !10411 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10413, metadata !DIExpression()), !dbg !10414
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10415
  ret i1 %1, !dbg !10416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10421, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 %1, metadata !10422, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 %2, metadata !10423, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 %3, metadata !10424, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.value(metadata i32 0, metadata !10425, metadata !DIExpression()), !dbg !10429
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !10430
  %5 = icmp eq i32 %3, 17, !dbg !10431
  br i1 %5, label %6, label %14, !dbg !10432

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10433
  call void @llvm.dbg.value(metadata i32 %7, metadata !10426, metadata !DIExpression()), !dbg !10434
  %8 = icmp eq i32 %7, 0, !dbg !10435
  %9 = shl nuw i32 1, %1, !dbg !10437
  br i1 %8, label %12, label %10, !dbg !10438

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10439
  br label %14, !dbg !10441

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !10442
  br label %14, !dbg !10445

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10446
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10449, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i8* %1, metadata !10450, metadata !DIExpression()), !dbg !10453
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10454
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10454
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10454
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10451, metadata !DIExpression()), !dbg !10453
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10455
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10455
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !10457
  %9 = icmp eq i32 %8, 0, !dbg !10457
  br i1 %9, label %12, label %10, !dbg !10458

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10459
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !10461
  br label %12, !dbg !10462

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10463
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10465
  %15 = icmp eq i32 %14, 0, !dbg !10465
  br i1 %15, label %19, label %16, !dbg !10466

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10467
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !10468
  store i8 %18, i8* %1, align 1, !dbg !10469
  br label %19, !dbg !10470

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10453
  ret i32 %20, !dbg !10471
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10474, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i8 %1, metadata !10475, metadata !DIExpression()), !dbg !10478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10479
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10479
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10476, metadata !DIExpression()), !dbg !10478
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10480

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10481
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10484
  %10 = icmp eq i32 %9, 0, !dbg !10484
  br i1 %10, label %18, label %11, !dbg !10485

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10486, !srcloc !10493
  call void @llvm.dbg.value(metadata i32 undef, metadata !10489, metadata !DIExpression()) #24, !dbg !10494
  call void @llvm.dbg.value(metadata i32 undef, metadata !10490, metadata !DIExpression()) #24, !dbg !10494
  call void @llvm.dbg.value(metadata i32 undef, metadata !10477, metadata !DIExpression()), !dbg !10478
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10495
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !10497
  %15 = icmp eq i32 %14, 0, !dbg !10497
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10486
  br i1 %15, label %17, label %19, !dbg !10498

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10489, metadata !DIExpression()) #24, !dbg !10494
  call void @llvm.dbg.value(metadata i32 %16, metadata !10477, metadata !DIExpression()), !dbg !10478
  call void @llvm.dbg.value(metadata i32 undef, metadata !10499, metadata !DIExpression()) #24, !dbg !10502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !10504, !srcloc !10505
  br label %18, !dbg !10506

18:                                               ; preds = %17, %7
  br label %7, !dbg !10481, !llvm.loop !10507

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10486
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10509
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %20, metadata !10499, metadata !DIExpression()) #24, !dbg !10511
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !10513, !srcloc !10505
  ret void, !dbg !10514
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !10515 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10517, metadata !DIExpression()), !dbg !10520
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10521
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10521
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10521
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10518, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.value(metadata i32 0, metadata !10519, metadata !DIExpression()), !dbg !10520
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10522
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10522
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10524
  %8 = icmp ne i32 %7, 0, !dbg !10524
  %9 = zext i1 %8 to i32, !dbg !10525
  call void @llvm.dbg.value(metadata i32 %9, metadata !10519, metadata !DIExpression()), !dbg !10520
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10526
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10528
  %12 = icmp eq i32 %11, 0, !dbg !10528
  %13 = or i32 %9, 2, !dbg !10529
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10529
  call void @llvm.dbg.value(metadata i32 %14, metadata !10519, metadata !DIExpression()), !dbg !10520
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10530
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !10532
  %17 = icmp eq i32 %16, 0, !dbg !10532
  %18 = or i32 %14, 4, !dbg !10533
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %19, metadata !10519, metadata !DIExpression()), !dbg !10520
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10534
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !10536
  %22 = icmp eq i32 %21, 0, !dbg !10536
  %23 = or i32 %19, 8, !dbg !10537
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10537
  call void @llvm.dbg.value(metadata i32 %24, metadata !10519, metadata !DIExpression()), !dbg !10520
  %25 = and i32 %24, 8, !dbg !10538
  %26 = icmp eq i32 %25, 0, !dbg !10538
  br i1 %26, label %29, label %27, !dbg !10540

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10541
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !10543
  br label %29, !dbg !10544

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10545
  %31 = icmp eq i32 %30, 0, !dbg !10545
  br i1 %31, label %34, label %32, !dbg !10547

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10548
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !10550
  br label %34, !dbg !10551

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10552
  %36 = icmp eq i32 %35, 0, !dbg !10552
  br i1 %36, label %39, label %37, !dbg !10554

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10555
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !10557
  br label %39, !dbg !10558

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10559
  %41 = icmp eq i32 %40, 0, !dbg !10559
  br i1 %41, label %44, label %42, !dbg !10561

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10562
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !10564
  br label %44, !dbg !10565

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10566
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !10567
  ret i32 %24, !dbg !10568
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10569 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10571, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10572, metadata !DIExpression()), !dbg !10580
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10581
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10581
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10581
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10573, metadata !DIExpression()), !dbg !10580
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10582
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10582
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10582
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10574, metadata !DIExpression()), !dbg !10580
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10583
  %10 = load i8, i8* %9, align 4, !dbg !10583
  %11 = zext i8 %10 to i32, !dbg !10584
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !10585
  call void @llvm.dbg.value(metadata i32 %12, metadata !10576, metadata !DIExpression()), !dbg !10580
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10586
  %14 = load i8, i8* %13, align 1, !dbg !10586
  %15 = zext i8 %14 to i32, !dbg !10587
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %16, metadata !10577, metadata !DIExpression()), !dbg !10580
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10589
  %18 = load i8, i8* %17, align 2, !dbg !10589
  %19 = zext i8 %18 to i32, !dbg !10590
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !10591
  call void @llvm.dbg.value(metadata i32 %20, metadata !10578, metadata !DIExpression()), !dbg !10580
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10592
  %22 = load i8, i8* %21, align 1, !dbg !10592
  %23 = zext i8 %22 to i32, !dbg !10593
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !10594
  call void @llvm.dbg.value(metadata i32 %24, metadata !10579, metadata !DIExpression()), !dbg !10580
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10595

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10597
  br i1 %26, label %69, label %27, !dbg !10599

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10600

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10601
  br i1 %29, label %65, label %30, !dbg !10601

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10603
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10580
  br i1 %31, label %38, label %34, !dbg !10605

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10606
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10606

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10609
  br i1 %37, label %38, label %69, !dbg !10610

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10611
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !10612
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !10613
  %41 = icmp eq i32 %12, %40, !dbg !10615
  br i1 %41, label %43, label %42, !dbg !10616

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !10617
  br label %43, !dbg !10619

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !10620
  %45 = icmp eq i32 %16, %44, !dbg !10622
  br i1 %45, label %47, label %46, !dbg !10623

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !10624
  br label %47, !dbg !10626

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !10627
  %49 = icmp eq i32 %20, %48, !dbg !10629
  br i1 %49, label %51, label %50, !dbg !10630

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !10631
  br label %51, !dbg !10633

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !10634
  %53 = icmp eq i32 %24, %52, !dbg !10636
  br i1 %53, label %55, label %54, !dbg !10637

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !10638
  br label %55, !dbg !10640

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10641
  %57 = load i32, i32* %56, align 4, !dbg !10641
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10643
  %59 = load i32, i32* %58, align 4, !dbg !10643
  %60 = icmp eq i32 %57, %59, !dbg !10644
  br i1 %60, label %63, label %61, !dbg !10645

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !10646
  %62 = load i32, i32* %56, align 4, !dbg !10648
  store i32 %62, i32* %58, align 4, !dbg !10649
  br label %63, !dbg !10650

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10651
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !10652
  br label %69, !dbg !10653

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10601
  %67 = and i8 %66, 1, !dbg !10601
  %68 = icmp eq i8 %67, 0, !dbg !10601
  br i1 %68, label %30, label %69, !dbg !10601

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10580
  ret i32 %70, !dbg !10654
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !10655 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10657, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10658, metadata !DIExpression()), !dbg !10660
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10661
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10661
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10661
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10659, metadata !DIExpression()), !dbg !10660
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10662
  %7 = load i32, i32* %6, align 4, !dbg !10662
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10663
  store i32 %7, i32* %8, align 4, !dbg !10664
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10665, !range !10666
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !10667
  %11 = trunc i32 %10 to i8, !dbg !10667
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10668
  store i8 %11, i8* %12, align 4, !dbg !10669
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !10670, !range !10671
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !10672
  %15 = trunc i32 %14 to i8, !dbg !10672
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10673
  store i8 %15, i8* %16, align 1, !dbg !10674
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !10675
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !10676, !range !10666
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !10677
  %20 = trunc i32 %19 to i8, !dbg !10677
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10678
  store i8 %20, i8* %21, align 2, !dbg !10679
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !10680, !range !10681
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !10682
  %24 = trunc i32 %23 to i8, !dbg !10682
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10683
  store i8 %24, i8* %25, align 1, !dbg !10684
  ret i32 0, !dbg !10685
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !10686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10688, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i8* %1, metadata !10689, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i32 %2, metadata !10690, metadata !DIExpression()), !dbg !10694
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10695
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10695
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10695
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10691, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i8 0, metadata !10692, metadata !DIExpression()), !dbg !10694
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10696
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10696
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !10698
  %10 = icmp eq i32 %9, 0, !dbg !10698
  br i1 %10, label %30, label %11, !dbg !10699

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10700, !srcloc !10493
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !10700
  call void @llvm.dbg.value(metadata i32 %13, metadata !10489, metadata !DIExpression()) #24, !dbg !10702
  call void @llvm.dbg.value(metadata i32 undef, metadata !10490, metadata !DIExpression()) #24, !dbg !10702
  call void @llvm.dbg.value(metadata i32 %13, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata i8 0, metadata !10692, metadata !DIExpression()), !dbg !10694
  %14 = icmp sgt i32 %2, 0, !dbg !10703
  br i1 %14, label %15, label %28, !dbg !10704

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !10692, metadata !DIExpression()), !dbg !10694
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10705
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !10706
  %20 = icmp eq i32 %19, 0, !dbg !10704
  br i1 %20, label %28, label %21, !dbg !10707

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10708
  %23 = add i8 %17, 1, !dbg !10710
  call void @llvm.dbg.value(metadata i8 %23, metadata !10692, metadata !DIExpression()), !dbg !10694
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !10711
  %25 = load i8, i8* %24, align 1, !dbg !10711
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !10712
  %26 = zext i8 %23 to i32, !dbg !10713
  %27 = icmp slt i32 %26, %2, !dbg !10703
  br i1 %27, label %15, label %28, !dbg !10704, !llvm.loop !10714

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !10713
  call void @llvm.dbg.value(metadata i32 %13, metadata !10499, metadata !DIExpression()) #24, !dbg !10716
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10718, !srcloc !10505
  br label %30, !dbg !10719

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !10694
  ret i32 %31, !dbg !10720
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #15 !dbg !10721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10723, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i8* %1, metadata !10724, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 %2, metadata !10725, metadata !DIExpression()), !dbg !10728
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10729
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10729
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10729
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10726, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i8 0, metadata !10727, metadata !DIExpression()), !dbg !10728
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10730
  call void @llvm.dbg.value(metadata i8 0, metadata !10727, metadata !DIExpression()), !dbg !10728
  %8 = icmp sgt i32 %2, 0, !dbg !10731
  br i1 %8, label %9, label %28, !dbg !10732

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !10727, metadata !DIExpression()), !dbg !10728
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10730
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10733
  %14 = icmp eq i32 %13, 0, !dbg !10732
  br i1 %14, label %28, label %15, !dbg !10734

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10735
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !10737
  %18 = add i8 %11, 1, !dbg !10738
  call void @llvm.dbg.value(metadata i8 %18, metadata !10727, metadata !DIExpression()), !dbg !10728
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !10739
  store i8 %17, i8* %19, align 1, !dbg !10740
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10741
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !10743
  %22 = icmp eq i32 %21, 0, !dbg !10743
  br i1 %22, label %25, label %23, !dbg !10744

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !10745
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !10747
  br label %25, !dbg !10748

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !10727, metadata !DIExpression()), !dbg !10728
  %26 = zext i8 %18 to i32, !dbg !10749
  %27 = icmp slt i32 %26, %2, !dbg !10731
  br i1 %27, label %9, label %28, !dbg !10732, !llvm.loop !10750

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !10749
  ret i32 %29, !dbg !10752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10753 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10755, metadata !DIExpression()), !dbg !10757
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10758
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10758
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10758
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10756, metadata !DIExpression()), !dbg !10757
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10759
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10759
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10760
  ret void, !dbg !10761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10764, metadata !DIExpression()), !dbg !10766
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10767
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10767
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10767
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10765, metadata !DIExpression()), !dbg !10766
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10768
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10768
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10769
  ret void, !dbg !10770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10771 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10773, metadata !DIExpression()), !dbg !10775
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10776
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10776
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10776
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10774, metadata !DIExpression()), !dbg !10775
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10777
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10777
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10778
  %8 = icmp eq i32 %7, 0, !dbg !10778
  br i1 %8, label %14, label %9, !dbg !10779

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10780
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !10781
  %12 = icmp ne i32 %11, 0, !dbg !10779
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !10782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10783 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10785, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10788
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10788
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10788
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10786, metadata !DIExpression()), !dbg !10787
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10789
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10789
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10790
  ret void, !dbg !10791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10794, metadata !DIExpression()), !dbg !10796
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10797
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10797
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10797
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10795, metadata !DIExpression()), !dbg !10796
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10798
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10798
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #17 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10803, metadata !DIExpression()), !dbg !10805
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10806
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10806
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10806
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10804, metadata !DIExpression()), !dbg !10805
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10807
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10807
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !10808
  ret i32 %7, !dbg !10809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #17 !dbg !10810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10812, metadata !DIExpression()), !dbg !10814
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10815
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10815
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10815
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10813, metadata !DIExpression()), !dbg !10814
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10816
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10816
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10817
  ret i32 %7, !dbg !10818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10819 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10821, metadata !DIExpression()), !dbg !10823
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10824
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10824
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10824
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10822, metadata !DIExpression()), !dbg !10823
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10825
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10825
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10826
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10827
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10827
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !10827

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10829
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10831
  br label %11, !dbg !10832

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10831
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10833
  ret void, !dbg !10834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #16 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10837, metadata !DIExpression()), !dbg !10839
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10840
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10840
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10840
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10838, metadata !DIExpression()), !dbg !10839
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10841
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10841
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !10842
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10843
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !10843
  switch i32 %8, label %11 [
    i32 1073821696, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
  ], !dbg !10843

9:                                                ; preds = %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !10845
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10847
  br label %11, !dbg !10848

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !10847
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !10849
  ret void, !dbg !10850
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #17 !dbg !10851 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10853, metadata !DIExpression()), !dbg !10855
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10856
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10856
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10856
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10854, metadata !DIExpression()), !dbg !10855
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10857
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10857
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !10858
  %8 = icmp eq i32 %7, 0, !dbg !10858
  br i1 %8, label %13, label %9, !dbg !10859

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10860
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !10861
  %12 = icmp eq i32 %11, 0, !dbg !10861
  br i1 %12, label %13, label %22, !dbg !10862

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10863
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !10864
  %16 = icmp eq i32 %15, 0, !dbg !10864
  br i1 %16, label %22, label %17, !dbg !10865

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10866
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !10867
  %20 = icmp ne i32 %19, 0, !dbg !10865
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !10868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !10869 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10871, metadata !DIExpression()), !dbg !10872
  ret i32 1, !dbg !10873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #8 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10876, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !10877, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.value(metadata i8* %2, metadata !10878, metadata !DIExpression()), !dbg !10880
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10881
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !10881
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !10881
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !10879, metadata !DIExpression()), !dbg !10880
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !10882
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !10883
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !10884
  store i8* %2, i8** %8, align 4, !dbg !10885
  ret void, !dbg !10886
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10887 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10892, metadata !DIExpression()), !dbg !10893
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10894
  %3 = load volatile i32, i32* %2, align 4, !dbg !10894
  %4 = lshr i32 %3, 5, !dbg !10895
  %5 = and i32 %4, 1, !dbg !10895
  ret i32 %5, !dbg !10896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10897 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10899, metadata !DIExpression()), !dbg !10900
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10901
  %3 = load volatile i32, i32* %2, align 4, !dbg !10901
  %4 = lshr i32 %3, 5, !dbg !10902
  %5 = and i32 %4, 1, !dbg !10902
  ret i32 %5, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10906, metadata !DIExpression()), !dbg !10907
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10908
  %3 = load volatile i32, i32* %2, align 4, !dbg !10908
  %4 = lshr i32 %3, 6, !dbg !10909
  %5 = and i32 %4, 1, !dbg !10909
  ret i32 %5, !dbg !10910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10911 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10913, metadata !DIExpression()), !dbg !10914
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10915
  %3 = load volatile i32, i32* %2, align 4, !dbg !10915
  %4 = lshr i32 %3, 6, !dbg !10916
  %5 = and i32 %4, 1, !dbg !10916
  ret i32 %5, !dbg !10917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10918 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10922, metadata !DIExpression()), !dbg !10923
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10924
  %3 = load volatile i32, i32* %2, align 4, !dbg !10924
  %4 = and i32 %3, -2, !dbg !10924
  store volatile i32 %4, i32* %2, align 4, !dbg !10924
  ret void, !dbg !10925
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10926 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10928, metadata !DIExpression()), !dbg !10929
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10930
  %3 = load volatile i32, i32* %2, align 4, !dbg !10930
  %4 = and i32 %3, -65, !dbg !10930
  store volatile i32 %4, i32* %2, align 4, !dbg !10930
  ret void, !dbg !10931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10932 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10934, metadata !DIExpression()), !dbg !10935
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10936
  %3 = load volatile i32, i32* %2, align 4, !dbg !10936
  %4 = and i32 %3, -257, !dbg !10936
  store volatile i32 %4, i32* %2, align 4, !dbg !10936
  ret void, !dbg !10937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10940, metadata !DIExpression()), !dbg !10941
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10942
  %3 = load volatile i32, i32* %2, align 4, !dbg !10942
  %4 = or i32 %3, 1, !dbg !10942
  store volatile i32 %4, i32* %2, align 4, !dbg !10942
  ret void, !dbg !10943
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10944 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10946, metadata !DIExpression()), !dbg !10947
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10948
  %3 = load volatile i32, i32* %2, align 4, !dbg !10948
  %4 = or i32 %3, 64, !dbg !10948
  store volatile i32 %4, i32* %2, align 4, !dbg !10948
  ret void, !dbg !10949
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10950 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10952, metadata !DIExpression()), !dbg !10953
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10954
  %3 = load volatile i32, i32* %2, align 4, !dbg !10954
  %4 = or i32 %3, 256, !dbg !10954
  store volatile i32 %4, i32* %2, align 4, !dbg !10954
  ret void, !dbg !10955
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10956 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10958, metadata !DIExpression()), !dbg !10959
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10960
  %3 = load volatile i32, i32* %2, align 4, !dbg !10960
  %4 = and i32 %3, -33, !dbg !10960
  store volatile i32 %4, i32* %2, align 4, !dbg !10960
  ret void, !dbg !10961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10962 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10964, metadata !DIExpression()), !dbg !10965
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10966
  %3 = load volatile i32, i32* %2, align 4, !dbg !10966
  %4 = or i32 %3, 32, !dbg !10966
  store volatile i32 %4, i32* %2, align 4, !dbg !10966
  ret void, !dbg !10967
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10968 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10970, metadata !DIExpression()), !dbg !10971
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10972
  %3 = load volatile i32, i32* %2, align 4, !dbg !10972
  %4 = lshr i32 %3, 7, !dbg !10973
  %5 = and i32 %4, 1, !dbg !10973
  ret i32 %5, !dbg !10974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10975 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10977, metadata !DIExpression()), !dbg !10978
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10979
  %3 = load volatile i32, i32* %2, align 4, !dbg !10979
  %4 = and i32 %3, -65, !dbg !10979
  store volatile i32 %4, i32* %2, align 4, !dbg !10979
  ret void, !dbg !10980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10981 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10983, metadata !DIExpression()), !dbg !10984
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10985
  %3 = load volatile i32, i32* %2, align 4, !dbg !10985
  %4 = or i32 %3, 64, !dbg !10985
  store volatile i32 %4, i32* %2, align 4, !dbg !10985
  ret void, !dbg !10986
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10987 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10991, metadata !DIExpression()), !dbg !10992
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10993
  %3 = load volatile i32, i32* %2, align 4, !dbg !10993
  %4 = trunc i32 %3 to i8, !dbg !10994
  ret i8 %4, !dbg !10995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10996 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10998, metadata !DIExpression()), !dbg !10999
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11000
  %3 = load volatile i32, i32* %2, align 4, !dbg !11000
  %4 = lshr i32 %3, 3, !dbg !11001
  %5 = and i32 %4, 1, !dbg !11001
  ret i32 %5, !dbg !11002
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11003 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11005, metadata !DIExpression()), !dbg !11007
  %3 = bitcast i32* %2 to i8*, !dbg !11008
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11008
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11006, metadata !DIExpression()), !dbg !11009
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11010
  %5 = load volatile i32, i32* %4, align 4, !dbg !11010
  store volatile i32 %5, i32* %2, align 4, !dbg !11011
  %6 = load volatile i32, i32* %2, align 4, !dbg !11012
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11013
  %8 = load volatile i32, i32* %7, align 4, !dbg !11013
  store volatile i32 %8, i32* %2, align 4, !dbg !11014
  %9 = load volatile i32, i32* %2, align 4, !dbg !11015
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11016
  ret void, !dbg !11016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !11017 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11021, metadata !DIExpression()), !dbg !11023
  call void @llvm.dbg.value(metadata i8 %1, metadata !11022, metadata !DIExpression()), !dbg !11023
  %3 = zext i8 %1 to i32, !dbg !11024
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11025
  store volatile i32 %3, i32* %4, align 4, !dbg !11026
  ret void, !dbg !11027
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11032, metadata !DIExpression()), !dbg !11034
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11035
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11035
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11035
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11033, metadata !DIExpression()), !dbg !11034
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11036
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11036
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !11037
  ret i32 %7, !dbg !11038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !11039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11043, metadata !DIExpression()), !dbg !11044
  %2 = icmp eq i32 %0, 1024, !dbg !11045
  %3 = select i1 %2, i32 2, i32 0, !dbg !11045
  %4 = icmp eq i32 %0, 1536, !dbg !11045
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11045
  ret i32 %5, !dbg !11046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11049, metadata !DIExpression()), !dbg !11051
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11052
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11052
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11052
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11050, metadata !DIExpression()), !dbg !11051
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11053
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11053
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !11054
  ret i32 %7, !dbg !11055
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !11056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11060, metadata !DIExpression()), !dbg !11061
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11062
  %3 = icmp ult i32 %2, 4, !dbg !11062
  br i1 %3, label %4, label %7, !dbg !11062

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11062
  %6 = load i32, i32* %5, align 4, !dbg !11062
  br label %7, !dbg !11062

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11063
  ret i32 %8, !dbg !11065
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11068, metadata !DIExpression()), !dbg !11070
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11071
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11071
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11071
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11069, metadata !DIExpression()), !dbg !11070
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11072
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11072
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !11073
  ret i32 %7, !dbg !11074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11079, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.value(metadata i32 %1, metadata !11080, metadata !DIExpression()), !dbg !11081
  %3 = icmp eq i32 %0, 4096, !dbg !11082
  %4 = icmp eq i32 %1, 0, !dbg !11082
  %5 = select i1 %4, i32 4, i32 3, !dbg !11082
  %6 = select i1 %4, i32 3, i32 2, !dbg !11082
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11082
  ret i32 %7, !dbg !11083
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !11084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11086, metadata !DIExpression()), !dbg !11088
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11089
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11089
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11089
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11087, metadata !DIExpression()), !dbg !11088
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11090
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11090
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !11091
  ret i32 %7, !dbg !11092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11097, metadata !DIExpression()), !dbg !11098
  %2 = icmp eq i32 %0, 768, !dbg !11099
  %3 = zext i1 %2 to i32, !dbg !11098
  ret i32 %3, !dbg !11101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11102 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11104, metadata !DIExpression()), !dbg !11105
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11106
  %3 = load volatile i32, i32* %2, align 4, !dbg !11106
  %4 = and i32 %3, 768, !dbg !11106
  ret i32 %4, !dbg !11107
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11108 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11110, metadata !DIExpression()), !dbg !11111
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11112
  %3 = load volatile i32, i32* %2, align 4, !dbg !11112
  %4 = and i32 %3, 4096, !dbg !11112
  ret i32 %4, !dbg !11113
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11114 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11116, metadata !DIExpression()), !dbg !11117
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11118
  %3 = load volatile i32, i32* %2, align 4, !dbg !11118
  %4 = and i32 %3, 12288, !dbg !11118
  ret i32 %4, !dbg !11119
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11120 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11122, metadata !DIExpression()), !dbg !11123
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11124
  %3 = load volatile i32, i32* %2, align 4, !dbg !11124
  %4 = and i32 %3, 1536, !dbg !11124
  ret i32 %4, !dbg !11125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !11126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11130, metadata !DIExpression()), !dbg !11131
  %2 = icmp eq i32 %0, 2, !dbg !11132
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11132
  %4 = icmp eq i32 %0, 1, !dbg !11132
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11132
  ret i32 %5, !dbg !11133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11138, metadata !DIExpression()), !dbg !11139
  %2 = icmp ult i32 %0, 3, !dbg !11140
  br i1 %2, label %3, label %6, !dbg !11140

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11140
  %5 = load i32, i32* %4, align 4, !dbg !11140
  br label %6, !dbg !11140

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11141
  ret i32 %7, !dbg !11143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !11144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11148, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32 %1, metadata !11149, metadata !DIExpression()), !dbg !11150
  %3 = icmp eq i32 %0, 4, !dbg !11151
  %4 = icmp eq i32 %1, 0, !dbg !11151
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11151
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11151
  ret i32 %6, !dbg !11152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !11153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11157, metadata !DIExpression()), !dbg !11158
  %2 = icmp eq i32 %0, 1, !dbg !11159
  %3 = select i1 %2, i32 768, i32 0, !dbg !11158
  ret i32 %3, !dbg !11161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11162 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11164, metadata !DIExpression()), !dbg !11165
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11166
  %3 = load volatile i32, i32* %2, align 4, !dbg !11166
  %4 = and i32 %3, -8193, !dbg !11166
  store volatile i32 %4, i32* %2, align 4, !dbg !11166
  ret void, !dbg !11167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11168 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11172, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.value(metadata i32 %1, metadata !11173, metadata !DIExpression()), !dbg !11175
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11176
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11176
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11174, metadata !DIExpression()), !dbg !11175
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11177
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11177
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11178
  ret void, !dbg !11179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11182, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.value(metadata i32 %1, metadata !11183, metadata !DIExpression()), !dbg !11185
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11186
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11186
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11186
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11184, metadata !DIExpression()), !dbg !11185
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11187
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11187
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11188
  ret void, !dbg !11189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11192, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.value(metadata i32 %1, metadata !11193, metadata !DIExpression()), !dbg !11195
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11196
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11196
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11196
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11194, metadata !DIExpression()), !dbg !11195
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11197
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11197
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11198
  ret void, !dbg !11199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #16 !dbg !11200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11202, metadata !DIExpression()), !dbg !11205
  call void @llvm.dbg.value(metadata i32 %1, metadata !11203, metadata !DIExpression()), !dbg !11205
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11206
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11206
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11206
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11204, metadata !DIExpression()), !dbg !11205
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11207
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11207
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !11208
  ret void, !dbg !11209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11210 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11212, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i32 %1, metadata !11213, metadata !DIExpression()), !dbg !11217
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11218
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11218
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11218
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11214, metadata !DIExpression()), !dbg !11217
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11219
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11219
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11215, metadata !DIExpression()), !dbg !11217
  %10 = bitcast i32* %3 to i8*, !dbg !11220
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11220
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11221
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11221
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11225
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11225
  %15 = load i8*, i8** %14, align 4, !dbg !11225
  call void @llvm.dbg.value(metadata i32* %3, metadata !11216, metadata !DIExpression(DW_OP_deref)), !dbg !11217
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !11226
  %17 = icmp slt i32 %16, 0, !dbg !11227
  br i1 %17, label %23, label %18, !dbg !11228

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11229
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11229
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !11230
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !11231
  %22 = load i32, i32* %3, align 4, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %22, metadata !11216, metadata !DIExpression()), !dbg !11217
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !11233
  br label %23, !dbg !11234

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24, !dbg !11234
  ret void, !dbg !11234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11235 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11237, metadata !DIExpression()), !dbg !11238
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11239
  %3 = load volatile i32, i32* %2, align 4, !dbg !11239
  %4 = or i32 %3, 8192, !dbg !11239
  store volatile i32 %4, i32* %2, align 4, !dbg !11239
  ret void, !dbg !11240
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11243, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.value(metadata i8* %1, metadata !11244, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.value(metadata i32* %2, metadata !11245, metadata !DIExpression()), !dbg !11247
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11248
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11248
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11248
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11246, metadata !DIExpression()), !dbg !11247
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11249
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11249
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11251
  br i1 %9, label %12, label %10, !dbg !11252

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11253
  br label %12, !dbg !11254

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11247
  ret i32 %13, !dbg !11255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11256 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11260, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.value(metadata i32 0, metadata !11261, metadata !DIExpression()), !dbg !11262
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11263
  %3 = load volatile i32, i32* %2, align 4, !dbg !11263
  %4 = and i32 %3, -32769, !dbg !11263
  store volatile i32 %4, i32* %2, align 4, !dbg !11263
  ret void, !dbg !11264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11265 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11269, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata i32 %1, metadata !11270, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata i32 0, metadata !11271, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata i32 %2, metadata !11272, metadata !DIExpression()), !dbg !11273
  %4 = mul i32 %1, 25, !dbg !11274
  %5 = shl i32 %2, 2, !dbg !11274
  %6 = udiv i32 %4, %5, !dbg !11274
  %7 = udiv i32 %6, 100, !dbg !11274
  %8 = shl nuw nsw i32 %7, 4, !dbg !11274
  %9 = mul i32 %7, -100, !dbg !11274
  %10 = add i32 %9, %6, !dbg !11274
  %11 = shl i32 %10, 4, !dbg !11274
  %12 = add i32 %11, 50, !dbg !11274
  %13 = udiv i32 %12, 100, !dbg !11274
  %14 = and i32 %13, 240, !dbg !11274
  %15 = add nuw nsw i32 %14, %8, !dbg !11274
  %16 = and i32 %13, 15, !dbg !11274
  %17 = and i32 %15, 65520, !dbg !11277
  %18 = or i32 %17, %16, !dbg !11277
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11278
  store volatile i32 %18, i32* %19, align 4, !dbg !11279
  ret void, !dbg !11280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11281 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11283, metadata !DIExpression()), !dbg !11285
  call void @llvm.dbg.value(metadata i32 %1, metadata !11284, metadata !DIExpression()), !dbg !11285
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11286
  %4 = load volatile i32, i32* %3, align 4, !dbg !11286
  %5 = and i32 %4, -769, !dbg !11286
  %6 = or i32 %5, %1, !dbg !11286
  store volatile i32 %6, i32* %3, align 4, !dbg !11286
  ret void, !dbg !11287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11290, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.value(metadata i32 %1, metadata !11291, metadata !DIExpression()), !dbg !11292
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11293
  %4 = load volatile i32, i32* %3, align 4, !dbg !11293
  %5 = and i32 %4, -4097, !dbg !11293
  %6 = or i32 %5, %1, !dbg !11293
  store volatile i32 %6, i32* %3, align 4, !dbg !11293
  ret void, !dbg !11294
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11295 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11297, metadata !DIExpression()), !dbg !11299
  call void @llvm.dbg.value(metadata i32 %1, metadata !11298, metadata !DIExpression()), !dbg !11299
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11300
  %4 = load volatile i32, i32* %3, align 4, !dbg !11300
  %5 = and i32 %4, -12289, !dbg !11300
  %6 = or i32 %5, %1, !dbg !11300
  store volatile i32 %6, i32* %3, align 4, !dbg !11300
  ret void, !dbg !11301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !11302 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11304, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 %1, metadata !11305, metadata !DIExpression()), !dbg !11306
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11307
  %4 = load volatile i32, i32* %3, align 4, !dbg !11307
  %5 = and i32 %4, -1537, !dbg !11307
  %6 = or i32 %5, %1, !dbg !11307
  store volatile i32 %6, i32* %3, align 4, !dbg !11307
  ret void, !dbg !11308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11309 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11311, metadata !DIExpression()), !dbg !11312
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11313
  %3 = load volatile i32, i32* %2, align 4, !dbg !11313
  %4 = and i32 %3, 1, !dbg !11313
  ret i32 %4, !dbg !11314
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11315 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11317, metadata !DIExpression()), !dbg !11318
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11319
  %3 = load volatile i32, i32* %2, align 4, !dbg !11319
  %4 = lshr i32 %3, 1, !dbg !11320
  %5 = and i32 %4, 1, !dbg !11320
  ret i32 %5, !dbg !11321
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !11322 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11324, metadata !DIExpression()), !dbg !11325
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11326
  %3 = load volatile i32, i32* %2, align 4, !dbg !11326
  %4 = lshr i32 %3, 8, !dbg !11327
  %5 = and i32 %4, 1, !dbg !11327
  ret i32 %5, !dbg !11328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11329 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11331, metadata !DIExpression()), !dbg !11332
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11333
  store volatile i32 -257, i32* %2, align 4, !dbg !11333
  ret void, !dbg !11334
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11335 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11337, metadata !DIExpression()), !dbg !11339
  %3 = bitcast i32* %2 to i8*, !dbg !11340
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11340
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11338, metadata !DIExpression()), !dbg !11341
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11342
  %5 = load volatile i32, i32* %4, align 4, !dbg !11342
  store volatile i32 %5, i32* %2, align 4, !dbg !11343
  %6 = load volatile i32, i32* %2, align 4, !dbg !11344
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11345
  %8 = load volatile i32, i32* %7, align 4, !dbg !11345
  store volatile i32 %8, i32* %2, align 4, !dbg !11346
  %9 = load volatile i32, i32* %2, align 4, !dbg !11347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11348
  ret void, !dbg !11348
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11349 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11351, metadata !DIExpression()), !dbg !11353
  %3 = bitcast i32* %2 to i8*, !dbg !11354
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11354
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11352, metadata !DIExpression()), !dbg !11355
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11356
  %5 = load volatile i32, i32* %4, align 4, !dbg !11356
  store volatile i32 %5, i32* %2, align 4, !dbg !11357
  %6 = load volatile i32, i32* %2, align 4, !dbg !11358
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11359
  %8 = load volatile i32, i32* %7, align 4, !dbg !11359
  store volatile i32 %8, i32* %2, align 4, !dbg !11360
  %9 = load volatile i32, i32* %2, align 4, !dbg !11361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11362
  ret void, !dbg !11362
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11363 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11365, metadata !DIExpression()), !dbg !11367
  %3 = bitcast i32* %2 to i8*, !dbg !11368
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11368
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11366, metadata !DIExpression()), !dbg !11369
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11370
  %5 = load volatile i32, i32* %4, align 4, !dbg !11370
  store volatile i32 %5, i32* %2, align 4, !dbg !11371
  %6 = load volatile i32, i32* %2, align 4, !dbg !11372
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11373
  %8 = load volatile i32, i32* %7, align 4, !dbg !11373
  store volatile i32 %8, i32* %2, align 4, !dbg !11374
  %9 = load volatile i32, i32* %2, align 4, !dbg !11375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11376
  ret void, !dbg !11376
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1678 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1680, metadata !DIExpression()), !dbg !11377
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #25, !dbg !11378
  tail call void @arch_irq_enable(i32 noundef 38) #25, !dbg !11380
  ret void, !dbg !11380
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1729, metadata !DIExpression()), !dbg !11381
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #25, !dbg !11382
  tail call void @arch_irq_enable(i32 noundef 37) #25, !dbg !11384
  ret void, !dbg !11384
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !11385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11387, metadata !DIExpression()), !dbg !11389
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11390
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11390
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11390
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11388, metadata !DIExpression()), !dbg !11389
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !11391
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !11391
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !11393
  br i1 %7, label %11, label %8, !dbg !11394

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !11395
  %10 = load i8*, i8** %9, align 4, !dbg !11395
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !11397
  br label %11, !dbg !11398

11:                                               ; preds = %8, %1
  ret void, !dbg !11399
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !11400 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11402, metadata !DIExpression()), !dbg !11408
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11409
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11409
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11409
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11403, metadata !DIExpression()), !dbg !11408
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11410
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11410
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11410
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11404, metadata !DIExpression()), !dbg !11408
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !11411
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11412
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11412
  %10 = tail call fastcc zeroext i1 @device_is_ready.81(%struct.device* noundef %9) #26, !dbg !11414
  br i1 %10, label %11, label %51, !dbg !11415

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !11416
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11417
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11417
  %15 = load i8*, i8** %14, align 4, !dbg !11417
  %16 = tail call fastcc i32 @clock_control_on.82(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !11418
  call void @llvm.dbg.value(metadata i32 %16, metadata !11407, metadata !DIExpression()), !dbg !11408
  %17 = icmp eq i32 %16, 0, !dbg !11419
  br i1 %17, label %18, label %51, !dbg !11421

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11422
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !11422
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !11423
  call void @llvm.dbg.value(metadata i32 %21, metadata !11407, metadata !DIExpression()), !dbg !11408
  %22 = icmp slt i32 %21, 0, !dbg !11424
  br i1 %22, label %51, label %23, !dbg !11426

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11427
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11427
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !11428
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11429
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !11430
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11431
  %28 = load i32, i32* %27, align 4, !dbg !11431
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !11433

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !11405, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 4096, metadata !11406, metadata !DIExpression()), !dbg !11408
  br label %31, !dbg !11434

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !11405, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 0, metadata !11406, metadata !DIExpression()), !dbg !11408
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !11437
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !11437
  call void @llvm.dbg.value(metadata i32 %33, metadata !11406, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.value(metadata i32 %32, metadata !11405, metadata !DIExpression()), !dbg !11408
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11438
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !11439
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11440
  %36 = load i8, i8* %35, align 4, !dbg !11440, !range !7118
  %37 = icmp eq i8 %36, 0, !dbg !11440
  br i1 %37, label %39, label %38, !dbg !11442

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !11443
  br label %39, !dbg !11445

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11446
  %41 = load i32, i32* %40, align 4, !dbg !11446
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !11447
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11448
  %43 = load i8, i8* %42, align 4, !dbg !11448, !range !7118
  %44 = icmp eq i8 %43, 0, !dbg !11448
  br i1 %44, label %47, label %45, !dbg !11450

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11451
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !11453
  br label %47, !dbg !11454

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !11455
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !11456
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !11457
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !11457
  tail call void %50(%struct.device* noundef nonnull %0) #25, !dbg !11458
  br label %51, !dbg !11459

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !11408
  ret i32 %52, !dbg !11460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11461 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11463, metadata !DIExpression()), !dbg !11467
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11468
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11468
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11468
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11464, metadata !DIExpression()), !dbg !11467
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11465, metadata !DIExpression()), !dbg !11467
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11469
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11470
  ret void, !dbg !11471
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.81(%struct.device* noundef %0) unnamed_addr #1 !dbg !11472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11476, metadata !DIExpression()), !dbg !11477
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11478, !srcloc !11480
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.83(%struct.device* noundef %0) #26, !dbg !11481
  ret i1 %2, !dbg !11482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.82(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11485, metadata !DIExpression()), !dbg !11488
  call void @llvm.dbg.value(metadata i8* %1, metadata !11486, metadata !DIExpression()), !dbg !11488
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11489
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11489
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11489
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11487, metadata !DIExpression()), !dbg !11488
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11490
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11490
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11491
  ret i32 %8, !dbg !11492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11493 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11497, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.value(metadata i8 0, metadata !11498, metadata !DIExpression()), !dbg !11501
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11502
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11502
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11500, metadata !DIExpression(DW_OP_deref)), !dbg !11501
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11503
  call void @llvm.dbg.value(metadata i32 %4, metadata !11499, metadata !DIExpression()), !dbg !11501
  %5 = icmp slt i32 %4, 0, !dbg !11504
  br i1 %5, label %9, label %6, !dbg !11506

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11507
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11500, metadata !DIExpression()), !dbg !11501
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !11508
  br label %9, !dbg !11509

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11501
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !11510
  ret i32 %10, !dbg !11510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11513, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.value(metadata i32 12, metadata !11514, metadata !DIExpression()), !dbg !11515
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11516
  %3 = load volatile i32, i32* %2, align 4, !dbg !11516
  %4 = or i32 %3, 12, !dbg !11516
  store volatile i32 %4, i32* %2, align 4, !dbg !11516
  ret void, !dbg !11517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !11518 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11520, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %1, metadata !11521, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 %2, metadata !11522, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 0, metadata !11523, metadata !DIExpression()), !dbg !11524
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11525
  %5 = load volatile i32, i32* %4, align 4, !dbg !11525
  %6 = and i32 %5, -5633, !dbg !11525
  %7 = or i32 %2, %1, !dbg !11525
  %8 = or i32 %7, %6, !dbg !11525
  store volatile i32 %8, i32* %4, align 4, !dbg !11525
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11526
  %10 = load volatile i32, i32* %9, align 4, !dbg !11526
  %11 = and i32 %10, -12289, !dbg !11526
  store volatile i32 %11, i32* %9, align 4, !dbg !11526
  ret void, !dbg !11527
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11528 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11530, metadata !DIExpression()), !dbg !11531
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11532
  %3 = load volatile i32, i32* %2, align 4, !dbg !11532
  %4 = or i32 %3, 8, !dbg !11532
  store volatile i32 %4, i32* %2, align 4, !dbg !11532
  ret void, !dbg !11533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11534 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11538, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11539, metadata !DIExpression()), !dbg !11541
  call void @llvm.dbg.value(metadata i32 0, metadata !11540, metadata !DIExpression()), !dbg !11541
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11542
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11542
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11543
  %5 = load i8, i8* %4, align 4, !dbg !11543
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11544
  ret i32 %6, !dbg !11545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.83(%struct.device* noundef %0) unnamed_addr #1 !dbg !11546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11548, metadata !DIExpression()), !dbg !11549
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11550
  ret i1 %2, !dbg !11551
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #16 !dbg !11552 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11554, metadata !DIExpression()), !dbg !11555
  tail call fastcc void @__NVIC_SetPriority.85() #26, !dbg !11556
  store i32 3199, i32* @last_load, align 4, !dbg !11557
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11558
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11559
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11560
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11561
  %3 = or i32 %2, 7, !dbg !11561
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11561
  ret i32 0, !dbg !11562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.85() unnamed_addr #16 !dbg !11563 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11565, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.value(metadata i32 1, metadata !11566, metadata !DIExpression()), !dbg !11567
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11568
  ret void, !dbg !11571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11574, metadata !DIExpression()), !dbg !11576
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !11577
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11578
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11579
  %5 = add i32 %4, %3, !dbg !11579
  store i32 %5, i32* @cycle_count, align 4, !dbg !11579
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11580
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11581
  %7 = sub i32 %5, %6, !dbg !11584
  %8 = udiv i32 %7, 3200, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %8, metadata !11575, metadata !DIExpression()), !dbg !11576
  %9 = mul nuw i32 %8, 3200, !dbg !11586
  %10 = add i32 %9, %6, !dbg !11587
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11587
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11588
  tail call void @z_arm_int_exit() #25, !dbg !11589
  ret void, !dbg !11590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #16 !dbg !11591 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11596
  call void @llvm.dbg.value(metadata i32 %1, metadata !11593, metadata !DIExpression()), !dbg !11597
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11598
  call void @llvm.dbg.value(metadata i32 %2, metadata !11594, metadata !DIExpression()), !dbg !11597
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11599
  call void @llvm.dbg.value(metadata i32 %3, metadata !11595, metadata !DIExpression()), !dbg !11597
  %4 = and i32 %2, 65536, !dbg !11600
  %5 = icmp ne i32 %4, 0, !dbg !11600
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11602
  %8 = load i32, i32* @last_load, align 4, !dbg !11597
  br i1 %7, label %9, label %13, !dbg !11602

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11603
  %11 = add i32 %10, %8, !dbg !11603
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11603
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11605
  br label %13, !dbg !11606

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11607
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11608
  %16 = add i32 %14, %15, !dbg !11609
  ret i32 %16, !dbg !11610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11615, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i1 %1, metadata !11616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11628
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11629
  br i1 %4, label %5, label %8, !dbg !11629

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11631
  %7 = and i32 %6, -2, !dbg !11631
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11631
  store i32 -16777216, i32* @last_load, align 4, !dbg !11633
  br label %54, !dbg !11634

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %9, metadata !11620, metadata !DIExpression()), !dbg !11628
  br i1 %3, label %18, label %10, !dbg !11636

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11636
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()), !dbg !11628
  %12 = icmp slt i32 %11, 1, !dbg !11637
  br i1 %12, label %18, label %13, !dbg !11637

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !11637
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !11637
  %16 = mul nuw nsw i32 %15, 3200, !dbg !11637
  %17 = add nuw nsw i32 %16, 3199, !dbg !11637
  br label %18, !dbg !11637

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11615, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11638, metadata !DIExpression()) #24, !dbg !11645
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11647, !srcloc !11653
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !11647
  call void @llvm.dbg.value(metadata i32 %21, metadata !11650, metadata !DIExpression()) #24, !dbg !11654
  call void @llvm.dbg.value(metadata i32 undef, metadata !11651, metadata !DIExpression()) #24, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %21, metadata !11644, metadata !DIExpression()) #24, !dbg !11645
  call void @llvm.dbg.value(metadata i32 %21, metadata !11621, metadata !DIExpression()), !dbg !11628
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %22, metadata !11626, metadata !DIExpression()), !dbg !11628
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %23, metadata !11618, metadata !DIExpression()), !dbg !11628
  %24 = load i32, i32* @cycle_count, align 4, !dbg !11657
  %25 = add i32 %24, %22, !dbg !11657
  store i32 %25, i32* @cycle_count, align 4, !dbg !11657
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11658
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !11659
  %27 = sub i32 %25, %26, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %27, metadata !11627, metadata !DIExpression()), !dbg !11628
  %28 = icmp slt i32 %27, 0, !dbg !11661
  br i1 %28, label %38, label %29, !dbg !11663

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11628
  %30 = add nuw i32 %19, %27, !dbg !11664
  %31 = urem i32 %30, 3200, !dbg !11666
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !11617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11628
  %32 = sub nuw nsw i32 %19, %31, !dbg !11667
  call void @llvm.dbg.value(metadata i32 %32, metadata !11617, metadata !DIExpression()), !dbg !11628
  %33 = icmp ugt i32 %32, 1024, !dbg !11668
  br i1 %33, label %34, label %36, !dbg !11668

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !11617, metadata !DIExpression()), !dbg !11628
  %35 = icmp ugt i32 %32, 16771200, !dbg !11669
  br i1 %35, label %38, label %36, !dbg !11671

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !11672
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11673
  call void @llvm.dbg.value(metadata i32 %40, metadata !11619, metadata !DIExpression()), !dbg !11628
  %41 = add nsw i32 %39, -1, !dbg !11674
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11675
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11676
  %42 = icmp ult i32 %23, %40, !dbg !11677
  br i1 %42, label %43, label %48, !dbg !11679

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !11680
  %45 = add i32 %23, %9, !dbg !11682
  %46 = sub i32 %45, %40, !dbg !11683
  %47 = add i32 %46, %44, !dbg !11680
  br label %52, !dbg !11684

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !11685
  %50 = load i32, i32* @cycle_count, align 4, !dbg !11687
  %51 = add i32 %49, %50, !dbg !11687
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !11688
  store i32 %53, i32* @cycle_count, align 4, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %21, metadata !11689, metadata !DIExpression()) #24, !dbg !11695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11694, metadata !DIExpression()) #24, !dbg !11695
  call void @llvm.dbg.value(metadata i32 %21, metadata !11697, metadata !DIExpression()) #24, !dbg !11700
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #24, !dbg !11702, !srcloc !11703
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !11704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11705 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11638, metadata !DIExpression()) #24, !dbg !11709
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11711, !srcloc !11653
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %2, metadata !11650, metadata !DIExpression()) #24, !dbg !11713
  call void @llvm.dbg.value(metadata i32 undef, metadata !11651, metadata !DIExpression()) #24, !dbg !11713
  call void @llvm.dbg.value(metadata i32 %2, metadata !11644, metadata !DIExpression()) #24, !dbg !11709
  call void @llvm.dbg.value(metadata i32 %2, metadata !11707, metadata !DIExpression()), !dbg !11714
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11715
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11716
  %5 = add i32 %4, %3, !dbg !11717
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11718
  %7 = sub i32 %5, %6, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %7, metadata !11708, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.value(metadata i32 %2, metadata !11689, metadata !DIExpression()) #24, !dbg !11720
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11694, metadata !DIExpression()) #24, !dbg !11720
  call void @llvm.dbg.value(metadata i32 %2, metadata !11697, metadata !DIExpression()) #24, !dbg !11722
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11724, !srcloc !11703
  %8 = udiv i32 %7, 3200, !dbg !11725
  ret i32 %8, !dbg !11726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11727 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11638, metadata !DIExpression()) #24, !dbg !11731
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11733, !srcloc !11653
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !11733
  call void @llvm.dbg.value(metadata i32 %2, metadata !11650, metadata !DIExpression()) #24, !dbg !11735
  call void @llvm.dbg.value(metadata i32 undef, metadata !11651, metadata !DIExpression()) #24, !dbg !11735
  call void @llvm.dbg.value(metadata i32 %2, metadata !11644, metadata !DIExpression()) #24, !dbg !11731
  call void @llvm.dbg.value(metadata i32 %2, metadata !11729, metadata !DIExpression()), !dbg !11736
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !11737
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11738
  %5 = add i32 %4, %3, !dbg !11739
  call void @llvm.dbg.value(metadata i32 %5, metadata !11730, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.value(metadata i32 %2, metadata !11689, metadata !DIExpression()) #24, !dbg !11740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11694, metadata !DIExpression()) #24, !dbg !11740
  call void @llvm.dbg.value(metadata i32 %2, metadata !11697, metadata !DIExpression()) #24, !dbg !11742
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !11744, !srcloc !11703
  ret i32 %5, !dbg !11745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #16 !dbg !11746 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11747
  %2 = icmp eq i32 %1, -16777216, !dbg !11749
  br i1 %2, label %3, label %6, !dbg !11750

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11751
  %5 = or i32 %4, 1, !dbg !11751
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11751
  br label %6, !dbg !11753

6:                                                ; preds = %3, %0
  ret void, !dbg !11754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #16 !dbg !11755 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11756
  %2 = and i32 %1, -2, !dbg !11756
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11756
  ret void, !dbg !11757
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11758 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11784, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i8 %1, metadata !11785, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11786, metadata !DIExpression()), !dbg !11787
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11788
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11788
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11787
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11789
  %8 = load i8, i8* %6, align 4, !dbg !11790
  %9 = zext i8 %8 to i32, !dbg !11791
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11791
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11792
  br i1 %11, label %18, label %24, !dbg !11793

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11787
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11789
  %14 = load i8, i8* %6, align 4, !dbg !11790
  %15 = zext i8 %14 to i32, !dbg !11791
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11791
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11792
  br i1 %17, label %18, label %24, !dbg !11793, !llvm.loop !11794

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11796
  %21 = load i8, i8* %20, align 1, !dbg !11796
  %22 = icmp eq i8 %21, %1, !dbg !11799
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11800
  br i1 %22, label %24, label %12, !dbg !11801

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11787
  ret i32 %25, !dbg !11802
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11803 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11814, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i8 %1, metadata !11815, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 %2, metadata !11816, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 0, metadata !11819, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i32 0, metadata !11820, metadata !DIExpression()), !dbg !11830
  call void @llvm.dbg.value(metadata i8 0, metadata !11821, metadata !DIExpression()), !dbg !11831
  %4 = icmp eq i8 %1, 0, !dbg !11832
  br i1 %4, label %35, label %5, !dbg !11833

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11832
  br label %9, !dbg !11833

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11821, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 %29, metadata !11819, metadata !DIExpression()), !dbg !11830
  %8 = icmp eq i32 %34, %6, !dbg !11832
  br i1 %8, label %35, label %9, !dbg !11833, !llvm.loop !11834

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11821, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.value(metadata i32 %11, metadata !11819, metadata !DIExpression()), !dbg !11830
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11836
  %13 = load i32, i32* %12, align 4, !dbg !11836
  call void @llvm.dbg.value(metadata i32 %13, metadata !11818, metadata !DIExpression()), !dbg !11830
  %14 = and i32 %13, 31, !dbg !11837
  %15 = icmp ult i32 %14, 16, !dbg !11838
  br i1 %15, label %16, label %20, !dbg !11839

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11840
  %18 = load i32, i32* %17, align 4, !dbg !11840
  %19 = or i32 %18, 32, !dbg !11842
  call void @llvm.dbg.value(metadata i32 %19, metadata !11819, metadata !DIExpression()), !dbg !11830
  br label %28, !dbg !11843

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11844

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11845
  %23 = load i32, i32* %22, align 4, !dbg !11845
  call void @llvm.dbg.value(metadata i32 %23, metadata !11823, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11846
  %24 = lshr i32 %23, 7, !dbg !11847
  %25 = and i32 %24, 16, !dbg !11847
  %26 = or i32 %25, %23, !dbg !11847
  call void @llvm.dbg.value(metadata i32 %26, metadata !11819, metadata !DIExpression()), !dbg !11830
  br label %28, !dbg !11848

27:                                               ; preds = %20
  br label %28, !dbg !11849

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !11830
  call void @llvm.dbg.value(metadata i32 %29, metadata !11819, metadata !DIExpression()), !dbg !11830
  %30 = lshr i32 %13, 5, !dbg !11849
  %31 = and i32 %30, 255, !dbg !11849
  call void @llvm.dbg.value(metadata i32 %31, metadata !11817, metadata !DIExpression()), !dbg !11830
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %32, metadata !11820, metadata !DIExpression()), !dbg !11830
  %33 = icmp slt i32 %32, 0, !dbg !11851
  %34 = add nuw nsw i32 %10, 1, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %34, metadata !11821, metadata !DIExpression()), !dbg !11831
  br i1 %33, label %35, label %7, !dbg !11854

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11855
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11860, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 %1, metadata !11861, metadata !DIExpression()), !dbg !11864
  call void @llvm.dbg.value(metadata i32 %2, metadata !11862, metadata !DIExpression()), !dbg !11864
  %4 = icmp ugt i32 %0, 175, !dbg !11865
  br i1 %4, label %17, label %5, !dbg !11867

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11868
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11869
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11869
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11863, metadata !DIExpression()), !dbg !11864
  %9 = lshr i32 1888, %6, !dbg !11870
  %10 = and i32 %9, 1, !dbg !11870
  %11 = icmp eq i32 %10, 0, !dbg !11870
  br i1 %11, label %12, label %17, !dbg !11872

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.90(%struct.device* noundef %8) #26, !dbg !11873
  br i1 %13, label %14, label %17, !dbg !11874

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !11875
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !11876
  br label %17, !dbg !11877

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !11864
  ret i32 %18, !dbg !11878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.90(%struct.device* noundef %0) unnamed_addr #1 !dbg !11879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11883, metadata !DIExpression()), !dbg !11884
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !11885, !srcloc !11887
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.91(%struct.device* noundef %0) #26, !dbg !11888
  ret i1 %2, !dbg !11889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.91(%struct.device* noundef %0) unnamed_addr #1 !dbg !11890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11892, metadata !DIExpression()), !dbg !11893
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11894
  ret i1 %2, !dbg !11895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !11896 {
  ret void, !dbg !11897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !11898 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11900, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11901, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11902, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11903, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.value(metadata i32 0, metadata !11904, metadata !DIExpression()), !dbg !11905
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11906
  call void @llvm.dbg.value(metadata i32 %1, metadata !11900, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11905
  %2 = lshr i32 %1, 2, !dbg !11907
  %3 = and i32 %2, 3, !dbg !11907
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11907

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11908
  %6 = lshr i32 %5, 13, !dbg !11910
  %7 = and i32 %6, 7, !dbg !11910
  call void @llvm.dbg.value(metadata i32 %7, metadata !11904, metadata !DIExpression()), !dbg !11905
  %8 = shl nuw nsw i32 65536, %7, !dbg !11911
  br label %31, !dbg !11912

9:                                                ; preds = %0
  br label %31, !dbg !11913

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11914
  call void @llvm.dbg.value(metadata i32 %11, metadata !11901, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11905
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %12, metadata !11902, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11905
  %13 = lshr i32 %11, 18, !dbg !11916
  %14 = and i32 %13, 15, !dbg !11916
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11917
  %16 = load i8, i8* %15, align 1, !dbg !11917
  %17 = zext i8 %16 to i32, !dbg !11917
  call void @llvm.dbg.value(metadata i32 %17, metadata !11901, metadata !DIExpression()), !dbg !11905
  %18 = lshr i32 %12, 22, !dbg !11918
  %19 = and i32 %18, 3, !dbg !11918
  %20 = add nuw nsw i32 %19, 1, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %20, metadata !11902, metadata !DIExpression()), !dbg !11905
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11920
  %22 = and i32 %21, 65536, !dbg !11921
  call void @llvm.dbg.value(metadata i32 %22, metadata !11903, metadata !DIExpression()), !dbg !11905
  %23 = icmp eq i32 %22, 0, !dbg !11922
  br i1 %23, label %24, label %27, !dbg !11924

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11925
  %26 = udiv i32 %25, %20, !dbg !11927
  br label %31, !dbg !11928

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11929
  %29 = udiv i32 %28, %20, !dbg !11931
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11932
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11933
  %34 = lshr i32 %33, 4, !dbg !11934
  %35 = and i32 %34, 15, !dbg !11934
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11935
  %37 = load i8, i8* %36, align 1, !dbg !11935
  %38 = zext i8 %37 to i32, !dbg !11935
  call void @llvm.dbg.value(metadata i32 %38, metadata !11900, metadata !DIExpression()), !dbg !11905
  %39 = lshr i32 %32, %38, !dbg !11936
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11936
  ret void, !dbg !11937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11938 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11946
  %2 = and i32 %1, 16711935, !dbg !11946
  %3 = or i32 %2, 45056, !dbg !11946
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11946
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11947
  %5 = or i32 %4, 256, !dbg !11947
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11947
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !11948
  call void @llvm.dbg.value(metadata i32 %6, metadata !11944, metadata !DIExpression()), !dbg !11949
  br label %7, !dbg !11950

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11951
  %9 = and i32 %8, 512, !dbg !11951
  %10 = icmp eq i32 %9, 0, !dbg !11952
  br i1 %10, label %11, label %15, !dbg !11950

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !11953
  %13 = sub i32 %12, %6, !dbg !11956
  %14 = icmp ugt i32 %13, 2, !dbg !11957
  br i1 %14, label %47, label %7, !dbg !11958, !llvm.loop !11959

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11961
  %17 = and i32 %16, -4, !dbg !11961
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11961
  br label %18, !dbg !11962

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11963
  %20 = and i32 %19, 12, !dbg !11963
  %21 = icmp eq i32 %20, 0, !dbg !11964
  br i1 %21, label %26, label %22, !dbg !11962

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !11965
  %24 = sub i32 %23, %6, !dbg !11968
  %25 = icmp ugt i32 %24, 5000, !dbg !11969
  br i1 %25, label %47, label %18, !dbg !11970, !llvm.loop !11971

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11973
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11974
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %28, metadata !11945, metadata !DIExpression()), !dbg !11949
  %29 = icmp eq i32 %28, 0, !dbg !11976
  br i1 %29, label %30, label %47, !dbg !11978

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11979
  %32 = and i32 %31, -285278210, !dbg !11979
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11979
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %34 = and i32 %33, -262145, !dbg !11980
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11980
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %35, metadata !11944, metadata !DIExpression()), !dbg !11949
  br label %36, !dbg !11982

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11983
  %38 = and i32 %37, 33554432, !dbg !11983
  %39 = icmp eq i32 %38, 0, !dbg !11984
  br i1 %39, label %44, label %40, !dbg !11982

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !11985
  %42 = sub i32 %41, %35, !dbg !11988
  %43 = icmp ugt i32 %42, 2, !dbg !11989
  br i1 %43, label %47, label %36, !dbg !11990, !llvm.loop !11991

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11993
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11994
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11995
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11996
  %46 = or i32 %45, 16777216, !dbg !11996
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11996
  br label %47, !dbg !11997

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11949
  ret i32 %48, !dbg !11998
}

; Function Attrs: optsize
declare !dbg !11999 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12001 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !12004 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12030, metadata !DIExpression()), !dbg !12043
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12044
  br i1 %3, label %385, label %4, !dbg !12046

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12047
  %6 = and i32 %5, 12, !dbg !12047
  call void @llvm.dbg.value(metadata i32 %6, metadata !12033, metadata !DIExpression()), !dbg !12043
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12048
  %8 = and i32 %7, 65536, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %8, metadata !12034, metadata !DIExpression()), !dbg !12043
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12049
  %10 = load i32, i32* %9, align 4, !dbg !12049
  %11 = and i32 %10, 1, !dbg !12051
  %12 = icmp eq i32 %11, 0, !dbg !12052
  br i1 %12, label %69, label %13, !dbg !12053

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !12054
  br i1 %14, label %19, label %15, !dbg !12057

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !12058
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !12059
  br i1 %18, label %19, label %27, !dbg !12059

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12060
  %21 = and i32 %20, 131072, !dbg !12060
  %22 = icmp eq i32 %21, 0, !dbg !12063
  br i1 %22, label %69, label %23, !dbg !12064

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12065
  %25 = load i32, i32* %24, align 4, !dbg !12065
  %26 = icmp eq i32 %25, 0, !dbg !12066
  br i1 %26, label %385, label %69, !dbg !12067

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12068
  %29 = load i32, i32* %28, align 4, !dbg !12068
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !12072

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12073
  %32 = or i32 %31, 65536, !dbg !12073
  br label %48, !dbg !12073

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12075
  %35 = and i32 %34, -65537, !dbg !12075
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12075
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12075
  %37 = and i32 %36, -262145, !dbg !12075
  br label %48, !dbg !12075

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12078
  %40 = or i32 %39, 262144, !dbg !12078
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12078
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12078
  %42 = or i32 %41, 65536, !dbg !12078
  br label %48, !dbg !12078

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12081
  %45 = and i32 %44, -65537, !dbg !12081
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12081
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12081
  %47 = and i32 %46, -262145, !dbg !12081
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12083
  %50 = load i32, i32* %28, align 4, !dbg !12084
  %51 = icmp eq i32 %50, 0, !dbg !12086
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !12087
  call void @llvm.dbg.value(metadata i32 %52, metadata !12031, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 %52, metadata !12031, metadata !DIExpression()), !dbg !12043
  br i1 %51, label %61, label %53, !dbg !12088

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12089
  %55 = and i32 %54, 131072, !dbg !12089
  %56 = icmp eq i32 %55, 0, !dbg !12091
  br i1 %56, label %57, label %69, !dbg !12092

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !12093
  %59 = sub i32 %58, %52, !dbg !12096
  %60 = icmp ugt i32 %59, 100, !dbg !12097
  br i1 %60, label %385, label %53, !dbg !12098, !llvm.loop !12099

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12101
  %63 = and i32 %62, 131072, !dbg !12101
  %64 = icmp eq i32 %63, 0, !dbg !12103
  br i1 %64, label %69, label %65, !dbg !12104

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12105
  %67 = sub i32 %66, %52, !dbg !12108
  %68 = icmp ugt i32 %67, 100, !dbg !12109
  br i1 %68, label %385, label %61, !dbg !12110, !llvm.loop !12111

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12113
  %71 = and i32 %70, 2, !dbg !12115
  %72 = icmp eq i32 %71, 0, !dbg !12116
  br i1 %72, label %118, label %73, !dbg !12117

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12118
  br i1 %74, label %79, label %75, !dbg !12121

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12122
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12123
  br i1 %78, label %79, label %87, !dbg !12123

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12124
  %81 = and i32 %80, 2, !dbg !12124
  %82 = icmp eq i32 %81, 0, !dbg !12127
  br i1 %82, label %111, label %83, !dbg !12128

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12129
  %85 = load i32, i32* %84, align 4, !dbg !12129
  %86 = icmp eq i32 %85, 1, !dbg !12130
  br i1 %86, label %111, label %385, !dbg !12131

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12132
  %89 = load i32, i32* %88, align 4, !dbg !12132
  %90 = icmp eq i32 %89, 0, !dbg !12135
  br i1 %90, label %101, label %91, !dbg !12136

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12137
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %92, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %93, !dbg !12140

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12141
  %95 = and i32 %94, 2, !dbg !12141
  %96 = icmp eq i32 %95, 0, !dbg !12142
  br i1 %96, label %97, label %111, !dbg !12140

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !12143
  %99 = sub i32 %98, %92, !dbg !12146
  %100 = icmp ugt i32 %99, 2, !dbg !12147
  br i1 %100, label %385, label %93, !dbg !12148, !llvm.loop !12149

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12151
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !12153
  call void @llvm.dbg.value(metadata i32 %102, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %103, !dbg !12154

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12155
  %105 = and i32 %104, 2, !dbg !12155
  %106 = icmp eq i32 %105, 0, !dbg !12156
  br i1 %106, label %118, label %107, !dbg !12154

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !12157
  %109 = sub i32 %108, %102, !dbg !12160
  %110 = icmp ugt i32 %109, 2, !dbg !12161
  br i1 %110, label %385, label %103, !dbg !12162, !llvm.loop !12163

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12165
  %113 = and i32 %112, -7937, !dbg !12165
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12165
  %115 = load i32, i32* %114, align 4, !dbg !12165
  %116 = shl i32 %115, 8, !dbg !12165
  %117 = or i32 %116, %113, !dbg !12165
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12165
  br label %118, !dbg !12166

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12166
  %120 = and i32 %119, 16, !dbg !12168
  %121 = icmp eq i32 %120, 0, !dbg !12169
  br i1 %121, label %215, label %122, !dbg !12170

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12171
  br i1 %123, label %124, label %179, !dbg !12174

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %126 = and i32 %125, 512, !dbg !12175
  %127 = icmp eq i32 %126, 0, !dbg !12178
  br i1 %127, label %132, label %128, !dbg !12179

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12180
  %130 = load i32, i32* %129, align 4, !dbg !12180
  %131 = icmp eq i32 %130, 0, !dbg !12181
  br i1 %131, label %385, label %132, !dbg !12182

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12183
  %134 = load i32, i32* %133, align 4, !dbg !12183
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12186
  %136 = and i32 %135, 57344, !dbg !12186
  %137 = icmp ugt i32 %134, %136, !dbg !12187
  br i1 %137, label %138, label %152, !dbg !12188

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #26, !dbg !12189
  %140 = icmp eq i32 %139, 0, !dbg !12192
  br i1 %140, label %141, label %385, !dbg !12193

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12194
  %143 = and i32 %142, -57345, !dbg !12194
  %144 = load i32, i32* %133, align 4, !dbg !12194
  %145 = or i32 %143, %144, !dbg !12194
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12194
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12195
  %147 = and i32 %146, 16777215, !dbg !12195
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12195
  %149 = load i32, i32* %148, align 4, !dbg !12195
  %150 = shl i32 %149, 24, !dbg !12195
  %151 = or i32 %150, %147, !dbg !12195
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12195
  br label %165, !dbg !12196

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12197
  %154 = and i32 %153, -57345, !dbg !12197
  %155 = or i32 %154, %134, !dbg !12197
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12197
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12199
  %157 = and i32 %156, 16777215, !dbg !12199
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12199
  %159 = load i32, i32* %158, align 4, !dbg !12199
  %160 = shl i32 %159, 24, !dbg !12199
  %161 = or i32 %160, %157, !dbg !12199
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12199
  %162 = load i32, i32* %133, align 4, !dbg !12200
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #26, !dbg !12202
  %164 = icmp eq i32 %163, 0, !dbg !12203
  br i1 %164, label %165, label %385, !dbg !12204

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12205
  %167 = lshr i32 %166, 13, !dbg !12206
  %168 = shl i32 65536, %167, !dbg !12207
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12208
  %170 = lshr i32 %169, 4, !dbg !12209
  %171 = and i32 %170, 15, !dbg !12209
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12210
  %173 = load i8, i8* %172, align 1, !dbg !12210
  %174 = zext i8 %173 to i32, !dbg !12210
  %175 = lshr i32 %168, %174, !dbg !12211
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12212
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12213
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !12214
  call void @llvm.dbg.value(metadata i32 %177, metadata !12032, metadata !DIExpression()), !dbg !12043
  %178 = icmp eq i32 %177, 0, !dbg !12215
  br i1 %178, label %215, label %385, !dbg !12217

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12218
  %181 = load i32, i32* %180, align 4, !dbg !12218
  %182 = icmp eq i32 %181, 0, !dbg !12221
  br i1 %182, label %205, label %183, !dbg !12222

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12223
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !12225
  call void @llvm.dbg.value(metadata i32 %184, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %185, !dbg !12226

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12227
  %187 = and i32 %186, 512, !dbg !12227
  %188 = icmp eq i32 %187, 0, !dbg !12228
  br i1 %188, label %189, label %193, !dbg !12226

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !12229
  %191 = sub i32 %190, %184, !dbg !12232
  %192 = icmp ugt i32 %191, 2, !dbg !12233
  br i1 %192, label %385, label %185, !dbg !12234, !llvm.loop !12235

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12237
  %195 = and i32 %194, -57345, !dbg !12237
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12237
  %197 = load i32, i32* %196, align 4, !dbg !12237
  %198 = or i32 %195, %197, !dbg !12237
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12237
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12238
  %200 = and i32 %199, 16777215, !dbg !12238
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12238
  %202 = load i32, i32* %201, align 4, !dbg !12238
  %203 = shl i32 %202, 24, !dbg !12238
  %204 = or i32 %203, %200, !dbg !12238
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12238
  br label %215, !dbg !12239

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12240
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12242
  call void @llvm.dbg.value(metadata i32 %206, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %207, !dbg !12243

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12244
  %209 = and i32 %208, 512, !dbg !12244
  %210 = icmp eq i32 %209, 0, !dbg !12245
  br i1 %210, label %215, label %211, !dbg !12243

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !12246
  %213 = sub i32 %212, %206, !dbg !12249
  %214 = icmp ugt i32 %213, 2, !dbg !12250
  br i1 %214, label %385, label %207, !dbg !12251, !llvm.loop !12252

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12254
  %217 = and i32 %216, 8, !dbg !12256
  %218 = icmp eq i32 %217, 0, !dbg !12257
  br i1 %218, label %243, label %219, !dbg !12258

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12259
  %221 = load i32, i32* %220, align 4, !dbg !12259
  %222 = icmp eq i32 %221, 0, !dbg !12262
  br i1 %222, label %233, label %223, !dbg !12263

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12264
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !12266
  call void @llvm.dbg.value(metadata i32 %224, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %225, !dbg !12267

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12268
  %227 = and i32 %226, 2, !dbg !12268
  %228 = icmp eq i32 %227, 0, !dbg !12269
  br i1 %228, label %229, label %243, !dbg !12267

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12270
  %231 = sub i32 %230, %224, !dbg !12273
  %232 = icmp ugt i32 %231, 2, !dbg !12274
  br i1 %232, label %385, label %225, !dbg !12275, !llvm.loop !12276

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12278
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !12280
  call void @llvm.dbg.value(metadata i32 %234, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %235, !dbg !12281

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12282
  %237 = and i32 %236, 2, !dbg !12282
  %238 = icmp eq i32 %237, 0, !dbg !12283
  br i1 %238, label %243, label %239, !dbg !12281

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !12284
  %241 = sub i32 %240, %234, !dbg !12287
  %242 = icmp ugt i32 %241, 2, !dbg !12288
  br i1 %242, label %385, label %235, !dbg !12289, !llvm.loop !12290

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12292
  %245 = and i32 %244, 4, !dbg !12293
  %246 = icmp eq i32 %245, 0, !dbg !12294
  br i1 %246, label %320, label %247, !dbg !12295

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !12035, metadata !DIExpression()), !dbg !12296
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12297
  %249 = and i32 %248, 268435456, !dbg !12297
  %250 = icmp eq i32 %249, 0, !dbg !12297
  br i1 %250, label %251, label %258, !dbg !12298

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12299
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12039, metadata !DIExpression()), !dbg !12299
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12299
  %254 = or i32 %253, 268435456, !dbg !12299
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12299
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12299
  %256 = and i32 %255, 268435456, !dbg !12299
  store volatile i32 %256, i32* %2, align 4, !dbg !12299
  %257 = load volatile i32, i32* %2, align 4, !dbg !12299
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12300
  call void @llvm.dbg.value(metadata i32 1, metadata !12035, metadata !DIExpression()), !dbg !12296
  br label %258, !dbg !12301

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12035, metadata !DIExpression()), !dbg !12296
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12302
  %260 = and i32 %259, 256, !dbg !12302
  %261 = icmp eq i32 %260, 0, !dbg !12302
  br i1 %261, label %262, label %274, !dbg !12304

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12305
  %264 = or i32 %263, 256, !dbg !12305
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12305
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %265, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %266, !dbg !12308

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12309
  %268 = and i32 %267, 256, !dbg !12309
  %269 = icmp eq i32 %268, 0, !dbg !12309
  br i1 %269, label %270, label %274, !dbg !12308

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !12310
  %272 = sub i32 %271, %265, !dbg !12313
  %273 = icmp ugt i32 %272, 100, !dbg !12314
  br i1 %273, label %385, label %266, !dbg !12315, !llvm.loop !12316

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12318
  %276 = load i32, i32* %275, align 4, !dbg !12318
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12321

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12322
  %279 = or i32 %278, 256, !dbg !12322
  br label %295, !dbg !12322

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12324
  %282 = and i32 %281, -257, !dbg !12324
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12324
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12324
  %284 = and i32 %283, -1025, !dbg !12324
  br label %295, !dbg !12324

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12327
  %287 = or i32 %286, 1024, !dbg !12327
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12327
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12327
  %289 = or i32 %288, 256, !dbg !12327
  br label %295, !dbg !12327

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12330
  %292 = and i32 %291, -257, !dbg !12330
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12330
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12330
  %294 = and i32 %293, -1025, !dbg !12330
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12332
  %297 = load i32, i32* %275, align 4, !dbg !12333
  %298 = icmp eq i32 %297, 0, !dbg !12335
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !12336
  call void @llvm.dbg.value(metadata i32 %299, metadata !12031, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 %299, metadata !12031, metadata !DIExpression()), !dbg !12043
  br i1 %298, label %308, label %300, !dbg !12337

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12338
  %302 = and i32 %301, 512, !dbg !12338
  %303 = icmp eq i32 %302, 0, !dbg !12340
  br i1 %303, label %304, label %316, !dbg !12341

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !12342
  %306 = sub i32 %305, %299, !dbg !12345
  %307 = icmp ugt i32 %306, 5000, !dbg !12346
  br i1 %307, label %385, label %300, !dbg !12347, !llvm.loop !12348

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12350
  %310 = and i32 %309, 512, !dbg !12350
  %311 = icmp eq i32 %310, 0, !dbg !12352
  br i1 %311, label %316, label %312, !dbg !12353

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !12354
  %314 = sub i32 %313, %299, !dbg !12357
  %315 = icmp ugt i32 %314, 5000, !dbg !12358
  br i1 %315, label %385, label %308, !dbg !12359, !llvm.loop !12360

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12362

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12363
  %319 = and i32 %318, -268435457, !dbg !12363
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12363
  br label %320, !dbg !12366

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12367
  %322 = load i32, i32* %321, align 4, !dbg !12367
  %323 = icmp eq i32 %322, 0, !dbg !12369
  br i1 %323, label %384, label %324, !dbg !12370

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12371
  br i1 %325, label %366, label %326, !dbg !12374

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12375
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12378
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !12378
  call void @llvm.dbg.value(metadata i32 %328, metadata !12031, metadata !DIExpression()), !dbg !12043
  call void @llvm.dbg.value(metadata i32 %328, metadata !12031, metadata !DIExpression()), !dbg !12043
  br i1 %327, label %329, label %358, !dbg !12379

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %331 = and i32 %330, 33554432, !dbg !12380
  %332 = icmp eq i32 %331, 0, !dbg !12382
  br i1 %332, label %337, label %333, !dbg !12383

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !12384
  %335 = sub i32 %334, %328, !dbg !12387
  %336 = icmp ugt i32 %335, 2, !dbg !12388
  br i1 %336, label %385, label %329, !dbg !12389, !llvm.loop !12390

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12392
  %339 = and i32 %338, -16580609, !dbg !12392
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12392
  %341 = load i32, i32* %340, align 4, !dbg !12392
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12392
  %343 = load i32, i32* %342, align 4, !dbg !12392
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12392
  %345 = load i32, i32* %344, align 4, !dbg !12392
  %346 = or i32 %339, %341, !dbg !12392
  %347 = or i32 %346, %343, !dbg !12392
  %348 = or i32 %347, %345, !dbg !12392
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12392
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12393
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !12394
  call void @llvm.dbg.value(metadata i32 %349, metadata !12031, metadata !DIExpression()), !dbg !12043
  br label %350, !dbg !12395

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12396
  %352 = and i32 %351, 33554432, !dbg !12396
  %353 = icmp eq i32 %352, 0, !dbg !12397
  br i1 %353, label %354, label %384, !dbg !12395

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !12398
  %356 = sub i32 %355, %349, !dbg !12401
  %357 = icmp ugt i32 %356, 2, !dbg !12402
  br i1 %357, label %385, label %350, !dbg !12403, !llvm.loop !12404

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12406
  %360 = and i32 %359, 33554432, !dbg !12406
  %361 = icmp eq i32 %360, 0, !dbg !12408
  br i1 %361, label %384, label %362, !dbg !12409

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !12410
  %364 = sub i32 %363, %328, !dbg !12413
  %365 = icmp ugt i32 %364, 2, !dbg !12414
  br i1 %365, label %385, label %358, !dbg !12415, !llvm.loop !12416

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12418
  br i1 %367, label %385, label %368, !dbg !12421

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12422
  call void @llvm.dbg.value(metadata i32 %369, metadata !12034, metadata !DIExpression()), !dbg !12043
  %370 = and i32 %369, 65536, !dbg !12424
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12426
  %372 = load i32, i32* %371, align 4, !dbg !12426
  %373 = icmp eq i32 %370, %372, !dbg !12427
  br i1 %373, label %374, label %385, !dbg !12428

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12429
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12430
  %377 = load i32, i32* %376, align 4, !dbg !12430
  %378 = icmp eq i32 %375, %377, !dbg !12431
  br i1 %378, label %379, label %385, !dbg !12432

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12433
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12434
  %382 = load i32, i32* %381, align 4, !dbg !12434
  %383 = icmp eq i32 %380, %382, !dbg !12435
  br i1 %383, label %384, label %385, !dbg !12436

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12437

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !12043
  ret i32 %386, !dbg !12438
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #15 !dbg !12439 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12441, metadata !DIExpression()), !dbg !12450
  call void @llvm.dbg.value(metadata i32 0, metadata !12443, metadata !DIExpression()), !dbg !12450
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12451
  %4 = and i32 %3, 240, !dbg !12451
  %5 = icmp eq i32 %4, 0, !dbg !12452
  br i1 %5, label %6, label %31, !dbg !12453

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12454
  %8 = and i32 %7, 268435456, !dbg !12454
  %9 = icmp eq i32 %8, 0, !dbg !12454
  br i1 %9, label %12, label %10, !dbg !12455

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12456
  call void @llvm.dbg.value(metadata i32 %11, metadata !12442, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12450
  br label %22, !dbg !12458

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12459
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12444, metadata !DIExpression()), !dbg !12459
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12459
  %15 = or i32 %14, 268435456, !dbg !12459
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12459
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12459
  %17 = and i32 %16, 268435456, !dbg !12459
  store volatile i32 %17, i32* %2, align 4, !dbg !12459
  %18 = load volatile i32, i32* %2, align 4, !dbg !12459
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12460
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12461
  call void @llvm.dbg.value(metadata i32 %19, metadata !12442, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12450
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12462
  %21 = and i32 %20, -268435457, !dbg !12462
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12462
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12463
  call void @llvm.dbg.value(metadata i32 %24, metadata !12442, metadata !DIExpression()), !dbg !12450
  %25 = icmp eq i32 %24, 6144, !dbg !12464
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12466
  call void @llvm.dbg.value(metadata i32 undef, metadata !12443, metadata !DIExpression()), !dbg !12450
  br i1 %27, label %28, label %31, !dbg !12467

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12469
  %30 = or i32 %29, 4, !dbg !12469
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12469
  br label %31, !dbg !12469

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12467
  %34 = and i32 %33, -2, !dbg !12467
  %35 = or i32 %34, %32, !dbg !12467
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12467
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12472
  %37 = and i32 %36, 1, !dbg !12472
  %38 = xor i32 %37, %32, !dbg !12450
  ret i32 %38, !dbg !12474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12475 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12488, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 %1, metadata !12489, metadata !DIExpression()), !dbg !12492
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !12493
  br i1 %3, label %136, label %4, !dbg !12495

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12496
  %6 = and i32 %5, 1, !dbg !12496
  %7 = icmp ult i32 %6, %1, !dbg !12498
  br i1 %7, label %8, label %20, !dbg !12499

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12500
  br i1 %9, label %10, label %13, !dbg !12504

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12505
  %12 = or i32 %11, 4, !dbg !12505
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12505
  br label %13, !dbg !12505

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12504
  %15 = and i32 %14, -2, !dbg !12504
  %16 = or i32 %15, %1, !dbg !12504
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12504
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12507
  %18 = and i32 %17, 1, !dbg !12507
  %19 = icmp eq i32 %18, %1, !dbg !12509
  br i1 %19, label %20, label %136, !dbg !12510

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12511
  %22 = load i32, i32* %21, align 4, !dbg !12511
  %23 = and i32 %22, 2, !dbg !12513
  %24 = icmp eq i32 %23, 0, !dbg !12514
  br i1 %24, label %32, label %25, !dbg !12515

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12516
  %27 = and i32 %26, -241, !dbg !12516
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12516
  %29 = load i32, i32* %28, align 4, !dbg !12516
  %30 = or i32 %27, %29, !dbg !12516
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12516
  %31 = load i32, i32* %21, align 4, !dbg !12518
  br label %32, !dbg !12520

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12518
  %34 = and i32 %33, 1, !dbg !12521
  %35 = icmp eq i32 %34, 0, !dbg !12522
  br i1 %35, label %93, label %36, !dbg !12523

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12524
  %38 = load i32, i32* %37, align 4, !dbg !12524
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !12527

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12528
  %41 = and i32 %40, 131072, !dbg !12528
  %42 = icmp eq i32 %41, 0, !dbg !12531
  br i1 %42, label %136, label %55, !dbg !12532

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12533
  %45 = and i32 %44, 33554432, !dbg !12533
  %46 = icmp eq i32 %45, 0, !dbg !12537
  br i1 %46, label %136, label %55, !dbg !12538

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12539
  %49 = and i32 %48, 2, !dbg !12539
  %50 = icmp eq i32 %49, 0, !dbg !12543
  br i1 %50, label %136, label %55, !dbg !12544

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12545
  %53 = and i32 %52, 512, !dbg !12545
  %54 = icmp eq i32 %53, 0, !dbg !12548
  br i1 %54, label %136, label %55, !dbg !12549

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12550
  %57 = and i32 %56, -4, !dbg !12550
  %58 = or i32 %57, %38, !dbg !12550
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12550
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !12551
  call void @llvm.dbg.value(metadata i32 %59, metadata !12490, metadata !DIExpression()), !dbg !12492
  %60 = load i32, i32* %37, align 4, !dbg !12552
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !12554

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12555
  %63 = and i32 %62, 12, !dbg !12555
  %64 = icmp eq i32 %63, 8, !dbg !12557
  br i1 %64, label %93, label %65, !dbg !12558

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12559
  %67 = sub i32 %66, %59, !dbg !12562
  %68 = icmp ugt i32 %67, 5000, !dbg !12563
  br i1 %68, label %136, label %61, !dbg !12564, !llvm.loop !12565

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12567
  %71 = and i32 %70, 12, !dbg !12567
  %72 = icmp eq i32 %71, 12, !dbg !12570
  br i1 %72, label %93, label %73, !dbg !12571

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !12572
  %75 = sub i32 %74, %59, !dbg !12575
  %76 = icmp ugt i32 %75, 5000, !dbg !12576
  br i1 %76, label %136, label %69, !dbg !12577, !llvm.loop !12578

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12580
  %79 = and i32 %78, 12, !dbg !12580
  %80 = icmp eq i32 %79, 4, !dbg !12583
  br i1 %80, label %93, label %81, !dbg !12584

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12585
  %83 = sub i32 %82, %59, !dbg !12588
  %84 = icmp ugt i32 %83, 5000, !dbg !12589
  br i1 %84, label %136, label %77, !dbg !12590, !llvm.loop !12591

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12593
  %87 = and i32 %86, 12, !dbg !12593
  %88 = icmp eq i32 %87, 0, !dbg !12595
  br i1 %88, label %93, label %89, !dbg !12596

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !12597
  %91 = sub i32 %90, %59, !dbg !12600
  %92 = icmp ugt i32 %91, 5000, !dbg !12601
  br i1 %92, label %136, label %85, !dbg !12602, !llvm.loop !12603

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12605
  %95 = and i32 %94, 1, !dbg !12605
  %96 = icmp ugt i32 %95, %1, !dbg !12607
  br i1 %96, label %97, label %103, !dbg !12608

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12609
  %99 = and i32 %98, -2, !dbg !12609
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12609
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12612
  %101 = and i32 %100, 1, !dbg !12612
  %102 = icmp eq i32 %101, 0, !dbg !12614
  br i1 %102, label %103, label %136, !dbg !12615

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !12616
  %105 = and i32 %104, 4, !dbg !12618
  %106 = icmp eq i32 %105, 0, !dbg !12619
  br i1 %106, label %114, label %107, !dbg !12620

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12621
  %109 = and i32 %108, -1793, !dbg !12621
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12621
  %111 = load i32, i32* %110, align 4, !dbg !12621
  %112 = or i32 %109, %111, !dbg !12621
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12621
  %113 = load i32, i32* %21, align 4, !dbg !12623
  br label %114, !dbg !12625

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !12623
  %116 = and i32 %115, 8, !dbg !12626
  %117 = icmp eq i32 %116, 0, !dbg !12627
  br i1 %117, label %125, label %118, !dbg !12628

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12629
  %120 = and i32 %119, -14337, !dbg !12629
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12629
  %122 = load i32, i32* %121, align 4, !dbg !12629
  %123 = shl i32 %122, 3, !dbg !12629
  %124 = or i32 %123, %120, !dbg !12629
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12629
  br label %125, !dbg !12631

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !12632
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12633
  %128 = lshr i32 %127, 4, !dbg !12634
  %129 = and i32 %128, 15, !dbg !12634
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !12635
  %131 = load i8, i8* %130, align 1, !dbg !12635
  %132 = zext i8 %131 to i32, !dbg !12635
  %133 = lshr i32 %126, %132, !dbg !12636
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !12637
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !12638
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !12639
  call void @llvm.dbg.value(metadata i32 %135, metadata !12491, metadata !DIExpression()), !dbg !12492
  br label %136, !dbg !12640

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12492
  ret i32 %137, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #17 !dbg !12642 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12650
  call void @llvm.dbg.value(metadata i32 %1, metadata !12644, metadata !DIExpression()), !dbg !12651
  %2 = lshr i32 %1, 2, !dbg !12652
  %3 = and i32 %2, 3, !dbg !12652
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !12652

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12649, metadata !DIExpression()), !dbg !12651
  br label %26, !dbg !12653

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !12656
  %7 = and i32 %6, 15, !dbg !12656
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !12658
  %9 = load i8, i8* %8, align 1, !dbg !12658
  call void @llvm.dbg.value(metadata i8 %9, metadata !12645, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12651
  %10 = lshr i32 %1, 22, !dbg !12659
  %11 = and i32 %10, 3, !dbg !12659
  %12 = add nuw nsw i32 %11, 1, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %12, metadata !12646, metadata !DIExpression()), !dbg !12651
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12661
  %14 = and i32 %13, 65536, !dbg !12661
  %15 = icmp eq i32 %14, 0, !dbg !12663
  %16 = zext i8 %9 to i32, !dbg !12664
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !12664
  %18 = mul nuw i32 %17, %16, !dbg !12664
  %19 = udiv i32 %18, %12, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %19, metadata !12647, metadata !DIExpression()), !dbg !12651
  call void @llvm.dbg.value(metadata i32 %19, metadata !12649, metadata !DIExpression()), !dbg !12651
  br label %26, !dbg !12666

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12667
  %23 = lshr i32 %22, 13, !dbg !12669
  %24 = and i32 %23, 7, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %24, metadata !12648, metadata !DIExpression()), !dbg !12651
  %25 = shl nuw nsw i32 65536, %24, !dbg !12670
  call void @llvm.dbg.value(metadata i32 %25, metadata !12649, metadata !DIExpression()), !dbg !12651
  br label %26, !dbg !12671

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !12672
  call void @llvm.dbg.value(metadata i32 %27, metadata !12649, metadata !DIExpression()), !dbg !12651
  ret i32 %27, !dbg !12673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12674 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12676, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i32 %1, metadata !12677, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.value(metadata i32 %2, metadata !12678, metadata !DIExpression()), !dbg !12691
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !12692
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12692
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !12679, metadata !DIExpression()), !dbg !12693
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !12694
  store i32 2, i32* %7, align 4, !dbg !12695
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !12696
  store i32 2, i32* %8, align 4, !dbg !12697
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !12698
  store i32 0, i32* %9, align 4, !dbg !12699
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !12700
  store i32 256, i32* %10, align 4, !dbg !12701
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !12702
  store i32 0, i32* %11, align 4, !dbg !12703
  %12 = bitcast i32* %5 to i8*, !dbg !12704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !12704
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12689, metadata !DIExpression()), !dbg !12704
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12704
  %14 = or i32 %13, 1, !dbg !12704
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12704
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12704
  %16 = and i32 %15, 1, !dbg !12704
  store volatile i32 %16, i32* %5, align 4, !dbg !12704
  %17 = load volatile i32, i32* %5, align 4, !dbg !12704
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !12705
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !12706
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12707
  %19 = and i32 %18, -1996488705, !dbg !12707
  %20 = or i32 %2, %1, !dbg !12707
  %21 = or i32 %20, %19, !dbg !12707
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12707
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #24, !dbg !12708
  ret void, !dbg !12708
}

; Function Attrs: optsize
declare !dbg !12709 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #16 !dbg !12713 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12714
  ret void, !dbg !12715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #16 !dbg !12716 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12717
  ret void, !dbg !12718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !12719 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12720
  ret i32 %1, !dbg !12721
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !12722 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12723
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12724
  %3 = lshr i32 %2, 8, !dbg !12725
  %4 = and i32 %3, 7, !dbg !12725
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12726
  %6 = load i8, i8* %5, align 1, !dbg !12726
  %7 = zext i8 %6 to i32, !dbg !12726
  %8 = lshr i32 %1, %7, !dbg !12727
  ret i32 %8, !dbg !12728
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !12729 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !12730
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12731
  %3 = lshr i32 %2, 11, !dbg !12732
  %4 = and i32 %3, 7, !dbg !12732
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12733
  %6 = load i8, i8* %5, align 1, !dbg !12733
  %7 = zext i8 %6 to i32, !dbg !12733
  %8 = lshr i32 %1, %7, !dbg !12734
  ret i32 %8, !dbg !12735
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #17 !dbg !12736 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12740, metadata !DIExpression()), !dbg !12741
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12742
  store i32 31, i32* %2, align 4, !dbg !12743
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12744
  %4 = and i32 %3, 262144, !dbg !12746
  %5 = icmp eq i32 %4, 0, !dbg !12747
  br i1 %5, label %8, label %6, !dbg !12748

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12749
  store i32 5, i32* %7, align 4, !dbg !12751
  br label %15, !dbg !12752

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12753
  %10 = and i32 %9, 65536, !dbg !12755
  %11 = icmp eq i32 %10, 0, !dbg !12756
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12757
  br i1 %11, label %14, label %13, !dbg !12758

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !12759
  br label %15, !dbg !12761

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12762
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12764
  %17 = and i32 %16, 1, !dbg !12766
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12767
  store i32 %17, i32* %18, align 4, !dbg !12769
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12770
  %20 = lshr i32 %19, 8, !dbg !12771
  %21 = and i32 %20, 31, !dbg !12771
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12772
  store i32 %21, i32* %22, align 4, !dbg !12773
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12774
  %24 = lshr i32 %23, 8, !dbg !12776
  %25 = and i32 %24, 1, !dbg !12776
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12777
  store i32 %25, i32* %26, align 4, !dbg !12779
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12780
  %28 = lshr i32 %27, 24, !dbg !12781
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12782
  store i32 %28, i32* %29, align 4, !dbg !12783
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12784
  %31 = and i32 %30, 57344, !dbg !12785
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12786
  store i32 %31, i32* %32, align 4, !dbg !12787
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12788
  %34 = and i32 %33, 1024, !dbg !12790
  %35 = icmp eq i32 %34, 0, !dbg !12791
  br i1 %35, label %38, label %36, !dbg !12792

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12793
  store i32 5, i32* %37, align 4, !dbg !12795
  br label %45, !dbg !12796

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12797
  %40 = and i32 %39, 256, !dbg !12799
  %41 = icmp eq i32 %40, 0, !dbg !12800
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12801
  br i1 %41, label %44, label %43, !dbg !12802

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !12803
  br label %45, !dbg !12805

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !12806
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12808
  %47 = and i32 %46, 1, !dbg !12810
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12811
  store i32 %47, i32* %48, align 4, !dbg !12813
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12814
  %50 = and i32 %49, 16777216, !dbg !12816
  %51 = icmp eq i32 %50, 0, !dbg !12817
  %52 = select i1 %51, i32 1, i32 2, !dbg !12818
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12819
  store i32 %52, i32* %53, align 4, !dbg !12821
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12822
  %55 = and i32 %54, 65536, !dbg !12823
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12824
  store i32 %55, i32* %56, align 4, !dbg !12825
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12826
  %58 = and i32 %57, 3932160, !dbg !12827
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12828
  store i32 %58, i32* %59, align 4, !dbg !12829
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12830
  %61 = and i32 %60, 12582912, !dbg !12831
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12832
  store i32 %61, i32* %62, align 4, !dbg !12833
  ret void, !dbg !12834
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !12835 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !12839, metadata !DIExpression()), !dbg !12841
  call void @llvm.dbg.value(metadata i32* %1, metadata !12840, metadata !DIExpression()), !dbg !12841
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !12842
  store i32 15, i32* %3, align 4, !dbg !12843
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12844
  %5 = and i32 %4, 3, !dbg !12845
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !12846
  store i32 %5, i32* %6, align 4, !dbg !12847
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12848
  %8 = and i32 %7, 240, !dbg !12849
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !12850
  store i32 %8, i32* %9, align 4, !dbg !12851
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12852
  %11 = and i32 %10, 1792, !dbg !12853
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !12854
  store i32 %11, i32* %12, align 4, !dbg !12855
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12856
  %14 = lshr i32 %13, 3, !dbg !12857
  %15 = and i32 %14, 1792, !dbg !12857
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !12858
  store i32 %15, i32* %16, align 4, !dbg !12859
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12860
  %18 = and i32 %17, 1, !dbg !12860
  store i32 %18, i32* %1, align 4, !dbg !12861
  ret void, !dbg !12862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12863 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12864
  %2 = and i32 %1, 128, !dbg !12864
  %3 = icmp eq i32 %2, 0, !dbg !12864
  br i1 %3, label %5, label %4, !dbg !12866

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !12867
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12869
  br label %5, !dbg !12870

5:                                                ; preds = %4, %0
  ret void, !dbg !12871
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12872 {
  ret void, !dbg !12873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #16 !dbg !12874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12877, metadata !DIExpression()), !dbg !12878
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12879
  ret void, !dbg !12880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #16 !dbg !12881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12884, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.value(metadata i32 1000, metadata !12885, metadata !DIExpression()), !dbg !12886
  %2 = udiv i32 %0, 1000, !dbg !12887
  %3 = add nsw i32 %2, -1, !dbg !12888
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12889
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12890
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12891
  ret void, !dbg !12892
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !12893 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12895, metadata !DIExpression()), !dbg !12898
  %3 = bitcast i32* %2 to i8*, !dbg !12899
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12899
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12896, metadata !DIExpression()), !dbg !12900
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12901
  store volatile i32 %4, i32* %2, align 4, !dbg !12900
  call void @llvm.dbg.value(metadata i32 %0, metadata !12897, metadata !DIExpression()), !dbg !12898
  %5 = load volatile i32, i32* %2, align 4, !dbg !12902
  %6 = icmp eq i32 %0, -1, !dbg !12903
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12897, metadata !DIExpression()), !dbg !12898
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %8, metadata !12897, metadata !DIExpression()), !dbg !12898
  br label %9, !dbg !12905

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12897, metadata !DIExpression()), !dbg !12898
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12906
  call void @llvm.dbg.value(metadata i32 undef, metadata !12897, metadata !DIExpression()), !dbg !12898
  %12 = shl i32 %11, 15, !dbg !12898
  %13 = ashr i32 %12, 31, !dbg !12898
  %14 = add i32 %13, %10, !dbg !12898
  call void @llvm.dbg.value(metadata i32 %14, metadata !12897, metadata !DIExpression()), !dbg !12898
  %15 = icmp eq i32 %14, 0, !dbg !12909
  br i1 %15, label %16, label %9, !dbg !12905

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12910
  ret void, !dbg !12910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12913, metadata !DIExpression()), !dbg !12914
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12915
  ret void, !dbg !12916
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #16 !dbg !12917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12922, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.value(metadata i32 0, metadata !12923, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.value(metadata i32 0, metadata !12924, metadata !DIExpression()), !dbg !12925
  %2 = add i32 %0, -32000001, !dbg !12926
  %3 = icmp ult i32 %2, -32000000, !dbg !12926
  br i1 %3, label %22, label %4, !dbg !12926

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12928
  %6 = icmp eq i32 %5, 2048, !dbg !12931
  br i1 %6, label %7, label %9, !dbg !12932

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12933
  call void @llvm.dbg.value(metadata i32 undef, metadata !12924, metadata !DIExpression()), !dbg !12925
  br i1 %8, label %16, label %17, !dbg !12936

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12937
  %11 = icmp eq i32 %10, 4096, !dbg !12939
  br i1 %11, label %12, label %14, !dbg !12940

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12941
  call void @llvm.dbg.value(metadata i32 undef, metadata !12924, metadata !DIExpression()), !dbg !12925
  br i1 %13, label %16, label %17, !dbg !12936

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12944
  call void @llvm.dbg.value(metadata i32 undef, metadata !12924, metadata !DIExpression()), !dbg !12925
  br i1 %15, label %16, label %17, !dbg !12936

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #26, !dbg !12947
  br label %17, !dbg !12950

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #26, !dbg !12951
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12952
  %20 = icmp ne i32 %19, %18, !dbg !12954
  %21 = zext i1 %20 to i32, !dbg !12955
  br label %22, !dbg !12955

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12925
  call void @llvm.dbg.value(metadata i32 %23, metadata !12923, metadata !DIExpression()), !dbg !12925
  ret i32 %23, !dbg !12956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !12957 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12958
  %2 = and i32 %1, 6144, !dbg !12958
  ret i32 %2, !dbg !12959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #16 !dbg !12960 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12961
  %2 = or i32 %1, 4, !dbg !12961
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12961
  ret void, !dbg !12962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #16 !dbg !12963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12965, metadata !DIExpression()), !dbg !12966
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12967
  %3 = and i32 %2, -2, !dbg !12967
  %4 = or i32 %3, %0, !dbg !12967
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12967
  ret void, !dbg !12968
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !12969 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12970
  %2 = and i32 %1, 1, !dbg !12970
  ret i32 %2, !dbg !12971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #16 !dbg !12972 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12989, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12990, metadata !DIExpression()), !dbg !12993
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12994
  %4 = icmp eq i32 %3, 0, !dbg !12996
  br i1 %4, label %5, label %19, !dbg !12997

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #26, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %6, metadata !12992, metadata !DIExpression()), !dbg !12993
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.102() #26, !dbg !13000
  %8 = icmp eq i32 %7, 1, !dbg !13002
  br i1 %8, label %13, label %9, !dbg !13003

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.103() #26, !dbg !13004
  br label %10, !dbg !13006

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.102() #26, !dbg !13007
  %12 = icmp eq i32 %11, 1, !dbg !13008
  br i1 %12, label %13, label %10, !dbg !13006, !llvm.loop !13009

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !13011
  %15 = load i32, i32* %14, align 4, !dbg !13011
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !13012
  %17 = load i32, i32* %16, align 4, !dbg !13012
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.104(i32 noundef 0, i32 noundef %15, i32 noundef %17) #26, !dbg !13013
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !13014
  call void @llvm.dbg.value(metadata i32 %18, metadata !12991, metadata !DIExpression()), !dbg !12993
  br label %19, !dbg !13015

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !13016
  call void @llvm.dbg.value(metadata i32 %20, metadata !12991, metadata !DIExpression()), !dbg !12993
  ret i32 %20, !dbg !13017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !13018 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13022, metadata !DIExpression()), !dbg !13023
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.106() #26, !dbg !13024
  %2 = icmp ne i32 %1, 0, !dbg !13026
  %3 = zext i1 %2 to i32, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %3, metadata !13022, metadata !DIExpression()), !dbg !13023
  ret i32 %3, !dbg !13028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #5 !dbg !13029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13033, metadata !DIExpression()), !dbg !13036
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !13034, metadata !DIExpression()), !dbg !13036
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !13037
  %4 = load i32, i32* %3, align 4, !dbg !13037
  %5 = lshr i32 %4, 18, !dbg !13038
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !13039
  %7 = load i8, i8* %6, align 1, !dbg !13039
  %8 = zext i8 %7 to i32, !dbg !13040
  %9 = mul i32 %8, %0, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %9, metadata !13035, metadata !DIExpression()), !dbg !13036
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !13042
  %11 = load i32, i32* %10, align 4, !dbg !13042
  %12 = lshr i32 %11, 22, !dbg !13043
  %13 = add nuw nsw i32 %12, 1, !dbg !13044
  %14 = udiv i32 %9, %13, !dbg !13045
  call void @llvm.dbg.value(metadata i32 %14, metadata !13035, metadata !DIExpression()), !dbg !13036
  ret i32 %14, !dbg !13046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.102() unnamed_addr #17 !dbg !13047 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13048
  %2 = lshr i32 %1, 1, !dbg !13049
  %3 = and i32 %2, 1, !dbg !13049
  ret i32 %3, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.103() unnamed_addr #16 !dbg !13051 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13052
  %2 = or i32 %1, 1, !dbg !13052
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13052
  ret void, !dbg !13053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.104(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #16 !dbg !13054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13056, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 %1, metadata !13057, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata i32 %2, metadata !13058, metadata !DIExpression()), !dbg !13059
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13060
  %5 = and i32 %4, -16580609, !dbg !13060
  %6 = or i32 %1, %0, !dbg !13060
  %7 = or i32 %6, %2, !dbg !13060
  %8 = or i32 %7, %5, !dbg !13060
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13060
  ret void, !dbg !13061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #16 !dbg !13062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13066, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13067, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i32 0, metadata !13068, metadata !DIExpression()), !dbg !13070
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13071
  %4 = load i32, i32* %3, align 4, !dbg !13071
  %5 = lshr i32 %4, 4, !dbg !13071
  %6 = and i32 %5, 15, !dbg !13071
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13071
  %8 = load i8, i8* %7, align 1, !dbg !13071
  %9 = zext i8 %8 to i32, !dbg !13071
  %10 = lshr i32 %0, %9, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %10, metadata !13069, metadata !DIExpression()), !dbg !13070
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13072
  %12 = icmp ult i32 %11, %10, !dbg !13074
  br i1 %12, label %13, label %16, !dbg !13075

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %14, metadata !13068, metadata !DIExpression()), !dbg !13070
  %15 = icmp eq i32 %14, 0, !dbg !13078
  br i1 %15, label %16, label %30, !dbg !13080

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.105() #26, !dbg !13081
  br label %17, !dbg !13083

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.106() #26, !dbg !13084
  %19 = icmp eq i32 %18, 1, !dbg !13085
  br i1 %19, label %20, label %17, !dbg !13083, !llvm.loop !13086

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13088
  tail call fastcc void @LL_RCC_SetAHBPrescaler.107(i32 noundef %21) #26, !dbg !13089
  tail call fastcc void @LL_RCC_SetSysClkSource.108() #26, !dbg !13090
  br label %22, !dbg !13091

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.109() #26, !dbg !13092
  %24 = icmp eq i32 %23, 12, !dbg !13093
  br i1 %24, label %25, label %22, !dbg !13091, !llvm.loop !13094

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13096
  %27 = load i32, i32* %26, align 4, !dbg !13096
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.110(i32 noundef %27) #26, !dbg !13097
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13098
  %29 = load i32, i32* %28, align 4, !dbg !13098
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.111(i32 noundef %29) #26, !dbg !13099
  br label %30, !dbg !13100

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13101
  %33 = icmp ugt i32 %32, %10, !dbg !13103
  br i1 %33, label %34, label %36, !dbg !13104

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %35, metadata !13068, metadata !DIExpression()), !dbg !13070
  br label %36, !dbg !13107

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13070
  call void @llvm.dbg.value(metadata i32 %37, metadata !13068, metadata !DIExpression()), !dbg !13070
  %38 = icmp eq i32 %37, 0, !dbg !13108
  br i1 %38, label %39, label %40, !dbg !13110

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !13111
  br label %40, !dbg !13113

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.105() unnamed_addr #16 !dbg !13115 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13116
  %2 = or i32 %1, 16777216, !dbg !13116
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13116
  ret void, !dbg !13117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.106() unnamed_addr #17 !dbg !13118 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13119
  %2 = lshr i32 %1, 25, !dbg !13120
  %3 = and i32 %2, 1, !dbg !13120
  ret i32 %3, !dbg !13121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.107(i32 noundef %0) unnamed_addr #16 !dbg !13122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13124, metadata !DIExpression()), !dbg !13125
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13126
  %3 = and i32 %2, -241, !dbg !13126
  %4 = or i32 %3, %0, !dbg !13126
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.108() unnamed_addr #16 !dbg !13128 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13130, metadata !DIExpression()), !dbg !13131
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13132
  %2 = or i32 %1, 3, !dbg !13132
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13132
  ret void, !dbg !13133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.109() unnamed_addr #17 !dbg !13134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13135
  %2 = and i32 %1, 12, !dbg !13135
  ret i32 %2, !dbg !13136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.110(i32 noundef %0) unnamed_addr #16 !dbg !13137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13139, metadata !DIExpression()), !dbg !13140
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13141
  %3 = and i32 %2, -1793, !dbg !13141
  %4 = or i32 %3, %0, !dbg !13141
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13141
  ret void, !dbg !13142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.111(i32 noundef %0) unnamed_addr #16 !dbg !13143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13145, metadata !DIExpression()), !dbg !13146
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13147
  %3 = and i32 %2, -14337, !dbg !13147
  %4 = or i32 %3, %0, !dbg !13147
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13147
  ret void, !dbg !13148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #16 !dbg !13149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13153, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata i32 %1, metadata !13154, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !13155, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13156, metadata !DIExpression()), !dbg !13159
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !13160
  %6 = icmp eq i32 %5, 0, !dbg !13162
  br i1 %6, label %7, label %25, !dbg !13163

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #26, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %8, metadata !13158, metadata !DIExpression()), !dbg !13159
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13166
  %10 = icmp eq i32 %9, 1, !dbg !13168
  br i1 %10, label %19, label %11, !dbg !13169

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13170
  br i1 %12, label %13, label %14, !dbg !13173

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !13174
  br label %15, !dbg !13176

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !13177
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !13179
  br label %16, !dbg !13180

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !13181
  %18 = icmp eq i32 %17, 1, !dbg !13182
  br i1 %18, label %19, label %16, !dbg !13180, !llvm.loop !13183

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !13185
  %21 = load i32, i32* %20, align 4, !dbg !13185
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !13186
  %23 = load i32, i32* %22, align 4, !dbg !13186
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.104(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #26, !dbg !13187
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !13188
  call void @llvm.dbg.value(metadata i32 %24, metadata !13157, metadata !DIExpression()), !dbg !13159
  br label %25, !dbg !13189

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13190
  call void @llvm.dbg.value(metadata i32 %26, metadata !13157, metadata !DIExpression()), !dbg !13159
  ret i32 %26, !dbg !13191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !13192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13193
  %2 = lshr i32 %1, 17, !dbg !13194
  %3 = and i32 %2, 1, !dbg !13194
  ret i32 %3, !dbg !13195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #16 !dbg !13196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13197
  %2 = or i32 %1, 262144, !dbg !13197
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13197
  ret void, !dbg !13198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #16 !dbg !13199 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13200
  %2 = and i32 %1, -262145, !dbg !13200
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13200
  ret void, !dbg !13201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #16 !dbg !13202 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13203
  %2 = or i32 %1, 65536, !dbg !13203
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13203
  ret void, !dbg !13204
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !13205 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13208, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.value(metadata i32 undef, metadata !13208, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.value(metadata i32 undef, metadata !13208, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13224
  ret void, !dbg !13225
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13230, metadata !DIExpression()), !dbg !13232
  %2 = icmp eq i8* %0, null, !dbg !13233
  br i1 %2, label %29, label %3, !dbg !13235

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13236
  %5 = icmp eq i8 %4, 0, !dbg !13237
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13238
  br i1 %6, label %29, label %8, !dbg !13238

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13231, metadata !DIExpression()), !dbg !13232
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13239

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13231, metadata !DIExpression()), !dbg !13232
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !13241
  br i1 %10, label %11, label %15, !dbg !13246

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13247
  %13 = load i8*, i8** %12, align 4, !dbg !13247
  %14 = icmp eq i8* %13, %0, !dbg !13248
  br i1 %14, label %29, label %15, !dbg !13249

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13250
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13231, metadata !DIExpression()), !dbg !13232
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13251
  br i1 %17, label %7, label %8, !dbg !13252, !llvm.loop !13253

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13231, metadata !DIExpression()), !dbg !13232
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !13255
  br i1 %20, label %21, label %26, !dbg !13259

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13260
  %23 = load i8*, i8** %22, align 4, !dbg !13260
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13261
  %25 = icmp eq i32 %24, 0, !dbg !13262
  br i1 %25, label %29, label %26, !dbg !13263

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13264
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13231, metadata !DIExpression()), !dbg !13232
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13265
  br i1 %28, label %29, label %18, !dbg !13239, !llvm.loop !13266

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13232
  ret %struct.device* %30, !dbg !13268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !13269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13273, metadata !DIExpression()), !dbg !13274
  %2 = icmp eq %struct.device* %0, null, !dbg !13275
  br i1 %2, label %14, label %3, !dbg !13277

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13278
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13278
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13279
  %7 = load i8, i8* %6, align 1, !dbg !13279
  %8 = and i8 %7, 1, !dbg !13279
  %9 = icmp eq i8 %8, 0, !dbg !13279
  br i1 %9, label %14, label %10, !dbg !13280

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13281
  %12 = load i8, i8* %11, align 1, !dbg !13281
  %13 = icmp eq i8 %12, 0, !dbg !13282
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13274
  ret i1 %15, !dbg !13283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !13284 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13289, metadata !DIExpression()), !dbg !13290
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13291
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13293 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13301, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13302, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i8* %2, metadata !13303, metadata !DIExpression()), !dbg !13306
  %5 = bitcast i32* %4 to i8*, !dbg !13307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13307
  call void @llvm.dbg.value(metadata i32 0, metadata !13304, metadata !DIExpression()), !dbg !13306
  store i32 0, i32* %4, align 4, !dbg !13308
  call void @llvm.dbg.value(metadata i32* %4, metadata !13304, metadata !DIExpression(DW_OP_deref)), !dbg !13306
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13309
  call void @llvm.dbg.value(metadata i16* %6, metadata !13305, metadata !DIExpression()), !dbg !13306
  %7 = load i32, i32* %4, align 4, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %7, metadata !13304, metadata !DIExpression()), !dbg !13306
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13312
  ret i32 %8, !dbg !13313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13314 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13318, metadata !DIExpression()), !dbg !13324
  call void @llvm.dbg.value(metadata i32* %1, metadata !13319, metadata !DIExpression()), !dbg !13324
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13325
  %4 = load i16*, i16** %3, align 4, !dbg !13325
  call void @llvm.dbg.value(metadata i16* %4, metadata !13320, metadata !DIExpression()), !dbg !13324
  %5 = icmp eq i16* %4, null, !dbg !13326
  br i1 %5, label %14, label %6, !dbg !13327

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13328
  call void @llvm.dbg.value(metadata i32 %7, metadata !13321, metadata !DIExpression()), !dbg !13328
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13329
  %9 = load i16, i16* %8, align 2, !dbg !13329
  %10 = add i16 %9, -32767, !dbg !13330
  %11 = icmp ult i16 %10, 2, !dbg !13330
  %12 = add i32 %7, 1, !dbg !13331
  call void @llvm.dbg.value(metadata i32 %12, metadata !13321, metadata !DIExpression()), !dbg !13328
  br i1 %11, label %13, label %6, !dbg !13330, !llvm.loop !13333

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13336
  br label %14, !dbg !13337

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13339 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13343, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i32 %1, metadata !13344, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13345, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i8* %3, metadata !13346, metadata !DIExpression()), !dbg !13354
  call void @llvm.dbg.value(metadata i32 0, metadata !13347, metadata !DIExpression()), !dbg !13355
  %5 = icmp eq i32 %1, 0, !dbg !13356
  br i1 %5, label %16, label %8, !dbg !13357

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13347, metadata !DIExpression()), !dbg !13355
  %7 = icmp eq i32 %15, %1, !dbg !13356
  br i1 %7, label %16, label %8, !dbg !13357, !llvm.loop !13358

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13347, metadata !DIExpression()), !dbg !13355
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13360
  %11 = load i16, i16* %10, align 2, !dbg !13360
  call void @llvm.dbg.value(metadata i16 %11, metadata !13349, metadata !DIExpression()), !dbg !13361
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !13362
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13352, metadata !DIExpression()), !dbg !13361
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %13, metadata !13353, metadata !DIExpression()), !dbg !13361
  %14 = icmp slt i32 %13, 0, !dbg !13364
  %15 = add nuw i32 %9, 1, !dbg !13366
  call void @llvm.dbg.value(metadata i32 %15, metadata !13347, metadata !DIExpression()), !dbg !13355
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !13368 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13372, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13373, metadata !DIExpression()), !dbg !13375
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13374, metadata !DIExpression()), !dbg !13375
  %2 = sext i16 %0 to i32, !dbg !13376
  %3 = icmp slt i16 %0, 1, !dbg !13378
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13379
  %6 = add nsw i32 %2, -1, !dbg !13379
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13379
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13379
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13373, metadata !DIExpression()), !dbg !13375
  ret %struct.device* %8, !dbg !13380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13381 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13383, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13384, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.value(metadata i8* %2, metadata !13385, metadata !DIExpression()), !dbg !13388
  %5 = bitcast i32* %4 to i8*, !dbg !13389
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13389
  call void @llvm.dbg.value(metadata i32 0, metadata !13386, metadata !DIExpression()), !dbg !13388
  store i32 0, i32* %4, align 4, !dbg !13390
  call void @llvm.dbg.value(metadata i32* %4, metadata !13386, metadata !DIExpression(DW_OP_deref)), !dbg !13388
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !13391
  call void @llvm.dbg.value(metadata i16* %6, metadata !13387, metadata !DIExpression()), !dbg !13388
  %7 = load i32, i32* %4, align 4, !dbg !13392
  call void @llvm.dbg.value(metadata i32 %7, metadata !13386, metadata !DIExpression()), !dbg !13388
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !13393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13394
  ret i32 %8, !dbg !13395
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !13396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13398, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i32* %1, metadata !13399, metadata !DIExpression()), !dbg !13403
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13404
  %4 = load i16*, i16** %3, align 4, !dbg !13404
  call void @llvm.dbg.value(metadata i16* %4, metadata !13400, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i32 0, metadata !13401, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i32 0, metadata !13402, metadata !DIExpression()), !dbg !13403
  %5 = icmp eq i16* %4, null, !dbg !13405
  br i1 %5, label %22, label %6, !dbg !13407

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13401, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.value(metadata i16* %8, metadata !13400, metadata !DIExpression()), !dbg !13403
  %9 = load i16, i16* %8, align 2, !dbg !13408
  %10 = icmp eq i16 %9, -32768, !dbg !13412
  call void @llvm.dbg.value(metadata i32 undef, metadata !13401, metadata !DIExpression()), !dbg !13403
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13413
  call void @llvm.dbg.value(metadata i16* %11, metadata !13400, metadata !DIExpression()), !dbg !13403
  %12 = zext i1 %10 to i32, !dbg !13414
  %13 = add i32 %7, %12, !dbg !13414
  call void @llvm.dbg.value(metadata i32 %13, metadata !13401, metadata !DIExpression()), !dbg !13403
  %14 = icmp eq i32 %13, 2, !dbg !13415
  br i1 %14, label %15, label %6, !dbg !13416

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13403
  call void @llvm.dbg.value(metadata i32 %16, metadata !13402, metadata !DIExpression()), !dbg !13403
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13417
  %18 = load i16, i16* %17, align 2, !dbg !13417
  %19 = icmp eq i16 %18, 32767, !dbg !13418
  %20 = add i32 %16, 1, !dbg !13419
  call void @llvm.dbg.value(metadata i32 %20, metadata !13402, metadata !DIExpression()), !dbg !13403
  br i1 %19, label %21, label %15, !dbg !13421, !llvm.loop !13422

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13424
  br label %22, !dbg !13425

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13426
  call void @llvm.dbg.value(metadata i16* %23, metadata !13400, metadata !DIExpression()), !dbg !13403
  ret i16* %23, !dbg !13427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !13428 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13429
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13430
  ret i32* %2, !dbg !13431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !13432 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13581, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13582, metadata !DIExpression()), !dbg !13583
  ret void, !dbg !13584
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13589, metadata !DIExpression()), !dbg !13591
  call void @llvm.dbg.value(metadata i32 %1, metadata !13590, metadata !DIExpression()), !dbg !13591
  ret void, !dbg !13592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13597, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 %1, metadata !13598, metadata !DIExpression()), !dbg !13599
  ret void, !dbg !13600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13605, metadata !DIExpression()), !dbg !13607
  call void @llvm.dbg.value(metadata i8* %1, metadata !13606, metadata !DIExpression()), !dbg !13607
  ret i32 -134, !dbg !13608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13613, metadata !DIExpression()), !dbg !13615
  call void @llvm.dbg.value(metadata i8* %1, metadata !13614, metadata !DIExpression()), !dbg !13615
  ret i32 -134, !dbg !13616
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13620, metadata !DIExpression()), !dbg !13621
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13622, !srcloc !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13625, metadata !DIExpression()) #24, !dbg !13629
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #24, !dbg !13629
  br label %3, !dbg !13630

3:                                                ; preds = %3, %1
  br label %3, !dbg !13631, !llvm.loop !13634
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13641, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13642, metadata !DIExpression()), !dbg !13643
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13644
  unreachable, !dbg !13644
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13647, metadata !DIExpression()), !dbg !13648
  tail call void @arch_system_halt(i32 noundef %0) #30, !dbg !13649
  unreachable, !dbg !13649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13652, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13653, metadata !DIExpression()), !dbg !13656
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13657, !srcloc !13628
  call void @llvm.dbg.value(metadata i32 undef, metadata !13625, metadata !DIExpression()) #24, !dbg !13659
  call void @llvm.dbg.value(metadata i32 undef, metadata !13626, metadata !DIExpression()) #24, !dbg !13659
  call void @llvm.dbg.value(metadata i32 undef, metadata !13654, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13655, metadata !DIExpression()), !dbg !13656
  %4 = icmp eq %struct.__esf* %1, null, !dbg !13660
  br i1 %4, label %6, label %5, !dbg !13662

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !13663
  br label %7, !dbg !13664

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !13663
  br label %7, !dbg !13667

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !13657
  call void @llvm.dbg.value(metadata i32 %8, metadata !13625, metadata !DIExpression()) #24, !dbg !13659
  call void @llvm.dbg.value(metadata i32 %8, metadata !13654, metadata !DIExpression()), !dbg !13656
  %9 = tail call fastcc %struct.k_thread* @k_current_get.120() #27, !dbg !13669
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13655, metadata !DIExpression()), !dbg !13656
  call void @llvm.dbg.value(metadata i32 undef, metadata !13670, metadata !DIExpression()) #24, !dbg !13673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !13675, !srcloc !13676
  tail call fastcc void @k_thread_abort.121(%struct.k_thread* noundef %9) #26, !dbg !13677
  ret void, !dbg !13680
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.120() unnamed_addr #9 !dbg !13681 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.122() #27, !dbg !13685
  ret %struct.k_thread* %1, !dbg !13686
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.121(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13691, metadata !DIExpression()), !dbg !13692
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13693, !srcloc !13695
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13696
  ret void, !dbg !13697
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.122() unnamed_addr #9 !dbg !13698 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !13699, !srcloc !13701
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13702
  ret %struct.k_thread* %1, !dbg !13703
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13704 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13708, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i32 %1, metadata !13709, metadata !DIExpression()), !dbg !13711
  call void @llvm.dbg.value(metadata i32 %2, metadata !13710, metadata !DIExpression()), !dbg !13711
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13712
  ret void, !dbg !13713
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13718, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.value(metadata i8* %1, metadata !13719, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.value(metadata i32 %2, metadata !13720, metadata !DIExpression()), !dbg !13721
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13722
  ret void, !dbg !13723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13724 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13725
  ret void, !dbg !13726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13729, metadata !DIExpression()), !dbg !13730
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13731
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13732
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13733
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13734
  %4 = trunc i32 %0 to i8, !dbg !13735
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13736
  store i8 %4, i8* %5, align 4, !dbg !13737
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13738
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13739
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13740
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13741
  store i8* %8, i8** %9, align 4, !dbg !13742
  ret void, !dbg !13743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13746, metadata !DIExpression()), !dbg !13752
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13753
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13747, metadata !DIExpression()), !dbg !13752
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13754
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13748, metadata !DIExpression()), !dbg !13752
  call void @llvm.dbg.value(metadata i8* null, metadata !13751, metadata !DIExpression()), !dbg !13752
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13755
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13756
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !13757
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13758
  ret void, !dbg !13759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13760 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13764, metadata !DIExpression()), !dbg !13765
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13766
  ret i8* %2, !dbg !13767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13773, metadata !DIExpression()), !dbg !13774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13775
  %3 = load i8, i8* %2, align 1, !dbg !13776
  %4 = and i8 %3, -5, !dbg !13776
  store i8 %4, i8* %2, align 1, !dbg !13776
  ret void, !dbg !13777
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !13778 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13781
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13782
  %3 = ptrtoint i8* %2 to i32, !dbg !13791
  %4 = add i32 %3, 2048, !dbg !13792
  call void @llvm.dbg.value(metadata i32 %4, metadata !13786, metadata !DIExpression()) #24, !dbg !13793
  call void @llvm.dbg.value(metadata i32 %4, metadata !13794, metadata !DIExpression()) #24, !dbg !13797
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !13799, !srcloc !13800
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13801
  %6 = or i32 %5, 512, !dbg !13801
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13801
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -2, i32 noundef 255) #25, !dbg !13802
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -5, i32 noundef 0) #25, !dbg !13805
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -12, i32 noundef 0) #25, !dbg !13806
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -11, i32 noundef 0) #25, !dbg !13807
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -10, i32 noundef 0) #25, !dbg !13808
  tail call fastcc void @__NVIC_SetPriority.129(i32 noundef -4, i32 noundef 0) #25, !dbg !13809
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13810
  %8 = or i32 %7, 458752, !dbg !13810
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13810
  tail call void @z_arm_fault_init() #25, !dbg !13811
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13812
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13813
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13816
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13817
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13818
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13819
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #24, !dbg !13819
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13780, metadata !DIExpression()), !dbg !13820
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13821
  call void @z_device_state_init() #25, !dbg !13822
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13823
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13824
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13825
  call fastcc void @switch_to_main_thread(i8* noundef %11) #30, !dbg !13826
  unreachable, !dbg !13826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2210, metadata !DIExpression()), !dbg !13827
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13828
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13828
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13827
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13827
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13829
  br i1 %7, label %8, label %35, !dbg !13830

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2211, metadata !DIExpression()), !dbg !13827
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13831
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13831
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2221, metadata !DIExpression()), !dbg !13832
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13833
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13833
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13834
  call void @llvm.dbg.value(metadata i32 %14, metadata !2225, metadata !DIExpression()), !dbg !13832
  %15 = icmp eq %struct.device* %11, null, !dbg !13835
  br i1 %15, label %32, label %16, !dbg !13837

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13838
  br i1 %17, label %26, label %18, !dbg !13841

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13842
  call void @llvm.dbg.value(metadata i32 %19, metadata !2225, metadata !DIExpression()), !dbg !13832
  %20 = icmp ult i32 %19, 255, !dbg !13844
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13844
  call void @llvm.dbg.value(metadata i32 %21, metadata !2225, metadata !DIExpression()), !dbg !13832
  %22 = trunc i32 %21 to i8, !dbg !13845
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13846
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13846
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13847
  store i8 %22, i8* %25, align 1, !dbg !13848
  br label %26, !dbg !13849

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13850
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13850
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13851
  %30 = load i8, i8* %29, align 1, !dbg !13852
  %31 = or i8 %30, 1, !dbg !13852
  store i8 %31, i8* %29, align 1, !dbg !13852
  br label %32, !dbg !13853

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13854
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2211, metadata !DIExpression()), !dbg !13827
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13829
  br i1 %34, label %8, label %35, !dbg !13830, !llvm.loop !13855

35:                                               ; preds = %32, %1
  ret void, !dbg !13857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.129(i32 noundef %0, i32 noundef %1) unnamed_addr #16 !dbg !13858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13860, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.value(metadata i32 %1, metadata !13861, metadata !DIExpression()), !dbg !13862
  %3 = trunc i32 %1 to i8, !dbg !13863
  %4 = shl i8 %3, 4, !dbg !13863
  %5 = and i32 %0, 15, !dbg !13866
  %6 = add nsw i32 %5, -4, !dbg !13867
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13868
  store volatile i8 %4, i8* %7, align 1, !dbg !13869
  ret void, !dbg !13870
}

; Function Attrs: optsize
declare !dbg !13871 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13875, metadata !DIExpression()), !dbg !13876
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13877
  store i8 1, i8* %2, align 1, !dbg !13878
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13879
  store i8 1, i8* %3, align 4, !dbg !13880
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13881
  store i32 0, i32* %4, align 4, !dbg !13882
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13883
  store i32 0, i32* %5, align 4, !dbg !13884
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13885
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13886
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13887
  ret void, !dbg !13888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13889 {
  tail call void @z_sched_init() #25, !dbg !13894
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13895
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0)) #25, !dbg !13896
  call void @llvm.dbg.value(metadata i8* %1, metadata !13893, metadata !DIExpression()), !dbg !13897
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13898
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13899
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13900
  ret i8* %1, !dbg !13901
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !13902 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13906, metadata !DIExpression()), !dbg !13907
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13908
  unreachable, !dbg !13909
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13912, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i8* %1, metadata !13913, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.value(metadata i8* %2, metadata !13914, metadata !DIExpression()), !dbg !13915
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13916
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13917
  tail call void @boot_banner() #25, !dbg !13918
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13919
  tail call void @z_init_static_threads() #25, !dbg !13920
  tail call void @main() #25, !dbg !13921
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13922
  %5 = and i8 %4, -2, !dbg !13922
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13922
  ret void, !dbg !13923
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13924 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13934, metadata !DIExpression()), !dbg !13936
  call void @llvm.dbg.value(metadata i8* %1, metadata !13935, metadata !DIExpression()), !dbg !13936
  ret void, !dbg !13937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13938 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i8* %1, metadata !13941, metadata !DIExpression()), !dbg !13942
  ret void, !dbg !13943
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13944 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13945, !srcloc !13952
  call void @llvm.dbg.value(metadata i32 %1, metadata !13948, metadata !DIExpression()) #24, !dbg !13953
  %2 = icmp ne i32 %1, 0, !dbg !13954
  ret i1 %2, !dbg !13955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !13956 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13957
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13958
  %3 = load i8, i8* %2, align 4, !dbg !13959
  %4 = or i8 %3, 1, !dbg !13959
  store i8 %4, i8* %2, align 4, !dbg !13959
  ret void, !dbg !13960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !13961 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13962
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13963
  %3 = load i8, i8* %2, align 4, !dbg !13964
  %4 = and i8 %3, -2, !dbg !13964
  store i8 %4, i8* %2, align 4, !dbg !13964
  ret void, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13966 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13968
  %3 = load i8, i8* %2, align 4, !dbg !13968
  %4 = and i8 %3, 1, !dbg !13969
  %5 = icmp ne i8 %4, 0, !dbg !13970
  ret i1 %5, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13972 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13976, metadata !DIExpression()), !dbg !13978
  call void @llvm.dbg.value(metadata i8* %1, metadata !13977, metadata !DIExpression()), !dbg !13978
  ret i32 -88, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13984, metadata !DIExpression()), !dbg !13985
  ret i8* null, !dbg !13986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13991, metadata !DIExpression()), !dbg !13994
  call void @llvm.dbg.value(metadata i8* %1, metadata !13992, metadata !DIExpression()), !dbg !13994
  call void @llvm.dbg.value(metadata i32 %2, metadata !13993, metadata !DIExpression()), !dbg !13994
  ret i32 -88, !dbg !13995
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2348, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i8* %1, metadata !2349, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %2, metadata !2350, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 0, metadata !2351, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i8 undef, metadata !2353, metadata !DIExpression()), !dbg !13996
  %4 = icmp eq i8* %1, null, !dbg !13997
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13999
  br i1 %6, label %46, label %7, !dbg !13999

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14000
  %9 = load i8, i8* %8, align 1, !dbg !14000
  call void @llvm.dbg.value(metadata i8 %9, metadata !2353, metadata !DIExpression()), !dbg !13996
  %10 = add i32 %2, -1, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %10, metadata !2350, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i8 0, metadata !2354, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i8 %9, metadata !2353, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 0, metadata !2351, metadata !DIExpression()), !dbg !13996
  %11 = icmp eq i8 %9, 0, !dbg !14003
  br i1 %11, label %12, label %15, !dbg !14005

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14006
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14007
  store i8 0, i8* %14, align 1, !dbg !14008
  br label %46, !dbg !14009

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2354, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.value(metadata i8 %17, metadata !2353, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %18, metadata !2351, metadata !DIExpression()), !dbg !13996
  %19 = zext i8 %17 to i32, !dbg !14010
  %20 = zext i8 %16 to i32, !dbg !14011
  %21 = shl nuw i32 1, %20, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %21, metadata !2352, metadata !DIExpression()), !dbg !13996
  %22 = and i32 %21, %19, !dbg !14013
  %23 = icmp eq i32 %22, 0, !dbg !14015
  br i1 %23, label %42, label %24, !dbg !14016

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14017
  %26 = sub i32 %10, %18, !dbg !14018
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14019
  %28 = load i8*, i8** %27, align 4, !dbg !14019
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14020
  %30 = load i32, i32* %29, align 4, !dbg !14020
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !14021
  %32 = add i32 %31, %18, !dbg !14022
  call void @llvm.dbg.value(metadata i32 %32, metadata !2351, metadata !DIExpression()), !dbg !13996
  %33 = trunc i32 %21 to i8, !dbg !14023
  %34 = xor i8 %33, -1, !dbg !14023
  %35 = and i8 %17, %34, !dbg !14023
  call void @llvm.dbg.value(metadata i8 %35, metadata !2353, metadata !DIExpression()), !dbg !13996
  %36 = icmp eq i8 %35, 0, !dbg !14024
  br i1 %36, label %12, label %37, !dbg !14026

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14027
  %39 = sub i32 %10, %32, !dbg !14029
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !14030
  %41 = add i32 %40, %32, !dbg !14031
  call void @llvm.dbg.value(metadata i32 %41, metadata !2351, metadata !DIExpression()), !dbg !13996
  br label %42, !dbg !14032

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13996
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13996
  call void @llvm.dbg.value(metadata i8 %44, metadata !2353, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 %43, metadata !2351, metadata !DIExpression()), !dbg !13996
  %45 = add i8 %16, 1, !dbg !14033
  call void @llvm.dbg.value(metadata i8 %45, metadata !2354, metadata !DIExpression()), !dbg !14002
  br label %15, !dbg !14005

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !13996
  ret i8* %47, !dbg !14034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14039, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i32 %1, metadata !14040, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i8* %2, metadata !14041, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata i32 %3, metadata !14042, metadata !DIExpression()), !dbg !14044
  %5 = icmp ult i32 %1, %3, !dbg !14045
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14045
  call void @llvm.dbg.value(metadata i32 %6, metadata !14043, metadata !DIExpression()), !dbg !14044
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14046
  ret i32 %6, !dbg !14047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14052, metadata !DIExpression()), !dbg !14053
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14054
  ret void, !dbg !14055
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14056 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14065, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14066, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 %2, metadata !14067, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14068, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* %4, metadata !14069, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* %5, metadata !14070, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* %6, metadata !14071, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 %7, metadata !14072, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i32 %8, metadata !14073, metadata !DIExpression()), !dbg !14076
  call void @llvm.dbg.value(metadata i8* undef, metadata !14074, metadata !DIExpression()), !dbg !14076
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14077
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !14078
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14079
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !14080
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !14081
  call void @llvm.dbg.value(metadata i8* %13, metadata !14075, metadata !DIExpression()), !dbg !14076
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14082
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14083
  store i8* null, i8** %14, align 4, !dbg !14084
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14085
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !14085
  br i1 %16, label %20, label %17, !dbg !14087

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !14088
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !14088
  br label %20, !dbg !14089

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !14076
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14090
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !14092
  ret i8* %13, !dbg !14093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !14094 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14099, metadata !DIExpression()), !dbg !14100
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14101
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !14102
  ret void, !dbg !14103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !14104 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14109, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata i32 %1, metadata !14110, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata i32 %2, metadata !14111, metadata !DIExpression()), !dbg !14113
  call void @llvm.dbg.value(metadata i32 %3, metadata !14112, metadata !DIExpression()), !dbg !14113
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14114
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14115
  %6 = trunc i32 %3 to i8, !dbg !14116
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14117
  store i8 %6, i8* %7, align 4, !dbg !14118
  %8 = trunc i32 %2 to i8, !dbg !14119
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14120
  store i8 %8, i8* %9, align 1, !dbg !14121
  %10 = trunc i32 %1 to i8, !dbg !14122
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14123
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14123
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14123
  store i8 %10, i8* %13, align 2, !dbg !14124
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14125
  store i8 0, i8* %14, align 1, !dbg !14126
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !14127
  ret void, !dbg !14128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !14129 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14133, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14134, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 %2, metadata !14135, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %4 = add i32 %2, 7, !dbg !14142
  %5 = and i32 %4, -8, !dbg !14142
  %6 = add i32 %5, 64, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %6, metadata !14136, metadata !DIExpression()), !dbg !14141
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.141(%struct.z_thread_stack_element* noundef %1) #26, !dbg !14144
  call void @llvm.dbg.value(metadata i8* %7, metadata !14139, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 %5, metadata !14137, metadata !DIExpression()), !dbg !14141
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14145
  call void @llvm.dbg.value(metadata i8* %8, metadata !14138, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata i32 0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %9 = ptrtoint i8* %7 to i32, !dbg !14146
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14147
  store i32 %9, i32* %10, align 4, !dbg !14148
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14149
  store i32 %5, i32* %11, align 4, !dbg !14150
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14151
  store i32 0, i32* %12, align 4, !dbg !14152
  call void @llvm.dbg.value(metadata i8* %8, metadata !14138, metadata !DIExpression()), !dbg !14141
  ret i8* %8, !dbg !14153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.141(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !14154 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14158, metadata !DIExpression()), !dbg !14159
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14160
  ret i8* %2, !dbg !14161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14162 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14167, metadata !DIExpression()), !dbg !14168
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14169
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14170
  ret void, !dbg !14171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14172 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14174, metadata !DIExpression()), !dbg !14175
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14176
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !14177
  ret void, !dbg !14178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14179 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14183, metadata !DIExpression()), !dbg !14184
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14185
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14186
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14187
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14188
  ret void, !dbg !14189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14190 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14195, metadata !DIExpression()), !dbg !14196
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14197
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14198
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14199
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14200
  ret void, !dbg !14201
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14202 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14219, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14211, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i32 %2, metadata !14212, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14213, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i8* %4, metadata !14214, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i8* %5, metadata !14215, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i8* %6, metadata !14216, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i32 %7, metadata !14217, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata i32 %8, metadata !14218, metadata !DIExpression()), !dbg !14220
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !14221
  %13 = icmp eq i64 %11, -1, !dbg !14222
  br i1 %13, label %15, label %14, !dbg !14224

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !14225
  br label %15, !dbg !14227

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !14228
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14229 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14234, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14233, metadata !DIExpression()), !dbg !14235
  %4 = icmp eq i64 %3, 0, !dbg !14236
  br i1 %4, label %5, label %6, !dbg !14238

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14239
  br label %7, !dbg !14241

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14242
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14244
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14249, metadata !DIExpression()), !dbg !14250
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !14251, !srcloc !14253
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !14254
  ret void, !dbg !14255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14256 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14259, metadata !DIExpression()), !dbg !14260
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14258, metadata !DIExpression()), !dbg !14260
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14261
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14262
  ret void, !dbg !14263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14264 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14266, metadata !DIExpression()), !dbg !14286
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !14287

1:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14288
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14284, metadata !DIExpression()), !dbg !14289
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !14290

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14266, metadata !DIExpression()), !dbg !14286
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14291
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14291
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14294
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !14294
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14295
  %9 = load i32, i32* %8, align 4, !dbg !14295
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14296
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !14296
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14297
  %13 = load i8*, i8** %12, align 4, !dbg !14297
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14298
  %15 = load i8*, i8** %14, align 4, !dbg !14298
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14299
  %17 = load i8*, i8** %16, align 4, !dbg !14299
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14300
  %19 = load i32, i32* %18, align 4, !dbg !14300
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14301
  %21 = load i32, i32* %20, align 4, !dbg !14301
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !14302
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !14303
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !14304
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !14305
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !14305
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14306
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !14266, metadata !DIExpression()), !dbg !14286
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14307
  br i1 %27, label %2, label %1, !dbg !14287, !llvm.loop !14309

28:                                               ; preds = %0
  tail call void @k_sched_lock() #25, !dbg !14288
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14284, metadata !DIExpression()), !dbg !14289
  br label %29, !dbg !14290

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #25, !dbg !14311
  ret void, !dbg !14312

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14284, metadata !DIExpression()), !dbg !14289
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !14313
  %33 = load i32, i32* %32, align 4, !dbg !14313
  %34 = icmp eq i32 %33, -1, !dbg !14317
  br i1 %34, label %43, label %35, !dbg !14318

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !14319
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !14319
  %38 = icmp sgt i32 %33, 0, !dbg !14321
  %39 = select i1 %38, i32 %33, i32 0, !dbg !14321
  %40 = zext i32 %39 to i64, !dbg !14321
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64.144(i64 noundef %40) #26, !dbg !14321
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !14322
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !14322
  br label %43, !dbg !14323

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !14324
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !14284, metadata !DIExpression()), !dbg !14289
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14325
  br i1 %45, label %30, label %29, !dbg !14290, !llvm.loop !14327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.144(i64 noundef %0) unnamed_addr #11 !dbg !14329 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14331, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.value(metadata i64 %0, metadata !14333, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i32 1000, metadata !14336, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i32 10000, metadata !14337, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i8 1, metadata !14338, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i8 0, metadata !14339, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i8 1, metadata !14340, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i8 0, metadata !14341, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i8 1, metadata !14342, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i8 0, metadata !14343, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i64 0, metadata !14344, metadata !DIExpression()), !dbg !14348
  call void @llvm.dbg.value(metadata i64 0, metadata !14344, metadata !DIExpression()), !dbg !14348
  %2 = mul i64 %0, 10, !dbg !14350
  ret i64 %2, !dbg !14356
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14357 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14359, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.value(metadata i8* %1, metadata !14360, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.value(metadata i8* %2, metadata !14361, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.value(metadata i8* %3, metadata !14362, metadata !DIExpression()), !dbg !14363
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14364
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14365
  %7 = load i8, i8* %6, align 4, !dbg !14366
  %8 = or i8 %7, 4, !dbg !14366
  store i8 %8, i8* %6, align 4, !dbg !14366
  tail call void @z_thread_essential_clear() #26, !dbg !14367
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !14368
  unreachable, !dbg !14368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !14369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14373, metadata !DIExpression()), !dbg !14374
  ret i32 -134, !dbg !14375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !14376 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14380, metadata !DIExpression()), !dbg !14382
  call void @llvm.dbg.value(metadata i32 %1, metadata !14381, metadata !DIExpression()), !dbg !14382
  ret i32 -134, !dbg !14383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !14384 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14391, metadata !DIExpression()), !dbg !14393
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !14392, metadata !DIExpression()), !dbg !14393
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14394
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !14396
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14393
  ret i32 %6, !dbg !14397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !14398 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14402, metadata !DIExpression()), !dbg !14403
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !14404
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14403
  ret i32 %3, !dbg !14406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14407 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14409
  ret void, !dbg !14410
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14413, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.value(metadata i8* %1, metadata !14414, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.value(metadata i8* %2, metadata !14415, metadata !DIExpression()), !dbg !14416
  br label %4, !dbg !14417

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14418, !srcloc !14425
  call void @llvm.dbg.value(metadata i32 undef, metadata !14421, metadata !DIExpression()) #24, !dbg !14426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14422, metadata !DIExpression()) #24, !dbg !14426
  tail call fastcc void @k_cpu_idle() #26, !dbg !14427
  br label %4, !dbg !14417, !llvm.loop !14428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14430 {
  tail call void @arch_cpu_idle() #25, !dbg !14431
  ret void, !dbg !14432
}

; Function Attrs: optsize
declare !dbg !14433 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !14434 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14449, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 %1, metadata !14450, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.value(metadata i32 %2, metadata !14451, metadata !DIExpression()), !dbg !14452
  %4 = icmp eq i32 %2, 0, !dbg !14453
  %5 = icmp ugt i32 %1, %2, !dbg !14453
  %6 = or i1 %4, %5, !dbg !14453
  br i1 %6, label %11, label %7, !dbg !14453

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14455
  store i32 %1, i32* %8, align 4, !dbg !14456
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14457
  store i32 %2, i32* %9, align 4, !dbg !14458
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14459
  tail call fastcc void @z_waitq_init.149(%union.anon* noundef %10) #26, !dbg !14460
  br label %11, !dbg !14461

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !14452
  ret i32 %12, !dbg !14462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.149(%union.anon* noundef %0) unnamed_addr #4 !dbg !14463 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14468, metadata !DIExpression()), !dbg !14469
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14470
  tail call fastcc void @sys_dlist_init.150(%struct._dnode* noundef %2) #26, !dbg !14471
  ret void, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.150(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !14473 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14478, metadata !DIExpression()), !dbg !14479
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14480
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14481
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14482
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14483
  ret void, !dbg !14484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14485 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14489, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14576, metadata !DIExpression()) #24, !dbg !14583
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14585, !srcloc !14591
  call void @llvm.dbg.value(metadata i32 undef, metadata !14588, metadata !DIExpression()) #24, !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14589, metadata !DIExpression()) #24, !dbg !14592
  call void @llvm.dbg.value(metadata i32 undef, metadata !14582, metadata !DIExpression()) #24, !dbg !14583
  call void @llvm.dbg.value(metadata i32 undef, metadata !14490, metadata !DIExpression()), !dbg !14575
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14593
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14495, metadata !DIExpression()), !dbg !14575
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14595
  br i1 %5, label %8, label %6, !dbg !14597

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14598, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.value(metadata i32 0, metadata !14603, metadata !DIExpression()), !dbg !14604
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 7, i32 1, !dbg !14607
  store i32 0, i32* %7, align 4, !dbg !14608
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %4) #25, !dbg !14609
  br label %16, !dbg !14610

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14611
  %10 = load i32, i32* %9, align 4, !dbg !14611
  %11 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !14613
  %12 = load i32, i32* %11, align 4, !dbg !14613
  %13 = icmp ne i32 %10, %12, !dbg !14614
  %14 = zext i1 %13 to i32, !dbg !14615
  %15 = add i32 %10, %14, !dbg !14616
  store i32 %15, i32* %9, align 4, !dbg !14616
  br label %16

16:                                               ; preds = %8, %6
  %17 = extractvalue { i32, i32 } %2, 0, !dbg !14585
  call void @llvm.dbg.value(metadata i32 %17, metadata !14588, metadata !DIExpression()) #24, !dbg !14592
  call void @llvm.dbg.value(metadata i32 %17, metadata !14582, metadata !DIExpression()) #24, !dbg !14583
  call void @llvm.dbg.value(metadata i32 %17, metadata !14490, metadata !DIExpression()), !dbg !14575
  %18 = insertvalue [1 x i32] poison, i32 %17, 0, !dbg !14617
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %18) #25, !dbg !14617
  ret void, !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14619 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14628, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14627, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i32 0, metadata !14629, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14576, metadata !DIExpression()) #24, !dbg !14633
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14635, !srcloc !14591
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14635
  call void @llvm.dbg.value(metadata i32 %4, metadata !14588, metadata !DIExpression()) #24, !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14589, metadata !DIExpression()) #24, !dbg !14637
  call void @llvm.dbg.value(metadata i32 %4, metadata !14582, metadata !DIExpression()) #24, !dbg !14633
  call void @llvm.dbg.value(metadata i32 %4, metadata !14630, metadata !DIExpression()), !dbg !14632
  %5 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14638
  %6 = load i32, i32* %5, align 4, !dbg !14638
  %7 = icmp eq i32 %6, 0, !dbg !14638
  br i1 %7, label %10, label %8, !dbg !14640, !prof !14641

8:                                                ; preds = %2
  %9 = add i32 %6, -1, !dbg !14642
  store i32 %9, i32* %5, align 4, !dbg !14642
  call void @llvm.dbg.value(metadata i32 %4, metadata !14644, metadata !DIExpression()) #24, !dbg !14650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14649, metadata !DIExpression()) #24, !dbg !14650
  call void @llvm.dbg.value(metadata i32 %4, metadata !14652, metadata !DIExpression()) #24, !dbg !14655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14657, !srcloc !14658
  call void @llvm.dbg.value(metadata i32 0, metadata !14629, metadata !DIExpression()), !dbg !14632
  br label %18, !dbg !14659

10:                                               ; preds = %2
  %11 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !14628, metadata !DIExpression()), !dbg !14632
  %12 = icmp eq i64 %11, 0, !dbg !14660
  br i1 %12, label %13, label %14, !dbg !14662

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %4, metadata !14644, metadata !DIExpression()) #24, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14649, metadata !DIExpression()) #24, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %4, metadata !14652, metadata !DIExpression()) #24, !dbg !14666
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14668, !srcloc !14658
  call void @llvm.dbg.value(metadata i32 -16, metadata !14629, metadata !DIExpression()), !dbg !14632
  br label %18, !dbg !14669

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !14670
  %16 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !14671
  %17 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %16, %union.anon* noundef %15, [1 x i64] %1) #25, !dbg !14671
  call void @llvm.dbg.value(metadata i32 %17, metadata !14629, metadata !DIExpression()), !dbg !14632
  br label %18, !dbg !14672

18:                                               ; preds = %8, %13, %14
  %19 = phi i32 [ 0, %8 ], [ -16, %13 ], [ %17, %14 ], !dbg !14632
  call void @llvm.dbg.value(metadata i32 %19, metadata !14629, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.label(metadata !14631), !dbg !14673
  ret i32 %19, !dbg !14674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !14675 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !14677, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14576, metadata !DIExpression()) #24, !dbg !14681
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14683, !srcloc !14591
  call void @llvm.dbg.value(metadata i32 undef, metadata !14588, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14589, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14582, metadata !DIExpression()) #24, !dbg !14681
  call void @llvm.dbg.value(metadata i32 undef, metadata !14679, metadata !DIExpression()), !dbg !14680
  %3 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14678, metadata !DIExpression()), !dbg !14680
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14688
  br i1 %5, label %11, label %6, !dbg !14690

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !14598, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32 -11, metadata !14603, metadata !DIExpression()), !dbg !14691
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14693
  store i32 -11, i32* %8, align 4, !dbg !14694
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !14695
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %3) #25, !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14678, metadata !DIExpression()), !dbg !14680
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14688
  br i1 %10, label %11, label %6, !dbg !14690, !llvm.loop !14696

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14683
  call void @llvm.dbg.value(metadata i32 %12, metadata !14588, metadata !DIExpression()) #24, !dbg !14685
  call void @llvm.dbg.value(metadata i32 %12, metadata !14582, metadata !DIExpression()) #24, !dbg !14681
  call void @llvm.dbg.value(metadata i32 %12, metadata !14679, metadata !DIExpression()), !dbg !14680
  %13 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !14699
  store i32 0, i32* %13, align 4, !dbg !14700
  %14 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14701
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock, [1 x i32] %14) #25, !dbg !14701
  ret void, !dbg !14702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14707, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14708, metadata !DIExpression()), !dbg !14711
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14712
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14712
  %5 = load i8, i8* %4, align 2, !dbg !14712
  call void @llvm.dbg.value(metadata i8 %5, metadata !14709, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14711
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14713
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14713
  %8 = load i8, i8* %7, align 2, !dbg !14713
  call void @llvm.dbg.value(metadata i8 %8, metadata !14710, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14711
  %9 = icmp eq i8 %8, %5, !dbg !14714
  %10 = sext i8 %5 to i32, !dbg !14716
  %11 = sext i8 %8 to i32, !dbg !14716
  %12 = sub nsw i32 %11, %10, !dbg !14716
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14716
  ret i32 %13, !dbg !14717
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14722, metadata !DIExpression()), !dbg !14723
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14724
  %3 = icmp eq i32 %2, 0, !dbg !14726
  br i1 %3, label %8, label %4, !dbg !14727

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14728
  %6 = add i32 %5, %2, !dbg !14730
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14731
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14732
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14733
  br label %8, !dbg !14734

8:                                                ; preds = %4, %1
  ret void, !dbg !14735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14740, metadata !DIExpression()), !dbg !14742
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14743
  call void @llvm.dbg.value(metadata i32 %1, metadata !14741, metadata !DIExpression()), !dbg !14742
  ret i32 %1, !dbg !14744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14749, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 %1, metadata !14750, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 0, metadata !14751, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !14767
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14769, !srcloc !14775
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14769
  call void @llvm.dbg.value(metadata i32 %4, metadata !14772, metadata !DIExpression()) #24, !dbg !14776
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !14776
  call void @llvm.dbg.value(metadata i32 %4, metadata !14766, metadata !DIExpression()) #24, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %4, metadata !14757, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()), !dbg !14759
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14777
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14780
  %6 = icmp sgt i32 %0, 0, !dbg !14781
  %7 = icmp sgt i32 %5, 2, !dbg !14783
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14783
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14783
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14784
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14785
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %4, metadata !14787, metadata !DIExpression()) #24, !dbg !14793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !14793
  call void @llvm.dbg.value(metadata i32 %4, metadata !14795, metadata !DIExpression()) #24, !dbg !14798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !14800, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !14751, metadata !DIExpression()), !dbg !14759
  call void @llvm.dbg.value(metadata i32 undef, metadata !14751, metadata !DIExpression()), !dbg !14759
  ret void, !dbg !14802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14805, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i32 %0, metadata !14807, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14822
  call void @llvm.dbg.value(metadata i32 1000, metadata !14810, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i32 10000, metadata !14811, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i8 1, metadata !14812, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i1 true, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14822
  call void @llvm.dbg.value(metadata i1 true, metadata !14814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14822
  call void @llvm.dbg.value(metadata i8 0, metadata !14815, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i1 true, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14822
  call void @llvm.dbg.value(metadata i1 false, metadata !14817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14822
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !14822
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !14822
  %2 = mul i32 %0, 10, !dbg !14824
  ret i32 %2, !dbg !14830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14833, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !14836
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14838, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14838
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !14840
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %3, metadata !14834, metadata !DIExpression()), !dbg !14835
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14841
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14843
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14844
  br i1 %6, label %7, label %8, !dbg !14845

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14846
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !14848
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !14850
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14852, !srcloc !14801
  br label %24, !dbg !14853

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14854
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14855
  %10 = icmp eq i32 %9, 0, !dbg !14855
  br i1 %10, label %21, label %11, !dbg !14857

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14858
  br i1 %12, label %13, label %21, !dbg !14859

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14860
  %15 = icmp sgt i32 %14, %0, !dbg !14863
  br i1 %15, label %19, label %16, !dbg !14864

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14865
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14865
  call void @llvm.dbg.value(metadata i32 %18, metadata !14834, metadata !DIExpression()), !dbg !14835
  br label %22, !dbg !14867

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14868
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14868
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14870
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14835
  call void @llvm.dbg.value(metadata i32 %23, metadata !14834, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 %23, metadata !14787, metadata !DIExpression()) #24, !dbg !14872
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !14872
  call void @llvm.dbg.value(metadata i32 %23, metadata !14795, metadata !DIExpression()) #24, !dbg !14874
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !14876, !srcloc !14801
  br label %24, !dbg !14877

24:                                               ; preds = %22, %7
  ret void, !dbg !14877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14882, metadata !DIExpression()), !dbg !14884
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14885
  %3 = icmp eq i32 %2, 0, !dbg !14885
  br i1 %3, label %16, label %4, !dbg !14886

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14887
  br i1 %5, label %16, label %6, !dbg !14888

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14889
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14889
  %9 = load i8, i8* %8, align 2, !dbg !14889
  %10 = sext i8 %9 to i32, !dbg !14890
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14891
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14892
  br i1 %12, label %16, label %13, !dbg !14893

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14894
  %15 = xor i1 %14, true, !dbg !14895
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14884
  call void @llvm.dbg.value(metadata i1 %17, metadata !14883, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14884
  ret i1 %17, !dbg !14896
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14897 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14901, metadata !DIExpression()), !dbg !14903
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14904
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14902, metadata !DIExpression()), !dbg !14903
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14905
  br i1 %3, label %5, label %4, !dbg !14907

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14908
  br label %5, !dbg !14910

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14901, metadata !DIExpression()), !dbg !14903
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14911
  ret i32 %6, !dbg !14912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14913 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14915, metadata !DIExpression()), !dbg !14917
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14918
  %3 = load i8, i8* %2, align 1, !dbg !14918
  call void @llvm.dbg.value(metadata i8 %3, metadata !14916, metadata !DIExpression()), !dbg !14917
  %4 = and i8 %3, 31, !dbg !14919
  %5 = icmp ne i8 %4, 0, !dbg !14920
  ret i1 %5, !dbg !14921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14922 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14924, metadata !DIExpression()), !dbg !14925
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14926
  br i1 %2, label %3, label %7, !dbg !14928

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !14932
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14935
  %5 = load i8, i8* %4, align 1, !dbg !14936
  %6 = and i8 %5, 127, !dbg !14936
  store i8 %6, i8* %4, align 1, !dbg !14936
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14937, metadata !DIExpression()) #24, !dbg !14940
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14944
  br label %7, !dbg !14945

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14946, metadata !DIExpression()) #24, !dbg !14949
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14951
  %9 = load i8, i8* %8, align 1, !dbg !14952
  %10 = or i8 %9, -128, !dbg !14952
  store i8 %10, i8* %8, align 1, !dbg !14952
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14953, metadata !DIExpression()) #24, !dbg !14956
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14960, metadata !DIExpression()) #24, !dbg !14968
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()) #24, !dbg !14968
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14970
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14967, metadata !DIExpression()) #24, !dbg !14968
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14972
  br i1 %12, label %23, label %13, !dbg !14970

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14967, metadata !DIExpression()) #24, !dbg !14968
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14974
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14967, metadata !DIExpression()) #24, !dbg !14968
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #25, !dbg !14975
  %17 = icmp sgt i32 %16, 0, !dbg !14978
  br i1 %17, label %18, label %20, !dbg !14979

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14980
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #25, !dbg !14982
  br label %25, !dbg !14983

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #25, !dbg !14972
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14967, metadata !DIExpression()) #24, !dbg !14968
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14972
  br i1 %22, label %23, label %13, !dbg !14970, !llvm.loop !14984

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14986
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #25, !dbg !14987
  br label %25, !dbg !14988

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14989
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14990
  %28 = zext i1 %27 to i32, !dbg !14990
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14991
  ret void, !dbg !14992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14995, metadata !DIExpression()), !dbg !14996
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14997
  ret i1 %2, !dbg !14998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !14999 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15001, metadata !DIExpression()), !dbg !15003
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15002, metadata !DIExpression()), !dbg !15003
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15004
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15005
  ret void, !dbg !15006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !15007 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15011, metadata !DIExpression()), !dbg !15012
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15013
  br i1 %2, label %6, label %3, !dbg !15013

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15014
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15014
  br label %6, !dbg !15013

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15013
  ret %struct._dnode* %7, !dbg !15015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15016 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15020, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15021, metadata !DIExpression()), !dbg !15024
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15025
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15025
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15022, metadata !DIExpression()), !dbg !15024
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15026
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15027
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15028
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15029
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15030
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15031
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15032
  ret void, !dbg !15033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15034 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15038, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15039, metadata !DIExpression()), !dbg !15040
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15041
  br i1 %3, label %6, label %4, !dbg !15042

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !15043
  br label %6, !dbg !15042

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15042
  ret %struct._dnode* %7, !dbg !15044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !15045 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15049, metadata !DIExpression()), !dbg !15052
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15050, metadata !DIExpression()), !dbg !15052
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15053
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15053
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15051, metadata !DIExpression()), !dbg !15052
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15054
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15055
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15056
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15057
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15058
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15059
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15060
  ret void, !dbg !15061
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15064, metadata !DIExpression()), !dbg !15066
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15067
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15074, metadata !DIExpression()) #24, !dbg !15076
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15077
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15078
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15078
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15065, metadata !DIExpression()), !dbg !15066
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15079, metadata !DIExpression()) #24, !dbg !15085
  call void @llvm.dbg.value(metadata i32 %0, metadata !15084, metadata !DIExpression()) #24, !dbg !15085
  %6 = icmp eq i32 %0, 0, !dbg !15088
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15090
  br i1 %6, label %8, label %15, !dbg !15091

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #25, !dbg !15092
  br i1 %9, label %15, label %10, !dbg !15094

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15095
  br i1 %11, label %15, label %12, !dbg !15097

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #25, !dbg !15098
  %14 = icmp eq i32 %13, 0, !dbg !15098
  br i1 %14, label %18, label %15, !dbg !15100

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !15101
  br i1 %16, label %18, label %17, !dbg !15104

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15105
  br label %18, !dbg !15107

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !15090
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15090
  ret void, !dbg !15108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !15109 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15113, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15114, metadata !DIExpression()), !dbg !15116
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !15117
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15115, metadata !DIExpression()), !dbg !15116
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15114, metadata !DIExpression()), !dbg !15116
  ret %struct.k_thread* %3, !dbg !15118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15119 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15121, metadata !DIExpression()), !dbg !15122
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15123
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15124
  %4 = xor i1 %3, true, !dbg !15125
  ret i1 %4, !dbg !15126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15129, metadata !DIExpression()), !dbg !15130
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15131
  %3 = load i16, i16* %2, align 2, !dbg !15131
  %4 = icmp ult i16 %3, 128, !dbg !15132
  %5 = zext i1 %4 to i32, !dbg !15132
  ret i32 %5, !dbg !15133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15134 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15140, metadata !DIExpression()), !dbg !15141
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15142
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !15143
  %4 = xor i1 %3, true, !dbg !15144
  ret i1 %4, !dbg !15145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15146 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15152, metadata !DIExpression()), !dbg !15153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15154
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15154
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15155
  ret i1 %4, !dbg !15156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !15157 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15159, metadata !DIExpression()), !dbg !15161
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15160, metadata !DIExpression()), !dbg !15161
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15162
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15162
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15163
  br i1 %5, label %9, label %6, !dbg !15164

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15165
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15165
  br label %9, !dbg !15164

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15164
  ret %struct._dnode* %10, !dbg !15166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15167 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15171, metadata !DIExpression()), !dbg !15172
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15173
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15173
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15174
  ret i1 %4, !dbg !15175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !15176 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15180, metadata !DIExpression()), !dbg !15183
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15184
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15184
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15181, metadata !DIExpression()), !dbg !15183
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15185
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15185
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15182, metadata !DIExpression()), !dbg !15183
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15186
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15187
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15188
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15189
  tail call fastcc void @sys_dnode_init.155(%struct._dnode* noundef %0) #26, !dbg !15190
  ret void, !dbg !15191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.155(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15192 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15194, metadata !DIExpression()), !dbg !15195
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15196
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15197
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15198
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15199
  ret void, !dbg !15200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15205, metadata !DIExpression()), !dbg !15207
  call void @llvm.dbg.value(metadata i32 128, metadata !15206, metadata !DIExpression()), !dbg !15207
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15208
  %3 = load i8, i8* %2, align 1, !dbg !15208
  %4 = icmp slt i8 %3, 0, !dbg !15209
  ret i1 %4, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15215, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 %1, metadata !15216, metadata !DIExpression()), !dbg !15217
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !15218
  ret i1 %3, !dbg !15219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !15220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15222, metadata !DIExpression()), !dbg !15223
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !15224
  ret i1 %2, !dbg !15225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !15226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15228, metadata !DIExpression()), !dbg !15230
  call void @llvm.dbg.value(metadata i32 %1, metadata !15229, metadata !DIExpression()), !dbg !15230
  %3 = icmp slt i32 %0, %1, !dbg !15231
  ret i1 %3, !dbg !15232
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15233 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15235, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.value(metadata i32 0, metadata !15236, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15241
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15243, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15245
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15245
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !15241
  call void @llvm.dbg.value(metadata i32 %3, metadata !15238, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()), !dbg !15240
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15246
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15251
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15255, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15236, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata i32 undef, metadata !15236, metadata !DIExpression()), !dbg !15240
  ret void, !dbg !15256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15257 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15259, metadata !DIExpression()), !dbg !15260
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15261
  br i1 %2, label %24, label %3, !dbg !15263

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15264
  br i1 %4, label %5, label %24, !dbg !15265

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14946, metadata !DIExpression()) #24, !dbg !15266
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15269
  %7 = load i8, i8* %6, align 1, !dbg !15270
  %8 = or i8 %7, -128, !dbg !15270
  store i8 %8, i8* %6, align 1, !dbg !15270
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14953, metadata !DIExpression()) #24, !dbg !15271
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14960, metadata !DIExpression()) #24, !dbg !15273
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()) #24, !dbg !15273
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15275
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14967, metadata !DIExpression()) #24, !dbg !15273
  %10 = icmp eq %struct._dnode* %9, null, !dbg !15276
  br i1 %10, label %21, label %11, !dbg !15275

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14967, metadata !DIExpression()) #24, !dbg !15273
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !15277
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14967, metadata !DIExpression()) #24, !dbg !15273
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #25, !dbg !15278
  %15 = icmp sgt i32 %14, 0, !dbg !15279
  br i1 %15, label %16, label %18, !dbg !15280

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15281
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #25, !dbg !15282
  br label %23, !dbg !15283

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #25, !dbg !15276
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14967, metadata !DIExpression()) #24, !dbg !15273
  %20 = icmp eq %struct._dnode* %19, null, !dbg !15276
  br i1 %20, label %21, label %11, !dbg !15275, !llvm.loop !15284

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15286
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #25, !dbg !15287
  br label %23, !dbg !15288

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15289
  br label %24, !dbg !15290

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !15291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15294, metadata !DIExpression()), !dbg !15295
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15296
  br i1 %2, label %6, label %3, !dbg !15297

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !15298
  %5 = xor i1 %4, true, !dbg !15297
  br label %6, !dbg !15297

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15302, metadata !DIExpression()), !dbg !15306
  call void @llvm.dbg.value(metadata i32 0, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15308
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15310, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15312
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !15308
  call void @llvm.dbg.value(metadata i32 %3, metadata !15305, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15307
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !15313
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15316
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15318
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15320, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 undef, metadata !15303, metadata !DIExpression()), !dbg !15307
  ret void, !dbg !15321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15324, metadata !DIExpression()), !dbg !15326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15327
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15329, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %3, metadata !15325, metadata !DIExpression()), !dbg !15326
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !15332
  br i1 %4, label %5, label %6, !dbg !15334

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15340, !srcloc !14801
  br label %8, !dbg !15341

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.160(%struct.k_thread* noundef %0) #26, !dbg !15342
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15343
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15344
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15344
  br label %8, !dbg !15345

8:                                                ; preds = %6, %5
  ret void, !dbg !15345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15346 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15348, metadata !DIExpression()), !dbg !15349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15350
  %3 = load i8, i8* %2, align 1, !dbg !15350
  %4 = and i8 %3, 4, !dbg !15351
  %5 = icmp eq i8 %4, 0, !dbg !15352
  ret i1 %5, !dbg !15353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.160(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15356, metadata !DIExpression()), !dbg !15357
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15358
  %3 = load i8, i8* %2, align 1, !dbg !15359
  %4 = and i8 %3, -5, !dbg !15359
  store i8 %4, i8* %2, align 1, !dbg !15359
  ret void, !dbg !15360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15361 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15364, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15363, metadata !DIExpression()), !dbg !15365
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !15366
  br i1 %4, label %5, label %9, !dbg !15368

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !15369
  br i1 %6, label %7, label %9, !dbg !15370

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !15371, metadata !DIExpression()) #24, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15376, metadata !DIExpression()) #24, !dbg !15377
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15380
  br label %10, !dbg !15381

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15382
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15387, !srcloc !14801
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !15388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15393, metadata !DIExpression()), !dbg !15394
  call void @llvm.dbg.value(metadata i32 %0, metadata !15395, metadata !DIExpression()), !dbg !15400
  %2 = icmp eq i32 %0, 0, !dbg !15402
  br i1 %2, label %3, label %6, !dbg !15403

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15404, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %4, metadata !15407, metadata !DIExpression()) #24, !dbg !15412
  %5 = icmp eq i32 %4, 0, !dbg !15413
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15394
  ret i1 %7, !dbg !15414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !15415 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15418
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15417, metadata !DIExpression()), !dbg !15419
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15420
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15421
  ret i1 %3, !dbg !15422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15425, metadata !DIExpression()), !dbg !15427
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15428
  call void @llvm.dbg.value(metadata i32 %2, metadata !15426, metadata !DIExpression()), !dbg !15427
  ret i32 %2, !dbg !15429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15432, metadata !DIExpression()), !dbg !15436
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15437
  call void @llvm.dbg.value(metadata i32 0, metadata !15433, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15439
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15441, !srcloc !14775
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15441
  call void @llvm.dbg.value(metadata i32 %4, metadata !14772, metadata !DIExpression()) #24, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %4, metadata !14766, metadata !DIExpression()) #24, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %4, metadata !15435, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()), !dbg !15438
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15444
  br i1 %5, label %6, label %10, !dbg !15448

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !15449
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15452
  %8 = load i8, i8* %7, align 1, !dbg !15453
  %9 = and i8 %8, 127, !dbg !15453
  store i8 %9, i8* %7, align 1, !dbg !15453
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14937, metadata !DIExpression()) #24, !dbg !15454
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15456
  br label %10, !dbg !15457

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !15458
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15459
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !15460
  %13 = zext i1 %12 to i32, !dbg !15460
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %4, metadata !14787, metadata !DIExpression()) #24, !dbg !15462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %4, metadata !14795, metadata !DIExpression()) #24, !dbg !15464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !15466, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15433, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15433, metadata !DIExpression()), !dbg !15438
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15467
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15469
  br i1 %15, label %16, label %17, !dbg !15470

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15471
  br label %17, !dbg !15473

17:                                               ; preds = %16, %10
  ret void, !dbg !15474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15477, metadata !DIExpression()), !dbg !15478
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15479
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15480
  ret i32 %3, !dbg !15481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15482 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15484, metadata !DIExpression()), !dbg !15485
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15486
  %3 = load i8, i8* %2, align 1, !dbg !15487
  %4 = or i8 %3, 16, !dbg !15487
  store i8 %4, i8* %2, align 1, !dbg !15487
  ret void, !dbg !15488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15489 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15490, !srcloc !14775
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()) #24, !dbg !15492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15492
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15493
  ret void, !dbg !15494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15497, metadata !DIExpression()), !dbg !15498
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15499
  br i1 %2, label %3, label %5, !dbg !15501

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15502
  br label %6, !dbg !15504

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14795, metadata !DIExpression()) #24, !dbg !15505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !15508, !srcloc !14801
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15512, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15515
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15517, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15517
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !15515
  call void @llvm.dbg.value(metadata i32 %3, metadata !15513, metadata !DIExpression()), !dbg !15514
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15520
  br i1 %4, label %6, label %5, !dbg !15522

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15523
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15526
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15528, !srcloc !14801
  br label %8, !dbg !15529

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15530
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15531
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15532
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15532
  br label %8, !dbg !15533

8:                                                ; preds = %6, %5
  ret void, !dbg !15533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15534 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15536, metadata !DIExpression()), !dbg !15537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15538
  %3 = load i8, i8* %2, align 1, !dbg !15538
  %4 = and i8 %3, 16, !dbg !15539
  %5 = icmp ne i8 %4, 0, !dbg !15540
  ret i1 %5, !dbg !15541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15542 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15546
  %3 = load i8, i8* %2, align 1, !dbg !15547
  %4 = and i8 %3, -17, !dbg !15547
  store i8 %4, i8* %2, align 1, !dbg !15547
  ret void, !dbg !15548
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15549 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15559, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15557, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15558, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata i32 0, metadata !15560, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15565
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15567, !srcloc !14775
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15567
  call void @llvm.dbg.value(metadata i32 %5, metadata !14772, metadata !DIExpression()) #24, !dbg !15569
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15569
  call void @llvm.dbg.value(metadata i32 %5, metadata !14766, metadata !DIExpression()) #24, !dbg !15565
  call void @llvm.dbg.value(metadata i32 %5, metadata !15562, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i32 undef, metadata !15560, metadata !DIExpression()), !dbg !15564
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15570
  call void @llvm.dbg.value(metadata i32 %5, metadata !14787, metadata !DIExpression()) #24, !dbg !15573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15573
  call void @llvm.dbg.value(metadata i32 %5, metadata !14795, metadata !DIExpression()) #24, !dbg !15575
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #24, !dbg !15577, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15560, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.value(metadata i32 undef, metadata !15560, metadata !DIExpression()), !dbg !15564
  ret void, !dbg !15578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15579 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15583, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15581, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15582, metadata !DIExpression()), !dbg !15584
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !15585
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15586
  ret void, !dbg !15587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15588 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15592, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15593, metadata !DIExpression()), !dbg !15594
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15595
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15596
  %3 = icmp eq %union.anon* %1, null, !dbg !15597
  br i1 %3, label %21, label %4, !dbg !15599

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15600
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15602
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15603
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14960, metadata !DIExpression()) #24, !dbg !15604
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()) #24, !dbg !15604
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15606
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14967, metadata !DIExpression()) #24, !dbg !15604
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15607
  br i1 %8, label %19, label %9, !dbg !15606

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14967, metadata !DIExpression()) #24, !dbg !15604
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15608
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14967, metadata !DIExpression()) #24, !dbg !15604
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #25, !dbg !15609
  %13 = icmp sgt i32 %12, 0, !dbg !15610
  br i1 %13, label %14, label %16, !dbg !15611

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15612
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #25, !dbg !15613
  br label %21, !dbg !15614

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #25, !dbg !15607
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14967, metadata !DIExpression()) #24, !dbg !15604
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15607
  br i1 %18, label %19, label %9, !dbg !15606, !llvm.loop !15615

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15617
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #25, !dbg !15618
  br label %21, !dbg !15619

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15621 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15626, metadata !DIExpression()), !dbg !15627
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15625, metadata !DIExpression()), !dbg !15627
  %4 = icmp eq i64 %3, -1, !dbg !15628
  br i1 %4, label %6, label %5, !dbg !15630

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.163(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15631
  br label %6, !dbg !15633

6:                                                ; preds = %5, %2
  ret void, !dbg !15634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.163(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15635 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15638, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15637, metadata !DIExpression()), !dbg !15639
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15640
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15641
  ret void, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15645, metadata !DIExpression()), !dbg !15653
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15654
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15654
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15646, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.value(metadata i32 0, metadata !15647, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15656
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15658, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15660
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !15656
  call void @llvm.dbg.value(metadata i32 undef, metadata !15649, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15647, metadata !DIExpression()), !dbg !15655
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15661
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15662
  %7 = load i8, i8* %6, align 1, !dbg !15662
  %8 = and i8 %7, 40, !dbg !15663
  %9 = icmp eq i8 %8, 0, !dbg !15663
  call void @llvm.dbg.value(metadata i1 %9, metadata !15650, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15664
  br i1 %9, label %10, label %17, !dbg !15665

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15666
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !15666
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !15666
  %14 = icmp eq %union.anon* %13, null, !dbg !15670
  br i1 %14, label %16, label %15, !dbg !15671

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15672
  br label %16, !dbg !15674

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.160(%struct.k_thread* noundef nonnull %3) #26, !dbg !15675
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15676
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15677
  br label %17, !dbg !15678

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15658
  call void @llvm.dbg.value(metadata i32 %18, metadata !14772, metadata !DIExpression()) #24, !dbg !15660
  call void @llvm.dbg.value(metadata i32 %18, metadata !14766, metadata !DIExpression()) #24, !dbg !15656
  call void @llvm.dbg.value(metadata i32 %18, metadata !15649, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15679
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #24, !dbg !15681
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !15683, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15647, metadata !DIExpression()), !dbg !15655
  call void @llvm.dbg.value(metadata i32 undef, metadata !15647, metadata !DIExpression()), !dbg !15655
  ret void, !dbg !15684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15687, metadata !DIExpression()), !dbg !15688
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15689
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15690
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15691
  store %union.anon* null, %union.anon** %2, align 8, !dbg !15692
  ret void, !dbg !15693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15696, metadata !DIExpression()), !dbg !15697
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15698
  %3 = load i8, i8* %2, align 1, !dbg !15699
  %4 = and i8 %3, -3, !dbg !15699
  store i8 %4, i8* %2, align 1, !dbg !15699
  ret void, !dbg !15700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15703, metadata !DIExpression()), !dbg !15704
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15705
  br i1 %2, label %3, label %7, !dbg !15707

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !15708
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15711
  %5 = load i8, i8* %4, align 1, !dbg !15712
  %6 = and i8 %5, 127, !dbg !15712
  store i8 %6, i8* %4, align 1, !dbg !15712
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14937, metadata !DIExpression()) #24, !dbg !15713
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15715
  br label %7, !dbg !15716

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15717
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15718
  %10 = zext i1 %9 to i32, !dbg !15718
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15719
  ret void, !dbg !15720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15723, metadata !DIExpression()), !dbg !15724
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15725
  %3 = load i8, i8* %2, align 1, !dbg !15726
  %4 = or i8 %3, 2, !dbg !15726
  store i8 %4, i8* %2, align 1, !dbg !15726
  ret void, !dbg !15727
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #23 !dbg !15728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15730, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata i32 0, metadata !15731, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15736
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15738, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15738
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15740
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15731, metadata !DIExpression()), !dbg !15735
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15741
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15744
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15748, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15731, metadata !DIExpression()), !dbg !15735
  call void @llvm.dbg.value(metadata i32 undef, metadata !15731, metadata !DIExpression()), !dbg !15735
  ret void, !dbg !15749
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15750 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15756, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i32 %0, metadata !15754, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15755, metadata !DIExpression()), !dbg !15761
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15762
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !15763
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15764
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15765
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %6, metadata !15757, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.value(metadata i32 0, metadata !15758, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15768
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15770, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !15768
  call void @llvm.dbg.value(metadata i32 undef, metadata !15760, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15758, metadata !DIExpression()), !dbg !15767
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15773
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15777
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15778
  br i1 %10, label %11, label %12, !dbg !15779

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15780
  br label %12, !dbg !15782

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15770
  call void @llvm.dbg.value(metadata i32 %13, metadata !14772, metadata !DIExpression()) #24, !dbg !15772
  call void @llvm.dbg.value(metadata i32 %13, metadata !14766, metadata !DIExpression()) #24, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %13, metadata !15760, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #24, !dbg !15785
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !15787, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15758, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 undef, metadata !15758, metadata !DIExpression()), !dbg !15767
  ret i32 %6, !dbg !15788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15789 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15794, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata i64 undef, metadata !15796, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15793, metadata !DIExpression()), !dbg !15797
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15795, metadata !DIExpression()), !dbg !15797
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15798
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15800
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15802, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !15800
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15805
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15806
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !15371, metadata !DIExpression()) #24, !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15376, metadata !DIExpression()) #24, !dbg !15807
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #25, !dbg !15809
  ret i32 %9, !dbg !15810
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15811 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15815, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15816, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i32 0, metadata !15817, metadata !DIExpression()), !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15822
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15824, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15826
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !15819, metadata !DIExpression()), !dbg !15821
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15816, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !15817, metadata !DIExpression()), !dbg !15821
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15827
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15816, metadata !DIExpression()), !dbg !15820
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15830
  br i1 %5, label %7, label %6, !dbg !15832

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15833
  br label %7, !dbg !15835

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15824
  call void @llvm.dbg.value(metadata i32 %8, metadata !14772, metadata !DIExpression()) #24, !dbg !15826
  call void @llvm.dbg.value(metadata i32 %8, metadata !14766, metadata !DIExpression()) #24, !dbg !15822
  call void @llvm.dbg.value(metadata i32 %8, metadata !15819, metadata !DIExpression()), !dbg !15821
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #24, !dbg !15838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15840, !srcloc !14801
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15816, metadata !DIExpression()), !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !15817, metadata !DIExpression()), !dbg !15821
  ret %struct.k_thread* %4, !dbg !15841
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15842 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15844, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15845, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 0, metadata !15846, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15851
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15853, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !15851
  call void @llvm.dbg.value(metadata i32 undef, metadata !15848, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15845, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !15846, metadata !DIExpression()), !dbg !15850
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15856
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15845, metadata !DIExpression()), !dbg !15849
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15859
  br i1 %5, label %8, label %6, !dbg !15861

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15862
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15864
  br label %8, !dbg !15865

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15853
  call void @llvm.dbg.value(metadata i32 %9, metadata !14772, metadata !DIExpression()) #24, !dbg !15855
  call void @llvm.dbg.value(metadata i32 %9, metadata !14766, metadata !DIExpression()) #24, !dbg !15851
  call void @llvm.dbg.value(metadata i32 %9, metadata !15848, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15866
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #24, !dbg !15868
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15870, !srcloc !14801
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15845, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.value(metadata i32 undef, metadata !15846, metadata !DIExpression()), !dbg !15850
  ret %struct.k_thread* %4, !dbg !15871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15874, metadata !DIExpression()), !dbg !15875
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15730, metadata !DIExpression()) #24, !dbg !15876
  call void @llvm.dbg.value(metadata i32 0, metadata !15731, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15879
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15881, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15881
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15883
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !15879
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15731, metadata !DIExpression()) #24, !dbg !15878
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15885
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !15887
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !15889, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15731, metadata !DIExpression()) #24, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15731, metadata !DIExpression()) #24, !dbg !15878
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15890
  ret void, !dbg !15891
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15892 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15894, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 %1, metadata !15895, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i8 0, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 0, metadata !15897, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15902
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15904, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata i32 undef, metadata !15899, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i8 poison, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !15897, metadata !DIExpression()), !dbg !15901
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15907
  call void @llvm.dbg.value(metadata i1 %6, metadata !15896, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15900
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15910

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !15911
  %11 = load i8, i8* %4, align 1, !dbg !15917
  %12 = and i8 %11, 127, !dbg !15917
  store i8 %12, i8* %4, align 1, !dbg !15917
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14937, metadata !DIExpression()) #24, !dbg !15918
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15920
  store i8 %9, i8* %8, align 2, !dbg !15921
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14946, metadata !DIExpression()) #24, !dbg !15922
  %13 = load i8, i8* %4, align 1, !dbg !15924
  %14 = or i8 %13, -128, !dbg !15924
  store i8 %14, i8* %4, align 1, !dbg !15924
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14953, metadata !DIExpression()) #24, !dbg !15925
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14960, metadata !DIExpression()) #24, !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()) #24, !dbg !15927
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15929
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14967, metadata !DIExpression()) #24, !dbg !15927
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15930
  br i1 %16, label %26, label %17, !dbg !15929

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14967, metadata !DIExpression()) #24, !dbg !15927
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14967, metadata !DIExpression()) #24, !dbg !15927
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #25, !dbg !15932
  %21 = icmp sgt i32 %20, 0, !dbg !15933
  br i1 %21, label %22, label %23, !dbg !15934

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #25, !dbg !15935
  br label %27, !dbg !15936

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #25, !dbg !15930
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14967, metadata !DIExpression()) #24, !dbg !15927
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15930
  br i1 %25, label %26, label %17, !dbg !15929, !llvm.loop !15937

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #25, !dbg !15939
  br label %27, !dbg !15940

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15941
  br label %29, !dbg !15942

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15943
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %30, metadata !14772, metadata !DIExpression()) #24, !dbg !15906
  call void @llvm.dbg.value(metadata i32 %30, metadata !14766, metadata !DIExpression()) #24, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %30, metadata !15899, metadata !DIExpression()), !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()) #24, !dbg !15945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #24, !dbg !15947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #24, !dbg !15949, !srcloc !14801
  call void @llvm.dbg.value(metadata i8 poison, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i32 undef, metadata !15897, metadata !DIExpression()), !dbg !15901
  ret i1 %6, !dbg !15950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15951 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15955, metadata !DIExpression()), !dbg !15958
  call void @llvm.dbg.value(metadata i32 %1, metadata !15956, metadata !DIExpression()), !dbg !15958
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15959
  call void @llvm.dbg.value(metadata i1 %3, metadata !15957, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15958
  br i1 %3, label %4, label %12, !dbg !15960

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15962
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15963
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15963
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15963
  %9 = load i8, i8* %8, align 1, !dbg !15963
  %10 = icmp eq i8 %9, 0, !dbg !15964
  br i1 %10, label %11, label %12, !dbg !15965

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15966
  br label %12, !dbg !15968

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15970 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15972, metadata !DIExpression()), !dbg !15975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !15976
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15978, !srcloc !14775
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15978
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()) #24, !dbg !15980
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !15980
  call void @llvm.dbg.value(metadata i32 %2, metadata !14766, metadata !DIExpression()) #24, !dbg !15976
  call void @llvm.dbg.value(metadata i32 %2, metadata !15974, metadata !DIExpression()), !dbg !15975
  call void @llvm.dbg.value(metadata i32 undef, metadata !15972, metadata !DIExpression()), !dbg !15975
  tail call fastcc void @z_sched_lock() #26, !dbg !15981
  call void @llvm.dbg.value(metadata i32 %2, metadata !14787, metadata !DIExpression()) #24, !dbg !15984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !15984
  call void @llvm.dbg.value(metadata i32 %2, metadata !14795, metadata !DIExpression()) #24, !dbg !15986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !15988, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !15972, metadata !DIExpression()), !dbg !15975
  call void @llvm.dbg.value(metadata i32 undef, metadata !15972, metadata !DIExpression()), !dbg !15975
  ret void, !dbg !15989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15990 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15991
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15992
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15992
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15992
  %5 = load i8, i8* %4, align 1, !dbg !15993
  %6 = add i8 %5, -1, !dbg !15993
  store i8 %6, i8* %4, align 1, !dbg !15993
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15994, !srcloc !15996
  ret void, !dbg !15997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15998 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16000, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !16004
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16006, !srcloc !14775
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16006
  call void @llvm.dbg.value(metadata i32 %2, metadata !14772, metadata !DIExpression()) #24, !dbg !16008
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !16008
  call void @llvm.dbg.value(metadata i32 %2, metadata !14766, metadata !DIExpression()) #24, !dbg !16004
  call void @llvm.dbg.value(metadata i32 %2, metadata !16002, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16000, metadata !DIExpression()), !dbg !16003
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16009
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16012
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16012
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16012
  %7 = load i8, i8* %6, align 1, !dbg !16013
  %8 = add i8 %7, 1, !dbg !16013
  store i8 %8, i8* %6, align 1, !dbg !16013
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16014
  call void @llvm.dbg.value(metadata i32 %2, metadata !14787, metadata !DIExpression()) #24, !dbg !16015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16015
  call void @llvm.dbg.value(metadata i32 %2, metadata !14795, metadata !DIExpression()) #24, !dbg !16017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !16019, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 1, metadata !16000, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16000, metadata !DIExpression()), !dbg !16003
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16020
  ret void, !dbg !16021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !16022 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16023
  ret %struct.k_thread* %1, !dbg !16024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !16025 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16029, metadata !DIExpression()), !dbg !16034
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16030, metadata !DIExpression()), !dbg !16034
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16031, metadata !DIExpression()), !dbg !16034
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16036
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16032, metadata !DIExpression()), !dbg !16034
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !16037
  call void @llvm.dbg.value(metadata i32 %5, metadata !16033, metadata !DIExpression()), !dbg !16034
  %6 = icmp sgt i32 %5, 0, !dbg !16038
  br i1 %6, label %17, label %7, !dbg !16040

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16041
  br i1 %8, label %17, label %9, !dbg !16043

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16044
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16044
  %12 = load i32, i32* %11, align 8, !dbg !16044
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16046
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16046
  %15 = load i32, i32* %14, align 8, !dbg !16046
  %16 = icmp ult i32 %12, %15, !dbg !16047
  br label %17, !dbg !16048

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16049
  ret i1 %18, !dbg !16050
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16051 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16068, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16069, metadata !DIExpression()), !dbg !16083
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16084
  %5 = load i32, i32* %4, align 4, !dbg !16085
  %6 = add nsw i32 %5, 1, !dbg !16085
  store i32 %6, i32* %4, align 4, !dbg !16085
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16086
  store i32 %5, i32* %7, align 8, !dbg !16087
  %8 = load i32, i32* %4, align 4, !dbg !16088
  %9 = icmp eq i32 %8, 0, !dbg !16089
  br i1 %9, label %10, label %32, !dbg !16090

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16091
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16091
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16071, metadata !DIExpression()), !dbg !16091
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16091
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16091
  %14 = load i32, i32* %13, align 4, !dbg !16091
  %15 = shl i32 %14, 2, !dbg !16091
  %16 = alloca i8, i32 %15, align 8, !dbg !16091
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16091
  store i8* %16, i8** %17, align 4, !dbg !16091
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16091
  %19 = alloca i8, i32 %14, align 8, !dbg !16091
  store i8* %19, i8** %18, align 4, !dbg !16091
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16091
  store i32 -1, i32* %20, align 4, !dbg !16091
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16092
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16080, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !16070, metadata !DIExpression()), !dbg !16083
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !16094
  br i1 %22, label %23, label %24, !dbg !16091

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #24, !dbg !16094
  br label %32, !dbg !16095

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !16070, metadata !DIExpression()), !dbg !16083
  %26 = load i32, i32* %4, align 4, !dbg !16096
  %27 = add nsw i32 %26, 1, !dbg !16096
  store i32 %27, i32* %4, align 4, !dbg !16096
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !16098
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !16098
  store i32 %26, i32* %29, align 8, !dbg !16099
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16092
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16080, metadata !DIExpression()), !dbg !16093
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !16070, metadata !DIExpression()), !dbg !16083
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !16094
  br i1 %31, label %23, label %24, !dbg !16091, !llvm.loop !16100

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16102
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16103
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #25, !dbg !16104
  ret void, !dbg !16105
}

; Function Attrs: optsize
declare !dbg !16106 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16111 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16114 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16116, metadata !DIExpression()), !dbg !16118
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16117, metadata !DIExpression()), !dbg !16118
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16119
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16120
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #25, !dbg !16121
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16122
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !16122
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !16124
  br i1 %7, label %8, label %10, !dbg !16125

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16126
  store i32 0, i32* %9, align 4, !dbg !16128
  br label %10, !dbg !16129

10:                                               ; preds = %8, %2
  ret void, !dbg !16130
}

; Function Attrs: optsize
declare !dbg !16131 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16132 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16136, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16137, metadata !DIExpression()), !dbg !16139
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16140
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !16141
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16138, metadata !DIExpression()), !dbg !16139
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16137, metadata !DIExpression()), !dbg !16139
  ret %struct.k_thread* %4, !dbg !16142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16143 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16147, metadata !DIExpression()), !dbg !16148
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16149
  ret %struct.rbnode* %2, !dbg !16150
}

; Function Attrs: optsize
declare !dbg !16151 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !16154 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16164, metadata !DIExpression()), !dbg !16168
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16169
  %3 = load i32, i32* %2, align 4, !dbg !16169
  %4 = icmp eq i32 %3, 0, !dbg !16171
  br i1 %4, label %10, label %5, !dbg !16172

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16165, metadata !DIExpression()), !dbg !16168
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16173, !range !3846
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16174
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16166, metadata !DIExpression()), !dbg !16168
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !16175
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16167, metadata !DIExpression()), !dbg !16168
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16165, metadata !DIExpression()), !dbg !16168
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16168
  ret %struct.k_thread* %11, !dbg !16176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16177 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16181, metadata !DIExpression()), !dbg !16184
  call void @llvm.dbg.value(metadata i32 0, metadata !16182, metadata !DIExpression()), !dbg !16184
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16183, metadata !DIExpression()), !dbg !16184
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16186
  br i1 %3, label %8, label %4, !dbg !16187

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16188
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16190
  call void @llvm.dbg.value(metadata i32 1, metadata !16182, metadata !DIExpression()), !dbg !16184
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16183, metadata !DIExpression()), !dbg !16184
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16186
  br i1 %7, label %8, label %4, !dbg !16187, !llvm.loop !16191

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16184
  ret i32 %9, !dbg !16193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !16194 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16196, metadata !DIExpression()), !dbg !16197
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16198
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !16199
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16200
  ret %struct.k_thread* %4, !dbg !16201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !16202 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16211, metadata !DIExpression()), !dbg !16212
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16213
  tail call fastcc void @sys_dlist_init.174(%struct._dnode* noundef nonnull %2) #26, !dbg !16214
  ret void, !dbg !16215
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.174(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16216 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16220, metadata !DIExpression()), !dbg !16221
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16222
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16223
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16224
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16225
  ret void, !dbg !16226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16227 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !16228
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !16229
  ret void, !dbg !16230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !16231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16236, metadata !DIExpression()), !dbg !16237
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16238
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16238
  %4 = load i8, i8* %3, align 2, !dbg !16238
  %5 = sext i8 %4 to i32, !dbg !16239
  ret i32 %5, !dbg !16240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16241 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16245, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata i32 %1, metadata !16246, metadata !DIExpression()), !dbg !16248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16247, metadata !DIExpression()), !dbg !16248
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16249
  ret void, !dbg !16250
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16251 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !16252
  br i1 %1, label %8, label %2, !dbg !16253

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16254
  br i1 %3, label %8, label %4, !dbg !16255

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16256
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !16257
  %7 = xor i1 %6, true, !dbg !16255
  br label %8, !dbg !16255

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !16259 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16260, !range !7118
  %2 = icmp eq i8 %1, 0, !dbg !16260
  ret i1 %2, !dbg !16261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16262 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !16265
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16267, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !16269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !16265
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()), !dbg !16270
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16271
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14929, metadata !DIExpression()) #24, !dbg !16274
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !16276
  %4 = load i8, i8* %3, align 1, !dbg !16277
  %5 = and i8 %4, 127, !dbg !16277
  store i8 %5, i8* %3, align 1, !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14937, metadata !DIExpression()) #24, !dbg !16278
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #25, !dbg !16280
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14946, metadata !DIExpression()) #24, !dbg !16282
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !16284
  %8 = load i8, i8* %7, align 1, !dbg !16285
  %9 = or i8 %8, -128, !dbg !16285
  store i8 %9, i8* %7, align 1, !dbg !16285
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14953, metadata !DIExpression()) #24, !dbg !16286
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14960, metadata !DIExpression()) #24, !dbg !16288
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14966, metadata !DIExpression()) #24, !dbg !16288
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16290
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14967, metadata !DIExpression()) #24, !dbg !16288
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16291
  br i1 %11, label %22, label %12, !dbg !16290

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14967, metadata !DIExpression()) #24, !dbg !16288
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16292
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14967, metadata !DIExpression()) #24, !dbg !16288
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #25, !dbg !16293
  %16 = icmp sgt i32 %15, 0, !dbg !16294
  br i1 %16, label %17, label %19, !dbg !16295

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16296
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !16297
  br label %24, !dbg !16298

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #25, !dbg !16291
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14967, metadata !DIExpression()) #24, !dbg !16288
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16291
  br i1 %21, label %22, label %12, !dbg !16290, !llvm.loop !16299

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !16301
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #25, !dbg !16302
  br label %24, !dbg !16303

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !16267
  call void @llvm.dbg.value(metadata i32 %25, metadata !14772, metadata !DIExpression()) #24, !dbg !16269
  call void @llvm.dbg.value(metadata i32 %25, metadata !14766, metadata !DIExpression()) #24, !dbg !16265
  call void @llvm.dbg.value(metadata i32 %25, metadata !16264, metadata !DIExpression()), !dbg !16270
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !15371, metadata !DIExpression()) #24, !dbg !16305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15376, metadata !DIExpression()) #24, !dbg !16305
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #25, !dbg !16307
  ret void, !dbg !16308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16309 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16313, metadata !DIExpression()), !dbg !16316
  %3 = icmp eq i64 %2, -1, !dbg !16317
  br i1 %3, label %4, label %6, !dbg !16319

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16320
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !16322
  br label %11, !dbg !16323

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16314, metadata !DIExpression()), !dbg !16316
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !16324
  %8 = sext i32 %7 to i64, !dbg !16324
  call void @llvm.dbg.value(metadata i64 %8, metadata !16314, metadata !DIExpression()), !dbg !16316
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !16325
  %10 = trunc i64 %9 to i32, !dbg !16325
  call void @llvm.dbg.value(metadata i32 %10, metadata !16315, metadata !DIExpression()), !dbg !16316
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !16316
  ret i32 %12, !dbg !16326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16331, metadata !DIExpression()), !dbg !16332
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16333, !srcloc !16335
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !16336
  ret void, !dbg !16337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16338 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16342, metadata !DIExpression()), !dbg !16346
  %2 = icmp eq i64 %0, 0, !dbg !16347
  br i1 %2, label %3, label %4, !dbg !16349

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !16350
  br label %29, !dbg !16352

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !16344, metadata !DIExpression()), !dbg !16346
  %5 = icmp sgt i64 %0, -3, !dbg !16353
  br i1 %5, label %6, label %10, !dbg !16355

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16356
  %8 = trunc i64 %0 to i32, !dbg !16358
  %9 = add i32 %7, %8, !dbg !16358
  call void @llvm.dbg.value(metadata i32 %9, metadata !16343, metadata !DIExpression()), !dbg !16346
  br label %13, !dbg !16359

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !16360
  %12 = sub i32 -2, %11, !dbg !16360
  call void @llvm.dbg.value(metadata i32 %12, metadata !16343, metadata !DIExpression()), !dbg !16346
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !16362
  call void @llvm.dbg.value(metadata i32 %14, metadata !16343, metadata !DIExpression()), !dbg !16346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !16363
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16365, !srcloc !14775
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16365
  call void @llvm.dbg.value(metadata i32 %16, metadata !14772, metadata !DIExpression()) #24, !dbg !16367
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !16367
  call void @llvm.dbg.value(metadata i32 %16, metadata !14766, metadata !DIExpression()) #24, !dbg !16363
  call void @llvm.dbg.value(metadata i32 %16, metadata !16345, metadata !DIExpression()), !dbg !16346
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16368
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !16369
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !16370
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16371
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16372
  tail call fastcc void @z_add_thread_timeout.163(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !16372
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16373
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !16374
  call void @llvm.dbg.value(metadata i32 %16, metadata !15371, metadata !DIExpression()) #24, !dbg !16375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15376, metadata !DIExpression()) #24, !dbg !16375
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #25, !dbg !16377
  %22 = zext i32 %14 to i64, !dbg !16378
  %23 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16379
  %24 = zext i32 %23 to i64, !dbg !16379
  %25 = sub nsw i64 %22, %24, !dbg !16380
  call void @llvm.dbg.value(metadata i64 %25, metadata !16342, metadata !DIExpression()), !dbg !16346
  %26 = icmp sgt i64 %25, 0, !dbg !16381
  %27 = select i1 %26, i64 %25, i64 0, !dbg !16381
  %28 = trunc i64 %27 to i32, !dbg !16381
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !16346
  ret i32 %30, !dbg !16382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16383 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16385, metadata !DIExpression()), !dbg !16386
  call void @llvm.dbg.value(metadata i64 %0, metadata !14807, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 10000, metadata !14810, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i32 1000, metadata !14811, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i8 1, metadata !14812, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i8 0, metadata !14815, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i1 false, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i1 true, metadata !14817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata i64 %0, metadata !14807, metadata !DIExpression()), !dbg !16387
  %2 = udiv i64 %0, 10, !dbg !16389
  ret i64 %2, !dbg !16393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16394 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !16395, !srcloc !16397
  tail call void @z_impl_k_yield() #26, !dbg !16398
  ret void, !dbg !16399
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16400 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16404, metadata !DIExpression()), !dbg !16406
  %2 = sext i32 %0 to i64, !dbg !16407
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !16408
  call void @llvm.dbg.value(metadata i64 %3, metadata !16405, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16406
  %4 = shl i64 %3, 32, !dbg !16409
  %5 = ashr exact i64 %4, 32, !dbg !16409
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %6, metadata !16405, metadata !DIExpression()), !dbg !16406
  %7 = sext i32 %6 to i64, !dbg !16411
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !16412
  %9 = trunc i64 %8 to i32, !dbg !16412
  ret i32 %9, !dbg !16413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !16414 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16416, metadata !DIExpression()), !dbg !16417
  call void @llvm.dbg.value(metadata i64 %0, metadata !14807, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14810, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i32 10000, metadata !14811, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i8 1, metadata !14812, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16418
  call void @llvm.dbg.value(metadata i1 true, metadata !14814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16418
  call void @llvm.dbg.value(metadata i8 0, metadata !14815, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i1 false, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16418
  call void @llvm.dbg.value(metadata i1 true, metadata !14817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16418
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !16418
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !16418
  %2 = add i64 %0, 99, !dbg !16420
  call void @llvm.dbg.value(metadata i64 %2, metadata !14807, metadata !DIExpression()), !dbg !16418
  %3 = udiv i64 %2, 100, !dbg !16421
  ret i64 %3, !dbg !16422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !16423 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16425, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i64 %0, metadata !14807, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i32 10000, metadata !14810, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14811, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i8 1, metadata !14812, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i1 false, metadata !14813, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16427
  call void @llvm.dbg.value(metadata i1 false, metadata !14814, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16427
  call void @llvm.dbg.value(metadata i8 0, metadata !14815, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i1 true, metadata !14816, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16427
  call void @llvm.dbg.value(metadata i1 false, metadata !14817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16427
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !16427
  call void @llvm.dbg.value(metadata i64 0, metadata !14818, metadata !DIExpression()), !dbg !16427
  %2 = mul i64 %0, 100, !dbg !16429
  ret i64 %2, !dbg !16431
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16434, metadata !DIExpression()), !dbg !16435
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !16436
  br i1 %2, label %14, label %3, !dbg !16438

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16439
  %5 = icmp slt i32 %4, 0, !dbg !16441
  br i1 %5, label %6, label %10, !dbg !16442

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16443
  %8 = load i8, i8* %7, align 1, !dbg !16443
  %9 = icmp eq i8 %8, 16, !dbg !16446
  br i1 %9, label %10, label %14, !dbg !16447

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16448
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16449
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16450, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %11, metadata !15407, metadata !DIExpression()) #24, !dbg !16454
  %12 = icmp eq i32 %11, 0, !dbg !16455
  br i1 %12, label %13, label %14, !dbg !16456

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16457
  br label %14, !dbg !16459

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16461 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16463, metadata !DIExpression()), !dbg !16464
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16465
  %3 = load i8, i8* %2, align 1, !dbg !16465
  %4 = and i8 %3, 2, !dbg !16466
  %5 = icmp ne i8 %4, 0, !dbg !16467
  ret i1 %5, !dbg !16468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !16469 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16473, metadata !DIExpression()), !dbg !16475
  ret %struct.k_thread* %1, !dbg !16476
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16477 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16478, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %1, metadata !15407, metadata !DIExpression()) #24, !dbg !16481
  %2 = icmp eq i32 %1, 0, !dbg !16482
  br i1 %2, label %3, label %8, !dbg !16483

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16484
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16485
  %6 = icmp ne i32 %5, 0, !dbg !16483
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16487 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16489, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !16492
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16494, !srcloc !14775
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16494
  call void @llvm.dbg.value(metadata i32 %3, metadata !14772, metadata !DIExpression()) #24, !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %3, metadata !14766, metadata !DIExpression()) #24, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %3, metadata !16490, metadata !DIExpression()), !dbg !16491
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16497
  %5 = load i8, i8* %4, align 4, !dbg !16497
  %6 = and i8 %5, 1, !dbg !16499
  %7 = icmp eq i8 %6, 0, !dbg !16500
  br i1 %7, label %9, label %8, !dbg !16501

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !16502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16502
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !16505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16507, !srcloc !14801
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !16508, !srcloc !16510
  br label %24, !dbg !16511

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16512
  %11 = load i8, i8* %10, align 1, !dbg !16512
  %12 = and i8 %11, 8, !dbg !16514
  %13 = icmp eq i8 %12, 0, !dbg !16515
  br i1 %13, label %15, label %14, !dbg !16516

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !16517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16517
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !16520
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16522, !srcloc !14801
  br label %24, !dbg !16523

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16524
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16525
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16527
  br i1 %17, label %18, label %23, !dbg !16528

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16529, !srcloc !15411
  call void @llvm.dbg.value(metadata i32 %19, metadata !15407, metadata !DIExpression()) #24, !dbg !16532
  %20 = icmp eq i32 %19, 0, !dbg !16533
  br i1 %20, label %21, label %23, !dbg !16534

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !15371, metadata !DIExpression()) #24, !dbg !16535
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15376, metadata !DIExpression()) #24, !dbg !16535
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !16538
  br label %23, !dbg !16539

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14787, metadata !DIExpression()) #24, !dbg !16540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16540
  call void @llvm.dbg.value(metadata i32 %3, metadata !14795, metadata !DIExpression()) #24, !dbg !16542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !16544, !srcloc !14801
  br label %24, !dbg !16545

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16548, metadata !DIExpression()), !dbg !16549
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16550
  %3 = load i8, i8* %2, align 1, !dbg !16550
  %4 = and i8 %3, 8, !dbg !16552
  %5 = icmp eq i8 %4, 0, !dbg !16553
  br i1 %5, label %6, label %20, !dbg !16554

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16555
  %8 = or i8 %7, 8, !dbg !16555
  store i8 %8, i8* %2, align 1, !dbg !16555
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16557
  br i1 %9, label %10, label %12, !dbg !16559

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14929, metadata !DIExpression()) #24, !dbg !16560
  %11 = and i8 %8, 95, !dbg !16563
  store i8 %11, i8* %2, align 1, !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14937, metadata !DIExpression()) #24, !dbg !16564
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16566
  br label %12, !dbg !16567

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16568
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16568
  %15 = icmp eq %union.anon* %14, null, !dbg !16570
  br i1 %15, label %17, label %16, !dbg !16571

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16572
  br label %17, !dbg !16574

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16575
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16576
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16577
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16578
  br label %20, !dbg !16579

20:                                               ; preds = %17, %1
  ret void, !dbg !16580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16581 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16585, metadata !DIExpression()), !dbg !16587
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16588
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16586, metadata !DIExpression()), !dbg !16587
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16589
  br i1 %3, label %10, label %4, !dbg !16590

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16591
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16593
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16594, metadata !DIExpression()), !dbg !16600
  call void @llvm.dbg.value(metadata i32 0, metadata !16599, metadata !DIExpression()), !dbg !16600
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16602
  store i32 0, i32* %7, align 4, !dbg !16603
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16604
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !16588
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16586, metadata !DIExpression()), !dbg !16587
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16589
  br i1 %9, label %10, label %4, !dbg !16590, !llvm.loop !16605

10:                                               ; preds = %4, %1
  ret void, !dbg !16607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16608 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16613, metadata !DIExpression()), !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16612, metadata !DIExpression()), !dbg !16616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !16617
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16619, !srcloc !14775
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16619
  call void @llvm.dbg.value(metadata i32 %4, metadata !14772, metadata !DIExpression()) #24, !dbg !16621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !16621
  call void @llvm.dbg.value(metadata i32 %4, metadata !14766, metadata !DIExpression()) #24, !dbg !16617
  call void @llvm.dbg.value(metadata i32 %4, metadata !16614, metadata !DIExpression()), !dbg !16616
  call void @llvm.dbg.value(metadata i32 0, metadata !16615, metadata !DIExpression()), !dbg !16616
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16622
  %6 = load i8, i8* %5, align 1, !dbg !16622
  %7 = and i8 %6, 8, !dbg !16624
  %8 = icmp eq i8 %7, 0, !dbg !16625
  br i1 %8, label %9, label %24, !dbg !16626

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16613, metadata !DIExpression()), !dbg !16616
  %11 = icmp eq i64 %10, 0, !dbg !16627
  br i1 %11, label %24, label %12, !dbg !16629

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16630
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16632
  br i1 %14, label %24, label %15, !dbg !16633

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16634
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !16634
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16635
  %19 = icmp eq %union.anon* %17, %18, !dbg !16636
  br i1 %19, label %24, label %20, !dbg !16637

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16638
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !16640
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16641
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %4, metadata !15371, metadata !DIExpression()) #24, !dbg !16643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15376, metadata !DIExpression()) #24, !dbg !16643
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #25, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %23, metadata !16615, metadata !DIExpression()), !dbg !16616
  br label %26, !dbg !16646

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16647
  call void @llvm.dbg.value(metadata i32 %25, metadata !16615, metadata !DIExpression()), !dbg !16616
  call void @llvm.dbg.value(metadata i32 %4, metadata !14787, metadata !DIExpression()) #24, !dbg !16648
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %4, metadata !14795, metadata !DIExpression()) #24, !dbg !16650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !16652, !srcloc !14801
  br label %26, !dbg !16653

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16616
  ret i32 %27, !dbg !16654
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16655 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16659, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 %1, metadata !16660, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i8* %2, metadata !16661, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i8 0, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 0, metadata !16664, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14760, metadata !DIExpression()) #24, !dbg !16669
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16671, !srcloc !14775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14773, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !14766, metadata !DIExpression()) #24, !dbg !16669
  call void @llvm.dbg.value(metadata i32 undef, metadata !16666, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i8 poison, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()), !dbg !16668
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16674
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16662, metadata !DIExpression()), !dbg !16667
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16677
  br i1 %7, label %12, label %8, !dbg !16679

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16680, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata i32 %1, metadata !16686, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata i8* %2, metadata !16687, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16594, metadata !DIExpression()), !dbg !16691
  call void @llvm.dbg.value(metadata i32 %1, metadata !16599, metadata !DIExpression()), !dbg !16691
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16693
  store i32 %1, i32* %9, align 4, !dbg !16694
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16695
  store i8* %2, i8** %10, align 4, !dbg !16696
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16697
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16698
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16699
  call void @llvm.dbg.value(metadata i8 1, metadata !16663, metadata !DIExpression()), !dbg !16667
  br label %12, !dbg !16700

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16671
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16671
  call void @llvm.dbg.value(metadata i32 %14, metadata !14772, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %14, metadata !14766, metadata !DIExpression()) #24, !dbg !16669
  call void @llvm.dbg.value(metadata i32 %14, metadata !16666, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i8 poison, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()) #24, !dbg !16701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14792, metadata !DIExpression()) #24, !dbg !16701
  call void @llvm.dbg.value(metadata i32 undef, metadata !14795, metadata !DIExpression()) #24, !dbg !16703
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16705, !srcloc !14801
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()), !dbg !16668
  ret i1 %13, !dbg !16706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16707 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()), !dbg !16718
  call void @llvm.dbg.value(metadata i64 undef, metadata !16715, metadata !DIExpression()), !dbg !16718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16712, metadata !DIExpression()), !dbg !16718
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16714, metadata !DIExpression()), !dbg !16718
  call void @llvm.dbg.value(metadata i8** %4, metadata !16716, metadata !DIExpression()), !dbg !16718
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16719
  call void @llvm.dbg.value(metadata i32 %6, metadata !16717, metadata !DIExpression()), !dbg !16718
  %7 = icmp eq i8** %4, null, !dbg !16720
  br i1 %7, label %12, label %8, !dbg !16722

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16723
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16725
  %11 = load i8*, i8** %10, align 4, !dbg !16725
  store i8* %11, i8** %4, align 4, !dbg !16726
  br label %12, !dbg !16727

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16729 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16731
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16732
  ret void, !dbg !16733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16734 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16744, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16742, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16743, metadata !DIExpression()), !dbg !16761
  %5 = icmp eq i64 %4, -1, !dbg !16762
  br i1 %5, label %55, label %6, !dbg !16764

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16765
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16766
  call void @llvm.dbg.value(metadata i32 0, metadata !16745, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !16775
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16777, !srcloc !16783
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16777
  call void @llvm.dbg.value(metadata i32 %9, metadata !16780, metadata !DIExpression()) #24, !dbg !16784
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !16784
  call void @llvm.dbg.value(metadata i32 %9, metadata !16774, metadata !DIExpression()) #24, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %9, metadata !16751, metadata !DIExpression()), !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16745, metadata !DIExpression()), !dbg !16767
  %10 = icmp slt i64 %4, -1, !dbg !16785
  br i1 %10, label %11, label %17, !dbg !16786

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16787
  %13 = add i64 %4, %12, !dbg !16788
  %14 = sub i64 -2, %13, !dbg !16788
  call void @llvm.dbg.value(metadata i64 %14, metadata !16755, metadata !DIExpression()), !dbg !16789
  %15 = icmp sgt i64 %14, 1, !dbg !16790
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16790
  br label %22, !dbg !16791

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16792
  %19 = tail call fastcc i32 @elapsed.187() #26, !dbg !16794
  %20 = sext i32 %19 to i64, !dbg !16794
  %21 = add nsw i64 %18, %20, !dbg !16795
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16796
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16797
  store i64 %23, i64* %24, align 8, !dbg !16798
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16799
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16752, metadata !DIExpression()), !dbg !16801
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16802
  br i1 %26, label %42, label %27, !dbg !16802

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16803
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16752, metadata !DIExpression()), !dbg !16801
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16807
  %31 = load i64, i64* %30, align 8, !dbg !16807
  %32 = icmp slt i64 %28, %31, !dbg !16808
  br i1 %32, label %33, label %38, !dbg !16809

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16807
  %35 = sub nsw i64 %31, %28, !dbg !16810
  store i64 %35, i64* %34, align 8, !dbg !16810
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16812
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16813
  tail call fastcc void @sys_dlist_insert.188(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16814
  br label %44, !dbg !16815

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16816
  store i64 %39, i64* %24, align 8, !dbg !16816
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16817
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16752, metadata !DIExpression()), !dbg !16801
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16802
  br i1 %41, label %42, label %27, !dbg !16802, !llvm.loop !16818

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16820
  tail call fastcc void @sys_dlist_append.189(%struct._dnode* noundef %43) #26, !dbg !16823
  br label %44, !dbg !16824

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16825
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16826
  br i1 %46, label %47, label %54, !dbg !16827

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16828
  call void @llvm.dbg.value(metadata i32 %48, metadata !16758, metadata !DIExpression()), !dbg !16829
  %49 = icmp ne i32 %48, 0, !dbg !16830
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16832
  br i1 %52, label %54, label %53, !dbg !16832

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #25, !dbg !16833
  br label %54, !dbg !16835

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16836, metadata !DIExpression()) #24, !dbg !16842
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !16842
  call void @llvm.dbg.value(metadata i32 %9, metadata !16844, metadata !DIExpression()) #24, !dbg !16847
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16849, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !16745, metadata !DIExpression()), !dbg !16767
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.187() unnamed_addr #1 !dbg !16852 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16855
  %2 = icmp eq i32 %1, 0, !dbg !16856
  br i1 %2, label %3, label %5, !dbg !16855

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16857
  br label %5, !dbg !16855

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16855
  ret i32 %6, !dbg !16858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16859 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.192() #26, !dbg !16865
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16863, metadata !DIExpression()), !dbg !16866
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16867
  ret %struct._timeout* %2, !dbg !16868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.188(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !16869 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16873, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16874, metadata !DIExpression()), !dbg !16877
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16878
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16878
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16875, metadata !DIExpression()), !dbg !16877
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16879
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16880
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16881
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16882
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16883
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16884
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16885
  ret void, !dbg !16886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16887 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16891, metadata !DIExpression()), !dbg !16893
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16894
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.190(%struct._dnode* noundef %2) #26, !dbg !16895
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16892, metadata !DIExpression()), !dbg !16893
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16896
  ret %struct._timeout* %4, !dbg !16897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.189(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16898 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16903, metadata !DIExpression()), !dbg !16906
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16904, metadata !DIExpression()), !dbg !16906
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16907
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16905, metadata !DIExpression()), !dbg !16906
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16908
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16909
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16910
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16911
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16912
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16913
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16914
  ret void, !dbg !16915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16916 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16921
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16918, metadata !DIExpression()), !dbg !16922
  %2 = tail call fastcc i32 @elapsed.187() #26, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %2, metadata !16919, metadata !DIExpression()), !dbg !16922
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16924
  br i1 %3, label %14, label %4, !dbg !16926

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16927
  %6 = load i64, i64* %5, align 8, !dbg !16927
  %7 = sext i32 %2 to i64, !dbg !16928
  %8 = sub nsw i64 %6, %7, !dbg !16929
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16930
  br i1 %9, label %14, label %10, !dbg !16931

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16932
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16932
  %13 = trunc i64 %12 to i32, !dbg !16932
  call void @llvm.dbg.value(metadata i32 %13, metadata !16920, metadata !DIExpression()), !dbg !16922
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16934
  call void @llvm.dbg.value(metadata i32 %15, metadata !16920, metadata !DIExpression()), !dbg !16922
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16935
  %17 = icmp ne i32 %16, 0, !dbg !16937
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16938
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16938
  call void @llvm.dbg.value(metadata i32 %20, metadata !16920, metadata !DIExpression()), !dbg !16922
  ret i32 %20, !dbg !16939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.190(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16940 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16944, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16945, metadata !DIExpression()), !dbg !16946
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16947
  br i1 %2, label %5, label %3, !dbg !16948

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.191(%struct._dnode* noundef nonnull %0) #26, !dbg !16949
  br label %5, !dbg !16948

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16948
  ret %struct._dnode* %6, !dbg !16950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.191(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16951 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16953, metadata !DIExpression()), !dbg !16955
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16954, metadata !DIExpression()), !dbg !16955
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16956
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16957
  br i1 %3, label %7, label %4, !dbg !16958

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16959
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16959
  br label %7, !dbg !16958

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16958
  ret %struct._dnode* %8, !dbg !16960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.192() unnamed_addr #5 !dbg !16961 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16965, metadata !DIExpression()), !dbg !16966
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.193() #26, !dbg !16967
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16967
  ret %struct._dnode* %3, !dbg !16968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.193() unnamed_addr #5 !dbg !16969 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16973, metadata !DIExpression()), !dbg !16974
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16975
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16976
  ret i1 %2, !dbg !16977
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16978 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16982, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata i32 -22, metadata !16983, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata i32 0, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !16989
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16991, !srcloc !16783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #24, !dbg !16993
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !16993
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #24, !dbg !16989
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 -22, metadata !16983, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16984, metadata !DIExpression()), !dbg !16988
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16983, metadata !DIExpression()), !dbg !16987
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* noundef %3) #26, !dbg !16994
  br i1 %4, label %5, label %6, !dbg !16998

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16999
  call void @llvm.dbg.value(metadata i32 0, metadata !16983, metadata !DIExpression()), !dbg !16987
  br label %6, !dbg !17001

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16987
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16991
  call void @llvm.dbg.value(metadata i32 %8, metadata !16780, metadata !DIExpression()) #24, !dbg !16993
  call void @llvm.dbg.value(metadata i32 %8, metadata !16774, metadata !DIExpression()) #24, !dbg !16989
  call void @llvm.dbg.value(metadata i32 %8, metadata !16986, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata i32 %7, metadata !16983, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16836, metadata !DIExpression()) #24, !dbg !17002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17002
  call void @llvm.dbg.value(metadata i32 undef, metadata !16844, metadata !DIExpression()) #24, !dbg !17004
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !17006, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !16984, metadata !DIExpression()), !dbg !16988
  ret i32 %7, !dbg !17007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17008 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17014, metadata !DIExpression()), !dbg !17015
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17016
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17016
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17017
  ret i1 %4, !dbg !17018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !17019 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17021, metadata !DIExpression()), !dbg !17022
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17023
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17025
  br i1 %3, label %10, label %4, !dbg !17026

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17027
  %6 = load i64, i64* %5, align 8, !dbg !17027
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17029
  %8 = load i64, i64* %7, align 8, !dbg !17030
  %9 = add nsw i64 %8, %6, !dbg !17030
  store i64 %9, i64* %7, align 8, !dbg !17030
  br label %10, !dbg !17031

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17032
  tail call fastcc void @sys_dlist_remove.197(%struct._dnode* noundef %11) #26, !dbg !17033
  ret void, !dbg !17034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.197(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !17035 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17039, metadata !DIExpression()), !dbg !17042
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17043
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17043
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17040, metadata !DIExpression()), !dbg !17042
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17044
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17044
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17041, metadata !DIExpression()), !dbg !17042
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17045
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17046
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17047
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17048
  tail call fastcc void @sys_dnode_init.198(%struct._dnode* noundef %0) #26, !dbg !17049
  ret void, !dbg !17050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.198(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !17051 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17053, metadata !DIExpression()), !dbg !17054
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17055
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17056
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17057
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17058
  ret void, !dbg !17059
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17060 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17066, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i64 0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 0, metadata !17068, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17073
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17075, !srcloc !16783
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17075
  call void @llvm.dbg.value(metadata i32 %3, metadata !16780, metadata !DIExpression()) #24, !dbg !17077
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17077
  call void @llvm.dbg.value(metadata i32 %3, metadata !16774, metadata !DIExpression()) #24, !dbg !17073
  call void @llvm.dbg.value(metadata i32 %3, metadata !17070, metadata !DIExpression()), !dbg !17072
  call void @llvm.dbg.value(metadata i64 0, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !17068, metadata !DIExpression()), !dbg !17072
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17078
  call void @llvm.dbg.value(metadata i64 %4, metadata !17067, metadata !DIExpression()), !dbg !17071
  call void @llvm.dbg.value(metadata i32 %3, metadata !16836, metadata !DIExpression()) #24, !dbg !17081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17081
  call void @llvm.dbg.value(metadata i32 %3, metadata !16844, metadata !DIExpression()) #24, !dbg !17083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17085, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !17068, metadata !DIExpression()), !dbg !17072
  ret i64 %4, !dbg !17086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17087 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17089, metadata !DIExpression()), !dbg !17093
  call void @llvm.dbg.value(metadata i64 0, metadata !17090, metadata !DIExpression()), !dbg !17093
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.199(%struct._timeout* noundef %0) #26, !dbg !17094
  br i1 %2, label %21, label %3, !dbg !17096

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !17097
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17091, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i64 0, metadata !17090, metadata !DIExpression()), !dbg !17093
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17099
  br i1 %5, label %16, label %6, !dbg !17101

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17091, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i64 %8, metadata !17090, metadata !DIExpression()), !dbg !17093
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17102
  %10 = load i64, i64* %9, align 8, !dbg !17102
  %11 = add nsw i64 %10, %8, !dbg !17104
  call void @llvm.dbg.value(metadata i64 %11, metadata !17090, metadata !DIExpression()), !dbg !17093
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17105
  br i1 %12, label %16, label %13, !dbg !17107

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !17108
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17091, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i64 %11, metadata !17090, metadata !DIExpression()), !dbg !17093
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17099
  br i1 %15, label %16, label %6, !dbg !17101, !llvm.loop !17109

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17093
  call void @llvm.dbg.value(metadata i64 %17, metadata !17090, metadata !DIExpression()), !dbg !17093
  %18 = tail call fastcc i32 @elapsed.187() #26, !dbg !17111
  %19 = sext i32 %18 to i64, !dbg !17111
  %20 = sub nsw i64 %17, %19, !dbg !17112
  br label %21, !dbg !17113

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17093
  ret i64 %22, !dbg !17114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.199(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !17115 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17119, metadata !DIExpression()), !dbg !17120
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17121
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.196(%struct._dnode* noundef %2) #26, !dbg !17122
  %4 = xor i1 %3, true, !dbg !17123
  ret i1 %4, !dbg !17124
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17125 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17127, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i64 0, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 0, metadata !17129, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17136, !srcloc !16783
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17136
  call void @llvm.dbg.value(metadata i32 %3, metadata !16780, metadata !DIExpression()) #24, !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17138
  call void @llvm.dbg.value(metadata i32 %3, metadata !16774, metadata !DIExpression()) #24, !dbg !17134
  call void @llvm.dbg.value(metadata i32 %3, metadata !17131, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.value(metadata i64 0, metadata !17128, metadata !DIExpression()), !dbg !17132
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17133
  %4 = load i64, i64* @curr_tick, align 8, !dbg !17139
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !17142
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !17128, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17132
  call void @llvm.dbg.value(metadata i32 %3, metadata !16836, metadata !DIExpression()) #24, !dbg !17143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %3, metadata !16844, metadata !DIExpression()) #24, !dbg !17145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !17147, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !17129, metadata !DIExpression()), !dbg !17133
  %6 = add i64 %5, %4, !dbg !17148
  ret i64 %6, !dbg !17149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17150 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17152, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata i32 0, metadata !17153, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17158
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17160, !srcloc !16783
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %2, metadata !16780, metadata !DIExpression()) #24, !dbg !17162
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17162
  call void @llvm.dbg.value(metadata i32 %2, metadata !16774, metadata !DIExpression()) #24, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %2, metadata !17155, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 -1, metadata !17152, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata i32 undef, metadata !17153, metadata !DIExpression()), !dbg !17157
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !17163
  call void @llvm.dbg.value(metadata i32 %3, metadata !17152, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata i32 %2, metadata !16836, metadata !DIExpression()) #24, !dbg !17166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17166
  call void @llvm.dbg.value(metadata i32 %2, metadata !16844, metadata !DIExpression()) #24, !dbg !17168
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17170, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !17153, metadata !DIExpression()), !dbg !17157
  ret i32 %3, !dbg !17171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17174, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.value(metadata i1 %1, metadata !17175, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17184
  call void @llvm.dbg.value(metadata i32 0, metadata !17176, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17186
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17188, !srcloc !16783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #24, !dbg !17190
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17190
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #24, !dbg !17186
  call void @llvm.dbg.value(metadata i32 undef, metadata !17178, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17176, metadata !DIExpression()), !dbg !17185
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !17191
  call void @llvm.dbg.value(metadata i32 %4, metadata !17179, metadata !DIExpression()), !dbg !17192
  call void @llvm.dbg.value(metadata i1 undef, metadata !17182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17192
  %5 = icmp slt i32 %4, 2, !dbg !17193
  call void @llvm.dbg.value(metadata i1 %5, metadata !17183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17192
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !17194
  call void @llvm.dbg.value(metadata i1 %6, metadata !17182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17192
  br i1 %7, label %11, label %8, !dbg !17194

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !17196
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !17196
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #25, !dbg !17198
  br label %11, !dbg !17199

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !17188
  call void @llvm.dbg.value(metadata i32 %12, metadata !16780, metadata !DIExpression()) #24, !dbg !17190
  call void @llvm.dbg.value(metadata i32 %12, metadata !16774, metadata !DIExpression()) #24, !dbg !17186
  call void @llvm.dbg.value(metadata i32 %12, metadata !17178, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !16836, metadata !DIExpression()) #24, !dbg !17200
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16844, metadata !DIExpression()) #24, !dbg !17202
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !17204, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 1, metadata !17176, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata i32 undef, metadata !17176, metadata !DIExpression()), !dbg !17185
  ret void, !dbg !17205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17210, metadata !DIExpression()), !dbg !17215
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17217
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17219, !srcloc !16783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #24, !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17221
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #24, !dbg !17217
  call void @llvm.dbg.value(metadata i32 undef, metadata !17211, metadata !DIExpression()), !dbg !17215
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17215
  call void @llvm.dbg.value(metadata i32 undef, metadata !17211, metadata !DIExpression()), !dbg !17215
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !17222
  %4 = icmp eq %struct._timeout* %3, null, !dbg !17223
  br i1 %4, label %28, label %5, !dbg !17224

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !17225
  %10 = load i64, i64* %9, align 8, !dbg !17225
  %11 = sext i32 %8 to i64, !dbg !17226
  %12 = icmp sgt i64 %10, %11, !dbg !17227
  br i1 %12, label %26, label %13, !dbg !17228

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !17215
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !17212, metadata !DIExpression()), !dbg !17229
  %15 = trunc i64 %10 to i32, !dbg !17230
  call void @llvm.dbg.value(metadata i32 %15, metadata !17214, metadata !DIExpression()), !dbg !17229
  %16 = sext i32 %15 to i64, !dbg !17231
  %17 = load i64, i64* @curr_tick, align 8, !dbg !17232
  %18 = add i64 %17, %16, !dbg !17232
  store i64 %18, i64* @curr_tick, align 8, !dbg !17232
  store i64 0, i64* %9, align 8, !dbg !17233
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !17234
  call void @llvm.dbg.value(metadata i32 %14, metadata !16836, metadata !DIExpression()) #24, !dbg !17235
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17235
  call void @llvm.dbg.value(metadata i32 %14, metadata !16844, metadata !DIExpression()) #24, !dbg !17237
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !17239, !srcloc !16850
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !17240
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !17240
  tail call void %20(%struct._timeout* noundef nonnull %6) #25, !dbg !17241
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17242
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17244, !srcloc !16783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()) #24, !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #24, !dbg !17242
  call void @llvm.dbg.value(metadata i32 undef, metadata !17211, metadata !DIExpression()), !dbg !17215
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !17247
  %23 = sub nsw i32 %22, %15, !dbg !17247
  store i32 %23, i32* @announce_remaining, align 4, !dbg !17215
  call void @llvm.dbg.value(metadata i32 undef, metadata !17211, metadata !DIExpression()), !dbg !17215
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !17222
  %25 = icmp eq %struct._timeout* %24, null, !dbg !17223
  br i1 %25, label %28, label %5, !dbg !17224, !llvm.loop !17248

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !17250
  store i64 %27, i64* %9, align 8, !dbg !17250
  br label %32, !dbg !17253

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !17215
  %31 = sext i32 %30 to i64, !dbg !17254
  br label %32, !dbg !17254

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !17254
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !17215
  %36 = load i64, i64* @curr_tick, align 8, !dbg !17255
  %37 = add i64 %36, %33, !dbg !17255
  store i64 %37, i64* @curr_tick, align 8, !dbg !17255
  store i32 0, i32* @announce_remaining, align 4, !dbg !17256
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !17257
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #25, !dbg !17258
  call void @llvm.dbg.value(metadata i32 %35, metadata !16836, metadata !DIExpression()) #24, !dbg !17259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17259
  call void @llvm.dbg.value(metadata i32 %35, metadata !16844, metadata !DIExpression()) #24, !dbg !17261
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #24, !dbg !17263, !srcloc !16850
  ret void, !dbg !17264
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17265 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17269, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.value(metadata i32 0, metadata !17270, metadata !DIExpression()), !dbg !17274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16768, metadata !DIExpression()) #24, !dbg !17275
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17277, !srcloc !16783
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17277
  call void @llvm.dbg.value(metadata i32 %2, metadata !16780, metadata !DIExpression()) #24, !dbg !17279
  call void @llvm.dbg.value(metadata i32 undef, metadata !16781, metadata !DIExpression()) #24, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %2, metadata !16774, metadata !DIExpression()) #24, !dbg !17275
  call void @llvm.dbg.value(metadata i32 %2, metadata !17272, metadata !DIExpression()), !dbg !17274
  call void @llvm.dbg.value(metadata i64 0, metadata !17269, metadata !DIExpression()), !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !17270, metadata !DIExpression()), !dbg !17274
  %3 = load i64, i64* @curr_tick, align 8, !dbg !17280
  %4 = tail call fastcc i32 @elapsed.187() #26, !dbg !17283
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !17269, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17273
  call void @llvm.dbg.value(metadata i32 %2, metadata !16836, metadata !DIExpression()) #24, !dbg !17284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16841, metadata !DIExpression()) #24, !dbg !17284
  call void @llvm.dbg.value(metadata i32 %2, metadata !16844, metadata !DIExpression()) #24, !dbg !17286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #24, !dbg !17288, !srcloc !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !17270, metadata !DIExpression()), !dbg !17274
  %5 = sext i32 %4 to i64, !dbg !17283
  %6 = add i64 %3, %5, !dbg !17289
  ret i64 %6, !dbg !17290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17291 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17292
  %2 = trunc i64 %1 to i32, !dbg !17293
  ret i32 %2, !dbg !17294
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17295 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !17296
  ret i64 %1, !dbg !17297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17300, metadata !DIExpression()), !dbg !17307
  %2 = icmp eq i32 %0, 0, !dbg !17308
  br i1 %2, label %10, label %3, !dbg !17310

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %4, metadata !17301, metadata !DIExpression()), !dbg !17307
  %5 = shl i32 %0, 5, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %5, metadata !17302, metadata !DIExpression()), !dbg !17307
  br label %6, !dbg !17313

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %7, metadata !17303, metadata !DIExpression()), !dbg !17315
  %8 = sub i32 %7, %4, !dbg !17316
  %9 = icmp ult i32 %8, %5, !dbg !17318
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17320 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17321
  ret i32 %1, !dbg !17322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17323 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17325
  ret i32 %1, !dbg !17326
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17327 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17331, metadata !DIExpression()), !dbg !17333
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17334

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17335
  br label %14, !dbg !17339

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17332, metadata !DIExpression()), !dbg !17333
  %6 = icmp slt i64 %2, -1, !dbg !17340
  br i1 %6, label %7, label %9, !dbg !17343

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17344
  br label %14, !dbg !17345

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17347
  %11 = icmp ugt i64 %2, 1, !dbg !17348
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17348
  %13 = add nsw i64 %10, %12, !dbg !17349
  br label %14, !dbg !17350

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17351
  ret i64 %15, !dbg !17352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17353 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.208, i32 0, i32 0)) #25, !dbg !17355
  ret void, !dbg !17356
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17357 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17359, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17360, metadata !DIExpression()), !dbg !17380
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !17381

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !17382

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17360, metadata !DIExpression()), !dbg !17380
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17383
  %6 = load i8*, i8** %5, align 4, !dbg !17383
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17387
  %8 = load i32, i32* %7, align 4, !dbg !17387
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !17388
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17389
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !17360, metadata !DIExpression()), !dbg !17380
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17390
  br i1 %10, label %3, label %2, !dbg !17381, !llvm.loop !17392
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17394 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17398, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i8* %1, metadata !17399, metadata !DIExpression()), !dbg !17401
  call void @llvm.dbg.value(metadata i32 %2, metadata !17400, metadata !DIExpression()), !dbg !17401
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17402
  tail call fastcc void @z_waitq_init.210(%union.anon* noundef nonnull %4) #26, !dbg !17403
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17404
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !17405
  ret void, !dbg !17406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.210(%union.anon* noundef %0) unnamed_addr #4 !dbg !17407 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17412, metadata !DIExpression()), !dbg !17413
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17414
  tail call fastcc void @sys_dlist_init.211(%struct._dnode* noundef %2) #26, !dbg !17415
  ret void, !dbg !17416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.211(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !17417 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17422, metadata !DIExpression()), !dbg !17423
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17424
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17425
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17426
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17427
  ret void, !dbg !17428
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17429 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17440, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17437, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i32 %1, metadata !17438, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i32 %2, metadata !17439, metadata !DIExpression()), !dbg !17450
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17451
  call void @llvm.dbg.value(metadata i64 %6, metadata !17442, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i8* null, metadata !17443, metadata !DIExpression()), !dbg !17450
  %7 = icmp eq i64 %5, -1, !dbg !17452
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17452
  call void @llvm.dbg.value(metadata i64 %8, metadata !17442, metadata !DIExpression()), !dbg !17450
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17461
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17463, !srcloc !17469
  call void @llvm.dbg.value(metadata i32 undef, metadata !17466, metadata !DIExpression()) #24, !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17467, metadata !DIExpression()) #24, !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()) #24, !dbg !17461
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i8 0, metadata !17449, metadata !DIExpression()), !dbg !17450
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17443, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i8 0, metadata !17449, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()), !dbg !17450
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17471
  call void @llvm.dbg.value(metadata i8* %12, metadata !17443, metadata !DIExpression()), !dbg !17450
  %13 = tail call i64 @sys_clock_tick_get() #25, !dbg !17473
  call void @llvm.dbg.value(metadata i64 %13, metadata !17441, metadata !DIExpression()), !dbg !17450
  %14 = icmp eq i8* %12, null, !dbg !17474
  br i1 %14, label %15, label %31, !dbg !17476

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()), !dbg !17450
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !17476

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17449, metadata !DIExpression()), !dbg !17450
  %20 = sub nsw i64 %8, %18, !dbg !17477
  %21 = icmp slt i64 %20, 1, !dbg !17478
  br i1 %21, label %31, label %22, !dbg !17479

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !17450
  call void @llvm.dbg.value(metadata i8 undef, metadata !17449, metadata !DIExpression()), !dbg !17450
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !17480
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !17480
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %union.anon* noundef nonnull %16, [1 x i64] %25) #25, !dbg !17480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17481
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17483, !srcloc !17469
  call void @llvm.dbg.value(metadata i32 undef, metadata !17466, metadata !DIExpression()) #24, !dbg !17485
  call void @llvm.dbg.value(metadata i32 undef, metadata !17467, metadata !DIExpression()) #24, !dbg !17485
  call void @llvm.dbg.value(metadata i32 undef, metadata !17460, metadata !DIExpression()) #24, !dbg !17481
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i8* null, metadata !17443, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()), !dbg !17450
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !17471
  call void @llvm.dbg.value(metadata i8* %28, metadata !17443, metadata !DIExpression()), !dbg !17450
  %29 = tail call i64 @sys_clock_tick_get() #25, !dbg !17473
  call void @llvm.dbg.value(metadata i64 %29, metadata !17441, metadata !DIExpression()), !dbg !17450
  %30 = icmp eq i8* %28, null, !dbg !17474
  br i1 %30, label %17, label %31, !dbg !17476, !llvm.loop !17486

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !17471
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !17450
  call void @llvm.dbg.value(metadata i8* %33, metadata !17443, metadata !DIExpression()), !dbg !17450
  call void @llvm.dbg.value(metadata i32 %34, metadata !17489, metadata !DIExpression()) #24, !dbg !17495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17494, metadata !DIExpression()) #24, !dbg !17495
  call void @llvm.dbg.value(metadata i32 %34, metadata !17497, metadata !DIExpression()) #24, !dbg !17500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #24, !dbg !17502, !srcloc !17503
  ret i8* %33, !dbg !17504
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17505 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17511, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17509, metadata !DIExpression()), !dbg !17513
  call void @llvm.dbg.value(metadata i32 %1, metadata !17510, metadata !DIExpression()), !dbg !17513
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17514
  call void @llvm.dbg.value(metadata i8* %4, metadata !17512, metadata !DIExpression()), !dbg !17513
  ret i8* %4, !dbg !17515
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17516 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17520, metadata !DIExpression()), !dbg !17523
  call void @llvm.dbg.value(metadata i8* %1, metadata !17521, metadata !DIExpression()), !dbg !17523
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17454, metadata !DIExpression()) #24, !dbg !17524
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17526, !srcloc !17469
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17526
  call void @llvm.dbg.value(metadata i32 %4, metadata !17466, metadata !DIExpression()) #24, !dbg !17528
  call void @llvm.dbg.value(metadata i32 undef, metadata !17467, metadata !DIExpression()) #24, !dbg !17528
  call void @llvm.dbg.value(metadata i32 %4, metadata !17460, metadata !DIExpression()) #24, !dbg !17524
  call void @llvm.dbg.value(metadata i32 %4, metadata !17522, metadata !DIExpression()), !dbg !17523
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17529
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #25, !dbg !17530
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17531
  %7 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %6) #25, !dbg !17533
  %8 = icmp eq i32 %7, 0, !dbg !17534
  br i1 %8, label %12, label %9, !dbg !17535

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17536
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17537
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #25, !dbg !17537
  br label %13, !dbg !17539

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !17489, metadata !DIExpression()) #24, !dbg !17540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17494, metadata !DIExpression()) #24, !dbg !17540
  call void @llvm.dbg.value(metadata i32 %4, metadata !17497, metadata !DIExpression()) #24, !dbg !17543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #24, !dbg !17545, !srcloc !17503
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17546
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nounwind readnone }
attributes #30 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!832, !2, !2567, !2569, !27, !2571, !2573, !2606, !2643, !111, !181, !2645, !210, !2727, !2738, !2784, !2786, !2814, !2842, !2885, !2956, !3001, !354, !503, !3029, !539, !549, !574, !682, !862, !3034, !980, !1182, !1451, !1734, !3055, !1849, !1936, !3057, !3128, !3177, !1970, !3180, !1976, !2337, !3198, !2359, !2382, !3200, !2497, !3203, !2536}
!llvm.ident = !{!3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205, !3205}
!llvm.module.flags = !{!3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !111, file: !142, line: 60, type: !143, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !141, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!113 = !{!114, !135}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !117, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !117, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !117, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !117, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !117, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !117, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !117, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !137, file: !116, line: 362, baseType: !120, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !137, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!141 = !{!109}
!142 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !178}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !144, file: !145, line: 60, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DISubroutineType(types: !150)
!150 = !{!103, !151}
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !155)
!154 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !{!156, !160, !161, !162, !171, !172}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !153, file: !154, line: 380, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !153, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !153, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !153, file: !154, line: 386, baseType: !163, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !165)
!165 = !{!166, !169}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !164, file: !154, line: 359, baseType: !167, size: 8)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !164, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!170 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !153, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !153, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !154, line: 43, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !177)
!177 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !144, file: !145, line: 65, baseType: !151, size: 32, offset: 32)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !181, file: !184, line: 71, type: !185, isLocal: true, isDefinition: true, align: 32)
!181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !183, splitDebugInlining: false, nameTableKind: None)
!182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!183 = !{!179}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !187)
!187 = !{!188, !207}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !145, line: 60, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!190 = !DISubroutineType(types: !191)
!191 = !{!103, !192}
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !195)
!195 = !{!196, !197, !198, !199, !205, !206}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !194, file: !154, line: 380, baseType: !157, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !194, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !194, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !194, file: !154, line: 386, baseType: !200, size: 32, offset: 96)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !201, file: !154, line: 359, baseType: !167, size: 8)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !201, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !194, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !194, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !145, line: 65, baseType: !192, size: 32, offset: 32)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "console_serial", scope: !210, file: !301, line: 13, type: !307, isLocal: true, isDefinition: true)
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !212, globals: !298, splitDebugInlining: false, nameTableKind: None)
!211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!212 = !{!213, !102, !103}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !216, line: 336, size: 608, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !238, !242, !246, !259, !264, !270, !276, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !215, file: !216, line: 365, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 32)
!220 = !DISubroutineType(types: !221)
!221 = !{!103, !222, !237}
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !225)
!225 = !{!226, !227, !228, !229, !235, !236}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !224, file: !154, line: 380, baseType: !157, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !224, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !224, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !224, file: !154, line: 386, baseType: !230, size: 32, offset: 96)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !232)
!232 = !{!233, !234}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !231, file: !154, line: 359, baseType: !167, size: 8)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !231, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !224, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !224, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !215, file: !216, line: 366, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DISubroutineType(types: !241)
!241 = !{null, !222, !168}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !215, file: !216, line: 374, baseType: !243, size: 32, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = !DISubroutineType(types: !245)
!245 = !{!103, !222}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !215, file: !216, line: 377, baseType: !247, size: 32, offset: 96)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DISubroutineType(types: !249)
!249 = !{!103, !222, !250}
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !216, line: 122, size: 64, elements: !253)
!253 = !{!254, !255, !256, !257, !258}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !252, file: !216, line: 123, baseType: !121, size: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !252, file: !216, line: 124, baseType: !167, size: 8, offset: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !252, file: !216, line: 125, baseType: !167, size: 8, offset: 40)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !252, file: !216, line: 126, baseType: !167, size: 8, offset: 48)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !252, file: !216, line: 127, baseType: !167, size: 8, offset: 56)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !215, file: !216, line: 379, baseType: !260, size: 32, offset: 128)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DISubroutineType(types: !262)
!262 = !{!103, !222, !263}
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !215, file: !216, line: 384, baseType: !265, size: 32, offset: 160)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{!103, !222, !268, !103}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !215, file: !216, line: 393, baseType: !271, size: 32, offset: 192)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!272 = !DISubroutineType(types: !273)
!273 = !{!103, !222, !274, !275}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !215, file: !216, line: 402, baseType: !277, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DISubroutineType(types: !279)
!279 = !{null, !222}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !215, file: !216, line: 405, baseType: !277, size: 32, offset: 256)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !215, file: !216, line: 408, baseType: !243, size: 32, offset: 288)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !215, file: !216, line: 411, baseType: !277, size: 32, offset: 320)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !215, file: !216, line: 414, baseType: !277, size: 32, offset: 352)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !215, file: !216, line: 417, baseType: !243, size: 32, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !215, file: !216, line: 420, baseType: !243, size: 32, offset: 416)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !215, file: !216, line: 423, baseType: !277, size: 32, offset: 448)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !215, file: !216, line: 426, baseType: !277, size: 32, offset: 480)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !215, file: !216, line: 429, baseType: !243, size: 32, offset: 512)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !215, file: !216, line: 432, baseType: !243, size: 32, offset: 544)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !215, file: !216, line: 435, baseType: !291, size: 32, offset: 576)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DISubroutineType(types: !293)
!293 = !{null, !222, !294, !102}
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !216, line: 142, baseType: !295)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DISubroutineType(types: !297)
!297 = !{null, !222, !102}
!298 = !{!208, !299, !305}
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "console_rxbuf", scope: !210, file: !301, line: 15, type: !302, isLocal: true, isDefinition: true)
!301 = !DIFile(filename: "zephyr/subsys/console/getchar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 128, elements: !303)
!303 = !{!304}
!304 = !DISubrange(count: 16)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "console_txbuf", scope: !210, file: !301, line: 16, type: !302, isLocal: true, isDefinition: true)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !308, line: 18, size: 544, elements: !309)
!308 = !DIFile(filename: "zephyr/include/zephyr/console/tty.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!309 = !{!310, !311, !338, !339, !340, !343, !344, !346, !347, !348, !349, !350, !351}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !307, file: !308, line: 19, baseType: !222, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !307, file: !308, line: 21, baseType: !312, size: 128, offset: 32)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !313, line: 2909, size: 128, elements: !314)
!313 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!314 = !{!315, !336, !337}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !312, file: !313, line: 2910, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !318)
!317 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !319)
!319 = !{!320}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !318, file: !317, line: 232, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !323)
!322 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !324)
!324 = !{!325, !331}
!325 = !DIDerivedType(tag: DW_TAG_member, scope: !323, file: !322, line: 38, baseType: !326, size: 32)
!326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !323, file: !322, line: 38, size: 32, elements: !327)
!327 = !{!328, !330}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !326, file: !322, line: 39, baseType: !329, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !326, file: !322, line: 40, baseType: !329, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_member, scope: !323, file: !322, line: 42, baseType: !332, size: 32, offset: 32)
!332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !323, file: !322, line: 42, size: 32, elements: !333)
!333 = !{!334, !335}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !332, file: !322, line: 43, baseType: !329, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !332, file: !322, line: 44, baseType: !329, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !312, file: !313, line: 2911, baseType: !32, size: 32, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !312, file: !313, line: 2912, baseType: !32, size: 32, offset: 96)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !307, file: !308, line: 22, baseType: !274, size: 32, offset: 160)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !307, file: !308, line: 23, baseType: !121, size: 32, offset: 192)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !307, file: !308, line: 24, baseType: !341, size: 16, offset: 224)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !342)
!342 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !307, file: !308, line: 24, baseType: !341, size: 16, offset: 240)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !307, file: !308, line: 25, baseType: !345, size: 32, offset: 256)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !307, file: !308, line: 27, baseType: !312, size: 128, offset: 288)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !307, file: !308, line: 28, baseType: !274, size: 32, offset: 416)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !307, file: !308, line: 29, baseType: !121, size: 32, offset: 448)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !307, file: !308, line: 30, baseType: !341, size: 16, offset: 480)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !307, file: !308, line: 30, baseType: !341, size: 16, offset: 496)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !307, file: !308, line: 31, baseType: !345, size: 32, offset: 512)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "static_regions", scope: !354, file: !363, line: 62, type: !499, isLocal: true, isDefinition: true)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !359, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!356 = !{!357, !103, !121, !102}
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !358, line: 214, baseType: !32)
!358 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!359 = !{!360, !352}
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !362, file: !363, line: 198, type: !485, isLocal: true, isDefinition: true)
!362 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !363, file: !363, line: 175, type: !364, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !480)
!363 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = !DISubroutineType(types: !365)
!365 = !{null, !366}
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !369)
!368 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!369 = !{!370, !435, !448, !449, !450, !451, !457, !475}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !367, file: !368, line: 247, baseType: !371, size: 384)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !372)
!372 = !{!373, !400, !407, !408, !409, !420, !421, !422}
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !371, file: !368, line: 60, baseType: !374, size: 64)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !371, file: !368, line: 60, size: 64, elements: !375)
!375 = !{!376, !391}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !374, file: !368, line: 61, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !378)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !379)
!379 = !{!380, !386}
!380 = !DIDerivedType(tag: DW_TAG_member, scope: !378, file: !322, line: 38, baseType: !381, size: 32)
!381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !378, file: !322, line: 38, size: 32, elements: !382)
!382 = !{!383, !385}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !381, file: !322, line: 39, baseType: !384, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !381, file: !322, line: 40, baseType: !384, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, scope: !378, file: !322, line: 42, baseType: !387, size: 32, offset: 32)
!387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !378, file: !322, line: 42, size: 32, elements: !388)
!388 = !{!389, !390}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !387, file: !322, line: 43, baseType: !384, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !387, file: !322, line: 44, baseType: !384, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !374, file: !368, line: 62, baseType: !392, size: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !394)
!393 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!394 = !{!395}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !392, file: !393, line: 50, baseType: !396, size: 64)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 64, elements: !398)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!398 = !{!399}
!399 = !DISubrange(count: 2)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !371, file: !368, line: 68, baseType: !401, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !403)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !404)
!404 = !{!405}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !403, file: !317, line: 232, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !378)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !371, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !371, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!409 = !DIDerivedType(tag: DW_TAG_member, scope: !371, file: !368, line: 90, baseType: !410, size: 16, offset: 112)
!410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !371, file: !368, line: 90, size: 16, elements: !411)
!411 = !{!412, !419}
!412 = !DIDerivedType(tag: DW_TAG_member, scope: !410, file: !368, line: 91, baseType: !413, size: 16)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !410, file: !368, line: 91, size: 16, elements: !414)
!414 = !{!415, !418}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !413, file: !368, line: 96, baseType: !416, size: 8)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !417)
!417 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !413, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !410, file: !368, line: 100, baseType: !341, size: 16)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !371, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !371, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !371, file: !368, line: 131, baseType: !423, size: 192, offset: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !424)
!424 = !{!425, !426, !432}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !423, file: !317, line: 245, baseType: !377, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !423, file: !317, line: 246, baseType: !427, size: 32, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !428)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DISubroutineType(types: !430)
!430 = !{null, !431}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !423, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !434)
!434 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !367, file: !368, line: 250, baseType: !436, size: 288, offset: 384)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !438)
!437 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!438 = !{!439, !440, !441, !442, !443, !444, !445, !446, !447}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !436, file: !437, line: 26, baseType: !121, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !436, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !436, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !436, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !436, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !436, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !436, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !436, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !436, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !367, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !367, file: !368, line: 256, baseType: !402, size: 64, offset: 704)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !367, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !367, file: !368, line: 300, baseType: !452, size: 96, offset: 800)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !453)
!453 = !{!454, !455, !456}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !452, file: !368, line: 153, baseType: !22, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !452, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !452, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !367, file: !368, line: 325, baseType: !458, size: 32, offset: 896)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !460)
!460 = !{!461, !470, !471}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !459, file: !313, line: 5074, baseType: !462, size: 96)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !468, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !462, file: !463, line: 57, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !463, line: 57, flags: DIFlagFwdDecl)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !462, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !462, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !459, file: !313, line: 5075, baseType: !402, size: 64, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !459, file: !313, line: 5076, baseType: !472, offset: 160)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!473 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!474 = !{}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !367, file: !368, line: 343, baseType: !476, size: 64, offset: 928)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !477)
!477 = !{!478, !479}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !476, file: !437, line: 63, baseType: !121, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !476, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!480 = !{!481, !482, !483, !484}
!481 = !DILocalVariable(name: "thread", arg: 1, scope: !362, file: !363, line: 175, type: !366)
!482 = !DILocalVariable(name: "region_num", scope: !362, file: !363, line: 200, type: !167)
!483 = !DILocalVariable(name: "guard_start", scope: !362, file: !363, line: 265, type: !22)
!484 = !DILocalVariable(name: "guard_size", scope: !362, file: !363, line: 266, type: !357)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 96, elements: !497)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !487, line: 52, size: 96, elements: !488)
!487 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!488 = !{!489, !490, !491}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !486, file: !487, line: 53, baseType: !22, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !486, file: !487, line: 54, baseType: !357, size: 32, offset: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !486, file: !487, line: 55, baseType: !492, size: 32, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !493, line: 151, baseType: !494)
!493 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !493, line: 149, size: 32, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !494, file: !493, line: 150, baseType: !121, size: 32)
!497 = !{!498}
!498 = !DISubrange(count: 1)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 96, elements: !497)
!500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !503, file: !536, line: 39, type: !167, isLocal: true, isDefinition: true)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !505, globals: !535, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!505 = !{!506, !102, !103, !523, !167}
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !508, line: 1168, baseType: !509)
!508 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 1155, size: 352, elements: !510)
!510 = !{!511, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !509, file: !508, line: 1157, baseType: !512, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !509, file: !508, line: 1158, baseType: !120, size: 32, offset: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !509, file: !508, line: 1159, baseType: !120, size: 32, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !509, file: !508, line: 1160, baseType: !120, size: 32, offset: 96)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !509, file: !508, line: 1161, baseType: !120, size: 32, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !509, file: !508, line: 1162, baseType: !120, size: 32, offset: 160)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !509, file: !508, line: 1163, baseType: !120, size: 32, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !509, file: !508, line: 1164, baseType: !120, size: 32, offset: 224)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !509, file: !508, line: 1165, baseType: !120, size: 32, offset: 256)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !509, file: !508, line: 1166, baseType: !120, size: 32, offset: 288)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !509, file: !508, line: 1167, baseType: !120, size: 32, offset: 320)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !526, line: 27, size: 96, elements: !527)
!526 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !{!528, !529, !530}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !525, file: !526, line: 29, baseType: !121, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !525, file: !526, line: 31, baseType: !157, size: 32, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !525, file: !526, line: 37, baseType: !531, size: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !493, line: 146, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !493, line: 141, size: 32, elements: !533)
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !532, file: !493, line: 143, baseType: !121, size: 32)
!535 = !{!501}
!536 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!537 = !DIGlobalVariableExpression(var: !538, expr: !DIExpression())
!538 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !539, file: !546, line: 21, type: !106, isLocal: true, isDefinition: true)
!539 = distinct !DICompileUnit(language: DW_LANG_C99, file: !540, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !541, globals: !545, splitDebugInlining: false, nameTableKind: None)
!540 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!541 = !{!542, !103, !102}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !544, line: 22, baseType: !103)
!544 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!545 = !{!537}
!546 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !549, file: !554, line: 13, type: !571, isLocal: true, isDefinition: true)
!549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !551, splitDebugInlining: false, nameTableKind: None)
!550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!551 = !{!552, !547}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "mpu_config", scope: !549, file: !554, line: 37, type: !555, isLocal: false, isDefinition: true)
!554 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !526, line: 41, size: 64, elements: !557)
!557 = !{!558, !559}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !556, file: !526, line: 43, baseType: !121, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !556, file: !526, line: 45, baseType: !560, size: 32, offset: 32)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !526, line: 27, size: 96, elements: !563)
!563 = !{!564, !565, !566}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !562, file: !526, line: 29, baseType: !121, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !562, file: !526, line: 31, baseType: !157, size: 32, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !562, file: !526, line: 37, baseType: !567, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !493, line: 146, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !493, line: 141, size: 32, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !568, file: !493, line: 143, baseType: !121, size: 32)
!571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 192, elements: !398)
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !574, file: !671, line: 36, type: !672, isLocal: true, isDefinition: true, align: 32)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !576, retainedTypes: !588, globals: !670, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!576 = !{!577, !583}
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !578, line: 506, baseType: !32, size: 32, elements: !579)
!578 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!579 = !{!580, !581, !582}
!580 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!581 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!582 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !578, line: 512, baseType: !32, size: 32, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!586 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!587 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!588 = !{!589, !659, !664, !624, !583, !577, !669, !102}
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !578, line: 523, size: 288, elements: !592)
!592 = !{!593, !614, !620, !625, !629, !630, !631, !635, !655}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !591, file: !578, line: 524, baseType: !594, size: 32)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{!103, !597, !612, !613}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !600)
!600 = !{!601, !602, !603, !604, !610, !611}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !599, file: !154, line: 380, baseType: !157, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !599, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !599, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !599, file: !154, line: 386, baseType: !605, size: 32, offset: 96)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 32)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !606, file: !154, line: 359, baseType: !167, size: 8)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !606, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !599, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !599, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !578, line: 237, baseType: !167)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !578, line: 257, baseType: !121)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !591, file: !578, line: 530, baseType: !615, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 32)
!616 = !DISubroutineType(types: !617)
!617 = !{!103, !597, !618}
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !578, line: 229, baseType: !121)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !591, file: !578, line: 532, baseType: !621, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 32)
!622 = !DISubroutineType(types: !623)
!623 = !{!103, !597, !624, !619}
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !578, line: 216, baseType: !121)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !591, file: !578, line: 535, baseType: !626, size: 32, offset: 96)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 32)
!627 = !DISubroutineType(types: !628)
!628 = !{!103, !597, !624}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !591, file: !578, line: 537, baseType: !626, size: 32, offset: 128)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !591, file: !578, line: 539, baseType: !626, size: 32, offset: 160)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !591, file: !578, line: 541, baseType: !632, size: 32, offset: 192)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 32)
!633 = !DISubroutineType(types: !634)
!634 = !{!103, !597, !612, !577, !583}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !591, file: !578, line: 544, baseType: !636, size: 32, offset: 224)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 32)
!637 = !DISubroutineType(types: !638)
!638 = !{!103, !597, !639, !170}
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !578, line: 478, size: 96, elements: !641)
!641 = !{!642, !649, !654}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !640, file: !578, line: 482, baseType: !643, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !644, line: 33, baseType: !645)
!644 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !644, line: 29, size: 32, elements: !646)
!646 = !{!647}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !645, file: !644, line: 30, baseType: !648, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !640, file: !578, line: 485, baseType: !650, size: 32, offset: 32)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !578, line: 464, baseType: !651)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 32)
!652 = !DISubroutineType(types: !653)
!653 = !{null, !597, !639, !624}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !640, file: !578, line: 493, baseType: !624, size: 32, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !591, file: !578, line: 547, baseType: !656, size: 32, offset: 256)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 32)
!657 = !DISubroutineType(types: !658)
!658 = !{!121, !597}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !578, line: 428, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !661, file: !578, line: 434, baseType: !624, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 32)
!665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !578, line: 441, size: 32, elements: !667)
!667 = !{!668}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !666, file: !578, line: 447, baseType: !624, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!670 = !{!572}
!671 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !674)
!674 = !{!675, !679}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !673, file: !145, line: 60, baseType: !676, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DISubroutineType(types: !678)
!678 = !{!103, !597}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !673, file: !145, line: 65, baseType: !597, size: 32, offset: 32)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !682, file: !754, line: 48, type: !827, isLocal: true, isDefinition: true)
!682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !684, retainedTypes: !740, globals: !751, splitDebugInlining: false, nameTableKind: None)
!683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!684 = !{!30, !685}
!685 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 69, baseType: !103, size: 32, elements: !686)
!686 = !{!687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739}
!687 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!688 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!689 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!690 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!691 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!692 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!693 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!694 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!695 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!696 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!697 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!698 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!699 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!700 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!701 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!702 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!703 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!704 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!705 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!706 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!707 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!708 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!709 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!710 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!711 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!712 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!713 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!714 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!715 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!716 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!717 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!718 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!719 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!720 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!721 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!722 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!723 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!724 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!725 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!726 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!727 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!728 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!729 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!730 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!731 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!732 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!733 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!734 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!735 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!736 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!737 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!738 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!739 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!740 = !{!357, !103, !102, !741}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 270, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 262, size: 192, elements: !744)
!744 = !{!745, !746, !747, !748, !749, !750}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !743, file: !116, line: 264, baseType: !120, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !743, file: !116, line: 265, baseType: !120, size: 32, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !743, file: !116, line: 266, baseType: !120, size: 32, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !743, file: !116, line: 267, baseType: !120, size: 32, offset: 96)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !743, file: !116, line: 268, baseType: !120, size: 32, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !743, file: !116, line: 269, baseType: !120, size: 32, offset: 160)
!751 = !{!752, !758, !774, !785, !800, !680, !802, !815, !817, !819, !821, !823, !825}
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !682, file: !754, line: 424, type: !755, isLocal: false, isDefinition: true, align: 16)
!754 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !756)
!756 = !{!757}
!757 = !DISubrange(count: 4)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !682, file: !754, line: 424, type: !760, isLocal: false, isDefinition: true, align: 32)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !762)
!762 = !{!763, !764, !765, !766, !772, !773}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !761, file: !154, line: 380, baseType: !157, size: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !761, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !761, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !761, file: !154, line: 386, baseType: !767, size: 32, offset: 96)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 32)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !768, file: !154, line: 359, baseType: !167, size: 8)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !768, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !761, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !761, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !682, file: !754, line: 424, type: !776, isLocal: true, isDefinition: true, align: 32)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !778)
!778 = !{!779, !784}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !777, file: !145, line: 60, baseType: !780, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 32)
!781 = !DISubroutineType(types: !782)
!782 = !{!103, !783}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !777, file: !145, line: 65, baseType: !783, size: 32, offset: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "exti_data", scope: !682, file: !754, line: 423, type: !787, isLocal: true, isDefinition: true)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !754, line: 107, size: 1024, elements: !788)
!788 = !{!789}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !787, file: !754, line: 109, baseType: !790, size: 1024)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !791, size: 1024, elements: !303)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !754, line: 101, size: 64, elements: !792)
!792 = !{!793, !799}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !791, file: !754, line: 102, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !795, line: 63, baseType: !796)
!795 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{null, !103, !102}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !791, file: !754, line: 103, baseType: !102, size: 32, offset: 32)
!800 = !DIGlobalVariableExpression(var: !801, expr: !DIExpression())
!801 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !682, file: !754, line: 424, type: !768, isLocal: true, isDefinition: true, align: 8)
!802 = !DIGlobalVariableExpression(var: !803, expr: !DIExpression())
!803 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !804, file: !754, line: 493, type: !809, isLocal: true, isDefinition: true, align: 32)
!804 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !754, file: !754, line: 460, type: !805, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !807)
!805 = !DISubroutineType(types: !806)
!806 = !{null, !783}
!807 = !{!808}
!808 = !DILocalVariable(name: "dev", arg: 1, scope: !804, file: !754, line: 460, type: !783)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !810)
!810 = !{!811, !812, !813, !814}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !809, file: !10, line: 55, baseType: !345, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !809, file: !10, line: 57, baseType: !345, size: 32, offset: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !809, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !809, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !804, file: !754, line: 497, type: !809, isLocal: true, isDefinition: true, align: 32)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !804, file: !754, line: 507, type: !809, isLocal: true, isDefinition: true, align: 32)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !804, file: !754, line: 512, type: !809, isLocal: true, isDefinition: true, align: 32)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !804, file: !754, line: 516, type: !809, isLocal: true, isDefinition: true, align: 32)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !804, file: !754, line: 523, type: !809, isLocal: true, isDefinition: true, align: 32)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !804, file: !754, line: 527, type: !809, isLocal: true, isDefinition: true, align: 32)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !828, size: 512, elements: !303)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 127, baseType: !685)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !832, file: !837, line: 21, type: !857, isLocal: false, isDefinition: true, align: 16)
!832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !833, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !834, splitDebugInlining: false, nameTableKind: None)
!833 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!834 = !{!835, !830, !841, !843, !845, !847, !849, !851, !853, !855}
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !832, file: !837, line: 16, type: !838, isLocal: false, isDefinition: true, align: 16)
!837 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 176, elements: !839)
!839 = !{!840}
!840 = !DISubrange(count: 11)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !832, file: !837, line: 28, type: !755, isLocal: false, isDefinition: true, align: 16)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !832, file: !837, line: 35, type: !755, isLocal: false, isDefinition: true, align: 16)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !832, file: !837, line: 42, type: !755, isLocal: false, isDefinition: true, align: 16)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !832, file: !837, line: 49, type: !755, isLocal: false, isDefinition: true, align: 16)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !832, file: !837, line: 56, type: !755, isLocal: false, isDefinition: true, align: 16)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !832, file: !837, line: 63, type: !755, isLocal: false, isDefinition: true, align: 16)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !832, file: !837, line: 70, type: !755, isLocal: false, isDefinition: true, align: 16)
!855 = !DIGlobalVariableExpression(var: !856, expr: !DIExpression())
!856 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !832, file: !837, line: 77, type: !755, isLocal: false, isDefinition: true, align: 16)
!857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 48, elements: !858)
!858 = !{!859}
!859 = !DISubrange(count: 3)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !862, file: !906, line: 398, type: !939, isLocal: true, isDefinition: true)
!862 = distinct !DICompileUnit(language: DW_LANG_C99, file: !863, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !864, retainedTypes: !877, globals: !903, splitDebugInlining: false, nameTableKind: None)
!863 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!864 = !{!865, !30, !870}
!865 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !866, line: 190, baseType: !32, size: 32, elements: !867)
!866 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!867 = !{!868, !869}
!868 = !DIEnumerator(name: "SUCCESS", value: 0)
!869 = !DIEnumerator(name: "ERROR", value: 1)
!870 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !871, line: 44, baseType: !32, size: 32, elements: !872)
!871 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!872 = !{!873, !874, !875, !876}
!873 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!874 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!875 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!876 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!877 = !{!102, !103, !121, !878, !896, !902}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !881)
!881 = !{!882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !880, file: !116, line: 372, baseType: !120, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !880, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !880, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !880, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !880, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !880, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !880, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !880, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !880, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !880, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !880, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !880, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !880, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !880, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !898, line: 343, size: 64, elements: !899)
!898 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !897, file: !898, line: 344, baseType: !121, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !897, file: !898, line: 345, baseType: !121, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!903 = !{!904, !910, !926, !937, !860}
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !862, file: !906, line: 752, type: !907, isLocal: false, isDefinition: true, align: 16)
!906 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 512, elements: !908)
!908 = !{!909}
!909 = !DISubrange(count: 32)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !862, file: !906, line: 752, type: !912, isLocal: false, isDefinition: true, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !914)
!914 = !{!915, !916, !917, !918, !924, !925}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !913, file: !154, line: 380, baseType: !157, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !913, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !913, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !913, file: !154, line: 386, baseType: !919, size: 32, offset: 96)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !920, file: !154, line: 359, baseType: !167, size: 8)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !920, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !913, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !913, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !862, file: !906, line: 752, type: !928, isLocal: true, isDefinition: true, align: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !930)
!930 = !{!931, !936}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !929, file: !145, line: 60, baseType: !932, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!103, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !929, file: !145, line: 65, baseType: !935, size: 32, offset: 32)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !862, file: !906, line: 752, type: !920, isLocal: true, isDefinition: true, align: 8)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !871, line: 100, size: 224, elements: !940)
!940 = !{!941, !947, !948, !957, !962, !967, !973}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !939, file: !871, line: 101, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !871, line: 76, baseType: !943)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!103, !935, !946}
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !871, line: 56, baseType: !102)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !939, file: !871, line: 102, baseType: !942, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !939, file: !871, line: 103, baseType: !949, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !871, line: 83, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!103, !935, !946, !953, !102}
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !871, line: 72, baseType: !954)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !935, !946, !102}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !939, file: !871, line: 104, baseType: !958, size: 32, offset: 96)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !871, line: 79, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!103, !935, !946, !902}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !939, file: !871, line: 105, baseType: !963, size: 32, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !871, line: 88, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!870, !935, !946}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !939, file: !871, line: 106, baseType: !968, size: 32, offset: 160)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !871, line: 92, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{!103, !935, !946, !972}
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !871, line: 64, baseType: !102)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !939, file: !871, line: 107, baseType: !974, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !871, line: 96, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!103, !935, !946, !102}
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "debug_hook_in", scope: !980, file: !984, line: 43, type: !1176, isLocal: true, isDefinition: true)
!980 = distinct !DICompileUnit(language: DW_LANG_C99, file: !981, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !982, retainedTypes: !991, globals: !1071, splitDebugInlining: false, nameTableKind: None)
!981 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!982 = !{!30, !983}
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !984, line: 214, baseType: !32, size: 32, elements: !985)
!984 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!985 = !{!986, !987, !988, !989, !990}
!986 = !DIEnumerator(name: "ESC_ESC", value: 0)
!987 = !DIEnumerator(name: "ESC_ANSI", value: 1)
!988 = !DIEnumerator(name: "ESC_ANSI_FIRST", value: 2)
!989 = !DIEnumerator(name: "ESC_ANSI_VAL", value: 3)
!990 = !DIEnumerator(name: "ESC_ANSI_VAL_2", value: 4)
!991 = !{!102, !103, !992, !32, !24}
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !216, line: 336, size: 608, elements: !995)
!995 = !{!996, !1015, !1019, !1023, !1036, !1041, !1045, !1049, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !994, file: !216, line: 365, baseType: !997, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DISubroutineType(types: !999)
!999 = !{!103, !1000, !237}
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1013, !1014}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1002, file: !154, line: 380, baseType: !157, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1002, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1002, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1002, file: !154, line: 386, baseType: !1008, size: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1009, file: !154, line: 359, baseType: !167, size: 8)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1009, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1002, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1002, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !994, file: !216, line: 366, baseType: !1016, size: 32, offset: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{null, !1000, !168}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !994, file: !216, line: 374, baseType: !1020, size: 32, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!103, !1000}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !994, file: !216, line: 377, baseType: !1024, size: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!103, !1000, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !216, line: 122, size: 64, elements: !1030)
!1030 = !{!1031, !1032, !1033, !1034, !1035}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1029, file: !216, line: 123, baseType: !121, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1029, file: !216, line: 124, baseType: !167, size: 8, offset: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1029, file: !216, line: 125, baseType: !167, size: 8, offset: 40)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1029, file: !216, line: 126, baseType: !167, size: 8, offset: 48)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1029, file: !216, line: 127, baseType: !167, size: 8, offset: 56)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !994, file: !216, line: 379, baseType: !1037, size: 32, offset: 128)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!103, !1000, !1040}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !994, file: !216, line: 384, baseType: !1042, size: 32, offset: 160)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 32)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!103, !1000, !268, !103}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !994, file: !216, line: 393, baseType: !1046, size: 32, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 32)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!103, !1000, !274, !275}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !994, file: !216, line: 402, baseType: !1050, size: 32, offset: 224)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{null, !1000}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !994, file: !216, line: 405, baseType: !1050, size: 32, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !994, file: !216, line: 408, baseType: !1020, size: 32, offset: 288)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !994, file: !216, line: 411, baseType: !1050, size: 32, offset: 320)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !994, file: !216, line: 414, baseType: !1050, size: 32, offset: 352)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !994, file: !216, line: 417, baseType: !1020, size: 32, offset: 384)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !994, file: !216, line: 420, baseType: !1020, size: 32, offset: 416)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !994, file: !216, line: 423, baseType: !1050, size: 32, offset: 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !994, file: !216, line: 426, baseType: !1050, size: 32, offset: 480)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !994, file: !216, line: 429, baseType: !1020, size: 32, offset: 512)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !994, file: !216, line: 432, baseType: !1020, size: 32, offset: 544)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !994, file: !216, line: 435, baseType: !1064, size: 32, offset: 576)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{null, !1000, !1067, !102}
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !216, line: 142, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !1000, !102}
!1071 = !{!1072, !978, !1079, !1121, !1123, !1129, !1136, !1139, !1164, !1168, !1170, !1172, !1174}
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !980, file: !984, line: 603, type: !1074, isLocal: true, isDefinition: true, align: 32)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1075, file: !145, line: 60, baseType: !1020, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1075, file: !145, line: 65, baseType: !1000, size: 32, offset: 32)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "avail_queue", scope: !980, file: !984, line: 108, type: !1081, isLocal: true, isDefinition: true)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !313, line: 2208, size: 128, elements: !1083)
!1083 = !{!1084}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !1082, file: !313, line: 2209, baseType: !1085, size: 128)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !313, line: 1709, size: 128, elements: !1086)
!1086 = !{!1087, !1100, !1102}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !1085, file: !313, line: 1710, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !1089, line: 46, baseType: !1090)
!1089 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !1089, line: 41, size: 64, elements: !1091)
!1091 = !{!1092, !1099}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1090, file: !1089, line: 42, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !1089, line: 39, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !1089, line: 35, size: 32, elements: !1096)
!1096 = !{!1097}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !1095, file: !1089, line: 36, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !1089, line: 32, baseType: !121)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1090, file: !1089, line: 43, baseType: !1093, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1085, file: !313, line: 1711, baseType: !1101, offset: 64)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1085, file: !313, line: 1712, baseType: !1103, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !1105)
!1105 = !{!1106}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1104, file: !317, line: 232, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !1109)
!1109 = !{!1110, !1116}
!1110 = !DIDerivedType(tag: DW_TAG_member, scope: !1108, file: !322, line: 38, baseType: !1111, size: 32)
!1111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1108, file: !322, line: 38, size: 32, elements: !1112)
!1112 = !{!1113, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1111, file: !322, line: 39, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1111, file: !322, line: 40, baseType: !1114, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, scope: !1108, file: !322, line: 42, baseType: !1117, size: 32, offset: 32)
!1117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1108, file: !322, line: 42, size: 32, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1117, file: !322, line: 43, baseType: !1114, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1117, file: !322, line: 44, baseType: !1114, size: 32)
!1121 = !DIGlobalVariableExpression(var: !1122, expr: !DIExpression())
!1122 = distinct !DIGlobalVariable(name: "lines_queue", scope: !980, file: !984, line: 109, type: !1081, isLocal: true, isDefinition: true)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "completion_cb", scope: !980, file: !984, line: 110, type: !1125, isLocal: true, isDefinition: true)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!167, !1128, !167}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "debug_hook_out", scope: !980, file: !984, line: 54, type: !1131, isLocal: true, isDefinition: true)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_out_debug_hook_t", file: !1133, line: 40, baseType: !1134)
!1133 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/uart_console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!103, !159}
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !980, file: !984, line: 38, type: !1138, isLocal: true, isDefinition: true)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "cmd", scope: !1141, file: !984, line: 435, type: !1152, isLocal: true, isDefinition: true)
!1141 = distinct !DISubprogram(name: "uart_console_isr", scope: !984, file: !984, line: 428, type: !1069, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !1142)
!1142 = !{!1143, !1144, !1145, !1147, !1148}
!1143 = !DILocalVariable(name: "unused", arg: 1, scope: !1141, file: !984, line: 428, type: !1000)
!1144 = !DILocalVariable(name: "user_data", arg: 2, scope: !1141, file: !984, line: 428, type: !102)
!1145 = !DILocalVariable(name: "byte", scope: !1146, file: !984, line: 436, type: !167)
!1146 = distinct !DILexicalBlock(scope: !1141, file: !984, line: 434, column: 48)
!1147 = !DILocalVariable(name: "rx", scope: !1146, file: !984, line: 437, type: !103)
!1148 = !DILocalVariable(name: "ret", scope: !1149, file: !984, line: 461, type: !102)
!1149 = distinct !DILexicalBlock(scope: !1150, file: !984, line: 461, column: 10)
!1150 = distinct !DILexicalBlock(scope: !1151, file: !984, line: 460, column: 13)
!1151 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 460, column: 7)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_input", file: !1154, line: 21, size: 1088, elements: !1155)
!1154 = !DIFile(filename: "zephyr/include/zephyr/drivers/console/console.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1155 = !{!1156, !1159, !1160}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_unused", scope: !1153, file: !1154, line: 23, baseType: !1157, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !1158)
!1158 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "is_mcumgr", scope: !1153, file: !1154, line: 25, baseType: !167, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1153, file: !1154, line: 27, baseType: !1161, size: 1024, offset: 40)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1024, elements: !1162)
!1162 = !{!1163}
!1163 = !DISubrange(count: 128)
!1164 = !DIGlobalVariableExpression(var: !1165, expr: !DIExpression())
!1165 = distinct !DIGlobalVariable(name: "esc_state", scope: !980, file: !984, line: 228, type: !1166, isLocal: true, isDefinition: true)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !1167, line: 22, baseType: !1158)
!1167 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1168 = !DIGlobalVariableExpression(var: !1169, expr: !DIExpression())
!1169 = distinct !DIGlobalVariable(name: "ansi_val", scope: !980, file: !984, line: 229, type: !32, isLocal: true, isDefinition: true)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "ansi_val_2", scope: !980, file: !984, line: 229, type: !32, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "cur", scope: !980, file: !984, line: 230, type: !167, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "end", scope: !980, file: !984, line: 230, type: !167, isLocal: true, isDefinition: true)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_console_in_debug_hook_t", file: !1133, line: 45, baseType: !1177)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!103, !167}
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1182, file: !1332, line: 762, type: !1430, isLocal: true, isDefinition: true)
!1182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1183, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1184, retainedTypes: !1191, globals: !1329, splitDebugInlining: false, nameTableKind: None)
!1183 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1184 = !{!30, !577, !583, !1185, !870}
!1185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !795, line: 43, baseType: !32, size: 32, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1190}
!1187 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1188 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1189 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1190 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1191 = !{!102, !103, !1192, !1256, !1261, !624, !583, !577, !1266, !1267, !121, !1281, !1237, !1128, !1289, !1290}
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !578, line: 523, size: 288, elements: !1195)
!1195 = !{!1196, !1215, !1219, !1223, !1227, !1228, !1229, !1233, !1252}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1194, file: !578, line: 524, baseType: !1197, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 32)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{!103, !1200, !612, !613}
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1203)
!1203 = !{!1204, !1205, !1206, !1207, !1213, !1214}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1202, file: !154, line: 380, baseType: !157, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1202, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1202, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1202, file: !154, line: 386, baseType: !1208, size: 32, offset: 96)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1209, file: !154, line: 359, baseType: !167, size: 8)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1209, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1202, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1194, file: !578, line: 530, baseType: !1216, size: 32, offset: 32)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!103, !1200, !618}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1194, file: !578, line: 532, baseType: !1220, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 32)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!103, !1200, !624, !619}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1194, file: !578, line: 535, baseType: !1224, size: 32, offset: 96)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!103, !1200, !624}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1194, file: !578, line: 537, baseType: !1224, size: 32, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1194, file: !578, line: 539, baseType: !1224, size: 32, offset: 160)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1194, file: !578, line: 541, baseType: !1230, size: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 32)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!103, !1200, !612, !577, !583}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1194, file: !578, line: 544, baseType: !1234, size: 32, offset: 224)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!103, !1200, !1237, !170}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !578, line: 478, size: 96, elements: !1239)
!1239 = !{!1240, !1246, !1251}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1238, file: !578, line: 482, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !644, line: 33, baseType: !1242)
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !644, line: 29, size: 32, elements: !1243)
!1243 = !{!1244}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1242, file: !644, line: 30, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1238, file: !578, line: 485, baseType: !1247, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !578, line: 464, baseType: !1248)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1200, !1237, !624}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1238, file: !578, line: 493, baseType: !624, size: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1194, file: !578, line: 547, baseType: !1253, size: 32, offset: 256)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!121, !1200}
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1258)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !578, line: 428, size: 32, elements: !1259)
!1259 = !{!1260}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1258, file: !578, line: 434, baseType: !624, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !578, line: 441, size: 32, elements: !1264)
!1264 = !{!1265}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1263, file: !578, line: 447, baseType: !624, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1269, file: !116, line: 305, baseType: !120, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1269, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1269, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1269, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1269, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1269, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1269, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1269, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1269, file: !116, line: 313, baseType: !1280, size: 64, offset: 256)
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !398)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 325, baseType: !1283)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 320, size: 192, elements: !1284)
!1284 = !{!1285, !1286, !1287}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1283, file: !116, line: 322, baseType: !120, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1283, file: !116, line: 323, baseType: !120, size: 32, offset: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1283, file: !116, line: 324, baseType: !1288, size: 128, offset: 64)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !756)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !871, line: 100, size: 224, elements: !1293)
!1293 = !{!1294, !1299, !1300, !1309, !1314, !1319, !1324}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1292, file: !871, line: 101, baseType: !1295, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !871, line: 76, baseType: !1296)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{!103, !1200, !946}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1292, file: !871, line: 102, baseType: !1295, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1292, file: !871, line: 103, baseType: !1301, size: 32, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !871, line: 83, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!103, !1200, !946, !1305, !102}
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !871, line: 72, baseType: !1306)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{null, !1200, !946, !102}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1292, file: !871, line: 104, baseType: !1310, size: 32, offset: 96)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !871, line: 79, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!103, !1200, !946, !902}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1292, file: !871, line: 105, baseType: !1315, size: 32, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !871, line: 88, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!870, !1200, !946}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1292, file: !871, line: 106, baseType: !1320, size: 32, offset: 160)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !871, line: 92, baseType: !1321)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 32)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!103, !1200, !946, !972}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1292, file: !871, line: 107, baseType: !1325, size: 32, offset: 192)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !871, line: 96, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!103, !1200, !946, !102}
!1329 = !{!1330, !1336, !1338, !1348, !1353, !1355, !1357, !1362, !1364, !1366, !1371, !1373, !1375, !1377, !1379, !1381, !1386, !1388, !1390, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1180, !1426, !1428, !1441, !1443, !1445, !1447}
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1182, file: !1332, line: 762, type: !1333, isLocal: false, isDefinition: true, align: 16)
!1332 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 128, elements: !1334)
!1334 = !{!1335}
!1335 = !DISubrange(count: 8)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1182, file: !1332, line: 762, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1182, file: !1332, line: 762, type: !1340, isLocal: true, isDefinition: true, align: 32)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1342)
!1342 = !{!1343, !1347}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1341, file: !145, line: 60, baseType: !1344, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!103, !1200}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1341, file: !145, line: 65, baseType: !1200, size: 32, offset: 32)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1182, file: !1332, line: 766, type: !1350, isLocal: false, isDefinition: true, align: 16)
!1350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 144, elements: !1351)
!1351 = !{!1352}
!1352 = !DISubrange(count: 9)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1182, file: !1332, line: 766, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1182, file: !1332, line: 766, type: !1340, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1182, file: !1332, line: 770, type: !1359, isLocal: false, isDefinition: true, align: 16)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 96, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 6)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1182, file: !1332, line: 770, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1182, file: !1332, line: 770, type: !1340, isLocal: true, isDefinition: true, align: 32)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1182, file: !1332, line: 774, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 80, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 5)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1182, file: !1332, line: 774, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1182, file: !1332, line: 774, type: !1340, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1182, file: !1332, line: 778, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1182, file: !1332, line: 778, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1182, file: !1332, line: 778, type: !1340, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1182, file: !1332, line: 790, type: !1383, isLocal: false, isDefinition: true, align: 16)
!1383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 112, elements: !1384)
!1384 = !{!1385}
!1385 = !DISubrange(count: 7)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1182, file: !1332, line: 790, type: !1201, isLocal: false, isDefinition: true, align: 32)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1182, file: !1332, line: 790, type: !1340, isLocal: true, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1182, file: !1332, line: 762, type: !1392, isLocal: true, isDefinition: true)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1393, line: 237, size: 128, elements: !1394)
!1393 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1394 = !{!1395, !1396, !1397}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1392, file: !1393, line: 239, baseType: !1263, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1392, file: !1393, line: 241, baseType: !1200, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1392, file: !1393, line: 243, baseType: !1398, size: 64, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !644, line: 40, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !644, line: 35, size: 64, elements: !1400)
!1400 = !{!1401, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1399, file: !644, line: 36, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1399, file: !644, line: 37, baseType: !1402, size: 32, offset: 32)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1182, file: !1332, line: 762, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1182, file: !1332, line: 766, type: !1392, isLocal: true, isDefinition: true)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1182, file: !1332, line: 766, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1182, file: !1332, line: 770, type: !1392, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1182, file: !1332, line: 770, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1182, file: !1332, line: 774, type: !1392, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1182, file: !1332, line: 774, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1182, file: !1332, line: 778, type: !1392, isLocal: true, isDefinition: true)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1182, file: !1332, line: 778, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1182, file: !1332, line: 790, type: !1392, isLocal: true, isDefinition: true)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1182, file: !1332, line: 790, type: !1209, isLocal: true, isDefinition: true, align: 8)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1182, file: !1332, line: 656, type: !1193, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1182, file: !1332, line: 766, type: !1430, isLocal: true, isDefinition: true)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1393, line: 224, size: 160, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1431, file: !1393, line: 226, baseType: !1258, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1431, file: !1393, line: 228, baseType: !902, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1431, file: !1393, line: 230, baseType: !103, size: 32, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1431, file: !1393, line: 231, baseType: !1437, size: 64, offset: 96)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !898, line: 343, size: 64, elements: !1438)
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1437, file: !898, line: 344, baseType: !121, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1437, file: !898, line: 345, baseType: !121, size: 32, offset: 32)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1182, file: !1332, line: 770, type: !1430, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1182, file: !1332, line: 774, type: !1430, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1182, file: !1332, line: 778, type: !1430, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1182, file: !1332, line: 790, type: !1430, isLocal: true, isDefinition: true)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1451, file: !1619, line: 1914, type: !1700, isLocal: true, isDefinition: true)
!1451 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1452, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1453, retainedTypes: !1486, globals: !1616, splitDebugInlining: false, nameTableKind: None)
!1452 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1453 = !{!30, !1454, !1461, !1468, !1475, !1481, !870}
!1454 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !216, line: 47, baseType: !32, size: 32, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460}
!1456 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1457 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1458 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1459 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1460 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !216, line: 75, baseType: !32, size: 32, elements: !1462)
!1462 = !{!1463, !1464, !1465, !1466, !1467}
!1463 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1464 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1465 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1466 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1467 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1468 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !216, line: 92, baseType: !32, size: 32, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473, !1474}
!1470 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1471 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1472 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1473 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1474 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1475 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !216, line: 84, baseType: !32, size: 32, elements: !1476)
!1476 = !{!1477, !1478, !1479, !1480}
!1477 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1478 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1479 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1480 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1481 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !216, line: 107, baseType: !32, size: 32, elements: !1482)
!1482 = !{!1483, !1484, !1485}
!1483 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1484 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1485 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1486 = !{!102, !103, !1487, !168, !167, !1566, !121, !946, !1577, !341}
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !216, line: 336, size: 608, elements: !1490)
!1490 = !{!1491, !1510, !1514, !1518, !1531, !1536, !1540, !1544, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1489, file: !216, line: 365, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!103, !1495, !237}
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1508, !1509}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1497, file: !154, line: 380, baseType: !157, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1497, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1497, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1497, file: !154, line: 386, baseType: !1503, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1505)
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1504, file: !154, line: 359, baseType: !167, size: 8)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1504, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1497, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1497, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1489, file: !216, line: 366, baseType: !1511, size: 32, offset: 32)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{null, !1495, !168}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1489, file: !216, line: 374, baseType: !1515, size: 32, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 32)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!103, !1495}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1489, file: !216, line: 377, baseType: !1519, size: 32, offset: 96)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!103, !1495, !1522}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !216, line: 122, size: 64, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1530}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1524, file: !216, line: 123, baseType: !121, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1524, file: !216, line: 124, baseType: !167, size: 8, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1524, file: !216, line: 125, baseType: !167, size: 8, offset: 40)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1524, file: !216, line: 126, baseType: !167, size: 8, offset: 48)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1524, file: !216, line: 127, baseType: !167, size: 8, offset: 56)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1489, file: !216, line: 379, baseType: !1532, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!103, !1495, !1535}
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1489, file: !216, line: 384, baseType: !1537, size: 32, offset: 160)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!103, !1495, !268, !103}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1489, file: !216, line: 393, baseType: !1541, size: 32, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!103, !1495, !274, !275}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1489, file: !216, line: 402, baseType: !1545, size: 32, offset: 224)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{null, !1495}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1489, file: !216, line: 405, baseType: !1545, size: 32, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1489, file: !216, line: 408, baseType: !1515, size: 32, offset: 288)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1489, file: !216, line: 411, baseType: !1545, size: 32, offset: 320)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1489, file: !216, line: 414, baseType: !1545, size: 32, offset: 352)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1489, file: !216, line: 417, baseType: !1515, size: 32, offset: 384)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1489, file: !216, line: 420, baseType: !1515, size: 32, offset: 416)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1489, file: !216, line: 423, baseType: !1545, size: 32, offset: 448)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1489, file: !216, line: 426, baseType: !1545, size: 32, offset: 480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1489, file: !216, line: 429, baseType: !1515, size: 32, offset: 512)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1489, file: !216, line: 432, baseType: !1515, size: 32, offset: 544)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1489, file: !216, line: 435, baseType: !1559, size: 32, offset: 576)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1495, !1562, !102}
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !216, line: 142, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{null, !1495, !102}
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 505, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 496, size: 224, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1568, file: !116, line: 498, baseType: !120, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1568, file: !116, line: 499, baseType: !120, size: 32, offset: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1568, file: !116, line: 500, baseType: !120, size: 32, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1568, file: !116, line: 501, baseType: !120, size: 32, offset: 96)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1568, file: !116, line: 502, baseType: !120, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1568, file: !116, line: 503, baseType: !120, size: 32, offset: 160)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1568, file: !116, line: 504, baseType: !120, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !871, line: 100, size: 224, elements: !1580)
!1580 = !{!1581, !1586, !1587, !1596, !1601, !1606, !1611}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1579, file: !871, line: 101, baseType: !1582, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !871, line: 76, baseType: !1583)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!103, !1495, !946}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1579, file: !871, line: 102, baseType: !1582, size: 32, offset: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1579, file: !871, line: 103, baseType: !1588, size: 32, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !871, line: 83, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!103, !1495, !946, !1592, !102}
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !871, line: 72, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{null, !1495, !946, !102}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1579, file: !871, line: 104, baseType: !1597, size: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !871, line: 79, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{!103, !1495, !946, !902}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1579, file: !871, line: 105, baseType: !1602, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !871, line: 88, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!870, !1495, !946}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1579, file: !871, line: 106, baseType: !1607, size: 32, offset: 160)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !871, line: 92, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!103, !1495, !946, !972}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1579, file: !871, line: 107, baseType: !1612, size: 32, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !871, line: 96, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!103, !1495, !946, !102}
!1616 = !{!1617, !1620, !1622, !1629, !1631, !1633, !1635, !1637, !1449, !1639, !1647, !1670, !1673, !1676, !1687, !1689, !1698, !1717, !1719, !1721, !1723, !1725, !1730}
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1333, isLocal: false, isDefinition: true, align: 16)
!1619 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1496, isLocal: false, isDefinition: true, align: 32)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1625, file: !145, line: 60, baseType: !1515, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1625, file: !145, line: 65, baseType: !1495, size: 32, offset: 32)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1333, isLocal: false, isDefinition: true, align: 16)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1496, isLocal: false, isDefinition: true, align: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1624, isLocal: true, isDefinition: true, align: 32)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1504, isLocal: true, isDefinition: true, align: 8)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1504, isLocal: true, isDefinition: true, align: 8)
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1451, file: !1619, line: 1914, type: !1641, isLocal: true, isDefinition: true)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 64, elements: !497)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !898, line: 343, size: 64, elements: !1644)
!1644 = !{!1645, !1646}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1643, file: !898, line: 344, baseType: !121, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1643, file: !898, line: 345, baseType: !121, size: 32, offset: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1650)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1651, line: 60, size: 64, elements: !1652)
!1651 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1652 = !{!1653, !1669}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1650, file: !1651, line: 69, baseType: !1654, size: 32)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1651, line: 50, size: 64, elements: !1657)
!1657 = !{!1658, !1667, !1668}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1656, file: !1651, line: 52, baseType: !1659, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1662, line: 37, baseType: !1663)
!1662 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1662, line: 32, size: 64, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1663, file: !1662, line: 34, baseType: !121, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1663, file: !1662, line: 36, baseType: !121, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1656, file: !1651, line: 54, baseType: !167, size: 8, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1656, file: !1651, line: 56, baseType: !167, size: 8, offset: 40)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1650, file: !1651, line: 71, baseType: !167, size: 8, offset: 32)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1672, isLocal: true, isDefinition: true)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 64, elements: !497)
!1673 = !DIGlobalVariableExpression(var: !1674, expr: !DIExpression())
!1674 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1451, file: !1619, line: 1914, type: !1675, isLocal: true, isDefinition: true)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1660, size: 128, elements: !398)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1678, file: !1619, line: 1914, type: !1681, isLocal: true, isDefinition: true, align: 32)
!1678 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1619, file: !1619, line: 1914, type: !1546, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !1679)
!1679 = !{!1680}
!1680 = !DILocalVariable(name: "dev", arg: 1, scope: !1678, file: !1619, line: 1914, type: !1495)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1681, file: !10, line: 55, baseType: !345, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1681, file: !10, line: 57, baseType: !345, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1681, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1681, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1451, file: !1619, line: 1539, type: !1488, isLocal: true, isDefinition: true)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1451, file: !1619, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1692, line: 74, size: 128, elements: !1693)
!1692 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1693 = !{!1694, !1695, !1696, !1697}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1691, file: !1692, line: 76, baseType: !121, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1691, file: !1692, line: 78, baseType: !1495, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1691, file: !1692, line: 80, baseType: !1562, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1691, file: !1692, line: 81, baseType: !102, size: 32, offset: 96)
!1698 = !DIGlobalVariableExpression(var: !1699, expr: !DIExpression())
!1699 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1451, file: !1619, line: 1914, type: !1700, isLocal: true, isDefinition: true)
!1700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1692, line: 22, size: 256, elements: !1702)
!1702 = !{!1703, !1704, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1715}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1701, file: !1692, line: 24, baseType: !1566, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1701, file: !1692, line: 26, baseType: !1705, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1701, file: !1692, line: 28, baseType: !357, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1701, file: !1692, line: 30, baseType: !170, size: 8, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1701, file: !1692, line: 32, baseType: !103, size: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1701, file: !1692, line: 34, baseType: !170, size: 8, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1701, file: !1692, line: 36, baseType: !170, size: 8, offset: 168)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1701, file: !1692, line: 38, baseType: !170, size: 8, offset: 176)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1701, file: !1692, line: 40, baseType: !170, size: 8, offset: 184)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1701, file: !1692, line: 41, baseType: !1714, size: 32, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1701, file: !1692, line: 44, baseType: !1716, size: 32, offset: 224)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !216, line: 150, baseType: !1545)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1451, file: !1619, line: 1914, type: !1641, isLocal: true, isDefinition: true)
!1719 = !DIGlobalVariableExpression(var: !1720, expr: !DIExpression())
!1720 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1649, isLocal: true, isDefinition: true)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1672, isLocal: true, isDefinition: true)
!1723 = !DIGlobalVariableExpression(var: !1724, expr: !DIExpression())
!1724 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1451, file: !1619, line: 1914, type: !1675, isLocal: true, isDefinition: true)
!1725 = !DIGlobalVariableExpression(var: !1726, expr: !DIExpression())
!1726 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1727, file: !1619, line: 1914, type: !1681, isLocal: true, isDefinition: true, align: 32)
!1727 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1619, file: !1619, line: 1914, type: !1546, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !1728)
!1728 = !{!1729}
!1729 = !DILocalVariable(name: "dev", arg: 1, scope: !1727, file: !1619, line: 1914, type: !1495)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1451, file: !1619, line: 1914, type: !1691, isLocal: true, isDefinition: true)
!1732 = !DIGlobalVariableExpression(var: !1733, expr: !DIExpression())
!1733 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1734, file: !1814, line: 65, type: !120, isLocal: true, isDefinition: true)
!1734 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1735, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1736, retainedTypes: !1737, globals: !1811, splitDebugInlining: false, nameTableKind: None)
!1735 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1736 = !{!685}
!1737 = !{!1738, !1740, !345, !167, !121, !1748, !1779}
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1739, line: 46, baseType: !433)
!1739 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !508, line: 712, baseType: !1742)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 706, size: 128, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1742, file: !508, line: 708, baseType: !120, size: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1742, file: !508, line: 709, baseType: !120, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1742, file: !508, line: 710, baseType: !120, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1742, file: !508, line: 711, baseType: !512, size: 32, offset: 96)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 360, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 345, size: 28704, elements: !1751)
!1751 = !{!1752, !1754, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1769, !1774, !1778}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1750, file: !508, line: 347, baseType: !1753, size: 256)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1334)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1750, file: !508, line: 348, baseType: !1755, size: 768, offset: 256)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1756)
!1756 = !{!1757}
!1757 = !DISubrange(count: 24)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1750, file: !508, line: 349, baseType: !1753, size: 256, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1750, file: !508, line: 350, baseType: !1755, size: 768, offset: 1280)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1750, file: !508, line: 351, baseType: !1753, size: 256, offset: 2048)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1750, file: !508, line: 352, baseType: !1755, size: 768, offset: 2304)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1750, file: !508, line: 353, baseType: !1753, size: 256, offset: 3072)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1750, file: !508, line: 354, baseType: !1755, size: 768, offset: 3328)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1750, file: !508, line: 355, baseType: !1753, size: 256, offset: 4096)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1750, file: !508, line: 356, baseType: !1766, size: 1792, offset: 4352)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1767)
!1767 = !{!1768}
!1768 = !DISubrange(count: 56)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1750, file: !508, line: 357, baseType: !1770, size: 1920, offset: 6144)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 1920, elements: !1772)
!1771 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1772 = !{!1773}
!1773 = !DISubrange(count: 240)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1750, file: !508, line: 358, baseType: !1775, size: 20608, offset: 8064)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1776)
!1776 = !{!1777}
!1777 = !DISubrange(count: 644)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1750, file: !508, line: 359, baseType: !120, size: 32, offset: 28672)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !1781)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1786, !1787, !1788, !1789, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1802, !1803, !1804, !1806, !1808, !1810}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1781, file: !508, line: 381, baseType: !512, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1781, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1781, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1781, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1781, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1781, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1781, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!1790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 96, elements: !1791)
!1791 = !{!1792}
!1792 = !DISubrange(count: 12)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1781, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1781, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1781, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1781, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1781, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1781, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1781, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1781, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 64, elements: !398)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1781, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1781, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1781, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 128, elements: !756)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1781, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 160, elements: !1369)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1781, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1369)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1781, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!1811 = !{!1812, !1838, !1841, !1843, !1845, !1732}
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1734, file: !1814, line: 285, type: !1815, isLocal: true, isDefinition: true, align: 32)
!1814 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1817)
!1817 = !{!1818, !1837}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1816, file: !145, line: 60, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!103, !1822}
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1835, !1836}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1824, file: !154, line: 380, baseType: !157, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1824, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1824, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1824, file: !154, line: 386, baseType: !1830, size: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1832)
!1832 = !{!1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1831, file: !154, line: 359, baseType: !167, size: 8)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1831, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1824, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1824, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1816, file: !145, line: 65, baseType: !1822, size: 32, offset: 32)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "lock", scope: !1734, file: !1814, line: 34, type: !1840, isLocal: true, isDefinition: true)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!1841 = !DIGlobalVariableExpression(var: !1842, expr: !DIExpression())
!1842 = distinct !DIGlobalVariable(name: "last_load", scope: !1734, file: !1814, line: 36, type: !121, isLocal: true, isDefinition: true)
!1843 = !DIGlobalVariableExpression(var: !1844, expr: !DIExpression())
!1844 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1734, file: !1814, line: 48, type: !121, isLocal: true, isDefinition: true)
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1734, file: !1814, line: 54, type: !121, isLocal: true, isDefinition: true)
!1847 = !DIGlobalVariableExpression(var: !1848, expr: !DIExpression())
!1848 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1849, file: !1930, line: 22, type: !1932, isLocal: true, isDefinition: true)
!1849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !576, retainedTypes: !1851, globals: !1927, splitDebugInlining: false, nameTableKind: None)
!1850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1851 = !{!1852, !1916, !1921, !624, !583, !577, !1926, !102}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !578, line: 523, size: 288, elements: !1855)
!1855 = !{!1856, !1875, !1879, !1883, !1887, !1888, !1889, !1893, !1912}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1854, file: !578, line: 524, baseType: !1857, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!103, !1860, !612, !613}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1873, !1874}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1862, file: !154, line: 380, baseType: !157, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1862, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1862, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1862, file: !154, line: 386, baseType: !1868, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1869, file: !154, line: 359, baseType: !167, size: 8)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1869, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1862, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1862, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1854, file: !578, line: 530, baseType: !1876, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!103, !1860, !618}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1854, file: !578, line: 532, baseType: !1880, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!103, !1860, !624, !619}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1854, file: !578, line: 535, baseType: !1884, size: 32, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{!103, !1860, !624}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1854, file: !578, line: 537, baseType: !1884, size: 32, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1854, file: !578, line: 539, baseType: !1884, size: 32, offset: 160)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1854, file: !578, line: 541, baseType: !1890, size: 32, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 32)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!103, !1860, !612, !577, !583}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1854, file: !578, line: 544, baseType: !1894, size: 32, offset: 224)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!103, !1860, !1897, !170}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 32)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !578, line: 478, size: 96, elements: !1899)
!1899 = !{!1900, !1906, !1911}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1898, file: !578, line: 482, baseType: !1901, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !644, line: 33, baseType: !1902)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !644, line: 29, size: 32, elements: !1903)
!1903 = !{!1904}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1902, file: !644, line: 30, baseType: !1905, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1898, file: !578, line: 485, baseType: !1907, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !578, line: 464, baseType: !1908)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{null, !1860, !1897, !624}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1898, file: !578, line: 493, baseType: !624, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1854, file: !578, line: 547, baseType: !1913, size: 32, offset: 256)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!121, !1860}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !578, line: 428, size: 32, elements: !1919)
!1919 = !{!1920}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1918, file: !578, line: 434, baseType: !624, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1923)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !578, line: 441, size: 32, elements: !1924)
!1924 = !{!1925}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1923, file: !578, line: 447, baseType: !624, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1927 = !{!1928, !1847}
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1929 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1849, file: !1930, line: 37, type: !1931, isLocal: true, isDefinition: true)
!1930 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!1932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1933, size: 352, elements: !839)
!1933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1860)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1936, file: !1960, line: 129, type: !1967, isLocal: false, isDefinition: true)
!1936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1938, globals: !1957, splitDebugInlining: false, nameTableKind: None)
!1937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1941, file: !116, line: 372, baseType: !120, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1941, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1941, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1941, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1941, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1941, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1941, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1941, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1941, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1941, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1941, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1941, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1941, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1941, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!1957 = !{!1958, !1961, !1964, !1934}
!1958 = !DIGlobalVariableExpression(var: !1959, expr: !DIExpression())
!1959 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1936, file: !1960, line: 126, type: !121, isLocal: false, isDefinition: true)
!1960 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1936, file: !1960, line: 127, type: !1963, isLocal: false, isDefinition: true)
!1963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 72, elements: !1351)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1936, file: !1960, line: 128, type: !1966, isLocal: false, isDefinition: true)
!1966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 128, elements: !303)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 64, elements: !1334)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1970, file: !1973, line: 23, type: !275, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1972, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1972 = !{!1968}
!1973 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1976, file: !1980, line: 86, type: !2227, isLocal: false, isDefinition: true, align: 512)
!1976 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1977, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1978, retainedTypes: !1987, globals: !2060, splitDebugInlining: false, nameTableKind: None)
!1977 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!1978 = !{!1979, !30, !685}
!1979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1980, line: 63, baseType: !32, size: 32, elements: !1981)
!1980 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1981 = !{!1982, !1983, !1984, !1985, !1986}
!1982 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1983 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1984 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1985 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1986 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1987 = !{!357, !102, !103, !1988, !1128, !121, !2018, !345, !167, !2043}
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1990)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1991, line: 51, size: 64, elements: !1992)
!1991 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1992 = !{!1993, !2013}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1990, file: !1991, line: 52, baseType: !1994, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1991, line: 38, baseType: !1995)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!103, !1998, !274, !341}
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2011, !2012}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2000, file: !154, line: 380, baseType: !157, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2000, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2000, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2000, file: !154, line: 386, baseType: !2006, size: 32, offset: 96)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2007, file: !154, line: 359, baseType: !167, size: 8)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2007, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2000, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2000, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1990, file: !1991, line: 53, baseType: !2014, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1991, line: 47, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!103, !1998, !274, !341, !121}
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2020, file: !508, line: 381, baseType: !512, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2020, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2020, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2020, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2020, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2020, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2020, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2020, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2020, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2020, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2020, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2020, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2020, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2020, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2020, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2020, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2020, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2020, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2020, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2020, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2020, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 360, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 345, size: 28704, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2045, file: !508, line: 347, baseType: !1753, size: 256)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2045, file: !508, line: 348, baseType: !1755, size: 768, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2045, file: !508, line: 349, baseType: !1753, size: 256, offset: 1024)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2045, file: !508, line: 350, baseType: !1755, size: 768, offset: 1280)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2045, file: !508, line: 351, baseType: !1753, size: 256, offset: 2048)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2045, file: !508, line: 352, baseType: !1755, size: 768, offset: 2304)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2045, file: !508, line: 353, baseType: !1753, size: 256, offset: 3072)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2045, file: !508, line: 354, baseType: !1755, size: 768, offset: 3328)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2045, file: !508, line: 355, baseType: !1753, size: 256, offset: 4096)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2045, file: !508, line: 356, baseType: !1766, size: 1792, offset: 4352)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2045, file: !508, line: 357, baseType: !1770, size: 1920, offset: 6144)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2045, file: !508, line: 358, baseType: !1775, size: 20608, offset: 8064)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2045, file: !508, line: 359, baseType: !120, size: 32, offset: 28672)
!2060 = !{!2061, !2183, !2192, !2194, !1974, !2197, !2199, !2204}
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "_kernel", scope: !1976, file: !1980, line: 40, type: !2063, isLocal: false, isDefinition: true)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !317, line: 158, size: 288, elements: !2064)
!2064 = !{!2065, !2178}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2063, file: !317, line: 159, baseType: !2066, size: 192)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 192, elements: !497)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !317, line: 100, size: 192, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2172, !2173, !2174, !2175}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2067, file: !317, line: 102, baseType: !121, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2067, file: !317, line: 105, baseType: !1128, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2067, file: !317, line: 108, baseType: !2072, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !2074)
!2074 = !{!2075, !2133, !2145, !2146, !2147, !2148, !2154, !2167}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2073, file: !368, line: 247, baseType: !2076, size: 384)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !2077)
!2077 = !{!2078, !2102, !2109, !2110, !2111, !2120, !2121, !2122}
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !368, line: 60, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !368, line: 60, size: 64, elements: !2080)
!2080 = !{!2081, !2096}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2079, file: !368, line: 61, baseType: !2082, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !2084)
!2084 = !{!2085, !2091}
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !322, line: 38, baseType: !2086, size: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !322, line: 38, size: 32, elements: !2087)
!2087 = !{!2088, !2090}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2086, file: !322, line: 39, baseType: !2089, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2086, file: !322, line: 40, baseType: !2089, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2083, file: !322, line: 42, baseType: !2092, size: 32, offset: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !322, line: 42, size: 32, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2092, file: !322, line: 43, baseType: !2089, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2092, file: !322, line: 44, baseType: !2089, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2079, file: !368, line: 62, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2097, file: !393, line: 50, baseType: !2100, size: 64)
!2100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2101, size: 64, elements: !398)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2076, file: !368, line: 68, baseType: !2103, size: 32, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2105, file: !317, line: 232, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !2083)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2076, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2076, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!2111 = !DIDerivedType(tag: DW_TAG_member, scope: !2076, file: !368, line: 90, baseType: !2112, size: 16, offset: 112)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2076, file: !368, line: 90, size: 16, elements: !2113)
!2113 = !{!2114, !2119}
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !368, line: 91, baseType: !2115, size: 16)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2112, file: !368, line: 91, size: 16, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2115, file: !368, line: 96, baseType: !416, size: 8)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2115, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2112, file: !368, line: 100, baseType: !341, size: 16)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2076, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2076, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2076, file: !368, line: 131, baseType: !2123, size: 192, offset: 192)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !2124)
!2124 = !{!2125, !2126, !2132}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2123, file: !317, line: 245, baseType: !2082, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2123, file: !317, line: 246, baseType: !2127, size: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !2128)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 32)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !2131}
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2123, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2073, file: !368, line: 250, baseType: !2134, size: 288, offset: 384)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !2135)
!2135 = !{!2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2134, file: !437, line: 26, baseType: !121, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2134, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2134, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2134, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2134, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2134, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2134, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2134, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2134, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2073, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2073, file: !368, line: 256, baseType: !2104, size: 64, offset: 704)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2073, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2073, file: !368, line: 300, baseType: !2149, size: 96, offset: 800)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !2150)
!2150 = !{!2151, !2152, !2153}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2149, file: !368, line: 153, baseType: !22, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2149, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2149, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2073, file: !368, line: 325, baseType: !2155, size: 32, offset: 896)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !2157)
!2157 = !{!2158, !2164, !2165}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2156, file: !313, line: 5074, baseType: !2159, size: 96)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !2160)
!2160 = !{!2161, !2162, !2163}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2159, file: !463, line: 57, baseType: !466, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2159, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2159, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2156, file: !313, line: 5075, baseType: !2104, size: 64, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2156, file: !313, line: 5076, baseType: !2166, offset: 160)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2073, file: !368, line: 343, baseType: !2168, size: 64, offset: 928)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !2169)
!2169 = !{!2170, !2171}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2168, file: !437, line: 63, baseType: !121, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2168, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2067, file: !317, line: 111, baseType: !2072, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2067, file: !317, line: 124, baseType: !103, size: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2067, file: !317, line: 127, baseType: !167, size: 8, offset: 160)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2067, file: !317, line: 153, baseType: !2176, offset: 168)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2177, line: 33, elements: !474)
!2177 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2063, file: !317, line: 170, baseType: !2179, size: 96, offset: 192)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !317, line: 83, size: 96, elements: !2180)
!2180 = !{!2181, !2182}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2179, file: !317, line: 86, baseType: !2072, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2179, file: !317, line: 90, baseType: !2108, size: 64, offset: 32)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1976, file: !1980, line: 43, type: !2185, isLocal: false, isDefinition: true, align: 512)
!2185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 8704, elements: !2190)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2187, line: 47, size: 8, elements: !2188)
!2187 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2188 = !{!2189}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2186, file: !2187, line: 48, baseType: !159, size: 8)
!2190 = !{!2191}
!2191 = !DISubrange(count: 1088)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1976, file: !1980, line: 44, type: !2073, isLocal: false, isDefinition: true)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1976, file: !1980, line: 48, type: !2196, isLocal: false, isDefinition: true)
!2196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2073, size: 1024, elements: !497)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1976, file: !1980, line: 217, type: !170, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1976, file: !1980, line: 50, type: !2201, isLocal: true, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 2560, elements: !2202)
!2202 = !{!498, !2203}
!2203 = !DISubrange(count: 320)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "levels", scope: !2206, file: !1980, line: 232, type: !2226, isLocal: true, isDefinition: true)
!2206 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1980, file: !1980, line: 230, type: !2207, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1979}
!2209 = !{!2210, !2211, !2221, !2225}
!2210 = !DILocalVariable(name: "level", arg: 1, scope: !2206, file: !1980, line: 230, type: !1979)
!2211 = !DILocalVariable(name: "entry", scope: !2206, file: !1980, line: 244, type: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !2215)
!2215 = !{!2216, !2220}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2214, file: !145, line: 60, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!103, !1998}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2214, file: !145, line: 65, baseType: !1998, size: 32, offset: 32)
!2221 = !DILocalVariable(name: "dev", scope: !2222, file: !1980, line: 247, type: !1998)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1980, line: 246, column: 64)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1980, line: 246, column: 2)
!2224 = distinct !DILexicalBlock(scope: !2206, file: !1980, line: 246, column: 2)
!2225 = !DILocalVariable(name: "rc", scope: !2222, file: !1980, line: 248, type: !103)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 192, elements: !1360)
!2227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2186, size: 16896, elements: !2228)
!2228 = !{!498, !2229}
!2229 = !DISubrange(count: 2112)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "states_str", scope: !2232, file: !2233, line: 276, type: !2356, isLocal: true, isDefinition: true)
!2232 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2233, file: !2233, line: 271, type: !2234, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !2347)
!2233 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!157, !2236, !1128, !357}
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !368, line: 347, baseType: !2237)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !2239)
!2239 = !{!2240, !2298, !2310, !2311, !2312, !2313, !2319, !2332}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2238, file: !368, line: 247, baseType: !2241, size: 384)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !2242)
!2242 = !{!2243, !2267, !2274, !2275, !2276, !2285, !2286, !2287}
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !368, line: 60, baseType: !2244, size: 64)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !368, line: 60, size: 64, elements: !2245)
!2245 = !{!2246, !2261}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2244, file: !368, line: 61, baseType: !2247, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !2249)
!2249 = !{!2250, !2256}
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !322, line: 38, baseType: !2251, size: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !322, line: 38, size: 32, elements: !2252)
!2252 = !{!2253, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2251, file: !322, line: 39, baseType: !2254, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2251, file: !322, line: 40, baseType: !2254, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !322, line: 42, baseType: !2257, size: 32, offset: 32)
!2257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !322, line: 42, size: 32, elements: !2258)
!2258 = !{!2259, !2260}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2257, file: !322, line: 43, baseType: !2254, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2257, file: !322, line: 44, baseType: !2254, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2244, file: !368, line: 62, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !2263)
!2263 = !{!2264}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2262, file: !393, line: 50, baseType: !2265, size: 64)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2266, size: 64, elements: !398)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2241, file: !368, line: 68, baseType: !2268, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !2270)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !2271)
!2271 = !{!2272}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2270, file: !317, line: 232, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !2248)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2241, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2241, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!2276 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !368, line: 90, baseType: !2277, size: 16, offset: 112)
!2277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !368, line: 90, size: 16, elements: !2278)
!2278 = !{!2279, !2284}
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !368, line: 91, baseType: !2280, size: 16)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2277, file: !368, line: 91, size: 16, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2280, file: !368, line: 96, baseType: !416, size: 8)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2280, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2277, file: !368, line: 100, baseType: !341, size: 16)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2241, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2241, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2241, file: !368, line: 131, baseType: !2288, size: 192, offset: 192)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !2289)
!2289 = !{!2290, !2291, !2297}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2288, file: !317, line: 245, baseType: !2247, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2288, file: !317, line: 246, baseType: !2292, size: 32, offset: 64)
!2292 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !2293)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !2296}
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2288, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2238, file: !368, line: 250, baseType: !2299, size: 288, offset: 384)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2299, file: !437, line: 26, baseType: !121, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2299, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2299, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2299, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2299, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2299, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2299, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2299, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2299, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2238, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2238, file: !368, line: 256, baseType: !2269, size: 64, offset: 704)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2238, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2238, file: !368, line: 300, baseType: !2314, size: 96, offset: 800)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2314, file: !368, line: 153, baseType: !22, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2314, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2314, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2238, file: !368, line: 325, baseType: !2320, size: 32, offset: 896)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !2322)
!2322 = !{!2323, !2329, !2330}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2321, file: !313, line: 5074, baseType: !2324, size: 96)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !2325)
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2324, file: !463, line: 57, baseType: !466, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2324, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2324, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2321, file: !313, line: 5075, baseType: !2269, size: 64, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2321, file: !313, line: 5076, baseType: !2331, offset: 160)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2238, file: !368, line: 343, baseType: !2333, size: 64, offset: 928)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !2334)
!2334 = !{!2335, !2336}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2333, file: !437, line: 63, baseType: !121, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2333, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!2337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2339, globals: !2343, splitDebugInlining: false, nameTableKind: None)
!2338 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2339 = !{!102, !157, !1738, !167, !103, !2340, !24, !357, !1128, !22, !121, !2341}
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2342)
!2342 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2343 = !{!2230, !2344}
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "states_sz", scope: !2232, file: !2233, line: 279, type: !2346, isLocal: true, isDefinition: true)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 256, elements: !1334)
!2347 = !{!2348, !2349, !2350, !2351, !2352, !2353, !2354}
!2348 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2232, file: !2233, line: 271, type: !2236)
!2349 = !DILocalVariable(name: "buf", arg: 2, scope: !2232, file: !2233, line: 271, type: !1128)
!2350 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2232, file: !2233, line: 271, type: !357)
!2351 = !DILocalVariable(name: "off", scope: !2232, file: !2233, line: 273, type: !357)
!2352 = !DILocalVariable(name: "bit", scope: !2232, file: !2233, line: 274, type: !167)
!2353 = !DILocalVariable(name: "thread_state", scope: !2232, file: !2233, line: 275, type: !167)
!2354 = !DILocalVariable(name: "index", scope: !2355, file: !2233, line: 293, type: !167)
!2355 = distinct !DILexicalBlock(scope: !2232, file: !2233, line: 293, column: 2)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 256, elements: !1334)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "lock", scope: !2359, file: !2378, line: 39, type: !2379, isLocal: true, isDefinition: true)
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2361, globals: !2377, splitDebugInlining: false, nameTableKind: None)
!2360 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2361 = !{!102, !170, !103, !2362}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !2365)
!2365 = !{!2366, !2372}
!2366 = !DIDerivedType(tag: DW_TAG_member, scope: !2364, file: !322, line: 38, baseType: !2367, size: 32)
!2367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2364, file: !322, line: 38, size: 32, elements: !2368)
!2368 = !{!2369, !2371}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2367, file: !322, line: 39, baseType: !2370, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2367, file: !322, line: 40, baseType: !2370, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, scope: !2364, file: !322, line: 42, baseType: !2373, size: 32, offset: 32)
!2373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2364, file: !322, line: 42, size: 32, elements: !2374)
!2374 = !{!2375, !2376}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2373, file: !322, line: 43, baseType: !2370, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2373, file: !322, line: 44, baseType: !2370, size: 32)
!2377 = !{!2357}
!2378 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2382, file: !2490, line: 56, type: !2479, isLocal: false, isDefinition: true)
!2382 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2383, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2384, globals: !2487, splitDebugInlining: false, nameTableKind: None)
!2383 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2384 = !{!2385, !1128, !102, !2485, !274, !1738, !345, !103, !121, !2341, !2486}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !2387)
!2387 = !{!2388, !2446, !2458, !2459, !2460, !2461, !2467, !2480}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2386, file: !368, line: 247, baseType: !2389, size: 384)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !2390)
!2390 = !{!2391, !2415, !2422, !2423, !2424, !2433, !2434, !2435}
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !368, line: 60, baseType: !2392, size: 64)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !368, line: 60, size: 64, elements: !2393)
!2393 = !{!2394, !2409}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2392, file: !368, line: 61, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !2397)
!2397 = !{!2398, !2404}
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !322, line: 38, baseType: !2399, size: 32)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2396, file: !322, line: 38, size: 32, elements: !2400)
!2400 = !{!2401, !2403}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2399, file: !322, line: 39, baseType: !2402, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2399, file: !322, line: 40, baseType: !2402, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !322, line: 42, baseType: !2405, size: 32, offset: 32)
!2405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2396, file: !322, line: 42, size: 32, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2405, file: !322, line: 43, baseType: !2402, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2405, file: !322, line: 44, baseType: !2402, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2392, file: !368, line: 62, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !2411)
!2411 = !{!2412}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2410, file: !393, line: 50, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2414, size: 64, elements: !398)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2389, file: !368, line: 68, baseType: !2416, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !2419)
!2419 = !{!2420}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2418, file: !317, line: 232, baseType: !2421, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !2396)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2389, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2389, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!2424 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !368, line: 90, baseType: !2425, size: 16, offset: 112)
!2425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !368, line: 90, size: 16, elements: !2426)
!2426 = !{!2427, !2432}
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !368, line: 91, baseType: !2428, size: 16)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2425, file: !368, line: 91, size: 16, elements: !2429)
!2429 = !{!2430, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2428, file: !368, line: 96, baseType: !416, size: 8)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2428, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2425, file: !368, line: 100, baseType: !341, size: 16)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2389, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2389, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2389, file: !368, line: 131, baseType: !2436, size: 192, offset: 192)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !2437)
!2437 = !{!2438, !2439, !2445}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2436, file: !317, line: 245, baseType: !2395, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2436, file: !317, line: 246, baseType: !2440, size: 32, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !2441)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2436, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2386, file: !368, line: 250, baseType: !2447, size: 288, offset: 384)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !2448)
!2448 = !{!2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2447, file: !437, line: 26, baseType: !121, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2447, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2447, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2447, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2447, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2447, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2447, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2447, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2447, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2386, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2386, file: !368, line: 256, baseType: !2417, size: 64, offset: 704)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2386, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2386, file: !368, line: 300, baseType: !2462, size: 96, offset: 800)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !2463)
!2463 = !{!2464, !2465, !2466}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2462, file: !368, line: 153, baseType: !22, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2462, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2462, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2386, file: !368, line: 325, baseType: !2468, size: 32, offset: 896)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 32)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !2470)
!2470 = !{!2471, !2477, !2478}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2469, file: !313, line: 5074, baseType: !2472, size: 96)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !2473)
!2473 = !{!2474, !2475, !2476}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2472, file: !463, line: 57, baseType: !466, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2472, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2472, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2469, file: !313, line: 5075, baseType: !2417, size: 64, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2469, file: !313, line: 5076, baseType: !2479, offset: 160)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2386, file: !368, line: 343, baseType: !2481, size: 64, offset: 928)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2481, file: !437, line: 63, baseType: !121, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2481, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2487 = !{!2380, !2488, !2491, !2493}
!2488 = !DIGlobalVariableExpression(var: !2489, expr: !DIExpression())
!2489 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2382, file: !2490, line: 404, type: !103, isLocal: true, isDefinition: true)
!2490 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2491 = !DIGlobalVariableExpression(var: !2492, expr: !DIExpression())
!2492 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2382, file: !2490, line: 405, type: !103, isLocal: true, isDefinition: true)
!2493 = !DIGlobalVariableExpression(var: !2494, expr: !DIExpression())
!2494 = distinct !DIGlobalVariable(name: "pending_current", scope: !2382, file: !2490, line: 425, type: !2385, isLocal: true, isDefinition: true)
!2495 = !DIGlobalVariableExpression(var: !2496, expr: !DIExpression())
!2496 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2497, file: !2527, line: 15, type: !2341, isLocal: true, isDefinition: true)
!2497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2498, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2499, globals: !2524, splitDebugInlining: false, nameTableKind: None)
!2498 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2499 = !{!1738, !102, !345, !121, !2341, !103, !2500, !1128, !433}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 32)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !2502)
!2502 = !{!2503, !2518, !2523}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2501, file: !317, line: 245, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !2505)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !2506)
!2506 = !{!2507, !2513}
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !322, line: 38, baseType: !2508, size: 32)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !322, line: 38, size: 32, elements: !2509)
!2509 = !{!2510, !2512}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2508, file: !322, line: 39, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2508, file: !322, line: 40, baseType: !2511, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !322, line: 42, baseType: !2514, size: 32, offset: 32)
!2514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !322, line: 42, size: 32, elements: !2515)
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2514, file: !322, line: 43, baseType: !2511, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2514, file: !322, line: 44, baseType: !2511, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2501, file: !317, line: 246, baseType: !2519, size: 32, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !2520)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{null, !2500}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2501, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!2524 = !{!2495, !2525, !2529, !2531}
!2525 = !DIGlobalVariableExpression(var: !2526, expr: !DIExpression())
!2526 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2497, file: !2527, line: 19, type: !2528, isLocal: true, isDefinition: true)
!2527 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2497, file: !2527, line: 25, type: !103, isLocal: true, isDefinition: true)
!2531 = !DIGlobalVariableExpression(var: !2532, expr: !DIExpression())
!2532 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2497, file: !2527, line: 17, type: !2533, isLocal: true, isDefinition: true)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !2505)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2536, file: !2555, line: 55, type: !2556, isLocal: true, isDefinition: true, align: 32)
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2538, globals: !2554, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2538 = !{!102, !1738, !103, !2539}
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !2542)
!2542 = !{!2543, !2549}
!2543 = !DIDerivedType(tag: DW_TAG_member, scope: !2541, file: !322, line: 38, baseType: !2544, size: 32)
!2544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2541, file: !322, line: 38, size: 32, elements: !2545)
!2545 = !{!2546, !2548}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2544, file: !322, line: 39, baseType: !2547, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2544, file: !322, line: 40, baseType: !2547, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, scope: !2541, file: !322, line: 42, baseType: !2550, size: 32, offset: 32)
!2550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2541, file: !322, line: 42, size: 32, elements: !2551)
!2551 = !{!2552, !2553}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2550, file: !322, line: 43, baseType: !2547, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2550, file: !322, line: 44, baseType: !2547, size: 32)
!2554 = !{!2534}
!2555 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !2558)
!2558 = !{!2559, !2566}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2557, file: !145, line: 60, baseType: !2560, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!103, !2563}
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2565 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !145, line: 48, flags: DIFlagFwdDecl)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2557, file: !145, line: 65, baseType: !2563, size: 32, offset: 32)
!2567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2573 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2574, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2575, retainedTypes: !2583, splitDebugInlining: false, nameTableKind: None)
!2574 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2575 = !{!30, !2576}
!2576 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2577, line: 54, baseType: !32, size: 32, elements: !2578)
!2577 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2578 = !{!2579, !2580, !2581, !2582}
!2579 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2580 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2581 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2582 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2583 = !{!102, !357, !274, !24, !2584, !22, !2590, !103, !902, !2605}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2577, line: 58, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2577, line: 58, size: 64, elements: !2587)
!2587 = !{!2588}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2586, file: !2577, line: 58, baseType: !2589, size: 64)
!2589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 64, elements: !1334)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2577, line: 68, size: 128, elements: !2592)
!2592 = !{!2593, !2596, !2597, !2598}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2591, file: !2577, line: 69, baseType: !2594, size: 64)
!2594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2595, size: 64, elements: !398)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2577, line: 61, baseType: !121)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2591, file: !2577, line: 70, baseType: !2595, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2591, file: !2577, line: 71, baseType: !121, size: 32, offset: 96)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2591, file: !2577, line: 77, baseType: !2599, offset: 128)
!2599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2600, elements: !2603)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2577, line: 64, size: 32, elements: !2601)
!2601 = !{!2602}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2600, file: !2577, line: 65, baseType: !2595, size: 32)
!2603 = !{!2604}
!2604 = !DISubrange(count: 0)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!2606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2607, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2608, retainedTypes: !2628, splitDebugInlining: false, nameTableKind: None)
!2607 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2608 = !{!2609, !2617}
!2609 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2610, line: 69, baseType: !32, size: 32, elements: !2611)
!2610 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2611 = !{!2612, !2613, !2614, !2615, !2616}
!2612 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2613 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2614 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2615 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2616 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2610, line: 56, baseType: !32, size: 32, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2619 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2620 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2621 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2622 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2623 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2624 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2625 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2626 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2627 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2628 = !{!103, !2609, !2617, !2629, !417, !177, !2631, !2632, !168, !342, !157, !357, !102, !22, !32, !2634, !2635, !2636, !1158, !2637, !434, !2638, !2630, !2639, !2640, !2641, !2642}
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2610, line: 31, baseType: !2630)
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !434)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !358, line: 329, baseType: !32)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2610, line: 32, baseType: !2633)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2342)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !358, line: 145, baseType: !103)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 32)
!2643 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2644, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2644 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2645 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2646, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2647, splitDebugInlining: false, nameTableKind: None)
!2646 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2647 = !{!167, !102, !103, !2648, !1738, !121, !2341}
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2650)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !216, line: 336, size: 608, elements: !2651)
!2651 = !{!2652, !2671, !2675, !2679, !2692, !2697, !2701, !2705, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !2650, file: !216, line: 365, baseType: !2653, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!103, !2656, !237}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 32)
!2657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2658)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !2659)
!2659 = !{!2660, !2661, !2662, !2663, !2669, !2670}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2658, file: !154, line: 380, baseType: !157, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2658, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2658, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2658, file: !154, line: 386, baseType: !2664, size: 32, offset: 96)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2665, file: !154, line: 359, baseType: !167, size: 8)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2665, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2658, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2658, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !2650, file: !216, line: 366, baseType: !2672, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{null, !2656, !168}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !2650, file: !216, line: 374, baseType: !2676, size: 32, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!103, !2656}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !2650, file: !216, line: 377, baseType: !2680, size: 32, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!103, !2656, !2683}
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !216, line: 122, size: 64, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2691}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !2685, file: !216, line: 123, baseType: !121, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2685, file: !216, line: 124, baseType: !167, size: 8, offset: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !2685, file: !216, line: 125, baseType: !167, size: 8, offset: 40)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !2685, file: !216, line: 126, baseType: !167, size: 8, offset: 48)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !2685, file: !216, line: 127, baseType: !167, size: 8, offset: 56)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !2650, file: !216, line: 379, baseType: !2693, size: 32, offset: 128)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!103, !2656, !2696}
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !2650, file: !216, line: 384, baseType: !2698, size: 32, offset: 160)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 32)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!103, !2656, !268, !103}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !2650, file: !216, line: 393, baseType: !2702, size: 32, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!103, !2656, !274, !275}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !2650, file: !216, line: 402, baseType: !2706, size: 32, offset: 224)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 32)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{null, !2656}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !2650, file: !216, line: 405, baseType: !2706, size: 32, offset: 256)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !2650, file: !216, line: 408, baseType: !2676, size: 32, offset: 288)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !2650, file: !216, line: 411, baseType: !2706, size: 32, offset: 320)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !2650, file: !216, line: 414, baseType: !2706, size: 32, offset: 352)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !2650, file: !216, line: 417, baseType: !2676, size: 32, offset: 384)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !2650, file: !216, line: 420, baseType: !2676, size: 32, offset: 416)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !2650, file: !216, line: 423, baseType: !2706, size: 32, offset: 448)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !2650, file: !216, line: 426, baseType: !2706, size: 32, offset: 480)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !2650, file: !216, line: 429, baseType: !2676, size: 32, offset: 512)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !2650, file: !216, line: 432, baseType: !2676, size: 32, offset: 544)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !2650, file: !216, line: 435, baseType: !2720, size: 32, offset: 576)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 32)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{null, !2656, !2723, !102}
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !216, line: 142, baseType: !2724)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{null, !2656, !102}
!2727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2728, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2729, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2728 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2729 = !{!2730, !30}
!2730 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2731, line: 27, baseType: !32, size: 32, elements: !2732)
!2731 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2732 = !{!2733, !2734, !2735, !2736, !2737}
!2733 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2734 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2735 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2736 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2737 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2740, retainedTypes: !2741, splitDebugInlining: false, nameTableKind: None)
!2739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2740 = !{!685, !2730, !30}
!2741 = !{!829, !2742, !102, !103, !345, !121, !167, !2759}
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 360, baseType: !2744)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 345, size: 28704, elements: !2745)
!2745 = !{!2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2744, file: !508, line: 347, baseType: !1753, size: 256)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2744, file: !508, line: 348, baseType: !1755, size: 768, offset: 256)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2744, file: !508, line: 349, baseType: !1753, size: 256, offset: 1024)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2744, file: !508, line: 350, baseType: !1755, size: 768, offset: 1280)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2744, file: !508, line: 351, baseType: !1753, size: 256, offset: 2048)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2744, file: !508, line: 352, baseType: !1755, size: 768, offset: 2304)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2744, file: !508, line: 353, baseType: !1753, size: 256, offset: 3072)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2744, file: !508, line: 354, baseType: !1755, size: 768, offset: 3328)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2744, file: !508, line: 355, baseType: !1753, size: 256, offset: 4096)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2744, file: !508, line: 356, baseType: !1766, size: 1792, offset: 4352)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2744, file: !508, line: 357, baseType: !1770, size: 1920, offset: 6144)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2744, file: !508, line: 358, baseType: !1775, size: 20608, offset: 8064)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2744, file: !508, line: 359, baseType: !120, size: 32, offset: 28672)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !2761)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !2762)
!2762 = !{!2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2761, file: !508, line: 381, baseType: !512, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2761, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2761, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2761, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2761, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2761, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2761, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2761, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2761, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2761, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2761, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2761, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2761, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2761, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2761, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2761, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2761, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2761, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2761, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2761, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2761, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!2784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2785 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2788, splitDebugInlining: false, nameTableKind: None)
!2787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2788 = !{!102, !103, !22, !2789}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !2791)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !2792)
!2792 = !{!2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2791, file: !508, line: 381, baseType: !512, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2791, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2791, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2791, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2791, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2791, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2791, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2791, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2791, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2791, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2791, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2791, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2791, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2791, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2791, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2791, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2791, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2791, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2791, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2791, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2791, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!2814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2816, splitDebugInlining: false, nameTableKind: None)
!2815 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2816 = !{!2817, !102, !103}
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !2819)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !2820)
!2820 = !{!2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2819, file: !508, line: 381, baseType: !512, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2819, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2819, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2819, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2819, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2819, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2819, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2819, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2819, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2819, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2819, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2819, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2819, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2819, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2819, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2819, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2819, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2819, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2819, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2819, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2819, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!2842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2843, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2844, splitDebugInlining: false, nameTableKind: None)
!2843 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2844 = !{!2845, !121, !102, !103}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 32)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2847, line: 98, size: 256, elements: !2848)
!2847 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2848 = !{!2849, !2854, !2859, !2864, !2869, !2874, !2879, !2884}
!2849 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 99, baseType: !2850, size: 32)
!2850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 99, size: 32, elements: !2851)
!2851 = !{!2852, !2853}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2850, file: !2847, line: 99, baseType: !121, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2850, file: !2847, line: 99, baseType: !121, size: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 100, baseType: !2855, size: 32, offset: 32)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 100, size: 32, elements: !2856)
!2856 = !{!2857, !2858}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2855, file: !2847, line: 100, baseType: !121, size: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2855, file: !2847, line: 100, baseType: !121, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 101, baseType: !2860, size: 32, offset: 64)
!2860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 101, size: 32, elements: !2861)
!2861 = !{!2862, !2863}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2860, file: !2847, line: 101, baseType: !121, size: 32)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2860, file: !2847, line: 101, baseType: !121, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 102, baseType: !2865, size: 32, offset: 96)
!2865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 102, size: 32, elements: !2866)
!2866 = !{!2867, !2868}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2865, file: !2847, line: 102, baseType: !121, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2865, file: !2847, line: 102, baseType: !121, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 103, baseType: !2870, size: 32, offset: 128)
!2870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 103, size: 32, elements: !2871)
!2871 = !{!2872, !2873}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2870, file: !2847, line: 103, baseType: !121, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2870, file: !2847, line: 103, baseType: !121, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 104, baseType: !2875, size: 32, offset: 160)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 104, size: 32, elements: !2876)
!2876 = !{!2877, !2878}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2875, file: !2847, line: 104, baseType: !121, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2875, file: !2847, line: 104, baseType: !121, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !2846, file: !2847, line: 105, baseType: !2880, size: 32, offset: 192)
!2880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2846, file: !2847, line: 105, size: 32, elements: !2881)
!2881 = !{!2882, !2883}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2880, file: !2847, line: 105, baseType: !121, size: 32)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2880, file: !2847, line: 105, baseType: !121, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2846, file: !2847, line: 106, baseType: !121, size: 32, offset: 224)
!2885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2729, retainedTypes: !2887, splitDebugInlining: false, nameTableKind: None)
!2886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2887 = !{!2888, !102, !103, !2913, !2605, !121}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !2890)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !2891)
!2891 = !{!2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2890, file: !508, line: 381, baseType: !512, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2890, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2890, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2890, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2890, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2890, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2890, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2890, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2890, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2890, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2890, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2890, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2890, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2890, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2890, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2890, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2890, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2890, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2890, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2890, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2890, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2847, line: 141, baseType: !2915)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2847, line: 97, size: 256, elements: !2916)
!2916 = !{!2917}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2915, file: !2847, line: 107, baseType: !2918, size: 256)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2847, line: 98, size: 256, elements: !2919)
!2919 = !{!2920, !2925, !2930, !2935, !2940, !2945, !2950, !2955}
!2920 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 99, baseType: !2921, size: 32)
!2921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 99, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2921, file: !2847, line: 99, baseType: !121, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2921, file: !2847, line: 99, baseType: !121, size: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 100, baseType: !2926, size: 32, offset: 32)
!2926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 100, size: 32, elements: !2927)
!2927 = !{!2928, !2929}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2926, file: !2847, line: 100, baseType: !121, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2926, file: !2847, line: 100, baseType: !121, size: 32)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 101, baseType: !2931, size: 32, offset: 64)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 101, size: 32, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2931, file: !2847, line: 101, baseType: !121, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2931, file: !2847, line: 101, baseType: !121, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 102, baseType: !2936, size: 32, offset: 96)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 102, size: 32, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2936, file: !2847, line: 102, baseType: !121, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2936, file: !2847, line: 102, baseType: !121, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 103, baseType: !2941, size: 32, offset: 128)
!2941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 103, size: 32, elements: !2942)
!2942 = !{!2943, !2944}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2941, file: !2847, line: 103, baseType: !121, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2941, file: !2847, line: 103, baseType: !121, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 104, baseType: !2946, size: 32, offset: 160)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 104, size: 32, elements: !2947)
!2947 = !{!2948, !2949}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2946, file: !2847, line: 104, baseType: !121, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2946, file: !2847, line: 104, baseType: !121, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, scope: !2918, file: !2847, line: 105, baseType: !2951, size: 32, offset: 192)
!2951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2918, file: !2847, line: 105, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2951, file: !2847, line: 105, baseType: !121, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2951, file: !2847, line: 105, baseType: !121, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2918, file: !2847, line: 106, baseType: !121, size: 32, offset: 224)
!2956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1736, retainedTypes: !2958, splitDebugInlining: false, nameTableKind: None)
!2957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!2958 = !{!829, !345, !167, !121, !2959, !2976}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !508, line: 360, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 345, size: 28704, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2961, file: !508, line: 347, baseType: !1753, size: 256)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2961, file: !508, line: 348, baseType: !1755, size: 768, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2961, file: !508, line: 349, baseType: !1753, size: 256, offset: 1024)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2961, file: !508, line: 350, baseType: !1755, size: 768, offset: 1280)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2961, file: !508, line: 351, baseType: !1753, size: 256, offset: 2048)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2961, file: !508, line: 352, baseType: !1755, size: 768, offset: 2304)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2961, file: !508, line: 353, baseType: !1753, size: 256, offset: 3072)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2961, file: !508, line: 354, baseType: !1755, size: 768, offset: 3328)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2961, file: !508, line: 355, baseType: !1753, size: 256, offset: 4096)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2961, file: !508, line: 356, baseType: !1766, size: 1792, offset: 4352)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2961, file: !508, line: 357, baseType: !1770, size: 1920, offset: 6144)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2961, file: !508, line: 358, baseType: !1775, size: 20608, offset: 8064)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2961, file: !508, line: 359, baseType: !120, size: 32, offset: 28672)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !2978)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !2979)
!2979 = !{!2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2978, file: !508, line: 381, baseType: !512, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2978, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2978, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2978, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2978, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2978, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2978, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2978, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2978, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2978, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2978, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2978, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2978, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2978, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2978, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2978, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2978, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2978, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2978, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2978, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2978, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!3001 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3002, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3003, splitDebugInlining: false, nameTableKind: None)
!3002 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3003 = !{!3004, !102, !103}
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !508, line: 402, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 379, size: 1120, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3006, file: !508, line: 381, baseType: !512, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3006, file: !508, line: 382, baseType: !120, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3006, file: !508, line: 383, baseType: !120, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3006, file: !508, line: 384, baseType: !120, size: 32, offset: 96)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3006, file: !508, line: 385, baseType: !120, size: 32, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3006, file: !508, line: 386, baseType: !120, size: 32, offset: 160)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3006, file: !508, line: 387, baseType: !1790, size: 96, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3006, file: !508, line: 388, baseType: !120, size: 32, offset: 288)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3006, file: !508, line: 389, baseType: !120, size: 32, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3006, file: !508, line: 390, baseType: !120, size: 32, offset: 352)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3006, file: !508, line: 391, baseType: !120, size: 32, offset: 384)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3006, file: !508, line: 392, baseType: !120, size: 32, offset: 416)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3006, file: !508, line: 393, baseType: !120, size: 32, offset: 448)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3006, file: !508, line: 394, baseType: !120, size: 32, offset: 480)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3006, file: !508, line: 395, baseType: !1801, size: 64, offset: 512)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3006, file: !508, line: 396, baseType: !512, size: 32, offset: 576)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3006, file: !508, line: 397, baseType: !512, size: 32, offset: 608)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3006, file: !508, line: 398, baseType: !1805, size: 128, offset: 640)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3006, file: !508, line: 399, baseType: !1807, size: 160, offset: 768)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3006, file: !508, line: 400, baseType: !1809, size: 160, offset: 928)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3006, file: !508, line: 401, baseType: !120, size: 32, offset: 1088)
!3029 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3030, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3031, splitDebugInlining: false, nameTableKind: None)
!3030 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3031 = !{!159, !1128, !357, !237, !3032, !168, !102}
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!3034 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3035, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3036, splitDebugInlining: false, nameTableKind: None)
!3035 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3036 = !{!3037}
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !3039)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !3040)
!3040 = !{!3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3039, file: !116, line: 372, baseType: !120, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3039, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3039, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3039, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3039, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3039, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3039, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3039, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3039, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3039, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3039, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3039, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3039, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3039, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!3055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3056, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3056 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3059, retainedTypes: !3075, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3059 = !{!3060, !3067, !3071}
!3060 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3061, line: 39, baseType: !32, size: 32, elements: !3062)
!3061 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DIEnumerator(name: "HAL_OK", value: 0)
!3064 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3065 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3066 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3067 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !866, line: 183, baseType: !32, size: 32, elements: !3068)
!3068 = !{!3069, !3070}
!3069 = !DIEnumerator(name: "DISABLE", value: 0)
!3070 = !DIEnumerator(name: "ENABLE", value: 1)
!3071 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !866, line: 177, baseType: !32, size: 32, elements: !3072)
!3072 = !{!3073, !3074}
!3073 = !DIEnumerator(name: "RESET", value: 0)
!3074 = !DIEnumerator(name: "SET", value: 1)
!3075 = !{!3076, !102, !121, !167, !3094, !3095, !3101, !341, !3114, !2341, !3127}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !3079)
!3079 = !{!3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3078, file: !116, line: 372, baseType: !120, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3078, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3078, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3078, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3078, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3078, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3078, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3078, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3078, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3078, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3078, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3078, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3078, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3078, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !3097)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !3098)
!3098 = !{!3099, !3100}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3097, file: !116, line: 362, baseType: !120, size: 32)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3097, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !3103)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !3104)
!3104 = !{!3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3103, file: !116, line: 277, baseType: !120, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3103, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3103, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3103, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3103, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3103, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3103, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3103, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3103, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !3116)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !3117)
!3117 = !{!3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3116, file: !116, line: 305, baseType: !120, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3116, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3116, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3116, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3116, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3116, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3116, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3116, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3116, file: !116, line: 313, baseType: !1280, size: 64, offset: 256)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!3128 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3129, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3130, retainedTypes: !3131, splitDebugInlining: false, nameTableKind: None)
!3129 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3130 = !{!865}
!3131 = !{!3132, !121, !3140, !3146, !3159}
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !508, line: 712, baseType: !3134)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !508, line: 706, size: 128, elements: !3135)
!3135 = !{!3136, !3137, !3138, !3139}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3134, file: !508, line: 708, baseType: !120, size: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3134, file: !508, line: 709, baseType: !120, size: 32, offset: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3134, file: !508, line: 710, baseType: !120, size: 32, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3134, file: !508, line: 711, baseType: !512, size: 32, offset: 96)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3142, file: !116, line: 362, baseType: !120, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3142, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !3148)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !3149)
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3148, file: !116, line: 277, baseType: !120, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3148, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3148, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3148, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3148, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3148, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3148, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3148, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3148, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !3161)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !3162)
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3161, file: !116, line: 372, baseType: !120, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3161, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3161, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3161, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3161, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3161, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3161, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3161, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3161, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3161, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3161, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3161, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3161, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3161, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!3177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3179, splitDebugInlining: false, nameTableKind: None)
!3178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3179 = !{!102, !357}
!3180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3182, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3181 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3182 = !{!3183, !3190, !30}
!3183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3184, line: 14, baseType: !32, size: 32, elements: !3185)
!3184 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3185 = !{!3186, !3187, !3188, !3189}
!3186 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3187 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3188 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3189 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3184, line: 42, baseType: !32, size: 32, elements: !3191)
!3191 = !{!3192, !3193, !3194, !3195, !3196, !3197}
!3192 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3193 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3194 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3195 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3196 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3197 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3199, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3201, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3202, splitDebugInlining: false, nameTableKind: None)
!3201 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3202 = !{!22, !102, !103}
!3203 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3204, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!3204 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3205 = !{!"Ubuntu clang version 14.0.6"}
!3206 = !{i32 7, !"Dwarf Version", i32 4}
!3207 = !{i32 2, !"Debug Info Version", i32 3}
!3208 = !{i32 1, !"wchar_size", i32 4}
!3209 = !{i32 1, !"min_enum_size", i32 4}
!3210 = !{i32 1, !"branch-target-enforcement", i32 0}
!3211 = !{i32 1, !"sign-return-address", i32 0}
!3212 = !{i32 1, !"sign-return-address-all", i32 0}
!3213 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3214 = !{i32 7, !"frame-pointer", i32 2}
!3215 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3216, file: !3216, line: 26, type: !3217, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2567, retainedNodes: !474)
!3216 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3217 = !DISubroutineType(types: !3218)
!3218 = !{null}
!3219 = !DILocation(line: 28, column: 1, scope: !3215)
!3220 = !{i64 2152483266, i64 2152483286, i64 2152483349}
!3221 = !DILocation(line: 29, column: 1, scope: !3215)
!3222 = !{i64 2152483681, i64 2152483701, i64 2152483764}
!3223 = !DILocation(line: 30, column: 1, scope: !3215)
!3224 = !{i64 2152488161, i64 2152488181, i64 2152488244}
!3225 = !DILocation(line: 31, column: 1, scope: !3215)
!3226 = !{i64 2152488580, i64 2152488600, i64 2152488663}
!3227 = !DILocation(line: 33, column: 1, scope: !3215)
!3228 = !{i64 2152488872, i64 2152488892, i64 2152488955}
!3229 = !DILocation(line: 35, column: 1, scope: !3215)
!3230 = !{i64 2152489197, i64 2152489217, i64 2152489280}
!3231 = !DILocation(line: 50, column: 1, scope: !3215)
!3232 = !{i64 2152489624, i64 2152489644, i64 2152489707}
!3233 = !DILocation(line: 54, column: 1, scope: !3215)
!3234 = !{i64 2152490063, i64 2152490083, i64 2152490146}
!3235 = !DILocation(line: 61, column: 1, scope: !3215)
!3236 = !{i64 2152490380, i64 2152490400, i64 2152490463}
!3237 = !DILocation(line: 63, column: 1, scope: !3215)
!3238 = !{i64 2152490760, i64 2152490780, i64 2152490843}
!3239 = !DILocation(line: 64, column: 1, scope: !3215)
!3240 = !{i64 2152491282, i64 2152491302, i64 2152491365}
!3241 = !DILocation(line: 65, column: 1, scope: !3215)
!3242 = !{i64 2152491780, i64 2152491800, i64 2152491863}
!3243 = !DILocation(line: 66, column: 1, scope: !3215)
!3244 = !{i64 2152492262, i64 2152492282, i64 2152492345}
!3245 = !DILocation(line: 67, column: 1, scope: !3215)
!3246 = !{i64 2152492769, i64 2152492789, i64 2152492852}
!3247 = !DILocation(line: 68, column: 1, scope: !3215)
!3248 = !{i64 2152493257, i64 2152493277, i64 2152493340}
!3249 = !DILocation(line: 70, column: 1, scope: !3215)
!3250 = !{i64 2152493725, i64 2152493745, i64 2152493808}
!3251 = !DILocation(line: 71, column: 1, scope: !3215)
!3252 = !{i64 2152494167, i64 2152494187, i64 2152494250}
!3253 = !DILocation(line: 72, column: 1, scope: !3215)
!3254 = !{i64 2152494625, i64 2152494645, i64 2152494708}
!3255 = !DILocation(line: 79, column: 1, scope: !3215)
!3256 = !{i64 2152495079, i64 2152495099, i64 2152495162}
!3257 = !DILocation(line: 80, column: 1, scope: !3215)
!3258 = !{i64 2152495590, i64 2152495610, i64 2152495673}
!3259 = !DILocation(line: 82, column: 1, scope: !3215)
!3260 = !{i64 2152496081, i64 2152496101, i64 2152496164}
!3261 = !DILocation(line: 97, column: 1, scope: !3215)
!3262 = !{i64 2152496418, i64 2152496438, i64 2152496501}
!3263 = !DILocation(line: 99, column: 1, scope: !3215)
!3264 = !{i64 2152496636, i64 2152496656, i64 2152496719}
!3265 = !DILocation(line: 102, column: 1, scope: !3215)
!3266 = !{i64 2152496893, i64 2152496913, i64 2152496976}
!3267 = !DILocation(line: 105, column: 1, scope: !3215)
!3268 = !{i64 2152497133, i64 2152497153, i64 2152497216}
!3269 = !DILocation(line: 115, column: 1, scope: !3215)
!3270 = !{i64 2152497472, i64 2152497492, i64 2152497555}
!3271 = !DILocation(line: 118, column: 1, scope: !3215)
!3272 = !{i64 2152501877, i64 2152501897, i64 2152501960}
!3273 = !DILocation(line: 32, column: 1, scope: !3274)
!3274 = !DILexicalBlockFile(scope: !3215, file: !3275, discriminator: 0)
!3275 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3276 = !{i64 2152502233, i64 2152502253, i64 2152502316}
!3277 = !DILocation(line: 33, column: 1, scope: !3274)
!3278 = !{i64 2152502745, i64 2152502765, i64 2152502828}
!3279 = !DILocation(line: 53, column: 1, scope: !3274)
!3280 = !{i64 2152503253, i64 2152503273, i64 2152503336}
!3281 = !DILocation(line: 54, column: 1, scope: !3274)
!3282 = !{i64 2152503671, i64 2152503691, i64 2152503754}
!3283 = !DILocation(line: 55, column: 1, scope: !3274)
!3284 = !{i64 2152504089, i64 2152504109, i64 2152504172}
!3285 = !DILocation(line: 56, column: 1, scope: !3274)
!3286 = !{i64 2152504507, i64 2152504527, i64 2152504590}
!3287 = !DILocation(line: 57, column: 1, scope: !3274)
!3288 = !{i64 2152504925, i64 2152504945, i64 2152505008}
!3289 = !DILocation(line: 58, column: 1, scope: !3274)
!3290 = !{i64 2152505343, i64 2152505363, i64 2152505426}
!3291 = !DILocation(line: 59, column: 1, scope: !3274)
!3292 = !{i64 2152505761, i64 2152505781, i64 2152505844}
!3293 = !DILocation(line: 60, column: 1, scope: !3274)
!3294 = !{i64 2152506185, i64 2152506205, i64 2152506268}
!3295 = !DILocation(line: 61, column: 1, scope: !3274)
!3296 = !{i64 2152506502, i64 2152506522, i64 2152506585}
!3297 = !DILocation(line: 70, column: 1, scope: !3274)
!3298 = !{i64 2152506731, i64 2152506751, i64 2152506814}
!3299 = !DILocation(line: 72, column: 1, scope: !3274)
!3300 = !{i64 2152507063, i64 2152507083, i64 2152507146}
!3301 = !DILocation(line: 73, column: 1, scope: !3274)
!3302 = !{i64 2152507513, i64 2152507533, i64 2152507596}
!3303 = !DILocation(line: 74, column: 1, scope: !3274)
!3304 = !{i64 2152507963, i64 2152507983, i64 2152508046}
!3305 = !DILocation(line: 75, column: 1, scope: !3274)
!3306 = !{i64 2152508413, i64 2152508433, i64 2152508496}
!3307 = !DILocation(line: 76, column: 1, scope: !3274)
!3308 = !{i64 2152508863, i64 2152508883, i64 2152508946}
!3309 = !DILocation(line: 77, column: 1, scope: !3274)
!3310 = !{i64 2152509313, i64 2152509333, i64 2152509396}
!3311 = !DILocation(line: 78, column: 1, scope: !3274)
!3312 = !{i64 2152509763, i64 2152509783, i64 2152509846}
!3313 = !DILocation(line: 79, column: 1, scope: !3274)
!3314 = !{i64 2152510213, i64 2152510233, i64 2152510296}
!3315 = !DILocation(line: 80, column: 1, scope: !3274)
!3316 = !{i64 2152510666, i64 2152510686, i64 2152510749}
!3317 = !DILocation(line: 84, column: 1, scope: !3274)
!3318 = !{i64 2152515059, i64 2152515079, i64 2152515142}
!3319 = !DILocation(line: 91, column: 1, scope: !3274)
!3320 = !{i64 2152515456, i64 2152515476, i64 2152515539}
!3321 = !DILocation(line: 93, column: 1, scope: !3274)
!3322 = !{i64 2152515823, i64 2152515843, i64 2152515906}
!3323 = !DILocation(line: 106, column: 1, scope: !3274)
!3324 = !{i64 2152516093, i64 2152516113, i64 2152516176}
!3325 = !DILocation(line: 11, column: 1, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3215, file: !3327, discriminator: 0)
!3327 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3328 = distinct !DISubprogram(name: "main", scope: !3329, file: !3329, line: 11, type: !3217, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !3330)
!3329 = !DIFile(filename: "zephyr/samples/subsys/console/getchar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3330 = !{!3331}
!3331 = !DILocalVariable(name: "c", scope: !3332, file: !3329, line: 18, type: !167)
!3332 = distinct !DILexicalBlock(scope: !3328, file: !3329, line: 17, column: 12)
!3333 = !DILocation(line: 13, column: 2, scope: !3328)
!3334 = !DILocation(line: 15, column: 2, scope: !3328)
!3335 = !DILocation(line: 17, column: 2, scope: !3328)
!3336 = !DILocation(line: 18, column: 15, scope: !3332)
!3337 = !DILocation(line: 20, column: 31, scope: !3332)
!3338 = !DILocation(line: 0, scope: !3332)
!3339 = !DILocation(line: 20, column: 3, scope: !3332)
!3340 = distinct !{!3340, !3335, !3341}
!3341 = !DILocation(line: 21, column: 2, scope: !3328)
!3342 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3343)
!3343 = !{!3344}
!3344 = !DILocalVariable(name: "c", arg: 1, scope: !3342, file: !105, line: 45, type: !103)
!3345 = !DILocation(line: 0, scope: !3342)
!3346 = !DILocation(line: 50, column: 2, scope: !3342)
!3347 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !3348, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3350)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !106}
!3350 = !{!3351}
!3351 = !DILocalVariable(name: "fn", arg: 1, scope: !3347, file: !105, line: 63, type: !106)
!3352 = !DILocation(line: 0, scope: !3347)
!3353 = !DILocation(line: 65, column: 12, scope: !3347)
!3354 = !DILocation(line: 66, column: 1, scope: !3347)
!3355 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !3356, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !474)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!102}
!3358 = !DILocation(line: 78, column: 9, scope: !3355)
!3359 = !DILocation(line: 78, column: 2, scope: !3355)
!3360 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !3361, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3370)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{null, !157, !3363}
!3363 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3364, line: 99, baseType: !3365)
!3364 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3364, line: 40, baseType: !3366)
!3366 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !3367)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3368)
!3368 = !{!3369}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3367, file: !105, line: 79, baseType: !102, size: 32)
!3370 = !{!3371, !3372, !3373}
!3371 = !DILocalVariable(name: "fmt", arg: 1, scope: !3360, file: !105, line: 113, type: !157)
!3372 = !DILocalVariable(name: "ap", arg: 2, scope: !3360, file: !105, line: 113, type: !3363)
!3373 = !DILocalVariable(name: "ctx", scope: !3374, file: !105, line: 121, type: !3376)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !105, line: 120, column: 27)
!3375 = distinct !DILexicalBlock(scope: !3360, file: !105, line: 120, column: 6)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !3377)
!3377 = !{!3378, !3379}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3376, file: !105, line: 85, baseType: !32, size: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3376, file: !105, line: 86, baseType: !3380, offset: 32)
!3380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, elements: !2603)
!3381 = !DILocation(line: 0, scope: !3360)
!3382 = !DILocation(line: 148, column: 3, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3375, file: !105, line: 138, column: 9)
!3384 = !DILocation(line: 155, column: 1, scope: !3360)
!3385 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !3386, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!103, !103, !102}
!3388 = !{!3389, !3390}
!3389 = !DILocalVariable(name: "c", arg: 1, scope: !3385, file: !105, line: 107, type: !103)
!3390 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3385, file: !105, line: 107, type: !102)
!3391 = !DILocation(line: 0, scope: !3385)
!3392 = !DILocation(line: 110, column: 9, scope: !3385)
!3393 = !DILocation(line: 110, column: 2, scope: !3385)
!3394 = distinct !DISubprogram(name: "cbvprintf", scope: !3395, file: !3395, line: 739, type: !3396, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3402)
!3395 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!103, !3398, !102, !157, !3363}
!3398 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3395, line: 297, baseType: !3399)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 32)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!103, null}
!3402 = !{!3403, !3404, !3405, !3406}
!3403 = !DILocalVariable(name: "out", arg: 1, scope: !3394, file: !3395, line: 739, type: !3398)
!3404 = !DILocalVariable(name: "ctx", arg: 2, scope: !3394, file: !3395, line: 739, type: !102)
!3405 = !DILocalVariable(name: "format", arg: 3, scope: !3394, file: !3395, line: 739, type: !157)
!3406 = !DILocalVariable(name: "ap", arg: 4, scope: !3394, file: !3395, line: 739, type: !3363)
!3407 = !DILocation(line: 0, scope: !3394)
!3408 = !DILocation(line: 741, column: 9, scope: !3394)
!3409 = !DILocation(line: 741, column: 2, scope: !3394)
!3410 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !3411, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3413)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{null, !1128, !357}
!3413 = !{!3414, !3415, !3416}
!3414 = !DILocalVariable(name: "c", arg: 1, scope: !3410, file: !105, line: 157, type: !1128)
!3415 = !DILocalVariable(name: "n", arg: 2, scope: !3410, file: !105, line: 157, type: !357)
!3416 = !DILocalVariable(name: "i", scope: !3410, file: !105, line: 159, type: !357)
!3417 = !DILocation(line: 0, scope: !3410)
!3418 = !DILocation(line: 164, column: 16, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !105, line: 164, column: 2)
!3420 = distinct !DILexicalBlock(scope: !3410, file: !105, line: 164, column: 2)
!3421 = !DILocation(line: 164, column: 2, scope: !3420)
!3422 = !DILocation(line: 165, column: 3, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3419, file: !105, line: 164, column: 26)
!3424 = !DILocation(line: 165, column: 13, scope: !3423)
!3425 = !DILocation(line: 164, column: 22, scope: !3419)
!3426 = distinct !{!3426, !3421, !3427}
!3427 = !DILocation(line: 166, column: 2, scope: !3420)
!3428 = !DILocation(line: 171, column: 1, scope: !3410)
!3429 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !3430, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3432)
!3430 = !DISubroutineType(types: !3431)
!3431 = !{null, !157, null}
!3432 = !{!3433, !3434}
!3433 = !DILocalVariable(name: "fmt", arg: 1, scope: !3429, file: !105, line: 203, type: !157)
!3434 = !DILocalVariable(name: "ap", scope: !3429, file: !105, line: 205, type: !3363)
!3435 = !DILocation(line: 0, scope: !3429)
!3436 = !DILocation(line: 205, column: 2, scope: !3429)
!3437 = !DILocation(line: 205, column: 10, scope: !3429)
!3438 = !DILocation(line: 207, column: 2, scope: !3429)
!3439 = !DILocation(line: 209, column: 2, scope: !3429)
!3440 = !DILocation(line: 211, column: 2, scope: !3429)
!3441 = !DILocation(line: 212, column: 1, scope: !3429)
!3442 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !3443, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3445)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!103, !1128, !357, !157, null}
!3445 = !{!3446, !3447, !3448, !3449, !3450}
!3446 = !DILocalVariable(name: "str", arg: 1, scope: !3442, file: !105, line: 239, type: !1128)
!3447 = !DILocalVariable(name: "size", arg: 2, scope: !3442, file: !105, line: 239, type: !357)
!3448 = !DILocalVariable(name: "fmt", arg: 3, scope: !3442, file: !105, line: 239, type: !157)
!3449 = !DILocalVariable(name: "ap", scope: !3442, file: !105, line: 241, type: !3363)
!3450 = !DILocalVariable(name: "ret", scope: !3442, file: !105, line: 242, type: !103)
!3451 = !DILocation(line: 0, scope: !3442)
!3452 = !DILocation(line: 241, column: 2, scope: !3442)
!3453 = !DILocation(line: 241, column: 10, scope: !3442)
!3454 = !DILocation(line: 244, column: 2, scope: !3442)
!3455 = !DILocation(line: 245, column: 8, scope: !3442)
!3456 = !DILocation(line: 246, column: 2, scope: !3442)
!3457 = !DILocation(line: 249, column: 1, scope: !3442)
!3458 = !DILocation(line: 248, column: 2, scope: !3442)
!3459 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !3460, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3462)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!103, !1128, !357, !157, !3363}
!3462 = !{!3463, !3464, !3465, !3466, !3467}
!3463 = !DILocalVariable(name: "str", arg: 1, scope: !3459, file: !105, line: 251, type: !1128)
!3464 = !DILocalVariable(name: "size", arg: 2, scope: !3459, file: !105, line: 251, type: !357)
!3465 = !DILocalVariable(name: "fmt", arg: 3, scope: !3459, file: !105, line: 251, type: !157)
!3466 = !DILocalVariable(name: "ap", arg: 4, scope: !3459, file: !105, line: 251, type: !3363)
!3467 = !DILocalVariable(name: "ctx", scope: !3459, file: !105, line: 253, type: !3468)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !3469)
!3469 = !{!3470, !3471, !3472}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3468, file: !105, line: 218, baseType: !1128, size: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3468, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3468, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!3473 = !DILocation(line: 0, scope: !3459)
!3474 = !DILocation(line: 253, column: 2, scope: !3459)
!3475 = !DILocation(line: 253, column: 21, scope: !3459)
!3476 = !DILocation(line: 253, column: 27, scope: !3459)
!3477 = !DILocation(line: 255, column: 2, scope: !3459)
!3478 = !DILocation(line: 257, column: 10, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3459, file: !105, line: 257, column: 6)
!3480 = !DILocation(line: 257, column: 22, scope: !3479)
!3481 = !DILocation(line: 257, column: 16, scope: !3479)
!3482 = !DILocation(line: 257, column: 6, scope: !3459)
!3483 = !DILocation(line: 258, column: 3, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3479, file: !105, line: 257, column: 27)
!3485 = !DILocation(line: 258, column: 18, scope: !3484)
!3486 = !DILocation(line: 259, column: 2, scope: !3484)
!3487 = !DILocation(line: 262, column: 1, scope: !3459)
!3488 = !DILocation(line: 261, column: 2, scope: !3459)
!3489 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !3490, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3493)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!103, !103, !3492}
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 32)
!3493 = !{!3494, !3495}
!3494 = !DILocalVariable(name: "c", arg: 1, scope: !3489, file: !105, line: 223, type: !103)
!3495 = !DILocalVariable(name: "ctx", arg: 2, scope: !3489, file: !105, line: 223, type: !3492)
!3496 = !DILocation(line: 0, scope: !3489)
!3497 = !DILocation(line: 225, column: 11, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3489, file: !105, line: 225, column: 6)
!3499 = !DILocation(line: 225, column: 15, scope: !3498)
!3500 = !DILocation(line: 0, scope: !3498)
!3501 = !DILocation(line: 225, column: 23, scope: !3498)
!3502 = !DILocation(line: 225, column: 45, scope: !3498)
!3503 = !DILocation(line: 225, column: 37, scope: !3498)
!3504 = !DILocation(line: 225, column: 6, scope: !3489)
!3505 = !DILocation(line: 226, column: 8, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3498, file: !105, line: 225, column: 50)
!3507 = !DILocation(line: 226, column: 13, scope: !3506)
!3508 = !DILocation(line: 227, column: 3, scope: !3506)
!3509 = !DILocation(line: 230, column: 29, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3489, file: !105, line: 230, column: 6)
!3511 = !DILocation(line: 230, column: 17, scope: !3510)
!3512 = !DILocation(line: 230, column: 6, scope: !3489)
!3513 = !DILocation(line: 231, column: 22, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3510, file: !105, line: 230, column: 34)
!3515 = !DILocation(line: 231, column: 3, scope: !3514)
!3516 = !DILocation(line: 231, column: 26, scope: !3514)
!3517 = !DILocation(line: 232, column: 2, scope: !3514)
!3518 = !DILocation(line: 233, column: 28, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3510, file: !105, line: 232, column: 9)
!3520 = !DILocation(line: 233, column: 22, scope: !3519)
!3521 = !DILocation(line: 233, column: 3, scope: !3519)
!3522 = !DILocation(line: 233, column: 26, scope: !3519)
!3523 = !DILocation(line: 237, column: 1, scope: !3489)
!3524 = distinct !DISubprogram(name: "z_thread_entry", scope: !3525, file: !3525, line: 30, type: !3526, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !3533)
!3525 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3526 = !DISubroutineType(types: !3527)
!3527 = !{null, !3528, !102, !102, !102}
!3528 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3529, line: 46, baseType: !3530)
!3529 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 32)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{null, !102, !102, !102}
!3533 = !{!3534, !3535, !3536, !3537}
!3534 = !DILocalVariable(name: "entry", arg: 1, scope: !3524, file: !3525, line: 30, type: !3528)
!3535 = !DILocalVariable(name: "p1", arg: 2, scope: !3524, file: !3525, line: 31, type: !102)
!3536 = !DILocalVariable(name: "p2", arg: 3, scope: !3524, file: !3525, line: 31, type: !102)
!3537 = !DILocalVariable(name: "p3", arg: 4, scope: !3524, file: !3525, line: 31, type: !102)
!3538 = !DILocation(line: 0, scope: !3524)
!3539 = !DILocation(line: 36, column: 2, scope: !3524)
!3540 = !DILocation(line: 38, column: 17, scope: !3524)
!3541 = !DILocation(line: 38, column: 2, scope: !3524)
!3542 = !DILocation(line: 45, column: 2, scope: !3524)
!3543 = distinct !DISubprogram(name: "k_current_get", scope: !313, file: !313, line: 530, type: !3544, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !474)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!3546}
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !368, line: 347, baseType: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 32)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !3549)
!3549 = !{!3550, !3608, !3620, !3621, !3622, !3623, !3629, !3642}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3548, file: !368, line: 247, baseType: !3551, size: 384)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !3552)
!3552 = !{!3553, !3577, !3584, !3585, !3586, !3595, !3596, !3597}
!3553 = !DIDerivedType(tag: DW_TAG_member, scope: !3551, file: !368, line: 60, baseType: !3554, size: 64)
!3554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3551, file: !368, line: 60, size: 64, elements: !3555)
!3555 = !{!3556, !3571}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3554, file: !368, line: 61, baseType: !3557, size: 64)
!3557 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !3558)
!3558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !3559)
!3559 = !{!3560, !3566}
!3560 = !DIDerivedType(tag: DW_TAG_member, scope: !3558, file: !322, line: 38, baseType: !3561, size: 32)
!3561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3558, file: !322, line: 38, size: 32, elements: !3562)
!3562 = !{!3563, !3565}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3561, file: !322, line: 39, baseType: !3564, size: 32)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3561, file: !322, line: 40, baseType: !3564, size: 32)
!3566 = !DIDerivedType(tag: DW_TAG_member, scope: !3558, file: !322, line: 42, baseType: !3567, size: 32, offset: 32)
!3567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3558, file: !322, line: 42, size: 32, elements: !3568)
!3568 = !{!3569, !3570}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3567, file: !322, line: 43, baseType: !3564, size: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3567, file: !322, line: 44, baseType: !3564, size: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3554, file: !368, line: 62, baseType: !3572, size: 64)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !3573)
!3573 = !{!3574}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3572, file: !393, line: 50, baseType: !3575, size: 64)
!3575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3576, size: 64, elements: !398)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3551, file: !368, line: 68, baseType: !3578, size: 32, offset: 64)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 32)
!3579 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !3580)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !3581)
!3581 = !{!3582}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3580, file: !317, line: 232, baseType: !3583, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !3558)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3551, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3551, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!3586 = !DIDerivedType(tag: DW_TAG_member, scope: !3551, file: !368, line: 90, baseType: !3587, size: 16, offset: 112)
!3587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3551, file: !368, line: 90, size: 16, elements: !3588)
!3588 = !{!3589, !3594}
!3589 = !DIDerivedType(tag: DW_TAG_member, scope: !3587, file: !368, line: 91, baseType: !3590, size: 16)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3587, file: !368, line: 91, size: 16, elements: !3591)
!3591 = !{!3592, !3593}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3590, file: !368, line: 96, baseType: !416, size: 8)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3590, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3587, file: !368, line: 100, baseType: !341, size: 16)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3551, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3551, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3551, file: !368, line: 131, baseType: !3598, size: 192, offset: 192)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !3599)
!3599 = !{!3600, !3601, !3607}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3598, file: !317, line: 245, baseType: !3557, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3598, file: !317, line: 246, baseType: !3602, size: 32, offset: 64)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !3603)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 32)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{null, !3606}
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3598, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3548, file: !368, line: 250, baseType: !3609, size: 288, offset: 384)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !3610)
!3610 = !{!3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3609, file: !437, line: 26, baseType: !121, size: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3609, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3609, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3609, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3609, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3609, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3609, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3609, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3609, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3548, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3548, file: !368, line: 256, baseType: !3579, size: 64, offset: 704)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3548, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3548, file: !368, line: 300, baseType: !3624, size: 96, offset: 800)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !3625)
!3625 = !{!3626, !3627, !3628}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3624, file: !368, line: 153, baseType: !22, size: 32)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3624, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3624, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3548, file: !368, line: 325, baseType: !3630, size: 32, offset: 896)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 32)
!3631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !3632)
!3632 = !{!3633, !3639, !3640}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3631, file: !313, line: 5074, baseType: !3634, size: 96)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !3635)
!3635 = !{!3636, !3637, !3638}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3634, file: !463, line: 57, baseType: !466, size: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3634, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3634, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3631, file: !313, line: 5075, baseType: !3579, size: 64, offset: 96)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3631, file: !313, line: 5076, baseType: !3641, offset: 160)
!3641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3548, file: !368, line: 343, baseType: !3643, size: 64, offset: 928)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !3644)
!3644 = !{!3645, !3646}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3643, file: !437, line: 63, baseType: !121, size: 32)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3643, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!3647 = !DILocation(line: 535, column: 9, scope: !3543)
!3648 = !DILocation(line: 535, column: 2, scope: !3543)
!3649 = distinct !DISubprogram(name: "k_thread_abort", scope: !3650, file: !3650, line: 188, type: !3651, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !3653)
!3650 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!3651 = !DISubroutineType(types: !3652)
!3652 = !{null, !3546}
!3653 = !{!3654}
!3654 = !DILocalVariable(name: "thread", arg: 1, scope: !3649, file: !3650, line: 188, type: !3546)
!3655 = !DILocation(line: 0, scope: !3649)
!3656 = !DILocation(line: 197, column: 2, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3649, file: !3650, line: 197, column: 2)
!3658 = !{i64 2152212582}
!3659 = !DILocation(line: 198, column: 2, scope: !3649)
!3660 = !DILocation(line: 199, column: 1, scope: !3649)
!3661 = distinct !DISubprogram(name: "z_current_get", scope: !3650, file: !3650, line: 173, type: !3544, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !474)
!3662 = !DILocation(line: 180, column: 2, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3661, file: !3650, line: 180, column: 2)
!3664 = !{i64 2152212514}
!3665 = !DILocation(line: 181, column: 9, scope: !3661)
!3666 = !DILocation(line: 181, column: 2, scope: !3661)
!3667 = distinct !DISubprogram(name: "sys_heap_free", scope: !3668, file: !3668, line: 163, type: !3669, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3677)
!3668 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3669 = !DISubroutineType(types: !3670)
!3670 = !{null, !3671, !102}
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 32)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !3673)
!3673 = !{!3674, !3675, !3676}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3672, file: !463, line: 57, baseType: !2590, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3672, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3672, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!3677 = !{!3678, !3679, !3680, !3681}
!3678 = !DILocalVariable(name: "heap", arg: 1, scope: !3667, file: !3668, line: 163, type: !3671)
!3679 = !DILocalVariable(name: "mem", arg: 2, scope: !3667, file: !3668, line: 163, type: !102)
!3680 = !DILocalVariable(name: "h", scope: !3667, file: !3668, line: 168, type: !2590)
!3681 = !DILocalVariable(name: "c", scope: !3667, file: !3668, line: 169, type: !2595)
!3682 = !DILocation(line: 0, scope: !3667)
!3683 = !DILocation(line: 165, column: 10, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3667, file: !3668, line: 165, column: 6)
!3685 = !DILocation(line: 165, column: 6, scope: !3667)
!3686 = !DILocation(line: 168, column: 27, scope: !3667)
!3687 = !DILocation(line: 169, column: 16, scope: !3667)
!3688 = !{i32 0, i32 536870912}
!3689 = !DILocation(line: 187, column: 2, scope: !3667)
!3690 = !DILocation(line: 197, column: 2, scope: !3667)
!3691 = !DILocation(line: 198, column: 1, scope: !3667)
!3692 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3668, file: !3668, line: 157, type: !3693, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3695)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!2595, !2590, !102}
!3695 = !{!3696, !3697, !3698, !3699}
!3696 = !DILocalVariable(name: "h", arg: 1, scope: !3692, file: !3668, line: 157, type: !2590)
!3697 = !DILocalVariable(name: "p", arg: 2, scope: !3692, file: !3668, line: 157, type: !102)
!3698 = !DILocalVariable(name: "mem", scope: !3692, file: !3668, line: 159, type: !274)
!3699 = !DILocalVariable(name: "base", scope: !3692, file: !3668, line: 159, type: !274)
!3700 = !DILocation(line: 0, scope: !3692)
!3701 = !DILocation(line: 159, column: 39, scope: !3692)
!3702 = !DILocation(line: 160, column: 14, scope: !3692)
!3703 = !DILocation(line: 160, column: 38, scope: !3692)
!3704 = !DILocation(line: 160, column: 46, scope: !3692)
!3705 = !DILocation(line: 160, column: 2, scope: !3692)
!3706 = distinct !DISubprogram(name: "set_chunk_used", scope: !2577, file: !2577, line: 147, type: !3707, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3709)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !2590, !2595, !170}
!3709 = !{!3710, !3711, !3712, !3713, !3714}
!3710 = !DILocalVariable(name: "h", arg: 1, scope: !3706, file: !2577, line: 147, type: !2590)
!3711 = !DILocalVariable(name: "c", arg: 2, scope: !3706, file: !2577, line: 147, type: !2595)
!3712 = !DILocalVariable(name: "used", arg: 3, scope: !3706, file: !2577, line: 147, type: !170)
!3713 = !DILocalVariable(name: "buf", scope: !3706, file: !2577, line: 149, type: !2584)
!3714 = !DILocalVariable(name: "cmem", scope: !3706, file: !2577, line: 150, type: !102)
!3715 = !DILocation(line: 0, scope: !3706)
!3716 = !DILocation(line: 149, column: 22, scope: !3706)
!3717 = !DILocation(line: 0, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !2577, line: 159, column: 7)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !2577, line: 158, column: 9)
!3720 = distinct !DILexicalBlock(scope: !3706, file: !2577, line: 152, column: 6)
!3721 = !DILocation(line: 159, column: 7, scope: !3719)
!3722 = !DILocation(line: 165, column: 1, scope: !3706)
!3723 = distinct !DISubprogram(name: "free_chunk", scope: !3668, file: !3668, line: 133, type: !3724, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3726)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{null, !2590, !2595}
!3726 = !{!3727, !3728}
!3727 = !DILocalVariable(name: "h", arg: 1, scope: !3723, file: !3668, line: 133, type: !2590)
!3728 = !DILocalVariable(name: "c", arg: 2, scope: !3723, file: !3668, line: 133, type: !2595)
!3729 = !DILocation(line: 0, scope: !3723)
!3730 = !DILocation(line: 136, column: 21, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3723, file: !3668, line: 136, column: 6)
!3732 = !DILocation(line: 136, column: 7, scope: !3731)
!3733 = !DILocation(line: 136, column: 6, scope: !3723)
!3734 = !DILocation(line: 137, column: 3, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3731, file: !3668, line: 136, column: 41)
!3736 = !DILocation(line: 138, column: 22, scope: !3735)
!3737 = !DILocation(line: 138, column: 3, scope: !3735)
!3738 = !DILocation(line: 139, column: 2, scope: !3735)
!3739 = !DILocation(line: 142, column: 21, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3723, file: !3668, line: 142, column: 6)
!3741 = !{i32 -65535, i32 536903678}
!3742 = !DILocation(line: 142, column: 7, scope: !3740)
!3743 = !DILocation(line: 142, column: 6, scope: !3723)
!3744 = !DILocation(line: 143, column: 3, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3740, file: !3668, line: 142, column: 40)
!3746 = !DILocation(line: 144, column: 19, scope: !3745)
!3747 = !DILocation(line: 144, column: 3, scope: !3745)
!3748 = !DILocation(line: 145, column: 7, scope: !3745)
!3749 = !DILocation(line: 146, column: 2, scope: !3745)
!3750 = !DILocation(line: 148, column: 2, scope: !3723)
!3751 = !DILocation(line: 149, column: 1, scope: !3723)
!3752 = distinct !DISubprogram(name: "right_chunk", scope: !2577, file: !2577, line: 204, type: !3753, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3755)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!2595, !2590, !2595}
!3755 = !{!3756, !3757}
!3756 = !DILocalVariable(name: "h", arg: 1, scope: !3752, file: !2577, line: 204, type: !2590)
!3757 = !DILocalVariable(name: "c", arg: 2, scope: !3752, file: !2577, line: 204, type: !2595)
!3758 = !DILocation(line: 0, scope: !3752)
!3759 = !DILocation(line: 206, column: 13, scope: !3752)
!3760 = !DILocation(line: 206, column: 11, scope: !3752)
!3761 = !DILocation(line: 206, column: 2, scope: !3752)
!3762 = distinct !DISubprogram(name: "chunk_used", scope: !2577, file: !2577, line: 137, type: !3763, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3765)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!170, !2590, !2595}
!3765 = !{!3766, !3767}
!3766 = !DILocalVariable(name: "h", arg: 1, scope: !3762, file: !2577, line: 137, type: !2590)
!3767 = !DILocalVariable(name: "c", arg: 2, scope: !3762, file: !2577, line: 137, type: !2595)
!3768 = !DILocation(line: 0, scope: !3762)
!3769 = !DILocation(line: 139, column: 9, scope: !3762)
!3770 = !DILocation(line: 139, column: 42, scope: !3762)
!3771 = !DILocation(line: 139, column: 2, scope: !3762)
!3772 = distinct !DISubprogram(name: "free_list_remove", scope: !3668, file: !3668, line: 60, type: !3724, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3773)
!3773 = !{!3774, !3775, !3776}
!3774 = !DILocalVariable(name: "h", arg: 1, scope: !3772, file: !3668, line: 60, type: !2590)
!3775 = !DILocalVariable(name: "c", arg: 2, scope: !3772, file: !3668, line: 60, type: !2595)
!3776 = !DILocalVariable(name: "bidx", scope: !3777, file: !3668, line: 63, type: !103)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !3668, line: 62, column: 31)
!3778 = distinct !DILexicalBlock(scope: !3772, file: !3668, line: 62, column: 6)
!3779 = !DILocation(line: 0, scope: !3772)
!3780 = !DILocation(line: 63, column: 28, scope: !3777)
!3781 = !{i32 0, i32 32768}
!3782 = !DILocation(line: 63, column: 14, scope: !3777)
!3783 = !DILocation(line: 0, scope: !3777)
!3784 = !DILocation(line: 64, column: 3, scope: !3777)
!3785 = !DILocation(line: 66, column: 1, scope: !3772)
!3786 = distinct !DISubprogram(name: "merge_chunks", scope: !3668, file: !3668, line: 125, type: !3787, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3789)
!3787 = !DISubroutineType(types: !3788)
!3788 = !{null, !2590, !2595, !2595}
!3789 = !{!3790, !3791, !3792, !3793}
!3790 = !DILocalVariable(name: "h", arg: 1, scope: !3786, file: !3668, line: 125, type: !2590)
!3791 = !DILocalVariable(name: "lc", arg: 2, scope: !3786, file: !3668, line: 125, type: !2595)
!3792 = !DILocalVariable(name: "rc", arg: 3, scope: !3786, file: !3668, line: 125, type: !2595)
!3793 = !DILocalVariable(name: "newsz", scope: !3786, file: !3668, line: 127, type: !3794)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2577, line: 62, baseType: !121)
!3795 = !DILocation(line: 0, scope: !3786)
!3796 = !DILocation(line: 127, column: 20, scope: !3786)
!3797 = !DILocation(line: 127, column: 40, scope: !3786)
!3798 = !DILocation(line: 127, column: 38, scope: !3786)
!3799 = !DILocation(line: 129, column: 2, scope: !3786)
!3800 = !DILocation(line: 130, column: 25, scope: !3786)
!3801 = !DILocation(line: 130, column: 2, scope: !3786)
!3802 = !DILocation(line: 131, column: 1, scope: !3786)
!3803 = distinct !DISubprogram(name: "left_chunk", scope: !2577, file: !2577, line: 199, type: !3753, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3804)
!3804 = !{!3805, !3806}
!3805 = !DILocalVariable(name: "h", arg: 1, scope: !3803, file: !2577, line: 199, type: !2590)
!3806 = !DILocalVariable(name: "c", arg: 2, scope: !3803, file: !2577, line: 199, type: !2595)
!3807 = !DILocation(line: 0, scope: !3803)
!3808 = !DILocation(line: 201, column: 13, scope: !3803)
!3809 = !DILocation(line: 201, column: 11, scope: !3803)
!3810 = !DILocation(line: 201, column: 2, scope: !3803)
!3811 = distinct !DISubprogram(name: "free_list_add", scope: !3668, file: !3668, line: 98, type: !3724, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3812)
!3812 = !{!3813, !3814, !3815}
!3813 = !DILocalVariable(name: "h", arg: 1, scope: !3811, file: !3668, line: 98, type: !2590)
!3814 = !DILocalVariable(name: "c", arg: 2, scope: !3811, file: !3668, line: 98, type: !2595)
!3815 = !DILocalVariable(name: "bidx", scope: !3816, file: !3668, line: 101, type: !103)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !3668, line: 100, column: 31)
!3817 = distinct !DILexicalBlock(scope: !3811, file: !3668, line: 100, column: 6)
!3818 = !DILocation(line: 0, scope: !3811)
!3819 = !DILocation(line: 101, column: 28, scope: !3816)
!3820 = !DILocation(line: 101, column: 14, scope: !3816)
!3821 = !DILocation(line: 0, scope: !3816)
!3822 = !DILocation(line: 102, column: 3, scope: !3816)
!3823 = !DILocation(line: 104, column: 1, scope: !3811)
!3824 = distinct !DISubprogram(name: "chunk_size", scope: !2577, file: !2577, line: 142, type: !3825, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3827)
!3825 = !DISubroutineType(types: !3826)
!3826 = !{!3794, !2590, !2595}
!3827 = !{!3828, !3829}
!3828 = !DILocalVariable(name: "h", arg: 1, scope: !3824, file: !2577, line: 142, type: !2590)
!3829 = !DILocalVariable(name: "c", arg: 2, scope: !3824, file: !2577, line: 142, type: !2595)
!3830 = !DILocation(line: 0, scope: !3824)
!3831 = !DILocation(line: 144, column: 9, scope: !3824)
!3832 = !DILocation(line: 144, column: 42, scope: !3824)
!3833 = !DILocation(line: 144, column: 2, scope: !3824)
!3834 = distinct !DISubprogram(name: "bucket_idx", scope: !2577, file: !2577, line: 250, type: !3835, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3837)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{!103, !2590, !3794}
!3837 = !{!3838, !3839, !3840}
!3838 = !DILocalVariable(name: "h", arg: 1, scope: !3834, file: !2577, line: 250, type: !2590)
!3839 = !DILocalVariable(name: "sz", arg: 2, scope: !3834, file: !2577, line: 250, type: !3794)
!3840 = !DILocalVariable(name: "usable_sz", scope: !3834, file: !2577, line: 252, type: !32)
!3841 = !DILocation(line: 0, scope: !3834)
!3842 = !DILocation(line: 252, column: 32, scope: !3834)
!3843 = !DILocation(line: 252, column: 30, scope: !3834)
!3844 = !DILocation(line: 252, column: 50, scope: !3834)
!3845 = !DILocation(line: 253, column: 14, scope: !3834)
!3846 = !{i32 0, i32 33}
!3847 = !DILocation(line: 253, column: 12, scope: !3834)
!3848 = !DILocation(line: 253, column: 2, scope: !3834)
!3849 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3668, file: !3668, line: 68, type: !3850, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3852)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{null, !2590, !2595, !103}
!3852 = !{!3853, !3854, !3855, !3856, !3858, !3861}
!3853 = !DILocalVariable(name: "h", arg: 1, scope: !3849, file: !3668, line: 68, type: !2590)
!3854 = !DILocalVariable(name: "c", arg: 2, scope: !3849, file: !3668, line: 68, type: !2595)
!3855 = !DILocalVariable(name: "bidx", arg: 3, scope: !3849, file: !3668, line: 68, type: !103)
!3856 = !DILocalVariable(name: "b", scope: !3849, file: !3668, line: 70, type: !3857)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!3858 = !DILocalVariable(name: "second", scope: !3859, file: !3668, line: 84, type: !2595)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !3668, line: 80, column: 9)
!3860 = distinct !DILexicalBlock(scope: !3849, file: !3668, line: 72, column: 6)
!3861 = !DILocalVariable(name: "first", scope: !3859, file: !3668, line: 85, type: !2595)
!3862 = !DILocation(line: 0, scope: !3849)
!3863 = !DILocation(line: 72, column: 9, scope: !3860)
!3864 = !DILocation(line: 72, column: 14, scope: !3860)
!3865 = !DILocation(line: 72, column: 6, scope: !3849)
!3866 = !DILocation(line: 76, column: 23, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3860, file: !3668, line: 72, column: 21)
!3868 = !DILocation(line: 76, column: 6, scope: !3867)
!3869 = !DILocation(line: 76, column: 20, scope: !3867)
!3870 = !DILocation(line: 77, column: 11, scope: !3867)
!3871 = !DILocation(line: 78, column: 3, scope: !3867)
!3872 = !DILocation(line: 79, column: 3, scope: !3867)
!3873 = !DILocation(line: 80, column: 2, scope: !3867)
!3874 = !DILocation(line: 0, scope: !3859)
!3875 = !DILocation(line: 85, column: 21, scope: !3859)
!3876 = !{i32 0, i32 65536}
!3877 = !DILocation(line: 87, column: 3, scope: !3859)
!3878 = !DILocation(line: 88, column: 3, scope: !3859)
!3879 = !DILocation(line: 89, column: 3, scope: !3859)
!3880 = !DILocation(line: 90, column: 3, scope: !3859)
!3881 = !DILocation(line: 96, column: 1, scope: !3849)
!3882 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2577, file: !2577, line: 187, type: !3787, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3883)
!3883 = !{!3884, !3885, !3886}
!3884 = !DILocalVariable(name: "h", arg: 1, scope: !3882, file: !2577, line: 187, type: !2590)
!3885 = !DILocalVariable(name: "c", arg: 2, scope: !3882, file: !2577, line: 187, type: !2595)
!3886 = !DILocalVariable(name: "prev", arg: 3, scope: !3882, file: !2577, line: 188, type: !2595)
!3887 = !DILocation(line: 0, scope: !3882)
!3888 = !DILocation(line: 190, column: 2, scope: !3882)
!3889 = !DILocation(line: 191, column: 1, scope: !3882)
!3890 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2577, file: !2577, line: 193, type: !3787, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3891)
!3891 = !{!3892, !3893, !3894}
!3892 = !DILocalVariable(name: "h", arg: 1, scope: !3890, file: !2577, line: 193, type: !2590)
!3893 = !DILocalVariable(name: "c", arg: 2, scope: !3890, file: !2577, line: 193, type: !2595)
!3894 = !DILocalVariable(name: "next", arg: 3, scope: !3890, file: !2577, line: 194, type: !2595)
!3895 = !DILocation(line: 0, scope: !3890)
!3896 = !DILocation(line: 196, column: 2, scope: !3890)
!3897 = !DILocation(line: 197, column: 1, scope: !3890)
!3898 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2577, file: !2577, line: 177, type: !3753, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3899)
!3899 = !{!3900, !3901}
!3900 = !DILocalVariable(name: "h", arg: 1, scope: !3898, file: !2577, line: 177, type: !2590)
!3901 = !DILocalVariable(name: "c", arg: 2, scope: !3898, file: !2577, line: 177, type: !2595)
!3902 = !DILocation(line: 0, scope: !3898)
!3903 = !DILocation(line: 179, column: 9, scope: !3898)
!3904 = !DILocation(line: 179, column: 2, scope: !3898)
!3905 = distinct !DISubprogram(name: "chunk_field", scope: !2577, file: !2577, line: 107, type: !3906, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3908)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!2595, !2590, !2595, !2576}
!3908 = !{!3909, !3910, !3911, !3912, !3913}
!3909 = !DILocalVariable(name: "h", arg: 1, scope: !3905, file: !2577, line: 107, type: !2590)
!3910 = !DILocalVariable(name: "c", arg: 2, scope: !3905, file: !2577, line: 107, type: !2595)
!3911 = !DILocalVariable(name: "f", arg: 3, scope: !3905, file: !2577, line: 108, type: !2576)
!3912 = !DILocalVariable(name: "buf", scope: !3905, file: !2577, line: 110, type: !2584)
!3913 = !DILocalVariable(name: "cmem", scope: !3905, file: !2577, line: 111, type: !102)
!3914 = !DILocation(line: 0, scope: !3905)
!3915 = !DILocation(line: 110, column: 22, scope: !3905)
!3916 = !DILocation(line: 111, column: 15, scope: !3905)
!3917 = !DILocation(line: 116, column: 11, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !2577, line: 115, column: 9)
!3919 = distinct !DILexicalBlock(scope: !3905, file: !2577, line: 113, column: 6)
!3920 = !DILocation(line: 116, column: 10, scope: !3918)
!3921 = !DILocation(line: 118, column: 1, scope: !3905)
!3922 = distinct !DISubprogram(name: "chunk_buf", scope: !2577, file: !2577, line: 101, type: !3923, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3925)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!2584, !2590}
!3925 = !{!3926}
!3926 = !DILocalVariable(name: "h", arg: 1, scope: !3922, file: !2577, line: 101, type: !2590)
!3927 = !DILocation(line: 0, scope: !3922)
!3928 = !DILocation(line: 104, column: 9, scope: !3922)
!3929 = !DILocation(line: 104, column: 2, scope: !3922)
!3930 = distinct !DISubprogram(name: "chunk_set", scope: !2577, file: !2577, line: 120, type: !3931, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3933)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !2590, !2595, !2576, !2595}
!3933 = !{!3934, !3935, !3936, !3937, !3938, !3939}
!3934 = !DILocalVariable(name: "h", arg: 1, scope: !3930, file: !2577, line: 120, type: !2590)
!3935 = !DILocalVariable(name: "c", arg: 2, scope: !3930, file: !2577, line: 120, type: !2595)
!3936 = !DILocalVariable(name: "f", arg: 3, scope: !3930, file: !2577, line: 121, type: !2576)
!3937 = !DILocalVariable(name: "val", arg: 4, scope: !3930, file: !2577, line: 121, type: !2595)
!3938 = !DILocalVariable(name: "buf", scope: !3930, file: !2577, line: 125, type: !2584)
!3939 = !DILocalVariable(name: "cmem", scope: !3930, file: !2577, line: 126, type: !102)
!3940 = !DILocation(line: 0, scope: !3930)
!3941 = !DILocation(line: 125, column: 22, scope: !3930)
!3942 = !DILocation(line: 126, column: 15, scope: !3930)
!3943 = !DILocation(line: 133, column: 27, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !2577, line: 131, column: 9)
!3945 = distinct !DILexicalBlock(scope: !3930, file: !2577, line: 128, column: 6)
!3946 = !DILocation(line: 133, column: 4, scope: !3944)
!3947 = !DILocation(line: 133, column: 3, scope: !3944)
!3948 = !DILocation(line: 133, column: 25, scope: !3944)
!3949 = !DILocation(line: 135, column: 1, scope: !3930)
!3950 = distinct !DISubprogram(name: "min_chunk_size", scope: !2577, file: !2577, line: 240, type: !3951, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{!3794, !2590}
!3953 = !{!3954}
!3954 = !DILocalVariable(name: "h", arg: 1, scope: !3950, file: !2577, line: 240, type: !2590)
!3955 = !DILocation(line: 0, scope: !3950)
!3956 = !DILocation(line: 242, column: 9, scope: !3950)
!3957 = !DILocation(line: 242, column: 2, scope: !3950)
!3958 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2577, file: !2577, line: 235, type: !3959, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3961)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!3794, !2590, !357}
!3961 = !{!3962, !3963}
!3962 = !DILocalVariable(name: "h", arg: 1, scope: !3958, file: !2577, line: 235, type: !2590)
!3963 = !DILocalVariable(name: "bytes", arg: 2, scope: !3958, file: !2577, line: 235, type: !357)
!3964 = !DILocation(line: 0, scope: !3958)
!3965 = !DILocation(line: 237, column: 39, scope: !3958)
!3966 = !DILocation(line: 237, column: 9, scope: !3958)
!3967 = !DILocation(line: 237, column: 2, scope: !3958)
!3968 = distinct !DISubprogram(name: "chunksz", scope: !2577, file: !2577, line: 230, type: !3969, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3971)
!3969 = !DISubroutineType(types: !3970)
!3970 = !{!3794, !357}
!3971 = !{!3972}
!3972 = !DILocalVariable(name: "bytes", arg: 1, scope: !3968, file: !2577, line: 230, type: !357)
!3973 = !DILocation(line: 0, scope: !3968)
!3974 = !DILocation(line: 232, column: 29, scope: !3968)
!3975 = !DILocation(line: 232, column: 35, scope: !3968)
!3976 = !DILocation(line: 232, column: 2, scope: !3968)
!3977 = distinct !DISubprogram(name: "set_chunk_size", scope: !2577, file: !2577, line: 172, type: !3978, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3980)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{null, !2590, !2595, !3794}
!3980 = !{!3981, !3982, !3983}
!3981 = !DILocalVariable(name: "h", arg: 1, scope: !3977, file: !2577, line: 172, type: !2590)
!3982 = !DILocalVariable(name: "c", arg: 2, scope: !3977, file: !2577, line: 172, type: !2595)
!3983 = !DILocalVariable(name: "size", arg: 3, scope: !3977, file: !2577, line: 172, type: !3794)
!3984 = !DILocation(line: 0, scope: !3977)
!3985 = !DILocation(line: 174, column: 38, scope: !3977)
!3986 = !DILocation(line: 174, column: 2, scope: !3977)
!3987 = !DILocation(line: 175, column: 1, scope: !3977)
!3988 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2577, file: !2577, line: 209, type: !3978, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3989)
!3989 = !{!3990, !3991, !3992}
!3990 = !DILocalVariable(name: "h", arg: 1, scope: !3988, file: !2577, line: 209, type: !2590)
!3991 = !DILocalVariable(name: "c", arg: 2, scope: !3988, file: !2577, line: 209, type: !2595)
!3992 = !DILocalVariable(name: "size", arg: 3, scope: !3988, file: !2577, line: 210, type: !3794)
!3993 = !DILocation(line: 0, scope: !3988)
!3994 = !DILocation(line: 212, column: 2, scope: !3988)
!3995 = !DILocation(line: 213, column: 1, scope: !3988)
!3996 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3668, file: !3668, line: 34, type: !3850, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !3997)
!3997 = !{!3998, !3999, !4000, !4001, !4002, !4005}
!3998 = !DILocalVariable(name: "h", arg: 1, scope: !3996, file: !3668, line: 34, type: !2590)
!3999 = !DILocalVariable(name: "c", arg: 2, scope: !3996, file: !3668, line: 34, type: !2595)
!4000 = !DILocalVariable(name: "bidx", arg: 3, scope: !3996, file: !3668, line: 34, type: !103)
!4001 = !DILocalVariable(name: "b", scope: !3996, file: !3668, line: 36, type: !3857)
!4002 = !DILocalVariable(name: "first", scope: !4003, file: !3668, line: 47, type: !2595)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !3668, line: 46, column: 9)
!4004 = distinct !DILexicalBlock(scope: !3996, file: !3668, line: 42, column: 6)
!4005 = !DILocalVariable(name: "second", scope: !4003, file: !3668, line: 48, type: !2595)
!4006 = !DILocation(line: 0, scope: !3996)
!4007 = !DILocation(line: 36, column: 29, scope: !3996)
!4008 = !DILocation(line: 42, column: 6, scope: !4004)
!4009 = !DILocation(line: 42, column: 28, scope: !4004)
!4010 = !DILocation(line: 42, column: 6, scope: !3996)
!4011 = !DILocation(line: 44, column: 24, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4004, file: !3668, line: 42, column: 34)
!4013 = !DILocation(line: 44, column: 23, scope: !4012)
!4014 = !DILocation(line: 44, column: 6, scope: !4012)
!4015 = !DILocation(line: 44, column: 20, scope: !4012)
!4016 = !DILocation(line: 45, column: 6, scope: !4012)
!4017 = !DILocation(line: 45, column: 11, scope: !4012)
!4018 = !DILocation(line: 46, column: 2, scope: !4012)
!4019 = !DILocation(line: 47, column: 21, scope: !4003)
!4020 = !DILocation(line: 0, scope: !4003)
!4021 = !DILocation(line: 50, column: 6, scope: !4003)
!4022 = !DILocation(line: 50, column: 11, scope: !4003)
!4023 = !DILocation(line: 51, column: 3, scope: !4003)
!4024 = !DILocation(line: 52, column: 3, scope: !4003)
!4025 = !DILocation(line: 58, column: 1, scope: !3996)
!4026 = distinct !DISubprogram(name: "next_free_chunk", scope: !2577, file: !2577, line: 182, type: !3753, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4027)
!4027 = !{!4028, !4029}
!4028 = !DILocalVariable(name: "h", arg: 1, scope: !4026, file: !2577, line: 182, type: !2590)
!4029 = !DILocalVariable(name: "c", arg: 2, scope: !4026, file: !2577, line: 182, type: !2595)
!4030 = !DILocation(line: 0, scope: !4026)
!4031 = !DILocation(line: 184, column: 9, scope: !4026)
!4032 = !DILocation(line: 184, column: 2, scope: !4026)
!4033 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3668, file: !3668, line: 200, type: !4034, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4036)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!357, !3671, !102}
!4036 = !{!4037, !4038, !4039, !4040, !4041, !4042, !4043}
!4037 = !DILocalVariable(name: "heap", arg: 1, scope: !4033, file: !3668, line: 200, type: !3671)
!4038 = !DILocalVariable(name: "mem", arg: 2, scope: !4033, file: !3668, line: 200, type: !102)
!4039 = !DILocalVariable(name: "h", scope: !4033, file: !3668, line: 202, type: !2590)
!4040 = !DILocalVariable(name: "c", scope: !4033, file: !3668, line: 203, type: !2595)
!4041 = !DILocalVariable(name: "addr", scope: !4033, file: !3668, line: 204, type: !357)
!4042 = !DILocalVariable(name: "chunk_base", scope: !4033, file: !3668, line: 205, type: !357)
!4043 = !DILocalVariable(name: "chunk_sz", scope: !4033, file: !3668, line: 206, type: !357)
!4044 = !DILocation(line: 0, scope: !4033)
!4045 = !DILocation(line: 202, column: 27, scope: !4033)
!4046 = !DILocation(line: 203, column: 16, scope: !4033)
!4047 = !DILocation(line: 204, column: 16, scope: !4033)
!4048 = !DILocation(line: 205, column: 31, scope: !4033)
!4049 = !DILocation(line: 205, column: 22, scope: !4033)
!4050 = !DILocation(line: 206, column: 20, scope: !4033)
!4051 = !DILocation(line: 206, column: 37, scope: !4033)
!4052 = !DILocation(line: 208, column: 26, scope: !4033)
!4053 = !DILocation(line: 208, column: 18, scope: !4033)
!4054 = !DILocation(line: 208, column: 2, scope: !4033)
!4055 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3668, file: !3668, line: 263, type: !4056, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4058)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!102, !3671, !357}
!4058 = !{!4059, !4060, !4061, !4062, !4063, !4064}
!4059 = !DILocalVariable(name: "heap", arg: 1, scope: !4055, file: !3668, line: 263, type: !3671)
!4060 = !DILocalVariable(name: "bytes", arg: 2, scope: !4055, file: !3668, line: 263, type: !357)
!4061 = !DILocalVariable(name: "h", scope: !4055, file: !3668, line: 265, type: !2590)
!4062 = !DILocalVariable(name: "mem", scope: !4055, file: !3668, line: 266, type: !102)
!4063 = !DILocalVariable(name: "chunk_sz", scope: !4055, file: !3668, line: 272, type: !3794)
!4064 = !DILocalVariable(name: "c", scope: !4055, file: !3668, line: 273, type: !2595)
!4065 = !DILocation(line: 0, scope: !4055)
!4066 = !DILocation(line: 265, column: 27, scope: !4055)
!4067 = !DILocation(line: 268, column: 12, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4055, file: !3668, line: 268, column: 6)
!4069 = !DILocation(line: 268, column: 18, scope: !4068)
!4070 = !DILocation(line: 268, column: 21, scope: !4068)
!4071 = !DILocation(line: 268, column: 6, scope: !4055)
!4072 = !DILocation(line: 272, column: 23, scope: !4055)
!4073 = !DILocation(line: 273, column: 16, scope: !4055)
!4074 = !DILocation(line: 274, column: 8, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4055, file: !3668, line: 274, column: 6)
!4076 = !DILocation(line: 274, column: 6, scope: !4055)
!4077 = !DILocation(line: 279, column: 6, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4055, file: !3668, line: 279, column: 6)
!4079 = !DILocation(line: 279, column: 23, scope: !4078)
!4080 = !DILocation(line: 279, column: 6, scope: !4055)
!4081 = !DILocation(line: 280, column: 24, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !3668, line: 279, column: 35)
!4083 = !DILocation(line: 280, column: 3, scope: !4082)
!4084 = !DILocation(line: 281, column: 3, scope: !4082)
!4085 = !DILocation(line: 282, column: 2, scope: !4082)
!4086 = !DILocation(line: 284, column: 2, scope: !4055)
!4087 = !DILocation(line: 286, column: 8, scope: !4055)
!4088 = !DILocation(line: 298, column: 2, scope: !4055)
!4089 = !DILocation(line: 299, column: 1, scope: !4055)
!4090 = distinct !DISubprogram(name: "size_too_big", scope: !2577, file: !2577, line: 256, type: !4091, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4093)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!170, !2590, !357}
!4093 = !{!4094, !4095}
!4094 = !DILocalVariable(name: "h", arg: 1, scope: !4090, file: !2577, line: 256, type: !2590)
!4095 = !DILocalVariable(name: "bytes", arg: 2, scope: !4090, file: !2577, line: 256, type: !357)
!4096 = !DILocation(line: 0, scope: !4090)
!4097 = !DILocation(line: 262, column: 16, scope: !4090)
!4098 = !DILocation(line: 262, column: 36, scope: !4090)
!4099 = !DILocation(line: 262, column: 30, scope: !4090)
!4100 = !DILocation(line: 262, column: 2, scope: !4090)
!4101 = distinct !DISubprogram(name: "alloc_chunk", scope: !3668, file: !3668, line: 211, type: !4102, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4104)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!2595, !2590, !3794}
!4104 = !{!4105, !4106, !4107, !4108, !4109, !4112, !4113, !4115, !4116, !4119}
!4105 = !DILocalVariable(name: "h", arg: 1, scope: !4101, file: !3668, line: 211, type: !2590)
!4106 = !DILocalVariable(name: "sz", arg: 2, scope: !4101, file: !3668, line: 211, type: !3794)
!4107 = !DILocalVariable(name: "bi", scope: !4101, file: !3668, line: 213, type: !103)
!4108 = !DILocalVariable(name: "b", scope: !4101, file: !3668, line: 214, type: !3857)
!4109 = !DILocalVariable(name: "first", scope: !4110, file: !3668, line: 233, type: !2595)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !3668, line: 232, column: 15)
!4111 = distinct !DILexicalBlock(scope: !4101, file: !3668, line: 232, column: 6)
!4112 = !DILocalVariable(name: "i", scope: !4110, file: !3668, line: 234, type: !103)
!4113 = !DILocalVariable(name: "c", scope: !4114, file: !3668, line: 236, type: !2595)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !3668, line: 235, column: 6)
!4115 = !DILocalVariable(name: "bmask", scope: !4101, file: !3668, line: 249, type: !121)
!4116 = !DILocalVariable(name: "minbucket", scope: !4117, file: !3668, line: 252, type: !103)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !3668, line: 251, column: 19)
!4118 = distinct !DILexicalBlock(scope: !4101, file: !3668, line: 251, column: 6)
!4119 = !DILocalVariable(name: "c", scope: !4117, file: !3668, line: 253, type: !2595)
!4120 = !DILocation(line: 0, scope: !4101)
!4121 = !DILocation(line: 213, column: 11, scope: !4101)
!4122 = !DILocation(line: 232, column: 9, scope: !4111)
!4123 = !DILocation(line: 232, column: 6, scope: !4111)
!4124 = !DILocation(line: 232, column: 6, scope: !4101)
!4125 = !DILocation(line: 236, column: 21, scope: !4114)
!4126 = !DILocation(line: 0, scope: !4110)
!4127 = !DILocation(line: 0, scope: !4114)
!4128 = !DILocation(line: 237, column: 8, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4114, file: !3668, line: 237, column: 8)
!4130 = !DILocation(line: 237, column: 25, scope: !4129)
!4131 = !DILocation(line: 237, column: 8, scope: !4114)
!4132 = !DILocation(line: 238, column: 5, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4129, file: !3668, line: 237, column: 32)
!4134 = !DILocation(line: 241, column: 14, scope: !4114)
!4135 = !DILocation(line: 241, column: 12, scope: !4114)
!4136 = !DILocation(line: 243, column: 12, scope: !4110)
!4137 = !DILocation(line: 243, column: 16, scope: !4110)
!4138 = distinct !{!4138, !4139, !4140}
!4139 = !DILocation(line: 235, column: 3, scope: !4110)
!4140 = !DILocation(line: 243, column: 35, scope: !4110)
!4141 = !DILocation(line: 249, column: 22, scope: !4101)
!4142 = !DILocation(line: 249, column: 39, scope: !4101)
!4143 = !DILocation(line: 249, column: 36, scope: !4101)
!4144 = !DILocation(line: 251, column: 12, scope: !4118)
!4145 = !DILocation(line: 251, column: 6, scope: !4101)
!4146 = !DILocation(line: 252, column: 19, scope: !4117)
!4147 = !DILocation(line: 0, scope: !4117)
!4148 = !DILocation(line: 253, column: 39, scope: !4117)
!4149 = !DILocation(line: 255, column: 3, scope: !4117)
!4150 = !DILocation(line: 261, column: 1, scope: !4101)
!4151 = distinct !DISubprogram(name: "split_chunks", scope: !3668, file: !3668, line: 109, type: !3787, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4152)
!4152 = !{!4153, !4154, !4155, !4156, !4157, !4158}
!4153 = !DILocalVariable(name: "h", arg: 1, scope: !4151, file: !3668, line: 109, type: !2590)
!4154 = !DILocalVariable(name: "lc", arg: 2, scope: !4151, file: !3668, line: 109, type: !2595)
!4155 = !DILocalVariable(name: "rc", arg: 3, scope: !4151, file: !3668, line: 109, type: !2595)
!4156 = !DILocalVariable(name: "sz0", scope: !4151, file: !3668, line: 114, type: !3794)
!4157 = !DILocalVariable(name: "lsz", scope: !4151, file: !3668, line: 115, type: !3794)
!4158 = !DILocalVariable(name: "rsz", scope: !4151, file: !3668, line: 116, type: !3794)
!4159 = !DILocation(line: 0, scope: !4151)
!4160 = !DILocation(line: 114, column: 18, scope: !4151)
!4161 = !DILocation(line: 115, column: 21, scope: !4151)
!4162 = !DILocation(line: 116, column: 22, scope: !4151)
!4163 = !DILocation(line: 118, column: 2, scope: !4151)
!4164 = !DILocation(line: 119, column: 2, scope: !4151)
!4165 = !DILocation(line: 120, column: 2, scope: !4151)
!4166 = !DILocation(line: 121, column: 25, scope: !4151)
!4167 = !DILocation(line: 121, column: 2, scope: !4151)
!4168 = !DILocation(line: 122, column: 1, scope: !4151)
!4169 = distinct !DISubprogram(name: "chunk_mem", scope: !3668, file: !3668, line: 24, type: !4170, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4172)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!102, !2590, !2595}
!4172 = !{!4173, !4174, !4175, !4176}
!4173 = !DILocalVariable(name: "h", arg: 1, scope: !4169, file: !3668, line: 24, type: !2590)
!4174 = !DILocalVariable(name: "c", arg: 2, scope: !4169, file: !3668, line: 24, type: !2595)
!4175 = !DILocalVariable(name: "buf", scope: !4169, file: !3668, line: 26, type: !2584)
!4176 = !DILocalVariable(name: "ret", scope: !4169, file: !3668, line: 27, type: !274)
!4177 = !DILocation(line: 0, scope: !4169)
!4178 = !DILocation(line: 26, column: 22, scope: !4169)
!4179 = !DILocation(line: 27, column: 38, scope: !4169)
!4180 = !DILocation(line: 31, column: 2, scope: !4169)
!4181 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3668, file: !3668, line: 301, type: !4182, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4184)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{!102, !3671, !357, !357}
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196}
!4185 = !DILocalVariable(name: "heap", arg: 1, scope: !4181, file: !3668, line: 301, type: !3671)
!4186 = !DILocalVariable(name: "align", arg: 2, scope: !4181, file: !3668, line: 301, type: !357)
!4187 = !DILocalVariable(name: "bytes", arg: 3, scope: !4181, file: !3668, line: 301, type: !357)
!4188 = !DILocalVariable(name: "h", scope: !4181, file: !3668, line: 303, type: !2590)
!4189 = !DILocalVariable(name: "gap", scope: !4181, file: !3668, line: 304, type: !357)
!4190 = !DILocalVariable(name: "rew", scope: !4181, file: !3668, line: 304, type: !357)
!4191 = !DILocalVariable(name: "padded_sz", scope: !4181, file: !3668, line: 335, type: !3794)
!4192 = !DILocalVariable(name: "c0", scope: !4181, file: !3668, line: 336, type: !2595)
!4193 = !DILocalVariable(name: "mem", scope: !4181, file: !3668, line: 341, type: !274)
!4194 = !DILocalVariable(name: "end", scope: !4181, file: !3668, line: 345, type: !2584)
!4195 = !DILocalVariable(name: "c", scope: !4181, file: !3668, line: 348, type: !2595)
!4196 = !DILocalVariable(name: "c_end", scope: !4181, file: !3668, line: 349, type: !2595)
!4197 = !DILocation(line: 0, scope: !4181)
!4198 = !DILocation(line: 303, column: 27, scope: !4181)
!4199 = !DILocation(line: 313, column: 16, scope: !4181)
!4200 = !DILocation(line: 313, column: 14, scope: !4181)
!4201 = !DILocation(line: 314, column: 12, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4181, file: !3668, line: 314, column: 6)
!4203 = !DILocation(line: 314, column: 6, scope: !4181)
!4204 = !DILocation(line: 315, column: 9, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4202, file: !3668, line: 314, column: 20)
!4206 = !DILocation(line: 316, column: 9, scope: !4205)
!4207 = !DILocation(line: 318, column: 13, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !3668, line: 318, column: 7)
!4209 = distinct !DILexicalBlock(scope: !4202, file: !3668, line: 317, column: 9)
!4210 = !DILocation(line: 318, column: 7, scope: !4209)
!4211 = !DILocation(line: 319, column: 11, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4208, file: !3668, line: 318, column: 39)
!4213 = !DILocation(line: 319, column: 4, scope: !4212)
!4214 = !DILocation(line: 0, scope: !4202)
!4215 = !DILocation(line: 326, column: 12, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4181, file: !3668, line: 326, column: 6)
!4217 = !DILocation(line: 326, column: 17, scope: !4216)
!4218 = !DILocation(line: 326, column: 20, scope: !4216)
!4219 = !DILocation(line: 326, column: 6, scope: !4181)
!4220 = !DILocation(line: 335, column: 50, scope: !4181)
!4221 = !DILocation(line: 335, column: 58, scope: !4181)
!4222 = !DILocation(line: 335, column: 24, scope: !4181)
!4223 = !DILocation(line: 336, column: 17, scope: !4181)
!4224 = !DILocation(line: 338, column: 9, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4181, file: !3668, line: 338, column: 6)
!4226 = !DILocation(line: 338, column: 6, scope: !4181)
!4227 = !DILocation(line: 341, column: 17, scope: !4181)
!4228 = !DILocation(line: 344, column: 20, scope: !4181)
!4229 = !DILocation(line: 344, column: 8, scope: !4181)
!4230 = !DILocation(line: 344, column: 47, scope: !4181)
!4231 = !DILocation(line: 345, column: 39, scope: !4181)
!4232 = !DILocation(line: 348, column: 16, scope: !4181)
!4233 = !DILocation(line: 349, column: 26, scope: !4181)
!4234 = !DILocation(line: 349, column: 24, scope: !4181)
!4235 = !DILocation(line: 353, column: 8, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4181, file: !3668, line: 353, column: 6)
!4237 = !DILocation(line: 353, column: 6, scope: !4181)
!4238 = !DILocation(line: 354, column: 3, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4236, file: !3668, line: 353, column: 14)
!4240 = !DILocation(line: 355, column: 3, scope: !4239)
!4241 = !DILocation(line: 356, column: 2, scope: !4239)
!4242 = !DILocation(line: 359, column: 6, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4181, file: !3668, line: 359, column: 6)
!4244 = !DILocation(line: 359, column: 24, scope: !4243)
!4245 = !DILocation(line: 359, column: 6, scope: !4181)
!4246 = !DILocation(line: 360, column: 3, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4243, file: !3668, line: 359, column: 33)
!4248 = !DILocation(line: 361, column: 3, scope: !4247)
!4249 = !DILocation(line: 362, column: 2, scope: !4247)
!4250 = !DILocation(line: 364, column: 2, scope: !4181)
!4251 = !DILocation(line: 377, column: 1, scope: !4181)
!4252 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3668, file: !3668, line: 379, type: !4253, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4255)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!102, !3671, !102, !357, !357}
!4255 = !{!4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4271, !4272}
!4256 = !DILocalVariable(name: "heap", arg: 1, scope: !4252, file: !3668, line: 379, type: !3671)
!4257 = !DILocalVariable(name: "ptr", arg: 2, scope: !4252, file: !3668, line: 379, type: !102)
!4258 = !DILocalVariable(name: "align", arg: 3, scope: !4252, file: !3668, line: 380, type: !357)
!4259 = !DILocalVariable(name: "bytes", arg: 4, scope: !4252, file: !3668, line: 380, type: !357)
!4260 = !DILocalVariable(name: "h", scope: !4252, file: !3668, line: 382, type: !2590)
!4261 = !DILocalVariable(name: "c", scope: !4252, file: !3668, line: 399, type: !2595)
!4262 = !DILocalVariable(name: "rc", scope: !4252, file: !3668, line: 400, type: !2595)
!4263 = !DILocalVariable(name: "align_gap", scope: !4252, file: !3668, line: 401, type: !357)
!4264 = !DILocalVariable(name: "chunks_need", scope: !4252, file: !3668, line: 402, type: !3794)
!4265 = !DILocalVariable(name: "split_size", scope: !4266, file: !3668, line: 435, type: !3794)
!4266 = distinct !DILexicalBlock(scope: !4267, file: !3668, line: 433, column: 61)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3668, line: 432, column: 13)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !3668, line: 409, column: 13)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !3668, line: 406, column: 13)
!4270 = distinct !DILexicalBlock(scope: !4252, file: !3668, line: 404, column: 6)
!4271 = !DILocalVariable(name: "ptr2", scope: !4252, file: !3668, line: 474, type: !102)
!4272 = !DILocalVariable(name: "prev_size", scope: !4273, file: !3668, line: 477, type: !357)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !3668, line: 476, column: 20)
!4274 = distinct !DILexicalBlock(scope: !4252, file: !3668, line: 476, column: 6)
!4275 = !DILocation(line: 0, scope: !4252)
!4276 = !DILocation(line: 382, column: 27, scope: !4252)
!4277 = !DILocation(line: 385, column: 10, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4252, file: !3668, line: 385, column: 6)
!4279 = !DILocation(line: 385, column: 6, scope: !4252)
!4280 = !DILocation(line: 386, column: 10, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4278, file: !3668, line: 385, column: 19)
!4282 = !DILocation(line: 386, column: 3, scope: !4281)
!4283 = !DILocation(line: 388, column: 12, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4252, file: !3668, line: 388, column: 6)
!4285 = !DILocation(line: 388, column: 6, scope: !4252)
!4286 = !DILocation(line: 389, column: 3, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !3668, line: 388, column: 18)
!4288 = !DILocation(line: 390, column: 3, scope: !4287)
!4289 = !DILocation(line: 395, column: 6, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4252, file: !3668, line: 395, column: 6)
!4291 = !DILocation(line: 395, column: 6, scope: !4252)
!4292 = !DILocation(line: 399, column: 16, scope: !4252)
!4293 = !DILocation(line: 400, column: 17, scope: !4252)
!4294 = !DILocation(line: 401, column: 49, scope: !4252)
!4295 = !DILocation(line: 401, column: 36, scope: !4252)
!4296 = !DILocation(line: 402, column: 52, scope: !4252)
!4297 = !DILocation(line: 402, column: 26, scope: !4252)
!4298 = !DILocation(line: 404, column: 6, scope: !4270)
!4299 = !DILocation(line: 404, column: 12, scope: !4270)
!4300 = !DILocation(line: 404, column: 40, scope: !4270)
!4301 = !DILocation(line: 404, column: 31, scope: !4270)
!4302 = !DILocation(line: 404, column: 6, scope: !4252)
!4303 = !DILocation(line: 406, column: 13, scope: !4269)
!4304 = !DILocation(line: 406, column: 30, scope: !4269)
!4305 = !DILocation(line: 406, column: 13, scope: !4270)
!4306 = !DILocation(line: 409, column: 30, scope: !4268)
!4307 = !DILocation(line: 409, column: 13, scope: !4269)
!4308 = !DILocation(line: 420, column: 24, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4268, file: !3668, line: 409, column: 45)
!4310 = !DILocation(line: 420, column: 3, scope: !4309)
!4311 = !DILocation(line: 421, column: 3, scope: !4309)
!4312 = !DILocation(line: 422, column: 3, scope: !4309)
!4313 = !DILocation(line: 431, column: 3, scope: !4309)
!4314 = !DILocation(line: 432, column: 14, scope: !4267)
!4315 = !DILocation(line: 432, column: 32, scope: !4267)
!4316 = !DILocation(line: 433, column: 26, scope: !4267)
!4317 = !DILocation(line: 433, column: 24, scope: !4267)
!4318 = !DILocation(line: 433, column: 44, scope: !4267)
!4319 = !DILocation(line: 432, column: 13, scope: !4268)
!4320 = !DILocation(line: 435, column: 38, scope: !4266)
!4321 = !DILocation(line: 0, scope: !4266)
!4322 = !DILocation(line: 445, column: 3, scope: !4266)
!4323 = !DILocation(line: 447, column: 20, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4266, file: !3668, line: 447, column: 7)
!4325 = !DILocation(line: 447, column: 18, scope: !4324)
!4326 = !DILocation(line: 447, column: 7, scope: !4266)
!4327 = !DILocation(line: 448, column: 27, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4324, file: !3668, line: 447, column: 39)
!4329 = !DILocation(line: 448, column: 4, scope: !4328)
!4330 = !DILocation(line: 449, column: 4, scope: !4328)
!4331 = !DILocation(line: 450, column: 3, scope: !4328)
!4332 = !DILocation(line: 452, column: 3, scope: !4266)
!4333 = !DILocation(line: 453, column: 3, scope: !4266)
!4334 = !DILocation(line: 474, column: 15, scope: !4252)
!4335 = !DILocation(line: 476, column: 11, scope: !4274)
!4336 = !DILocation(line: 476, column: 6, scope: !4252)
!4337 = !DILocation(line: 477, column: 42, scope: !4273)
!4338 = !DILocation(line: 477, column: 22, scope: !4273)
!4339 = !DILocation(line: 477, column: 60, scope: !4273)
!4340 = !DILocation(line: 0, scope: !4273)
!4341 = !DILocation(line: 479, column: 21, scope: !4273)
!4342 = !DILocation(line: 479, column: 3, scope: !4273)
!4343 = !DILocation(line: 480, column: 3, scope: !4273)
!4344 = !DILocation(line: 481, column: 2, scope: !4273)
!4345 = !DILocation(line: 483, column: 1, scope: !4252)
!4346 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2577, file: !2577, line: 245, type: !4347, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!357, !2590, !3794}
!4349 = !{!4350, !4351}
!4350 = !DILocalVariable(name: "h", arg: 1, scope: !4346, file: !2577, line: 245, type: !2590)
!4351 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4346, file: !2577, line: 245, type: !3794)
!4352 = !DILocation(line: 0, scope: !4346)
!4353 = !DILocation(line: 247, column: 20, scope: !4346)
!4354 = !DILocation(line: 247, column: 33, scope: !4346)
!4355 = !DILocation(line: 247, column: 2, scope: !4346)
!4356 = distinct !DISubprogram(name: "sys_heap_init", scope: !3668, file: !3668, line: 485, type: !4357, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2573, retainedNodes: !4359)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{null, !3671, !102, !357}
!4359 = !{!4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369}
!4360 = !DILocalVariable(name: "heap", arg: 1, scope: !4356, file: !3668, line: 485, type: !3671)
!4361 = !DILocalVariable(name: "mem", arg: 2, scope: !4356, file: !3668, line: 485, type: !102)
!4362 = !DILocalVariable(name: "bytes", arg: 3, scope: !4356, file: !3668, line: 485, type: !357)
!4363 = !DILocalVariable(name: "addr", scope: !4356, file: !3668, line: 502, type: !22)
!4364 = !DILocalVariable(name: "end", scope: !4356, file: !3668, line: 503, type: !22)
!4365 = !DILocalVariable(name: "heap_sz", scope: !4356, file: !3668, line: 504, type: !3794)
!4366 = !DILocalVariable(name: "h", scope: !4356, file: !3668, line: 509, type: !2590)
!4367 = !DILocalVariable(name: "nb_buckets", scope: !4356, file: !3668, line: 520, type: !103)
!4368 = !DILocalVariable(name: "chunk0_size", scope: !4356, file: !3668, line: 521, type: !3794)
!4369 = !DILocalVariable(name: "i", scope: !4370, file: !3668, line: 526, type: !103)
!4370 = distinct !DILexicalBlock(scope: !4356, file: !3668, line: 526, column: 2)
!4371 = !DILocation(line: 0, scope: !4356)
!4372 = !DILocation(line: 499, column: 8, scope: !4356)
!4373 = !DILocation(line: 502, column: 19, scope: !4356)
!4374 = !DILocation(line: 503, column: 18, scope: !4356)
!4375 = !DILocation(line: 504, column: 27, scope: !4356)
!4376 = !DILocation(line: 504, column: 35, scope: !4356)
!4377 = !DILocation(line: 509, column: 21, scope: !4356)
!4378 = !DILocation(line: 510, column: 8, scope: !4356)
!4379 = !DILocation(line: 510, column: 13, scope: !4356)
!4380 = !DILocation(line: 511, column: 5, scope: !4356)
!4381 = !DILocation(line: 511, column: 15, scope: !4356)
!4382 = !DILocation(line: 512, column: 5, scope: !4356)
!4383 = !DILocation(line: 512, column: 19, scope: !4356)
!4384 = !DILocation(line: 520, column: 19, scope: !4356)
!4385 = !DILocation(line: 522, column: 21, scope: !4356)
!4386 = !DILocation(line: 521, column: 56, scope: !4356)
!4387 = !DILocation(line: 521, column: 26, scope: !4356)
!4388 = !DILocation(line: 0, scope: !4370)
!4389 = !DILocation(line: 526, column: 20, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4370, file: !3668, line: 526, column: 2)
!4391 = !DILocation(line: 526, column: 2, scope: !4370)
!4392 = !DILocation(line: 531, column: 2, scope: !4356)
!4393 = !DILocation(line: 532, column: 2, scope: !4356)
!4394 = !DILocation(line: 533, column: 2, scope: !4356)
!4395 = !DILocation(line: 536, column: 41, scope: !4356)
!4396 = !DILocation(line: 536, column: 2, scope: !4356)
!4397 = !DILocation(line: 537, column: 2, scope: !4356)
!4398 = !DILocation(line: 540, column: 2, scope: !4356)
!4399 = !DILocation(line: 541, column: 2, scope: !4356)
!4400 = !DILocation(line: 542, column: 2, scope: !4356)
!4401 = !DILocation(line: 544, column: 2, scope: !4356)
!4402 = !DILocation(line: 545, column: 1, scope: !4356)
!4403 = !DILocation(line: 527, column: 17, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4390, file: !3668, line: 526, column: 39)
!4405 = !DILocation(line: 527, column: 22, scope: !4404)
!4406 = !DILocation(line: 526, column: 35, scope: !4390)
!4407 = distinct !{!4407, !4391, !4408}
!4408 = !DILocation(line: 528, column: 2, scope: !4370)
!4409 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2610, file: !2610, line: 1338, type: !4410, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4418)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!103, !3398, !102, !157, !4412, !121}
!4412 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3364, line: 99, baseType: !4413)
!4413 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3364, line: 40, baseType: !4414)
!4414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2610, baseType: !4415)
!4415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4416)
!4416 = !{!4417}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4415, file: !2610, baseType: !102, size: 32)
!4418 = !{!4419, !4420, !4421, !4422, !4423, !4424, !4428, !4429, !4430, !4432, !4437, !4482, !4485, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4497, !4498, !4499, !4503, !4506, !4508, !4511, !4512, !4513, !4518, !4524, !4527, !4531, !4537, !4541, !4544, !4546, !4549}
!4419 = !DILocalVariable(name: "out", arg: 1, scope: !4409, file: !2610, line: 1338, type: !3398)
!4420 = !DILocalVariable(name: "ctx", arg: 2, scope: !4409, file: !2610, line: 1338, type: !102)
!4421 = !DILocalVariable(name: "fp", arg: 3, scope: !4409, file: !2610, line: 1338, type: !157)
!4422 = !DILocalVariable(name: "ap", arg: 4, scope: !4409, file: !2610, line: 1339, type: !4412)
!4423 = !DILocalVariable(name: "flags", arg: 5, scope: !4409, file: !2610, line: 1339, type: !121)
!4424 = !DILocalVariable(name: "buf", scope: !4409, file: !2610, line: 1341, type: !4425)
!4425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 176, elements: !4426)
!4426 = !{!4427}
!4427 = !DISubrange(count: 22)
!4428 = !DILocalVariable(name: "count", scope: !4409, file: !2610, line: 1342, type: !357)
!4429 = !DILocalVariable(name: "sint", scope: !4409, file: !2610, line: 1343, type: !2629)
!4430 = !DILocalVariable(name: "tagged_ap", scope: !4409, file: !2610, line: 1345, type: !4431)
!4431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!4432 = !DILocalVariable(name: "rc", scope: !4433, file: !2610, line: 1377, type: !103)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !2610, line: 1377, column: 4)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !2610, line: 1376, column: 19)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1376, column: 7)
!4436 = distinct !DILexicalBlock(scope: !4409, file: !2610, line: 1375, column: 19)
!4437 = !DILocalVariable(name: "state", scope: !4436, file: !2610, line: 1395, type: !4438)
!4438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4409, file: !2610, line: 1392, size: 192, elements: !4439)
!4439 = !{!4440, !4450}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4438, file: !2610, line: 1393, baseType: !4441, size: 64)
!4441 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2610, line: 166, size: 64, elements: !4442)
!4442 = !{!4443, !4444, !4445, !4447, !4449}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4441, file: !2610, line: 168, baseType: !2629, size: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4441, file: !2610, line: 171, baseType: !2632, size: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4441, file: !2610, line: 174, baseType: !4446, size: 64)
!4446 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4441, file: !2610, line: 177, baseType: !4448, size: 64)
!4448 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4441, file: !2610, line: 180, baseType: !102, size: 32)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4438, file: !2610, line: 1394, baseType: !4451, size: 96, offset: 64)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2610, line: 189, size: 96, elements: !4452)
!4452 = !{!4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4477}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4451, file: !2610, line: 191, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4451, file: !2610, line: 194, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4451, file: !2610, line: 197, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4451, file: !2610, line: 200, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4451, file: !2610, line: 203, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4451, file: !2610, line: 206, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4451, file: !2610, line: 209, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4451, file: !2610, line: 212, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4451, file: !2610, line: 219, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4451, file: !2610, line: 222, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4451, file: !2610, line: 229, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4451, file: !2610, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4451, file: !2610, line: 238, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4451, file: !2610, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4451, file: !2610, line: 244, baseType: !170, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4451, file: !2610, line: 247, baseType: !170, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4451, file: !2610, line: 252, baseType: !170, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4451, file: !2610, line: 257, baseType: !170, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4451, file: !2610, line: 260, baseType: !168, size: 8, offset: 24)
!4472 = !DIDerivedType(tag: DW_TAG_member, scope: !4451, file: !2610, line: 262, baseType: !4473, size: 32, offset: 32)
!4473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4451, file: !2610, line: 262, size: 32, elements: !4474)
!4474 = !{!4475, !4476}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4473, file: !2610, line: 267, baseType: !103, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4473, file: !2610, line: 289, baseType: !103, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, scope: !4451, file: !2610, line: 292, baseType: !4478, size: 32, offset: 64)
!4478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4451, file: !2610, line: 292, size: 32, elements: !4479)
!4479 = !{!4480, !4481}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4478, file: !2610, line: 297, baseType: !103, size: 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4478, file: !2610, line: 306, baseType: !103, size: 32)
!4482 = !DILocalVariable(name: "conv", scope: !4436, file: !2610, line: 1400, type: !4483)
!4483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4484)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 32)
!4485 = !DILocalVariable(name: "value", scope: !4436, file: !2610, line: 1401, type: !4486)
!4486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4487)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 32)
!4488 = !DILocalVariable(name: "sp", scope: !4436, file: !2610, line: 1402, type: !157)
!4489 = !DILocalVariable(name: "width", scope: !4436, file: !2610, line: 1403, type: !103)
!4490 = !DILocalVariable(name: "precision", scope: !4436, file: !2610, line: 1404, type: !103)
!4491 = !DILocalVariable(name: "bps", scope: !4436, file: !2610, line: 1405, type: !157)
!4492 = !DILocalVariable(name: "bpe", scope: !4436, file: !2610, line: 1406, type: !157)
!4493 = !DILocalVariable(name: "sign", scope: !4436, file: !2610, line: 1407, type: !159)
!4494 = !DILocalVariable(name: "arg", scope: !4495, file: !2610, line: 1432, type: !103)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !2610, line: 1431, column: 24)
!4496 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1431, column: 7)
!4497 = !DILocalVariable(name: "specifier_cat", scope: !4436, file: !2610, line: 1468, type: !2609)
!4498 = !DILocalVariable(name: "length_mod", scope: !4436, file: !2610, line: 1470, type: !2617)
!4499 = !DILocalVariable(name: "rc", scope: !4500, file: !2610, line: 1575, type: !103)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !2610, line: 1575, column: 4)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !2610, line: 1574, column: 43)
!4502 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1574, column: 7)
!4503 = !DILocalVariable(name: "rc", scope: !4504, file: !2610, line: 1584, type: !103)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1584, column: 4)
!4505 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1582, column: 28)
!4506 = !DILocalVariable(name: "len", scope: !4507, file: !2610, line: 1589, type: !357)
!4507 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1586, column: 13)
!4508 = !DILocalVariable(name: "len", scope: !4509, file: !2610, line: 1641, type: !357)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !2610, line: 1640, column: 24)
!4510 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1640, column: 8)
!4511 = !DILocalVariable(name: "nj_len", scope: !4436, file: !2610, line: 1722, type: !357)
!4512 = !DILocalVariable(name: "pad_len", scope: !4436, file: !2610, line: 1723, type: !103)
!4513 = !DILocalVariable(name: "pad", scope: !4514, file: !2610, line: 1751, type: !159)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2610, line: 1750, column: 26)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !2610, line: 1750, column: 8)
!4516 = distinct !DILexicalBlock(scope: !4517, file: !2610, line: 1747, column: 18)
!4517 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1747, column: 7)
!4518 = !DILocalVariable(name: "rc", scope: !4519, file: !2610, line: 1758, type: !103)
!4519 = distinct !DILexicalBlock(scope: !4520, file: !2610, line: 1758, column: 7)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2610, line: 1757, column: 21)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2610, line: 1757, column: 10)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !2610, line: 1756, column: 26)
!4523 = distinct !DILexicalBlock(scope: !4514, file: !2610, line: 1756, column: 9)
!4524 = !DILocalVariable(name: "rc", scope: !4525, file: !2610, line: 1765, type: !103)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !2610, line: 1765, column: 6)
!4526 = distinct !DILexicalBlock(scope: !4514, file: !2610, line: 1764, column: 25)
!4527 = !DILocalVariable(name: "rc", scope: !4528, file: !2610, line: 1774, type: !103)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !2610, line: 1774, column: 4)
!4529 = distinct !DILexicalBlock(scope: !4530, file: !2610, line: 1773, column: 18)
!4530 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1773, column: 7)
!4531 = !DILocalVariable(name: "rc", scope: !4532, file: !2610, line: 1819, type: !103)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !2610, line: 1819, column: 5)
!4533 = distinct !DILexicalBlock(scope: !4534, file: !2610, line: 1818, column: 44)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2610, line: 1818, column: 8)
!4535 = distinct !DILexicalBlock(scope: !4536, file: !2610, line: 1817, column: 10)
!4536 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1777, column: 7)
!4537 = !DILocalVariable(name: "rc", scope: !4538, file: !2610, line: 1823, type: !103)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !2610, line: 1823, column: 5)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2610, line: 1822, column: 26)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !2610, line: 1822, column: 8)
!4541 = !DILocalVariable(name: "rc", scope: !4542, file: !2610, line: 1828, type: !103)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !2610, line: 1828, column: 5)
!4543 = distinct !DILexicalBlock(scope: !4535, file: !2610, line: 1827, column: 26)
!4544 = !DILocalVariable(name: "rc", scope: !4545, file: !2610, line: 1831, type: !103)
!4545 = distinct !DILexicalBlock(scope: !4535, file: !2610, line: 1831, column: 4)
!4546 = !DILocalVariable(name: "rc", scope: !4547, file: !2610, line: 1836, type: !103)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !2610, line: 1836, column: 4)
!4548 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1835, column: 21)
!4549 = !DILabel(scope: !4505, name: "prec_int_pad0", file: !2610, line: 1634)
!4550 = !DILocation(line: 0, scope: !4409)
!4551 = !DILocation(line: 1341, column: 2, scope: !4409)
!4552 = !DILocation(line: 1341, column: 7, scope: !4409)
!4553 = !DILocation(line: 1375, column: 2, scope: !4409)
!4554 = !DILocation(line: 1342, column: 9, scope: !4409)
!4555 = !DILocation(line: 1375, column: 9, scope: !4409)
!4556 = !DILocation(line: 1377, column: 4, scope: !4433)
!4557 = !DILocation(line: 0, scope: !4433)
!4558 = !DILocation(line: 1377, column: 4, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4433, file: !2610, line: 1377, column: 4)
!4560 = distinct !{!4560, !4553, !4561}
!4561 = !DILocation(line: 1839, column: 2, scope: !4409)
!4562 = !DILocation(line: 1392, column: 3, scope: !4436)
!4563 = !DILocation(line: 1395, column: 5, scope: !4436)
!4564 = !DILocation(line: 0, scope: !4436)
!4565 = !DILocation(line: 1409, column: 8, scope: !4436)
!4566 = !DILocation(line: 1414, column: 13, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1414, column: 7)
!4568 = !DILocation(line: 1414, column: 7, scope: !4436)
!4569 = !DILocation(line: 1415, column: 12, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4567, file: !2610, line: 1414, column: 25)
!4571 = !DILocation(line: 1417, column: 14, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4570, file: !2610, line: 1417, column: 8)
!4573 = !DILocation(line: 1417, column: 8, scope: !4570)
!4574 = !DILocation(line: 1418, column: 21, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4572, file: !2610, line: 1417, column: 19)
!4576 = !DILocation(line: 1419, column: 13, scope: !4575)
!4577 = !DILocation(line: 1420, column: 4, scope: !4575)
!4578 = !DILocation(line: 1421, column: 20, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4567, file: !2610, line: 1421, column: 14)
!4580 = !DILocation(line: 1421, column: 14, scope: !4567)
!4581 = !DILocation(line: 1431, column: 13, scope: !4496)
!4582 = !DILocation(line: 1431, column: 7, scope: !4436)
!4583 = !DILocation(line: 1432, column: 14, scope: !4495)
!4584 = !DILocation(line: 0, scope: !4495)
!4585 = !DILocation(line: 1434, column: 12, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4495, file: !2610, line: 1434, column: 8)
!4587 = !DILocation(line: 1434, column: 8, scope: !4495)
!4588 = !DILocation(line: 1435, column: 24, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !2610, line: 1434, column: 17)
!4590 = !DILocation(line: 1436, column: 4, scope: !4589)
!4591 = !DILocation(line: 1439, column: 20, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4496, file: !2610, line: 1439, column: 14)
!4593 = !DILocation(line: 1439, column: 14, scope: !4496)
!4594 = !DILocation(line: 1469, column: 37, scope: !4436)
!4595 = !DILocation(line: 1448, column: 20, scope: !4436)
!4596 = !DILocation(line: 1449, column: 22, scope: !4436)
!4597 = !DILocation(line: 1471, column: 34, scope: !4436)
!4598 = !DILocation(line: 1478, column: 7, scope: !4436)
!4599 = !DILocation(line: 1479, column: 4, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !2610, line: 1478, column: 40)
!4601 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1478, column: 7)
!4602 = !DILocation(line: 1484, column: 19, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4600, file: !2610, line: 1479, column: 24)
!4604 = !DILocation(line: 1484, column: 17, scope: !4603)
!4605 = !DILocation(line: 1485, column: 5, scope: !4603)
!4606 = !DILocation(line: 1492, column: 20, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !2610, line: 1491, column: 12)
!4608 = distinct !DILexicalBlock(scope: !4603, file: !2610, line: 1487, column: 9)
!4609 = !DILocation(line: 1492, column: 18, scope: !4607)
!4610 = !DILocation(line: 1494, column: 5, scope: !4603)
!4611 = !DILocation(line: 1497, column: 23, scope: !4603)
!4612 = !DILocation(line: 1496, column: 17, scope: !4603)
!4613 = !DILocation(line: 1498, column: 5, scope: !4603)
!4614 = !DILocation(line: 1501, column: 23, scope: !4603)
!4615 = !DILocation(line: 1500, column: 17, scope: !4603)
!4616 = !DILocation(line: 1502, column: 5, scope: !4603)
!4617 = !DILocation(line: 1513, column: 23, scope: !4603)
!4618 = !DILocation(line: 1513, column: 6, scope: !4603)
!4619 = !DILocation(line: 1512, column: 17, scope: !4603)
!4620 = !DILocation(line: 1514, column: 5, scope: !4603)
!4621 = !DILocation(line: 0, scope: !4603)
!4622 = !DILocation(line: 1516, column: 8, scope: !4600)
!4623 = !DILocation(line: 1517, column: 19, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !2610, line: 1516, column: 33)
!4625 = distinct !DILexicalBlock(scope: !4600, file: !2610, line: 1516, column: 8)
!4626 = !DILocation(line: 1517, column: 17, scope: !4624)
!4627 = !DILocation(line: 1518, column: 4, scope: !4624)
!4628 = !DILocation(line: 1519, column: 19, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !2610, line: 1518, column: 39)
!4630 = distinct !DILexicalBlock(scope: !4625, file: !2610, line: 1518, column: 15)
!4631 = !DILocation(line: 1519, column: 17, scope: !4629)
!4632 = !DILocation(line: 1520, column: 4, scope: !4629)
!4633 = !DILocation(line: 1522, column: 4, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !2610, line: 1521, column: 47)
!4635 = distinct !DILexicalBlock(scope: !4601, file: !2610, line: 1521, column: 14)
!4636 = !DILocation(line: 1527, column: 19, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4634, file: !2610, line: 1522, column: 24)
!4638 = !DILocation(line: 1527, column: 17, scope: !4637)
!4639 = !DILocation(line: 1528, column: 5, scope: !4637)
!4640 = !DILocation(line: 0, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !2610, line: 1530, column: 9)
!4642 = !DILocation(line: 1540, column: 23, scope: !4637)
!4643 = !DILocation(line: 1539, column: 17, scope: !4637)
!4644 = !DILocation(line: 1542, column: 5, scope: !4637)
!4645 = !DILocation(line: 1545, column: 23, scope: !4637)
!4646 = !DILocation(line: 1544, column: 17, scope: !4637)
!4647 = !DILocation(line: 1547, column: 5, scope: !4637)
!4648 = !DILocation(line: 1551, column: 23, scope: !4637)
!4649 = !DILocation(line: 1551, column: 6, scope: !4637)
!4650 = !DILocation(line: 1550, column: 17, scope: !4637)
!4651 = !DILocation(line: 1552, column: 5, scope: !4637)
!4652 = !DILocation(line: 0, scope: !4637)
!4653 = !DILocation(line: 1554, column: 8, scope: !4634)
!4654 = !DILocation(line: 1555, column: 19, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !2610, line: 1554, column: 33)
!4656 = distinct !DILexicalBlock(scope: !4634, file: !2610, line: 1554, column: 8)
!4657 = !DILocation(line: 1555, column: 17, scope: !4655)
!4658 = !DILocation(line: 1556, column: 4, scope: !4655)
!4659 = !DILocation(line: 1557, column: 19, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2610, line: 1556, column: 39)
!4661 = distinct !DILexicalBlock(scope: !4656, file: !2610, line: 1556, column: 15)
!4662 = !DILocation(line: 1557, column: 17, scope: !4660)
!4663 = !DILocation(line: 1558, column: 4, scope: !4660)
!4664 = !DILocation(line: 0, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2610, line: 1560, column: 8)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !2610, line: 1559, column: 45)
!4667 = distinct !DILexicalBlock(scope: !4635, file: !2610, line: 1559, column: 14)
!4668 = !DILocation(line: 1566, column: 17, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2610, line: 1565, column: 46)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !2610, line: 1565, column: 14)
!4671 = !DILocation(line: 1566, column: 15, scope: !4669)
!4672 = !DILocation(line: 1567, column: 3, scope: !4669)
!4673 = !DILocation(line: 1574, column: 21, scope: !4502)
!4674 = !DILocation(line: 1575, column: 4, scope: !4500)
!4675 = !DILocation(line: 0, scope: !4500)
!4676 = !DILocation(line: 1575, column: 4, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4500, file: !2610, line: 1575, column: 4)
!4678 = !DILocation(line: 1582, column: 17, scope: !4436)
!4679 = !DILocation(line: 1582, column: 3, scope: !4436)
!4680 = !DILocation(line: 1584, column: 4, scope: !4504)
!4681 = !DILocation(line: 0, scope: !4504)
!4682 = !DILocation(line: 1584, column: 4, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4504, file: !2610, line: 1584, column: 4)
!4684 = !DILocation(line: 1587, column: 31, scope: !4507)
!4685 = !DILocation(line: 1591, column: 18, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4507, file: !2610, line: 1591, column: 8)
!4687 = !DILocation(line: 1591, column: 8, scope: !4507)
!4688 = !DILocation(line: 1592, column: 11, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !2610, line: 1591, column: 24)
!4690 = !DILocation(line: 0, scope: !4507)
!4691 = !DILocation(line: 1593, column: 4, scope: !4689)
!4692 = !DILocation(line: 1594, column: 11, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4686, file: !2610, line: 1593, column: 11)
!4694 = !DILocation(line: 1604, column: 51, scope: !4505)
!4695 = !DILocation(line: 1604, column: 13, scope: !4505)
!4696 = !DILocation(line: 1604, column: 11, scope: !4505)
!4697 = !DILocation(line: 1606, column: 4, scope: !4505)
!4698 = !DILocation(line: 1609, column: 14, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1609, column: 8)
!4700 = !DILocation(line: 1609, column: 8, scope: !4505)
!4701 = !DILocation(line: 1619, column: 18, scope: !4505)
!4702 = !DILocation(line: 1620, column: 13, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1620, column: 8)
!4704 = !DILocation(line: 1620, column: 8, scope: !4505)
!4705 = !DILocation(line: 1622, column: 36, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !2610, line: 1620, column: 18)
!4707 = !DILocation(line: 1622, column: 17, scope: !4706)
!4708 = !DILocation(line: 1623, column: 4, scope: !4706)
!4709 = !DILocation(line: 1632, column: 29, scope: !4505)
!4710 = !DILocation(line: 1632, column: 10, scope: !4505)
!4711 = !DILocation(line: 1632, column: 4, scope: !4505)
!4712 = !DILocation(line: 1407, column: 8, scope: !4436)
!4713 = !DILocation(line: 0, scope: !4505)
!4714 = !DILocation(line: 1634, column: 3, scope: !4505)
!4715 = !DILocation(line: 1640, column: 18, scope: !4510)
!4716 = !DILocation(line: 1640, column: 8, scope: !4505)
!4717 = !DILocation(line: 1729, column: 13, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1729, column: 7)
!4719 = !DILocation(line: 1641, column: 22, scope: !4509)
!4720 = !DILocation(line: 0, scope: !4509)
!4721 = !DILocation(line: 1646, column: 21, scope: !4509)
!4722 = !DILocation(line: 1649, column: 13, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4509, file: !2610, line: 1649, column: 9)
!4724 = !DILocation(line: 1649, column: 9, scope: !4509)
!4725 = !DILocation(line: 1650, column: 35, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4723, file: !2610, line: 1649, column: 34)
!4727 = !DILocation(line: 1650, column: 23, scope: !4726)
!4728 = !DILocation(line: 1651, column: 5, scope: !4726)
!4729 = !DILocation(line: 1660, column: 15, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1660, column: 8)
!4731 = !DILocation(line: 1660, column: 19, scope: !4730)
!4732 = !DILocation(line: 1660, column: 8, scope: !4505)
!4733 = !DILocation(line: 1661, column: 23, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !2610, line: 1660, column: 28)
!4735 = !DILocation(line: 1661, column: 11, scope: !4734)
!4736 = !DILocation(line: 1665, column: 22, scope: !4734)
!4737 = !DILocation(line: 1666, column: 21, scope: !4734)
!4738 = !DILocation(line: 1668, column: 5, scope: !4734)
!4739 = !DILocation(line: 1677, column: 30, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !2610, line: 1676, column: 49)
!4741 = distinct !DILexicalBlock(scope: !4505, file: !2610, line: 1676, column: 8)
!4742 = !DILocation(line: 1677, column: 5, scope: !4740)
!4743 = !DILocation(line: 1680, column: 4, scope: !4505)
!4744 = !DILocation(line: 0, scope: !4686)
!4745 = !DILocation(line: 1597, column: 14, scope: !4507)
!4746 = !DILocation(line: 1699, column: 11, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1699, column: 7)
!4748 = !DILocation(line: 1699, column: 7, scope: !4436)
!4749 = !DILocation(line: 1725, column: 7, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1725, column: 7)
!4751 = !DILocation(line: 1725, column: 12, scope: !4750)
!4752 = !DILocation(line: 1747, column: 13, scope: !4517)
!4753 = !DILocation(line: 1747, column: 7, scope: !4436)
!4754 = !DILocation(line: 1722, column: 24, scope: !4436)
!4755 = !DILocation(line: 1725, column: 7, scope: !4436)
!4756 = !DILocation(line: 1729, column: 7, scope: !4436)
!4757 = !DILocation(line: 1736, column: 13, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4436, file: !2610, line: 1736, column: 7)
!4759 = !DILocation(line: 1735, column: 19, scope: !4436)
!4760 = !DILocation(line: 1736, column: 7, scope: !4436)
!4761 = !DILocation(line: 1748, column: 10, scope: !4516)
!4762 = !DILocation(line: 1750, column: 15, scope: !4515)
!4763 = !DILocation(line: 1750, column: 8, scope: !4516)
!4764 = !DILocation(line: 0, scope: !4514)
!4765 = !DILocation(line: 1756, column: 15, scope: !4523)
!4766 = !DILocation(line: 1756, column: 9, scope: !4514)
!4767 = !DILocation(line: 1758, column: 7, scope: !4519)
!4768 = !DILocation(line: 0, scope: !4519)
!4769 = !DILocation(line: 1758, column: 7, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4519, file: !2610, line: 1758, column: 7)
!4771 = !DILocation(line: 1764, column: 5, scope: !4514)
!4772 = !DILocation(line: 0, scope: !4516)
!4773 = !DILocation(line: 1764, column: 20, scope: !4514)
!4774 = !DILocation(line: 1764, column: 17, scope: !4514)
!4775 = !DILocation(line: 1765, column: 6, scope: !4525)
!4776 = !DILocation(line: 0, scope: !4525)
!4777 = !DILocation(line: 1765, column: 6, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4525, file: !2610, line: 1765, column: 6)
!4779 = distinct !{!4779, !4771, !4780}
!4780 = !DILocation(line: 1766, column: 5, scope: !4514)
!4781 = !DILocation(line: 1773, column: 12, scope: !4530)
!4782 = !DILocation(line: 1773, column: 7, scope: !4436)
!4783 = !DILocation(line: 1773, column: 7, scope: !4530)
!4784 = !DILocation(line: 1774, column: 4, scope: !4528)
!4785 = !DILocation(line: 0, scope: !4528)
!4786 = !DILocation(line: 1774, column: 4, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4528, file: !2610, line: 1774, column: 4)
!4788 = !DILocation(line: 1818, column: 8, scope: !4534)
!4789 = !DILocation(line: 1818, column: 27, scope: !4534)
!4790 = !DILocation(line: 1818, column: 25, scope: !4534)
!4791 = !DILocation(line: 1818, column: 8, scope: !4535)
!4792 = !DILocation(line: 1819, column: 5, scope: !4532)
!4793 = !DILocation(line: 0, scope: !4532)
!4794 = !DILocation(line: 1819, column: 5, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4532, file: !2610, line: 1819, column: 5)
!4796 = !DILocation(line: 1822, column: 14, scope: !4540)
!4797 = !DILocation(line: 1822, column: 8, scope: !4535)
!4798 = !DILocation(line: 1823, column: 5, scope: !4538)
!4799 = !DILocation(line: 0, scope: !4538)
!4800 = !DILocation(line: 1823, column: 5, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4538, file: !2610, line: 1823, column: 5)
!4802 = !DILocation(line: 1826, column: 20, scope: !4535)
!4803 = !DILocation(line: 1827, column: 4, scope: !4535)
!4804 = !DILocation(line: 0, scope: !4535)
!4805 = !DILocation(line: 1827, column: 21, scope: !4535)
!4806 = !DILocation(line: 1827, column: 18, scope: !4535)
!4807 = !DILocation(line: 1828, column: 5, scope: !4542)
!4808 = !DILocation(line: 0, scope: !4542)
!4809 = !DILocation(line: 1828, column: 5, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4542, file: !2610, line: 1828, column: 5)
!4811 = distinct !{!4811, !4803, !4812}
!4812 = !DILocation(line: 1829, column: 4, scope: !4535)
!4813 = !DILocation(line: 1831, column: 4, scope: !4545)
!4814 = !DILocation(line: 0, scope: !4545)
!4815 = !DILocation(line: 1831, column: 4, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4545, file: !2610, line: 1831, column: 4)
!4817 = !DILocation(line: 1835, column: 16, scope: !4436)
!4818 = !DILocation(line: 1835, column: 3, scope: !4436)
!4819 = !DILocation(line: 1836, column: 4, scope: !4547)
!4820 = !DILocation(line: 0, scope: !4547)
!4821 = !DILocation(line: 1836, column: 4, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4547, file: !2610, line: 1836, column: 4)
!4823 = !DILocation(line: 1837, column: 4, scope: !4548)
!4824 = distinct !{!4824, !4818, !4825}
!4825 = !DILocation(line: 1838, column: 3, scope: !4436)
!4826 = !DILocation(line: 1844, column: 1, scope: !4409)
!4827 = distinct !DISubprogram(name: "extract_conversion", scope: !2610, file: !2610, line: 642, type: !4828, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4830)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!157, !4484, !157}
!4830 = !{!4831, !4832}
!4831 = !DILocalVariable(name: "conv", arg: 1, scope: !4827, file: !2610, line: 642, type: !4484)
!4832 = !DILocalVariable(name: "sp", arg: 2, scope: !4827, file: !2610, line: 643, type: !157)
!4833 = !DILocation(line: 0, scope: !4827)
!4834 = !DILocation(line: 645, column: 10, scope: !4827)
!4835 = !DILocation(line: 653, column: 2, scope: !4827)
!4836 = !DILocation(line: 654, column: 6, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4827, file: !2610, line: 654, column: 6)
!4838 = !DILocation(line: 654, column: 10, scope: !4837)
!4839 = !DILocation(line: 654, column: 6, scope: !4827)
!4840 = !DILocation(line: 655, column: 24, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !2610, line: 654, column: 18)
!4842 = !DILocation(line: 655, column: 19, scope: !4841)
!4843 = !DILocation(line: 656, column: 3, scope: !4841)
!4844 = !DILocation(line: 659, column: 7, scope: !4827)
!4845 = !DILocation(line: 660, column: 7, scope: !4827)
!4846 = !DILocation(line: 661, column: 7, scope: !4827)
!4847 = !DILocation(line: 662, column: 7, scope: !4827)
!4848 = !DILocation(line: 663, column: 7, scope: !4827)
!4849 = !DILocation(line: 665, column: 2, scope: !4827)
!4850 = !DILocation(line: 666, column: 1, scope: !4827)
!4851 = distinct !DISubprogram(name: "outs", scope: !2610, file: !2610, line: 1319, type: !4852, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4854)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{!103, !3398, !102, !157, !157}
!4854 = !{!4855, !4856, !4857, !4858, !4859, !4860}
!4855 = !DILocalVariable(name: "out", arg: 1, scope: !4851, file: !2610, line: 1319, type: !3398)
!4856 = !DILocalVariable(name: "ctx", arg: 2, scope: !4851, file: !2610, line: 1320, type: !102)
!4857 = !DILocalVariable(name: "sp", arg: 3, scope: !4851, file: !2610, line: 1321, type: !157)
!4858 = !DILocalVariable(name: "ep", arg: 4, scope: !4851, file: !2610, line: 1322, type: !157)
!4859 = !DILocalVariable(name: "count", scope: !4851, file: !2610, line: 1324, type: !357)
!4860 = !DILocalVariable(name: "rc", scope: !4861, file: !2610, line: 1327, type: !103)
!4861 = distinct !DILexicalBlock(scope: !4851, file: !2610, line: 1326, column: 45)
!4862 = !DILocation(line: 0, scope: !4851)
!4863 = !DILocation(line: 1326, column: 2, scope: !4851)
!4864 = !DILocation(line: 1324, column: 9, scope: !4851)
!4865 = !DILocation(line: 1326, column: 13, scope: !4851)
!4866 = !DILocation(line: 1326, column: 19, scope: !4851)
!4867 = !DILocation(line: 1327, column: 21, scope: !4861)
!4868 = !DILocation(line: 1326, column: 36, scope: !4851)
!4869 = !DILocation(line: 1326, column: 39, scope: !4851)
!4870 = !DILocation(line: 1327, column: 24, scope: !4861)
!4871 = !DILocation(line: 1327, column: 16, scope: !4861)
!4872 = !DILocation(line: 1327, column: 12, scope: !4861)
!4873 = !DILocation(line: 0, scope: !4861)
!4874 = !DILocation(line: 1329, column: 10, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4861, file: !2610, line: 1329, column: 7)
!4876 = !DILocation(line: 1329, column: 7, scope: !4861)
!4877 = distinct !{!4877, !4863, !4878}
!4878 = !DILocation(line: 1333, column: 2, scope: !4851)
!4879 = !DILocation(line: 1336, column: 1, scope: !4851)
!4880 = distinct !DISubprogram(name: "encode_uint", scope: !2610, file: !2610, line: 788, type: !4881, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4883)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!1128, !2632, !4484, !1128, !157}
!4883 = !{!4884, !4885, !4886, !4887, !4888, !4889, !4891, !4892}
!4884 = !DILocalVariable(name: "value", arg: 1, scope: !4880, file: !2610, line: 788, type: !2632)
!4885 = !DILocalVariable(name: "conv", arg: 2, scope: !4880, file: !2610, line: 789, type: !4484)
!4886 = !DILocalVariable(name: "bps", arg: 3, scope: !4880, file: !2610, line: 790, type: !1128)
!4887 = !DILocalVariable(name: "bpe", arg: 4, scope: !4880, file: !2610, line: 791, type: !157)
!4888 = !DILocalVariable(name: "upcase", scope: !4880, file: !2610, line: 793, type: !170)
!4889 = !DILocalVariable(name: "radix", scope: !4880, file: !2610, line: 794, type: !4890)
!4890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4891 = !DILocalVariable(name: "bp", scope: !4880, file: !2610, line: 795, type: !1128)
!4892 = !DILocalVariable(name: "lsv", scope: !4893, file: !2610, line: 798, type: !32)
!4893 = distinct !DILexicalBlock(scope: !4880, file: !2610, line: 797, column: 5)
!4894 = !DILocation(line: 0, scope: !4880)
!4895 = !DILocation(line: 793, column: 35, scope: !4880)
!4896 = !DILocation(line: 793, column: 24, scope: !4880)
!4897 = !DILocation(line: 793, column: 16, scope: !4880)
!4898 = !DILocation(line: 794, column: 29, scope: !4880)
!4899 = !DILocation(line: 795, column: 24, scope: !4880)
!4900 = !DILocation(line: 795, column: 17, scope: !4880)
!4901 = !DILocation(line: 797, column: 2, scope: !4880)
!4902 = !DILocation(line: 802, column: 9, scope: !4893)
!4903 = !DILocation(line: 798, column: 22, scope: !4893)
!4904 = !DILocation(line: 0, scope: !4893)
!4905 = !DILocation(line: 800, column: 16, scope: !4893)
!4906 = !DILocation(line: 800, column: 11, scope: !4893)
!4907 = !DILocation(line: 800, column: 4, scope: !4893)
!4908 = !DILocation(line: 800, column: 9, scope: !4893)
!4909 = !DILocation(line: 803, column: 18, scope: !4880)
!4910 = !DILocation(line: 803, column: 24, scope: !4880)
!4911 = !DILocation(line: 803, column: 2, scope: !4893)
!4912 = distinct !{!4912, !4901, !4913}
!4913 = !DILocation(line: 803, column: 37, scope: !4880)
!4914 = !DILocation(line: 808, column: 12, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4880, file: !2610, line: 808, column: 6)
!4916 = !DILocation(line: 808, column: 6, scope: !4880)
!4917 = !DILocation(line: 809, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4915, file: !2610, line: 808, column: 23)
!4919 = !DILocation(line: 813, column: 3, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4921, file: !2610, line: 811, column: 27)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !2610, line: 811, column: 14)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !2610, line: 809, column: 7)
!4923 = !DILocation(line: 0, scope: !4922)
!4924 = !DILocation(line: 818, column: 2, scope: !4880)
!4925 = distinct !DISubprogram(name: "store_count", scope: !2610, file: !2610, line: 1280, type: !4926, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4930)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{null, !4928, !102, !103}
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 32)
!4929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4451)
!4930 = !{!4931, !4932, !4933}
!4931 = !DILocalVariable(name: "conv", arg: 1, scope: !4925, file: !2610, line: 1280, type: !4928)
!4932 = !DILocalVariable(name: "dp", arg: 2, scope: !4925, file: !2610, line: 1281, type: !102)
!4933 = !DILocalVariable(name: "count", arg: 3, scope: !4925, file: !2610, line: 1282, type: !103)
!4934 = !DILocation(line: 0, scope: !4925)
!4935 = !DILocation(line: 1284, column: 38, scope: !4925)
!4936 = !DILocation(line: 1284, column: 2, scope: !4925)
!4937 = !DILocation(line: 1286, column: 4, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4925, file: !2610, line: 1284, column: 50)
!4939 = !DILocation(line: 1286, column: 14, scope: !4938)
!4940 = !DILocation(line: 1287, column: 3, scope: !4938)
!4941 = !DILocation(line: 1289, column: 24, scope: !4938)
!4942 = !DILocation(line: 1289, column: 22, scope: !4938)
!4943 = !DILocation(line: 1290, column: 3, scope: !4938)
!4944 = !DILocation(line: 1292, column: 18, scope: !4938)
!4945 = !DILocation(line: 1292, column: 4, scope: !4938)
!4946 = !DILocation(line: 1292, column: 16, scope: !4938)
!4947 = !DILocation(line: 1293, column: 3, scope: !4938)
!4948 = !DILocation(line: 1295, column: 4, scope: !4938)
!4949 = !DILocation(line: 1295, column: 15, scope: !4938)
!4950 = !DILocation(line: 1296, column: 3, scope: !4938)
!4951 = !DILocation(line: 1298, column: 22, scope: !4938)
!4952 = !DILocation(line: 1298, column: 4, scope: !4938)
!4953 = !DILocation(line: 1298, column: 20, scope: !4938)
!4954 = !DILocation(line: 1299, column: 3, scope: !4938)
!4955 = !DILocation(line: 1301, column: 21, scope: !4938)
!4956 = !DILocation(line: 1301, column: 4, scope: !4938)
!4957 = !DILocation(line: 1301, column: 19, scope: !4938)
!4958 = !DILocation(line: 1302, column: 3, scope: !4938)
!4959 = !DILocation(line: 1304, column: 4, scope: !4938)
!4960 = !DILocation(line: 1304, column: 17, scope: !4938)
!4961 = !DILocation(line: 1305, column: 3, scope: !4938)
!4962 = !DILocation(line: 1307, column: 4, scope: !4938)
!4963 = !DILocation(line: 1307, column: 20, scope: !4938)
!4964 = !DILocation(line: 1308, column: 3, scope: !4938)
!4965 = !DILocation(line: 1316, column: 1, scope: !4925)
!4966 = distinct !DISubprogram(name: "isupper", scope: !4967, file: !4967, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4968)
!4967 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4968 = !{!4969}
!4969 = !DILocalVariable(name: "a", arg: 1, scope: !4966, file: !4967, line: 16, type: !103)
!4970 = !DILocation(line: 0, scope: !4966)
!4971 = !DILocation(line: 18, column: 29, scope: !4966)
!4972 = !DILocation(line: 18, column: 45, scope: !4966)
!4973 = !DILocation(line: 18, column: 2, scope: !4966)
!4974 = distinct !DISubprogram(name: "conversion_radix", scope: !2610, file: !2610, line: 761, type: !4975, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4977)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!357, !159}
!4977 = !{!4978}
!4978 = !DILocalVariable(name: "specifier", arg: 1, scope: !4974, file: !2610, line: 761, type: !159)
!4979 = !DILocation(line: 0, scope: !4974)
!4980 = !DILocation(line: 763, column: 2, scope: !4974)
!4981 = !DILocation(line: 770, column: 3, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4974, file: !2610, line: 763, column: 21)
!4983 = !DILocation(line: 774, column: 3, scope: !4982)
!4984 = !DILocation(line: 0, scope: !4982)
!4985 = !DILocation(line: 776, column: 1, scope: !4974)
!4986 = distinct !DISubprogram(name: "extract_flags", scope: !2610, file: !2610, line: 339, type: !4828, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !4987)
!4987 = !{!4988, !4989, !4990}
!4988 = !DILocalVariable(name: "conv", arg: 1, scope: !4986, file: !2610, line: 339, type: !4484)
!4989 = !DILocalVariable(name: "sp", arg: 2, scope: !4986, file: !2610, line: 340, type: !157)
!4990 = !DILocalVariable(name: "loop", scope: !4986, file: !2610, line: 342, type: !170)
!4991 = !DILocation(line: 0, scope: !4986)
!4992 = !DILocation(line: 344, column: 2, scope: !4986)
!4993 = !DILocation(line: 345, column: 11, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4986, file: !2610, line: 344, column: 5)
!4995 = !DILocation(line: 345, column: 3, scope: !4994)
!4996 = !DILocation(line: 351, column: 4, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4994, file: !2610, line: 345, column: 16)
!4998 = !DILocation(line: 354, column: 4, scope: !4997)
!4999 = !DILocation(line: 357, column: 4, scope: !4997)
!5000 = !DILocation(line: 360, column: 4, scope: !4997)
!5001 = !DILocation(line: 0, scope: !4997)
!5002 = !DILocation(line: 370, column: 12, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4986, file: !2610, line: 370, column: 6)
!5004 = !DILocation(line: 370, column: 22, scope: !5003)
!5005 = !DILocation(line: 371, column: 19, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !2610, line: 370, column: 42)
!5007 = !DILocation(line: 372, column: 2, scope: !5006)
!5008 = !DILocation(line: 376, column: 2, scope: !4986)
!5009 = distinct !DISubprogram(name: "extract_width", scope: !2610, file: !2610, line: 388, type: !4828, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5010)
!5010 = !{!5011, !5012, !5013, !5014}
!5011 = !DILocalVariable(name: "conv", arg: 1, scope: !5009, file: !2610, line: 388, type: !4484)
!5012 = !DILocalVariable(name: "sp", arg: 2, scope: !5009, file: !2610, line: 389, type: !157)
!5013 = !DILocalVariable(name: "wp", scope: !5009, file: !2610, line: 398, type: !157)
!5014 = !DILocalVariable(name: "width", scope: !5009, file: !2610, line: 399, type: !357)
!5015 = !DILocation(line: 0, scope: !5009)
!5016 = !DILocation(line: 391, column: 8, scope: !5009)
!5017 = !DILocation(line: 391, column: 22, scope: !5009)
!5018 = !DILocation(line: 393, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5009, file: !2610, line: 393, column: 6)
!5020 = !DILocation(line: 393, column: 10, scope: !5019)
!5021 = !DILocation(line: 393, column: 6, scope: !5009)
!5022 = !DILocation(line: 394, column: 20, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !2610, line: 393, column: 18)
!5024 = !DILocation(line: 395, column: 10, scope: !5023)
!5025 = !DILocation(line: 395, column: 3, scope: !5023)
!5026 = !DILocation(line: 399, column: 17, scope: !5009)
!5027 = !DILocation(line: 401, column: 6, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5009, file: !2610, line: 401, column: 6)
!5029 = !DILocation(line: 401, column: 9, scope: !5028)
!5030 = !DILocation(line: 401, column: 6, scope: !5009)
!5031 = !DILocation(line: 402, column: 23, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !2610, line: 401, column: 16)
!5033 = !DILocation(line: 403, column: 9, scope: !5032)
!5034 = !DILocation(line: 403, column: 21, scope: !5032)
!5035 = !DILocation(line: 405, column: 11, scope: !5032)
!5036 = !DILocation(line: 404, column: 21, scope: !5032)
!5037 = !DILocation(line: 406, column: 2, scope: !5032)
!5038 = !DILocation(line: 409, column: 1, scope: !5009)
!5039 = distinct !DISubprogram(name: "extract_prec", scope: !2610, file: !2610, line: 420, type: !4828, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5040)
!5040 = !{!5041, !5042, !5043}
!5041 = !DILocalVariable(name: "conv", arg: 1, scope: !5039, file: !2610, line: 420, type: !4484)
!5042 = !DILocalVariable(name: "sp", arg: 2, scope: !5039, file: !2610, line: 421, type: !157)
!5043 = !DILocalVariable(name: "prec", scope: !5039, file: !2610, line: 435, type: !357)
!5044 = !DILocation(line: 0, scope: !5039)
!5045 = !DILocation(line: 423, column: 24, scope: !5039)
!5046 = !DILocation(line: 423, column: 28, scope: !5039)
!5047 = !DILocation(line: 423, column: 8, scope: !5039)
!5048 = !DILocation(line: 423, column: 21, scope: !5039)
!5049 = !DILocation(line: 425, column: 6, scope: !5039)
!5050 = !DILocation(line: 428, column: 2, scope: !5039)
!5051 = !DILocation(line: 430, column: 6, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5039, file: !2610, line: 430, column: 6)
!5053 = !DILocation(line: 430, column: 10, scope: !5052)
!5054 = !DILocation(line: 430, column: 6, scope: !5039)
!5055 = !DILocation(line: 431, column: 19, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5052, file: !2610, line: 430, column: 18)
!5057 = !DILocation(line: 432, column: 10, scope: !5056)
!5058 = !DILocation(line: 432, column: 3, scope: !5056)
!5059 = !DILocation(line: 435, column: 16, scope: !5039)
!5060 = !DILocation(line: 437, column: 8, scope: !5039)
!5061 = !DILocation(line: 437, column: 19, scope: !5039)
!5062 = !DILocation(line: 439, column: 10, scope: !5039)
!5063 = !DILocation(line: 438, column: 20, scope: !5039)
!5064 = !DILocation(line: 441, column: 9, scope: !5039)
!5065 = !DILocation(line: 442, column: 1, scope: !5039)
!5066 = distinct !DISubprogram(name: "extract_length", scope: !2610, file: !2610, line: 453, type: !4828, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5067)
!5067 = !{!5068, !5069}
!5068 = !DILocalVariable(name: "conv", arg: 1, scope: !5066, file: !2610, line: 453, type: !4484)
!5069 = !DILocalVariable(name: "sp", arg: 2, scope: !5066, file: !2610, line: 454, type: !157)
!5070 = !DILocation(line: 0, scope: !5066)
!5071 = !DILocation(line: 456, column: 10, scope: !5066)
!5072 = !DILocation(line: 456, column: 2, scope: !5066)
!5073 = !DILocation(line: 458, column: 8, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !2610, line: 458, column: 7)
!5075 = distinct !DILexicalBlock(scope: !5066, file: !2610, line: 456, column: 15)
!5076 = !DILocation(line: 458, column: 7, scope: !5074)
!5077 = !DILocation(line: 458, column: 13, scope: !5074)
!5078 = !DILocation(line: 0, scope: !5074)
!5079 = !DILocation(line: 458, column: 7, scope: !5075)
!5080 = !DILocation(line: 459, column: 21, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5074, file: !2610, line: 458, column: 21)
!5082 = !DILocation(line: 460, column: 4, scope: !5081)
!5083 = !DILocation(line: 461, column: 3, scope: !5081)
!5084 = !DILocation(line: 462, column: 21, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5074, file: !2610, line: 461, column: 10)
!5086 = !DILocation(line: 466, column: 8, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5075, file: !2610, line: 466, column: 7)
!5088 = !DILocation(line: 466, column: 7, scope: !5087)
!5089 = !DILocation(line: 466, column: 13, scope: !5087)
!5090 = !DILocation(line: 0, scope: !5087)
!5091 = !DILocation(line: 466, column: 7, scope: !5075)
!5092 = !DILocation(line: 467, column: 21, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5087, file: !2610, line: 466, column: 21)
!5094 = !DILocation(line: 468, column: 4, scope: !5093)
!5095 = !DILocation(line: 469, column: 3, scope: !5093)
!5096 = !DILocation(line: 470, column: 21, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5087, file: !2610, line: 469, column: 10)
!5098 = !DILocation(line: 474, column: 9, scope: !5075)
!5099 = !DILocation(line: 474, column: 20, scope: !5075)
!5100 = !DILocation(line: 475, column: 3, scope: !5075)
!5101 = !DILocation(line: 476, column: 3, scope: !5075)
!5102 = !DILocation(line: 478, column: 9, scope: !5075)
!5103 = !DILocation(line: 478, column: 20, scope: !5075)
!5104 = !DILocation(line: 479, column: 3, scope: !5075)
!5105 = !DILocation(line: 480, column: 3, scope: !5075)
!5106 = !DILocation(line: 482, column: 9, scope: !5075)
!5107 = !DILocation(line: 482, column: 20, scope: !5075)
!5108 = !DILocation(line: 483, column: 3, scope: !5075)
!5109 = !DILocation(line: 484, column: 3, scope: !5075)
!5110 = !DILocation(line: 486, column: 9, scope: !5075)
!5111 = !DILocation(line: 486, column: 20, scope: !5075)
!5112 = !DILocation(line: 487, column: 3, scope: !5075)
!5113 = !DILocation(line: 492, column: 21, scope: !5075)
!5114 = !DILocation(line: 493, column: 3, scope: !5075)
!5115 = !DILocation(line: 495, column: 9, scope: !5075)
!5116 = !DILocation(line: 495, column: 20, scope: !5075)
!5117 = !DILocation(line: 496, column: 3, scope: !5075)
!5118 = !DILocation(line: 498, column: 2, scope: !5066)
!5119 = distinct !DISubprogram(name: "extract_specifier", scope: !2610, file: !2610, line: 513, type: !4828, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5120)
!5120 = !{!5121, !5122, !5123, !5124}
!5121 = !DILocalVariable(name: "conv", arg: 1, scope: !5119, file: !2610, line: 513, type: !4484)
!5122 = !DILocalVariable(name: "sp", arg: 2, scope: !5119, file: !2610, line: 514, type: !157)
!5123 = !DILocalVariable(name: "unsupported", scope: !5119, file: !2610, line: 516, type: !170)
!5124 = !DILabel(scope: !5125, name: "int_conv", file: !2610, line: 526)
!5125 = distinct !DILexicalBlock(scope: !5119, file: !2610, line: 520, column: 27)
!5126 = !DILocation(line: 0, scope: !5119)
!5127 = !DILocation(line: 518, column: 20, scope: !5119)
!5128 = !DILocation(line: 518, column: 8, scope: !5119)
!5129 = !DILocation(line: 518, column: 18, scope: !5119)
!5130 = !DILocation(line: 520, column: 2, scope: !5119)
!5131 = !DILocation(line: 525, column: 3, scope: !5125)
!5132 = !DILocation(line: 0, scope: !5125)
!5133 = !DILocation(line: 526, column: 1, scope: !5125)
!5134 = !DILocation(line: 528, column: 24, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5125, file: !2610, line: 528, column: 7)
!5136 = !DILocation(line: 528, column: 7, scope: !5125)
!5137 = !DILocation(line: 535, column: 23, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5125, file: !2610, line: 535, column: 7)
!5139 = !DILocation(line: 535, column: 7, scope: !5125)
!5140 = !DILocation(line: 536, column: 36, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !2610, line: 535, column: 31)
!5142 = !DILocation(line: 537, column: 3, scope: !5141)
!5143 = !DILocation(line: 570, column: 9, scope: !5125)
!5144 = !DILocation(line: 570, column: 23, scope: !5125)
!5145 = !DILocation(line: 575, column: 4, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !2610, line: 573, column: 48)
!5147 = distinct !DILexicalBlock(scope: !5125, file: !2610, line: 573, column: 7)
!5148 = !DILocation(line: 603, column: 9, scope: !5125)
!5149 = !DILocation(line: 603, column: 23, scope: !5125)
!5150 = !DILocation(line: 605, column: 24, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5125, file: !2610, line: 605, column: 7)
!5152 = !DILocation(line: 605, column: 7, scope: !5125)
!5153 = !DILocation(line: 612, column: 9, scope: !5125)
!5154 = !DILocation(line: 612, column: 23, scope: !5125)
!5155 = !DILocation(line: 619, column: 24, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5125, file: !2610, line: 619, column: 7)
!5157 = !DILocation(line: 619, column: 7, scope: !5125)
!5158 = !DILocation(line: 625, column: 9, scope: !5125)
!5159 = !DILocation(line: 625, column: 17, scope: !5125)
!5160 = !DILocation(line: 626, column: 3, scope: !5125)
!5161 = !DILocation(line: 629, column: 20, scope: !5119)
!5162 = !DILocation(line: 629, column: 8, scope: !5119)
!5163 = !DILocation(line: 518, column: 23, scope: !5119)
!5164 = !DILocation(line: 631, column: 2, scope: !5119)
!5165 = distinct !DISubprogram(name: "extract_decimal", scope: !2610, file: !2610, line: 318, type: !5166, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5169)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!357, !5168}
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!5169 = !{!5170, !5171, !5172}
!5170 = !DILocalVariable(name: "str", arg: 1, scope: !5165, file: !2610, line: 318, type: !5168)
!5171 = !DILocalVariable(name: "sp", scope: !5165, file: !2610, line: 320, type: !157)
!5172 = !DILocalVariable(name: "val", scope: !5165, file: !2610, line: 321, type: !357)
!5173 = !DILocation(line: 0, scope: !5165)
!5174 = !DILocation(line: 320, column: 19, scope: !5165)
!5175 = !DILocation(line: 323, column: 37, scope: !5165)
!5176 = !DILocation(line: 323, column: 17, scope: !5165)
!5177 = !DILocation(line: 323, column: 9, scope: !5165)
!5178 = !DILocation(line: 323, column: 2, scope: !5165)
!5179 = !DILocation(line: 324, column: 13, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5165, file: !2610, line: 323, column: 43)
!5181 = !DILocation(line: 324, column: 24, scope: !5180)
!5182 = !DILocation(line: 324, column: 19, scope: !5180)
!5183 = !DILocation(line: 324, column: 27, scope: !5180)
!5184 = distinct !{!5184, !5178, !5185}
!5185 = !DILocation(line: 325, column: 2, scope: !5165)
!5186 = !DILocation(line: 326, column: 7, scope: !5165)
!5187 = !DILocation(line: 327, column: 2, scope: !5165)
!5188 = distinct !DISubprogram(name: "isdigit", scope: !4967, file: !4967, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2606, retainedNodes: !5189)
!5189 = !{!5190}
!5190 = !DILocalVariable(name: "a", arg: 1, scope: !5188, file: !4967, line: 43, type: !103)
!5191 = !DILocation(line: 0, scope: !5188)
!5192 = !DILocation(line: 45, column: 29, scope: !5188)
!5193 = !DILocation(line: 45, column: 45, scope: !5188)
!5194 = !DILocation(line: 45, column: 2, scope: !5188)
!5195 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5196, file: !5196, line: 9, type: !3217, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2643, retainedNodes: !474)
!5196 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!5197 = !DILocation(line: 11, column: 1, scope: !5195)
!5198 = !{i64 2147561088, i64 2147561131, i64 2147561171}
!5199 = !DILocation(line: 12, column: 1, scope: !5195)
!5200 = !{i64 2147565315, i64 2147565358, i64 2147565398}
!5201 = !DILocation(line: 13, column: 1, scope: !5195)
!5202 = !{i64 2147565524, i64 2147565567, i64 2147565607}
!5203 = !DILocation(line: 14, column: 1, scope: !5195)
!5204 = !{i64 2147565741, i64 2147565784, i64 2147565824}
!5205 = !DILocation(line: 15, column: 1, scope: !5195)
!5206 = !{i64 2147565910, i64 2147565953, i64 2147565993}
!5207 = !DILocation(line: 16, column: 1, scope: !5195)
!5208 = !{i64 2147566073, i64 2147566116, i64 2147566156}
!5209 = !DILocation(line: 17, column: 1, scope: !5195)
!5210 = !{i64 2147566257, i64 2147566300, i64 2147566340}
!5211 = !DILocation(line: 18, column: 1, scope: !5195)
!5212 = !{i64 2147566436, i64 2147566479, i64 2147566519}
!5213 = !DILocation(line: 19, column: 1, scope: !5195)
!5214 = !{i64 2147566678, i64 2147566721, i64 2147566761}
!5215 = !DILocation(line: 20, column: 1, scope: !5195)
!5216 = !{i64 2147566913, i64 2147566956, i64 2147566996}
!5217 = !DILocation(line: 21, column: 1, scope: !5195)
!5218 = !{i64 2147567099, i64 2147567142, i64 2147567182}
!5219 = !DILocation(line: 22, column: 1, scope: !5195)
!5220 = !{i64 2147567315, i64 2147567358, i64 2147567398}
!5221 = !DILocation(line: 23, column: 1, scope: !5195)
!5222 = !{i64 2147567518, i64 2147567561, i64 2147567601}
!5223 = !DILocation(line: 24, column: 1, scope: !5195)
!5224 = !{i64 2147567721, i64 2147567764, i64 2147567804}
!5225 = !DILocation(line: 25, column: 1, scope: !5195)
!5226 = !{i64 2147567896, i64 2147567939, i64 2147567979}
!5227 = !DILocation(line: 26, column: 1, scope: !5195)
!5228 = !{i64 2147568104, i64 2147568147, i64 2147568187}
!5229 = !DILocation(line: 27, column: 1, scope: !5195)
!5230 = !{i64 2147568308, i64 2147568351, i64 2147568391}
!5231 = !DILocation(line: 28, column: 1, scope: !5195)
!5232 = !{i64 2147568501, i64 2147568544, i64 2147568584}
!5233 = !DILocation(line: 29, column: 1, scope: !5195)
!5234 = !{i64 2147568703, i64 2147568746, i64 2147568786}
!5235 = !DILocation(line: 30, column: 1, scope: !5195)
!5236 = !{i64 2147568930, i64 2147568973, i64 2147569013}
!5237 = !DILocation(line: 31, column: 1, scope: !5195)
!5238 = !{i64 2147569132, i64 2147569175, i64 2147569215}
!5239 = !DILocation(line: 32, column: 1, scope: !5195)
!5240 = !{i64 2147569347, i64 2147569390, i64 2147569430}
!5241 = !DILocation(line: 33, column: 1, scope: !5195)
!5242 = !{i64 2147569519, i64 2147569562, i64 2147569602}
!5243 = !DILocation(line: 34, column: 1, scope: !5195)
!5244 = !{i64 2147569721, i64 2147569764, i64 2147569804}
!5245 = !DILocation(line: 35, column: 1, scope: !5195)
!5246 = !{i64 2147569947, i64 2147569990, i64 2147570030}
!5247 = !DILocation(line: 36, column: 1, scope: !5195)
!5248 = !{i64 2147570146, i64 2147570189, i64 2147570229}
!5249 = !DILocation(line: 37, column: 1, scope: !5195)
!5250 = !{i64 2147570321, i64 2147570364, i64 2147570404}
!5251 = !DILocation(line: 38, column: 1, scope: !5195)
!5252 = !{i64 2147570574, i64 2147570617, i64 2147570657}
!5253 = !DILocation(line: 39, column: 1, scope: !5195)
!5254 = !{i64 2147570812, i64 2147570855, i64 2147570895}
!5255 = !DILocation(line: 40, column: 1, scope: !5195)
!5256 = !{i64 2147571047, i64 2147571090, i64 2147571130}
!5257 = !DILocation(line: 41, column: 1, scope: !5195)
!5258 = !{i64 2147571279, i64 2147571322, i64 2147571362}
!5259 = !DILocation(line: 42, column: 1, scope: !5195)
!5260 = !{i64 2147571505, i64 2147571548, i64 2147571588}
!5261 = !DILocation(line: 43, column: 1, scope: !5195)
!5262 = !{i64 2147571764, i64 2147571807, i64 2147571847}
!5263 = !DILocation(line: 44, column: 1, scope: !5195)
!5264 = !{i64 2147571990, i64 2147572033, i64 2147572073}
!5265 = !DILocation(line: 45, column: 1, scope: !5195)
!5266 = !{i64 2147572231, i64 2147572274, i64 2147572314}
!5267 = !DILocation(line: 46, column: 1, scope: !5195)
!5268 = !{i64 2147572475, i64 2147572518, i64 2147572558}
!5269 = !DILocation(line: 47, column: 1, scope: !5195)
!5270 = !{i64 2147572716, i64 2147572759, i64 2147572799}
!5271 = !DILocation(line: 48, column: 1, scope: !5195)
!5272 = !{i64 2147572951, i64 2147572994, i64 2147573034}
!5273 = !DILocation(line: 49, column: 1, scope: !5195)
!5274 = !{i64 2147573177, i64 2147573220, i64 2147573260}
!5275 = !DILocation(line: 50, column: 1, scope: !5195)
!5276 = !{i64 2147573403, i64 2147573446, i64 2147573486}
!5277 = !DILocation(line: 51, column: 1, scope: !5195)
!5278 = !{i64 2147573647, i64 2147573690, i64 2147573730}
!5279 = !DILocation(line: 52, column: 1, scope: !5195)
!5280 = !{i64 2147573885, i64 2147573928, i64 2147573968}
!5281 = !DILocation(line: 53, column: 1, scope: !5195)
!5282 = !{i64 2147578220, i64 2147578263, i64 2147578303}
!5283 = !DILocation(line: 54, column: 1, scope: !5195)
!5284 = !{i64 2147578458, i64 2147578501, i64 2147578541}
!5285 = !DILocation(line: 55, column: 1, scope: !5195)
!5286 = !{i64 2147578702, i64 2147578745, i64 2147578785}
!5287 = !DILocation(line: 56, column: 1, scope: !5195)
!5288 = !{i64 2147578952, i64 2147578995, i64 2147579035}
!5289 = !DILocation(line: 57, column: 1, scope: !5195)
!5290 = !{i64 2147579199, i64 2147579242, i64 2147579282}
!5291 = !DILocation(line: 58, column: 1, scope: !5195)
!5292 = !{i64 2147579434, i64 2147579477, i64 2147579517}
!5293 = !DILocation(line: 59, column: 1, scope: !5195)
!5294 = !{i64 2147579669, i64 2147579712, i64 2147579752}
!5295 = !DILocation(line: 60, column: 1, scope: !5195)
!5296 = !{i64 2147579904, i64 2147579947, i64 2147579987}
!5297 = !DILocation(line: 61, column: 1, scope: !5195)
!5298 = !{i64 2147580142, i64 2147580185, i64 2147580225}
!5299 = !DILocation(line: 62, column: 1, scope: !5195)
!5300 = !{i64 2147580383, i64 2147580426, i64 2147580466}
!5301 = !DILocation(line: 63, column: 1, scope: !5195)
!5302 = !{i64 2147580642, i64 2147580685, i64 2147580725}
!5303 = !DILocation(line: 64, column: 1, scope: !5195)
!5304 = !{i64 2147580922, i64 2147580965, i64 2147581005}
!5305 = !DILocation(line: 65, column: 1, scope: !5195)
!5306 = !{i64 2147581151, i64 2147581194, i64 2147581234}
!5307 = !DILocation(line: 66, column: 1, scope: !5195)
!5308 = !{i64 2147581359, i64 2147581402, i64 2147581442}
!5309 = !DILocation(line: 67, column: 1, scope: !5195)
!5310 = !{i64 2147581570, i64 2147581613, i64 2147581653}
!5311 = !DILocation(line: 68, column: 1, scope: !5195)
!5312 = !{i64 2147581805, i64 2147581848, i64 2147581888}
!5313 = !DILocation(line: 69, column: 1, scope: !5195)
!5314 = !{i64 2147582034, i64 2147582077, i64 2147582117}
!5315 = !DILocation(line: 70, column: 1, scope: !5195)
!5316 = !{i64 2147582272, i64 2147582315, i64 2147582355}
!5317 = !DILocation(line: 71, column: 1, scope: !5195)
!5318 = !{i64 2147582504, i64 2147582547, i64 2147582587}
!5319 = !DILocation(line: 72, column: 1, scope: !5195)
!5320 = !{i64 2147582730, i64 2147582773, i64 2147582813}
!5321 = !DILocation(line: 73, column: 1, scope: !5195)
!5322 = !{i64 2147582947, i64 2147582990, i64 2147583030}
!5323 = !DILocation(line: 74, column: 1, scope: !5195)
!5324 = !{i64 2147583179, i64 2147583222, i64 2147583262}
!5325 = !DILocation(line: 75, column: 1, scope: !5195)
!5326 = !{i64 2147583405, i64 2147583448, i64 2147583488}
!5327 = !DILocation(line: 76, column: 1, scope: !5195)
!5328 = !{i64 2147583619, i64 2147583662, i64 2147583702}
!5329 = !DILocation(line: 77, column: 1, scope: !5195)
!5330 = !{i64 2147583839, i64 2147583882, i64 2147583922}
!5331 = !DILocation(line: 78, column: 1, scope: !5195)
!5332 = !{i64 2147584071, i64 2147584114, i64 2147584154}
!5333 = !DILocation(line: 79, column: 1, scope: !5195)
!5334 = !{i64 2147584279, i64 2147584322, i64 2147584362}
!5335 = !DILocation(line: 80, column: 1, scope: !5195)
!5336 = !{i64 2147584484, i64 2147584527, i64 2147584567}
!5337 = !DILocation(line: 81, column: 1, scope: !5195)
!5338 = !{i64 2147584701, i64 2147584744, i64 2147584784}
!5339 = !DILocation(line: 82, column: 1, scope: !5195)
!5340 = !{i64 2147584915, i64 2147584958, i64 2147584998}
!5341 = !DILocation(line: 83, column: 1, scope: !5195)
!5342 = !{i64 2147585141, i64 2147585184, i64 2147585224}
!5343 = !DILocation(line: 84, column: 1, scope: !5195)
!5344 = !{i64 2147585361, i64 2147585404, i64 2147585444}
!5345 = !DILocation(line: 85, column: 1, scope: !5195)
!5346 = !{i64 2147585566, i64 2147585609, i64 2147585649}
!5347 = !DILocation(line: 86, column: 1, scope: !5195)
!5348 = !{i64 2147585798, i64 2147585841, i64 2147585881}
!5349 = !DILocation(line: 87, column: 1, scope: !5195)
!5350 = !{i64 2147586033, i64 2147586076, i64 2147586116}
!5351 = !DILocation(line: 88, column: 1, scope: !5195)
!5352 = !{i64 2147590344, i64 2147590387, i64 2147590427}
!5353 = !DILocation(line: 89, column: 1, scope: !5195)
!5354 = !{i64 2147590594, i64 2147590637, i64 2147590677}
!5355 = !DILocation(line: 90, column: 1, scope: !5195)
!5356 = !{i64 2147590832, i64 2147590875, i64 2147590915}
!5357 = !DILocation(line: 91, column: 1, scope: !5195)
!5358 = !{i64 2147591043, i64 2147591086, i64 2147591126}
!5359 = !DILocation(line: 92, column: 1, scope: !5195)
!5360 = !{i64 2147591260, i64 2147591303, i64 2147591343}
!5361 = !DILocation(line: 93, column: 1, scope: !5195)
!5362 = !{i64 2147591456, i64 2147591499, i64 2147591539}
!5363 = !DILocation(line: 94, column: 1, scope: !5195)
!5364 = !{i64 2147591658, i64 2147591701, i64 2147591741}
!5365 = !DILocation(line: 95, column: 1, scope: !5195)
!5366 = !{i64 2147591851, i64 2147591894, i64 2147591934}
!5367 = !DILocation(line: 96, column: 1, scope: !5195)
!5368 = !{i64 2147592059, i64 2147592102, i64 2147592142}
!5369 = !DILocation(line: 97, column: 1, scope: !5195)
!5370 = !{i64 2147592255, i64 2147592298, i64 2147592338}
!5371 = !DILocation(line: 98, column: 1, scope: !5195)
!5372 = !{i64 2147592460, i64 2147592503, i64 2147592543}
!5373 = !DILocation(line: 99, column: 1, scope: !5195)
!5374 = !{i64 2147592671, i64 2147592714, i64 2147592754}
!5375 = !DILocation(line: 100, column: 1, scope: !5195)
!5376 = !{i64 2147592870, i64 2147592913, i64 2147592953}
!5377 = !DILocation(line: 101, column: 1, scope: !5195)
!5378 = !{i64 2147593045, i64 2147593088, i64 2147593128}
!5379 = !DILocation(line: 102, column: 1, scope: !5195)
!5380 = !{i64 2147593229, i64 2147593272, i64 2147593312}
!5381 = !DILocation(line: 103, column: 1, scope: !5195)
!5382 = !{i64 2147593431, i64 2147593474, i64 2147593514}
!5383 = !DILocation(line: 104, column: 1, scope: !5195)
!5384 = !{i64 2147593633, i64 2147593676, i64 2147593716}
!5385 = !DILocation(line: 105, column: 1, scope: !5195)
!5386 = !{i64 2147593799, i64 2147593842, i64 2147593882}
!5387 = !DILocation(line: 106, column: 1, scope: !5195)
!5388 = !{i64 2147593983, i64 2147594026, i64 2147594066}
!5389 = !DILocation(line: 107, column: 1, scope: !5195)
!5390 = !{i64 2147594173, i64 2147594216, i64 2147594256}
!5391 = !DILocation(line: 108, column: 1, scope: !5195)
!5392 = !{i64 2147594357, i64 2147594400, i64 2147594440}
!5393 = !DILocation(line: 109, column: 1, scope: !5195)
!5394 = !{i64 2147594571, i64 2147594614, i64 2147594654}
!5395 = !DILocation(line: 110, column: 1, scope: !5195)
!5396 = !{i64 2147594782, i64 2147594825, i64 2147594865}
!5397 = !DILocation(line: 111, column: 1, scope: !5195)
!5398 = !{i64 2147595005, i64 2147595048, i64 2147595088}
!5399 = !DILocation(line: 112, column: 1, scope: !5195)
!5400 = !{i64 2147595189, i64 2147595232, i64 2147595272}
!5401 = !DILocation(line: 113, column: 1, scope: !5195)
!5402 = !{i64 2147595403, i64 2147595446, i64 2147595486}
!5403 = !DILocation(line: 114, column: 1, scope: !5195)
!5404 = !{i64 2147595569, i64 2147595612, i64 2147595652}
!5405 = !DILocation(line: 115, column: 1, scope: !5195)
!5406 = !{i64 2147595750, i64 2147595793, i64 2147595833}
!5407 = !DILocation(line: 116, column: 1, scope: !5195)
!5408 = !{i64 2147595943, i64 2147595986, i64 2147596026}
!5409 = !DILocation(line: 117, column: 1, scope: !5195)
!5410 = !{i64 2147596169, i64 2147596212, i64 2147596252}
!5411 = !DILocation(line: 118, column: 1, scope: !5195)
!5412 = !{i64 2147596383, i64 2147596426, i64 2147596466}
!5413 = !DILocation(line: 119, column: 1, scope: !5195)
!5414 = !{i64 2147596609, i64 2147596652, i64 2147596692}
!5415 = !DILocation(line: 120, column: 1, scope: !5195)
!5416 = !{i64 2147596826, i64 2147596869, i64 2147596909}
!5417 = !DILocation(line: 121, column: 1, scope: !5195)
!5418 = !{i64 2147597103, i64 2147597146, i64 2147597186}
!5419 = !DILocation(line: 122, column: 1, scope: !5195)
!5420 = !{i64 2147597329, i64 2147597372, i64 2147597412}
!5421 = !DILocation(line: 123, column: 1, scope: !5195)
!5422 = !{i64 2147597525, i64 2147597568, i64 2147597608}
!5423 = !DILocation(line: 124, column: 1, scope: !5195)
!5424 = !{i64 2147597790, i64 2147597833, i64 2147597873}
!5425 = !DILocation(line: 125, column: 1, scope: !5195)
!5426 = !{i64 2147598004, i64 2147598047, i64 2147598087}
!5427 = !DILocation(line: 126, column: 1, scope: !5195)
!5428 = !{i64 2147598179, i64 2147598222, i64 2147598262}
!5429 = !DILocation(line: 127, column: 1, scope: !5195)
!5430 = !{i64 2147598433, i64 2147598476, i64 2147598516}
!5431 = !DILocation(line: 128, column: 1, scope: !5195)
!5432 = !{i64 2147598632, i64 2147598675, i64 2147598715}
!5433 = !DILocation(line: 129, column: 1, scope: !5195)
!5434 = !{i64 2147598874, i64 2147598917, i64 2147598957}
!5435 = !DILocation(line: 130, column: 1, scope: !5195)
!5436 = !{i64 2147599037, i64 2147599080, i64 2147599120}
!5437 = !DILocation(line: 131, column: 1, scope: !5195)
!5438 = !{i64 2147599224, i64 2147599267, i64 2147599307}
!5439 = !DILocation(line: 132, column: 1, scope: !5195)
!5440 = !{i64 2147599417, i64 2147599460, i64 2147599500}
!5441 = !DILocation(line: 133, column: 1, scope: !5195)
!5442 = !{i64 2147603660, i64 2147603703, i64 2147603743}
!5443 = !DILocation(line: 134, column: 1, scope: !5195)
!5444 = !{i64 2147603874, i64 2147603917, i64 2147603957}
!5445 = !DILocation(line: 135, column: 1, scope: !5195)
!5446 = !{i64 2147604085, i64 2147604128, i64 2147604168}
!5447 = !DILocation(line: 136, column: 1, scope: !5195)
!5448 = !{i64 2147604305, i64 2147604348, i64 2147604388}
!5449 = !DILocation(line: 137, column: 1, scope: !5195)
!5450 = !{i64 2147604512, i64 2147604555, i64 2147604595}
!5451 = !DILocation(line: 138, column: 1, scope: !5195)
!5452 = !{i64 2147604785, i64 2147604828, i64 2147604868}
!5453 = !DILocation(line: 139, column: 1, scope: !5195)
!5454 = !{i64 2147605033, i64 2147605076, i64 2147605116}
!5455 = !DILocation(line: 140, column: 1, scope: !5195)
!5456 = !{i64 2147605232, i64 2147605275, i64 2147605315}
!5457 = !DILocation(line: 141, column: 1, scope: !5195)
!5458 = !{i64 2147605467, i64 2147605510, i64 2147605550}
!5459 = !DILocation(line: 142, column: 1, scope: !5195)
!5460 = !{i64 2147605717, i64 2147605760, i64 2147605800}
!5461 = !DILocation(line: 143, column: 1, scope: !5195)
!5462 = !{i64 2147605919, i64 2147605962, i64 2147606002}
!5463 = !DILocation(line: 144, column: 1, scope: !5195)
!5464 = !{i64 2147606142, i64 2147606185, i64 2147606225}
!5465 = !DILocation(line: 145, column: 1, scope: !5195)
!5466 = !{i64 2147606356, i64 2147606399, i64 2147606439}
!5467 = !DILocation(line: 146, column: 1, scope: !5195)
!5468 = !{i64 2147606600, i64 2147606643, i64 2147606683}
!5469 = !DILocation(line: 147, column: 1, scope: !5195)
!5470 = !{i64 2147606829, i64 2147606872, i64 2147606912}
!5471 = !DILocation(line: 148, column: 1, scope: !5195)
!5472 = !{i64 2147607058, i64 2147607101, i64 2147607141}
!5473 = !DILocation(line: 149, column: 1, scope: !5195)
!5474 = !{i64 2147607266, i64 2147607309, i64 2147607349}
!5475 = !DILocation(line: 150, column: 1, scope: !5195)
!5476 = !{i64 2147607504, i64 2147607547, i64 2147607587}
!5477 = !DILocation(line: 151, column: 1, scope: !5195)
!5478 = !{i64 2147607730, i64 2147607773, i64 2147607813}
!5479 = !DILocation(line: 152, column: 1, scope: !5195)
!5480 = !{i64 2147607989, i64 2147608032, i64 2147608072}
!5481 = !DILocation(line: 153, column: 1, scope: !5195)
!5482 = !{i64 2147608209, i64 2147608252, i64 2147608292}
!5483 = !DILocation(line: 154, column: 1, scope: !5195)
!5484 = !{i64 2147608441, i64 2147608484, i64 2147608524}
!5485 = !DILocation(line: 155, column: 1, scope: !5195)
!5486 = !{i64 2147608682, i64 2147608725, i64 2147608765}
!5487 = !DILocation(line: 156, column: 1, scope: !5195)
!5488 = !{i64 2147608923, i64 2147608966, i64 2147609006}
!5489 = !DILocation(line: 157, column: 1, scope: !5195)
!5490 = !{i64 2147609146, i64 2147609189, i64 2147609229}
!5491 = !DILocation(line: 158, column: 1, scope: !5195)
!5492 = !{i64 2147609363, i64 2147609406, i64 2147609446}
!5493 = !DILocation(line: 159, column: 1, scope: !5195)
!5494 = !{i64 2147609604, i64 2147609647, i64 2147609687}
!5495 = !DILocation(line: 160, column: 1, scope: !5195)
!5496 = !{i64 2147609791, i64 2147609834, i64 2147609874}
!5497 = !DILocation(line: 161, column: 1, scope: !5195)
!5498 = !{i64 2147609954, i64 2147609997, i64 2147610037}
!5499 = !DILocation(line: 162, column: 1, scope: !5195)
!5500 = !{i64 2147610213, i64 2147610256, i64 2147610296}
!5501 = !DILocation(line: 163, column: 1, scope: !5195)
!5502 = !{i64 2147610436, i64 2147610479, i64 2147610519}
!5503 = !DILocation(line: 164, column: 1, scope: !5195)
!5504 = !{i64 2147610665, i64 2147610708, i64 2147610748}
!5505 = !DILocation(line: 165, column: 1, scope: !5195)
!5506 = !{i64 2147610861, i64 2147610904, i64 2147610944}
!5507 = !DILocation(line: 166, column: 1, scope: !5195)
!5508 = !{i64 2147611073, i64 2147611116, i64 2147611156}
!5509 = !DILocation(line: 167, column: 1, scope: !5195)
!5510 = !{i64 2147611294, i64 2147611337, i64 2147611377}
!5511 = !DILocation(line: 168, column: 1, scope: !5195)
!5512 = !{i64 2147611508, i64 2147611551, i64 2147611591}
!5513 = !DILocation(line: 169, column: 1, scope: !5195)
!5514 = !{i64 2147611698, i64 2147611741, i64 2147611781}
!5515 = !DILocation(line: 170, column: 1, scope: !5195)
!5516 = !{i64 2147611897, i64 2147611940, i64 2147611980}
!5517 = !DILocation(line: 171, column: 1, scope: !5195)
!5518 = !{i64 2147616163, i64 2147616206, i64 2147616246}
!5519 = !DILocation(line: 172, column: 1, scope: !5195)
!5520 = !{i64 2147616383, i64 2147616426, i64 2147616466}
!5521 = !DILocation(line: 173, column: 1, scope: !5195)
!5522 = !{i64 2147616584, i64 2147616627, i64 2147616667}
!5523 = !DILocation(line: 174, column: 1, scope: !5195)
!5524 = !{i64 2147616783, i64 2147616826, i64 2147616866}
!5525 = !DILocation(line: 175, column: 1, scope: !5195)
!5526 = !{i64 2147616988, i64 2147617031, i64 2147617071}
!5527 = !DILocation(line: 176, column: 1, scope: !5195)
!5528 = !{i64 2147617157, i64 2147617200, i64 2147617240}
!5529 = !DILocation(line: 177, column: 1, scope: !5195)
!5530 = !{i64 2147617341, i64 2147617384, i64 2147617424}
!5531 = !DILocation(line: 178, column: 1, scope: !5195)
!5532 = !{i64 2147617525, i64 2147617568, i64 2147617608}
!5533 = !DILocation(line: 179, column: 1, scope: !5195)
!5534 = !{i64 2147617712, i64 2147617755, i64 2147617795}
!5535 = !DILocation(line: 180, column: 1, scope: !5195)
!5536 = !{i64 2147617896, i64 2147617939, i64 2147617979}
!5537 = !DILocation(line: 181, column: 1, scope: !5195)
!5538 = !{i64 2147618134, i64 2147618177, i64 2147618217}
!5539 = !DILocation(line: 182, column: 1, scope: !5195)
!5540 = !{i64 2147618364, i64 2147618407, i64 2147618447}
!5541 = !DILocation(line: 183, column: 1, scope: !5195)
!5542 = !{i64 2147618593, i64 2147618636, i64 2147618676}
!5543 = !DILocation(line: 184, column: 1, scope: !5195)
!5544 = !{i64 2147618780, i64 2147618823, i64 2147618863}
!5545 = !DILocation(line: 185, column: 1, scope: !5195)
!5546 = !{i64 2147618976, i64 2147619019, i64 2147619059}
!5547 = !DILocation(line: 186, column: 1, scope: !5195)
!5548 = !{i64 2147619184, i64 2147619227, i64 2147619267}
!5549 = !DILocation(line: 187, column: 1, scope: !5195)
!5550 = !{i64 2147619396, i64 2147619439, i64 2147619479}
!5551 = !DILocation(line: 188, column: 1, scope: !5195)
!5552 = !{i64 2147619595, i64 2147619638, i64 2147619678}
!5553 = !DILocation(line: 189, column: 1, scope: !5195)
!5554 = !{i64 2147619833, i64 2147619876, i64 2147619916}
!5555 = !DILocation(line: 190, column: 1, scope: !5195)
!5556 = !{i64 2147620029, i64 2147620072, i64 2147620112}
!5557 = !DILocation(line: 191, column: 1, scope: !5195)
!5558 = !{i64 2147620231, i64 2147620274, i64 2147620314}
!5559 = !DILocation(line: 192, column: 1, scope: !5195)
!5560 = !{i64 2147620424, i64 2147620467, i64 2147620507}
!5561 = !DILocation(line: 193, column: 1, scope: !5195)
!5562 = !{i64 2147620658, i64 2147620701, i64 2147620741}
!5563 = !DILocation(line: 194, column: 1, scope: !5195)
!5564 = !{i64 2147620821, i64 2147620864, i64 2147620904}
!5565 = !DILocation(line: 195, column: 1, scope: !5195)
!5566 = !{i64 2147621060, i64 2147621103, i64 2147621143}
!5567 = !DILocation(line: 196, column: 1, scope: !5195)
!5568 = !{i64 2147621299, i64 2147621342, i64 2147621382}
!5569 = !DILocation(line: 197, column: 1, scope: !5195)
!5570 = !{i64 2147621535, i64 2147621578, i64 2147621618}
!5571 = !DILocation(line: 198, column: 1, scope: !5195)
!5572 = !{i64 2147621765, i64 2147621808, i64 2147621848}
!5573 = !DILocation(line: 199, column: 1, scope: !5195)
!5574 = !{i64 2147621952, i64 2147621995, i64 2147622035}
!5575 = !DILocation(line: 200, column: 1, scope: !5195)
!5576 = !{i64 2147622151, i64 2147622194, i64 2147622234}
!5577 = !DILocation(line: 201, column: 1, scope: !5195)
!5578 = !{i64 2147622422, i64 2147622465, i64 2147622505}
!5579 = !DILocation(line: 202, column: 1, scope: !5195)
!5580 = !{i64 2147622597, i64 2147622640, i64 2147622680}
!5581 = !DILocation(line: 203, column: 1, scope: !5195)
!5582 = !{i64 2147622831, i64 2147622874, i64 2147622914}
!5583 = !DILocation(line: 204, column: 1, scope: !5195)
!5584 = !{i64 2147623039, i64 2147623082, i64 2147623122}
!5585 = !DILocation(line: 205, column: 1, scope: !5195)
!5586 = !{i64 2147623238, i64 2147623281, i64 2147623321}
!5587 = !DILocation(line: 206, column: 1, scope: !5195)
!5588 = !{i64 2147623456, i64 2147623499, i64 2147623539}
!5589 = !DILocation(line: 207, column: 1, scope: !5195)
!5590 = !{i64 2147623646, i64 2147623689, i64 2147623729}
!5591 = !DILocation(line: 208, column: 1, scope: !5195)
!5592 = !{i64 2147623893, i64 2147623936, i64 2147623976}
!5593 = !DILocation(line: 209, column: 1, scope: !5195)
!5594 = !{i64 2147624089, i64 2147624132, i64 2147624172}
!5595 = !DILocation(line: 210, column: 1, scope: !5195)
!5596 = !{i64 2147624295, i64 2147624338, i64 2147624378}
!5597 = !DILocation(line: 211, column: 1, scope: !5195)
!5598 = !{i64 2147624500, i64 2147624543, i64 2147624583}
!5599 = !DILocation(line: 212, column: 1, scope: !5195)
!5600 = !{i64 2147624726, i64 2147624769, i64 2147624809}
!5601 = !DILocation(line: 213, column: 1, scope: !5195)
!5602 = !{i64 2147624958, i64 2147625001, i64 2147625041}
!5603 = !DILocation(line: 214, column: 1, scope: !5195)
!5604 = !{i64 2147625142, i64 2147625185, i64 2147625225}
!5605 = !DILocation(line: 215, column: 1, scope: !5195)
!5606 = !{i64 2147629412, i64 2147629455, i64 2147629495}
!5607 = !DILocation(line: 216, column: 1, scope: !5195)
!5608 = !{i64 2147629596, i64 2147629639, i64 2147629679}
!5609 = !DILocation(line: 217, column: 1, scope: !5195)
!5610 = !{i64 2147629822, i64 2147629865, i64 2147629905}
!5611 = !DILocation(line: 218, column: 1, scope: !5195)
!5612 = !{i64 2147630048, i64 2147630091, i64 2147630131}
!5613 = !DILocation(line: 219, column: 1, scope: !5195)
!5614 = !{i64 2147630274, i64 2147630317, i64 2147630357}
!5615 = !DILocation(line: 220, column: 1, scope: !5195)
!5616 = !{i64 2147630500, i64 2147630543, i64 2147630583}
!5617 = !DILocation(line: 221, column: 1, scope: !5195)
!5618 = !{i64 2147630726, i64 2147630769, i64 2147630809}
!5619 = !DILocation(line: 222, column: 1, scope: !5195)
!5620 = !{i64 2147630958, i64 2147631001, i64 2147631041}
!5621 = !DILocation(line: 223, column: 1, scope: !5195)
!5622 = !{i64 2147631196, i64 2147631239, i64 2147631279}
!5623 = !DILocation(line: 224, column: 1, scope: !5195)
!5624 = !{i64 2147631428, i64 2147631471, i64 2147631511}
!5625 = !DILocation(line: 225, column: 1, scope: !5195)
!5626 = !{i64 2147631630, i64 2147631673, i64 2147631713}
!5627 = !DILocation(line: 226, column: 1, scope: !5195)
!5628 = !{i64 2147631880, i64 2147631923, i64 2147631963}
!5629 = !DILocation(line: 227, column: 1, scope: !5195)
!5630 = !{i64 2147632118, i64 2147632161, i64 2147632201}
!5631 = !DILocation(line: 228, column: 1, scope: !5195)
!5632 = !{i64 2147632302, i64 2147632345, i64 2147632385}
!5633 = !DILocation(line: 229, column: 1, scope: !5195)
!5634 = !{i64 2147632525, i64 2147632568, i64 2147632608}
!5635 = !DILocation(line: 230, column: 1, scope: !5195)
!5636 = !{i64 2147632763, i64 2147632806, i64 2147632846}
!5637 = !DILocation(line: 231, column: 1, scope: !5195)
!5638 = !{i64 2147633001, i64 2147633044, i64 2147633084}
!5639 = !DILocation(line: 232, column: 1, scope: !5195)
!5640 = !{i64 2147633194, i64 2147633237, i64 2147633277}
!5641 = !DILocation(line: 233, column: 1, scope: !5195)
!5642 = !{i64 2147633447, i64 2147633490, i64 2147633530}
!5643 = !DILocation(line: 234, column: 1, scope: !5195)
!5644 = !{i64 2147633661, i64 2147633704, i64 2147633744}
!5645 = !DILocation(line: 235, column: 1, scope: !5195)
!5646 = !{i64 2147633869, i64 2147633912, i64 2147633952}
!5647 = !DILocation(line: 236, column: 1, scope: !5195)
!5648 = !{i64 2147634059, i64 2147634102, i64 2147634142}
!5649 = !DILocation(line: 237, column: 1, scope: !5195)
!5650 = !{i64 2147634273, i64 2147634316, i64 2147634356}
!5651 = !DILocation(line: 238, column: 1, scope: !5195)
!5652 = !{i64 2147634535, i64 2147634578, i64 2147634618}
!5653 = !DILocation(line: 239, column: 1, scope: !5195)
!5654 = !{i64 2147634746, i64 2147634789, i64 2147634829}
!5655 = !DILocation(line: 240, column: 1, scope: !5195)
!5656 = !{i64 2147634990, i64 2147635033, i64 2147635073}
!5657 = !DILocation(line: 241, column: 1, scope: !5195)
!5658 = !{i64 2147635201, i64 2147635244, i64 2147635284}
!5659 = !DILocation(line: 242, column: 1, scope: !5195)
!5660 = !{i64 2147635430, i64 2147635473, i64 2147635513}
!5661 = !DILocation(line: 243, column: 1, scope: !5195)
!5662 = !{i64 2147635695, i64 2147635738, i64 2147635778}
!5663 = !DILocation(line: 244, column: 1, scope: !5195)
!5664 = !{i64 2147635900, i64 2147635943, i64 2147635983}
!5665 = !DILocation(line: 245, column: 1, scope: !5195)
!5666 = !{i64 2147636096, i64 2147636139, i64 2147636179}
!5667 = !DILocation(line: 246, column: 1, scope: !5195)
!5668 = !{i64 2147636319, i64 2147636362, i64 2147636402}
!5669 = !DILocation(line: 247, column: 1, scope: !5195)
!5670 = !{i64 2147636482, i64 2147636525, i64 2147636565}
!5671 = !DILocation(line: 248, column: 1, scope: !5195)
!5672 = !{i64 2147636687, i64 2147636730, i64 2147636770}
!5673 = !DILocation(line: 249, column: 1, scope: !5195)
!5674 = !{i64 2147636907, i64 2147636950, i64 2147636990}
!5675 = !DILocation(line: 250, column: 1, scope: !5195)
!5676 = !{i64 2147637121, i64 2147637164, i64 2147637204}
!5677 = !DILocation(line: 251, column: 1, scope: !5195)
!5678 = !{i64 2147637335, i64 2147637378, i64 2147637418}
!5679 = !DILocation(line: 252, column: 1, scope: !5195)
!5680 = !{i64 2147637546, i64 2147637589, i64 2147637629}
!5681 = !DILocation(line: 253, column: 1, scope: !5195)
!5682 = !{i64 2147637739, i64 2147637782, i64 2147637822}
!5683 = !DILocation(line: 254, column: 1, scope: !5195)
!5684 = !{i64 2147641999, i64 2147642042, i64 2147642082}
!5685 = !DILocation(line: 255, column: 1, scope: !5195)
!5686 = !{i64 2147642195, i64 2147642238, i64 2147642278}
!5687 = !DILocation(line: 256, column: 1, scope: !5195)
!5688 = !{i64 2147642394, i64 2147642437, i64 2147642477}
!5689 = !DILocation(line: 257, column: 1, scope: !5195)
!5690 = !{i64 2147642618, i64 2147642661, i64 2147642701}
!5691 = !DILocation(line: 258, column: 1, scope: !5195)
!5692 = !{i64 2147642842, i64 2147642885, i64 2147642925}
!5693 = !DILocation(line: 259, column: 1, scope: !5195)
!5694 = !{i64 2147643014, i64 2147643057, i64 2147643097}
!5695 = !DILocation(line: 260, column: 1, scope: !5195)
!5696 = !{i64 2147643207, i64 2147643250, i64 2147643290}
!5697 = !DILocation(line: 261, column: 1, scope: !5195)
!5698 = !{i64 2147643403, i64 2147643446, i64 2147643486}
!5699 = !DILocation(line: 262, column: 1, scope: !5195)
!5700 = !{i64 2147643630, i64 2147643673, i64 2147643713}
!5701 = !DILocation(line: 263, column: 1, scope: !5195)
!5702 = !{i64 2147643847, i64 2147643890, i64 2147643930}
!5703 = !DILocation(line: 264, column: 1, scope: !5195)
!5704 = !{i64 2147644139, i64 2147644182, i64 2147644222}
!5705 = !DILocation(line: 265, column: 1, scope: !5195)
!5706 = !{i64 2147644371, i64 2147644414, i64 2147644454}
!5707 = !DILocation(line: 266, column: 1, scope: !5195)
!5708 = !{i64 2147644588, i64 2147644631, i64 2147644671}
!5709 = !DILocation(line: 267, column: 1, scope: !5195)
!5710 = !{i64 2147644795, i64 2147644838, i64 2147644878}
!5711 = !DILocation(line: 268, column: 1, scope: !5195)
!5712 = !{i64 2147644996, i64 2147645039, i64 2147645079}
!5713 = !DILocation(line: 269, column: 1, scope: !5195)
!5714 = !{i64 2147645228, i64 2147645271, i64 2147645311}
!5715 = !DILocation(line: 270, column: 1, scope: !5195)
!5716 = !{i64 2147645436, i64 2147645479, i64 2147645519}
!5717 = !DILocation(line: 271, column: 1, scope: !5195)
!5718 = !{i64 2147645626, i64 2147645669, i64 2147645709}
!5719 = !DILocation(line: 272, column: 1, scope: !5195)
!5720 = !{i64 2147645852, i64 2147645895, i64 2147645935}
!5721 = !DILocation(line: 273, column: 1, scope: !5195)
!5722 = !{i64 2147646041, i64 2147646084, i64 2147646124}
!5723 = !DILocation(line: 274, column: 1, scope: !5195)
!5724 = !{i64 2147646312, i64 2147646355, i64 2147646395}
!5725 = !DILocation(line: 275, column: 1, scope: !5195)
!5726 = !{i64 2147646532, i64 2147646575, i64 2147646615}
!5727 = !DILocation(line: 276, column: 1, scope: !5195)
!5728 = !{i64 2147646785, i64 2147646828, i64 2147646868}
!5729 = !DILocation(line: 277, column: 1, scope: !5195)
!5730 = !{i64 2147646993, i64 2147647036, i64 2147647076}
!5731 = !DILocation(line: 278, column: 1, scope: !5195)
!5732 = !{i64 2147647225, i64 2147647268, i64 2147647308}
!5733 = !DILocation(line: 279, column: 1, scope: !5195)
!5734 = !{i64 2147647436, i64 2147647479, i64 2147647519}
!5735 = !DILocation(line: 280, column: 1, scope: !5195)
!5736 = !{i64 2147647626, i64 2147647669, i64 2147647709}
!5737 = !DILocation(line: 281, column: 1, scope: !5195)
!5738 = !{i64 2147647840, i64 2147647883, i64 2147647923}
!5739 = !DILocation(line: 282, column: 1, scope: !5195)
!5740 = !{i64 2147648039, i64 2147648082, i64 2147648122}
!5741 = !DILocation(line: 283, column: 1, scope: !5195)
!5742 = !{i64 2147648226, i64 2147648269, i64 2147648309}
!5743 = !DILocation(line: 284, column: 1, scope: !5195)
!5744 = !{i64 2147648434, i64 2147648477, i64 2147648517}
!5745 = !DILocation(line: 285, column: 1, scope: !5195)
!5746 = !{i64 2147648663, i64 2147648706, i64 2147648746}
!5747 = !DILocation(line: 286, column: 1, scope: !5195)
!5748 = !{i64 2147648865, i64 2147648908, i64 2147648948}
!5749 = !DILocation(line: 287, column: 1, scope: !5195)
!5750 = !{i64 2147649064, i64 2147649107, i64 2147649147}
!5751 = !DILocation(line: 288, column: 1, scope: !5195)
!5752 = !{i64 2147649281, i64 2147649324, i64 2147649364}
!5753 = !DILocation(line: 290, column: 1, scope: !5195)
!5754 = distinct !DISubprogram(name: "stm32l1_init", scope: !142, file: !142, line: 31, type: !149, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5755)
!5755 = !{!5756, !5757}
!5756 = !DILocalVariable(name: "arg", arg: 1, scope: !5754, file: !142, line: 31, type: !151)
!5757 = !DILocalVariable(name: "key", scope: !5754, file: !142, line: 33, type: !121)
!5758 = !DILocation(line: 0, scope: !5754)
!5759 = !DILocation(line: 55, column: 2, scope: !5760, inlinedAt: !5767)
!5760 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5764)
!5761 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5762 = !DISubroutineType(types: !5763)
!5763 = !{!32}
!5764 = !{!5765, !5766}
!5765 = !DILocalVariable(name: "key", scope: !5760, file: !5761, line: 44, type: !32)
!5766 = !DILocalVariable(name: "tmp", scope: !5760, file: !5761, line: 53, type: !32)
!5767 = distinct !DILocation(line: 37, column: 8, scope: !5754)
!5768 = !{i64 1523498}
!5769 = !DILocation(line: 0, scope: !5760, inlinedAt: !5767)
!5770 = !DILocalVariable(name: "key", arg: 1, scope: !5771, file: !5761, line: 84, type: !32)
!5771 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5774)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{null, !32}
!5774 = !{!5770}
!5775 = !DILocation(line: 0, scope: !5771, inlinedAt: !5776)
!5776 = distinct !DILocation(line: 44, column: 2, scope: !5754)
!5777 = !DILocation(line: 95, column: 2, scope: !5771, inlinedAt: !5776)
!5778 = !{i64 1524315}
!5779 = !DILocation(line: 48, column: 18, scope: !5754)
!5780 = !DILocation(line: 54, column: 2, scope: !5754)
!5781 = !DILocation(line: 55, column: 2, scope: !5754)
!5782 = !DILocation(line: 57, column: 2, scope: !5754)
!5783 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5784, file: !5784, line: 531, type: !5785, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5787)
!5784 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5785 = !DISubroutineType(types: !5786)
!5786 = !{null, !121}
!5787 = !{!5788, !5789}
!5788 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5783, file: !5784, line: 531, type: !121)
!5789 = !DILocalVariable(name: "tmpreg", scope: !5783, file: !5784, line: 533, type: !120)
!5790 = !DILocation(line: 0, scope: !5783)
!5791 = !DILocation(line: 533, column: 3, scope: !5783)
!5792 = !DILocation(line: 533, column: 17, scope: !5783)
!5793 = !DILocation(line: 534, column: 3, scope: !5783)
!5794 = !DILocation(line: 536, column: 12, scope: !5783)
!5795 = !DILocation(line: 536, column: 10, scope: !5783)
!5796 = !DILocation(line: 537, column: 9, scope: !5783)
!5797 = !DILocation(line: 538, column: 1, scope: !5783)
!5798 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5799, file: !5799, line: 272, type: !5785, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !5800)
!5799 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5800 = !{!5801}
!5801 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5798, file: !5799, line: 272, type: !121)
!5802 = !DILocation(line: 0, scope: !5798)
!5803 = !DILocation(line: 274, column: 3, scope: !5798)
!5804 = !DILocation(line: 275, column: 1, scope: !5798)
!5805 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !184, file: !184, line: 26, type: !190, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !181, retainedNodes: !5806)
!5806 = !{!5807}
!5807 = !DILocalVariable(name: "dev", arg: 1, scope: !5805, file: !184, line: 26, type: !192)
!5808 = !DILocation(line: 0, scope: !5805)
!5809 = !DILocation(line: 68, column: 2, scope: !5805)
!5810 = distinct !DISubprogram(name: "tty_write", scope: !5811, file: !5811, line: 100, type: !5812, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5855)
!5811 = !DIFile(filename: "zephyr/subsys/console/tty.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5812 = !DISubroutineType(types: !5813)
!5813 = !{!5814, !5816, !13, !357}
!5814 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !5815, line: 28, baseType: !103)
!5815 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5817, size: 32)
!5817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_serial", file: !308, line: 18, size: 544, elements: !5818)
!5818 = !{!5819, !5820, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "uart_dev", scope: !5817, file: !308, line: 19, baseType: !2656, size: 32)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sem", scope: !5817, file: !308, line: 21, baseType: !5821, size: 128, offset: 32)
!5821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !313, line: 2909, size: 128, elements: !5822)
!5822 = !{!5823, !5842, !5843}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5821, file: !313, line: 2910, baseType: !5824, size: 64)
!5824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !5825)
!5825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !5826)
!5826 = !{!5827}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5825, file: !317, line: 232, baseType: !5828, size: 64)
!5828 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !5829)
!5829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !5830)
!5830 = !{!5831, !5837}
!5831 = !DIDerivedType(tag: DW_TAG_member, scope: !5829, file: !322, line: 38, baseType: !5832, size: 32)
!5832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5829, file: !322, line: 38, size: 32, elements: !5833)
!5833 = !{!5834, !5836}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5832, file: !322, line: 39, baseType: !5835, size: 32)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5829, size: 32)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5832, file: !322, line: 40, baseType: !5835, size: 32)
!5837 = !DIDerivedType(tag: DW_TAG_member, scope: !5829, file: !322, line: 42, baseType: !5838, size: 32, offset: 32)
!5838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5829, file: !322, line: 42, size: 32, elements: !5839)
!5839 = !{!5840, !5841}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5838, file: !322, line: 43, baseType: !5835, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5838, file: !322, line: 44, baseType: !5835, size: 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5821, file: !313, line: 2911, baseType: !32, size: 32, offset: 64)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5821, file: !313, line: 2912, baseType: !32, size: 32, offset: 96)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf", scope: !5817, file: !308, line: 22, baseType: !274, size: 32, offset: 160)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ringbuf_sz", scope: !5817, file: !308, line: 23, baseType: !121, size: 32, offset: 192)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "rx_get", scope: !5817, file: !308, line: 24, baseType: !341, size: 16, offset: 224)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_put", scope: !5817, file: !308, line: 24, baseType: !341, size: 16, offset: 240)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timeout", scope: !5817, file: !308, line: 25, baseType: !345, size: 32, offset: 256)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sem", scope: !5817, file: !308, line: 27, baseType: !5821, size: 128, offset: 288)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf", scope: !5817, file: !308, line: 28, baseType: !274, size: 32, offset: 416)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ringbuf_sz", scope: !5817, file: !308, line: 29, baseType: !121, size: 32, offset: 448)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "tx_get", scope: !5817, file: !308, line: 30, baseType: !341, size: 16, offset: 480)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "tx_put", scope: !5817, file: !308, line: 30, baseType: !341, size: 16, offset: 496)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timeout", scope: !5817, file: !308, line: 31, baseType: !345, size: 32, offset: 512)
!5855 = !{!5856, !5857, !5858, !5859, !5860, !5861}
!5856 = !DILocalVariable(name: "tty", arg: 1, scope: !5810, file: !5811, line: 100, type: !5816)
!5857 = !DILocalVariable(name: "buf", arg: 2, scope: !5810, file: !5811, line: 100, type: !13)
!5858 = !DILocalVariable(name: "size", arg: 3, scope: !5810, file: !5811, line: 100, type: !357)
!5859 = !DILocalVariable(name: "p", scope: !5810, file: !5811, line: 102, type: !268)
!5860 = !DILocalVariable(name: "out_size", scope: !5810, file: !5811, line: 103, type: !357)
!5861 = !DILocalVariable(name: "res", scope: !5810, file: !5811, line: 104, type: !103)
!5862 = !DILocation(line: 0, scope: !5810)
!5863 = !DILocation(line: 106, column: 11, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5810, file: !5811, line: 106, column: 6)
!5865 = !DILocation(line: 106, column: 25, scope: !5864)
!5866 = !DILocation(line: 106, column: 6, scope: !5810)
!5867 = !DILocation(line: 117, column: 2, scope: !5810)
!5868 = !DILocation(line: 110, column: 3, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5864, file: !5811, line: 106, column: 32)
!5870 = !DILocation(line: 110, column: 14, scope: !5869)
!5871 = !DILocation(line: 111, column: 23, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5869, file: !5811, line: 110, column: 18)
!5873 = !DILocation(line: 111, column: 35, scope: !5872)
!5874 = !DILocation(line: 111, column: 33, scope: !5872)
!5875 = !DILocation(line: 111, column: 4, scope: !5872)
!5876 = distinct !{!5876, !5868, !5877}
!5877 = !DILocation(line: 112, column: 3, scope: !5869)
!5878 = !DILocation(line: 117, column: 13, scope: !5810)
!5879 = !DILocation(line: 118, column: 26, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5810, file: !5811, line: 117, column: 17)
!5881 = !DILocation(line: 118, column: 9, scope: !5880)
!5882 = !DILocation(line: 119, column: 11, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5880, file: !5811, line: 119, column: 7)
!5884 = !DILocation(line: 119, column: 7, scope: !5880)
!5885 = !DILocation(line: 121, column: 17, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !5811, line: 121, column: 8)
!5887 = distinct !DILexicalBlock(scope: !5883, file: !5811, line: 119, column: 16)
!5888 = !DILocation(line: 121, column: 8, scope: !5887)
!5889 = !DILocation(line: 122, column: 13, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5886, file: !5811, line: 121, column: 23)
!5891 = !DILocation(line: 122, column: 5, scope: !5890)
!5892 = !DILocation(line: 122, column: 11, scope: !5890)
!5893 = !DILocation(line: 123, column: 5, scope: !5890)
!5894 = !DILocation(line: 118, column: 28, scope: !5880)
!5895 = !DILocation(line: 135, column: 11, scope: !5880)
!5896 = distinct !{!5896, !5867, !5897}
!5897 = !DILocation(line: 136, column: 2, scope: !5810)
!5898 = !DILocation(line: 139, column: 1, scope: !5810)
!5899 = distinct !DISubprogram(name: "uart_poll_out", scope: !5900, file: !5900, line: 95, type: !2673, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5901)
!5900 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!5901 = !{!5902, !5903}
!5902 = !DILocalVariable(name: "dev", arg: 1, scope: !5899, file: !5900, line: 95, type: !2656)
!5903 = !DILocalVariable(name: "out_char", arg: 2, scope: !5899, file: !5900, line: 95, type: !168)
!5904 = !DILocation(line: 0, scope: !5899)
!5905 = !DILocation(line: 105, column: 2, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5899, file: !5900, line: 105, column: 2)
!5907 = !{i64 2152468330}
!5908 = !DILocation(line: 106, column: 2, scope: !5899)
!5909 = !DILocation(line: 107, column: 1, scope: !5899)
!5910 = distinct !DISubprogram(name: "tty_putchar", scope: !5811, file: !5811, line: 69, type: !5911, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5913)
!5911 = !DISubroutineType(types: !5912)
!5912 = !{!103, !5816, !167}
!5913 = !{!5914, !5915, !5916, !5917, !5918}
!5914 = !DILocalVariable(name: "tty", arg: 1, scope: !5910, file: !5811, line: 69, type: !5816)
!5915 = !DILocalVariable(name: "c", arg: 2, scope: !5910, file: !5811, line: 69, type: !167)
!5916 = !DILocalVariable(name: "key", scope: !5910, file: !5811, line: 71, type: !32)
!5917 = !DILocalVariable(name: "tx_next", scope: !5910, file: !5811, line: 72, type: !103)
!5918 = !DILocalVariable(name: "res", scope: !5910, file: !5811, line: 73, type: !103)
!5919 = !DILocation(line: 0, scope: !5910)
!5920 = !DILocation(line: 75, column: 25, scope: !5910)
!5921 = !DILocation(line: 76, column: 5, scope: !5910)
!5922 = !DILocation(line: 77, column: 7, scope: !5910)
!5923 = !DILocation(line: 75, column: 8, scope: !5910)
!5924 = !DILocation(line: 78, column: 10, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5910, file: !5811, line: 78, column: 6)
!5926 = !DILocation(line: 78, column: 6, scope: !5910)
!5927 = !DILocation(line: 55, column: 2, scope: !5928, inlinedAt: !5932)
!5928 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5929)
!5929 = !{!5930, !5931}
!5930 = !DILocalVariable(name: "key", scope: !5928, file: !5761, line: 44, type: !32)
!5931 = !DILocalVariable(name: "tmp", scope: !5928, file: !5761, line: 53, type: !32)
!5932 = distinct !DILocation(line: 82, column: 8, scope: !5910)
!5933 = !{i64 1651462}
!5934 = !DILocation(line: 0, scope: !5928, inlinedAt: !5932)
!5935 = !DILocation(line: 83, column: 17, scope: !5910)
!5936 = !DILocation(line: 83, column: 12, scope: !5910)
!5937 = !DILocation(line: 83, column: 24, scope: !5910)
!5938 = !DILocation(line: 84, column: 22, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5910, file: !5811, line: 84, column: 6)
!5940 = !DILocation(line: 84, column: 14, scope: !5939)
!5941 = !DILocation(line: 84, column: 6, scope: !5910)
!5942 = !DILocation(line: 87, column: 22, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5910, file: !5811, line: 87, column: 6)
!5944 = !DILocation(line: 87, column: 17, scope: !5943)
!5945 = !DILocation(line: 87, column: 14, scope: !5943)
!5946 = !DILocation(line: 87, column: 6, scope: !5910)
!5947 = !DILocalVariable(name: "key", arg: 1, scope: !5948, file: !5761, line: 84, type: !32)
!5948 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5949)
!5949 = !{!5947}
!5950 = !DILocation(line: 0, scope: !5948, inlinedAt: !5951)
!5951 = distinct !DILocation(line: 88, column: 3, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5943, file: !5811, line: 87, column: 30)
!5953 = !DILocation(line: 95, column: 2, scope: !5948, inlinedAt: !5951)
!5954 = !{i64 1652279}
!5955 = !DILocation(line: 89, column: 3, scope: !5952)
!5956 = !DILocation(line: 92, column: 7, scope: !5910)
!5957 = !DILocation(line: 92, column: 2, scope: !5910)
!5958 = !DILocation(line: 92, column: 31, scope: !5910)
!5959 = !DILocation(line: 93, column: 16, scope: !5910)
!5960 = !DILocation(line: 93, column: 14, scope: !5910)
!5961 = !DILocation(line: 0, scope: !5948, inlinedAt: !5962)
!5962 = distinct !DILocation(line: 95, column: 2, scope: !5910)
!5963 = !DILocation(line: 95, column: 2, scope: !5948, inlinedAt: !5962)
!5964 = !DILocation(line: 96, column: 26, scope: !5910)
!5965 = !DILocation(line: 96, column: 2, scope: !5910)
!5966 = !DILocation(line: 97, column: 2, scope: !5910)
!5967 = !DILocation(line: 98, column: 1, scope: !5910)
!5968 = distinct !DISubprogram(name: "z_errno", scope: !5969, file: !5969, line: 24, type: !5970, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !474)
!5969 = !DIFile(filename: "zephyr/include/generated/syscalls/errno_private.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!2634}
!5972 = !DILocation(line: 31, column: 2, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5968, file: !5969, line: 31, column: 2)
!5974 = !{i64 2151741368}
!5975 = !DILocation(line: 32, column: 9, scope: !5968)
!5976 = !DILocation(line: 32, column: 2, scope: !5968)
!5977 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5978, file: !5978, line: 403, type: !5979, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5981)
!5978 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!2341, !2341}
!5981 = !{!5982}
!5982 = !DILocalVariable(name: "t", arg: 1, scope: !5977, file: !5978, line: 403, type: !2341)
!5983 = !DILocation(line: 0, scope: !5977)
!5984 = !DILocalVariable(name: "t", arg: 1, scope: !5985, file: !5978, line: 102, type: !2341)
!5985 = distinct !DISubprogram(name: "z_tmcvt", scope: !5978, file: !5978, line: 102, type: !5986, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !5988)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!2341, !2341, !121, !121, !170, !170, !170, !170}
!5988 = !{!5984, !5989, !5990, !5991, !5992, !5993, !5994, !5995, !5996, !5997, !5998}
!5989 = !DILocalVariable(name: "from_hz", arg: 2, scope: !5985, file: !5978, line: 102, type: !121)
!5990 = !DILocalVariable(name: "to_hz", arg: 3, scope: !5985, file: !5978, line: 103, type: !121)
!5991 = !DILocalVariable(name: "const_hz", arg: 4, scope: !5985, file: !5978, line: 103, type: !170)
!5992 = !DILocalVariable(name: "result32", arg: 5, scope: !5985, file: !5978, line: 104, type: !170)
!5993 = !DILocalVariable(name: "round_up", arg: 6, scope: !5985, file: !5978, line: 104, type: !170)
!5994 = !DILocalVariable(name: "round_off", arg: 7, scope: !5985, file: !5978, line: 105, type: !170)
!5995 = !DILocalVariable(name: "mul_ratio", scope: !5985, file: !5978, line: 107, type: !170)
!5996 = !DILocalVariable(name: "div_ratio", scope: !5985, file: !5978, line: 109, type: !170)
!5997 = !DILocalVariable(name: "off", scope: !5985, file: !5978, line: 116, type: !2341)
!5998 = !DILocalVariable(name: "rdivisor", scope: !5999, file: !5978, line: 119, type: !121)
!5999 = distinct !DILexicalBlock(scope: !6000, file: !5978, line: 118, column: 18)
!6000 = distinct !DILexicalBlock(scope: !5985, file: !5978, line: 118, column: 6)
!6001 = !DILocation(line: 0, scope: !5985, inlinedAt: !6002)
!6002 = distinct !DILocation(line: 406, column: 9, scope: !5977)
!6003 = !DILocation(line: 145, column: 13, scope: !6004, inlinedAt: !6002)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !5978, line: 144, column: 10)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !5978, line: 142, column: 7)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !5978, line: 141, column: 24)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !5978, line: 141, column: 13)
!6008 = distinct !DILexicalBlock(scope: !5985, file: !5978, line: 134, column: 6)
!6009 = !DILocation(line: 406, column: 2, scope: !5977)
!6010 = distinct !DISubprogram(name: "k_sem_take", scope: !3650, file: !3650, line: 1044, type: !6011, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6018)
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!103, !6013, !6014}
!6013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5821, size: 32)
!6014 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !6015)
!6015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !6016)
!6016 = !{!6017}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6015, file: !1739, line: 66, baseType: !1738, size: 64)
!6018 = !{!6019, !6020}
!6019 = !DILocalVariable(name: "sem", arg: 1, scope: !6010, file: !3650, line: 1044, type: !6013)
!6020 = !DILocalVariable(name: "timeout", arg: 2, scope: !6010, file: !3650, line: 1044, type: !6014)
!6021 = !DILocation(line: 0, scope: !6010)
!6022 = !DILocation(line: 1053, column: 2, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6010, file: !3650, line: 1053, column: 2)
!6024 = !{i64 2152220556}
!6025 = !DILocation(line: 1054, column: 9, scope: !6010)
!6026 = !DILocation(line: 1054, column: 2, scope: !6010)
!6027 = distinct !DISubprogram(name: "uart_irq_tx_enable", scope: !5900, file: !5900, line: 193, type: !2707, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6028)
!6028 = !{!6029}
!6029 = !DILocalVariable(name: "dev", arg: 1, scope: !6027, file: !5900, line: 193, type: !2656)
!6030 = !DILocation(line: 0, scope: !6027)
!6031 = !DILocation(line: 202, column: 2, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6027, file: !5900, line: 202, column: 2)
!6033 = !{i64 2152468602}
!6034 = !DILocation(line: 203, column: 2, scope: !6027)
!6035 = !DILocation(line: 204, column: 1, scope: !6027)
!6036 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_enable", scope: !216, file: !216, line: 857, type: !2707, scopeLine: 858, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6037)
!6037 = !{!6038, !6039}
!6038 = !DILocalVariable(name: "dev", arg: 1, scope: !6036, file: !216, line: 857, type: !2656)
!6039 = !DILocalVariable(name: "api", scope: !6036, file: !216, line: 860, type: !2648)
!6040 = !DILocation(line: 0, scope: !6036)
!6041 = !DILocation(line: 861, column: 40, scope: !6036)
!6042 = !DILocation(line: 863, column: 11, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6036, file: !216, line: 863, column: 6)
!6044 = !DILocation(line: 863, column: 25, scope: !6043)
!6045 = !DILocation(line: 863, column: 6, scope: !6036)
!6046 = !DILocation(line: 864, column: 3, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6043, file: !216, line: 863, column: 34)
!6048 = !DILocation(line: 865, column: 2, scope: !6047)
!6049 = !DILocation(line: 869, column: 1, scope: !6036)
!6050 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !216, file: !216, line: 574, type: !2673, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6051)
!6051 = !{!6052, !6053, !6054}
!6052 = !DILocalVariable(name: "dev", arg: 1, scope: !6050, file: !216, line: 574, type: !2656)
!6053 = !DILocalVariable(name: "out_char", arg: 2, scope: !6050, file: !216, line: 575, type: !168)
!6054 = !DILocalVariable(name: "api", scope: !6050, file: !216, line: 577, type: !2648)
!6055 = !DILocation(line: 0, scope: !6050)
!6056 = !DILocation(line: 578, column: 40, scope: !6050)
!6057 = !DILocation(line: 580, column: 7, scope: !6050)
!6058 = !DILocation(line: 580, column: 2, scope: !6050)
!6059 = !DILocation(line: 581, column: 1, scope: !6050)
!6060 = distinct !DISubprogram(name: "tty_read", scope: !5811, file: !5811, line: 206, type: !6061, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6063)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!5814, !5816, !102, !357}
!6063 = !{!6064, !6065, !6066, !6067, !6068, !6069}
!6064 = !DILocalVariable(name: "tty", arg: 1, scope: !6060, file: !5811, line: 206, type: !5816)
!6065 = !DILocalVariable(name: "buf", arg: 2, scope: !6060, file: !5811, line: 206, type: !102)
!6066 = !DILocalVariable(name: "size", arg: 3, scope: !6060, file: !5811, line: 206, type: !357)
!6067 = !DILocalVariable(name: "p", scope: !6060, file: !5811, line: 208, type: !274)
!6068 = !DILocalVariable(name: "out_size", scope: !6060, file: !5811, line: 209, type: !357)
!6069 = !DILocalVariable(name: "res", scope: !6060, file: !5811, line: 210, type: !103)
!6070 = !DILocation(line: 0, scope: !6060)
!6071 = !DILocation(line: 212, column: 11, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6060, file: !5811, line: 212, column: 6)
!6073 = !DILocation(line: 212, column: 25, scope: !6072)
!6074 = !DILocation(line: 212, column: 6, scope: !6060)
!6075 = !DILocation(line: 216, column: 2, scope: !6060)
!6076 = !DILocation(line: 213, column: 10, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6072, file: !5811, line: 212, column: 32)
!6078 = !DILocation(line: 213, column: 3, scope: !6077)
!6079 = !DILocation(line: 216, column: 13, scope: !6060)
!6080 = !DILocation(line: 217, column: 9, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6060, file: !5811, line: 216, column: 17)
!6082 = !DILocation(line: 218, column: 11, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6081, file: !5811, line: 218, column: 7)
!6084 = !DILocation(line: 218, column: 7, scope: !6081)
!6085 = !DILocation(line: 220, column: 17, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !5811, line: 220, column: 8)
!6087 = distinct !DILexicalBlock(scope: !6083, file: !5811, line: 218, column: 16)
!6088 = !DILocation(line: 220, column: 8, scope: !6087)
!6089 = !DILocation(line: 221, column: 13, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6086, file: !5811, line: 220, column: 23)
!6091 = !DILocation(line: 221, column: 5, scope: !6090)
!6092 = !DILocation(line: 221, column: 11, scope: !6090)
!6093 = !DILocation(line: 222, column: 5, scope: !6090)
!6094 = !DILocation(line: 234, column: 10, scope: !6081)
!6095 = !DILocation(line: 234, column: 5, scope: !6081)
!6096 = !DILocation(line: 234, column: 8, scope: !6081)
!6097 = !DILocation(line: 235, column: 11, scope: !6081)
!6098 = distinct !{!6098, !6075, !6099}
!6099 = !DILocation(line: 236, column: 2, scope: !6060)
!6100 = !DILocation(line: 239, column: 1, scope: !6060)
!6101 = distinct !DISubprogram(name: "tty_read_unbuf", scope: !5811, file: !5811, line: 162, type: !6061, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6102)
!6102 = !{!6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110}
!6103 = !DILocalVariable(name: "tty", arg: 1, scope: !6101, file: !5811, line: 162, type: !5816)
!6104 = !DILocalVariable(name: "buf", arg: 2, scope: !6101, file: !5811, line: 162, type: !102)
!6105 = !DILocalVariable(name: "size", arg: 3, scope: !6101, file: !5811, line: 162, type: !357)
!6106 = !DILocalVariable(name: "p", scope: !6101, file: !5811, line: 164, type: !274)
!6107 = !DILocalVariable(name: "out_size", scope: !6101, file: !5811, line: 165, type: !357)
!6108 = !DILocalVariable(name: "res", scope: !6101, file: !5811, line: 166, type: !103)
!6109 = !DILocalVariable(name: "timeout", scope: !6101, file: !5811, line: 167, type: !121)
!6110 = !DILocalVariable(name: "c", scope: !6111, file: !5811, line: 170, type: !167)
!6111 = distinct !DILexicalBlock(scope: !6101, file: !5811, line: 169, column: 15)
!6112 = !DILocation(line: 0, scope: !6101)
!6113 = !DILocation(line: 169, column: 2, scope: !6101)
!6114 = !DILocation(line: 167, column: 26, scope: !6101)
!6115 = !DILocation(line: 170, column: 3, scope: !6111)
!6116 = !DILocation(line: 171, column: 27, scope: !6111)
!6117 = !DILocation(line: 0, scope: !6111)
!6118 = !DILocation(line: 171, column: 9, scope: !6111)
!6119 = !DILocation(line: 172, column: 11, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6111, file: !5811, line: 172, column: 7)
!6121 = !DILocation(line: 172, column: 7, scope: !6111)
!6122 = !DILocation(line: 177, column: 17, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !5811, line: 177, column: 8)
!6124 = distinct !DILexicalBlock(scope: !6120, file: !5811, line: 172, column: 18)
!6125 = !DILocation(line: 177, column: 8, scope: !6124)
!6126 = !DILocation(line: 178, column: 5, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6123, file: !5811, line: 177, column: 23)
!6128 = !DILocation(line: 178, column: 11, scope: !6127)
!6129 = !DILocation(line: 201, column: 2, scope: !6101)
!6130 = !DILocation(line: 184, column: 11, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6111, file: !5811, line: 184, column: 7)
!6132 = !DILocation(line: 184, column: 7, scope: !6111)
!6133 = !DILocation(line: 185, column: 11, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6131, file: !5811, line: 184, column: 17)
!6135 = !DILocation(line: 185, column: 6, scope: !6134)
!6136 = !DILocation(line: 185, column: 9, scope: !6134)
!6137 = !DILocation(line: 186, column: 12, scope: !6134)
!6138 = !DILocation(line: 187, column: 8, scope: !6134)
!6139 = !DILocation(line: 190, column: 12, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6111, file: !5811, line: 190, column: 7)
!6141 = !DILocation(line: 190, column: 17, scope: !6140)
!6142 = !DILocation(line: 191, column: 17, scope: !6140)
!6143 = !DILocation(line: 191, column: 36, scope: !6140)
!6144 = !DILocation(line: 191, column: 46, scope: !6140)
!6145 = !DILocation(line: 191, column: 49, scope: !6140)
!6146 = !DILocation(line: 190, column: 7, scope: !6111)
!6147 = !DILocation(line: 198, column: 11, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6111, file: !5811, line: 198, column: 7)
!6149 = !DILocation(line: 198, column: 7, scope: !6111)
!6150 = !DILocation(line: 199, column: 12, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6148, file: !5811, line: 198, column: 18)
!6152 = !DILocation(line: 199, column: 4, scope: !6151)
!6153 = !DILocation(line: 200, column: 3, scope: !6151)
!6154 = !DILocation(line: 204, column: 1, scope: !6101)
!6155 = distinct !DISubprogram(name: "tty_getchar", scope: !5811, file: !5811, line: 141, type: !6156, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6158)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{!103, !5816}
!6158 = !{!6159, !6160, !6161, !6162}
!6159 = !DILocalVariable(name: "tty", arg: 1, scope: !6155, file: !5811, line: 141, type: !5816)
!6160 = !DILocalVariable(name: "key", scope: !6155, file: !5811, line: 143, type: !32)
!6161 = !DILocalVariable(name: "c", scope: !6155, file: !5811, line: 144, type: !167)
!6162 = !DILocalVariable(name: "res", scope: !6155, file: !5811, line: 145, type: !103)
!6163 = !DILocation(line: 0, scope: !6155)
!6164 = !DILocation(line: 147, column: 25, scope: !6155)
!6165 = !DILocation(line: 147, column: 33, scope: !6155)
!6166 = !DILocation(line: 147, column: 8, scope: !6155)
!6167 = !DILocation(line: 148, column: 10, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6155, file: !5811, line: 148, column: 6)
!6169 = !DILocation(line: 148, column: 6, scope: !6155)
!6170 = !DILocation(line: 55, column: 2, scope: !5928, inlinedAt: !6171)
!6171 = distinct !DILocation(line: 152, column: 8, scope: !6155)
!6172 = !DILocation(line: 0, scope: !5928, inlinedAt: !6171)
!6173 = !DILocation(line: 153, column: 11, scope: !6155)
!6174 = !DILocation(line: 153, column: 27, scope: !6155)
!6175 = !DILocation(line: 153, column: 33, scope: !6155)
!6176 = !DILocation(line: 153, column: 6, scope: !6155)
!6177 = !DILocation(line: 154, column: 6, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6155, file: !5811, line: 154, column: 6)
!6179 = !DILocation(line: 154, column: 26, scope: !6178)
!6180 = !DILocation(line: 154, column: 18, scope: !6178)
!6181 = !DILocation(line: 154, column: 6, scope: !6155)
!6182 = !DILocation(line: 0, scope: !5948, inlinedAt: !6183)
!6183 = distinct !DILocation(line: 157, column: 2, scope: !6155)
!6184 = !DILocation(line: 95, column: 2, scope: !5948, inlinedAt: !6183)
!6185 = !DILocation(line: 159, column: 9, scope: !6155)
!6186 = !DILocation(line: 159, column: 2, scope: !6155)
!6187 = !DILocation(line: 160, column: 1, scope: !6155)
!6188 = distinct !DISubprogram(name: "uart_poll_in", scope: !5900, file: !5900, line: 47, type: !2654, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6189)
!6189 = !{!6190, !6191}
!6190 = !DILocalVariable(name: "dev", arg: 1, scope: !6188, file: !5900, line: 47, type: !2656)
!6191 = !DILocalVariable(name: "p_char", arg: 2, scope: !6188, file: !5900, line: 47, type: !237)
!6192 = !DILocation(line: 0, scope: !6188)
!6193 = !DILocation(line: 56, column: 2, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6188, file: !5900, line: 56, column: 2)
!6195 = !{i64 2152468194}
!6196 = !DILocation(line: 57, column: 9, scope: !6188)
!6197 = !DILocation(line: 57, column: 2, scope: !6188)
!6198 = distinct !DISubprogram(name: "k_sleep", scope: !3650, file: !3650, line: 91, type: !6199, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6201)
!6199 = !DISubroutineType(types: !6200)
!6200 = !{!345, !6014}
!6201 = !{!6202}
!6202 = !DILocalVariable(name: "timeout", arg: 1, scope: !6198, file: !3650, line: 91, type: !6014)
!6203 = !DILocation(line: 0, scope: !6198)
!6204 = !DILocation(line: 99, column: 2, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6198, file: !3650, line: 99, column: 2)
!6206 = !{i64 2152216712}
!6207 = !DILocation(line: 100, column: 9, scope: !6198)
!6208 = !DILocation(line: 100, column: 2, scope: !6198)
!6209 = distinct !DISubprogram(name: "z_impl_uart_poll_in", scope: !216, file: !216, line: 504, type: !2654, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6210)
!6210 = !{!6211, !6212, !6213}
!6211 = !DILocalVariable(name: "dev", arg: 1, scope: !6209, file: !216, line: 504, type: !2656)
!6212 = !DILocalVariable(name: "p_char", arg: 2, scope: !6209, file: !216, line: 505, type: !237)
!6213 = !DILocalVariable(name: "api", scope: !6209, file: !216, line: 507, type: !2648)
!6214 = !DILocation(line: 0, scope: !6209)
!6215 = !DILocation(line: 508, column: 40, scope: !6209)
!6216 = !DILocation(line: 510, column: 11, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6209, file: !216, line: 510, column: 6)
!6218 = !DILocation(line: 510, column: 19, scope: !6217)
!6219 = !DILocation(line: 510, column: 6, scope: !6209)
!6220 = !DILocation(line: 514, column: 9, scope: !6209)
!6221 = !DILocation(line: 514, column: 2, scope: !6209)
!6222 = !DILocation(line: 515, column: 1, scope: !6209)
!6223 = distinct !DISubprogram(name: "tty_init", scope: !5811, file: !5811, line: 241, type: !6224, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6226)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{!103, !5816, !2656}
!6226 = !{!6227, !6228}
!6227 = !DILocalVariable(name: "tty", arg: 1, scope: !6223, file: !5811, line: 241, type: !5816)
!6228 = !DILocalVariable(name: "uart_dev", arg: 2, scope: !6223, file: !5811, line: 241, type: !2656)
!6229 = !DILocation(line: 0, scope: !6223)
!6230 = !DILocation(line: 243, column: 7, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6223, file: !5811, line: 243, column: 6)
!6232 = !DILocation(line: 243, column: 6, scope: !6223)
!6233 = !DILocation(line: 247, column: 7, scope: !6223)
!6234 = !DILocation(line: 247, column: 16, scope: !6223)
!6235 = !DILocation(line: 250, column: 7, scope: !6223)
!6236 = !DILocation(line: 250, column: 18, scope: !6223)
!6237 = !DILocation(line: 251, column: 7, scope: !6223)
!6238 = !DILocation(line: 251, column: 21, scope: !6223)
!6239 = !DILocation(line: 252, column: 7, scope: !6223)
!6240 = !DILocation(line: 252, column: 18, scope: !6223)
!6241 = !DILocation(line: 253, column: 7, scope: !6223)
!6242 = !DILocation(line: 253, column: 21, scope: !6223)
!6243 = !DILocation(line: 255, column: 49, scope: !6223)
!6244 = !DILocation(line: 255, column: 56, scope: !6223)
!6245 = !DILocation(line: 255, column: 35, scope: !6223)
!6246 = !DILocation(line: 255, column: 42, scope: !6223)
!6247 = !DILocation(line: 255, column: 21, scope: !6223)
!6248 = !DILocation(line: 255, column: 28, scope: !6223)
!6249 = !DILocation(line: 255, column: 7, scope: !6223)
!6250 = !DILocation(line: 255, column: 14, scope: !6223)
!6251 = !DILocation(line: 257, column: 7, scope: !6223)
!6252 = !DILocation(line: 257, column: 18, scope: !6223)
!6253 = !DILocation(line: 258, column: 7, scope: !6223)
!6254 = !DILocation(line: 258, column: 18, scope: !6223)
!6255 = !DILocation(line: 260, column: 58, scope: !6223)
!6256 = !DILocation(line: 260, column: 2, scope: !6223)
!6257 = !DILocation(line: 262, column: 2, scope: !6223)
!6258 = !DILocation(line: 263, column: 1, scope: !6223)
!6259 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !216, file: !216, line: 1163, type: !2721, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6260)
!6260 = !{!6261, !6262, !6263, !6264}
!6261 = !DILocalVariable(name: "dev", arg: 1, scope: !6259, file: !216, line: 1163, type: !2656)
!6262 = !DILocalVariable(name: "cb", arg: 2, scope: !6259, file: !216, line: 1164, type: !2723)
!6263 = !DILocalVariable(name: "user_data", arg: 3, scope: !6259, file: !216, line: 1165, type: !102)
!6264 = !DILocalVariable(name: "api", scope: !6259, file: !216, line: 1168, type: !2648)
!6265 = !DILocation(line: 0, scope: !6259)
!6266 = !DILocation(line: 1169, column: 40, scope: !6259)
!6267 = !DILocation(line: 1171, column: 11, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6259, file: !216, line: 1171, column: 6)
!6269 = !DILocation(line: 1171, column: 20, scope: !6268)
!6270 = !DILocation(line: 1171, column: 29, scope: !6268)
!6271 = !DILocation(line: 1171, column: 46, scope: !6268)
!6272 = !DILocation(line: 1171, column: 6, scope: !6259)
!6273 = !DILocation(line: 1172, column: 3, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6268, file: !216, line: 1171, column: 56)
!6275 = !DILocation(line: 1173, column: 2, scope: !6274)
!6276 = !DILocation(line: 1179, column: 1, scope: !6259)
!6277 = distinct !DISubprogram(name: "tty_uart_isr", scope: !5811, file: !5811, line: 15, type: !2725, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6278)
!6278 = !{!6279, !6280, !6281, !6282}
!6279 = !DILocalVariable(name: "dev", arg: 1, scope: !6277, file: !5811, line: 15, type: !2656)
!6280 = !DILocalVariable(name: "user_data", arg: 2, scope: !6277, file: !5811, line: 15, type: !102)
!6281 = !DILocalVariable(name: "tty", scope: !6277, file: !5811, line: 17, type: !5816)
!6282 = !DILocalVariable(name: "c", scope: !6283, file: !5811, line: 22, type: !167)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !5811, line: 21, column: 30)
!6284 = distinct !DILexicalBlock(scope: !6277, file: !5811, line: 21, column: 6)
!6285 = !DILocation(line: 0, scope: !6277)
!6286 = !DILocation(line: 17, column: 27, scope: !6277)
!6287 = !DILocation(line: 19, column: 2, scope: !6277)
!6288 = !DILocation(line: 21, column: 6, scope: !6284)
!6289 = !DILocation(line: 21, column: 6, scope: !6277)
!6290 = !DILocation(line: 22, column: 3, scope: !6283)
!6291 = !DILocation(line: 0, scope: !6283)
!6292 = !DILocation(line: 25, column: 8, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !5811, line: 25, column: 8)
!6294 = distinct !DILexicalBlock(scope: !6283, file: !5811, line: 24, column: 13)
!6295 = !DILocation(line: 25, column: 35, scope: !6293)
!6296 = !DILocation(line: 25, column: 8, scope: !6294)
!6297 = !DILocation(line: 28, column: 28, scope: !6294)
!6298 = !DILocation(line: 28, column: 4, scope: !6294)
!6299 = distinct !{!6299, !6300, !6301}
!6300 = !DILocation(line: 24, column: 3, scope: !6283)
!6301 = !DILocation(line: 29, column: 3, scope: !6283)
!6302 = !DILocation(line: 30, column: 2, scope: !6284)
!6303 = !DILocation(line: 30, column: 2, scope: !6283)
!6304 = !DILocation(line: 32, column: 6, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6277, file: !5811, line: 32, column: 6)
!6306 = !DILocation(line: 32, column: 6, scope: !6277)
!6307 = !DILocation(line: 33, column: 12, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !5811, line: 33, column: 7)
!6309 = distinct !DILexicalBlock(scope: !6305, file: !5811, line: 32, column: 30)
!6310 = !DILocation(line: 33, column: 27, scope: !6308)
!6311 = !DILocation(line: 33, column: 19, scope: !6308)
!6312 = !DILocation(line: 33, column: 7, scope: !6309)
!6313 = !DILocation(line: 37, column: 4, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6308, file: !5811, line: 33, column: 35)
!6315 = !DILocation(line: 38, column: 3, scope: !6314)
!6316 = !DILocation(line: 33, column: 7, scope: !6308)
!6317 = !DILocation(line: 39, column: 30, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6308, file: !5811, line: 38, column: 10)
!6319 = !DILocation(line: 39, column: 52, scope: !6318)
!6320 = !DILocation(line: 39, column: 25, scope: !6318)
!6321 = !DILocation(line: 39, column: 4, scope: !6318)
!6322 = !DILocation(line: 40, column: 13, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6318, file: !5811, line: 40, column: 8)
!6324 = !DILocation(line: 40, column: 8, scope: !6323)
!6325 = !DILocation(line: 40, column: 28, scope: !6323)
!6326 = !DILocation(line: 40, column: 20, scope: !6323)
!6327 = !DILocation(line: 40, column: 8, scope: !6318)
!6328 = !DILocation(line: 41, column: 17, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !5811, line: 40, column: 43)
!6330 = !DILocation(line: 42, column: 4, scope: !6329)
!6331 = !DILocation(line: 43, column: 21, scope: !6318)
!6332 = !DILocation(line: 43, column: 4, scope: !6318)
!6333 = !DILocation(line: 46, column: 1, scope: !6277)
!6334 = distinct !DISubprogram(name: "uart_irq_update", scope: !5900, file: !5900, line: 360, type: !2677, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6335)
!6335 = !{!6336}
!6336 = !DILocalVariable(name: "dev", arg: 1, scope: !6334, file: !5900, line: 360, type: !2656)
!6337 = !DILocation(line: 0, scope: !6334)
!6338 = !DILocation(line: 368, column: 2, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6334, file: !5900, line: 368, column: 2)
!6340 = !{i64 2152469078}
!6341 = !DILocation(line: 369, column: 9, scope: !6334)
!6342 = !DILocation(line: 369, column: 2, scope: !6334)
!6343 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !216, file: !216, line: 1024, type: !2677, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6344)
!6344 = !{!6345, !6346}
!6345 = !DILocalVariable(name: "dev", arg: 1, scope: !6343, file: !216, line: 1024, type: !2656)
!6346 = !DILocalVariable(name: "api", scope: !6343, file: !216, line: 1027, type: !2648)
!6347 = !DILocation(line: 0, scope: !6343)
!6348 = !DILocation(line: 1028, column: 40, scope: !6343)
!6349 = !DILocation(line: 1030, column: 11, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6343, file: !216, line: 1030, column: 6)
!6351 = !DILocation(line: 1030, column: 24, scope: !6350)
!6352 = !DILocation(line: 1030, column: 6, scope: !6343)
!6353 = !DILocation(line: 1033, column: 9, scope: !6343)
!6354 = !DILocation(line: 1033, column: 2, scope: !6343)
!6355 = !DILocation(line: 1038, column: 1, scope: !6343)
!6356 = distinct !DISubprogram(name: "uart_fifo_read", scope: !216, file: !216, line: 785, type: !2703, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6357)
!6357 = !{!6358, !6359, !6360, !6361}
!6358 = !DILocalVariable(name: "dev", arg: 1, scope: !6356, file: !216, line: 785, type: !2656)
!6359 = !DILocalVariable(name: "rx_data", arg: 2, scope: !6356, file: !216, line: 785, type: !274)
!6360 = !DILocalVariable(name: "size", arg: 3, scope: !6356, file: !216, line: 786, type: !275)
!6361 = !DILocalVariable(name: "api", scope: !6356, file: !216, line: 789, type: !2648)
!6362 = !DILocation(line: 0, scope: !6356)
!6363 = !DILocation(line: 790, column: 40, scope: !6356)
!6364 = !DILocation(line: 792, column: 11, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6356, file: !216, line: 792, column: 6)
!6366 = !DILocation(line: 792, column: 21, scope: !6365)
!6367 = !DILocation(line: 792, column: 6, scope: !6356)
!6368 = !DILocation(line: 796, column: 9, scope: !6356)
!6369 = !DILocation(line: 796, column: 2, scope: !6356)
!6370 = !DILocation(line: 803, column: 1, scope: !6356)
!6371 = distinct !DISubprogram(name: "tty_irq_input_hook", scope: !5811, file: !5811, line: 48, type: !5911, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6372)
!6372 = !{!6373, !6374, !6375}
!6373 = !DILocalVariable(name: "tty", arg: 1, scope: !6371, file: !5811, line: 48, type: !5816)
!6374 = !DILocalVariable(name: "c", arg: 2, scope: !6371, file: !5811, line: 48, type: !167)
!6375 = !DILocalVariable(name: "rx_next", scope: !6371, file: !5811, line: 50, type: !103)
!6376 = !DILocation(line: 0, scope: !6371)
!6377 = !DILocation(line: 50, column: 21, scope: !6371)
!6378 = !DILocation(line: 50, column: 16, scope: !6371)
!6379 = !DILocation(line: 50, column: 28, scope: !6371)
!6380 = !DILocation(line: 52, column: 22, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6371, file: !5811, line: 52, column: 6)
!6382 = !DILocation(line: 52, column: 14, scope: !6381)
!6383 = !DILocation(line: 52, column: 6, scope: !6371)
!6384 = !DILocation(line: 56, column: 22, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6371, file: !5811, line: 56, column: 6)
!6386 = !DILocation(line: 56, column: 17, scope: !6385)
!6387 = !DILocation(line: 56, column: 14, scope: !6385)
!6388 = !DILocation(line: 56, column: 6, scope: !6371)
!6389 = !DILocation(line: 58, column: 3, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6385, file: !5811, line: 56, column: 30)
!6391 = !DILocation(line: 59, column: 3, scope: !6390)
!6392 = !DILocation(line: 62, column: 7, scope: !6371)
!6393 = !DILocation(line: 62, column: 2, scope: !6371)
!6394 = !DILocation(line: 62, column: 31, scope: !6371)
!6395 = !DILocation(line: 63, column: 16, scope: !6371)
!6396 = !DILocation(line: 63, column: 14, scope: !6371)
!6397 = !DILocation(line: 64, column: 19, scope: !6371)
!6398 = !DILocation(line: 64, column: 2, scope: !6371)
!6399 = !DILocation(line: 66, column: 2, scope: !6371)
!6400 = !DILocation(line: 67, column: 1, scope: !6371)
!6401 = distinct !DISubprogram(name: "uart_irq_tx_ready", scope: !216, file: !216, line: 910, type: !2677, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6402)
!6402 = !{!6403, !6404}
!6403 = !DILocalVariable(name: "dev", arg: 1, scope: !6401, file: !216, line: 910, type: !2656)
!6404 = !DILocalVariable(name: "api", scope: !6401, file: !216, line: 913, type: !2648)
!6405 = !DILocation(line: 0, scope: !6401)
!6406 = !DILocation(line: 914, column: 40, scope: !6401)
!6407 = !DILocation(line: 916, column: 11, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6401, file: !216, line: 916, column: 6)
!6409 = !DILocation(line: 916, column: 24, scope: !6408)
!6410 = !DILocation(line: 916, column: 6, scope: !6401)
!6411 = !DILocation(line: 920, column: 9, scope: !6401)
!6412 = !DILocation(line: 920, column: 2, scope: !6401)
!6413 = !DILocation(line: 925, column: 1, scope: !6401)
!6414 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5900, file: !5900, line: 217, type: !2707, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6415)
!6415 = !{!6416}
!6416 = !DILocalVariable(name: "dev", arg: 1, scope: !6414, file: !5900, line: 217, type: !2656)
!6417 = !DILocation(line: 0, scope: !6414)
!6418 = !DILocation(line: 226, column: 2, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6414, file: !5900, line: 226, column: 2)
!6420 = !{i64 2152468670}
!6421 = !DILocation(line: 227, column: 2, scope: !6414)
!6422 = !DILocation(line: 228, column: 1, scope: !6414)
!6423 = distinct !DISubprogram(name: "uart_fifo_fill", scope: !216, file: !216, line: 699, type: !2699, scopeLine: 702, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6424)
!6424 = !{!6425, !6426, !6427, !6428}
!6425 = !DILocalVariable(name: "dev", arg: 1, scope: !6423, file: !216, line: 699, type: !2656)
!6426 = !DILocalVariable(name: "tx_data", arg: 2, scope: !6423, file: !216, line: 700, type: !268)
!6427 = !DILocalVariable(name: "size", arg: 3, scope: !6423, file: !216, line: 701, type: !103)
!6428 = !DILocalVariable(name: "api", scope: !6423, file: !216, line: 704, type: !2648)
!6429 = !DILocation(line: 0, scope: !6423)
!6430 = !DILocation(line: 705, column: 40, scope: !6423)
!6431 = !DILocation(line: 707, column: 11, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6423, file: !216, line: 707, column: 6)
!6433 = !DILocation(line: 707, column: 21, scope: !6432)
!6434 = !DILocation(line: 707, column: 6, scope: !6423)
!6435 = !DILocation(line: 711, column: 9, scope: !6423)
!6436 = !DILocation(line: 711, column: 2, scope: !6423)
!6437 = !DILocation(line: 718, column: 1, scope: !6423)
!6438 = distinct !DISubprogram(name: "k_sem_give", scope: !3650, file: !3650, line: 1061, type: !6439, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6441)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{null, !6013}
!6441 = !{!6442}
!6442 = !DILocalVariable(name: "sem", arg: 1, scope: !6438, file: !3650, line: 1061, type: !6013)
!6443 = !DILocation(line: 0, scope: !6438)
!6444 = !DILocation(line: 1070, column: 2, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6438, file: !3650, line: 1070, column: 2)
!6446 = !{i64 2152220624}
!6447 = !DILocation(line: 1071, column: 2, scope: !6438)
!6448 = !DILocation(line: 1072, column: 1, scope: !6438)
!6449 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !216, file: !216, line: 878, type: !2707, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6450)
!6450 = !{!6451, !6452}
!6451 = !DILocalVariable(name: "dev", arg: 1, scope: !6449, file: !216, line: 878, type: !2656)
!6452 = !DILocalVariable(name: "api", scope: !6449, file: !216, line: 881, type: !2648)
!6453 = !DILocation(line: 0, scope: !6449)
!6454 = !DILocation(line: 882, column: 40, scope: !6449)
!6455 = !DILocation(line: 884, column: 11, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6449, file: !216, line: 884, column: 6)
!6457 = !DILocation(line: 884, column: 26, scope: !6456)
!6458 = !DILocation(line: 884, column: 6, scope: !6449)
!6459 = !DILocation(line: 885, column: 3, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6456, file: !216, line: 884, column: 35)
!6461 = !DILocation(line: 886, column: 2, scope: !6460)
!6462 = !DILocation(line: 890, column: 1, scope: !6449)
!6463 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !216, file: !216, line: 1136, type: !2677, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6464)
!6464 = !{!6465, !6466}
!6465 = !DILocalVariable(name: "dev", arg: 1, scope: !6463, file: !216, line: 1136, type: !2656)
!6466 = !DILocalVariable(name: "api", scope: !6463, file: !216, line: 1139, type: !2648)
!6467 = !DILocation(line: 0, scope: !6463)
!6468 = !DILocation(line: 1140, column: 40, scope: !6463)
!6469 = !DILocation(line: 1142, column: 11, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6463, file: !216, line: 1142, column: 6)
!6471 = !DILocation(line: 1142, column: 22, scope: !6470)
!6472 = !DILocation(line: 1142, column: 6, scope: !6463)
!6473 = !DILocation(line: 1145, column: 9, scope: !6463)
!6474 = !DILocation(line: 1145, column: 2, scope: !6463)
!6475 = !DILocation(line: 1150, column: 1, scope: !6463)
!6476 = distinct !DISubprogram(name: "tty_set_rx_buf", scope: !5811, file: !5811, line: 265, type: !6477, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!103, !5816, !102, !357}
!6479 = !{!6480, !6481, !6482}
!6480 = !DILocalVariable(name: "tty", arg: 1, scope: !6476, file: !5811, line: 265, type: !5816)
!6481 = !DILocalVariable(name: "buf", arg: 2, scope: !6476, file: !5811, line: 265, type: !102)
!6482 = !DILocalVariable(name: "size", arg: 3, scope: !6476, file: !5811, line: 265, type: !357)
!6483 = !DILocation(line: 0, scope: !6476)
!6484 = !DILocation(line: 267, column: 27, scope: !6476)
!6485 = !DILocation(line: 267, column: 2, scope: !6476)
!6486 = !DILocation(line: 269, column: 7, scope: !6476)
!6487 = !DILocation(line: 269, column: 18, scope: !6476)
!6488 = !DILocation(line: 270, column: 7, scope: !6476)
!6489 = !DILocation(line: 270, column: 21, scope: !6476)
!6490 = !DILocation(line: 272, column: 11, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6476, file: !5811, line: 272, column: 6)
!6492 = !DILocation(line: 272, column: 6, scope: !6476)
!6493 = !DILocation(line: 273, column: 20, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6491, file: !5811, line: 272, column: 16)
!6495 = !DILocation(line: 273, column: 3, scope: !6494)
!6496 = !DILocation(line: 274, column: 27, scope: !6494)
!6497 = !DILocation(line: 274, column: 3, scope: !6494)
!6498 = !DILocation(line: 275, column: 2, scope: !6494)
!6499 = !DILocation(line: 277, column: 2, scope: !6476)
!6500 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5900, file: !5900, line: 265, type: !2707, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6501)
!6501 = !{!6502}
!6502 = !DILocalVariable(name: "dev", arg: 1, scope: !6500, file: !5900, line: 265, type: !2656)
!6503 = !DILocation(line: 0, scope: !6500)
!6504 = !DILocation(line: 274, column: 2, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6500, file: !5900, line: 274, column: 2)
!6506 = !{i64 2152468806}
!6507 = !DILocation(line: 275, column: 2, scope: !6500)
!6508 = !DILocation(line: 276, column: 1, scope: !6500)
!6509 = distinct !DISubprogram(name: "k_sem_init", scope: !3650, file: !3650, line: 1026, type: !6510, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6512)
!6510 = !DISubroutineType(types: !6511)
!6511 = !{!103, !6013, !32, !32}
!6512 = !{!6513, !6514, !6515}
!6513 = !DILocalVariable(name: "sem", arg: 1, scope: !6509, file: !3650, line: 1026, type: !6013)
!6514 = !DILocalVariable(name: "initial_count", arg: 2, scope: !6509, file: !3650, line: 1026, type: !32)
!6515 = !DILocalVariable(name: "limit", arg: 3, scope: !6509, file: !3650, line: 1026, type: !32)
!6516 = !DILocation(line: 0, scope: !6509)
!6517 = !DILocation(line: 1036, column: 2, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6509, file: !3650, line: 1036, column: 2)
!6519 = !{i64 2152220488}
!6520 = !DILocation(line: 1037, column: 9, scope: !6509)
!6521 = !DILocation(line: 1037, column: 2, scope: !6509)
!6522 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5900, file: !5900, line: 241, type: !2707, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6523)
!6523 = !{!6524}
!6524 = !DILocalVariable(name: "dev", arg: 1, scope: !6522, file: !5900, line: 241, type: !2656)
!6525 = !DILocation(line: 0, scope: !6522)
!6526 = !DILocation(line: 250, column: 2, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6522, file: !5900, line: 250, column: 2)
!6528 = !{i64 2152468738}
!6529 = !DILocation(line: 251, column: 2, scope: !6522)
!6530 = !DILocation(line: 252, column: 1, scope: !6522)
!6531 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !216, file: !216, line: 934, type: !2707, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6532)
!6532 = !{!6533, !6534}
!6533 = !DILocalVariable(name: "dev", arg: 1, scope: !6531, file: !216, line: 934, type: !2656)
!6534 = !DILocalVariable(name: "api", scope: !6531, file: !216, line: 937, type: !2648)
!6535 = !DILocation(line: 0, scope: !6531)
!6536 = !DILocation(line: 938, column: 40, scope: !6531)
!6537 = !DILocation(line: 940, column: 11, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6531, file: !216, line: 940, column: 6)
!6539 = !DILocation(line: 940, column: 25, scope: !6538)
!6540 = !DILocation(line: 940, column: 6, scope: !6531)
!6541 = !DILocation(line: 941, column: 3, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6538, file: !216, line: 940, column: 34)
!6543 = !DILocation(line: 942, column: 2, scope: !6542)
!6544 = !DILocation(line: 946, column: 1, scope: !6531)
!6545 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !216, file: !216, line: 955, type: !2707, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6546)
!6546 = !{!6547, !6548}
!6547 = !DILocalVariable(name: "dev", arg: 1, scope: !6545, file: !216, line: 955, type: !2656)
!6548 = !DILocalVariable(name: "api", scope: !6545, file: !216, line: 958, type: !2648)
!6549 = !DILocation(line: 0, scope: !6545)
!6550 = !DILocation(line: 959, column: 40, scope: !6545)
!6551 = !DILocation(line: 961, column: 11, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6545, file: !216, line: 961, column: 6)
!6553 = !DILocation(line: 961, column: 26, scope: !6552)
!6554 = !DILocation(line: 961, column: 6, scope: !6545)
!6555 = !DILocation(line: 962, column: 3, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6552, file: !216, line: 961, column: 35)
!6557 = !DILocation(line: 963, column: 2, scope: !6556)
!6558 = !DILocation(line: 967, column: 1, scope: !6545)
!6559 = distinct !DISubprogram(name: "tty_set_tx_buf", scope: !5811, file: !5811, line: 280, type: !6477, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6560)
!6560 = !{!6561, !6562, !6563}
!6561 = !DILocalVariable(name: "tty", arg: 1, scope: !6559, file: !5811, line: 280, type: !5816)
!6562 = !DILocalVariable(name: "buf", arg: 2, scope: !6559, file: !5811, line: 280, type: !102)
!6563 = !DILocalVariable(name: "size", arg: 3, scope: !6559, file: !5811, line: 280, type: !357)
!6564 = !DILocation(line: 0, scope: !6559)
!6565 = !DILocation(line: 282, column: 27, scope: !6559)
!6566 = !DILocation(line: 282, column: 2, scope: !6559)
!6567 = !DILocation(line: 284, column: 7, scope: !6559)
!6568 = !DILocation(line: 284, column: 18, scope: !6559)
!6569 = !DILocation(line: 285, column: 7, scope: !6559)
!6570 = !DILocation(line: 285, column: 21, scope: !6559)
!6571 = !DILocation(line: 287, column: 19, scope: !6559)
!6572 = !DILocation(line: 287, column: 32, scope: !6559)
!6573 = !DILocation(line: 287, column: 2, scope: !6559)
!6574 = !DILocation(line: 293, column: 2, scope: !6559)
!6575 = distinct !DISubprogram(name: "console_write", scope: !301, file: !301, line: 18, type: !6576, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6578)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{!5814, !102, !13, !357}
!6578 = !{!6579, !6580, !6581}
!6579 = !DILocalVariable(name: "dummy", arg: 1, scope: !6575, file: !301, line: 18, type: !102)
!6580 = !DILocalVariable(name: "buf", arg: 2, scope: !6575, file: !301, line: 18, type: !13)
!6581 = !DILocalVariable(name: "size", arg: 3, scope: !6575, file: !301, line: 18, type: !357)
!6582 = !DILocation(line: 0, scope: !6575)
!6583 = !DILocation(line: 22, column: 9, scope: !6575)
!6584 = !DILocation(line: 22, column: 2, scope: !6575)
!6585 = distinct !DISubprogram(name: "console_read", scope: !301, file: !301, line: 25, type: !6586, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6588)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!5814, !102, !102, !357}
!6588 = !{!6589, !6590, !6591}
!6589 = !DILocalVariable(name: "dummy", arg: 1, scope: !6585, file: !301, line: 25, type: !102)
!6590 = !DILocalVariable(name: "buf", arg: 2, scope: !6585, file: !301, line: 25, type: !102)
!6591 = !DILocalVariable(name: "size", arg: 3, scope: !6585, file: !301, line: 25, type: !357)
!6592 = !DILocation(line: 0, scope: !6585)
!6593 = !DILocation(line: 29, column: 9, scope: !6585)
!6594 = !DILocation(line: 29, column: 2, scope: !6585)
!6595 = distinct !DISubprogram(name: "console_putchar", scope: !301, file: !301, line: 32, type: !1134, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6596)
!6596 = !{!6597}
!6597 = !DILocalVariable(name: "c", arg: 1, scope: !6595, file: !301, line: 32, type: !159)
!6598 = !DILocation(line: 0, scope: !6595)
!6599 = !DILocation(line: 34, column: 9, scope: !6595)
!6600 = !DILocation(line: 34, column: 2, scope: !6595)
!6601 = distinct !DISubprogram(name: "console_getchar", scope: !301, file: !301, line: 37, type: !6602, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6604)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{!103}
!6604 = !{!6605, !6606}
!6605 = !DILocalVariable(name: "c", scope: !6601, file: !301, line: 39, type: !167)
!6606 = !DILocalVariable(name: "res", scope: !6601, file: !301, line: 40, type: !103)
!6607 = !DILocation(line: 39, column: 2, scope: !6601)
!6608 = !DILocation(line: 0, scope: !6601)
!6609 = !DILocation(line: 42, column: 8, scope: !6601)
!6610 = !DILocation(line: 43, column: 10, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6601, file: !301, line: 43, column: 6)
!6612 = !DILocation(line: 43, column: 6, scope: !6601)
!6613 = !DILocation(line: 48, column: 1, scope: !6601)
!6614 = distinct !DISubprogram(name: "console_init", scope: !301, file: !301, line: 50, type: !6602, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6615)
!6615 = !{!6616, !6617, !6618}
!6616 = !DILocalVariable(name: "uart_dev", scope: !6614, file: !301, line: 52, type: !222)
!6617 = !DILocalVariable(name: "ret", scope: !6614, file: !301, line: 53, type: !103)
!6618 = !DILocalVariable(name: "api", scope: !6619, file: !301, line: 68, type: !213)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !301, line: 67, column: 71)
!6620 = distinct !DILexicalBlock(scope: !6614, file: !301, line: 67, column: 6)
!6621 = !DILocation(line: 0, scope: !6614)
!6622 = !DILocation(line: 56, column: 7, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6614, file: !301, line: 56, column: 6)
!6624 = !DILocation(line: 56, column: 6, scope: !6614)
!6625 = !DILocation(line: 60, column: 8, scope: !6614)
!6626 = !DILocation(line: 62, column: 6, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6614, file: !301, line: 62, column: 6)
!6628 = !DILocation(line: 62, column: 6, scope: !6614)
!6629 = !DILocation(line: 69, column: 46, scope: !6619)
!6630 = !DILocation(line: 0, scope: !6619)
!6631 = !DILocation(line: 70, column: 13, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6619, file: !301, line: 70, column: 7)
!6633 = !DILocation(line: 70, column: 8, scope: !6632)
!6634 = !DILocation(line: 75, column: 2, scope: !6614)
!6635 = !DILocation(line: 76, column: 2, scope: !6614)
!6636 = !DILocation(line: 78, column: 2, scope: !6614)
!6637 = !DILocation(line: 79, column: 1, scope: !6614)
!6638 = distinct !DISubprogram(name: "device_is_ready", scope: !6639, file: !6639, line: 47, type: !6640, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6642)
!6639 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!6640 = !DISubroutineType(types: !6641)
!6641 = !{!170, !222}
!6642 = !{!6643}
!6643 = !DILocalVariable(name: "dev", arg: 1, scope: !6638, file: !6639, line: 47, type: !222)
!6644 = !DILocation(line: 0, scope: !6638)
!6645 = !DILocation(line: 55, column: 2, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6638, file: !6639, line: 55, column: 2)
!6647 = !{i64 2152381019}
!6648 = !DILocation(line: 56, column: 9, scope: !6638)
!6649 = !DILocation(line: 56, column: 2, scope: !6638)
!6650 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !6640, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !6651)
!6651 = !{!6652}
!6652 = !DILocalVariable(name: "dev", arg: 1, scope: !6650, file: !154, line: 730, type: !222)
!6653 = !DILocation(line: 0, scope: !6650)
!6654 = !DILocation(line: 732, column: 9, scope: !6650)
!6655 = !DILocation(line: 732, column: 2, scope: !6650)
!6656 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6657, file: !6657, line: 57, type: !6658, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6704)
!6657 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6658 = !DISubroutineType(types: !6659)
!6659 = !{null, !32, !6660}
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 32)
!6661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6662)
!6662 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2847, line: 141, baseType: !6663)
!6663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2847, line: 97, size: 256, elements: !6664)
!6664 = !{!6665}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6663, file: !2847, line: 107, baseType: !6666, size: 256)
!6666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2847, line: 98, size: 256, elements: !6667)
!6667 = !{!6668, !6673, !6678, !6683, !6688, !6693, !6698, !6703}
!6668 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 99, baseType: !6669, size: 32)
!6669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 99, size: 32, elements: !6670)
!6670 = !{!6671, !6672}
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6669, file: !2847, line: 99, baseType: !121, size: 32)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6669, file: !2847, line: 99, baseType: !121, size: 32)
!6673 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 100, baseType: !6674, size: 32, offset: 32)
!6674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 100, size: 32, elements: !6675)
!6675 = !{!6676, !6677}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6674, file: !2847, line: 100, baseType: !121, size: 32)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6674, file: !2847, line: 100, baseType: !121, size: 32)
!6678 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 101, baseType: !6679, size: 32, offset: 64)
!6679 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 101, size: 32, elements: !6680)
!6680 = !{!6681, !6682}
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6679, file: !2847, line: 101, baseType: !121, size: 32)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6679, file: !2847, line: 101, baseType: !121, size: 32)
!6683 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 102, baseType: !6684, size: 32, offset: 96)
!6684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 102, size: 32, elements: !6685)
!6685 = !{!6686, !6687}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6684, file: !2847, line: 102, baseType: !121, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6684, file: !2847, line: 102, baseType: !121, size: 32)
!6688 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 103, baseType: !6689, size: 32, offset: 128)
!6689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 103, size: 32, elements: !6690)
!6690 = !{!6691, !6692}
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6689, file: !2847, line: 103, baseType: !121, size: 32)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6689, file: !2847, line: 103, baseType: !121, size: 32)
!6693 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 104, baseType: !6694, size: 32, offset: 160)
!6694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 104, size: 32, elements: !6695)
!6695 = !{!6696, !6697}
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6694, file: !2847, line: 104, baseType: !121, size: 32)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6694, file: !2847, line: 104, baseType: !121, size: 32)
!6698 = !DIDerivedType(tag: DW_TAG_member, scope: !6666, file: !2847, line: 105, baseType: !6699, size: 32, offset: 192)
!6699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6666, file: !2847, line: 105, size: 32, elements: !6700)
!6700 = !{!6701, !6702}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6699, file: !2847, line: 105, baseType: !121, size: 32)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6699, file: !2847, line: 105, baseType: !121, size: 32)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6666, file: !2847, line: 106, baseType: !121, size: 32, offset: 224)
!6704 = !{!6705, !6706}
!6705 = !DILocalVariable(name: "reason", arg: 1, scope: !6656, file: !6657, line: 57, type: !32)
!6706 = !DILocalVariable(name: "esf", arg: 2, scope: !6656, file: !6657, line: 57, type: !6660)
!6707 = !DILocation(line: 0, scope: !6656)
!6708 = !DILocation(line: 63, column: 2, scope: !6656)
!6709 = !DILocation(line: 64, column: 1, scope: !6656)
!6710 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6657, file: !6657, line: 82, type: !6711, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6726)
!6711 = !DISubroutineType(types: !6712)
!6712 = !{null, !6660, !6713}
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !437, line: 37, baseType: !6715)
!6715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !6716)
!6716 = !{!6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725}
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6715, file: !437, line: 26, baseType: !121, size: 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6715, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6715, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6715, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6715, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6715, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6715, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6715, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6715, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!6726 = !{!6727, !6728, !6729}
!6727 = !DILocalVariable(name: "esf", arg: 1, scope: !6710, file: !6657, line: 82, type: !6660)
!6728 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6710, file: !6657, line: 82, type: !6713)
!6729 = !DILocalVariable(name: "reason", scope: !6710, file: !6657, line: 88, type: !32)
!6730 = !DILocation(line: 0, scope: !6710)
!6731 = !DILocation(line: 88, column: 35, scope: !6710)
!6732 = !DILocation(line: 108, column: 2, scope: !6710)
!6733 = !DILocation(line: 131, column: 1, scope: !6710)
!6734 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6657, file: !6657, line: 133, type: !6735, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6737)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{null, !102}
!6737 = !{!6738, !6739, !6740}
!6738 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6734, file: !6657, line: 133, type: !102)
!6739 = !DILocalVariable(name: "ssf_contents", scope: !6734, file: !6657, line: 135, type: !902)
!6740 = !DILocalVariable(name: "oops_esf", scope: !6734, file: !6657, line: 136, type: !6662)
!6741 = !DILocation(line: 0, scope: !6734)
!6742 = !DILocation(line: 136, column: 2, scope: !6734)
!6743 = !DILocation(line: 136, column: 15, scope: !6734)
!6744 = !DILocation(line: 139, column: 22, scope: !6734)
!6745 = !DILocation(line: 139, column: 17, scope: !6734)
!6746 = !DILocation(line: 139, column: 20, scope: !6734)
!6747 = !DILocation(line: 141, column: 2, scope: !6734)
!6748 = !DILocation(line: 142, column: 2, scope: !6734)
!6749 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6750, file: !6750, line: 40, type: !5772, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6751)
!6750 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6751 = !{!6752}
!6752 = !DILocalVariable(name: "irq", arg: 1, scope: !6749, file: !6750, line: 40, type: !32)
!6753 = !DILocation(line: 0, scope: !6749)
!6754 = !DILocation(line: 42, column: 2, scope: !6749)
!6755 = !DILocation(line: 43, column: 1, scope: !6749)
!6756 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !508, file: !508, line: 1508, type: !6757, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6759)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{null, !829}
!6759 = !{!6760}
!6760 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6756, file: !508, line: 1508, type: !829)
!6761 = !DILocation(line: 0, scope: !6756)
!6762 = !DILocation(line: 1510, column: 23, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6756, file: !508, line: 1510, column: 7)
!6764 = !DILocation(line: 1510, column: 7, scope: !6756)
!6765 = !DILocation(line: 1512, column: 5, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6763, file: !508, line: 1511, column: 3)
!6767 = !{i64 2149969295}
!6768 = !DILocation(line: 1513, column: 81, scope: !6766)
!6769 = !DILocation(line: 1513, column: 60, scope: !6766)
!6770 = !DILocation(line: 1513, column: 34, scope: !6766)
!6771 = !DILocation(line: 1513, column: 5, scope: !6766)
!6772 = !DILocation(line: 1513, column: 43, scope: !6766)
!6773 = !DILocation(line: 1514, column: 5, scope: !6766)
!6774 = !{i64 2149969409}
!6775 = !DILocation(line: 1515, column: 3, scope: !6766)
!6776 = !DILocation(line: 1516, column: 1, scope: !6756)
!6777 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6750, file: !6750, line: 45, type: !5772, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6778)
!6778 = !{!6779}
!6779 = !DILocalVariable(name: "irq", arg: 1, scope: !6777, file: !6750, line: 45, type: !32)
!6780 = !DILocation(line: 0, scope: !6777)
!6781 = !DILocation(line: 47, column: 2, scope: !6777)
!6782 = !DILocation(line: 48, column: 1, scope: !6777)
!6783 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !508, file: !508, line: 1546, type: !6757, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6784)
!6784 = !{!6785}
!6785 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6783, file: !508, line: 1546, type: !829)
!6786 = !DILocation(line: 0, scope: !6783)
!6787 = !DILocation(line: 1548, column: 23, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6783, file: !508, line: 1548, column: 7)
!6789 = !DILocation(line: 1548, column: 7, scope: !6783)
!6790 = !DILocation(line: 1550, column: 81, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6788, file: !508, line: 1549, column: 3)
!6792 = !DILocation(line: 1550, column: 60, scope: !6791)
!6793 = !DILocation(line: 1550, column: 34, scope: !6791)
!6794 = !DILocation(line: 1550, column: 5, scope: !6791)
!6795 = !DILocation(line: 1550, column: 43, scope: !6791)
!6796 = !DILocation(line: 271, column: 3, scope: !6797, inlinedAt: !6799)
!6797 = distinct !DISubprogram(name: "__DSB", scope: !6798, file: !6798, line: 269, type: !3217, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !474)
!6798 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6799 = distinct !DILocation(line: 1551, column: 5, scope: !6791)
!6800 = !{i64 2426797}
!6801 = !DILocation(line: 260, column: 3, scope: !6802, inlinedAt: !6803)
!6802 = distinct !DISubprogram(name: "__ISB", scope: !6798, file: !6798, line: 258, type: !3217, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !474)
!6803 = distinct !DILocation(line: 1552, column: 5, scope: !6791)
!6804 = !{i64 2426514}
!6805 = !DILocation(line: 1553, column: 3, scope: !6791)
!6806 = !DILocation(line: 1554, column: 1, scope: !6783)
!6807 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6750, file: !6750, line: 50, type: !6808, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6810)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{!103, !32}
!6810 = !{!6811}
!6811 = !DILocalVariable(name: "irq", arg: 1, scope: !6807, file: !6750, line: 50, type: !32)
!6812 = !DILocation(line: 0, scope: !6807)
!6813 = !DILocation(line: 52, column: 20, scope: !6807)
!6814 = !DILocation(line: 52, column: 9, scope: !6807)
!6815 = !DILocation(line: 52, column: 41, scope: !6807)
!6816 = !DILocation(line: 52, column: 39, scope: !6807)
!6817 = !DILocation(line: 52, column: 2, scope: !6807)
!6818 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6750, file: !6750, line: 64, type: !6819, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6821)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{null, !32, !32, !121}
!6821 = !{!6822, !6823, !6824}
!6822 = !DILocalVariable(name: "irq", arg: 1, scope: !6818, file: !6750, line: 64, type: !32)
!6823 = !DILocalVariable(name: "prio", arg: 2, scope: !6818, file: !6750, line: 64, type: !32)
!6824 = !DILocalVariable(name: "flags", arg: 3, scope: !6818, file: !6750, line: 64, type: !121)
!6825 = !DILocation(line: 0, scope: !6818)
!6826 = !DILocation(line: 83, column: 8, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6750, line: 82, column: 9)
!6828 = distinct !DILexicalBlock(scope: !6818, file: !6750, line: 76, column: 6)
!6829 = !DILocation(line: 95, column: 2, scope: !6818)
!6830 = !DILocation(line: 96, column: 1, scope: !6818)
!6831 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1638, type: !6832, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6834)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{null, !829, !121}
!6834 = !{!6835, !6836}
!6835 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6831, file: !508, line: 1638, type: !829)
!6836 = !DILocalVariable(name: "priority", arg: 2, scope: !6831, file: !508, line: 1638, type: !121)
!6837 = !DILocation(line: 0, scope: !6831)
!6838 = !DILocation(line: 0, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6831, file: !508, line: 1640, column: 7)
!6840 = !DILocation(line: 1640, column: 7, scope: !6831)
!6841 = !DILocation(line: 1648, column: 1, scope: !6831)
!6842 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6750, file: !6750, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !6843)
!6843 = !{!6844}
!6844 = !DILocalVariable(name: "unused", arg: 1, scope: !6842, file: !6750, line: 155, type: !13)
!6845 = !DILocation(line: 0, scope: !6842)
!6846 = !DILocation(line: 159, column: 2, scope: !6842)
!6847 = !DILocation(line: 160, column: 1, scope: !6842)
!6848 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6849, file: !6849, line: 87, type: !3217, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2784, retainedNodes: !474)
!6849 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6850 = !DILocation(line: 89, column: 2, scope: !6848)
!6851 = !DILocation(line: 90, column: 2, scope: !6848)
!6852 = !DILocation(line: 91, column: 1, scope: !6848)
!6853 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6849, file: !6849, line: 23, type: !3217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!6854 = !DISubprogram(name: "z_arm_int_exit", scope: !6855, file: !6855, line: 153, type: !3217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!6855 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6856 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6857, file: !6857, line: 256, type: !3217, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !474)
!6857 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6858 = !DILocation(line: 258, column: 2, scope: !6856)
!6859 = !DILocation(line: 262, column: 2, scope: !6856)
!6860 = !DILocation(line: 263, column: 2, scope: !6856)
!6861 = !DILocation(line: 267, column: 2, scope: !6856)
!6862 = !DILocation(line: 268, column: 2, scope: !6856)
!6863 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6857, file: !6857, line: 53, type: !3217, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !474)
!6864 = !DILocation(line: 55, column: 12, scope: !6863)
!6865 = !DILocation(line: 271, column: 3, scope: !6866, inlinedAt: !6867)
!6866 = distinct !DISubprogram(name: "__DSB", scope: !6798, file: !6798, line: 269, type: !3217, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !474)
!6867 = distinct !DILocation(line: 56, column: 2, scope: !6863)
!6868 = !{i64 2425468}
!6869 = !DILocation(line: 260, column: 3, scope: !6870, inlinedAt: !6871)
!6870 = distinct !DISubprogram(name: "__ISB", scope: !6798, file: !6798, line: 258, type: !3217, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !474)
!6871 = distinct !DILocation(line: 57, column: 2, scope: !6863)
!6872 = !{i64 2425185}
!6873 = !DILocation(line: 58, column: 1, scope: !6863)
!6874 = distinct !DISubprogram(name: "arch_swap", scope: !6875, file: !6875, line: 33, type: !6808, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2814, retainedNodes: !6876)
!6875 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6876 = !{!6877}
!6877 = !DILocalVariable(name: "key", arg: 1, scope: !6874, file: !6875, line: 33, type: !32)
!6878 = !DILocation(line: 0, scope: !6874)
!6879 = !DILocation(line: 36, column: 2, scope: !6874)
!6880 = !DILocation(line: 36, column: 17, scope: !6874)
!6881 = !DILocation(line: 36, column: 25, scope: !6874)
!6882 = !DILocation(line: 37, column: 37, scope: !6874)
!6883 = !DILocation(line: 37, column: 17, scope: !6874)
!6884 = !DILocation(line: 37, column: 35, scope: !6874)
!6885 = !DILocation(line: 41, column: 12, scope: !6874)
!6886 = !DILocalVariable(name: "key", arg: 1, scope: !6887, file: !5761, line: 84, type: !32)
!6887 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2814, retainedNodes: !6888)
!6888 = !{!6886}
!6889 = !DILocation(line: 0, scope: !6887, inlinedAt: !6890)
!6890 = distinct !DILocation(line: 44, column: 2, scope: !6874)
!6891 = !DILocation(line: 95, column: 2, scope: !6887, inlinedAt: !6890)
!6892 = !{i64 1648468}
!6893 = !DILocation(line: 53, column: 9, scope: !6874)
!6894 = !DILocation(line: 53, column: 24, scope: !6874)
!6895 = !DILocation(line: 53, column: 2, scope: !6874)
!6896 = distinct !DISubprogram(name: "arch_new_thread", scope: !6897, file: !6897, line: 56, type: !6898, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !7005)
!6897 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6898 = !DISubroutineType(types: !6899)
!6899 = !{null, !6900, !7000, !1128, !3528, !102, !102, !102}
!6900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6901, size: 32)
!6901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !6902)
!6902 = !{!6903, !6961, !6973, !6974, !6975, !6976, !6982, !6995}
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6901, file: !368, line: 247, baseType: !6904, size: 384)
!6904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !6905)
!6905 = !{!6906, !6930, !6937, !6938, !6939, !6948, !6949, !6950}
!6906 = !DIDerivedType(tag: DW_TAG_member, scope: !6904, file: !368, line: 60, baseType: !6907, size: 64)
!6907 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6904, file: !368, line: 60, size: 64, elements: !6908)
!6908 = !{!6909, !6924}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6907, file: !368, line: 61, baseType: !6910, size: 64)
!6910 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !6911)
!6911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !6912)
!6912 = !{!6913, !6919}
!6913 = !DIDerivedType(tag: DW_TAG_member, scope: !6911, file: !322, line: 38, baseType: !6914, size: 32)
!6914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6911, file: !322, line: 38, size: 32, elements: !6915)
!6915 = !{!6916, !6918}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6914, file: !322, line: 39, baseType: !6917, size: 32)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6911, size: 32)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6914, file: !322, line: 40, baseType: !6917, size: 32)
!6919 = !DIDerivedType(tag: DW_TAG_member, scope: !6911, file: !322, line: 42, baseType: !6920, size: 32, offset: 32)
!6920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6911, file: !322, line: 42, size: 32, elements: !6921)
!6921 = !{!6922, !6923}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6920, file: !322, line: 43, baseType: !6917, size: 32)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6920, file: !322, line: 44, baseType: !6917, size: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6907, file: !368, line: 62, baseType: !6925, size: 64)
!6925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !6926)
!6926 = !{!6927}
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6925, file: !393, line: 50, baseType: !6928, size: 64)
!6928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6929, size: 64, elements: !398)
!6929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6925, size: 32)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6904, file: !368, line: 68, baseType: !6931, size: 32, offset: 64)
!6931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6932, size: 32)
!6932 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !6933)
!6933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !6934)
!6934 = !{!6935}
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6933, file: !317, line: 232, baseType: !6936, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !6911)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6904, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6904, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!6939 = !DIDerivedType(tag: DW_TAG_member, scope: !6904, file: !368, line: 90, baseType: !6940, size: 16, offset: 112)
!6940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6904, file: !368, line: 90, size: 16, elements: !6941)
!6941 = !{!6942, !6947}
!6942 = !DIDerivedType(tag: DW_TAG_member, scope: !6940, file: !368, line: 91, baseType: !6943, size: 16)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6940, file: !368, line: 91, size: 16, elements: !6944)
!6944 = !{!6945, !6946}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6943, file: !368, line: 96, baseType: !416, size: 8)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6943, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6940, file: !368, line: 100, baseType: !341, size: 16)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6904, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6904, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6904, file: !368, line: 131, baseType: !6951, size: 192, offset: 192)
!6951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !6952)
!6952 = !{!6953, !6954, !6960}
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6951, file: !317, line: 245, baseType: !6910, size: 64)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6951, file: !317, line: 246, baseType: !6955, size: 32, offset: 64)
!6955 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !6956)
!6956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6957, size: 32)
!6957 = !DISubroutineType(types: !6958)
!6958 = !{null, !6959}
!6959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6951, size: 32)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6951, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6901, file: !368, line: 250, baseType: !6962, size: 288, offset: 384)
!6962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !6963)
!6963 = !{!6964, !6965, !6966, !6967, !6968, !6969, !6970, !6971, !6972}
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6962, file: !437, line: 26, baseType: !121, size: 32)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6962, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6962, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6962, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6962, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6962, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6962, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6962, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6962, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6901, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6901, file: !368, line: 256, baseType: !6932, size: 64, offset: 704)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6901, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6901, file: !368, line: 300, baseType: !6977, size: 96, offset: 800)
!6977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !6978)
!6978 = !{!6979, !6980, !6981}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6977, file: !368, line: 153, baseType: !22, size: 32)
!6980 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6977, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6977, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6901, file: !368, line: 325, baseType: !6983, size: 32, offset: 896)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 32)
!6984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !6985)
!6985 = !{!6986, !6992, !6993}
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6984, file: !313, line: 5074, baseType: !6987, size: 96)
!6987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !6988)
!6988 = !{!6989, !6990, !6991}
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6987, file: !463, line: 57, baseType: !466, size: 32)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6987, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6987, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6984, file: !313, line: 5075, baseType: !6932, size: 64, offset: 96)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6984, file: !313, line: 5076, baseType: !6994, offset: 160)
!6994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6901, file: !368, line: 343, baseType: !6996, size: 64, offset: 928)
!6996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !6997)
!6997 = !{!6998, !6999}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6996, file: !437, line: 63, baseType: !121, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6996, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!7000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7001, size: 32)
!7001 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3529, line: 44, baseType: !7002)
!7002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2187, line: 47, size: 8, elements: !7003)
!7003 = !{!7004}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7002, file: !2187, line: 48, baseType: !159, size: 8)
!7005 = !{!7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013}
!7006 = !DILocalVariable(name: "thread", arg: 1, scope: !6896, file: !6897, line: 56, type: !6900)
!7007 = !DILocalVariable(name: "stack", arg: 2, scope: !6896, file: !6897, line: 56, type: !7000)
!7008 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6896, file: !6897, line: 57, type: !1128)
!7009 = !DILocalVariable(name: "entry", arg: 4, scope: !6896, file: !6897, line: 57, type: !3528)
!7010 = !DILocalVariable(name: "p1", arg: 5, scope: !6896, file: !6897, line: 58, type: !102)
!7011 = !DILocalVariable(name: "p2", arg: 6, scope: !6896, file: !6897, line: 58, type: !102)
!7012 = !DILocalVariable(name: "p3", arg: 7, scope: !6896, file: !6897, line: 58, type: !102)
!7013 = !DILocalVariable(name: "iframe", scope: !6896, file: !6897, line: 60, type: !2845)
!7014 = !DILocation(line: 0, scope: !6896)
!7015 = !DILocation(line: 85, column: 11, scope: !6896)
!7016 = !DILocation(line: 93, column: 10, scope: !6896)
!7017 = !DILocation(line: 98, column: 13, scope: !6896)
!7018 = !DILocation(line: 100, column: 15, scope: !6896)
!7019 = !DILocation(line: 100, column: 10, scope: !6896)
!7020 = !DILocation(line: 100, column: 13, scope: !6896)
!7021 = !DILocation(line: 101, column: 15, scope: !6896)
!7022 = !DILocation(line: 101, column: 10, scope: !6896)
!7023 = !DILocation(line: 101, column: 13, scope: !6896)
!7024 = !DILocation(line: 102, column: 15, scope: !6896)
!7025 = !DILocation(line: 102, column: 10, scope: !6896)
!7026 = !DILocation(line: 102, column: 13, scope: !6896)
!7027 = !DILocation(line: 103, column: 15, scope: !6896)
!7028 = !DILocation(line: 103, column: 10, scope: !6896)
!7029 = !DILocation(line: 103, column: 13, scope: !6896)
!7030 = !DILocation(line: 106, column: 10, scope: !6896)
!7031 = !DILocation(line: 106, column: 15, scope: !6896)
!7032 = !DILocation(line: 122, column: 29, scope: !6896)
!7033 = !DILocation(line: 122, column: 23, scope: !6896)
!7034 = !DILocation(line: 122, column: 27, scope: !6896)
!7035 = !DILocation(line: 123, column: 15, scope: !6896)
!7036 = !DILocation(line: 123, column: 23, scope: !6896)
!7037 = !DILocation(line: 143, column: 1, scope: !6896)
!7038 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6897, file: !6897, line: 385, type: !7039, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !7042)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!121, !7041, !7041}
!7041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!7042 = !{!7043, !7044, !7045, !7048}
!7043 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !7038, file: !6897, line: 385, type: !7041)
!7044 = !DILocalVariable(name: "psp", arg: 2, scope: !7038, file: !6897, line: 385, type: !7041)
!7045 = !DILocalVariable(name: "thread", scope: !7038, file: !6897, line: 388, type: !7046)
!7046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7047, size: 32)
!7047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6901)
!7048 = !DILocalVariable(name: "guard_len", scope: !7038, file: !6897, line: 405, type: !121)
!7049 = !DILocation(line: 0, scope: !7038)
!7050 = !DILocation(line: 388, column: 34, scope: !7038)
!7051 = !DILocation(line: 390, column: 13, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7038, file: !6897, line: 390, column: 6)
!7053 = !DILocation(line: 390, column: 6, scope: !7038)
!7054 = !DILocation(line: 438, column: 6, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7038, file: !6897, line: 438, column: 6)
!7056 = !DILocation(line: 438, column: 6, scope: !7038)
!7057 = !DILocation(line: 442, column: 3, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7055, file: !6897, line: 440, column: 22)
!7059 = !DILocation(line: 455, column: 1, scope: !7038)
!7060 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6897, file: !6897, line: 530, type: !7061, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2842, retainedNodes: !7063)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{null, !6900, !1128, !3528}
!7063 = !{!7064, !7065, !7066}
!7064 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7060, file: !6897, line: 530, type: !6900)
!7065 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7060, file: !6897, line: 530, type: !1128)
!7066 = !DILocalVariable(name: "_main", arg: 3, scope: !7060, file: !6897, line: 531, type: !3528)
!7067 = !DILocation(line: 0, scope: !7060)
!7068 = !DILocation(line: 535, column: 11, scope: !7060)
!7069 = !DILocation(line: 560, column: 2, scope: !7060)
!7070 = !DILocation(line: 576, column: 2, scope: !7060)
!7071 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7072 = !DILocation(line: 603, column: 2, scope: !7060)
!7073 = distinct !DISubprogram(name: "z_arm_fault", scope: !7074, file: !7074, line: 1036, type: !7075, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7090)
!7074 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7075 = !DISubroutineType(types: !7076)
!7076 = !{null, !121, !121, !121, !7077}
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 32)
!7078 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !437, line: 37, baseType: !7079)
!7079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !7080)
!7080 = !{!7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089}
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7079, file: !437, line: 26, baseType: !121, size: 32)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7079, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7079, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7079, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7079, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7079, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7079, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7079, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7079, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!7090 = !{!7091, !7092, !7093, !7094, !7095, !7096, !7097, !7098, !7099, !7100}
!7091 = !DILocalVariable(name: "msp", arg: 1, scope: !7073, file: !7074, line: 1036, type: !121)
!7092 = !DILocalVariable(name: "psp", arg: 2, scope: !7073, file: !7074, line: 1036, type: !121)
!7093 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7073, file: !7074, line: 1036, type: !121)
!7094 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7073, file: !7074, line: 1037, type: !7077)
!7095 = !DILocalVariable(name: "reason", scope: !7073, file: !7074, line: 1039, type: !121)
!7096 = !DILocalVariable(name: "fault", scope: !7073, file: !7074, line: 1040, type: !103)
!7097 = !DILocalVariable(name: "recoverable", scope: !7073, file: !7074, line: 1041, type: !170)
!7098 = !DILocalVariable(name: "nested_exc", scope: !7073, file: !7074, line: 1041, type: !170)
!7099 = !DILocalVariable(name: "esf", scope: !7073, file: !7074, line: 1042, type: !2913)
!7100 = !DILocalVariable(name: "esf_copy", scope: !7073, file: !7074, line: 1047, type: !2914)
!7101 = !DILocation(line: 0, scope: !7073)
!7102 = !DILocation(line: 1040, column: 19, scope: !7073)
!7103 = !DILocation(line: 1040, column: 24, scope: !7073)
!7104 = !DILocation(line: 1041, column: 2, scope: !7073)
!7105 = !DILocation(line: 1047, column: 2, scope: !7073)
!7106 = !DILocation(line: 1047, column: 15, scope: !7073)
!7107 = !DILocalVariable(name: "key", arg: 1, scope: !7108, file: !5761, line: 84, type: !32)
!7108 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7109)
!7109 = !{!7107}
!7110 = !DILocation(line: 0, scope: !7108, inlinedAt: !7111)
!7111 = distinct !DILocation(line: 1050, column: 2, scope: !7073)
!7112 = !DILocation(line: 95, column: 2, scope: !7108, inlinedAt: !7111)
!7113 = !{i64 1681712}
!7114 = !DILocation(line: 1055, column: 9, scope: !7073)
!7115 = !DILocation(line: 1063, column: 11, scope: !7073)
!7116 = !DILocation(line: 1064, column: 6, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7073, file: !7074, line: 1064, column: 6)
!7118 = !{i8 0, i8 2}
!7119 = !DILocation(line: 1064, column: 6, scope: !7073)
!7120 = !DILocation(line: 1070, column: 20, scope: !7073)
!7121 = !DILocation(line: 1070, column: 2, scope: !7073)
!7122 = !DILocation(line: 1089, column: 6, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7073, file: !7074, line: 1089, column: 6)
!7124 = !DILocation(line: 0, scope: !7123)
!7125 = !DILocation(line: 1089, column: 6, scope: !7073)
!7126 = !DILocation(line: 1090, column: 28, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !7074, line: 1090, column: 7)
!7128 = distinct !DILexicalBlock(scope: !7123, file: !7074, line: 1089, column: 18)
!7129 = !DILocation(line: 1090, column: 44, scope: !7127)
!7130 = !DILocation(line: 1090, column: 7, scope: !7128)
!7131 = !DILocation(line: 1091, column: 24, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7127, file: !7074, line: 1090, column: 50)
!7133 = !DILocation(line: 1092, column: 3, scope: !7132)
!7134 = !DILocation(line: 1094, column: 23, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7123, file: !7074, line: 1093, column: 9)
!7136 = !DILocation(line: 1097, column: 2, scope: !7073)
!7137 = !DILocation(line: 1098, column: 1, scope: !7073)
!7138 = distinct !DISubprogram(name: "get_esf", scope: !7074, file: !7074, line: 894, type: !7139, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7142)
!7139 = !DISubroutineType(types: !7140)
!7140 = !{!2913, !121, !121, !121, !7141}
!7141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!7142 = !{!7143, !7144, !7145, !7146, !7147, !7148}
!7143 = !DILocalVariable(name: "msp", arg: 1, scope: !7138, file: !7074, line: 894, type: !121)
!7144 = !DILocalVariable(name: "psp", arg: 2, scope: !7138, file: !7074, line: 894, type: !121)
!7145 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7138, file: !7074, line: 894, type: !121)
!7146 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7138, file: !7074, line: 895, type: !7141)
!7147 = !DILocalVariable(name: "alternative_state_exc", scope: !7138, file: !7074, line: 897, type: !170)
!7148 = !DILocalVariable(name: "ptr_esf", scope: !7138, file: !7074, line: 898, type: !2913)
!7149 = !DILocation(line: 0, scope: !7138)
!7150 = !DILocation(line: 900, column: 14, scope: !7138)
!7151 = !DILocation(line: 902, column: 49, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7138, file: !7074, line: 902, column: 6)
!7153 = !DILocation(line: 902, column: 6, scope: !7138)
!7154 = !DILocation(line: 983, column: 18, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7138, file: !7074, line: 983, column: 6)
!7156 = !DILocation(line: 991, column: 7, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !7074, line: 990, column: 30)
!7158 = distinct !DILexicalBlock(scope: !7138, file: !7074, line: 990, column: 6)
!7159 = !DILocation(line: 998, column: 16, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !7074, line: 995, column: 10)
!7161 = distinct !DILexicalBlock(scope: !7157, file: !7074, line: 991, column: 7)
!7162 = !DILocation(line: 1002, column: 2, scope: !7138)
!7163 = !DILocation(line: 1003, column: 1, scope: !7138)
!7164 = distinct !DISubprogram(name: "fault_handle", scope: !7074, file: !7074, line: 786, type: !7165, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7167)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!121, !2913, !103, !7141}
!7167 = !{!7168, !7169, !7170, !7171}
!7168 = !DILocalVariable(name: "esf", arg: 1, scope: !7164, file: !7074, line: 786, type: !2913)
!7169 = !DILocalVariable(name: "fault", arg: 2, scope: !7164, file: !7074, line: 786, type: !103)
!7170 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7164, file: !7074, line: 786, type: !7141)
!7171 = !DILocalVariable(name: "reason", scope: !7164, file: !7074, line: 788, type: !121)
!7172 = !DILocation(line: 0, scope: !7164)
!7173 = !DILocation(line: 790, column: 15, scope: !7164)
!7174 = !DILocation(line: 792, column: 2, scope: !7164)
!7175 = !DILocation(line: 794, column: 12, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7164, file: !7074, line: 792, column: 17)
!7177 = !DILocation(line: 795, column: 3, scope: !7176)
!7178 = !DILocation(line: 800, column: 12, scope: !7176)
!7179 = !DILocation(line: 801, column: 3, scope: !7176)
!7180 = !DILocation(line: 803, column: 12, scope: !7176)
!7181 = !DILocation(line: 804, column: 3, scope: !7176)
!7182 = !DILocation(line: 806, column: 12, scope: !7176)
!7183 = !DILocation(line: 807, column: 3, scope: !7176)
!7184 = !DILocation(line: 814, column: 3, scope: !7176)
!7185 = !DILocation(line: 815, column: 3, scope: !7176)
!7186 = !DILocation(line: 829, column: 2, scope: !7164)
!7187 = distinct !DISubprogram(name: "hard_fault", scope: !7074, file: !7074, line: 709, type: !7188, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7190)
!7188 = !DISubroutineType(types: !7189)
!7189 = !{!121, !2913, !7141}
!7190 = !{!7191, !7192, !7193}
!7191 = !DILocalVariable(name: "esf", arg: 1, scope: !7187, file: !7074, line: 709, type: !2913)
!7192 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7187, file: !7074, line: 709, type: !7141)
!7193 = !DILocalVariable(name: "reason", scope: !7187, file: !7074, line: 711, type: !121)
!7194 = !DILocation(line: 0, scope: !7187)
!7195 = !DILocation(line: 732, column: 15, scope: !7187)
!7196 = !DILocation(line: 734, column: 12, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7187, file: !7074, line: 734, column: 6)
!7198 = !DILocation(line: 734, column: 17, scope: !7197)
!7199 = !DILocation(line: 734, column: 41, scope: !7197)
!7200 = !DILocation(line: 734, column: 6, scope: !7187)
!7201 = !DILocation(line: 736, column: 19, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7197, file: !7074, line: 736, column: 13)
!7203 = !DILocation(line: 736, column: 49, scope: !7202)
!7204 = !DILocation(line: 736, column: 13, scope: !7197)
!7205 = !DILocation(line: 738, column: 19, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7202, file: !7074, line: 738, column: 13)
!7207 = !DILocation(line: 738, column: 24, scope: !7206)
!7208 = !DILocation(line: 738, column: 47, scope: !7206)
!7209 = !DILocation(line: 738, column: 13, scope: !7202)
!7210 = !DILocation(line: 740, column: 7, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !7074, line: 740, column: 7)
!7212 = distinct !DILexicalBlock(scope: !7206, file: !7074, line: 738, column: 53)
!7213 = !DILocation(line: 740, column: 7, scope: !7212)
!7214 = !DILocation(line: 742, column: 24, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7211, file: !7074, line: 740, column: 38)
!7216 = !DILocation(line: 743, column: 3, scope: !7215)
!7217 = !DILocation(line: 743, column: 20, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7211, file: !7074, line: 743, column: 14)
!7219 = !DILocation(line: 743, column: 25, scope: !7218)
!7220 = !DILocation(line: 743, column: 52, scope: !7218)
!7221 = !DILocation(line: 743, column: 14, scope: !7211)
!7222 = !DILocation(line: 744, column: 13, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7218, file: !7074, line: 743, column: 58)
!7224 = !DILocation(line: 745, column: 3, scope: !7223)
!7225 = !DILocation(line: 745, column: 20, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7218, file: !7074, line: 745, column: 14)
!7227 = !DILocation(line: 745, column: 25, scope: !7226)
!7228 = !DILocation(line: 745, column: 52, scope: !7226)
!7229 = !DILocation(line: 745, column: 14, scope: !7218)
!7230 = !DILocation(line: 746, column: 13, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7226, file: !7074, line: 745, column: 58)
!7232 = !DILocation(line: 747, column: 3, scope: !7231)
!7233 = !DILocation(line: 747, column: 20, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7226, file: !7074, line: 747, column: 14)
!7235 = !DILocation(line: 747, column: 52, scope: !7234)
!7236 = !DILocation(line: 747, column: 14, scope: !7226)
!7237 = !DILocation(line: 748, column: 13, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7234, file: !7074, line: 747, column: 58)
!7239 = !DILocation(line: 753, column: 3, scope: !7238)
!7240 = !DILocation(line: 766, column: 2, scope: !7187)
!7241 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7074, file: !7074, line: 229, type: !7165, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7242)
!7242 = !{!7243, !7244, !7245, !7246, !7247, !7248, !7251}
!7243 = !DILocalVariable(name: "esf", arg: 1, scope: !7241, file: !7074, line: 229, type: !2913)
!7244 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7241, file: !7074, line: 229, type: !103)
!7245 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7241, file: !7074, line: 230, type: !7141)
!7246 = !DILocalVariable(name: "reason", scope: !7241, file: !7074, line: 232, type: !121)
!7247 = !DILocalVariable(name: "mmfar", scope: !7241, file: !7074, line: 233, type: !121)
!7248 = !DILocalVariable(name: "temp", scope: !7249, file: !7074, line: 254, type: !121)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !7074, line: 244, column: 48)
!7250 = distinct !DILexicalBlock(scope: !7241, file: !7074, line: 244, column: 6)
!7251 = !DILocalVariable(name: "min_stack_ptr", scope: !7252, file: !7074, line: 309, type: !121)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !7074, line: 308, column: 43)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !7074, line: 308, column: 7)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !7074, line: 289, column: 40)
!7255 = distinct !DILexicalBlock(scope: !7241, file: !7074, line: 288, column: 6)
!7256 = !DILocation(line: 0, scope: !7241)
!7257 = !DILocation(line: 237, column: 12, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7241, file: !7074, line: 237, column: 6)
!7259 = !DILocation(line: 241, column: 12, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7241, file: !7074, line: 241, column: 6)
!7261 = !DILocation(line: 244, column: 12, scope: !7250)
!7262 = !DILocation(line: 244, column: 17, scope: !7250)
!7263 = !DILocation(line: 244, column: 42, scope: !7250)
!7264 = !DILocation(line: 244, column: 6, scope: !7241)
!7265 = !DILocation(line: 254, column: 24, scope: !7249)
!7266 = !DILocation(line: 0, scope: !7249)
!7267 = !DILocation(line: 256, column: 13, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7249, file: !7074, line: 256, column: 7)
!7269 = !DILocation(line: 256, column: 18, scope: !7268)
!7270 = !DILocation(line: 256, column: 44, scope: !7268)
!7271 = !DILocation(line: 256, column: 7, scope: !7249)
!7272 = !DILocation(line: 259, column: 24, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7274, file: !7074, line: 259, column: 8)
!7274 = distinct !DILexicalBlock(scope: !7268, file: !7074, line: 256, column: 50)
!7275 = !DILocation(line: 259, column: 8, scope: !7274)
!7276 = !DILocation(line: 261, column: 15, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7273, file: !7074, line: 259, column: 30)
!7278 = !DILocation(line: 262, column: 4, scope: !7277)
!7279 = !DILocation(line: 265, column: 12, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7241, file: !7074, line: 265, column: 6)
!7281 = !DILocation(line: 288, column: 12, scope: !7255)
!7282 = !DILocation(line: 288, column: 17, scope: !7255)
!7283 = !DILocation(line: 288, column: 41, scope: !7255)
!7284 = !DILocation(line: 289, column: 9, scope: !7255)
!7285 = !DILocation(line: 289, column: 14, scope: !7255)
!7286 = !DILocation(line: 288, column: 6, scope: !7241)
!7287 = !DILocation(line: 308, column: 12, scope: !7253)
!7288 = !DILocation(line: 308, column: 17, scope: !7253)
!7289 = !DILocation(line: 308, column: 7, scope: !7254)
!7290 = !DILocation(line: 310, column: 6, scope: !7252)
!7291 = !DILocation(line: 309, column: 29, scope: !7252)
!7292 = !DILocation(line: 0, scope: !7252)
!7293 = !DILocation(line: 312, column: 8, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7252, file: !7074, line: 312, column: 8)
!7295 = !DILocation(line: 312, column: 8, scope: !7252)
!7296 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7297, file: !6798, line: 1099, type: !121)
!7297 = distinct !DISubprogram(name: "__set_PSP", scope: !6798, file: !6798, line: 1099, type: !5785, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7298)
!7298 = !{!7296}
!7299 = !DILocation(line: 0, scope: !7297, inlinedAt: !7300)
!7300 = distinct !DILocation(line: 338, column: 5, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7294, file: !7074, line: 312, column: 23)
!7302 = !DILocation(line: 1101, column: 3, scope: !7297, inlinedAt: !7300)
!7303 = !{i64 2476437}
!7304 = !DILocation(line: 341, column: 4, scope: !7301)
!7305 = !DILocation(line: 366, column: 12, scope: !7241)
!7306 = !DILocation(line: 369, column: 15, scope: !7241)
!7307 = !DILocation(line: 371, column: 2, scope: !7241)
!7308 = distinct !DISubprogram(name: "bus_fault", scope: !7074, file: !7074, line: 383, type: !7309, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7311)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!103, !2913, !103, !7141}
!7311 = !{!7312, !7313, !7314, !7315, !7316}
!7312 = !DILocalVariable(name: "esf", arg: 1, scope: !7308, file: !7074, line: 383, type: !2913)
!7313 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7308, file: !7074, line: 383, type: !103)
!7314 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7308, file: !7074, line: 383, type: !7141)
!7315 = !DILocalVariable(name: "reason", scope: !7308, file: !7074, line: 385, type: !121)
!7316 = !DILocalVariable(name: "bfar", scope: !7317, file: !7074, line: 405, type: !121)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !7074, line: 395, column: 42)
!7318 = distinct !DILexicalBlock(scope: !7308, file: !7074, line: 395, column: 6)
!7319 = !DILocation(line: 0, scope: !7308)
!7320 = !DILocation(line: 389, column: 11, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7308, file: !7074, line: 389, column: 6)
!7322 = !DILocation(line: 392, column: 11, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7308, file: !7074, line: 392, column: 6)
!7324 = !DILocation(line: 395, column: 11, scope: !7318)
!7325 = !DILocation(line: 395, column: 16, scope: !7318)
!7326 = !DILocation(line: 395, column: 6, scope: !7308)
!7327 = !DILocation(line: 405, column: 3, scope: !7317)
!7328 = !DILocation(line: 0, scope: !7317)
!7329 = !DILocation(line: 407, column: 13, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7317, file: !7074, line: 407, column: 7)
!7331 = !DILocation(line: 407, column: 18, scope: !7330)
!7332 = !DILocation(line: 407, column: 44, scope: !7330)
!7333 = !DILocation(line: 407, column: 7, scope: !7317)
!7334 = !DILocation(line: 411, column: 15, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !7074, line: 409, column: 30)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !7074, line: 409, column: 8)
!7337 = distinct !DILexicalBlock(scope: !7330, file: !7074, line: 407, column: 50)
!7338 = !DILocation(line: 412, column: 4, scope: !7335)
!7339 = !DILocation(line: 415, column: 11, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7308, file: !7074, line: 415, column: 6)
!7341 = !DILocation(line: 418, column: 12, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7308, file: !7074, line: 418, column: 6)
!7343 = !DILocation(line: 524, column: 12, scope: !7308)
!7344 = !DILocation(line: 526, column: 15, scope: !7308)
!7345 = !DILocation(line: 528, column: 2, scope: !7308)
!7346 = distinct !DISubprogram(name: "usage_fault", scope: !7074, file: !7074, line: 539, type: !7347, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7351)
!7347 = !DISubroutineType(types: !7348)
!7348 = !{!121, !7349}
!7349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7350, size: 32)
!7350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2914)
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "esf", arg: 1, scope: !7346, file: !7074, line: 539, type: !7349)
!7353 = !DILocalVariable(name: "reason", scope: !7346, file: !7074, line: 541, type: !121)
!7354 = !DILocation(line: 0, scope: !7346)
!7355 = !DILocation(line: 546, column: 12, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7346, file: !7074, line: 546, column: 6)
!7357 = !DILocation(line: 549, column: 12, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7346, file: !7074, line: 549, column: 6)
!7359 = !DILocation(line: 567, column: 12, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7346, file: !7074, line: 567, column: 6)
!7361 = !DILocation(line: 570, column: 12, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7346, file: !7074, line: 570, column: 6)
!7363 = !DILocation(line: 573, column: 12, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7346, file: !7074, line: 573, column: 6)
!7365 = !DILocation(line: 576, column: 12, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7346, file: !7074, line: 576, column: 6)
!7367 = !DILocation(line: 581, column: 12, scope: !7346)
!7368 = !DILocation(line: 583, column: 2, scope: !7346)
!7369 = distinct !DISubprogram(name: "debug_monitor", scope: !7074, file: !7074, line: 632, type: !7370, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7372)
!7370 = !DISubroutineType(types: !7371)
!7371 = !{null, !2913, !7141}
!7372 = !{!7373, !7374}
!7373 = !DILocalVariable(name: "esf", arg: 1, scope: !7369, file: !7074, line: 632, type: !2913)
!7374 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7369, file: !7074, line: 632, type: !7141)
!7375 = !DILocation(line: 0, scope: !7369)
!7376 = !DILocation(line: 634, column: 15, scope: !7369)
!7377 = !DILocation(line: 652, column: 1, scope: !7369)
!7378 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7074, file: !7074, line: 658, type: !7379, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !7381)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!170, !2913}
!7381 = !{!7382, !7383, !7384}
!7382 = !DILocalVariable(name: "esf", arg: 1, scope: !7378, file: !7074, line: 658, type: !2913)
!7383 = !DILocalVariable(name: "ret_addr", scope: !7378, file: !7074, line: 660, type: !2605)
!7384 = !DILocalVariable(name: "fault_insn", scope: !7378, file: !7074, line: 686, type: !341)
!7385 = !DILocation(line: 0, scope: !7378)
!7386 = !DILocation(line: 660, column: 46, scope: !7378)
!7387 = !DILocation(line: 660, column: 23, scope: !7378)
!7388 = !DILocation(line: 682, column: 11, scope: !7378)
!7389 = !DILocation(line: 271, column: 3, scope: !7390, inlinedAt: !7391)
!7390 = distinct !DISubprogram(name: "__DSB", scope: !6798, file: !6798, line: 269, type: !3217, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !474)
!7391 = distinct !DILocation(line: 683, column: 2, scope: !7378)
!7392 = !{i64 2452572}
!7393 = !DILocation(line: 260, column: 3, scope: !7394, inlinedAt: !7395)
!7394 = distinct !DISubprogram(name: "__ISB", scope: !6798, file: !6798, line: 258, type: !3217, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !474)
!7395 = distinct !DILocation(line: 684, column: 2, scope: !7378)
!7396 = !{i64 2452289}
!7397 = !DILocation(line: 686, column: 35, scope: !7378)
!7398 = !DILocation(line: 686, column: 24, scope: !7378)
!7399 = !DILocation(line: 688, column: 11, scope: !7378)
!7400 = !DILocation(line: 271, column: 3, scope: !7390, inlinedAt: !7401)
!7401 = distinct !DILocation(line: 689, column: 2, scope: !7378)
!7402 = !DILocation(line: 260, column: 3, scope: !7394, inlinedAt: !7403)
!7403 = distinct !DILocation(line: 690, column: 2, scope: !7378)
!7404 = !DILocation(line: 693, column: 45, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7378, file: !7074, line: 693, column: 6)
!7406 = !DILocation(line: 699, column: 1, scope: !7378)
!7407 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7074, file: !7074, line: 1107, type: !3217, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2885, retainedNodes: !474)
!7408 = !DILocation(line: 1111, column: 11, scope: !7407)
!7409 = !DILocation(line: 1136, column: 1, scope: !7407)
!7410 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7411, file: !7411, line: 26, type: !3217, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7412)
!7411 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7412 = !{!7413}
!7413 = !DILocalVariable(name: "irq", scope: !7410, file: !7411, line: 28, type: !103)
!7414 = !DILocation(line: 0, scope: !7410)
!7415 = !DILocation(line: 30, column: 2, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7410, file: !7411, line: 30, column: 2)
!7417 = !DILocation(line: 31, column: 3, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !7411, line: 30, column: 39)
!7419 = distinct !DILexicalBlock(scope: !7416, file: !7411, line: 30, column: 2)
!7420 = !DILocation(line: 30, column: 35, scope: !7419)
!7421 = !DILocation(line: 30, column: 13, scope: !7419)
!7422 = distinct !{!7422, !7415, !7423}
!7423 = !DILocation(line: 32, column: 2, scope: !7416)
!7424 = !DILocation(line: 33, column: 1, scope: !7410)
!7425 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1638, type: !6832, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !7426)
!7426 = !{!7427, !7428}
!7427 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7425, file: !508, line: 1638, type: !829)
!7428 = !DILocalVariable(name: "priority", arg: 2, scope: !7425, file: !508, line: 1638, type: !121)
!7429 = !DILocation(line: 0, scope: !7425)
!7430 = !DILocation(line: 1640, column: 7, scope: !7425)
!7431 = !DILocation(line: 0, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7425, file: !508, line: 1640, column: 7)
!7433 = !DILocation(line: 1648, column: 1, scope: !7425)
!7434 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7435, file: !7435, line: 27, type: !7436, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3001, retainedNodes: !7539)
!7435 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7436 = !DISubroutineType(types: !7437)
!7437 = !{null, !7438}
!7438 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !368, line: 347, baseType: !7439)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 32)
!7440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !7441)
!7441 = !{!7442, !7500, !7512, !7513, !7514, !7515, !7521, !7534}
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7440, file: !368, line: 247, baseType: !7443, size: 384)
!7443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !7444)
!7444 = !{!7445, !7469, !7476, !7477, !7478, !7487, !7488, !7489}
!7445 = !DIDerivedType(tag: DW_TAG_member, scope: !7443, file: !368, line: 60, baseType: !7446, size: 64)
!7446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7443, file: !368, line: 60, size: 64, elements: !7447)
!7447 = !{!7448, !7463}
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7446, file: !368, line: 61, baseType: !7449, size: 64)
!7449 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !7450)
!7450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !7451)
!7451 = !{!7452, !7458}
!7452 = !DIDerivedType(tag: DW_TAG_member, scope: !7450, file: !322, line: 38, baseType: !7453, size: 32)
!7453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7450, file: !322, line: 38, size: 32, elements: !7454)
!7454 = !{!7455, !7457}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7453, file: !322, line: 39, baseType: !7456, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7450, size: 32)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7453, file: !322, line: 40, baseType: !7456, size: 32)
!7458 = !DIDerivedType(tag: DW_TAG_member, scope: !7450, file: !322, line: 42, baseType: !7459, size: 32, offset: 32)
!7459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7450, file: !322, line: 42, size: 32, elements: !7460)
!7460 = !{!7461, !7462}
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7459, file: !322, line: 43, baseType: !7456, size: 32)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7459, file: !322, line: 44, baseType: !7456, size: 32)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7446, file: !368, line: 62, baseType: !7464, size: 64)
!7464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !7465)
!7465 = !{!7466}
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7464, file: !393, line: 50, baseType: !7467, size: 64)
!7467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7468, size: 64, elements: !398)
!7468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7464, size: 32)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7443, file: !368, line: 68, baseType: !7470, size: 32, offset: 64)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 32)
!7471 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !7472)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !7473)
!7473 = !{!7474}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7472, file: !317, line: 232, baseType: !7475, size: 64)
!7475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !7450)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7443, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7443, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!7478 = !DIDerivedType(tag: DW_TAG_member, scope: !7443, file: !368, line: 90, baseType: !7479, size: 16, offset: 112)
!7479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7443, file: !368, line: 90, size: 16, elements: !7480)
!7480 = !{!7481, !7486}
!7481 = !DIDerivedType(tag: DW_TAG_member, scope: !7479, file: !368, line: 91, baseType: !7482, size: 16)
!7482 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7479, file: !368, line: 91, size: 16, elements: !7483)
!7483 = !{!7484, !7485}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7482, file: !368, line: 96, baseType: !416, size: 8)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7482, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7479, file: !368, line: 100, baseType: !341, size: 16)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7443, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7443, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7443, file: !368, line: 131, baseType: !7490, size: 192, offset: 192)
!7490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !7491)
!7491 = !{!7492, !7493, !7499}
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7490, file: !317, line: 245, baseType: !7449, size: 64)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7490, file: !317, line: 246, baseType: !7494, size: 32, offset: 64)
!7494 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !7495)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 32)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{null, !7498}
!7498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 32)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7490, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7440, file: !368, line: 250, baseType: !7501, size: 288, offset: 384)
!7501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !7502)
!7502 = !{!7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511}
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7501, file: !437, line: 26, baseType: !121, size: 32)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7501, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7501, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7501, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7501, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7501, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7501, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7501, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7501, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7440, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7440, file: !368, line: 256, baseType: !7471, size: 64, offset: 704)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7440, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7440, file: !368, line: 300, baseType: !7516, size: 96, offset: 800)
!7516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !7517)
!7517 = !{!7518, !7519, !7520}
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7516, file: !368, line: 153, baseType: !22, size: 32)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7516, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7516, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7440, file: !368, line: 325, baseType: !7522, size: 32, offset: 896)
!7522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 32)
!7523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !7524)
!7524 = !{!7525, !7531, !7532}
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7523, file: !313, line: 5074, baseType: !7526, size: 96)
!7526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !7527)
!7527 = !{!7528, !7529, !7530}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7526, file: !463, line: 57, baseType: !466, size: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7526, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7526, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7523, file: !313, line: 5075, baseType: !7471, size: 64, offset: 96)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7523, file: !313, line: 5076, baseType: !7533, offset: 160)
!7533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7440, file: !368, line: 343, baseType: !7535, size: 64, offset: 928)
!7535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !7536)
!7536 = !{!7537, !7538}
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7535, file: !437, line: 63, baseType: !121, size: 32)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7535, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!7539 = !{!7540}
!7540 = !DILocalVariable(name: "thread", arg: 1, scope: !7434, file: !7435, line: 27, type: !7438)
!7541 = !DILocation(line: 0, scope: !7434)
!7542 = !DILocation(line: 29, column: 6, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7434, file: !7435, line: 29, column: 6)
!7544 = !DILocation(line: 29, column: 15, scope: !7543)
!7545 = !DILocation(line: 29, column: 6, scope: !7434)
!7546 = !DILocation(line: 1031, column: 3, scope: !7547, inlinedAt: !7552)
!7547 = distinct !DISubprogram(name: "__get_IPSR", scope: !6798, file: !6798, line: 1027, type: !7548, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3001, retainedNodes: !7550)
!7548 = !DISubroutineType(types: !7549)
!7549 = !{!121}
!7550 = !{!7551}
!7551 = !DILocalVariable(name: "result", scope: !7547, file: !6798, line: 1029, type: !121)
!7552 = distinct !DILocation(line: 48, column: 10, scope: !7553, inlinedAt: !7557)
!7553 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7554, file: !7554, line: 46, type: !7555, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3001, retainedNodes: !474)
!7554 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!170}
!7557 = distinct !DILocation(line: 30, column: 7, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !7435, line: 30, column: 7)
!7559 = distinct !DILexicalBlock(scope: !7543, file: !7435, line: 29, column: 26)
!7560 = !{i64 2441420}
!7561 = !DILocation(line: 0, scope: !7547, inlinedAt: !7552)
!7562 = !DILocation(line: 48, column: 9, scope: !7553, inlinedAt: !7557)
!7563 = !DILocation(line: 30, column: 7, scope: !7559)
!7564 = !DILocation(line: 42, column: 14, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7558, file: !7435, line: 30, column: 25)
!7566 = !DILocation(line: 48, column: 15, scope: !7565)
!7567 = !DILocation(line: 49, column: 3, scope: !7565)
!7568 = !DILocation(line: 52, column: 2, scope: !7434)
!7569 = !DILocation(line: 53, column: 1, scope: !7434)
!7570 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !363, file: !363, line: 127, type: !3217, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !474)
!7571 = !DILocation(line: 134, column: 2, scope: !7570)
!7572 = !DILocation(line: 156, column: 1, scope: !7570)
!7573 = !DILocation(line: 0, scope: !362)
!7574 = !DILocation(line: 289, column: 36, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !362, file: !363, line: 285, column: 2)
!7576 = !DILocation(line: 289, column: 42, scope: !7575)
!7577 = !DILocation(line: 300, column: 36, scope: !362)
!7578 = !DILocation(line: 301, column: 35, scope: !362)
!7579 = !DILocation(line: 302, column: 37, scope: !362)
!7580 = !DILocation(line: 311, column: 2, scope: !362)
!7581 = !DILocation(line: 316, column: 1, scope: !362)
!7582 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !536, file: !536, line: 180, type: !3217, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!7583 = !DILocation(line: 188, column: 12, scope: !7582)
!7584 = !DILocation(line: 271, column: 3, scope: !7585, inlinedAt: !7586)
!7585 = distinct !DISubprogram(name: "__DSB", scope: !6798, file: !6798, line: 269, type: !3217, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!7586 = distinct !DILocation(line: 192, column: 2, scope: !7582)
!7587 = !{i64 2597271}
!7588 = !DILocation(line: 260, column: 3, scope: !7589, inlinedAt: !7590)
!7589 = distinct !DISubprogram(name: "__ISB", scope: !6798, file: !6798, line: 258, type: !3217, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!7590 = distinct !DILocation(line: 193, column: 2, scope: !7582)
!7591 = !{i64 2596988}
!7592 = !DILocation(line: 194, column: 1, scope: !7582)
!7593 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !536, file: !536, line: 199, type: !3217, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!7594 = !DILocation(line: 282, column: 3, scope: !7595, inlinedAt: !7596)
!7595 = distinct !DISubprogram(name: "__DMB", scope: !6798, file: !6798, line: 280, type: !3217, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !474)
!7596 = distinct !DILocation(line: 202, column: 2, scope: !7593)
!7597 = !{i64 2597547}
!7598 = !DILocation(line: 205, column: 12, scope: !7593)
!7599 = !DILocation(line: 206, column: 1, scope: !7593)
!7600 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !536, file: !536, line: 275, type: !7601, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7614)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{null, !7603, !269, !7041, !7041}
!7603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7604, size: 32)
!7604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7605)
!7605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !487, line: 52, size: 96, elements: !7606)
!7606 = !{!7607, !7608, !7609}
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7605, file: !487, line: 53, baseType: !22, size: 32)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7605, file: !487, line: 54, baseType: !357, size: 32, offset: 32)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7605, file: !487, line: 55, baseType: !7610, size: 32, offset: 64)
!7610 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !493, line: 151, baseType: !7611)
!7611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !493, line: 149, size: 32, elements: !7612)
!7612 = !{!7613}
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7611, file: !493, line: 150, baseType: !121, size: 32)
!7614 = !{!7615, !7616, !7617, !7618}
!7615 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7600, file: !536, line: 276, type: !7603)
!7616 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7600, file: !536, line: 276, type: !269)
!7617 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7600, file: !536, line: 277, type: !7041)
!7618 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7600, file: !536, line: 277, type: !7041)
!7619 = !DILocation(line: 0, scope: !7600)
!7620 = !DILocation(line: 279, column: 6, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7600, file: !536, line: 279, column: 6)
!7622 = !DILocation(line: 285, column: 1, scope: !7600)
!7623 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7624, file: !7624, line: 220, type: !7625, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7627)
!7624 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7625 = !DISubroutineType(types: !7626)
!7626 = !{!103, !7603, !269, !7041, !7041}
!7627 = !{!7628, !7629, !7630, !7631, !7632}
!7628 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7623, file: !7624, line: 221, type: !7603)
!7629 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7623, file: !7624, line: 221, type: !269)
!7630 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7623, file: !7624, line: 222, type: !7041)
!7631 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7623, file: !7624, line: 223, type: !7041)
!7632 = !DILocalVariable(name: "mpu_reg_index", scope: !7623, file: !7624, line: 225, type: !103)
!7633 = !DILocation(line: 0, scope: !7623)
!7634 = !DILocation(line: 225, column: 22, scope: !7623)
!7635 = !DILocation(line: 233, column: 18, scope: !7623)
!7636 = !DILocation(line: 236, column: 23, scope: !7623)
!7637 = !DILocation(line: 236, column: 21, scope: !7623)
!7638 = !DILocation(line: 238, column: 2, scope: !7623)
!7639 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !536, file: !536, line: 105, type: !7640, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7642)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{!103, !7603, !167, !167, !170}
!7642 = !{!7643, !7644, !7645, !7646, !7647, !7648}
!7643 = !DILocalVariable(name: "regions", arg: 1, scope: !7639, file: !536, line: 106, type: !7603)
!7644 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7639, file: !536, line: 106, type: !167)
!7645 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7639, file: !536, line: 106, type: !167)
!7646 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7639, file: !536, line: 107, type: !170)
!7647 = !DILocalVariable(name: "i", scope: !7639, file: !536, line: 109, type: !103)
!7648 = !DILocalVariable(name: "reg_index", scope: !7639, file: !536, line: 110, type: !103)
!7649 = !DILocation(line: 0, scope: !7639)
!7650 = !DILocation(line: 110, column: 18, scope: !7639)
!7651 = !DILocation(line: 112, column: 16, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !536, line: 112, column: 2)
!7653 = distinct !DILexicalBlock(scope: !7639, file: !536, line: 112, column: 2)
!7654 = !DILocation(line: 112, column: 2, scope: !7653)
!7655 = !DILocation(line: 113, column: 7, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !536, line: 113, column: 7)
!7657 = distinct !DILexicalBlock(scope: !7652, file: !536, line: 112, column: 36)
!7658 = !DILocation(line: 113, column: 18, scope: !7656)
!7659 = !DILocation(line: 113, column: 23, scope: !7656)
!7660 = !DILocation(line: 113, column: 7, scope: !7657)
!7661 = !DILocation(line: 118, column: 23, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7657, file: !536, line: 118, column: 7)
!7663 = !DILocation(line: 119, column: 7, scope: !7662)
!7664 = !DILocation(line: 118, column: 7, scope: !7657)
!7665 = !DILocation(line: 124, column: 36, scope: !7657)
!7666 = !DILocation(line: 124, column: 15, scope: !7657)
!7667 = !DILocation(line: 126, column: 17, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7657, file: !536, line: 126, column: 7)
!7669 = !DILocation(line: 126, column: 7, scope: !7657)
!7670 = !DILocation(line: 131, column: 12, scope: !7657)
!7671 = !DILocation(line: 132, column: 2, scope: !7657)
!7672 = !DILocation(line: 112, column: 32, scope: !7652)
!7673 = distinct !{!7673, !7654, !7674}
!7674 = !DILocation(line: 132, column: 2, scope: !7653)
!7675 = !DILocation(line: 135, column: 1, scope: !7639)
!7676 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7624, file: !7624, line: 63, type: !7677, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!103, !7603}
!7679 = !{!7680, !7681}
!7680 = !DILocalVariable(name: "part", arg: 1, scope: !7676, file: !7624, line: 63, type: !7603)
!7681 = !DILocalVariable(name: "partition_is_valid", scope: !7676, file: !7624, line: 70, type: !103)
!7682 = !DILocation(line: 0, scope: !7676)
!7683 = !DILocation(line: 71, column: 11, scope: !7676)
!7684 = !DILocation(line: 71, column: 37, scope: !7676)
!7685 = !DILocation(line: 72, column: 3, scope: !7676)
!7686 = !DILocation(line: 71, column: 30, scope: !7676)
!7687 = !DILocation(line: 75, column: 11, scope: !7676)
!7688 = !DILocation(line: 75, column: 17, scope: !7676)
!7689 = !DILocation(line: 75, column: 38, scope: !7676)
!7690 = !DILocation(line: 77, column: 2, scope: !7676)
!7691 = distinct !DISubprogram(name: "mpu_configure_region", scope: !536, file: !536, line: 79, type: !7692, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7694)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{!103, !269, !7603}
!7694 = !{!7695, !7696, !7697}
!7695 = !DILocalVariable(name: "index", arg: 1, scope: !7691, file: !536, line: 79, type: !269)
!7696 = !DILocalVariable(name: "new_region", arg: 2, scope: !7691, file: !536, line: 80, type: !7603)
!7697 = !DILocalVariable(name: "region_conf", scope: !7691, file: !536, line: 82, type: !525)
!7698 = !DILocation(line: 0, scope: !7691)
!7699 = !DILocation(line: 82, column: 2, scope: !7691)
!7700 = !DILocation(line: 82, column: 24, scope: !7691)
!7701 = !DILocation(line: 87, column: 33, scope: !7691)
!7702 = !DILocation(line: 87, column: 14, scope: !7691)
!7703 = !DILocation(line: 87, column: 19, scope: !7691)
!7704 = !DILocation(line: 91, column: 55, scope: !7691)
!7705 = !DILocation(line: 92, column: 16, scope: !7691)
!7706 = !DILocation(line: 92, column: 53, scope: !7691)
!7707 = !DILocation(line: 91, column: 2, scope: !7691)
!7708 = !DILocation(line: 95, column: 9, scope: !7691)
!7709 = !DILocation(line: 97, column: 1, scope: !7691)
!7710 = !DILocation(line: 95, column: 2, scope: !7691)
!7711 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7624, file: !7624, line: 113, type: !7712, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7717)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{null, !7714, !7715, !121, !121}
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!7715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7716, size: 32)
!7716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7610)
!7717 = !{!7718, !7719, !7720, !7721}
!7718 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7711, file: !7624, line: 114, type: !7714)
!7719 = !DILocalVariable(name: "attr", arg: 2, scope: !7711, file: !7624, line: 115, type: !7715)
!7720 = !DILocalVariable(name: "base", arg: 3, scope: !7711, file: !7624, line: 115, type: !121)
!7721 = !DILocalVariable(name: "size", arg: 4, scope: !7711, file: !7624, line: 115, type: !121)
!7722 = !DILocation(line: 0, scope: !7711)
!7723 = !DILocation(line: 127, column: 23, scope: !7711)
!7724 = !DILocation(line: 127, column: 35, scope: !7711)
!7725 = !DILocation(line: 127, column: 33, scope: !7711)
!7726 = !DILocation(line: 127, column: 10, scope: !7711)
!7727 = !DILocation(line: 127, column: 15, scope: !7711)
!7728 = !DILocation(line: 129, column: 1, scope: !7711)
!7729 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !536, file: !536, line: 57, type: !7730, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7732)
!7730 = !DISubroutineType(types: !7731)
!7731 = !{!103, !269, !523}
!7732 = !{!7733, !7734}
!7733 = !DILocalVariable(name: "index", arg: 1, scope: !7729, file: !536, line: 57, type: !269)
!7734 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7729, file: !536, line: 58, type: !523)
!7735 = !DILocation(line: 0, scope: !7729)
!7736 = !DILocation(line: 61, column: 6, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7729, file: !536, line: 61, column: 6)
!7738 = !DILocation(line: 61, column: 12, scope: !7737)
!7739 = !DILocation(line: 61, column: 6, scope: !7729)
!7740 = !DILocation(line: 71, column: 2, scope: !7729)
!7741 = !DILocation(line: 73, column: 2, scope: !7729)
!7742 = !DILocation(line: 74, column: 1, scope: !7729)
!7743 = distinct !DISubprogram(name: "region_init", scope: !7624, file: !7624, line: 29, type: !7744, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7746)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{null, !7041, !523}
!7746 = !{!7747, !7748}
!7747 = !DILocalVariable(name: "index", arg: 1, scope: !7743, file: !7624, line: 29, type: !7041)
!7748 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7743, file: !7624, line: 30, type: !523)
!7749 = !DILocation(line: 0, scope: !7743)
!7750 = !DILocation(line: 33, column: 2, scope: !7743)
!7751 = !DILocation(line: 47, column: 28, scope: !7743)
!7752 = !DILocation(line: 47, column: 33, scope: !7743)
!7753 = !DILocation(line: 48, column: 26, scope: !7743)
!7754 = !DILocation(line: 47, column: 12, scope: !7743)
!7755 = !DILocation(line: 49, column: 32, scope: !7743)
!7756 = !DILocation(line: 49, column: 37, scope: !7743)
!7757 = !DILocation(line: 49, column: 12, scope: !7743)
!7758 = !DILocation(line: 53, column: 1, scope: !7743)
!7759 = distinct !DISubprogram(name: "set_region_number", scope: !7760, file: !7760, line: 32, type: !5785, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7761)
!7760 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7761 = !{!7762}
!7762 = !DILocalVariable(name: "index", arg: 1, scope: !7759, file: !7760, line: 32, type: !121)
!7763 = !DILocation(line: 0, scope: !7759)
!7764 = !DILocation(line: 34, column: 11, scope: !7759)
!7765 = !DILocation(line: 35, column: 1, scope: !7759)
!7766 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7624, file: !7624, line: 88, type: !7767, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7769)
!7767 = !DISubroutineType(types: !7768)
!7768 = !{!121, !121}
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "size", arg: 1, scope: !7766, file: !7624, line: 88, type: !121)
!7771 = !DILocation(line: 0, scope: !7766)
!7772 = !DILocation(line: 91, column: 11, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7766, file: !7624, line: 91, column: 6)
!7774 = !DILocation(line: 91, column: 6, scope: !7766)
!7775 = !DILocation(line: 100, column: 11, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7766, file: !7624, line: 100, column: 6)
!7777 = !DILocation(line: 100, column: 6, scope: !7766)
!7778 = !DILocation(line: 104, column: 35, scope: !7766)
!7779 = !DILocation(line: 104, column: 16, scope: !7766)
!7780 = !DILocation(line: 104, column: 50, scope: !7766)
!7781 = !DILocation(line: 104, column: 72, scope: !7766)
!7782 = !DILocation(line: 104, column: 2, scope: !7766)
!7783 = !DILocation(line: 106, column: 1, scope: !7766)
!7784 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !536, file: !536, line: 307, type: !7785, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7787)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{null, !7603, !167}
!7787 = !{!7788, !7789}
!7788 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7784, file: !536, line: 308, type: !7603)
!7789 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7784, file: !536, line: 308, type: !167)
!7790 = !DILocation(line: 0, scope: !7784)
!7791 = !DILocation(line: 310, column: 6, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7784, file: !536, line: 310, column: 6)
!7793 = !DILocation(line: 316, column: 1, scope: !7784)
!7794 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7624, file: !7624, line: 249, type: !7795, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7797)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!103, !7603, !167}
!7797 = !{!7798, !7799, !7800, !7801}
!7798 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7794, file: !7624, line: 250, type: !7603)
!7799 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7794, file: !7624, line: 250, type: !167)
!7800 = !DILocalVariable(name: "mpu_reg_index", scope: !7794, file: !7624, line: 252, type: !103)
!7801 = !DILocalVariable(name: "i", scope: !7802, file: !7624, line: 264, type: !103)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !7624, line: 264, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !7624, line: 261, column: 32)
!7804 = distinct !DILexicalBlock(scope: !7794, file: !7624, line: 261, column: 6)
!7805 = !DILocation(line: 0, scope: !7794)
!7806 = !DILocation(line: 252, column: 22, scope: !7794)
!7807 = !DILocation(line: 258, column: 18, scope: !7794)
!7808 = !DILocation(line: 261, column: 20, scope: !7804)
!7809 = !DILocation(line: 261, column: 6, scope: !7794)
!7810 = !DILocation(line: 0, scope: !7802)
!7811 = !DILocation(line: 265, column: 4, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7624, line: 264, column: 59)
!7813 = distinct !DILexicalBlock(scope: !7802, file: !7624, line: 264, column: 3)
!7814 = !DILocation(line: 264, column: 55, scope: !7813)
!7815 = !DILocation(line: 264, column: 33, scope: !7813)
!7816 = !DILocation(line: 264, column: 3, scope: !7802)
!7817 = distinct !{!7817, !7816, !7818}
!7818 = !DILocation(line: 266, column: 3, scope: !7802)
!7819 = !DILocation(line: 269, column: 2, scope: !7794)
!7820 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7821, file: !7821, line: 218, type: !5785, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7822)
!7821 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7822 = !{!7823}
!7823 = !DILocalVariable(name: "rnr", arg: 1, scope: !7820, file: !7821, line: 218, type: !121)
!7824 = !DILocation(line: 0, scope: !7820)
!7825 = !DILocation(line: 220, column: 12, scope: !7820)
!7826 = !DILocation(line: 221, column: 13, scope: !7820)
!7827 = !DILocation(line: 222, column: 1, scope: !7820)
!7828 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !536, file: !536, line: 326, type: !6602, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7829)
!7829 = !{!7830}
!7830 = !DILocalVariable(name: "r_index", scope: !7828, file: !536, line: 328, type: !121)
!7831 = !DILocation(line: 330, column: 17, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7828, file: !536, line: 330, column: 6)
!7833 = !DILocation(line: 330, column: 29, scope: !7832)
!7834 = !DILocation(line: 330, column: 6, scope: !7828)
!7835 = !DILocation(line: 347, column: 2, scope: !7828)
!7836 = !DILocation(line: 0, scope: !7828)
!7837 = !DILocation(line: 364, column: 29, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !536, line: 364, column: 2)
!7839 = distinct !DILexicalBlock(scope: !7828, file: !536, line: 364, column: 2)
!7840 = !DILocation(line: 364, column: 2, scope: !7839)
!7841 = !DILocation(line: 365, column: 25, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7838, file: !536, line: 364, column: 66)
!7843 = !DILocation(line: 365, column: 3, scope: !7842)
!7844 = !DILocation(line: 364, column: 62, scope: !7838)
!7845 = distinct !{!7845, !7840, !7846}
!7846 = !DILocation(line: 366, column: 2, scope: !7839)
!7847 = !DILocation(line: 369, column: 23, scope: !7828)
!7848 = !DILocation(line: 369, column: 21, scope: !7828)
!7849 = !DILocation(line: 372, column: 2, scope: !7828)
!7850 = !DILocation(line: 443, column: 2, scope: !7828)
!7851 = !DILocation(line: 444, column: 1, scope: !7828)
!7852 = distinct !DISubprogram(name: "strcpy", scope: !7853, file: !7853, line: 20, type: !7854, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7858)
!7853 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7854 = !DISubroutineType(types: !7855)
!7855 = !{!1128, !7856, !7857}
!7856 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1128)
!7857 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!7858 = !{!7859, !7860, !7861}
!7859 = !DILocalVariable(name: "d", arg: 1, scope: !7852, file: !7853, line: 20, type: !7856)
!7860 = !DILocalVariable(name: "s", arg: 2, scope: !7852, file: !7853, line: 20, type: !7857)
!7861 = !DILocalVariable(name: "dest", scope: !7852, file: !7853, line: 22, type: !1128)
!7862 = !DILocation(line: 0, scope: !7852)
!7863 = !DILocation(line: 24, column: 9, scope: !7852)
!7864 = !DILocation(line: 24, column: 12, scope: !7852)
!7865 = !DILocation(line: 24, column: 2, scope: !7852)
!7866 = !DILocation(line: 25, column: 6, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7852, file: !7853, line: 24, column: 21)
!7868 = !DILocation(line: 26, column: 4, scope: !7867)
!7869 = !DILocation(line: 27, column: 4, scope: !7867)
!7870 = distinct !{!7870, !7865, !7871}
!7871 = !DILocation(line: 28, column: 2, scope: !7852)
!7872 = !DILocation(line: 30, column: 5, scope: !7852)
!7873 = !DILocation(line: 32, column: 2, scope: !7852)
!7874 = distinct !DISubprogram(name: "strncpy", scope: !7853, file: !7853, line: 42, type: !7875, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7877)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!1128, !7856, !7857, !357}
!7877 = !{!7878, !7879, !7880, !7881}
!7878 = !DILocalVariable(name: "d", arg: 1, scope: !7874, file: !7853, line: 42, type: !7856)
!7879 = !DILocalVariable(name: "s", arg: 2, scope: !7874, file: !7853, line: 42, type: !7857)
!7880 = !DILocalVariable(name: "n", arg: 3, scope: !7874, file: !7853, line: 42, type: !357)
!7881 = !DILocalVariable(name: "dest", scope: !7874, file: !7853, line: 44, type: !1128)
!7882 = !DILocation(line: 0, scope: !7874)
!7883 = !DILocation(line: 46, column: 12, scope: !7874)
!7884 = !DILocation(line: 46, column: 17, scope: !7874)
!7885 = !DILocation(line: 46, column: 20, scope: !7874)
!7886 = !DILocation(line: 46, column: 23, scope: !7874)
!7887 = !DILocation(line: 46, column: 2, scope: !7874)
!7888 = !DILocation(line: 47, column: 6, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7874, file: !7853, line: 46, column: 32)
!7890 = !DILocation(line: 48, column: 4, scope: !7889)
!7891 = !DILocation(line: 49, column: 4, scope: !7889)
!7892 = !DILocation(line: 50, column: 4, scope: !7889)
!7893 = distinct !{!7893, !7887, !7894}
!7894 = !DILocation(line: 51, column: 2, scope: !7874)
!7895 = !DILocation(line: 54, column: 6, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7874, file: !7853, line: 53, column: 16)
!7897 = !DILocation(line: 55, column: 4, scope: !7896)
!7898 = !DILocation(line: 56, column: 4, scope: !7896)
!7899 = !DILocation(line: 53, column: 11, scope: !7874)
!7900 = !DILocation(line: 53, column: 2, scope: !7874)
!7901 = distinct !{!7901, !7900, !7902}
!7902 = !DILocation(line: 57, column: 2, scope: !7874)
!7903 = !DILocation(line: 59, column: 2, scope: !7874)
!7904 = distinct !DISubprogram(name: "strchr", scope: !7853, file: !7853, line: 69, type: !7905, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7907)
!7905 = !DISubroutineType(types: !7906)
!7906 = !{!1128, !157, !103}
!7907 = !{!7908, !7909, !7910}
!7908 = !DILocalVariable(name: "s", arg: 1, scope: !7904, file: !7853, line: 69, type: !157)
!7909 = !DILocalVariable(name: "c", arg: 2, scope: !7904, file: !7853, line: 69, type: !103)
!7910 = !DILocalVariable(name: "tmp", scope: !7904, file: !7853, line: 71, type: !159)
!7911 = !DILocation(line: 0, scope: !7904)
!7912 = !DILocation(line: 73, column: 2, scope: !7904)
!7913 = !DILocation(line: 73, column: 10, scope: !7904)
!7914 = !DILocation(line: 73, column: 13, scope: !7904)
!7915 = !DILocation(line: 73, column: 21, scope: !7904)
!7916 = !DILocation(line: 74, column: 4, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7904, file: !7853, line: 73, column: 38)
!7918 = distinct !{!7918, !7912, !7919}
!7919 = !DILocation(line: 75, column: 2, scope: !7904)
!7920 = !DILocation(line: 77, column: 9, scope: !7904)
!7921 = !DILocation(line: 77, column: 2, scope: !7904)
!7922 = distinct !DISubprogram(name: "strrchr", scope: !7853, file: !7853, line: 87, type: !7905, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7923)
!7923 = !{!7924, !7925, !7926}
!7924 = !DILocalVariable(name: "s", arg: 1, scope: !7922, file: !7853, line: 87, type: !157)
!7925 = !DILocalVariable(name: "c", arg: 2, scope: !7922, file: !7853, line: 87, type: !103)
!7926 = !DILocalVariable(name: "match", scope: !7922, file: !7853, line: 89, type: !1128)
!7927 = !DILocation(line: 0, scope: !7922)
!7928 = !DILocation(line: 91, column: 2, scope: !7922)
!7929 = !DILocation(line: 92, column: 7, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7931, file: !7853, line: 92, column: 7)
!7931 = distinct !DILexicalBlock(scope: !7922, file: !7853, line: 91, column: 5)
!7932 = !DILocation(line: 92, column: 10, scope: !7930)
!7933 = !DILocation(line: 92, column: 7, scope: !7931)
!7934 = !DILocation(line: 95, column: 13, scope: !7922)
!7935 = !DILocation(line: 95, column: 2, scope: !7931)
!7936 = distinct !{!7936, !7928, !7937}
!7937 = !DILocation(line: 95, column: 15, scope: !7922)
!7938 = !DILocation(line: 97, column: 2, scope: !7922)
!7939 = distinct !DISubprogram(name: "strlen", scope: !7853, file: !7853, line: 107, type: !7940, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7942)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!357, !157}
!7942 = !{!7943, !7944}
!7943 = !DILocalVariable(name: "s", arg: 1, scope: !7939, file: !7853, line: 107, type: !157)
!7944 = !DILocalVariable(name: "n", scope: !7939, file: !7853, line: 109, type: !357)
!7945 = !DILocation(line: 0, scope: !7939)
!7946 = !DILocation(line: 111, column: 9, scope: !7939)
!7947 = !DILocation(line: 111, column: 12, scope: !7939)
!7948 = !DILocation(line: 111, column: 2, scope: !7939)
!7949 = !DILocation(line: 112, column: 4, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7939, file: !7853, line: 111, column: 21)
!7951 = !DILocation(line: 113, column: 4, scope: !7950)
!7952 = distinct !{!7952, !7948, !7953}
!7953 = !DILocation(line: 114, column: 2, scope: !7939)
!7954 = !DILocation(line: 116, column: 2, scope: !7939)
!7955 = distinct !DISubprogram(name: "strnlen", scope: !7853, file: !7853, line: 126, type: !7956, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7958)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!357, !157, !357}
!7958 = !{!7959, !7960, !7961}
!7959 = !DILocalVariable(name: "s", arg: 1, scope: !7955, file: !7853, line: 126, type: !157)
!7960 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7955, file: !7853, line: 126, type: !357)
!7961 = !DILocalVariable(name: "n", scope: !7955, file: !7853, line: 128, type: !357)
!7962 = !DILocation(line: 0, scope: !7955)
!7963 = !DILocation(line: 130, column: 9, scope: !7955)
!7964 = !DILocation(line: 130, column: 12, scope: !7955)
!7965 = !DILocation(line: 130, column: 20, scope: !7955)
!7966 = !DILocation(line: 130, column: 2, scope: !7955)
!7967 = !DILocation(line: 131, column: 4, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7955, file: !7853, line: 130, column: 35)
!7969 = !DILocation(line: 132, column: 4, scope: !7968)
!7970 = distinct !{!7970, !7966, !7971}
!7971 = !DILocation(line: 133, column: 2, scope: !7955)
!7972 = !DILocation(line: 135, column: 2, scope: !7955)
!7973 = distinct !DISubprogram(name: "strcmp", scope: !7853, file: !7853, line: 145, type: !7974, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7976)
!7974 = !DISubroutineType(types: !7975)
!7975 = !{!103, !157, !157}
!7976 = !{!7977, !7978}
!7977 = !DILocalVariable(name: "s1", arg: 1, scope: !7973, file: !7853, line: 145, type: !157)
!7978 = !DILocalVariable(name: "s2", arg: 2, scope: !7973, file: !7853, line: 145, type: !157)
!7979 = !DILocation(line: 0, scope: !7973)
!7980 = !DILocation(line: 147, column: 10, scope: !7973)
!7981 = !DILocation(line: 147, column: 17, scope: !7973)
!7982 = !DILocation(line: 147, column: 14, scope: !7973)
!7983 = !DILocation(line: 147, column: 22, scope: !7973)
!7984 = !DILocation(line: 148, column: 5, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7973, file: !7853, line: 147, column: 40)
!7986 = !DILocation(line: 149, column: 5, scope: !7985)
!7987 = distinct !{!7987, !7988, !7989}
!7988 = !DILocation(line: 147, column: 2, scope: !7973)
!7989 = !DILocation(line: 150, column: 2, scope: !7973)
!7990 = !DILocation(line: 152, column: 9, scope: !7973)
!7991 = !DILocation(line: 152, column: 15, scope: !7973)
!7992 = !DILocation(line: 152, column: 13, scope: !7973)
!7993 = !DILocation(line: 152, column: 2, scope: !7973)
!7994 = distinct !DISubprogram(name: "strncmp", scope: !7853, file: !7853, line: 162, type: !7995, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !7997)
!7995 = !DISubroutineType(types: !7996)
!7996 = !{!103, !157, !157, !357}
!7997 = !{!7998, !7999, !8000}
!7998 = !DILocalVariable(name: "s1", arg: 1, scope: !7994, file: !7853, line: 162, type: !157)
!7999 = !DILocalVariable(name: "s2", arg: 2, scope: !7994, file: !7853, line: 162, type: !157)
!8000 = !DILocalVariable(name: "n", arg: 3, scope: !7994, file: !7853, line: 162, type: !357)
!8001 = !DILocation(line: 0, scope: !7994)
!8002 = !DILocation(line: 164, column: 17, scope: !7994)
!8003 = !DILocation(line: 164, column: 21, scope: !7994)
!8004 = !DILocation(line: 164, column: 28, scope: !7994)
!8005 = !DILocation(line: 164, column: 25, scope: !7994)
!8006 = !DILocation(line: 164, column: 33, scope: !7994)
!8007 = !DILocation(line: 165, column: 5, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7994, file: !7853, line: 164, column: 51)
!8009 = !DILocation(line: 166, column: 5, scope: !8008)
!8010 = !DILocation(line: 167, column: 4, scope: !8008)
!8011 = distinct !{!8011, !8012, !8013}
!8012 = !DILocation(line: 164, column: 2, scope: !7994)
!8013 = !DILocation(line: 168, column: 2, scope: !7994)
!8014 = !DILocation(line: 170, column: 25, scope: !7994)
!8015 = !DILocation(line: 170, column: 31, scope: !7994)
!8016 = !DILocation(line: 170, column: 29, scope: !7994)
!8017 = !DILocation(line: 170, column: 9, scope: !7994)
!8018 = !DILocation(line: 170, column: 2, scope: !7994)
!8019 = distinct !DISubprogram(name: "strtok_r", scope: !7853, file: !7853, line: 180, type: !8020, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8023)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!1128, !1128, !157, !8022}
!8022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!8023 = !{!8024, !8025, !8026, !8027, !8028}
!8024 = !DILocalVariable(name: "str", arg: 1, scope: !8019, file: !7853, line: 180, type: !1128)
!8025 = !DILocalVariable(name: "sep", arg: 2, scope: !8019, file: !7853, line: 180, type: !157)
!8026 = !DILocalVariable(name: "state", arg: 3, scope: !8019, file: !7853, line: 180, type: !8022)
!8027 = !DILocalVariable(name: "start", scope: !8019, file: !7853, line: 182, type: !1128)
!8028 = !DILocalVariable(name: "end", scope: !8019, file: !7853, line: 182, type: !1128)
!8029 = !DILocation(line: 0, scope: !8019)
!8030 = !DILocation(line: 184, column: 10, scope: !8019)
!8031 = !DILocation(line: 184, column: 22, scope: !8019)
!8032 = !DILocation(line: 187, column: 9, scope: !8019)
!8033 = !DILocation(line: 187, column: 16, scope: !8019)
!8034 = !DILocation(line: 187, column: 19, scope: !8019)
!8035 = !DILocation(line: 187, column: 2, scope: !8019)
!8036 = !DILocation(line: 188, column: 8, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8019, file: !7853, line: 187, column: 40)
!8038 = distinct !{!8038, !8035, !8039}
!8039 = !DILocation(line: 189, column: 2, scope: !8019)
!8040 = !DILocation(line: 198, column: 9, scope: !8019)
!8041 = !DILocation(line: 198, column: 18, scope: !8019)
!8042 = !DILocation(line: 198, column: 17, scope: !8019)
!8043 = !DILocation(line: 198, column: 2, scope: !8019)
!8044 = !DILocation(line: 199, column: 6, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8019, file: !7853, line: 198, column: 37)
!8046 = !DILocation(line: 198, column: 14, scope: !8019)
!8047 = distinct !{!8047, !8043, !8048}
!8048 = !DILocation(line: 200, column: 2, scope: !8019)
!8049 = !DILocation(line: 203, column: 8, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7853, line: 202, column: 20)
!8051 = distinct !DILexicalBlock(scope: !8019, file: !7853, line: 202, column: 6)
!8052 = !DILocation(line: 204, column: 16, scope: !8050)
!8053 = !DILocation(line: 205, column: 2, scope: !8050)
!8054 = !DILocation(line: 210, column: 1, scope: !8019)
!8055 = distinct !DISubprogram(name: "strcat", scope: !7853, file: !7853, line: 212, type: !7854, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8056)
!8056 = !{!8057, !8058}
!8057 = !DILocalVariable(name: "dest", arg: 1, scope: !8055, file: !7853, line: 212, type: !7856)
!8058 = !DILocalVariable(name: "src", arg: 2, scope: !8055, file: !7853, line: 212, type: !7857)
!8059 = !DILocation(line: 0, scope: !8055)
!8060 = !DILocation(line: 214, column: 16, scope: !8055)
!8061 = !DILocation(line: 214, column: 14, scope: !8055)
!8062 = !DILocation(line: 214, column: 2, scope: !8055)
!8063 = !DILocation(line: 215, column: 2, scope: !8055)
!8064 = distinct !DISubprogram(name: "strncat", scope: !7853, file: !7853, line: 218, type: !7875, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8065)
!8065 = !{!8066, !8067, !8068, !8069, !8070}
!8066 = !DILocalVariable(name: "dest", arg: 1, scope: !8064, file: !7853, line: 218, type: !7856)
!8067 = !DILocalVariable(name: "src", arg: 2, scope: !8064, file: !7853, line: 218, type: !7857)
!8068 = !DILocalVariable(name: "n", arg: 3, scope: !8064, file: !7853, line: 219, type: !357)
!8069 = !DILocalVariable(name: "orig_dest", scope: !8064, file: !7853, line: 221, type: !1128)
!8070 = !DILocalVariable(name: "len", scope: !8064, file: !7853, line: 222, type: !357)
!8071 = !DILocation(line: 0, scope: !8064)
!8072 = !DILocation(line: 222, column: 15, scope: !8064)
!8073 = !DILocation(line: 224, column: 7, scope: !8064)
!8074 = !DILocation(line: 225, column: 14, scope: !8064)
!8075 = !DILocation(line: 225, column: 19, scope: !8064)
!8076 = !DILocation(line: 225, column: 11, scope: !8064)
!8077 = !DILocation(line: 225, column: 23, scope: !8064)
!8078 = !DILocation(line: 225, column: 28, scope: !8064)
!8079 = !DILocation(line: 225, column: 2, scope: !8064)
!8080 = !DILocation(line: 226, column: 17, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8064, file: !7853, line: 225, column: 38)
!8082 = !DILocation(line: 226, column: 8, scope: !8081)
!8083 = !DILocation(line: 226, column: 11, scope: !8081)
!8084 = distinct !{!8084, !8079, !8085}
!8085 = !DILocation(line: 227, column: 2, scope: !8064)
!8086 = !DILocation(line: 228, column: 8, scope: !8064)
!8087 = !DILocation(line: 230, column: 2, scope: !8064)
!8088 = distinct !DISubprogram(name: "memcmp", scope: !7853, file: !7853, line: 239, type: !8089, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8091)
!8089 = !DISubroutineType(types: !8090)
!8090 = !{!103, !13, !13, !357}
!8091 = !{!8092, !8093, !8094, !8095, !8096}
!8092 = !DILocalVariable(name: "m1", arg: 1, scope: !8088, file: !7853, line: 239, type: !13)
!8093 = !DILocalVariable(name: "m2", arg: 2, scope: !8088, file: !7853, line: 239, type: !13)
!8094 = !DILocalVariable(name: "n", arg: 3, scope: !8088, file: !7853, line: 239, type: !357)
!8095 = !DILocalVariable(name: "c1", scope: !8088, file: !7853, line: 241, type: !157)
!8096 = !DILocalVariable(name: "c2", scope: !8088, file: !7853, line: 242, type: !157)
!8097 = !DILocation(line: 0, scope: !8088)
!8098 = !DILocation(line: 244, column: 7, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8088, file: !7853, line: 244, column: 6)
!8100 = !DILocation(line: 244, column: 6, scope: !8088)
!8101 = !DILocation(line: 248, column: 10, scope: !8088)
!8102 = !DILocation(line: 248, column: 14, scope: !8088)
!8103 = !DILocation(line: 248, column: 19, scope: !8088)
!8104 = !DILocation(line: 248, column: 2, scope: !8088)
!8105 = !DILocation(line: 248, column: 23, scope: !8088)
!8106 = !DILocation(line: 248, column: 30, scope: !8088)
!8107 = !DILocation(line: 248, column: 27, scope: !8088)
!8108 = !DILocation(line: 249, column: 5, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8088, file: !7853, line: 248, column: 36)
!8110 = !DILocation(line: 250, column: 5, scope: !8109)
!8111 = distinct !{!8111, !8104, !8112}
!8112 = !DILocation(line: 251, column: 2, scope: !8088)
!8113 = !DILocation(line: 253, column: 9, scope: !8088)
!8114 = !DILocation(line: 253, column: 15, scope: !8088)
!8115 = !DILocation(line: 253, column: 13, scope: !8088)
!8116 = !DILocation(line: 253, column: 2, scope: !8088)
!8117 = !DILocation(line: 254, column: 1, scope: !8088)
!8118 = distinct !DISubprogram(name: "memmove", scope: !7853, file: !7853, line: 263, type: !8119, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8121)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!102, !102, !13, !357}
!8121 = !{!8122, !8123, !8124, !8125, !8126}
!8122 = !DILocalVariable(name: "d", arg: 1, scope: !8118, file: !7853, line: 263, type: !102)
!8123 = !DILocalVariable(name: "s", arg: 2, scope: !8118, file: !7853, line: 263, type: !13)
!8124 = !DILocalVariable(name: "n", arg: 3, scope: !8118, file: !7853, line: 263, type: !357)
!8125 = !DILocalVariable(name: "dest", scope: !8118, file: !7853, line: 265, type: !1128)
!8126 = !DILocalVariable(name: "src", scope: !8118, file: !7853, line: 266, type: !157)
!8127 = !DILocation(line: 0, scope: !8118)
!8128 = !DILocation(line: 268, column: 21, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8118, file: !7853, line: 268, column: 6)
!8130 = !DILocation(line: 268, column: 28, scope: !8129)
!8131 = !DILocation(line: 268, column: 6, scope: !8118)
!8132 = !DILocation(line: 280, column: 12, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8129, file: !7853, line: 278, column: 9)
!8134 = !DILocation(line: 280, column: 3, scope: !8133)
!8135 = !DILocation(line: 275, column: 5, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !7853, line: 274, column: 17)
!8137 = distinct !DILexicalBlock(scope: !8129, file: !7853, line: 268, column: 33)
!8138 = !DILocation(line: 276, column: 14, scope: !8136)
!8139 = !DILocation(line: 276, column: 4, scope: !8136)
!8140 = !DILocation(line: 276, column: 12, scope: !8136)
!8141 = !DILocation(line: 274, column: 12, scope: !8137)
!8142 = !DILocation(line: 274, column: 3, scope: !8137)
!8143 = distinct !{!8143, !8142, !8144}
!8144 = !DILocation(line: 277, column: 3, scope: !8137)
!8145 = !DILocation(line: 281, column: 12, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8133, file: !7853, line: 280, column: 17)
!8147 = !DILocation(line: 281, column: 10, scope: !8146)
!8148 = !DILocation(line: 282, column: 8, scope: !8146)
!8149 = !DILocation(line: 283, column: 7, scope: !8146)
!8150 = !DILocation(line: 284, column: 5, scope: !8146)
!8151 = distinct !{!8151, !8134, !8152}
!8152 = !DILocation(line: 285, column: 3, scope: !8133)
!8153 = !DILocation(line: 288, column: 2, scope: !8118)
!8154 = distinct !DISubprogram(name: "memcpy", scope: !7853, file: !7853, line: 298, type: !8155, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8159)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!102, !8157, !8158, !357}
!8157 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8158 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8159 = !{!8160, !8161, !8162, !8163, !8164}
!8160 = !DILocalVariable(name: "d", arg: 1, scope: !8154, file: !7853, line: 298, type: !8157)
!8161 = !DILocalVariable(name: "s", arg: 2, scope: !8154, file: !7853, line: 298, type: !8158)
!8162 = !DILocalVariable(name: "n", arg: 3, scope: !8154, file: !7853, line: 298, type: !357)
!8163 = !DILocalVariable(name: "d_byte", scope: !8154, file: !7853, line: 302, type: !237)
!8164 = !DILocalVariable(name: "s_byte", scope: !8154, file: !7853, line: 303, type: !3032)
!8165 = !DILocation(line: 0, scope: !8154)
!8166 = !DILocation(line: 337, column: 11, scope: !8154)
!8167 = !DILocation(line: 337, column: 2, scope: !8154)
!8168 = !DILocation(line: 338, column: 25, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8154, file: !7853, line: 337, column: 16)
!8170 = !DILocation(line: 338, column: 17, scope: !8169)
!8171 = !DILocation(line: 338, column: 11, scope: !8169)
!8172 = !DILocation(line: 338, column: 15, scope: !8169)
!8173 = !DILocation(line: 339, column: 4, scope: !8169)
!8174 = distinct !{!8174, !8167, !8175}
!8175 = !DILocation(line: 340, column: 2, scope: !8154)
!8176 = !DILocation(line: 342, column: 2, scope: !8154)
!8177 = distinct !DISubprogram(name: "memset", scope: !7853, file: !7853, line: 352, type: !8178, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8180)
!8178 = !DISubroutineType(types: !8179)
!8179 = !{!102, !102, !103, !357}
!8180 = !{!8181, !8182, !8183, !8184, !8185}
!8181 = !DILocalVariable(name: "buf", arg: 1, scope: !8177, file: !7853, line: 352, type: !102)
!8182 = !DILocalVariable(name: "c", arg: 2, scope: !8177, file: !7853, line: 352, type: !103)
!8183 = !DILocalVariable(name: "n", arg: 3, scope: !8177, file: !7853, line: 352, type: !357)
!8184 = !DILocalVariable(name: "d_byte", scope: !8177, file: !7853, line: 356, type: !237)
!8185 = !DILocalVariable(name: "c_byte", scope: !8177, file: !7853, line: 357, type: !168)
!8186 = !DILocation(line: 0, scope: !8177)
!8187 = !DILocation(line: 357, column: 25, scope: !8177)
!8188 = !DILocation(line: 389, column: 11, scope: !8177)
!8189 = !DILocation(line: 389, column: 2, scope: !8177)
!8190 = !DILocation(line: 390, column: 11, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8177, file: !7853, line: 389, column: 16)
!8192 = !DILocation(line: 390, column: 15, scope: !8191)
!8193 = !DILocation(line: 391, column: 4, scope: !8191)
!8194 = distinct !{!8194, !8189, !8195}
!8195 = !DILocation(line: 392, column: 2, scope: !8177)
!8196 = !DILocation(line: 394, column: 2, scope: !8177)
!8197 = distinct !DISubprogram(name: "memchr", scope: !7853, file: !7853, line: 404, type: !8198, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3029, retainedNodes: !8200)
!8198 = !DISubroutineType(types: !8199)
!8199 = !{!102, !13, !103, !357}
!8200 = !{!8201, !8202, !8203, !8204}
!8201 = !DILocalVariable(name: "s", arg: 1, scope: !8197, file: !7853, line: 404, type: !13)
!8202 = !DILocalVariable(name: "c", arg: 2, scope: !8197, file: !7853, line: 404, type: !103)
!8203 = !DILocalVariable(name: "n", arg: 3, scope: !8197, file: !7853, line: 404, type: !357)
!8204 = !DILocalVariable(name: "p", scope: !8205, file: !7853, line: 407, type: !3032)
!8205 = distinct !DILexicalBlock(scope: !8206, file: !7853, line: 406, column: 14)
!8206 = distinct !DILexicalBlock(scope: !8197, file: !7853, line: 406, column: 6)
!8207 = !DILocation(line: 0, scope: !8197)
!8208 = !DILocation(line: 406, column: 8, scope: !8206)
!8209 = !DILocation(line: 406, column: 6, scope: !8197)
!8210 = !DILocation(line: 409, column: 3, scope: !8205)
!8211 = !DILocation(line: 0, scope: !8205)
!8212 = !DILocation(line: 410, column: 8, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !7853, line: 410, column: 8)
!8214 = distinct !DILexicalBlock(scope: !8205, file: !7853, line: 409, column: 6)
!8215 = !DILocation(line: 410, column: 13, scope: !8213)
!8216 = !DILocation(line: 410, column: 8, scope: !8214)
!8217 = distinct !{!8217, !8210, !8218}
!8218 = !DILocation(line: 414, column: 20, scope: !8205)
!8219 = !DILocation(line: 417, column: 2, scope: !8197)
!8220 = !DILocation(line: 418, column: 1, scope: !8197)
!8221 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !546, file: !546, line: 23, type: !3348, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8222)
!8222 = !{!8223}
!8223 = !DILocalVariable(name: "hook", arg: 1, scope: !8221, file: !546, line: 23, type: !106)
!8224 = !DILocation(line: 0, scope: !8221)
!8225 = !DILocation(line: 25, column: 15, scope: !8221)
!8226 = !DILocation(line: 26, column: 1, scope: !8221)
!8227 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !546, file: !546, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8228)
!8228 = !{!8229}
!8229 = !DILocalVariable(name: "c", arg: 1, scope: !8227, file: !546, line: 14, type: !103)
!8230 = !DILocation(line: 0, scope: !8227)
!8231 = !DILocation(line: 18, column: 2, scope: !8227)
!8232 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !546, file: !546, line: 28, type: !8233, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8235)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!103, !103, !542}
!8235 = !{!8236, !8237}
!8236 = !DILocalVariable(name: "c", arg: 1, scope: !8232, file: !546, line: 28, type: !103)
!8237 = !DILocalVariable(name: "stream", arg: 2, scope: !8232, file: !546, line: 28, type: !542)
!8238 = !DILocation(line: 0, scope: !8232)
!8239 = !DILocation(line: 30, column: 27, scope: !8232)
!8240 = !DILocation(line: 30, column: 50, scope: !8232)
!8241 = !DILocation(line: 30, column: 9, scope: !8232)
!8242 = !DILocation(line: 30, column: 2, scope: !8232)
!8243 = distinct !DISubprogram(name: "fputc", scope: !546, file: !546, line: 41, type: !8233, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8244)
!8244 = !{!8245, !8246}
!8245 = !DILocalVariable(name: "c", arg: 1, scope: !8243, file: !546, line: 41, type: !103)
!8246 = !DILocalVariable(name: "stream", arg: 2, scope: !8243, file: !546, line: 41, type: !542)
!8247 = !DILocation(line: 0, scope: !8243)
!8248 = !DILocation(line: 43, column: 9, scope: !8243)
!8249 = !DILocation(line: 43, column: 2, scope: !8243)
!8250 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8251, file: !8251, line: 72, type: !8233, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8252)
!8251 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!8252 = !{!8253, !8254}
!8253 = !DILocalVariable(name: "c", arg: 1, scope: !8250, file: !8251, line: 72, type: !103)
!8254 = !DILocalVariable(name: "stream", arg: 2, scope: !8250, file: !8251, line: 72, type: !542)
!8255 = !DILocation(line: 0, scope: !8250)
!8256 = !DILocation(line: 81, column: 2, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8250, file: !8251, line: 81, column: 2)
!8258 = !{i64 2152278131}
!8259 = !DILocation(line: 82, column: 9, scope: !8250)
!8260 = !DILocation(line: 82, column: 2, scope: !8250)
!8261 = distinct !DISubprogram(name: "fputs", scope: !546, file: !546, line: 46, type: !8262, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8265)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!103, !7857, !8264}
!8264 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !542)
!8265 = !{!8266, !8267, !8268, !8269}
!8266 = !DILocalVariable(name: "s", arg: 1, scope: !8261, file: !546, line: 46, type: !7857)
!8267 = !DILocalVariable(name: "stream", arg: 2, scope: !8261, file: !546, line: 46, type: !8264)
!8268 = !DILocalVariable(name: "len", scope: !8261, file: !546, line: 48, type: !103)
!8269 = !DILocalVariable(name: "ret", scope: !8261, file: !546, line: 49, type: !103)
!8270 = !DILocation(line: 0, scope: !8261)
!8271 = !DILocation(line: 48, column: 12, scope: !8261)
!8272 = !DILocation(line: 51, column: 8, scope: !8261)
!8273 = !DILocation(line: 53, column: 13, scope: !8261)
!8274 = !DILocation(line: 53, column: 9, scope: !8261)
!8275 = !DILocation(line: 53, column: 2, scope: !8261)
!8276 = distinct !DISubprogram(name: "fwrite", scope: !546, file: !546, line: 99, type: !8277, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8279)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{!357, !8158, !357, !357, !8264}
!8279 = !{!8280, !8281, !8282, !8283}
!8280 = !DILocalVariable(name: "ptr", arg: 1, scope: !8276, file: !546, line: 99, type: !8158)
!8281 = !DILocalVariable(name: "size", arg: 2, scope: !8276, file: !546, line: 99, type: !357)
!8282 = !DILocalVariable(name: "nitems", arg: 3, scope: !8276, file: !546, line: 99, type: !357)
!8283 = !DILocalVariable(name: "stream", arg: 4, scope: !8276, file: !546, line: 100, type: !8264)
!8284 = !DILocation(line: 0, scope: !8276)
!8285 = !DILocation(line: 102, column: 9, scope: !8276)
!8286 = !DILocation(line: 102, column: 2, scope: !8276)
!8287 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8251, file: !8251, line: 96, type: !8277, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8288)
!8288 = !{!8289, !8290, !8291, !8292}
!8289 = !DILocalVariable(name: "ptr", arg: 1, scope: !8287, file: !8251, line: 96, type: !8158)
!8290 = !DILocalVariable(name: "size", arg: 2, scope: !8287, file: !8251, line: 96, type: !357)
!8291 = !DILocalVariable(name: "nitems", arg: 3, scope: !8287, file: !8251, line: 96, type: !357)
!8292 = !DILocalVariable(name: "stream", arg: 4, scope: !8287, file: !8251, line: 96, type: !8264)
!8293 = !DILocation(line: 0, scope: !8287)
!8294 = !DILocation(line: 107, column: 2, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8287, file: !8251, line: 107, column: 2)
!8296 = !{i64 2152278235}
!8297 = !DILocation(line: 108, column: 9, scope: !8287)
!8298 = !DILocation(line: 108, column: 2, scope: !8287)
!8299 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !546, file: !546, line: 56, type: !8277, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8300)
!8300 = !{!8301, !8302, !8303, !8304, !8305, !8306, !8307, !8308}
!8301 = !DILocalVariable(name: "ptr", arg: 1, scope: !8299, file: !546, line: 56, type: !8158)
!8302 = !DILocalVariable(name: "size", arg: 2, scope: !8299, file: !546, line: 56, type: !357)
!8303 = !DILocalVariable(name: "nitems", arg: 3, scope: !8299, file: !546, line: 57, type: !357)
!8304 = !DILocalVariable(name: "stream", arg: 4, scope: !8299, file: !546, line: 57, type: !8264)
!8305 = !DILocalVariable(name: "i", scope: !8299, file: !546, line: 59, type: !357)
!8306 = !DILocalVariable(name: "j", scope: !8299, file: !546, line: 60, type: !357)
!8307 = !DILocalVariable(name: "p", scope: !8299, file: !546, line: 61, type: !3032)
!8308 = !DILabel(scope: !8299, name: "done", file: !546, line: 82)
!8309 = !DILocation(line: 0, scope: !8299)
!8310 = !DILocation(line: 63, column: 14, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8299, file: !546, line: 63, column: 6)
!8312 = !DILocation(line: 63, column: 24, scope: !8311)
!8313 = !DILocation(line: 72, column: 3, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8299, file: !546, line: 70, column: 5)
!8315 = !DILocation(line: 0, scope: !8314)
!8316 = !DILocation(line: 73, column: 8, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !546, line: 73, column: 8)
!8318 = distinct !DILexicalBlock(scope: !8314, file: !546, line: 72, column: 6)
!8319 = !DILocation(line: 73, column: 29, scope: !8317)
!8320 = !DILocation(line: 73, column: 27, scope: !8317)
!8321 = !DILocation(line: 73, column: 21, scope: !8317)
!8322 = !DILocation(line: 73, column: 33, scope: !8317)
!8323 = !DILocation(line: 73, column: 8, scope: !8318)
!8324 = !DILocation(line: 76, column: 5, scope: !8318)
!8325 = !DILocation(line: 77, column: 14, scope: !8314)
!8326 = !DILocation(line: 77, column: 3, scope: !8318)
!8327 = distinct !{!8327, !8313, !8328}
!8328 = !DILocation(line: 77, column: 17, scope: !8314)
!8329 = !DILocation(line: 79, column: 4, scope: !8314)
!8330 = !DILocation(line: 80, column: 13, scope: !8299)
!8331 = !DILocation(line: 80, column: 2, scope: !8314)
!8332 = distinct !{!8332, !8333, !8334}
!8333 = !DILocation(line: 70, column: 2, scope: !8299)
!8334 = !DILocation(line: 80, column: 16, scope: !8299)
!8335 = !DILocation(line: 82, column: 1, scope: !8299)
!8336 = !DILocation(line: 83, column: 17, scope: !8299)
!8337 = !DILocation(line: 83, column: 2, scope: !8299)
!8338 = !DILocation(line: 84, column: 1, scope: !8299)
!8339 = distinct !DISubprogram(name: "puts", scope: !546, file: !546, line: 106, type: !8340, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !539, retainedNodes: !8342)
!8340 = !DISubroutineType(types: !8341)
!8341 = !{!103, !157}
!8342 = !{!8343}
!8343 = !DILocalVariable(name: "s", arg: 1, scope: !8339, file: !546, line: 106, type: !157)
!8344 = !DILocation(line: 0, scope: !8339)
!8345 = !DILocation(line: 108, column: 6, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8339, file: !546, line: 108, column: 6)
!8347 = !DILocation(line: 108, column: 23, scope: !8346)
!8348 = !DILocation(line: 108, column: 6, scope: !8339)
!8349 = !DILocation(line: 112, column: 9, scope: !8339)
!8350 = !DILocation(line: 112, column: 29, scope: !8339)
!8351 = !DILocation(line: 112, column: 2, scope: !8339)
!8352 = !DILocation(line: 113, column: 1, scope: !8339)
!8353 = distinct !DISubprogram(name: "rf_init", scope: !671, file: !671, line: 10, type: !677, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !8354)
!8354 = !{!8355, !8356, !8364, !8365}
!8355 = !DILocalVariable(name: "dev", arg: 1, scope: !8353, file: !671, line: 10, type: !597)
!8356 = !DILocalVariable(name: "rf1", scope: !8353, file: !671, line: 12, type: !8357)
!8357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8358)
!8358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !578, line: 271, size: 64, elements: !8359)
!8359 = !{!8360, !8361, !8362}
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8358, file: !578, line: 273, baseType: !597, size: 32)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8358, file: !578, line: 275, baseType: !612, size: 8, offset: 32)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8358, file: !578, line: 277, baseType: !8363, size: 16, offset: 48)
!8363 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !578, line: 249, baseType: !341)
!8364 = !DILocalVariable(name: "rf2", scope: !8353, file: !671, line: 14, type: !8357)
!8365 = !DILocalVariable(name: "rf3", scope: !8353, file: !671, line: 16, type: !8357)
!8366 = !DILocation(line: 0, scope: !8353)
!8367 = !DILocation(line: 12, column: 2, scope: !8353)
!8368 = !DILocation(line: 12, column: 28, scope: !8353)
!8369 = !DILocation(line: 14, column: 2, scope: !8353)
!8370 = !DILocation(line: 14, column: 28, scope: !8353)
!8371 = !DILocation(line: 16, column: 2, scope: !8353)
!8372 = !DILocation(line: 16, column: 28, scope: !8353)
!8373 = !DILocation(line: 22, column: 27, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8353, file: !671, line: 22, column: 6)
!8375 = !DILocation(line: 22, column: 7, scope: !8374)
!8376 = !DILocation(line: 22, column: 33, scope: !8374)
!8377 = !DILocation(line: 23, column: 7, scope: !8374)
!8378 = !DILocation(line: 23, column: 33, scope: !8374)
!8379 = !DILocation(line: 24, column: 7, scope: !8374)
!8380 = !DILocation(line: 22, column: 6, scope: !8353)
!8381 = !DILocation(line: 28, column: 8, scope: !8353)
!8382 = !DILocation(line: 29, column: 8, scope: !8353)
!8383 = !DILocation(line: 30, column: 8, scope: !8353)
!8384 = !DILocation(line: 32, column: 2, scope: !8353)
!8385 = !DILocation(line: 33, column: 1, scope: !8353)
!8386 = distinct !DISubprogram(name: "device_is_ready", scope: !6639, file: !6639, line: 47, type: !8387, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !8389)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{!170, !597}
!8389 = !{!8390}
!8390 = !DILocalVariable(name: "dev", arg: 1, scope: !8386, file: !6639, line: 47, type: !597)
!8391 = !DILocation(line: 0, scope: !8386)
!8392 = !DILocation(line: 55, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8386, file: !6639, line: 55, column: 2)
!8394 = !{i64 2148925908}
!8395 = !DILocation(line: 56, column: 9, scope: !8386)
!8396 = !DILocation(line: 56, column: 2, scope: !8386)
!8397 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !578, file: !578, line: 731, type: !8398, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !8401)
!8398 = !DISubroutineType(types: !8399)
!8399 = !{!103, !8400, !613}
!8400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8357, size: 32)
!8401 = !{!8402, !8403}
!8402 = !DILocalVariable(name: "spec", arg: 1, scope: !8397, file: !578, line: 731, type: !8400)
!8403 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8397, file: !578, line: 732, type: !613)
!8404 = !DILocation(line: 0, scope: !8397)
!8405 = !DILocation(line: 734, column: 34, scope: !8397)
!8406 = !DILocation(line: 735, column: 13, scope: !8397)
!8407 = !DILocation(line: 736, column: 13, scope: !8397)
!8408 = !DILocation(line: 736, column: 7, scope: !8397)
!8409 = !DILocation(line: 736, column: 22, scope: !8397)
!8410 = !DILocation(line: 734, column: 9, scope: !8397)
!8411 = !DILocation(line: 734, column: 2, scope: !8397)
!8412 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8413, file: !8413, line: 49, type: !595, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !8414)
!8413 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/getchar")
!8414 = !{!8415, !8416, !8417}
!8415 = !DILocalVariable(name: "port", arg: 1, scope: !8412, file: !8413, line: 49, type: !597)
!8416 = !DILocalVariable(name: "pin", arg: 2, scope: !8412, file: !8413, line: 49, type: !612)
!8417 = !DILocalVariable(name: "flags", arg: 3, scope: !8412, file: !8413, line: 49, type: !613)
!8418 = !DILocation(line: 0, scope: !8412)
!8419 = !DILocation(line: 59, column: 2, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8412, file: !8413, line: 59, column: 2)
!8421 = !{i64 2148940278}
!8422 = !DILocation(line: 60, column: 9, scope: !8412)
!8423 = !DILocation(line: 60, column: 2, scope: !8412)
!8424 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !578, file: !578, line: 667, type: !595, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !8425)
!8425 = !{!8426, !8427, !8428, !8429, !8430, !8432}
!8426 = !DILocalVariable(name: "port", arg: 1, scope: !8424, file: !578, line: 667, type: !597)
!8427 = !DILocalVariable(name: "pin", arg: 2, scope: !8424, file: !578, line: 668, type: !612)
!8428 = !DILocalVariable(name: "flags", arg: 3, scope: !8424, file: !578, line: 669, type: !613)
!8429 = !DILocalVariable(name: "api", scope: !8424, file: !578, line: 671, type: !589)
!8430 = !DILocalVariable(name: "cfg", scope: !8424, file: !578, line: 673, type: !8431)
!8431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !659)
!8432 = !DILocalVariable(name: "data", scope: !8424, file: !578, line: 675, type: !669)
!8433 = !DILocation(line: 0, scope: !8424)
!8434 = !DILocation(line: 672, column: 41, scope: !8424)
!8435 = !DILocation(line: 676, column: 36, scope: !8424)
!8436 = !DILocation(line: 701, column: 6, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8424, file: !578, line: 700, column: 6)
!8438 = !DILocation(line: 711, column: 13, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8424, file: !578, line: 711, column: 6)
!8440 = !DILocation(line: 711, column: 32, scope: !8439)
!8441 = !DILocation(line: 0, scope: !8439)
!8442 = !DILocation(line: 711, column: 6, scope: !8424)
!8443 = !DILocation(line: 712, column: 9, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8439, file: !578, line: 711, column: 38)
!8445 = !DILocation(line: 712, column: 16, scope: !8444)
!8446 = !DILocation(line: 713, column: 2, scope: !8444)
!8447 = !DILocation(line: 714, column: 19, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8439, file: !578, line: 713, column: 9)
!8449 = !DILocation(line: 714, column: 9, scope: !8448)
!8450 = !DILocation(line: 714, column: 16, scope: !8448)
!8451 = !DILocation(line: 706, column: 8, scope: !8424)
!8452 = !DILocation(line: 717, column: 14, scope: !8424)
!8453 = !DILocation(line: 717, column: 9, scope: !8424)
!8454 = !DILocation(line: 717, column: 2, scope: !8424)
!8455 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !8387, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !574, retainedNodes: !8456)
!8456 = !{!8457}
!8457 = !DILocalVariable(name: "dev", arg: 1, scope: !8455, file: !154, line: 730, type: !597)
!8458 = !DILocation(line: 0, scope: !8455)
!8459 = !DILocation(line: 732, column: 9, scope: !8455)
!8460 = !DILocation(line: 732, column: 2, scope: !8455)
!8461 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !754, file: !754, line: 368, type: !805, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8462)
!8462 = !{!8463}
!8463 = !DILocalVariable(name: "dev", arg: 1, scope: !8461, file: !754, line: 368, type: !783)
!8464 = !DILocation(line: 0, scope: !8461)
!8465 = !DILocation(line: 370, column: 2, scope: !8461)
!8466 = !DILocation(line: 371, column: 1, scope: !8461)
!8467 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !754, file: !754, line: 243, type: !8468, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8470)
!8468 = !DISubroutineType(types: !8469)
!8469 = !{null, !103, !103, !783}
!8470 = !{!8471, !8472, !8473, !8474, !8476}
!8471 = !DILocalVariable(name: "min", arg: 1, scope: !8467, file: !754, line: 243, type: !103)
!8472 = !DILocalVariable(name: "max", arg: 2, scope: !8467, file: !754, line: 243, type: !103)
!8473 = !DILocalVariable(name: "dev", arg: 3, scope: !8467, file: !754, line: 243, type: !783)
!8474 = !DILocalVariable(name: "data", scope: !8467, file: !754, line: 245, type: !8475)
!8475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!8476 = !DILocalVariable(name: "line", scope: !8467, file: !754, line: 246, type: !103)
!8477 = !DILocation(line: 0, scope: !8467)
!8478 = !DILocation(line: 245, column: 38, scope: !8467)
!8479 = !DILocation(line: 249, column: 24, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !754, line: 249, column: 2)
!8481 = distinct !DILexicalBlock(scope: !8467, file: !754, line: 249, column: 2)
!8482 = !DILocation(line: 249, column: 2, scope: !8481)
!8483 = !DILocation(line: 251, column: 7, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !754, line: 251, column: 7)
!8485 = distinct !DILexicalBlock(scope: !8480, file: !754, line: 249, column: 39)
!8486 = !DILocation(line: 251, column: 7, scope: !8485)
!8487 = !DILocation(line: 253, column: 4, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8484, file: !754, line: 251, column: 36)
!8489 = !DILocation(line: 256, column: 24, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8488, file: !754, line: 256, column: 8)
!8491 = !DILocation(line: 256, column: 9, scope: !8490)
!8492 = !DILocation(line: 256, column: 8, scope: !8488)
!8493 = !DILocation(line: 260, column: 43, scope: !8488)
!8494 = !DILocation(line: 260, column: 4, scope: !8488)
!8495 = !DILocation(line: 261, column: 3, scope: !8488)
!8496 = !DILocation(line: 249, column: 35, scope: !8480)
!8497 = distinct !{!8497, !8482, !8498}
!8498 = !DILocation(line: 262, column: 2, scope: !8481)
!8499 = !DILocation(line: 263, column: 1, scope: !8467)
!8500 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !754, file: !754, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8501)
!8501 = !{!8502}
!8502 = !DILocalVariable(name: "line", arg: 1, scope: !8500, file: !754, line: 158, type: !103)
!8503 = !DILocation(line: 0, scope: !8500)
!8504 = !DILocation(line: 170, column: 38, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !754, line: 160, column: 17)
!8506 = distinct !DILexicalBlock(scope: !8500, file: !754, line: 160, column: 6)
!8507 = !DILocation(line: 170, column: 10, scope: !8505)
!8508 = !DILocation(line: 176, column: 1, scope: !8500)
!8509 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !754, file: !754, line: 183, type: !8510, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8512)
!8510 = !DISubroutineType(types: !8511)
!8511 = !{null, !103}
!8512 = !{!8513}
!8513 = !DILocalVariable(name: "line", arg: 1, scope: !8509, file: !754, line: 183, type: !103)
!8514 = !DILocation(line: 0, scope: !8509)
!8515 = !DILocation(line: 195, column: 28, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !754, line: 185, column: 17)
!8517 = distinct !DILexicalBlock(scope: !8509, file: !754, line: 185, column: 6)
!8518 = !DILocation(line: 195, column: 3, scope: !8516)
!8519 = !DILocation(line: 200, column: 1, scope: !8509)
!8520 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8521, file: !8521, line: 971, type: !5785, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8522)
!8521 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8522 = !{!8523}
!8523 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8520, file: !8521, line: 971, type: !121)
!8524 = !DILocation(line: 0, scope: !8520)
!8525 = !DILocation(line: 973, column: 3, scope: !8520)
!8526 = !DILocation(line: 974, column: 1, scope: !8520)
!8527 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8521, file: !8521, line: 891, type: !7767, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8527, file: !8521, line: 891, type: !121)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 893, column: 11, scope: !8527)
!8532 = !DILocation(line: 893, column: 40, scope: !8527)
!8533 = !DILocation(line: 893, column: 3, scope: !8527)
!8534 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !754, file: !754, line: 304, type: !805, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8535)
!8535 = !{!8536}
!8536 = !DILocalVariable(name: "dev", arg: 1, scope: !8534, file: !754, line: 304, type: !783)
!8537 = !DILocation(line: 0, scope: !8534)
!8538 = !DILocation(line: 306, column: 2, scope: !8534)
!8539 = !DILocation(line: 307, column: 1, scope: !8534)
!8540 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !754, file: !754, line: 299, type: !805, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8541)
!8541 = !{!8542}
!8542 = !DILocalVariable(name: "dev", arg: 1, scope: !8540, file: !754, line: 299, type: !783)
!8543 = !DILocation(line: 0, scope: !8540)
!8544 = !DILocation(line: 301, column: 2, scope: !8540)
!8545 = !DILocation(line: 302, column: 1, scope: !8540)
!8546 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !754, file: !754, line: 294, type: !805, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8547)
!8547 = !{!8548}
!8548 = !DILocalVariable(name: "dev", arg: 1, scope: !8546, file: !754, line: 294, type: !783)
!8549 = !DILocation(line: 0, scope: !8546)
!8550 = !DILocation(line: 296, column: 2, scope: !8546)
!8551 = !DILocation(line: 297, column: 1, scope: !8546)
!8552 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !754, file: !754, line: 289, type: !805, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8553)
!8553 = !{!8554}
!8554 = !DILocalVariable(name: "dev", arg: 1, scope: !8552, file: !754, line: 289, type: !783)
!8555 = !DILocation(line: 0, scope: !8552)
!8556 = !DILocation(line: 291, column: 2, scope: !8552)
!8557 = !DILocation(line: 292, column: 1, scope: !8552)
!8558 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !754, file: !754, line: 373, type: !805, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8559)
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "dev", arg: 1, scope: !8558, file: !754, line: 373, type: !783)
!8561 = !DILocation(line: 0, scope: !8558)
!8562 = !DILocation(line: 375, column: 2, scope: !8558)
!8563 = !DILocation(line: 376, column: 1, scope: !8558)
!8564 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !754, file: !754, line: 284, type: !805, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8565)
!8565 = !{!8566}
!8566 = !DILocalVariable(name: "dev", arg: 1, scope: !8564, file: !754, line: 284, type: !783)
!8567 = !DILocation(line: 0, scope: !8564)
!8568 = !DILocation(line: 286, column: 2, scope: !8564)
!8569 = !DILocation(line: 287, column: 1, scope: !8564)
!8570 = distinct !DISubprogram(name: "stm32_exti_init", scope: !754, file: !754, line: 416, type: !781, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8571)
!8571 = !{!8572}
!8572 = !DILocalVariable(name: "dev", arg: 1, scope: !8570, file: !754, line: 416, type: !783)
!8573 = !DILocation(line: 0, scope: !8570)
!8574 = !DILocation(line: 418, column: 2, scope: !8570)
!8575 = !DILocation(line: 420, column: 2, scope: !8570)
!8576 = !DILocation(line: 0, scope: !804)
!8577 = !DILocation(line: 493, column: 2, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !804, file: !754, line: 493, column: 2)
!8579 = !DILocation(line: 497, column: 2, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !804, file: !754, line: 497, column: 2)
!8581 = !DILocation(line: 507, column: 2, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !804, file: !754, line: 507, column: 2)
!8583 = !DILocation(line: 512, column: 2, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !804, file: !754, line: 512, column: 2)
!8585 = !DILocation(line: 516, column: 2, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !804, file: !754, line: 516, column: 2)
!8587 = !DILocation(line: 523, column: 2, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !804, file: !754, line: 523, column: 2)
!8589 = !DILocation(line: 527, column: 2, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !804, file: !754, line: 527, column: 2)
!8591 = !DILocation(line: 607, column: 1, scope: !804)
!8592 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !754, file: !754, line: 112, type: !8510, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8593)
!8593 = !{!8594, !8595}
!8594 = !DILocalVariable(name: "line", arg: 1, scope: !8592, file: !754, line: 112, type: !103)
!8595 = !DILocalVariable(name: "irqnum", scope: !8592, file: !754, line: 114, type: !103)
!8596 = !DILocation(line: 0, scope: !8592)
!8597 = !DILocation(line: 121, column: 11, scope: !8592)
!8598 = !DILocation(line: 130, column: 26, scope: !8592)
!8599 = !DILocation(line: 130, column: 2, scope: !8592)
!8600 = !DILocation(line: 134, column: 2, scope: !8592)
!8601 = !DILocation(line: 135, column: 1, scope: !8592)
!8602 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8521, file: !8521, line: 274, type: !5785, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8603)
!8603 = !{!8604}
!8604 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8602, file: !8521, line: 274, type: !121)
!8605 = !DILocation(line: 0, scope: !8602)
!8606 = !DILocation(line: 276, column: 3, scope: !8602)
!8607 = !DILocation(line: 277, column: 1, scope: !8602)
!8608 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !754, file: !754, line: 137, type: !8510, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8609)
!8609 = !{!8610}
!8610 = !DILocalVariable(name: "line", arg: 1, scope: !8608, file: !754, line: 137, type: !103)
!8611 = !DILocation(line: 0, scope: !8608)
!8612 = !DILocation(line: 141, column: 11, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8608, file: !754, line: 141, column: 6)
!8614 = !DILocation(line: 141, column: 6, scope: !8608)
!8615 = !DILocation(line: 145, column: 28, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8613, file: !754, line: 141, column: 17)
!8617 = !DILocation(line: 145, column: 3, scope: !8616)
!8618 = !DILocation(line: 147, column: 2, scope: !8616)
!8619 = !DILocation(line: 151, column: 1, scope: !8608)
!8620 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8521, file: !8521, line: 322, type: !5785, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8621)
!8621 = !{!8622}
!8622 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8620, file: !8521, line: 322, type: !121)
!8623 = !DILocation(line: 0, scope: !8620)
!8624 = !DILocation(line: 324, column: 3, scope: !8620)
!8625 = !DILocation(line: 325, column: 1, scope: !8620)
!8626 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !754, file: !754, line: 202, type: !8627, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8629)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{null, !103, !103}
!8629 = !{!8630, !8631}
!8630 = !DILocalVariable(name: "line", arg: 1, scope: !8626, file: !754, line: 202, type: !103)
!8631 = !DILocalVariable(name: "trigger", arg: 2, scope: !8626, file: !754, line: 202, type: !103)
!8632 = !DILocation(line: 0, scope: !8626)
!8633 = !DILocation(line: 211, column: 2, scope: !8626)
!8634 = !DILocation(line: 213, column: 36, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8626, file: !754, line: 211, column: 19)
!8636 = !DILocation(line: 213, column: 3, scope: !8635)
!8637 = !DILocation(line: 214, column: 3, scope: !8635)
!8638 = !DILocation(line: 215, column: 3, scope: !8635)
!8639 = !DILocation(line: 217, column: 35, scope: !8635)
!8640 = !DILocation(line: 217, column: 3, scope: !8635)
!8641 = !DILocation(line: 218, column: 3, scope: !8635)
!8642 = !DILocation(line: 219, column: 3, scope: !8635)
!8643 = !DILocation(line: 221, column: 36, scope: !8635)
!8644 = !DILocation(line: 221, column: 3, scope: !8635)
!8645 = !DILocation(line: 222, column: 3, scope: !8635)
!8646 = !DILocation(line: 223, column: 3, scope: !8635)
!8647 = !DILocation(line: 225, column: 35, scope: !8635)
!8648 = !DILocation(line: 225, column: 3, scope: !8635)
!8649 = !DILocation(line: 226, column: 3, scope: !8635)
!8650 = !DILocation(line: 227, column: 3, scope: !8635)
!8651 = !DILocation(line: 232, column: 1, scope: !8626)
!8652 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8521, file: !8521, line: 618, type: !5785, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8653)
!8653 = !{!8654}
!8654 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8652, file: !8521, line: 618, type: !121)
!8655 = !DILocation(line: 0, scope: !8652)
!8656 = !DILocation(line: 620, column: 3, scope: !8652)
!8657 = !DILocation(line: 622, column: 1, scope: !8652)
!8658 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8521, file: !8521, line: 754, type: !5785, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8659)
!8659 = !{!8660}
!8660 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8658, file: !8521, line: 754, type: !121)
!8661 = !DILocation(line: 0, scope: !8658)
!8662 = !DILocation(line: 756, column: 3, scope: !8658)
!8663 = !DILocation(line: 757, column: 1, scope: !8658)
!8664 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8521, file: !8521, line: 572, type: !5785, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8665)
!8665 = !{!8666}
!8666 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8664, file: !8521, line: 572, type: !121)
!8667 = !DILocation(line: 0, scope: !8664)
!8668 = !DILocation(line: 574, column: 3, scope: !8664)
!8669 = !DILocation(line: 576, column: 1, scope: !8664)
!8670 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8521, file: !8521, line: 710, type: !5785, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8671)
!8671 = !{!8672}
!8672 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8670, file: !8521, line: 710, type: !121)
!8673 = !DILocation(line: 0, scope: !8670)
!8674 = !DILocation(line: 712, column: 3, scope: !8670)
!8675 = !DILocation(line: 713, column: 1, scope: !8670)
!8676 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !754, file: !754, line: 433, type: !8677, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8679)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!103, !103, !794, !102}
!8679 = !{!8680, !8681, !8682, !8683, !8685}
!8680 = !DILocalVariable(name: "line", arg: 1, scope: !8676, file: !754, line: 433, type: !103)
!8681 = !DILocalVariable(name: "cb", arg: 2, scope: !8676, file: !754, line: 433, type: !794)
!8682 = !DILocalVariable(name: "arg", arg: 3, scope: !8676, file: !754, line: 433, type: !102)
!8683 = !DILocalVariable(name: "dev", scope: !8676, file: !754, line: 435, type: !8684)
!8684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !783)
!8685 = !DILocalVariable(name: "data", scope: !8676, file: !754, line: 436, type: !8475)
!8686 = !DILocation(line: 0, scope: !8676)
!8687 = !DILocation(line: 438, column: 21, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8676, file: !754, line: 438, column: 6)
!8689 = !DILocation(line: 438, column: 6, scope: !8688)
!8690 = !DILocation(line: 438, column: 6, scope: !8676)
!8691 = !DILocation(line: 442, column: 20, scope: !8676)
!8692 = !DILocation(line: 443, column: 17, scope: !8676)
!8693 = !DILocation(line: 443, column: 22, scope: !8676)
!8694 = !DILocation(line: 445, column: 2, scope: !8676)
!8695 = !DILocation(line: 446, column: 1, scope: !8676)
!8696 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !754, file: !754, line: 448, type: !8510, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !682, retainedNodes: !8697)
!8697 = !{!8698, !8699, !8700}
!8698 = !DILocalVariable(name: "line", arg: 1, scope: !8696, file: !754, line: 448, type: !103)
!8699 = !DILocalVariable(name: "dev", scope: !8696, file: !754, line: 450, type: !8684)
!8700 = !DILocalVariable(name: "data", scope: !8696, file: !754, line: 451, type: !8475)
!8701 = !DILocation(line: 0, scope: !8696)
!8702 = !DILocation(line: 453, column: 17, scope: !8696)
!8703 = !DILocation(line: 453, column: 20, scope: !8696)
!8704 = !DILocation(line: 454, column: 17, scope: !8696)
!8705 = !DILocation(line: 454, column: 22, scope: !8696)
!8706 = !DILocation(line: 455, column: 1, scope: !8696)
!8707 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !906, file: !906, line: 183, type: !944, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8708)
!8708 = !{!8709, !8710, !8711, !8712, !8713}
!8709 = !DILocalVariable(name: "dev", arg: 1, scope: !8707, file: !906, line: 183, type: !935)
!8710 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8707, file: !906, line: 184, type: !946)
!8711 = !DILocalVariable(name: "pclken", scope: !8707, file: !906, line: 186, type: !896)
!8712 = !DILocalVariable(name: "reg", scope: !8707, file: !906, line: 187, type: !3094)
!8713 = !DILocalVariable(name: "reg_val", scope: !8707, file: !906, line: 188, type: !121)
!8714 = !DILocation(line: 0, scope: !8707)
!8715 = !DILocation(line: 192, column: 6, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8707, file: !906, line: 192, column: 6)
!8717 = !DILocation(line: 192, column: 6, scope: !8707)
!8718 = !DILocation(line: 197, column: 52, scope: !8707)
!8719 = !DILocation(line: 197, column: 8, scope: !8707)
!8720 = !DILocation(line: 198, column: 12, scope: !8707)
!8721 = !DILocation(line: 199, column: 21, scope: !8707)
!8722 = !DILocation(line: 199, column: 10, scope: !8707)
!8723 = !DILocation(line: 200, column: 7, scope: !8707)
!8724 = !DILocation(line: 202, column: 2, scope: !8707)
!8725 = !DILocation(line: 203, column: 1, scope: !8707)
!8726 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !906, file: !906, line: 205, type: !944, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8727)
!8727 = !{!8728, !8729, !8730, !8731, !8732}
!8728 = !DILocalVariable(name: "dev", arg: 1, scope: !8726, file: !906, line: 205, type: !935)
!8729 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8726, file: !906, line: 206, type: !946)
!8730 = !DILocalVariable(name: "pclken", scope: !8726, file: !906, line: 208, type: !896)
!8731 = !DILocalVariable(name: "reg", scope: !8726, file: !906, line: 209, type: !3094)
!8732 = !DILocalVariable(name: "reg_val", scope: !8726, file: !906, line: 210, type: !121)
!8733 = !DILocation(line: 0, scope: !8726)
!8734 = !DILocation(line: 214, column: 6, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8726, file: !906, line: 214, column: 6)
!8736 = !DILocation(line: 214, column: 6, scope: !8726)
!8737 = !DILocation(line: 219, column: 52, scope: !8726)
!8738 = !DILocation(line: 219, column: 8, scope: !8726)
!8739 = !DILocation(line: 220, column: 12, scope: !8726)
!8740 = !DILocation(line: 221, column: 22, scope: !8726)
!8741 = !DILocation(line: 221, column: 13, scope: !8726)
!8742 = !DILocation(line: 221, column: 10, scope: !8726)
!8743 = !DILocation(line: 222, column: 7, scope: !8726)
!8744 = !DILocation(line: 224, column: 2, scope: !8726)
!8745 = !DILocation(line: 225, column: 1, scope: !8726)
!8746 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !906, file: !906, line: 262, type: !960, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8747)
!8747 = !{!8748, !8749, !8750, !8751, !8752, !8753, !8754}
!8748 = !DILocalVariable(name: "clock", arg: 1, scope: !8746, file: !906, line: 262, type: !935)
!8749 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8746, file: !906, line: 263, type: !946)
!8750 = !DILocalVariable(name: "rate", arg: 3, scope: !8746, file: !906, line: 264, type: !902)
!8751 = !DILocalVariable(name: "pclken", scope: !8746, file: !906, line: 266, type: !896)
!8752 = !DILocalVariable(name: "ahb_clock", scope: !8746, file: !906, line: 273, type: !121)
!8753 = !DILocalVariable(name: "apb1_clock", scope: !8746, file: !906, line: 274, type: !121)
!8754 = !DILocalVariable(name: "apb2_clock", scope: !8746, file: !906, line: 276, type: !121)
!8755 = !DILocation(line: 0, scope: !8746)
!8756 = !DILocation(line: 273, column: 23, scope: !8746)
!8757 = !DILocation(line: 299, column: 18, scope: !8746)
!8758 = !DILocation(line: 299, column: 2, scope: !8746)
!8759 = !DILocation(line: 374, column: 3, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8746, file: !906, line: 299, column: 23)
!8761 = !DILocation(line: 379, column: 3, scope: !8760)
!8762 = !DILocation(line: 389, column: 3, scope: !8760)
!8763 = !DILocation(line: 0, scope: !8760)
!8764 = !DILocation(line: 396, column: 1, scope: !8746)
!8765 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !906, file: !906, line: 227, type: !976, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8766)
!8766 = !{!8767, !8768, !8769, !8770, !8771, !8772, !8773, !8774}
!8767 = !DILocalVariable(name: "dev", arg: 1, scope: !8765, file: !906, line: 227, type: !935)
!8768 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8765, file: !906, line: 228, type: !946)
!8769 = !DILocalVariable(name: "data", arg: 3, scope: !8765, file: !906, line: 229, type: !102)
!8770 = !DILocalVariable(name: "pclken", scope: !8765, file: !906, line: 233, type: !896)
!8771 = !DILocalVariable(name: "reg", scope: !8765, file: !906, line: 234, type: !3094)
!8772 = !DILocalVariable(name: "reg_val", scope: !8765, file: !906, line: 235, type: !121)
!8773 = !DILocalVariable(name: "dt_val", scope: !8765, file: !906, line: 235, type: !121)
!8774 = !DILocalVariable(name: "err", scope: !8765, file: !906, line: 236, type: !103)
!8775 = !DILocation(line: 0, scope: !8765)
!8776 = !DILocation(line: 241, column: 30, scope: !8765)
!8777 = !DILocation(line: 241, column: 8, scope: !8765)
!8778 = !DILocation(line: 242, column: 10, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8765, file: !906, line: 242, column: 6)
!8780 = !DILocation(line: 242, column: 6, scope: !8765)
!8781 = !DILocation(line: 247, column: 11, scope: !8765)
!8782 = !DILocation(line: 248, column: 6, scope: !8765)
!8783 = !DILocation(line: 247, column: 44, scope: !8765)
!8784 = !DILocation(line: 250, column: 6, scope: !8765)
!8785 = !DILocation(line: 249, column: 52, scope: !8765)
!8786 = !DILocation(line: 249, column: 8, scope: !8765)
!8787 = !DILocation(line: 251, column: 12, scope: !8765)
!8788 = !DILocation(line: 252, column: 10, scope: !8765)
!8789 = !DILocation(line: 253, column: 7, scope: !8765)
!8790 = !DILocation(line: 255, column: 2, scope: !8765)
!8791 = !DILocation(line: 260, column: 1, scope: !8765)
!8792 = distinct !DISubprogram(name: "enabled_clock", scope: !906, file: !906, line: 100, type: !8793, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8795)
!8793 = !DISubroutineType(types: !8794)
!8794 = !{!103, !121}
!8795 = !{!8796, !8797}
!8796 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8792, file: !906, line: 100, type: !121)
!8797 = !DILocalVariable(name: "r", scope: !8792, file: !906, line: 102, type: !103)
!8798 = !DILocation(line: 0, scope: !8792)
!8799 = !DILocation(line: 104, column: 2, scope: !8792)
!8800 = !DILocation(line: 180, column: 2, scope: !8792)
!8801 = !DILocation(line: 181, column: 1, scope: !8792)
!8802 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !906, file: !906, line: 641, type: !933, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8803)
!8803 = !{!8804, !8805, !8806}
!8804 = !DILocalVariable(name: "dev", arg: 1, scope: !8802, file: !906, line: 641, type: !935)
!8805 = !DILocalVariable(name: "old_flash_freq", scope: !8802, file: !906, line: 664, type: !121)
!8806 = !DILocalVariable(name: "new_flash_freq", scope: !8802, file: !906, line: 665, type: !121)
!8807 = !DILocation(line: 0, scope: !8802)
!8808 = !DILocation(line: 646, column: 2, scope: !8802)
!8809 = !DILocation(line: 667, column: 19, scope: !8802)
!8810 = !DILocation(line: 674, column: 21, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8802, file: !906, line: 674, column: 6)
!8812 = !DILocation(line: 674, column: 6, scope: !8802)
!8813 = !DILocation(line: 675, column: 3, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8811, file: !906, line: 674, column: 59)
!8815 = !DILocation(line: 676, column: 2, scope: !8814)
!8816 = !DILocation(line: 680, column: 2, scope: !8802)
!8817 = !DILocation(line: 683, column: 2, scope: !8802)
!8818 = !DILocation(line: 690, column: 3, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !906, line: 689, column: 9)
!8820 = distinct !DILexicalBlock(scope: !8802, file: !906, line: 685, column: 6)
!8821 = !DILocation(line: 695, column: 2, scope: !8802)
!8822 = !DILocation(line: 696, column: 2, scope: !8802)
!8823 = !DILocation(line: 696, column: 9, scope: !8802)
!8824 = !DILocation(line: 696, column: 34, scope: !8802)
!8825 = distinct !{!8825, !8822, !8826}
!8826 = !DILocation(line: 697, column: 2, scope: !8802)
!8827 = !DILocation(line: 720, column: 21, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8802, file: !906, line: 720, column: 6)
!8829 = !DILocation(line: 720, column: 6, scope: !8802)
!8830 = !DILocation(line: 721, column: 3, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8828, file: !906, line: 720, column: 60)
!8832 = !DILocation(line: 722, column: 2, scope: !8831)
!8833 = !DILocation(line: 725, column: 18, scope: !8802)
!8834 = !DILocation(line: 728, column: 2, scope: !8802)
!8835 = !DILocation(line: 730, column: 2, scope: !8802)
!8836 = !DILocation(line: 745, column: 2, scope: !8802)
!8837 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8838, file: !8838, line: 995, type: !7548, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8838 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8839 = !DILocation(line: 997, column: 21, scope: !8837)
!8840 = !DILocation(line: 997, column: 3, scope: !8837)
!8841 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !906, file: !906, line: 507, type: !3217, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8842 = !DILocation(line: 534, column: 7, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !906, line: 534, column: 7)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !906, line: 532, column: 37)
!8845 = distinct !DILexicalBlock(scope: !8841, file: !906, line: 532, column: 6)
!8846 = !DILocation(line: 534, column: 28, scope: !8843)
!8847 = !DILocation(line: 534, column: 7, scope: !8844)
!8848 = !DILocation(line: 536, column: 4, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8843, file: !906, line: 534, column: 34)
!8850 = !DILocation(line: 537, column: 4, scope: !8849)
!8851 = !DILocation(line: 537, column: 11, scope: !8849)
!8852 = !DILocation(line: 537, column: 32, scope: !8849)
!8853 = distinct !{!8853, !8850, !8854}
!8854 = !DILocation(line: 539, column: 4, scope: !8849)
!8855 = !DILocation(line: 583, column: 3, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !906, line: 577, column: 37)
!8857 = distinct !DILexicalBlock(scope: !8841, file: !906, line: 577, column: 6)
!8858 = !DILocation(line: 584, column: 3, scope: !8856)
!8859 = !DILocation(line: 584, column: 10, scope: !8856)
!8860 = !DILocation(line: 584, column: 31, scope: !8856)
!8861 = distinct !{!8861, !8858, !8862}
!8862 = !DILocation(line: 585, column: 3, scope: !8856)
!8863 = !DILocation(line: 627, column: 1, scope: !8841)
!8864 = distinct !DISubprogram(name: "set_up_plls", scope: !906, file: !906, line: 448, type: !3217, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8865 = !DILocation(line: 460, column: 6, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8864, file: !906, line: 460, column: 6)
!8867 = !DILocation(line: 460, column: 31, scope: !8866)
!8868 = !DILocation(line: 460, column: 6, scope: !8864)
!8869 = !DILocation(line: 461, column: 3, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8866, file: !906, line: 460, column: 67)
!8871 = !DILocation(line: 462, column: 3, scope: !8870)
!8872 = !DILocation(line: 463, column: 2, scope: !8870)
!8873 = !DILocation(line: 464, column: 2, scope: !8864)
!8874 = !DILocation(line: 496, column: 2, scope: !8864)
!8875 = !DILocation(line: 499, column: 2, scope: !8864)
!8876 = !DILocation(line: 500, column: 2, scope: !8864)
!8877 = !DILocation(line: 500, column: 9, scope: !8864)
!8878 = !DILocation(line: 500, column: 30, scope: !8864)
!8879 = distinct !{!8879, !8876, !8880}
!8880 = !DILocation(line: 502, column: 2, scope: !8864)
!8881 = !DILocation(line: 505, column: 1, scope: !8864)
!8882 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8838, file: !8838, line: 944, type: !5785, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8883)
!8883 = !{!8884}
!8884 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8882, file: !8838, line: 944, type: !121)
!8885 = !DILocation(line: 0, scope: !8882)
!8886 = !DILocation(line: 946, column: 3, scope: !8882)
!8887 = !DILocation(line: 947, column: 1, scope: !8882)
!8888 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8838, file: !8838, line: 910, type: !5785, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8889)
!8889 = !{!8890}
!8890 = !DILocalVariable(name: "Source", arg: 1, scope: !8888, file: !8838, line: 910, type: !121)
!8891 = !DILocation(line: 0, scope: !8888)
!8892 = !DILocation(line: 912, column: 3, scope: !8888)
!8893 = !DILocation(line: 913, column: 1, scope: !8888)
!8894 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8838, file: !8838, line: 924, type: !7548, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8895 = !DILocation(line: 926, column: 21, scope: !8894)
!8896 = !DILocation(line: 926, column: 3, scope: !8894)
!8897 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8838, file: !8838, line: 960, type: !5785, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8898)
!8898 = !{!8899}
!8899 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8897, file: !8838, line: 960, type: !121)
!8900 = !DILocation(line: 0, scope: !8897)
!8901 = !DILocation(line: 962, column: 3, scope: !8897)
!8902 = !DILocation(line: 963, column: 1, scope: !8897)
!8903 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8838, file: !8838, line: 976, type: !5785, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !8904)
!8904 = !{!8905}
!8905 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8903, file: !8838, line: 976, type: !121)
!8906 = !DILocation(line: 0, scope: !8903)
!8907 = !DILocation(line: 978, column: 3, scope: !8903)
!8908 = !DILocation(line: 979, column: 1, scope: !8903)
!8909 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !906, file: !906, line: 409, type: !3217, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8910 = !DILocation(line: 412, column: 6, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8909, file: !906, line: 412, column: 6)
!8912 = !DILocation(line: 412, column: 27, scope: !8911)
!8913 = !DILocation(line: 412, column: 6, scope: !8909)
!8914 = !DILocation(line: 414, column: 3, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !906, line: 412, column: 33)
!8916 = !DILocation(line: 415, column: 3, scope: !8915)
!8917 = !DILocation(line: 415, column: 10, scope: !8915)
!8918 = !DILocation(line: 415, column: 31, scope: !8915)
!8919 = distinct !{!8919, !8916, !8920}
!8920 = !DILocation(line: 417, column: 3, scope: !8915)
!8921 = !DILocation(line: 421, column: 2, scope: !8909)
!8922 = !DILocation(line: 422, column: 2, scope: !8909)
!8923 = !DILocation(line: 422, column: 9, scope: !8909)
!8924 = !DILocation(line: 422, column: 34, scope: !8909)
!8925 = distinct !{!8925, !8922, !8926}
!8926 = !DILocation(line: 423, column: 2, scope: !8909)
!8927 = !DILocation(line: 424, column: 1, scope: !8909)
!8928 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8838, file: !8838, line: 1180, type: !3217, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8929 = !DILocation(line: 1182, column: 3, scope: !8928)
!8930 = !DILocation(line: 1183, column: 1, scope: !8928)
!8931 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8838, file: !8838, line: 1169, type: !3217, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8932 = !DILocation(line: 1171, column: 3, scope: !8931)
!8933 = !DILocation(line: 1172, column: 1, scope: !8931)
!8934 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8838, file: !8838, line: 1190, type: !7548, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8935 = !DILocation(line: 1192, column: 12, scope: !8934)
!8936 = !DILocation(line: 1192, column: 11, scope: !8934)
!8937 = !DILocation(line: 1192, column: 3, scope: !8934)
!8938 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8838, file: !8838, line: 612, type: !7548, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8939 = !DILocation(line: 614, column: 12, scope: !8938)
!8940 = !DILocation(line: 614, column: 11, scope: !8938)
!8941 = !DILocation(line: 614, column: 3, scope: !8938)
!8942 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8838, file: !8838, line: 592, type: !3217, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8943 = !DILocation(line: 594, column: 3, scope: !8942)
!8944 = !DILocation(line: 595, column: 1, scope: !8942)
!8945 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8838, file: !8838, line: 760, type: !3217, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8946 = !DILocation(line: 762, column: 3, scope: !8945)
!8947 = !DILocation(line: 763, column: 1, scope: !8945)
!8948 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8838, file: !8838, line: 780, type: !7548, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !862, retainedNodes: !474)
!8949 = !DILocation(line: 782, column: 12, scope: !8948)
!8950 = !DILocation(line: 782, column: 11, scope: !8948)
!8951 = !DILocation(line: 782, column: 3, scope: !8948)
!8952 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8953, file: !8953, line: 48, type: !7548, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !474)
!8953 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8954 = !DILocation(line: 51, column: 3, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !8953, line: 50, column: 37)
!8956 = distinct !DILexicalBlock(scope: !8952, file: !8953, line: 50, column: 6)
!8957 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8953, file: !8953, line: 64, type: !3217, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !474)
!8958 = !DILocation(line: 66, column: 2, scope: !8957)
!8959 = !DILocation(line: 69, column: 1, scope: !8957)
!8960 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8838, file: !8838, line: 1219, type: !8961, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8963)
!8961 = !DISubroutineType(types: !8962)
!8962 = !{null, !121, !121, !121}
!8963 = !{!8964, !8965, !8966}
!8964 = !DILocalVariable(name: "Source", arg: 1, scope: !8960, file: !8838, line: 1219, type: !121)
!8965 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8960, file: !8838, line: 1219, type: !121)
!8966 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8960, file: !8838, line: 1219, type: !121)
!8967 = !DILocation(line: 0, scope: !8960)
!8968 = !DILocation(line: 1221, column: 3, scope: !8960)
!8969 = !DILocation(line: 1222, column: 1, scope: !8960)
!8970 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8953, file: !8953, line: 75, type: !7548, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !474)
!8971 = !DILocation(line: 77, column: 9, scope: !8970)
!8972 = !DILocation(line: 77, column: 2, scope: !8970)
!8973 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8953, file: !8953, line: 87, type: !3217, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !474)
!8974 = !DILocation(line: 93, column: 2, scope: !8973)
!8975 = !DILocation(line: 95, column: 1, scope: !8973)
!8976 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5784, file: !5784, line: 895, type: !5785, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !8977)
!8977 = !{!8978, !8979}
!8978 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8976, file: !5784, line: 895, type: !121)
!8979 = !DILocalVariable(name: "tmpreg", scope: !8976, file: !5784, line: 897, type: !120)
!8980 = !DILocation(line: 0, scope: !8976)
!8981 = !DILocation(line: 897, column: 3, scope: !8976)
!8982 = !DILocation(line: 897, column: 17, scope: !8976)
!8983 = !DILocation(line: 898, column: 3, scope: !8976)
!8984 = !DILocation(line: 900, column: 12, scope: !8976)
!8985 = !DILocation(line: 900, column: 10, scope: !8976)
!8986 = !DILocation(line: 901, column: 9, scope: !8976)
!8987 = !DILocation(line: 902, column: 1, scope: !8976)
!8988 = distinct !DISubprogram(name: "uart_console_init", scope: !984, file: !984, line: 588, type: !1021, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !8989)
!8989 = !{!8990}
!8990 = !DILocalVariable(name: "arg", arg: 1, scope: !8988, file: !984, line: 588, type: !1000)
!8991 = !DILocation(line: 0, scope: !8988)
!8992 = !DILocation(line: 593, column: 7, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8988, file: !984, line: 593, column: 6)
!8994 = !DILocation(line: 593, column: 6, scope: !8988)
!8995 = !DILocation(line: 597, column: 2, scope: !8988)
!8996 = !DILocation(line: 599, column: 2, scope: !8988)
!8997 = !DILocation(line: 600, column: 1, scope: !8988)
!8998 = distinct !DISubprogram(name: "device_is_ready", scope: !6639, file: !6639, line: 47, type: !8999, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9001)
!8999 = !DISubroutineType(types: !9000)
!9000 = !{!170, !1000}
!9001 = !{!9002}
!9002 = !DILocalVariable(name: "dev", arg: 1, scope: !8998, file: !6639, line: 47, type: !1000)
!9003 = !DILocation(line: 0, scope: !8998)
!9004 = !DILocation(line: 55, column: 2, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8998, file: !6639, line: 55, column: 2)
!9006 = !{i64 2152409173}
!9007 = !DILocation(line: 56, column: 9, scope: !8998)
!9008 = !DILocation(line: 56, column: 2, scope: !8998)
!9009 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !984, file: !984, line: 573, type: !3217, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !474)
!9010 = !DILocation(line: 576, column: 2, scope: !9009)
!9011 = !DILocation(line: 579, column: 2, scope: !9009)
!9012 = !DILocation(line: 581, column: 1, scope: !9009)
!9013 = distinct !DISubprogram(name: "console_out", scope: !984, file: !984, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9014)
!9014 = !{!9015, !9016}
!9015 = !DILocalVariable(name: "c", arg: 1, scope: !9013, file: !984, line: 77, type: !103)
!9016 = !DILocalVariable(name: "handled_by_debug_server", scope: !9013, file: !984, line: 81, type: !103)
!9017 = !DILocation(line: 0, scope: !9013)
!9018 = !DILocation(line: 81, column: 32, scope: !9013)
!9019 = !DILocation(line: 83, column: 6, scope: !9013)
!9020 = !DILocation(line: 89, column: 11, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9013, file: !984, line: 89, column: 6)
!9022 = !DILocation(line: 89, column: 6, scope: !9013)
!9023 = !DILocation(line: 90, column: 3, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9021, file: !984, line: 89, column: 17)
!9025 = !DILocation(line: 91, column: 2, scope: !9024)
!9026 = !DILocation(line: 92, column: 2, scope: !9013)
!9027 = !DILocation(line: 94, column: 2, scope: !9013)
!9028 = !DILocation(line: 95, column: 1, scope: !9013)
!9029 = distinct !DISubprogram(name: "uart_poll_out", scope: !5900, file: !5900, line: 95, type: !1017, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9030)
!9030 = !{!9031, !9032}
!9031 = !DILocalVariable(name: "dev", arg: 1, scope: !9029, file: !5900, line: 95, type: !1000)
!9032 = !DILocalVariable(name: "out_char", arg: 2, scope: !9029, file: !5900, line: 95, type: !168)
!9033 = !DILocation(line: 0, scope: !9029)
!9034 = !DILocation(line: 105, column: 2, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9029, file: !5900, line: 105, column: 2)
!9036 = !{i64 2152492418}
!9037 = !DILocation(line: 106, column: 2, scope: !9029)
!9038 = !DILocation(line: 107, column: 1, scope: !9029)
!9039 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !216, file: !216, line: 574, type: !1017, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9040)
!9040 = !{!9041, !9042, !9043}
!9041 = !DILocalVariable(name: "dev", arg: 1, scope: !9039, file: !216, line: 574, type: !1000)
!9042 = !DILocalVariable(name: "out_char", arg: 2, scope: !9039, file: !216, line: 575, type: !168)
!9043 = !DILocalVariable(name: "api", scope: !9039, file: !216, line: 577, type: !992)
!9044 = !DILocation(line: 0, scope: !9039)
!9045 = !DILocation(line: 578, column: 40, scope: !9039)
!9046 = !DILocation(line: 580, column: 7, scope: !9039)
!9047 = !DILocation(line: 580, column: 2, scope: !9039)
!9048 = !DILocation(line: 581, column: 1, scope: !9039)
!9049 = distinct !DISubprogram(name: "debug_hook_out_nop", scope: !984, file: !984, line: 49, type: !1134, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9050)
!9050 = !{!9051}
!9051 = !DILocalVariable(name: "c", arg: 1, scope: !9049, file: !984, line: 49, type: !159)
!9052 = !DILocation(line: 0, scope: !9049)
!9053 = !DILocation(line: 51, column: 2, scope: !9049)
!9054 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !8999, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9055)
!9055 = !{!9056}
!9056 = !DILocalVariable(name: "dev", arg: 1, scope: !9054, file: !154, line: 730, type: !1000)
!9057 = !DILocation(line: 0, scope: !9054)
!9058 = !DILocation(line: 732, column: 9, scope: !9054)
!9059 = !DILocation(line: 732, column: 2, scope: !9054)
!9060 = distinct !DISubprogram(name: "uart_console_in_debug_hook_install", scope: !984, file: !984, line: 44, type: !9061, scopeLine: 45, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9063)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{null, !1176}
!9063 = !{!9064}
!9064 = !DILocalVariable(name: "hook", arg: 1, scope: !9060, file: !984, line: 44, type: !1176)
!9065 = !DILocation(line: 0, scope: !9060)
!9066 = !DILocation(line: 46, column: 16, scope: !9060)
!9067 = !DILocation(line: 47, column: 1, scope: !9060)
!9068 = distinct !DISubprogram(name: "uart_console_out_debug_hook_install", scope: !984, file: !984, line: 55, type: !9069, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9071)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{null, !1131}
!9071 = !{!9072}
!9072 = !DILocalVariable(name: "hook", arg: 1, scope: !9068, file: !984, line: 55, type: !1131)
!9073 = !DILocation(line: 0, scope: !9068)
!9074 = !DILocation(line: 57, column: 17, scope: !9068)
!9075 = !DILocation(line: 58, column: 1, scope: !9068)
!9076 = distinct !DISubprogram(name: "uart_register_input", scope: !984, file: !984, line: 549, type: !9077, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9079)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{null, !1081, !1081, !1125}
!9079 = !{!9080, !9081, !9082}
!9080 = !DILocalVariable(name: "avail", arg: 1, scope: !9076, file: !984, line: 549, type: !1081)
!9081 = !DILocalVariable(name: "lines", arg: 2, scope: !9076, file: !984, line: 549, type: !1081)
!9082 = !DILocalVariable(name: "completion", arg: 3, scope: !9076, file: !984, line: 550, type: !1125)
!9083 = !DILocation(line: 0, scope: !9076)
!9084 = !DILocation(line: 552, column: 14, scope: !9076)
!9085 = !DILocation(line: 553, column: 14, scope: !9076)
!9086 = !DILocation(line: 554, column: 16, scope: !9076)
!9087 = !DILocation(line: 556, column: 2, scope: !9076)
!9088 = !DILocation(line: 557, column: 1, scope: !9076)
!9089 = distinct !DISubprogram(name: "console_input_init", scope: !984, file: !984, line: 532, type: !3217, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9090)
!9090 = !{!9091}
!9091 = !DILocalVariable(name: "c", scope: !9089, file: !984, line: 534, type: !167)
!9092 = !DILocation(line: 534, column: 2, scope: !9089)
!9093 = !DILocation(line: 536, column: 2, scope: !9089)
!9094 = !DILocation(line: 537, column: 2, scope: !9089)
!9095 = !DILocation(line: 539, column: 2, scope: !9089)
!9096 = !DILocation(line: 542, column: 9, scope: !9089)
!9097 = !DILocation(line: 542, column: 2, scope: !9089)
!9098 = !DILocation(line: 0, scope: !9089)
!9099 = !DILocation(line: 543, column: 3, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9089, file: !984, line: 542, column: 46)
!9101 = distinct !{!9101, !9097, !9102}
!9102 = !DILocation(line: 544, column: 2, scope: !9089)
!9103 = !DILocation(line: 546, column: 2, scope: !9089)
!9104 = !DILocation(line: 547, column: 1, scope: !9089)
!9105 = distinct !DISubprogram(name: "uart_irq_rx_disable", scope: !5900, file: !5900, line: 265, type: !1051, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9106)
!9106 = !{!9107}
!9107 = !DILocalVariable(name: "dev", arg: 1, scope: !9105, file: !5900, line: 265, type: !1000)
!9108 = !DILocation(line: 0, scope: !9105)
!9109 = !DILocation(line: 274, column: 2, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9105, file: !5900, line: 274, column: 2)
!9111 = !{i64 2152492894}
!9112 = !DILocation(line: 275, column: 2, scope: !9105)
!9113 = !DILocation(line: 276, column: 1, scope: !9105)
!9114 = distinct !DISubprogram(name: "uart_irq_tx_disable", scope: !5900, file: !5900, line: 217, type: !1051, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9115)
!9115 = !{!9116}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9114, file: !5900, line: 217, type: !1000)
!9117 = !DILocation(line: 0, scope: !9114)
!9118 = !DILocation(line: 226, column: 2, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9114, file: !5900, line: 226, column: 2)
!9120 = !{i64 2152492758}
!9121 = !DILocation(line: 227, column: 2, scope: !9114)
!9122 = !DILocation(line: 228, column: 1, scope: !9114)
!9123 = distinct !DISubprogram(name: "uart_irq_callback_set", scope: !216, file: !216, line: 1190, type: !9124, scopeLine: 1192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9126)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{null, !1000, !1067}
!9126 = !{!9127, !9128}
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9123, file: !216, line: 1190, type: !1000)
!9128 = !DILocalVariable(name: "cb", arg: 2, scope: !9123, file: !216, line: 1191, type: !1067)
!9129 = !DILocation(line: 0, scope: !9123)
!9130 = !DILocation(line: 1193, column: 2, scope: !9123)
!9131 = !DILocation(line: 1194, column: 1, scope: !9123)
!9132 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !216, file: !216, line: 1024, type: !1021, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9133)
!9133 = !{!9134, !9135}
!9134 = !DILocalVariable(name: "dev", arg: 1, scope: !9132, file: !216, line: 1024, type: !1000)
!9135 = !DILocalVariable(name: "api", scope: !9132, file: !216, line: 1027, type: !992)
!9136 = !DILocation(line: 0, scope: !9132)
!9137 = !DILocation(line: 1028, column: 40, scope: !9132)
!9138 = !DILocation(line: 1030, column: 11, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9132, file: !216, line: 1030, column: 6)
!9140 = !DILocation(line: 1030, column: 24, scope: !9139)
!9141 = !DILocation(line: 1030, column: 6, scope: !9132)
!9142 = !DILocation(line: 1033, column: 9, scope: !9132)
!9143 = !DILocation(line: 1033, column: 2, scope: !9132)
!9144 = !DILocation(line: 1038, column: 1, scope: !9132)
!9145 = distinct !DISubprogram(name: "uart_fifo_read", scope: !216, file: !216, line: 785, type: !1047, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9146)
!9146 = !{!9147, !9148, !9149, !9150}
!9147 = !DILocalVariable(name: "dev", arg: 1, scope: !9145, file: !216, line: 785, type: !1000)
!9148 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9145, file: !216, line: 785, type: !274)
!9149 = !DILocalVariable(name: "size", arg: 3, scope: !9145, file: !216, line: 786, type: !275)
!9150 = !DILocalVariable(name: "api", scope: !9145, file: !216, line: 789, type: !992)
!9151 = !DILocation(line: 0, scope: !9145)
!9152 = !DILocation(line: 790, column: 40, scope: !9145)
!9153 = !DILocation(line: 792, column: 11, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9145, file: !216, line: 792, column: 6)
!9155 = !DILocation(line: 792, column: 21, scope: !9154)
!9156 = !DILocation(line: 792, column: 6, scope: !9145)
!9157 = !DILocation(line: 796, column: 9, scope: !9145)
!9158 = !DILocation(line: 796, column: 2, scope: !9145)
!9159 = !DILocation(line: 803, column: 1, scope: !9145)
!9160 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !5900, file: !5900, line: 241, type: !1051, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9161)
!9161 = !{!9162}
!9162 = !DILocalVariable(name: "dev", arg: 1, scope: !9160, file: !5900, line: 241, type: !1000)
!9163 = !DILocation(line: 0, scope: !9160)
!9164 = !DILocation(line: 250, column: 2, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9160, file: !5900, line: 250, column: 2)
!9166 = !{i64 2152492826}
!9167 = !DILocation(line: 251, column: 2, scope: !9160)
!9168 = !DILocation(line: 252, column: 1, scope: !9160)
!9169 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !216, file: !216, line: 934, type: !1051, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9170)
!9170 = !{!9171, !9172}
!9171 = !DILocalVariable(name: "dev", arg: 1, scope: !9169, file: !216, line: 934, type: !1000)
!9172 = !DILocalVariable(name: "api", scope: !9169, file: !216, line: 937, type: !992)
!9173 = !DILocation(line: 0, scope: !9169)
!9174 = !DILocation(line: 938, column: 40, scope: !9169)
!9175 = !DILocation(line: 940, column: 11, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9169, file: !216, line: 940, column: 6)
!9177 = !DILocation(line: 940, column: 25, scope: !9176)
!9178 = !DILocation(line: 940, column: 6, scope: !9169)
!9179 = !DILocation(line: 941, column: 3, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9176, file: !216, line: 940, column: 34)
!9181 = !DILocation(line: 942, column: 2, scope: !9180)
!9182 = !DILocation(line: 946, column: 1, scope: !9169)
!9183 = !DILocation(line: 0, scope: !1141)
!9184 = !DILocation(line: 433, column: 9, scope: !1141)
!9185 = !DILocation(line: 433, column: 43, scope: !1141)
!9186 = !DILocation(line: 434, column: 9, scope: !1141)
!9187 = !DILocation(line: 433, column: 2, scope: !1141)
!9188 = !DILocation(line: 436, column: 3, scope: !1146)
!9189 = !DILocation(line: 439, column: 8, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 439, column: 7)
!9191 = !DILocation(line: 439, column: 7, scope: !1146)
!9192 = distinct !{!9192, !9187, !9193}
!9193 = !DILocation(line: 529, column: 2, scope: !1141)
!9194 = !DILocation(line: 0, scope: !1146)
!9195 = !DILocation(line: 445, column: 8, scope: !1146)
!9196 = !DILocation(line: 446, column: 10, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 446, column: 7)
!9198 = !DILocation(line: 446, column: 7, scope: !1146)
!9199 = !DILocation(line: 451, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 451, column: 7)
!9201 = !DILocation(line: 451, column: 21, scope: !9200)
!9202 = !DILocation(line: 451, column: 29, scope: !9200)
!9203 = !DILocation(line: 451, column: 46, scope: !9200)
!9204 = !DILocation(line: 451, column: 32, scope: !9200)
!9205 = !DILocation(line: 451, column: 52, scope: !9200)
!9206 = !DILocation(line: 451, column: 7, scope: !1146)
!9207 = !DILocation(line: 460, column: 8, scope: !1151)
!9208 = !DILocation(line: 460, column: 7, scope: !1146)
!9209 = !DILocation(line: 461, column: 10, scope: !1149)
!9210 = !DILocation(line: 0, scope: !1149)
!9211 = !DILocation(line: 461, column: 8, scope: !1150)
!9212 = !DILocation(line: 462, column: 9, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !1150, file: !984, line: 462, column: 8)
!9214 = !DILocation(line: 462, column: 8, scope: !1150)
!9215 = !DILocation(line: 477, column: 7, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 477, column: 7)
!9217 = !DILocation(line: 477, column: 7, scope: !1146)
!9218 = !DILocation(line: 478, column: 16, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9216, file: !984, line: 477, column: 46)
!9220 = !DILocation(line: 478, column: 22, scope: !9219)
!9221 = !DILocation(line: 478, column: 4, scope: !9219)
!9222 = !DILocation(line: 479, column: 4, scope: !9219)
!9223 = !DILocation(line: 483, column: 7, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 483, column: 7)
!9225 = !DILocation(line: 483, column: 7, scope: !1146)
!9226 = !DILocation(line: 484, column: 13, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9228, file: !984, line: 484, column: 8)
!9228 = distinct !DILexicalBlock(scope: !9224, file: !984, line: 483, column: 55)
!9229 = !DILocation(line: 484, column: 8, scope: !9228)
!9230 = !DILocation(line: 485, column: 5, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9227, file: !984, line: 484, column: 26)
!9232 = !DILocation(line: 486, column: 5, scope: !9231)
!9233 = !DILocation(line: 487, column: 4, scope: !9231)
!9234 = !DILocation(line: 493, column: 16, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 493, column: 7)
!9236 = !DILocation(line: 493, column: 8, scope: !9235)
!9237 = !DILocation(line: 493, column: 7, scope: !1146)
!9238 = !DILocation(line: 494, column: 4, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9235, file: !984, line: 493, column: 23)
!9240 = !DILocation(line: 497, column: 9, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !984, line: 497, column: 9)
!9242 = distinct !DILexicalBlock(scope: !9239, file: !984, line: 494, column: 18)
!9243 = !DILocation(line: 497, column: 13, scope: !9241)
!9244 = !DILocation(line: 497, column: 9, scope: !9242)
!9245 = !DILocation(line: 498, column: 16, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9241, file: !984, line: 497, column: 18)
!9247 = !DILocation(line: 498, column: 26, scope: !9246)
!9248 = !DILocation(line: 498, column: 34, scope: !9246)
!9249 = !DILocation(line: 498, column: 6, scope: !9246)
!9250 = !DILocation(line: 499, column: 5, scope: !9246)
!9251 = !DILocation(line: 502, column: 5, scope: !9242)
!9252 = !DILocation(line: 503, column: 5, scope: !9242)
!9253 = !DILocation(line: 505, column: 5, scope: !9242)
!9254 = !DILocation(line: 505, column: 15, scope: !9242)
!9255 = !DILocation(line: 505, column: 21, scope: !9242)
!9256 = !DILocation(line: 505, column: 19, scope: !9242)
!9257 = !DILocation(line: 505, column: 26, scope: !9242)
!9258 = !DILocation(line: 506, column: 5, scope: !9242)
!9259 = !DILocation(line: 507, column: 5, scope: !9242)
!9260 = !DILocation(line: 508, column: 9, scope: !9242)
!9261 = !DILocation(line: 509, column: 9, scope: !9242)
!9262 = !DILocation(line: 510, column: 5, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9242, file: !984, line: 510, column: 5)
!9264 = !DILocation(line: 511, column: 9, scope: !9242)
!9265 = !DILocation(line: 512, column: 5, scope: !9242)
!9266 = !DILocation(line: 514, column: 9, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9242, file: !984, line: 514, column: 9)
!9268 = !DILocation(line: 514, column: 23, scope: !9267)
!9269 = !DILocation(line: 515, column: 27, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9267, file: !984, line: 514, column: 32)
!9271 = !DILocation(line: 515, column: 38, scope: !9270)
!9272 = !DILocation(line: 515, column: 13, scope: !9270)
!9273 = !DILocation(line: 515, column: 10, scope: !9270)
!9274 = !DILocation(line: 516, column: 5, scope: !9270)
!9275 = !DILocation(line: 526, column: 7, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !1146, file: !984, line: 526, column: 7)
!9277 = !DILocation(line: 526, column: 13, scope: !9276)
!9278 = !DILocation(line: 526, column: 11, scope: !9276)
!9279 = !DILocation(line: 526, column: 17, scope: !9276)
!9280 = !DILocation(line: 526, column: 7, scope: !1146)
!9281 = !DILocation(line: 527, column: 17, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9276, file: !984, line: 526, column: 42)
!9283 = !DILocation(line: 527, column: 30, scope: !9282)
!9284 = !DILocation(line: 527, column: 4, scope: !9282)
!9285 = !DILocation(line: 528, column: 3, scope: !9282)
!9286 = !DILocation(line: 530, column: 1, scope: !1141)
!9287 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !216, file: !216, line: 1163, type: !1065, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9288)
!9288 = !{!9289, !9290, !9291, !9292}
!9289 = !DILocalVariable(name: "dev", arg: 1, scope: !9287, file: !216, line: 1163, type: !1000)
!9290 = !DILocalVariable(name: "cb", arg: 2, scope: !9287, file: !216, line: 1164, type: !1067)
!9291 = !DILocalVariable(name: "user_data", arg: 3, scope: !9287, file: !216, line: 1165, type: !102)
!9292 = !DILocalVariable(name: "api", scope: !9287, file: !216, line: 1168, type: !992)
!9293 = !DILocation(line: 0, scope: !9287)
!9294 = !DILocation(line: 1169, column: 40, scope: !9287)
!9295 = !DILocation(line: 1171, column: 11, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9287, file: !216, line: 1171, column: 6)
!9297 = !DILocation(line: 1171, column: 20, scope: !9296)
!9298 = !DILocation(line: 1171, column: 29, scope: !9296)
!9299 = !DILocation(line: 1171, column: 46, scope: !9296)
!9300 = !DILocation(line: 1171, column: 6, scope: !9287)
!9301 = !DILocation(line: 1172, column: 3, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9296, file: !216, line: 1171, column: 56)
!9303 = !DILocation(line: 1173, column: 2, scope: !9302)
!9304 = !DILocation(line: 1179, column: 1, scope: !9287)
!9305 = distinct !DISubprogram(name: "uart_irq_update", scope: !5900, file: !5900, line: 360, type: !1021, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9306)
!9306 = !{!9307}
!9307 = !DILocalVariable(name: "dev", arg: 1, scope: !9305, file: !5900, line: 360, type: !1000)
!9308 = !DILocation(line: 0, scope: !9305)
!9309 = !DILocation(line: 368, column: 2, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9305, file: !5900, line: 368, column: 2)
!9311 = !{i64 2152493166}
!9312 = !DILocation(line: 369, column: 9, scope: !9305)
!9313 = !DILocation(line: 369, column: 2, scope: !9305)
!9314 = distinct !DISubprogram(name: "uart_irq_is_pending", scope: !5900, file: !5900, line: 337, type: !1021, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9315)
!9315 = !{!9316}
!9316 = !DILocalVariable(name: "dev", arg: 1, scope: !9314, file: !5900, line: 337, type: !1000)
!9317 = !DILocation(line: 0, scope: !9314)
!9318 = !DILocation(line: 345, column: 2, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9314, file: !5900, line: 345, column: 2)
!9320 = !{i64 2152493098}
!9321 = !DILocation(line: 346, column: 9, scope: !9314)
!9322 = !DILocation(line: 346, column: 2, scope: !9314)
!9323 = distinct !DISubprogram(name: "read_uart", scope: !984, file: !984, line: 127, type: !9324, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9326)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!103, !1000, !274, !32}
!9326 = !{!9327, !9328, !9329, !9330}
!9327 = !DILocalVariable(name: "uart", arg: 1, scope: !9323, file: !984, line: 127, type: !1000)
!9328 = !DILocalVariable(name: "buf", arg: 2, scope: !9323, file: !984, line: 127, type: !274)
!9329 = !DILocalVariable(name: "size", arg: 3, scope: !9323, file: !984, line: 128, type: !32)
!9330 = !DILocalVariable(name: "rx", scope: !9323, file: !984, line: 130, type: !103)
!9331 = !DILocation(line: 0, scope: !9323)
!9332 = !DILocation(line: 132, column: 7, scope: !9323)
!9333 = !DILocation(line: 133, column: 9, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9323, file: !984, line: 133, column: 6)
!9335 = !DILocation(line: 133, column: 6, scope: !9323)
!9336 = !DILocation(line: 135, column: 3, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9334, file: !984, line: 133, column: 14)
!9338 = !DILocation(line: 137, column: 3, scope: !9337)
!9339 = !DILocation(line: 141, column: 1, scope: !9323)
!9340 = distinct !DISubprogram(name: "k_queue_get", scope: !3650, file: !3650, line: 649, type: !9341, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9348)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!102, !9343, !9344}
!9343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!9344 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !9345)
!9345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !9346)
!9346 = !{!9347}
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9345, file: !1739, line: 66, baseType: !1738, size: 64)
!9348 = !{!9349, !9350}
!9349 = !DILocalVariable(name: "queue", arg: 1, scope: !9340, file: !3650, line: 649, type: !9343)
!9350 = !DILocalVariable(name: "timeout", arg: 2, scope: !9340, file: !3650, line: 649, type: !9344)
!9351 = !DILocation(line: 0, scope: !9340)
!9352 = !DILocation(line: 658, column: 2, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9340, file: !3650, line: 658, column: 2)
!9354 = !{i64 2152225901}
!9355 = !DILocation(line: 659, column: 9, scope: !9340)
!9356 = !DILocation(line: 659, column: 2, scope: !9340)
!9357 = distinct !DISubprogram(name: "atomic_test_bit", scope: !1167, file: !1167, line: 131, type: !9358, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9362)
!9358 = !DISubroutineType(types: !9359)
!9359 = !{!170, !9360, !103}
!9360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9361, size: 32)
!9361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!9362 = !{!9363, !9364, !9365}
!9363 = !DILocalVariable(name: "target", arg: 1, scope: !9357, file: !1167, line: 131, type: !9360)
!9364 = !DILocalVariable(name: "bit", arg: 2, scope: !9357, file: !1167, line: 131, type: !103)
!9365 = !DILocalVariable(name: "val", scope: !9357, file: !1167, line: 133, type: !9366)
!9366 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !1167, line: 23, baseType: !1166)
!9367 = !DILocation(line: 0, scope: !9357)
!9368 = !DILocation(line: 133, column: 21, scope: !9357)
!9369 = !DILocation(line: 135, column: 27, scope: !9357)
!9370 = !DILocation(line: 135, column: 50, scope: !9357)
!9371 = !DILocation(line: 135, column: 2, scope: !9357)
!9372 = distinct !DISubprogram(name: "handle_ansi", scope: !984, file: !984, line: 232, type: !9373, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9375)
!9373 = !DISubroutineType(types: !9374)
!9374 = !{null, !167, !1128}
!9375 = !{!9376, !9377, !9378}
!9376 = !DILocalVariable(name: "byte", arg: 1, scope: !9372, file: !984, line: 232, type: !167)
!9377 = !DILocalVariable(name: "line", arg: 2, scope: !9372, file: !984, line: 232, type: !1128)
!9378 = !DILabel(scope: !9372, name: "ansi_cmd", file: !984, line: 268)
!9379 = !DILocation(line: 0, scope: !9372)
!9380 = !DILocation(line: 234, column: 6, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9372, file: !984, line: 234, column: 6)
!9382 = !DILocation(line: 234, column: 6, scope: !9372)
!9383 = !DILocation(line: 235, column: 16, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9385, file: !984, line: 235, column: 7)
!9385 = distinct !DILexicalBlock(scope: !9381, file: !984, line: 234, column: 61)
!9386 = !DILocation(line: 235, column: 8, scope: !9384)
!9387 = !DILocation(line: 235, column: 7, scope: !9385)
!9388 = !DILocation(line: 236, column: 13, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9384, file: !984, line: 235, column: 23)
!9390 = !DILocation(line: 237, column: 4, scope: !9389)
!9391 = !DILocation(line: 240, column: 3, scope: !9385)
!9392 = !DILocation(line: 241, column: 19, scope: !9385)
!9393 = !DILocation(line: 241, column: 12, scope: !9385)
!9394 = !DILocation(line: 242, column: 14, scope: !9385)
!9395 = !DILocation(line: 243, column: 3, scope: !9385)
!9396 = !DILocation(line: 246, column: 6, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9372, file: !984, line: 246, column: 6)
!9398 = !DILocation(line: 246, column: 6, scope: !9372)
!9399 = !DILocation(line: 247, column: 15, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !984, line: 247, column: 7)
!9401 = distinct !DILexicalBlock(scope: !9397, file: !984, line: 246, column: 49)
!9402 = !DILocation(line: 247, column: 7, scope: !9400)
!9403 = !DILocation(line: 247, column: 7, scope: !9401)
!9404 = !DILocation(line: 248, column: 8, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !984, line: 248, column: 8)
!9406 = distinct !DILexicalBlock(scope: !9400, file: !984, line: 247, column: 22)
!9407 = !DILocation(line: 248, column: 8, scope: !9406)
!9408 = !DILocation(line: 249, column: 16, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !984, line: 248, column: 53)
!9410 = !DILocation(line: 250, column: 24, scope: !9409)
!9411 = !DILocation(line: 250, column: 16, scope: !9409)
!9412 = !DILocation(line: 251, column: 4, scope: !9409)
!9413 = !DILocation(line: 252, column: 14, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9405, file: !984, line: 251, column: 11)
!9415 = !DILocation(line: 253, column: 22, scope: !9414)
!9416 = !DILocation(line: 253, column: 14, scope: !9414)
!9417 = !DILocation(line: 259, column: 12, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9401, file: !984, line: 259, column: 7)
!9419 = !DILocation(line: 259, column: 19, scope: !9418)
!9420 = !DILocation(line: 260, column: 8, scope: !9418)
!9421 = !DILocation(line: 259, column: 7, scope: !9401)
!9422 = !DILocation(line: 264, column: 3, scope: !9401)
!9423 = !DILocation(line: 265, column: 3, scope: !9401)
!9424 = !DILocation(line: 266, column: 2, scope: !9401)
!9425 = !DILocation(line: 268, column: 1, scope: !9372)
!9426 = !DILocation(line: 269, column: 2, scope: !9372)
!9427 = !DILocation(line: 271, column: 7, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9429, file: !984, line: 271, column: 7)
!9429 = distinct !DILexicalBlock(scope: !9372, file: !984, line: 269, column: 16)
!9430 = !DILocation(line: 271, column: 18, scope: !9428)
!9431 = !DILocation(line: 271, column: 16, scope: !9428)
!9432 = !DILocation(line: 271, column: 7, scope: !9429)
!9433 = !DILocation(line: 275, column: 7, scope: !9429)
!9434 = !DILocation(line: 276, column: 7, scope: !9429)
!9435 = !DILocation(line: 277, column: 3, scope: !9429)
!9436 = !DILocation(line: 278, column: 3, scope: !9429)
!9437 = !DILocation(line: 280, column: 7, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9429, file: !984, line: 280, column: 7)
!9439 = !DILocation(line: 280, column: 18, scope: !9438)
!9440 = !DILocation(line: 280, column: 16, scope: !9438)
!9441 = !DILocation(line: 280, column: 7, scope: !9429)
!9442 = !DILocation(line: 284, column: 7, scope: !9429)
!9443 = !DILocation(line: 285, column: 7, scope: !9429)
!9444 = !DILocation(line: 286, column: 3, scope: !9429)
!9445 = !DILocation(line: 287, column: 3, scope: !9429)
!9446 = !DILocation(line: 289, column: 8, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9429, file: !984, line: 289, column: 7)
!9448 = !DILocation(line: 289, column: 7, scope: !9429)
!9449 = !DILocation(line: 293, column: 19, scope: !9429)
!9450 = !DILocation(line: 293, column: 3, scope: !9429)
!9451 = !DILocation(line: 294, column: 10, scope: !9429)
!9452 = !DILocation(line: 294, column: 7, scope: !9429)
!9453 = !DILocation(line: 295, column: 7, scope: !9429)
!9454 = !DILocation(line: 296, column: 3, scope: !9429)
!9455 = !DILocation(line: 298, column: 8, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9429, file: !984, line: 298, column: 7)
!9457 = !DILocation(line: 298, column: 7, scope: !9429)
!9458 = !DILocation(line: 302, column: 18, scope: !9429)
!9459 = !DILocation(line: 302, column: 3, scope: !9429)
!9460 = !DILocation(line: 303, column: 10, scope: !9429)
!9461 = !DILocation(line: 303, column: 7, scope: !9429)
!9462 = !DILocation(line: 304, column: 7, scope: !9429)
!9463 = !DILocation(line: 305, column: 3, scope: !9429)
!9464 = !DILocation(line: 307, column: 8, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9429, file: !984, line: 307, column: 7)
!9466 = !DILocation(line: 307, column: 7, scope: !9429)
!9467 = !DILocation(line: 311, column: 3, scope: !9429)
!9468 = !DILocation(line: 312, column: 18, scope: !9429)
!9469 = !DILocation(line: 312, column: 13, scope: !9429)
!9470 = !DILocation(line: 312, column: 24, scope: !9429)
!9471 = !DILocation(line: 312, column: 3, scope: !9429)
!9472 = !DILocation(line: 313, column: 3, scope: !9429)
!9473 = !DILocation(line: 318, column: 2, scope: !9372)
!9474 = !DILocation(line: 319, column: 1, scope: !9372)
!9475 = distinct !DISubprogram(name: "atomic_test_and_clear_bit", scope: !1167, file: !1167, line: 152, type: !9476, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9479)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!170, !9478, !103}
!9478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!9479 = !{!9480, !9481, !9482, !9483}
!9480 = !DILocalVariable(name: "target", arg: 1, scope: !9475, file: !1167, line: 152, type: !9478)
!9481 = !DILocalVariable(name: "bit", arg: 2, scope: !9475, file: !1167, line: 152, type: !103)
!9482 = !DILocalVariable(name: "mask", scope: !9475, file: !1167, line: 154, type: !9366)
!9483 = !DILocalVariable(name: "old", scope: !9475, file: !1167, line: 155, type: !9366)
!9484 = !DILocation(line: 0, scope: !9475)
!9485 = !DILocation(line: 154, column: 22, scope: !9475)
!9486 = !DILocation(line: 157, column: 45, scope: !9475)
!9487 = !DILocation(line: 157, column: 8, scope: !9475)
!9488 = !DILocation(line: 159, column: 14, scope: !9475)
!9489 = !DILocation(line: 159, column: 22, scope: !9475)
!9490 = !DILocation(line: 159, column: 2, scope: !9475)
!9491 = distinct !DISubprogram(name: "atomic_set_bit", scope: !1167, file: !1167, line: 217, type: !9492, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9494)
!9492 = !DISubroutineType(types: !9493)
!9493 = !{null, !9478, !103}
!9494 = !{!9495, !9496, !9497}
!9495 = !DILocalVariable(name: "target", arg: 1, scope: !9491, file: !1167, line: 217, type: !9478)
!9496 = !DILocalVariable(name: "bit", arg: 2, scope: !9491, file: !1167, line: 217, type: !103)
!9497 = !DILocalVariable(name: "mask", scope: !9491, file: !1167, line: 219, type: !9366)
!9498 = !DILocation(line: 0, scope: !9491)
!9499 = !DILocation(line: 219, column: 22, scope: !9491)
!9500 = !DILocation(line: 221, column: 8, scope: !9491)
!9501 = !DILocation(line: 222, column: 1, scope: !9491)
!9502 = distinct !DISubprogram(name: "isprint", scope: !4967, file: !4967, line: 37, type: !107, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9503)
!9503 = !{!9504}
!9504 = !DILocalVariable(name: "c", arg: 1, scope: !9502, file: !4967, line: 37, type: !103)
!9505 = !DILocation(line: 0, scope: !9502)
!9506 = !DILocation(line: 39, column: 38, scope: !9502)
!9507 = !DILocation(line: 39, column: 2, scope: !9502)
!9508 = distinct !DISubprogram(name: "del_char", scope: !984, file: !984, line: 191, type: !9509, scopeLine: 192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9511)
!9509 = !DISubroutineType(types: !9510)
!9510 = !{null, !1128, !167}
!9511 = !{!9512, !9513}
!9512 = !DILocalVariable(name: "pos", arg: 1, scope: !9508, file: !984, line: 191, type: !1128)
!9513 = !DILocalVariable(name: "end", arg: 2, scope: !9508, file: !984, line: 191, type: !167)
!9514 = !DILocation(line: 0, scope: !9508)
!9515 = !DILocation(line: 193, column: 2, scope: !9508)
!9516 = !DILocation(line: 195, column: 10, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9508, file: !984, line: 195, column: 6)
!9518 = !DILocation(line: 195, column: 6, scope: !9508)
!9519 = !DILocation(line: 196, column: 3, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9517, file: !984, line: 195, column: 17)
!9521 = !DILocation(line: 197, column: 3, scope: !9520)
!9522 = !DILocation(line: 198, column: 3, scope: !9520)
!9523 = !DILocation(line: 201, column: 2, scope: !9508)
!9524 = !DILocation(line: 203, column: 2, scope: !9508)
!9525 = !DILocation(line: 203, column: 12, scope: !9508)
!9526 = !DILocation(line: 204, column: 16, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9508, file: !984, line: 203, column: 20)
!9528 = !DILocation(line: 204, column: 10, scope: !9527)
!9529 = !DILocation(line: 204, column: 8, scope: !9527)
!9530 = !DILocation(line: 205, column: 3, scope: !9527)
!9531 = !DILocation(line: 203, column: 15, scope: !9508)
!9532 = distinct !{!9532, !9524, !9533}
!9533 = !DILocation(line: 206, column: 2, scope: !9508)
!9534 = !DILocation(line: 208, column: 2, scope: !9508)
!9535 = !DILocation(line: 211, column: 2, scope: !9508)
!9536 = !DILocation(line: 212, column: 1, scope: !9508)
!9537 = !DISubprogram(name: "k_queue_append", scope: !313, file: !313, line: 1775, type: !9538, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!9538 = !DISubroutineType(types: !9539)
!9539 = !{null, !9343, !102}
!9540 = distinct !DISubprogram(name: "insert_char", scope: !984, file: !984, line: 163, type: !9541, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9543)
!9541 = !DISubroutineType(types: !9542)
!9542 = !{null, !1128, !159, !167}
!9543 = !{!9544, !9545, !9546, !9547}
!9544 = !DILocalVariable(name: "pos", arg: 1, scope: !9540, file: !984, line: 163, type: !1128)
!9545 = !DILocalVariable(name: "c", arg: 2, scope: !9540, file: !984, line: 163, type: !159)
!9546 = !DILocalVariable(name: "end", arg: 3, scope: !9540, file: !984, line: 163, type: !167)
!9547 = !DILocalVariable(name: "tmp", scope: !9540, file: !984, line: 165, type: !159)
!9548 = !DILocation(line: 0, scope: !9540)
!9549 = !DILocation(line: 168, column: 2, scope: !9540)
!9550 = !DILocation(line: 170, column: 10, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9540, file: !984, line: 170, column: 6)
!9552 = !DILocation(line: 170, column: 6, scope: !9540)
!9553 = !DILocation(line: 171, column: 8, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9551, file: !984, line: 170, column: 17)
!9555 = !DILocation(line: 172, column: 3, scope: !9554)
!9556 = !DILocation(line: 175, column: 8, scope: !9540)
!9557 = !DILocation(line: 176, column: 11, scope: !9540)
!9558 = !DILocation(line: 178, column: 2, scope: !9540)
!9559 = !DILocation(line: 180, column: 2, scope: !9540)
!9560 = !DILocation(line: 180, column: 12, scope: !9540)
!9561 = !DILocation(line: 181, column: 3, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9540, file: !984, line: 180, column: 20)
!9563 = !DILocation(line: 182, column: 7, scope: !9562)
!9564 = !DILocation(line: 183, column: 12, scope: !9562)
!9565 = !DILocation(line: 180, column: 15, scope: !9540)
!9566 = distinct !{!9566, !9559, !9567}
!9567 = !DILocation(line: 185, column: 2, scope: !9540)
!9568 = !DILocation(line: 188, column: 2, scope: !9540)
!9569 = !DILocation(line: 189, column: 1, scope: !9540)
!9570 = distinct !DISubprogram(name: "cursor_save", scope: !984, file: !984, line: 153, type: !3217, scopeLine: 154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !474)
!9571 = !DILocation(line: 155, column: 2, scope: !9570)
!9572 = !DILocation(line: 156, column: 1, scope: !9570)
!9573 = distinct !DISubprogram(name: "cursor_restore", scope: !984, file: !984, line: 158, type: !3217, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !474)
!9574 = !DILocation(line: 160, column: 2, scope: !9573)
!9575 = !DILocation(line: 161, column: 1, scope: !9573)
!9576 = distinct !DISubprogram(name: "atomic_or", scope: !9577, file: !9577, line: 279, type: !9578, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9580)
!9577 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9578 = !DISubroutineType(types: !9579)
!9579 = !{!9366, !9478, !9366}
!9580 = !{!9581, !9582}
!9581 = !DILocalVariable(name: "target", arg: 1, scope: !9576, file: !9577, line: 279, type: !9478)
!9582 = !DILocalVariable(name: "value", arg: 2, scope: !9576, file: !9577, line: 279, type: !9366)
!9583 = !DILocation(line: 0, scope: !9576)
!9584 = !DILocation(line: 281, column: 9, scope: !9576)
!9585 = !DILocation(line: 281, column: 2, scope: !9576)
!9586 = distinct !DISubprogram(name: "atomic_and", scope: !9577, file: !9577, line: 319, type: !9578, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9587)
!9587 = !{!9588, !9589}
!9588 = !DILocalVariable(name: "target", arg: 1, scope: !9586, file: !9577, line: 319, type: !9478)
!9589 = !DILocalVariable(name: "value", arg: 2, scope: !9586, file: !9577, line: 319, type: !9366)
!9590 = !DILocation(line: 0, scope: !9586)
!9591 = !DILocation(line: 321, column: 9, scope: !9586)
!9592 = !DILocation(line: 321, column: 2, scope: !9586)
!9593 = distinct !DISubprogram(name: "isdigit", scope: !4967, file: !4967, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9594)
!9594 = !{!9595}
!9595 = !DILocalVariable(name: "a", arg: 1, scope: !9593, file: !4967, line: 43, type: !103)
!9596 = !DILocation(line: 0, scope: !9593)
!9597 = !DILocation(line: 45, column: 29, scope: !9593)
!9598 = !DILocation(line: 45, column: 45, scope: !9593)
!9599 = !DILocation(line: 45, column: 2, scope: !9593)
!9600 = distinct !DISubprogram(name: "atomic_test_and_set_bit", scope: !1167, file: !1167, line: 176, type: !9476, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9601)
!9601 = !{!9602, !9603, !9604, !9605}
!9602 = !DILocalVariable(name: "target", arg: 1, scope: !9600, file: !1167, line: 176, type: !9478)
!9603 = !DILocalVariable(name: "bit", arg: 2, scope: !9600, file: !1167, line: 176, type: !103)
!9604 = !DILocalVariable(name: "mask", scope: !9600, file: !1167, line: 178, type: !9366)
!9605 = !DILocalVariable(name: "old", scope: !9600, file: !1167, line: 179, type: !9366)
!9606 = !DILocation(line: 0, scope: !9600)
!9607 = !DILocation(line: 181, column: 8, scope: !9600)
!9608 = !DILocation(line: 183, column: 14, scope: !9600)
!9609 = !DILocation(line: 183, column: 22, scope: !9600)
!9610 = !DILocation(line: 183, column: 2, scope: !9600)
!9611 = distinct !DISubprogram(name: "atomic_clear_bit", scope: !1167, file: !1167, line: 198, type: !9492, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9612)
!9612 = !{!9613, !9614, !9615}
!9613 = !DILocalVariable(name: "target", arg: 1, scope: !9611, file: !1167, line: 198, type: !9478)
!9614 = !DILocalVariable(name: "bit", arg: 2, scope: !9611, file: !1167, line: 198, type: !103)
!9615 = !DILocalVariable(name: "mask", scope: !9611, file: !1167, line: 200, type: !9366)
!9616 = !DILocation(line: 0, scope: !9611)
!9617 = !DILocation(line: 200, column: 22, scope: !9611)
!9618 = !DILocation(line: 202, column: 45, scope: !9611)
!9619 = !DILocation(line: 202, column: 8, scope: !9611)
!9620 = !DILocation(line: 203, column: 1, scope: !9611)
!9621 = distinct !DISubprogram(name: "cursor_backward", scope: !984, file: !984, line: 148, type: !5772, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9622)
!9622 = !{!9623}
!9623 = !DILocalVariable(name: "count", arg: 1, scope: !9621, file: !984, line: 148, type: !32)
!9624 = !DILocation(line: 0, scope: !9621)
!9625 = !DILocation(line: 150, column: 2, scope: !9621)
!9626 = !DILocation(line: 151, column: 1, scope: !9621)
!9627 = distinct !DISubprogram(name: "cursor_forward", scope: !984, file: !984, line: 143, type: !5772, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9628)
!9628 = !{!9629}
!9629 = !DILocalVariable(name: "count", arg: 1, scope: !9627, file: !984, line: 143, type: !32)
!9630 = !DILocation(line: 0, scope: !9627)
!9631 = !DILocation(line: 145, column: 2, scope: !9627)
!9632 = !DILocation(line: 146, column: 1, scope: !9627)
!9633 = distinct !DISubprogram(name: "atomic_get", scope: !9577, file: !9577, line: 159, type: !9634, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9636)
!9634 = !DISubroutineType(types: !9635)
!9635 = !{!9366, !9360}
!9636 = !{!9637}
!9637 = !DILocalVariable(name: "target", arg: 1, scope: !9633, file: !9577, line: 159, type: !9360)
!9638 = !DILocation(line: 0, scope: !9633)
!9639 = !DILocation(line: 161, column: 9, scope: !9633)
!9640 = !DILocation(line: 161, column: 2, scope: !9633)
!9641 = !DISubprogram(name: "z_impl_k_queue_get", scope: !3650, file: !3650, line: 646, type: !9341, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!9642 = distinct !DISubprogram(name: "z_impl_uart_irq_is_pending", scope: !216, file: !216, line: 1093, type: !1021, scopeLine: 1094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9643)
!9643 = !{!9644, !9645}
!9644 = !DILocalVariable(name: "dev", arg: 1, scope: !9642, file: !216, line: 1093, type: !1000)
!9645 = !DILocalVariable(name: "api", scope: !9642, file: !216, line: 1096, type: !992)
!9646 = !DILocation(line: 0, scope: !9642)
!9647 = !DILocation(line: 1097, column: 40, scope: !9642)
!9648 = !DILocation(line: 1099, column: 11, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9642, file: !216, line: 1099, column: 6)
!9650 = !DILocation(line: 1099, column: 26, scope: !9649)
!9651 = !DILocation(line: 1099, column: 6, scope: !9642)
!9652 = !DILocation(line: 1102, column: 9, scope: !9642)
!9653 = !DILocation(line: 1102, column: 2, scope: !9642)
!9654 = !DILocation(line: 1107, column: 1, scope: !9642)
!9655 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !216, file: !216, line: 1136, type: !1021, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9656)
!9656 = !{!9657, !9658}
!9657 = !DILocalVariable(name: "dev", arg: 1, scope: !9655, file: !216, line: 1136, type: !1000)
!9658 = !DILocalVariable(name: "api", scope: !9655, file: !216, line: 1139, type: !992)
!9659 = !DILocation(line: 0, scope: !9655)
!9660 = !DILocation(line: 1140, column: 40, scope: !9655)
!9661 = !DILocation(line: 1142, column: 11, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9655, file: !216, line: 1142, column: 6)
!9663 = !DILocation(line: 1142, column: 22, scope: !9662)
!9664 = !DILocation(line: 1142, column: 6, scope: !9655)
!9665 = !DILocation(line: 1145, column: 9, scope: !9655)
!9666 = !DILocation(line: 1145, column: 2, scope: !9655)
!9667 = !DILocation(line: 1150, column: 1, scope: !9655)
!9668 = distinct !DISubprogram(name: "z_impl_uart_irq_tx_disable", scope: !216, file: !216, line: 878, type: !1051, scopeLine: 879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9669)
!9669 = !{!9670, !9671}
!9670 = !DILocalVariable(name: "dev", arg: 1, scope: !9668, file: !216, line: 878, type: !1000)
!9671 = !DILocalVariable(name: "api", scope: !9668, file: !216, line: 881, type: !992)
!9672 = !DILocation(line: 0, scope: !9668)
!9673 = !DILocation(line: 882, column: 40, scope: !9668)
!9674 = !DILocation(line: 884, column: 11, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9668, file: !216, line: 884, column: 6)
!9676 = !DILocation(line: 884, column: 26, scope: !9675)
!9677 = !DILocation(line: 884, column: 6, scope: !9668)
!9678 = !DILocation(line: 885, column: 3, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9675, file: !216, line: 884, column: 35)
!9680 = !DILocation(line: 886, column: 2, scope: !9679)
!9681 = !DILocation(line: 890, column: 1, scope: !9668)
!9682 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_disable", scope: !216, file: !216, line: 955, type: !1051, scopeLine: 956, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9683)
!9683 = !{!9684, !9685}
!9684 = !DILocalVariable(name: "dev", arg: 1, scope: !9682, file: !216, line: 955, type: !1000)
!9685 = !DILocalVariable(name: "api", scope: !9682, file: !216, line: 958, type: !992)
!9686 = !DILocation(line: 0, scope: !9682)
!9687 = !DILocation(line: 959, column: 40, scope: !9682)
!9688 = !DILocation(line: 961, column: 11, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9682, file: !216, line: 961, column: 6)
!9690 = !DILocation(line: 961, column: 26, scope: !9689)
!9691 = !DILocation(line: 961, column: 6, scope: !9682)
!9692 = !DILocation(line: 962, column: 3, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9689, file: !216, line: 961, column: 35)
!9694 = !DILocation(line: 963, column: 2, scope: !9693)
!9695 = !DILocation(line: 967, column: 1, scope: !9682)
!9696 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1332, file: !1332, line: 523, type: !1198, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9697)
!9697 = !{!9698, !9699, !9700, !9701, !9702}
!9698 = !DILocalVariable(name: "dev", arg: 1, scope: !9696, file: !1332, line: 523, type: !1200)
!9699 = !DILocalVariable(name: "pin", arg: 2, scope: !9696, file: !1332, line: 524, type: !612)
!9700 = !DILocalVariable(name: "flags", arg: 3, scope: !9696, file: !1332, line: 524, type: !613)
!9701 = !DILocalVariable(name: "err", scope: !9696, file: !1332, line: 526, type: !103)
!9702 = !DILocalVariable(name: "pincfg", scope: !9696, file: !1332, line: 527, type: !103)
!9703 = !DILocation(line: 0, scope: !9696)
!9704 = !DILocation(line: 527, column: 2, scope: !9696)
!9705 = !DILocation(line: 532, column: 8, scope: !9696)
!9706 = !DILocation(line: 533, column: 10, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9696, file: !1332, line: 533, column: 6)
!9708 = !DILocation(line: 533, column: 6, scope: !9696)
!9709 = !DILocation(line: 543, column: 13, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9696, file: !1332, line: 543, column: 6)
!9711 = !DILocation(line: 543, column: 28, scope: !9710)
!9712 = !DILocation(line: 543, column: 6, scope: !9696)
!9713 = !DILocation(line: 544, column: 14, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !1332, line: 544, column: 7)
!9715 = distinct !DILexicalBlock(scope: !9710, file: !1332, line: 543, column: 34)
!9716 = !DILocation(line: 544, column: 39, scope: !9714)
!9717 = !DILocation(line: 544, column: 7, scope: !9715)
!9718 = !DILocation(line: 545, column: 38, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9714, file: !1332, line: 544, column: 45)
!9720 = !DILocation(line: 545, column: 4, scope: !9719)
!9721 = !DILocation(line: 546, column: 3, scope: !9719)
!9722 = !DILocation(line: 546, column: 21, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9714, file: !1332, line: 546, column: 14)
!9724 = !DILocation(line: 546, column: 45, scope: !9723)
!9725 = !DILocation(line: 546, column: 14, scope: !9714)
!9726 = !DILocation(line: 547, column: 40, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9723, file: !1332, line: 546, column: 51)
!9728 = !DILocation(line: 547, column: 4, scope: !9727)
!9729 = !DILocation(line: 548, column: 3, scope: !9727)
!9730 = !DILocation(line: 551, column: 32, scope: !9696)
!9731 = !DILocation(line: 551, column: 37, scope: !9696)
!9732 = !DILocation(line: 551, column: 2, scope: !9696)
!9733 = !DILocation(line: 554, column: 6, scope: !9696)
!9734 = !DILocation(line: 562, column: 1, scope: !9696)
!9735 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1332, file: !1332, line: 410, type: !9736, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9738)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!103, !1200, !902}
!9738 = !{!9739, !9740, !9741, !9743}
!9739 = !DILocalVariable(name: "dev", arg: 1, scope: !9735, file: !1332, line: 410, type: !1200)
!9740 = !DILocalVariable(name: "value", arg: 2, scope: !9735, file: !1332, line: 410, type: !902)
!9741 = !DILocalVariable(name: "cfg", scope: !9735, file: !1332, line: 412, type: !9742)
!9742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!9743 = !DILocalVariable(name: "gpio", scope: !9735, file: !1332, line: 413, type: !1267)
!9744 = !DILocation(line: 0, scope: !9735)
!9745 = !DILocation(line: 412, column: 45, scope: !9735)
!9746 = !DILocation(line: 413, column: 44, scope: !9735)
!9747 = !DILocation(line: 415, column: 11, scope: !9735)
!9748 = !DILocation(line: 415, column: 9, scope: !9735)
!9749 = !DILocation(line: 417, column: 2, scope: !9735)
!9750 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1332, file: !1332, line: 420, type: !1221, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9751)
!9751 = !{!9752, !9753, !9754, !9755, !9756, !9757}
!9752 = !DILocalVariable(name: "dev", arg: 1, scope: !9750, file: !1332, line: 420, type: !1200)
!9753 = !DILocalVariable(name: "mask", arg: 2, scope: !9750, file: !1332, line: 421, type: !624)
!9754 = !DILocalVariable(name: "value", arg: 3, scope: !9750, file: !1332, line: 422, type: !619)
!9755 = !DILocalVariable(name: "cfg", scope: !9750, file: !1332, line: 424, type: !9742)
!9756 = !DILocalVariable(name: "gpio", scope: !9750, file: !1332, line: 425, type: !1267)
!9757 = !DILocalVariable(name: "port_value", scope: !9750, file: !1332, line: 426, type: !121)
!9758 = !DILocation(line: 0, scope: !9750)
!9759 = !DILocation(line: 424, column: 45, scope: !9750)
!9760 = !DILocation(line: 425, column: 44, scope: !9750)
!9761 = !DILocation(line: 430, column: 15, scope: !9750)
!9762 = !DILocation(line: 431, column: 46, scope: !9750)
!9763 = !DILocation(line: 431, column: 44, scope: !9750)
!9764 = !DILocation(line: 431, column: 61, scope: !9750)
!9765 = !DILocation(line: 431, column: 53, scope: !9750)
!9766 = !DILocation(line: 431, column: 2, scope: !9750)
!9767 = !DILocation(line: 435, column: 2, scope: !9750)
!9768 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1332, file: !1332, line: 438, type: !1225, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9769)
!9769 = !{!9770, !9771, !9772, !9773}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9768, file: !1332, line: 438, type: !1200)
!9771 = !DILocalVariable(name: "pins", arg: 2, scope: !9768, file: !1332, line: 439, type: !624)
!9772 = !DILocalVariable(name: "cfg", scope: !9768, file: !1332, line: 441, type: !9742)
!9773 = !DILocalVariable(name: "gpio", scope: !9768, file: !1332, line: 442, type: !1267)
!9774 = !DILocation(line: 0, scope: !9768)
!9775 = !DILocation(line: 441, column: 45, scope: !9768)
!9776 = !DILocation(line: 442, column: 44, scope: !9768)
!9777 = !DILocation(line: 448, column: 2, scope: !9768)
!9778 = !DILocation(line: 450, column: 2, scope: !9768)
!9779 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1332, file: !1332, line: 453, type: !1225, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9780)
!9780 = !{!9781, !9782, !9783, !9784}
!9781 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !1332, line: 453, type: !1200)
!9782 = !DILocalVariable(name: "pins", arg: 2, scope: !9779, file: !1332, line: 454, type: !624)
!9783 = !DILocalVariable(name: "cfg", scope: !9779, file: !1332, line: 456, type: !9742)
!9784 = !DILocalVariable(name: "gpio", scope: !9779, file: !1332, line: 457, type: !1267)
!9785 = !DILocation(line: 0, scope: !9779)
!9786 = !DILocation(line: 456, column: 45, scope: !9779)
!9787 = !DILocation(line: 457, column: 44, scope: !9779)
!9788 = !DILocation(line: 467, column: 2, scope: !9779)
!9789 = !DILocation(line: 470, column: 2, scope: !9779)
!9790 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1332, file: !1332, line: 473, type: !1225, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9791)
!9791 = !{!9792, !9793, !9794, !9795}
!9792 = !DILocalVariable(name: "dev", arg: 1, scope: !9790, file: !1332, line: 473, type: !1200)
!9793 = !DILocalVariable(name: "pins", arg: 2, scope: !9790, file: !1332, line: 474, type: !624)
!9794 = !DILocalVariable(name: "cfg", scope: !9790, file: !1332, line: 476, type: !9742)
!9795 = !DILocalVariable(name: "gpio", scope: !9790, file: !1332, line: 477, type: !1267)
!9796 = !DILocation(line: 0, scope: !9790)
!9797 = !DILocation(line: 476, column: 45, scope: !9790)
!9798 = !DILocation(line: 477, column: 44, scope: !9790)
!9799 = !DILocation(line: 484, column: 2, scope: !9790)
!9800 = !DILocation(line: 487, column: 2, scope: !9790)
!9801 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1332, file: !1332, line: 594, type: !1231, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9802)
!9802 = !{!9803, !9804, !9805, !9806, !9807, !9808, !9810, !9811, !9812}
!9803 = !DILocalVariable(name: "dev", arg: 1, scope: !9801, file: !1332, line: 594, type: !1200)
!9804 = !DILocalVariable(name: "pin", arg: 2, scope: !9801, file: !1332, line: 595, type: !612)
!9805 = !DILocalVariable(name: "mode", arg: 3, scope: !9801, file: !1332, line: 596, type: !577)
!9806 = !DILocalVariable(name: "trig", arg: 4, scope: !9801, file: !1332, line: 597, type: !583)
!9807 = !DILocalVariable(name: "cfg", scope: !9801, file: !1332, line: 599, type: !9742)
!9808 = !DILocalVariable(name: "data", scope: !9801, file: !1332, line: 600, type: !9809)
!9809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!9810 = !DILocalVariable(name: "edge", scope: !9801, file: !1332, line: 601, type: !103)
!9811 = !DILocalVariable(name: "err", scope: !9801, file: !1332, line: 602, type: !103)
!9812 = !DILabel(scope: !9801, name: "exit", file: !1332, line: 643)
!9813 = !DILocation(line: 0, scope: !9801)
!9814 = !DILocation(line: 599, column: 45, scope: !9801)
!9815 = !DILocation(line: 604, column: 6, scope: !9801)
!9816 = !DILocation(line: 605, column: 34, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !1332, line: 605, column: 7)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !1332, line: 604, column: 38)
!9819 = distinct !DILexicalBlock(scope: !9801, file: !1332, line: 604, column: 6)
!9820 = !DILocation(line: 605, column: 7, scope: !9817)
!9821 = !DILocation(line: 605, column: 47, scope: !9817)
!9822 = !DILocation(line: 605, column: 39, scope: !9817)
!9823 = !DILocation(line: 605, column: 7, scope: !9818)
!9824 = !DILocation(line: 606, column: 4, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9817, file: !1332, line: 605, column: 53)
!9826 = !DILocation(line: 607, column: 4, scope: !9825)
!9827 = !DILocation(line: 608, column: 4, scope: !9825)
!9828 = !DILocation(line: 609, column: 3, scope: !9825)
!9829 = !DILocation(line: 600, column: 38, scope: !9801)
!9830 = !DILocation(line: 620, column: 30, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9801, file: !1332, line: 620, column: 6)
!9832 = !DILocation(line: 620, column: 6, scope: !9831)
!9833 = !DILocation(line: 620, column: 57, scope: !9831)
!9834 = !DILocation(line: 620, column: 6, scope: !9801)
!9835 = !DILocation(line: 625, column: 29, scope: !9801)
!9836 = !DILocation(line: 625, column: 2, scope: !9801)
!9837 = !DILocation(line: 627, column: 2, scope: !9801)
!9838 = !DILocation(line: 630, column: 3, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9801, file: !1332, line: 627, column: 16)
!9840 = !DILocation(line: 633, column: 3, scope: !9839)
!9841 = !DILocation(line: 636, column: 3, scope: !9839)
!9842 = !DILocation(line: 639, column: 2, scope: !9801)
!9843 = !DILocation(line: 641, column: 2, scope: !9801)
!9844 = !DILocation(line: 643, column: 1, scope: !9801)
!9845 = !DILocation(line: 644, column: 2, scope: !9801)
!9846 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1332, file: !1332, line: 647, type: !1235, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9847)
!9847 = !{!9848, !9849, !9850, !9851}
!9848 = !DILocalVariable(name: "dev", arg: 1, scope: !9846, file: !1332, line: 647, type: !1200)
!9849 = !DILocalVariable(name: "callback", arg: 2, scope: !9846, file: !1332, line: 648, type: !1237)
!9850 = !DILocalVariable(name: "set", arg: 3, scope: !9846, file: !1332, line: 649, type: !170)
!9851 = !DILocalVariable(name: "data", scope: !9846, file: !1332, line: 651, type: !9809)
!9852 = !DILocation(line: 0, scope: !9846)
!9853 = !DILocation(line: 651, column: 38, scope: !9846)
!9854 = !DILocation(line: 653, column: 37, scope: !9846)
!9855 = !DILocation(line: 653, column: 9, scope: !9846)
!9856 = !DILocation(line: 653, column: 2, scope: !9846)
!9857 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9858, file: !9858, line: 38, type: !9859, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9862)
!9858 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9859 = !DISubroutineType(types: !9860)
!9860 = !{!103, !9861, !1237, !170}
!9861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!9862 = !{!9863, !9864, !9865}
!9863 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9857, file: !9858, line: 38, type: !9861)
!9864 = !DILocalVariable(name: "callback", arg: 2, scope: !9857, file: !9858, line: 39, type: !1237)
!9865 = !DILocalVariable(name: "set", arg: 3, scope: !9857, file: !9858, line: 40, type: !170)
!9866 = !DILocation(line: 0, scope: !9857)
!9867 = !DILocation(line: 45, column: 7, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9857, file: !9858, line: 45, column: 6)
!9869 = !DILocation(line: 45, column: 6, scope: !9857)
!9870 = !DILocation(line: 46, column: 56, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9872, file: !9858, line: 46, column: 7)
!9872 = distinct !DILexicalBlock(scope: !9868, file: !9858, line: 45, column: 38)
!9873 = !DILocation(line: 46, column: 8, scope: !9871)
!9874 = !DILocation(line: 46, column: 7, scope: !9872)
!9875 = !DILocation(line: 51, column: 13, scope: !9868)
!9876 = !DILocation(line: 56, column: 43, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9878, file: !9858, line: 55, column: 11)
!9878 = distinct !DILexicalBlock(scope: !9857, file: !9858, line: 55, column: 6)
!9879 = !DILocation(line: 56, column: 3, scope: !9877)
!9880 = !DILocation(line: 57, column: 2, scope: !9877)
!9881 = !DILocation(line: 60, column: 1, scope: !9857)
!9882 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !644, file: !644, line: 261, type: !9883, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9885)
!9883 = !DISubroutineType(types: !9884)
!9884 = !{!170, !9861}
!9885 = !{!9886}
!9886 = !DILocalVariable(name: "list", arg: 1, scope: !9882, file: !644, line: 261, type: !9861)
!9887 = !DILocation(line: 0, scope: !9882)
!9888 = !DILocation(line: 261, column: 1, scope: !9882)
!9889 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !644, file: !644, line: 417, type: !9890, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9892)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!170, !9861, !1402}
!9892 = !{!9893, !9894, !9895, !9896}
!9893 = !DILocalVariable(name: "list", arg: 1, scope: !9889, file: !644, line: 417, type: !9861)
!9894 = !DILocalVariable(name: "node", arg: 2, scope: !9889, file: !644, line: 417, type: !1402)
!9895 = !DILocalVariable(name: "prev", scope: !9889, file: !644, line: 417, type: !1402)
!9896 = !DILocalVariable(name: "test", scope: !9889, file: !644, line: 417, type: !1402)
!9897 = !DILocation(line: 0, scope: !9889)
!9898 = !DILocation(line: 417, column: 1, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9889, file: !644, line: 417, column: 1)
!9900 = !DILocation(line: 417, column: 1, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9899, file: !644, line: 417, column: 1)
!9902 = !DILocation(line: 417, column: 1, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !644, line: 417, column: 1)
!9904 = distinct !DILexicalBlock(scope: !9901, file: !644, line: 417, column: 1)
!9905 = !DILocation(line: 417, column: 1, scope: !9904)
!9906 = distinct !{!9906, !9898, !9898}
!9907 = !DILocation(line: 417, column: 1, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9903, file: !644, line: 417, column: 1)
!9909 = !DILocation(line: 417, column: 1, scope: !9889)
!9910 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !644, file: !644, line: 298, type: !9911, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9913)
!9911 = !DISubroutineType(types: !9912)
!9912 = !{null, !9861, !1402}
!9913 = !{!9914, !9915}
!9914 = !DILocalVariable(name: "list", arg: 1, scope: !9910, file: !644, line: 298, type: !9861)
!9915 = !DILocalVariable(name: "node", arg: 2, scope: !9910, file: !644, line: 298, type: !1402)
!9916 = !DILocation(line: 0, scope: !9910)
!9917 = !DILocation(line: 298, column: 1, scope: !9910)
!9918 = !DILocation(line: 298, column: 1, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9910, file: !644, line: 298, column: 1)
!9920 = !DILocation(line: 298, column: 1, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9919, file: !644, line: 298, column: 1)
!9922 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !644, file: !644, line: 231, type: !9923, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9925)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!1402, !9861}
!9925 = !{!9926}
!9926 = !DILocalVariable(name: "list", arg: 1, scope: !9922, file: !644, line: 231, type: !9861)
!9927 = !DILocation(line: 0, scope: !9922)
!9928 = !DILocation(line: 233, column: 15, scope: !9922)
!9929 = !DILocation(line: 233, column: 2, scope: !9922)
!9930 = distinct !DISubprogram(name: "z_snode_next_set", scope: !644, file: !644, line: 209, type: !9931, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{null, !1402, !1402}
!9933 = !{!9934, !9935}
!9934 = !DILocalVariable(name: "parent", arg: 1, scope: !9930, file: !644, line: 209, type: !1402)
!9935 = !DILocalVariable(name: "child", arg: 2, scope: !9930, file: !644, line: 209, type: !1402)
!9936 = !DILocation(line: 0, scope: !9930)
!9937 = !DILocation(line: 211, column: 10, scope: !9930)
!9938 = !DILocation(line: 211, column: 15, scope: !9930)
!9939 = !DILocation(line: 212, column: 1, scope: !9930)
!9940 = distinct !DISubprogram(name: "z_slist_head_set", scope: !644, file: !644, line: 214, type: !9911, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9941)
!9941 = !{!9942, !9943}
!9942 = !DILocalVariable(name: "list", arg: 1, scope: !9940, file: !644, line: 214, type: !9861)
!9943 = !DILocalVariable(name: "node", arg: 2, scope: !9940, file: !644, line: 214, type: !1402)
!9944 = !DILocation(line: 0, scope: !9940)
!9945 = !DILocation(line: 216, column: 8, scope: !9940)
!9946 = !DILocation(line: 216, column: 13, scope: !9940)
!9947 = !DILocation(line: 217, column: 1, scope: !9940)
!9948 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !644, file: !644, line: 243, type: !9923, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9949)
!9949 = !{!9950}
!9950 = !DILocalVariable(name: "list", arg: 1, scope: !9948, file: !644, line: 243, type: !9861)
!9951 = !DILocation(line: 0, scope: !9948)
!9952 = !DILocation(line: 245, column: 15, scope: !9948)
!9953 = !DILocation(line: 245, column: 2, scope: !9948)
!9954 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !644, file: !644, line: 219, type: !9911, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9955)
!9955 = !{!9956, !9957}
!9956 = !DILocalVariable(name: "list", arg: 1, scope: !9954, file: !644, line: 219, type: !9861)
!9957 = !DILocalVariable(name: "node", arg: 2, scope: !9954, file: !644, line: 219, type: !1402)
!9958 = !DILocation(line: 0, scope: !9954)
!9959 = !DILocation(line: 221, column: 8, scope: !9954)
!9960 = !DILocation(line: 221, column: 13, scope: !9954)
!9961 = !DILocation(line: 222, column: 1, scope: !9954)
!9962 = distinct !DISubprogram(name: "sys_slist_remove", scope: !644, file: !644, line: 401, type: !9963, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9965)
!9963 = !DISubroutineType(types: !9964)
!9964 = !{null, !9861, !1402, !1402}
!9965 = !{!9966, !9967, !9968}
!9966 = !DILocalVariable(name: "list", arg: 1, scope: !9962, file: !644, line: 401, type: !9861)
!9967 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9962, file: !644, line: 401, type: !1402)
!9968 = !DILocalVariable(name: "node", arg: 3, scope: !9962, file: !644, line: 401, type: !1402)
!9969 = !DILocation(line: 0, scope: !9962)
!9970 = !DILocation(line: 401, column: 1, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9962, file: !644, line: 401, column: 1)
!9972 = !DILocation(line: 0, scope: !9971)
!9973 = !DILocation(line: 401, column: 1, scope: !9962)
!9974 = !DILocation(line: 401, column: 1, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9971, file: !644, line: 401, column: 1)
!9976 = !DILocation(line: 401, column: 1, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9975, file: !644, line: 401, column: 1)
!9978 = !DILocation(line: 401, column: 1, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9977, file: !644, line: 401, column: 1)
!9980 = !DILocation(line: 401, column: 1, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9971, file: !644, line: 401, column: 1)
!9982 = !DILocation(line: 401, column: 1, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9981, file: !644, line: 401, column: 1)
!9984 = !DILocation(line: 401, column: 1, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9983, file: !644, line: 401, column: 1)
!9986 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !644, file: !644, line: 285, type: !9987, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{!1402, !1402}
!9989 = !{!9990}
!9990 = !DILocalVariable(name: "node", arg: 1, scope: !9986, file: !644, line: 285, type: !1402)
!9991 = !DILocation(line: 0, scope: !9986)
!9992 = !DILocation(line: 285, column: 1, scope: !9986)
!9993 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !644, file: !644, line: 274, type: !9987, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9994)
!9994 = !{!9995}
!9995 = !DILocalVariable(name: "node", arg: 1, scope: !9993, file: !644, line: 274, type: !1402)
!9996 = !DILocation(line: 0, scope: !9993)
!9997 = !DILocation(line: 274, column: 1, scope: !9993)
!9998 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !644, file: !644, line: 204, type: !9987, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !9999)
!9999 = !{!10000}
!10000 = !DILocalVariable(name: "node", arg: 1, scope: !9998, file: !644, line: 204, type: !1402)
!10001 = !DILocation(line: 0, scope: !9998)
!10002 = !DILocation(line: 206, column: 15, scope: !9998)
!10003 = !DILocation(line: 206, column: 2, scope: !9998)
!10004 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1332, file: !1332, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10005)
!10005 = !{!10006, !10007, !10008}
!10006 = !DILocalVariable(name: "pin", arg: 1, scope: !10004, file: !1332, line: 342, type: !103)
!10007 = !DILocalVariable(name: "line", scope: !10004, file: !1332, line: 344, type: !121)
!10008 = !DILocalVariable(name: "port", scope: !10004, file: !1332, line: 345, type: !103)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 344, column: 18, scope: !10004)
!10011 = !{i32 983040, i32 0}
!10012 = !DILocation(line: 356, column: 9, scope: !10004)
!10013 = !DILocation(line: 370, column: 2, scope: !10004)
!10014 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1332, file: !1332, line: 37, type: !797, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10015)
!10015 = !{!10016, !10017, !10018}
!10016 = !DILocalVariable(name: "line", arg: 1, scope: !10014, file: !1332, line: 37, type: !103)
!10017 = !DILocalVariable(name: "arg", arg: 2, scope: !10014, file: !1332, line: 37, type: !102)
!10018 = !DILocalVariable(name: "data", scope: !10014, file: !1332, line: 39, type: !9809)
!10019 = !DILocation(line: 0, scope: !10014)
!10020 = !DILocation(line: 41, column: 29, scope: !10014)
!10021 = !DILocation(line: 41, column: 39, scope: !10014)
!10022 = !DILocation(line: 41, column: 44, scope: !10014)
!10023 = !DILocation(line: 41, column: 2, scope: !10014)
!10024 = !DILocation(line: 42, column: 1, scope: !10014)
!10025 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1332, file: !1332, line: 376, type: !10026, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10028)
!10026 = !DISubroutineType(types: !10027)
!10027 = !{!103, !103, !103}
!10028 = !{!10029, !10030, !10031, !10033, !10034}
!10029 = !DILocalVariable(name: "port", arg: 1, scope: !10025, file: !1332, line: 376, type: !103)
!10030 = !DILocalVariable(name: "pin", arg: 2, scope: !10025, file: !1332, line: 376, type: !103)
!10031 = !DILocalVariable(name: "clk", scope: !10025, file: !1332, line: 386, type: !10032)
!10032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1200)
!10033 = !DILocalVariable(name: "pclken", scope: !10025, file: !1332, line: 387, type: !1437)
!10034 = !DILocalVariable(name: "ret", scope: !10025, file: !1332, line: 396, type: !103)
!10035 = !DILocation(line: 0, scope: !10025)
!10036 = !DILocation(line: 387, column: 2, scope: !10025)
!10037 = !DILocation(line: 387, column: 22, scope: !10025)
!10038 = !DILocation(line: 399, column: 8, scope: !10025)
!10039 = !DILocation(line: 400, column: 10, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10025, file: !1332, line: 400, column: 6)
!10041 = !DILocation(line: 400, column: 6, scope: !10025)
!10042 = !DILocation(line: 405, column: 2, scope: !10025)
!10043 = !DILocation(line: 407, column: 2, scope: !10025)
!10044 = !DILocation(line: 408, column: 1, scope: !10025)
!10045 = distinct !DISubprogram(name: "clock_control_on", scope: !871, file: !871, line: 123, type: !1297, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10046)
!10046 = !{!10047, !10048, !10049}
!10047 = !DILocalVariable(name: "dev", arg: 1, scope: !10045, file: !871, line: 123, type: !1200)
!10048 = !DILocalVariable(name: "sys", arg: 2, scope: !10045, file: !871, line: 124, type: !946)
!10049 = !DILocalVariable(name: "api", scope: !10045, file: !871, line: 126, type: !1290)
!10050 = !DILocation(line: 0, scope: !10045)
!10051 = !DILocation(line: 127, column: 49, scope: !10045)
!10052 = !DILocation(line: 129, column: 14, scope: !10045)
!10053 = !DILocation(line: 129, column: 9, scope: !10045)
!10054 = !DILocation(line: 129, column: 2, scope: !10045)
!10055 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1332, file: !1332, line: 311, type: !8627, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10056)
!10056 = !{!10057, !10058, !10059}
!10057 = !DILocalVariable(name: "port", arg: 1, scope: !10055, file: !1332, line: 311, type: !103)
!10058 = !DILocalVariable(name: "pin", arg: 2, scope: !10055, file: !1332, line: 311, type: !103)
!10059 = !DILocalVariable(name: "line", scope: !10055, file: !1332, line: 313, type: !121)
!10060 = !DILocation(line: 0, scope: !10055)
!10061 = !DILocation(line: 313, column: 18, scope: !10055)
!10062 = !DILocation(line: 337, column: 2, scope: !10055)
!10063 = !DILocation(line: 340, column: 1, scope: !10055)
!10064 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1332, file: !1332, line: 295, type: !10065, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10067)
!10065 = !DISubroutineType(types: !10066)
!10066 = !{!121, !103}
!10067 = !{!10068}
!10068 = !DILocalVariable(name: "pin", arg: 1, scope: !10064, file: !1332, line: 295, type: !103)
!10069 = !DILocation(line: 0, scope: !10064)
!10070 = !DILocation(line: 307, column: 46, scope: !10064)
!10071 = !DILocation(line: 307, column: 27, scope: !10064)
!10072 = !DILocation(line: 307, column: 32, scope: !10064)
!10073 = !DILocation(line: 307, column: 14, scope: !10064)
!10074 = !DILocation(line: 307, column: 39, scope: !10064)
!10075 = !DILocation(line: 307, column: 2, scope: !10064)
!10076 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10077, file: !10077, line: 621, type: !10078, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10080)
!10077 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10078 = !DISubroutineType(types: !10079)
!10079 = !{null, !121, !121}
!10080 = !{!10081, !10082}
!10081 = !DILocalVariable(name: "Port", arg: 1, scope: !10076, file: !10077, line: 621, type: !121)
!10082 = !DILocalVariable(name: "Line", arg: 2, scope: !10076, file: !10077, line: 621, type: !121)
!10083 = !DILocation(line: 0, scope: !10076)
!10084 = !DILocation(line: 623, column: 3, scope: !10076)
!10085 = !DILocalVariable(name: "value", arg: 1, scope: !10086, file: !6798, line: 373, type: !121)
!10086 = distinct !DISubprogram(name: "__RBIT", scope: !6798, file: !6798, line: 373, type: !7767, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10087)
!10087 = !{!10085, !10088}
!10088 = !DILocalVariable(name: "result", scope: !10086, file: !6798, line: 375, type: !121)
!10089 = !DILocation(line: 0, scope: !10086, inlinedAt: !10090)
!10090 = distinct !DILocation(line: 623, column: 3, scope: !10076)
!10091 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10090)
!10092 = !{i64 2448720}
!10093 = !DILocalVariable(name: "value", arg: 1, scope: !10094, file: !6798, line: 403, type: !121)
!10094 = distinct !DISubprogram(name: "__CLZ", scope: !6798, file: !6798, line: 403, type: !10095, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10097)
!10095 = !DISubroutineType(types: !10096)
!10096 = !{!167, !121}
!10097 = !{!10093}
!10098 = !DILocation(line: 0, scope: !10094, inlinedAt: !10099)
!10099 = distinct !DILocation(line: 623, column: 3, scope: !10076)
!10100 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10099)
!10101 = !DILocation(line: 624, column: 1, scope: !10076)
!10102 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9858, file: !9858, line: 69, type: !10103, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10105)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{null, !9861, !1200, !121}
!10105 = !{!10106, !10107, !10108, !10109, !10110}
!10106 = !DILocalVariable(name: "list", arg: 1, scope: !10102, file: !9858, line: 69, type: !9861)
!10107 = !DILocalVariable(name: "port", arg: 2, scope: !10102, file: !9858, line: 70, type: !1200)
!10108 = !DILocalVariable(name: "pins", arg: 3, scope: !10102, file: !9858, line: 71, type: !121)
!10109 = !DILocalVariable(name: "cb", scope: !10102, file: !9858, line: 73, type: !1237)
!10110 = !DILocalVariable(name: "tmp", scope: !10102, file: !9858, line: 73, type: !1237)
!10111 = !DILocation(line: 0, scope: !10102)
!10112 = !DILocation(line: 75, column: 2, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10102, file: !9858, line: 75, column: 2)
!10114 = !DILocation(line: 0, scope: !10113)
!10115 = !DILocation(line: 76, column: 11, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10117, file: !9858, line: 76, column: 7)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !9858, line: 75, column: 57)
!10118 = distinct !DILexicalBlock(scope: !10113, file: !9858, line: 75, column: 2)
!10119 = !DILocation(line: 76, column: 20, scope: !10116)
!10120 = !DILocation(line: 76, column: 7, scope: !10117)
!10121 = !DILocation(line: 78, column: 8, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10116, file: !9858, line: 76, column: 28)
!10123 = !DILocation(line: 78, column: 4, scope: !10122)
!10124 = !DILocation(line: 79, column: 3, scope: !10122)
!10125 = !DILocation(line: 75, column: 2, scope: !10118)
!10126 = !DILocation(line: 81, column: 1, scope: !10102)
!10127 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10077, file: !10077, line: 721, type: !7767, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10128)
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "Line", arg: 1, scope: !10127, file: !10077, line: 721, type: !121)
!10130 = !DILocation(line: 0, scope: !10127)
!10131 = !DILocation(line: 723, column: 21, scope: !10127)
!10132 = !DILocation(line: 0, scope: !10086, inlinedAt: !10133)
!10133 = distinct !DILocation(line: 723, column: 76, scope: !10127)
!10134 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10133)
!10135 = !DILocation(line: 0, scope: !10094, inlinedAt: !10136)
!10136 = distinct !DILocation(line: 723, column: 76, scope: !10127)
!10137 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10136)
!10138 = !DILocation(line: 723, column: 73, scope: !10127)
!10139 = !DILocation(line: 723, column: 3, scope: !10127)
!10140 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10141, file: !10141, line: 913, type: !10142, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10144)
!10141 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10142 = !DISubroutineType(types: !10143)
!10143 = !{null, !1267, !121}
!10144 = !{!10145, !10146}
!10145 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10140, file: !10141, line: 913, type: !1267)
!10146 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10140, file: !10141, line: 913, type: !121)
!10147 = !DILocation(line: 0, scope: !10140)
!10148 = !DILocation(line: 918, column: 3, scope: !10140)
!10149 = !DILocation(line: 920, column: 1, scope: !10140)
!10150 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10141, file: !10141, line: 825, type: !10151, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10153)
!10151 = !DISubroutineType(types: !10152)
!10152 = !{!121, !1267}
!10153 = !{!10154}
!10154 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10150, file: !10141, line: 825, type: !1267)
!10155 = !DILocation(line: 0, scope: !10150)
!10156 = !DILocation(line: 827, column: 21, scope: !10150)
!10157 = !DILocation(line: 827, column: 3, scope: !10150)
!10158 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10141, file: !10141, line: 814, type: !10142, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10159)
!10159 = !{!10160, !10161}
!10160 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10158, file: !10141, line: 814, type: !1267)
!10161 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10158, file: !10141, line: 814, type: !121)
!10162 = !DILocation(line: 0, scope: !10158)
!10163 = !DILocation(line: 816, column: 3, scope: !10158)
!10164 = !DILocation(line: 817, column: 1, scope: !10158)
!10165 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10141, file: !10141, line: 773, type: !10151, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10166)
!10166 = !{!10167}
!10167 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10165, file: !10141, line: 773, type: !1267)
!10168 = !DILocation(line: 0, scope: !10165)
!10169 = !DILocation(line: 775, column: 21, scope: !10165)
!10170 = !DILocation(line: 775, column: 3, scope: !10165)
!10171 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1332, file: !1332, line: 47, type: !10172, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10174)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{!103, !613, !2634}
!10174 = !{!10175, !10176}
!10175 = !DILocalVariable(name: "flags", arg: 1, scope: !10171, file: !1332, line: 47, type: !613)
!10176 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10171, file: !1332, line: 47, type: !2634)
!10177 = !DILocation(line: 0, scope: !10171)
!10178 = !DILocation(line: 50, column: 13, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10171, file: !1332, line: 50, column: 6)
!10180 = !DILocation(line: 50, column: 28, scope: !10179)
!10181 = !DILocation(line: 50, column: 6, scope: !10171)
!10182 = !DILocation(line: 53, column: 11, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10179, file: !1332, line: 50, column: 34)
!10184 = !DILocation(line: 55, column: 14, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10183, file: !1332, line: 55, column: 7)
!10186 = !DILocation(line: 55, column: 35, scope: !10185)
!10187 = !DILocation(line: 55, column: 7, scope: !10183)
!10188 = !DILocation(line: 56, column: 14, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !1332, line: 56, column: 8)
!10190 = distinct !DILexicalBlock(scope: !10185, file: !1332, line: 55, column: 41)
!10191 = !DILocation(line: 56, column: 8, scope: !10190)
!10192 = !DILocation(line: 0, scope: !10185)
!10193 = !DILocation(line: 66, column: 14, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10183, file: !1332, line: 66, column: 7)
!10195 = !DILocation(line: 66, column: 30, scope: !10194)
!10196 = !DILocation(line: 66, column: 7, scope: !10183)
!10197 = !DILocation(line: 67, column: 12, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10194, file: !1332, line: 66, column: 36)
!10199 = !DILocation(line: 68, column: 3, scope: !10198)
!10200 = !DILocation(line: 68, column: 21, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10194, file: !1332, line: 68, column: 14)
!10202 = !DILocation(line: 68, column: 39, scope: !10201)
!10203 = !DILocation(line: 68, column: 14, scope: !10194)
!10204 = !DILocation(line: 69, column: 12, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10201, file: !1332, line: 68, column: 45)
!10206 = !DILocation(line: 70, column: 3, scope: !10205)
!10207 = !DILocation(line: 72, column: 21, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10179, file: !1332, line: 72, column: 14)
!10209 = !DILocation(line: 72, column: 35, scope: !10208)
!10210 = !DILocation(line: 72, column: 14, scope: !10179)
!10211 = !DILocation(line: 77, column: 14, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10213, file: !1332, line: 77, column: 7)
!10213 = distinct !DILexicalBlock(scope: !10208, file: !1332, line: 72, column: 41)
!10214 = !DILocation(line: 77, column: 30, scope: !10212)
!10215 = !DILocation(line: 77, column: 7, scope: !10213)
!10216 = !DILocation(line: 0, scope: !10179)
!10217 = !DILocation(line: 90, column: 1, scope: !10171)
!10218 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1332, file: !1332, line: 157, type: !10219, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10221)
!10219 = !DISubroutineType(types: !10220)
!10220 = !{null, !1200, !103, !103, !103}
!10221 = !{!10222, !10223, !10224, !10225, !10226, !10227, !10228, !10229, !10230, !10231, !10232}
!10222 = !DILocalVariable(name: "dev", arg: 1, scope: !10218, file: !1332, line: 157, type: !1200)
!10223 = !DILocalVariable(name: "pin", arg: 2, scope: !10218, file: !1332, line: 157, type: !103)
!10224 = !DILocalVariable(name: "conf", arg: 3, scope: !10218, file: !1332, line: 158, type: !103)
!10225 = !DILocalVariable(name: "func", arg: 4, scope: !10218, file: !1332, line: 158, type: !103)
!10226 = !DILocalVariable(name: "cfg", scope: !10218, file: !1332, line: 160, type: !9742)
!10227 = !DILocalVariable(name: "gpio", scope: !10218, file: !1332, line: 161, type: !1267)
!10228 = !DILocalVariable(name: "pin_ll", scope: !10218, file: !1332, line: 163, type: !103)
!10229 = !DILocalVariable(name: "mode", scope: !10218, file: !1332, line: 227, type: !32)
!10230 = !DILocalVariable(name: "otype", scope: !10218, file: !1332, line: 227, type: !32)
!10231 = !DILocalVariable(name: "ospeed", scope: !10218, file: !1332, line: 227, type: !32)
!10232 = !DILocalVariable(name: "pupd", scope: !10218, file: !1332, line: 227, type: !32)
!10233 = !DILocation(line: 0, scope: !10218)
!10234 = !DILocation(line: 160, column: 45, scope: !10218)
!10235 = !DILocation(line: 161, column: 44, scope: !10218)
!10236 = !DILocation(line: 163, column: 15, scope: !10218)
!10237 = !DILocation(line: 229, column: 14, scope: !10218)
!10238 = !DILocation(line: 246, column: 47, scope: !10218)
!10239 = !DILocation(line: 246, column: 2, scope: !10218)
!10240 = !DILocation(line: 248, column: 43, scope: !10218)
!10241 = !DILocation(line: 248, column: 2, scope: !10218)
!10242 = !DILocation(line: 250, column: 40, scope: !10218)
!10243 = !DILocation(line: 250, column: 2, scope: !10218)
!10244 = !DILocation(line: 252, column: 11, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10218, file: !1332, line: 252, column: 6)
!10246 = !DILocation(line: 252, column: 6, scope: !10218)
!10247 = !DILocation(line: 253, column: 11, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10249, file: !1332, line: 253, column: 7)
!10249 = distinct !DILexicalBlock(scope: !10245, file: !1332, line: 252, column: 36)
!10250 = !DILocation(line: 253, column: 7, scope: !10249)
!10251 = !DILocation(line: 254, column: 4, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10248, file: !1332, line: 253, column: 16)
!10253 = !DILocation(line: 255, column: 3, scope: !10252)
!10254 = !DILocation(line: 256, column: 4, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10248, file: !1332, line: 255, column: 10)
!10256 = !DILocation(line: 260, column: 40, scope: !10218)
!10257 = !DILocation(line: 260, column: 2, scope: !10218)
!10258 = !DILocation(line: 265, column: 1, scope: !10218)
!10259 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1332, file: !1332, line: 137, type: !10065, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10260)
!10260 = !{!10261, !10262}
!10261 = !DILocalVariable(name: "pin", arg: 1, scope: !10259, file: !1332, line: 137, type: !103)
!10262 = !DILocalVariable(name: "pinval", scope: !10259, file: !1332, line: 139, type: !121)
!10263 = !DILocation(line: 0, scope: !10259)
!10264 = !DILocation(line: 149, column: 13, scope: !10259)
!10265 = !DILocation(line: 151, column: 2, scope: !10259)
!10266 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10141, file: !10141, line: 343, type: !10267, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10269)
!10267 = !DISubroutineType(types: !10268)
!10268 = !{null, !1267, !121, !121}
!10269 = !{!10270, !10271, !10272}
!10270 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10266, file: !10141, line: 343, type: !1267)
!10271 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10266, file: !10141, line: 343, type: !121)
!10272 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10266, file: !10141, line: 343, type: !121)
!10273 = !DILocation(line: 0, scope: !10266)
!10274 = !DILocation(line: 345, column: 3, scope: !10266)
!10275 = !DILocation(line: 346, column: 1, scope: !10266)
!10276 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10141, file: !10141, line: 414, type: !10267, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10277)
!10277 = !{!10278, !10279, !10280}
!10278 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10276, file: !10141, line: 414, type: !1267)
!10279 = !DILocalVariable(name: "Pin", arg: 2, scope: !10276, file: !10141, line: 414, type: !121)
!10280 = !DILocalVariable(name: "Speed", arg: 3, scope: !10276, file: !10141, line: 414, type: !121)
!10281 = !DILocation(line: 0, scope: !10276)
!10282 = !DILocation(line: 416, column: 3, scope: !10276)
!10283 = !DILocation(line: 0, scope: !10086, inlinedAt: !10284)
!10284 = distinct !DILocation(line: 416, column: 3, scope: !10276)
!10285 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10284)
!10286 = !DILocation(line: 0, scope: !10094, inlinedAt: !10287)
!10287 = distinct !DILocation(line: 416, column: 3, scope: !10276)
!10288 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10287)
!10289 = !DILocation(line: 0, scope: !10086, inlinedAt: !10290)
!10290 = distinct !DILocation(line: 416, column: 3, scope: !10276)
!10291 = !DILocation(line: 0, scope: !10094, inlinedAt: !10292)
!10292 = distinct !DILocation(line: 416, column: 3, scope: !10276)
!10293 = !DILocation(line: 418, column: 1, scope: !10276)
!10294 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10141, file: !10141, line: 485, type: !10267, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10295)
!10295 = !{!10296, !10297, !10298}
!10296 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10294, file: !10141, line: 485, type: !1267)
!10297 = !DILocalVariable(name: "Pin", arg: 2, scope: !10294, file: !10141, line: 485, type: !121)
!10298 = !DILocalVariable(name: "Pull", arg: 3, scope: !10294, file: !10141, line: 485, type: !121)
!10299 = !DILocation(line: 0, scope: !10294)
!10300 = !DILocation(line: 487, column: 3, scope: !10294)
!10301 = !DILocation(line: 0, scope: !10086, inlinedAt: !10302)
!10302 = distinct !DILocation(line: 487, column: 3, scope: !10294)
!10303 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10302)
!10304 = !DILocation(line: 0, scope: !10094, inlinedAt: !10305)
!10305 = distinct !DILocation(line: 487, column: 3, scope: !10294)
!10306 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10305)
!10307 = !DILocation(line: 0, scope: !10086, inlinedAt: !10308)
!10308 = distinct !DILocation(line: 487, column: 3, scope: !10294)
!10309 = !DILocation(line: 0, scope: !10094, inlinedAt: !10310)
!10310 = distinct !DILocation(line: 487, column: 3, scope: !10294)
!10311 = !DILocation(line: 488, column: 1, scope: !10294)
!10312 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10141, file: !10141, line: 557, type: !10267, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10313)
!10313 = !{!10314, !10315, !10316}
!10314 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10312, file: !10141, line: 557, type: !1267)
!10315 = !DILocalVariable(name: "Pin", arg: 2, scope: !10312, file: !10141, line: 557, type: !121)
!10316 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10312, file: !10141, line: 557, type: !121)
!10317 = !DILocation(line: 0, scope: !10312)
!10318 = !DILocation(line: 559, column: 3, scope: !10312)
!10319 = !DILocation(line: 0, scope: !10086, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 559, column: 3, scope: !10312)
!10321 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10320)
!10322 = !DILocation(line: 0, scope: !10094, inlinedAt: !10323)
!10323 = distinct !DILocation(line: 559, column: 3, scope: !10312)
!10324 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10323)
!10325 = !DILocation(line: 0, scope: !10086, inlinedAt: !10326)
!10326 = distinct !DILocation(line: 559, column: 3, scope: !10312)
!10327 = !DILocation(line: 0, scope: !10094, inlinedAt: !10328)
!10328 = distinct !DILocation(line: 559, column: 3, scope: !10312)
!10329 = !DILocation(line: 561, column: 1, scope: !10312)
!10330 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10141, file: !10141, line: 634, type: !10267, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10331)
!10331 = !{!10332, !10333, !10334}
!10332 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10330, file: !10141, line: 634, type: !1267)
!10333 = !DILocalVariable(name: "Pin", arg: 2, scope: !10330, file: !10141, line: 634, type: !121)
!10334 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10330, file: !10141, line: 634, type: !121)
!10335 = !DILocation(line: 0, scope: !10330)
!10336 = !DILocation(line: 636, column: 3, scope: !10330)
!10337 = !DILocation(line: 0, scope: !10086, inlinedAt: !10338)
!10338 = distinct !DILocation(line: 636, column: 3, scope: !10330)
!10339 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10338)
!10340 = !DILocation(line: 0, scope: !10094, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 636, column: 3, scope: !10330)
!10342 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10341)
!10343 = !DILocation(line: 0, scope: !10086, inlinedAt: !10344)
!10344 = distinct !DILocation(line: 636, column: 3, scope: !10330)
!10345 = !DILocation(line: 0, scope: !10094, inlinedAt: !10346)
!10346 = distinct !DILocation(line: 636, column: 3, scope: !10330)
!10347 = !DILocation(line: 638, column: 1, scope: !10330)
!10348 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10141, file: !10141, line: 274, type: !10267, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10349)
!10349 = !{!10350, !10351, !10352}
!10350 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10348, file: !10141, line: 274, type: !1267)
!10351 = !DILocalVariable(name: "Pin", arg: 2, scope: !10348, file: !10141, line: 274, type: !121)
!10352 = !DILocalVariable(name: "Mode", arg: 3, scope: !10348, file: !10141, line: 274, type: !121)
!10353 = !DILocation(line: 0, scope: !10348)
!10354 = !DILocation(line: 276, column: 3, scope: !10348)
!10355 = !DILocation(line: 0, scope: !10086, inlinedAt: !10356)
!10356 = distinct !DILocation(line: 276, column: 3, scope: !10348)
!10357 = !DILocation(line: 380, column: 4, scope: !10086, inlinedAt: !10356)
!10358 = !DILocation(line: 0, scope: !10094, inlinedAt: !10359)
!10359 = distinct !DILocation(line: 276, column: 3, scope: !10348)
!10360 = !DILocation(line: 414, column: 7, scope: !10094, inlinedAt: !10359)
!10361 = !DILocation(line: 0, scope: !10086, inlinedAt: !10362)
!10362 = distinct !DILocation(line: 276, column: 3, scope: !10348)
!10363 = !DILocation(line: 0, scope: !10094, inlinedAt: !10364)
!10364 = distinct !DILocation(line: 276, column: 3, scope: !10348)
!10365 = !DILocation(line: 277, column: 1, scope: !10348)
!10366 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1332, file: !1332, line: 698, type: !1345, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10367)
!10367 = !{!10368, !10369, !10370}
!10368 = !DILocalVariable(name: "dev", arg: 1, scope: !10366, file: !1332, line: 698, type: !1200)
!10369 = !DILocalVariable(name: "data", scope: !10366, file: !1332, line: 700, type: !9809)
!10370 = !DILocalVariable(name: "ret", scope: !10366, file: !1332, line: 701, type: !103)
!10371 = !DILocation(line: 0, scope: !10366)
!10372 = !DILocation(line: 700, column: 38, scope: !10366)
!10373 = !DILocation(line: 703, column: 8, scope: !10366)
!10374 = !DILocation(line: 703, column: 12, scope: !10366)
!10375 = !DILocation(line: 705, column: 7, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10366, file: !1332, line: 705, column: 6)
!10377 = !DILocation(line: 705, column: 6, scope: !10366)
!10378 = !DILocation(line: 722, column: 8, scope: !10366)
!10379 = !DILocation(line: 723, column: 10, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10366, file: !1332, line: 723, column: 6)
!10381 = !DILocation(line: 723, column: 6, scope: !10366)
!10382 = !DILocation(line: 731, column: 1, scope: !10366)
!10383 = distinct !DISubprogram(name: "device_is_ready", scope: !6639, file: !6639, line: 47, type: !10384, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10386)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{!170, !1200}
!10386 = !{!10387}
!10387 = !DILocalVariable(name: "dev", arg: 1, scope: !10383, file: !6639, line: 47, type: !1200)
!10388 = !DILocation(line: 0, scope: !10383)
!10389 = !DILocation(line: 55, column: 2, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10383, file: !6639, line: 55, column: 2)
!10391 = !{i64 2152400380}
!10392 = !DILocation(line: 56, column: 9, scope: !10383)
!10393 = !DILocation(line: 56, column: 2, scope: !10383)
!10394 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1332, file: !1332, line: 270, type: !10395, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10397)
!10395 = !DISubroutineType(types: !10396)
!10396 = !{!103, !1200, !170}
!10397 = !{!10398, !10399, !10400, !10401, !10402}
!10398 = !DILocalVariable(name: "dev", arg: 1, scope: !10394, file: !1332, line: 270, type: !1200)
!10399 = !DILocalVariable(name: "on", arg: 2, scope: !10394, file: !1332, line: 270, type: !170)
!10400 = !DILocalVariable(name: "cfg", scope: !10394, file: !1332, line: 272, type: !9742)
!10401 = !DILocalVariable(name: "ret", scope: !10394, file: !1332, line: 273, type: !103)
!10402 = !DILocalVariable(name: "clk", scope: !10394, file: !1332, line: 278, type: !10032)
!10403 = !DILocation(line: 0, scope: !10394)
!10404 = !DILocation(line: 272, column: 45, scope: !10394)
!10405 = !DILocation(line: 282, column: 38, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !1332, line: 280, column: 10)
!10407 = distinct !DILexicalBlock(scope: !10394, file: !1332, line: 280, column: 6)
!10408 = !DILocation(line: 282, column: 6, scope: !10406)
!10409 = !DILocation(line: 281, column: 9, scope: !10406)
!10410 = !DILocation(line: 293, column: 1, scope: !10394)
!10411 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !10384, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10412)
!10412 = !{!10413}
!10413 = !DILocalVariable(name: "dev", arg: 1, scope: !10411, file: !154, line: 730, type: !1200)
!10414 = !DILocation(line: 0, scope: !10411)
!10415 = !DILocation(line: 732, column: 9, scope: !10411)
!10416 = !DILocation(line: 732, column: 2, scope: !10411)
!10417 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1332, file: !1332, line: 496, type: !10418, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1182, retainedNodes: !10420)
!10418 = !DISubroutineType(types: !10419)
!10419 = !{!103, !1200, !103, !103, !103}
!10420 = !{!10421, !10422, !10423, !10424, !10425, !10426}
!10421 = !DILocalVariable(name: "dev", arg: 1, scope: !10417, file: !1332, line: 496, type: !1200)
!10422 = !DILocalVariable(name: "pin", arg: 2, scope: !10417, file: !1332, line: 496, type: !103)
!10423 = !DILocalVariable(name: "conf", arg: 3, scope: !10417, file: !1332, line: 496, type: !103)
!10424 = !DILocalVariable(name: "func", arg: 4, scope: !10417, file: !1332, line: 496, type: !103)
!10425 = !DILocalVariable(name: "ret", scope: !10417, file: !1332, line: 498, type: !103)
!10426 = !DILocalVariable(name: "gpio_out", scope: !10427, file: !1332, line: 508, type: !121)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !1332, line: 507, column: 27)
!10428 = distinct !DILexicalBlock(scope: !10417, file: !1332, line: 507, column: 6)
!10429 = !DILocation(line: 0, scope: !10417)
!10430 = !DILocation(line: 505, column: 2, scope: !10417)
!10431 = !DILocation(line: 507, column: 11, scope: !10428)
!10432 = !DILocation(line: 507, column: 6, scope: !10417)
!10433 = !DILocation(line: 508, column: 28, scope: !10427)
!10434 = !DILocation(line: 0, scope: !10427)
!10435 = !DILocation(line: 510, column: 16, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10427, file: !1332, line: 510, column: 7)
!10437 = !DILocation(line: 0, scope: !10436)
!10438 = !DILocation(line: 510, column: 7, scope: !10427)
!10439 = !DILocation(line: 511, column: 4, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10436, file: !1332, line: 510, column: 32)
!10441 = !DILocation(line: 512, column: 3, scope: !10440)
!10442 = !DILocation(line: 513, column: 4, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !1332, line: 512, column: 39)
!10444 = distinct !DILexicalBlock(scope: !10436, file: !1332, line: 512, column: 14)
!10445 = !DILocation(line: 514, column: 3, scope: !10443)
!10446 = !DILocation(line: 518, column: 1, scope: !10417)
!10447 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1619, file: !1619, line: 526, type: !1493, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10448)
!10448 = !{!10449, !10450, !10451}
!10449 = !DILocalVariable(name: "dev", arg: 1, scope: !10447, file: !1619, line: 526, type: !1495)
!10450 = !DILocalVariable(name: "c", arg: 2, scope: !10447, file: !1619, line: 526, type: !237)
!10451 = !DILocalVariable(name: "config", scope: !10447, file: !1619, line: 528, type: !10452)
!10452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!10453 = !DILocation(line: 0, scope: !10447)
!10454 = !DILocation(line: 528, column: 48, scope: !10447)
!10455 = !DILocation(line: 531, column: 40, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10447, file: !1619, line: 531, column: 6)
!10457 = !DILocation(line: 531, column: 6, scope: !10456)
!10458 = !DILocation(line: 531, column: 6, scope: !10447)
!10459 = !DILocation(line: 532, column: 34, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10456, file: !1619, line: 531, column: 48)
!10461 = !DILocation(line: 532, column: 3, scope: !10460)
!10462 = !DILocation(line: 533, column: 2, scope: !10460)
!10463 = !DILocation(line: 539, column: 42, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10447, file: !1619, line: 539, column: 6)
!10465 = !DILocation(line: 539, column: 7, scope: !10464)
!10466 = !DILocation(line: 539, column: 6, scope: !10447)
!10467 = !DILocation(line: 543, column: 52, scope: !10447)
!10468 = !DILocation(line: 543, column: 22, scope: !10447)
!10469 = !DILocation(line: 543, column: 5, scope: !10447)
!10470 = !DILocation(line: 545, column: 2, scope: !10447)
!10471 = !DILocation(line: 546, column: 1, scope: !10447)
!10472 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1619, file: !1619, line: 548, type: !1512, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10473)
!10473 = !{!10474, !10475, !10476, !10477}
!10474 = !DILocalVariable(name: "dev", arg: 1, scope: !10472, file: !1619, line: 548, type: !1495)
!10475 = !DILocalVariable(name: "c", arg: 2, scope: !10472, file: !1619, line: 549, type: !168)
!10476 = !DILocalVariable(name: "config", scope: !10472, file: !1619, line: 551, type: !10452)
!10477 = !DILocalVariable(name: "key", scope: !10472, file: !1619, line: 555, type: !32)
!10478 = !DILocation(line: 0, scope: !10472)
!10479 = !DILocation(line: 551, column: 48, scope: !10472)
!10480 = !DILocation(line: 562, column: 2, scope: !10472)
!10481 = !DILocation(line: 563, column: 41, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !1619, line: 563, column: 7)
!10483 = distinct !DILexicalBlock(scope: !10472, file: !1619, line: 562, column: 12)
!10484 = !DILocation(line: 563, column: 7, scope: !10482)
!10485 = !DILocation(line: 563, column: 7, scope: !10483)
!10486 = !DILocation(line: 55, column: 2, scope: !10487, inlinedAt: !10491)
!10487 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10488)
!10488 = !{!10489, !10490}
!10489 = !DILocalVariable(name: "key", scope: !10487, file: !5761, line: 44, type: !32)
!10490 = !DILocalVariable(name: "tmp", scope: !10487, file: !5761, line: 53, type: !32)
!10491 = distinct !DILocation(line: 564, column: 10, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10482, file: !1619, line: 563, column: 49)
!10493 = !{i64 1698069}
!10494 = !DILocation(line: 0, scope: !10487, inlinedAt: !10491)
!10495 = !DILocation(line: 565, column: 42, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10492, file: !1619, line: 565, column: 8)
!10497 = !DILocation(line: 565, column: 8, scope: !10496)
!10498 = !DILocation(line: 565, column: 8, scope: !10492)
!10499 = !DILocalVariable(name: "key", arg: 1, scope: !10500, file: !5761, line: 84, type: !32)
!10500 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10501)
!10501 = !{!10499}
!10502 = !DILocation(line: 0, scope: !10500, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 568, column: 4, scope: !10492)
!10504 = !DILocation(line: 95, column: 2, scope: !10500, inlinedAt: !10503)
!10505 = !{i64 1698886}
!10506 = !DILocation(line: 569, column: 3, scope: !10492)
!10507 = distinct !{!10507, !10480, !10508}
!10508 = !DILocation(line: 570, column: 2, scope: !10472)
!10509 = !DILocation(line: 592, column: 33, scope: !10472)
!10510 = !DILocation(line: 592, column: 2, scope: !10472)
!10511 = !DILocation(line: 0, scope: !10500, inlinedAt: !10512)
!10512 = distinct !DILocation(line: 593, column: 2, scope: !10472)
!10513 = !DILocation(line: 95, column: 2, scope: !10500, inlinedAt: !10512)
!10514 = !DILocation(line: 594, column: 1, scope: !10472)
!10515 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1619, file: !1619, line: 596, type: !1516, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10516)
!10516 = !{!10517, !10518, !10519}
!10517 = !DILocalVariable(name: "dev", arg: 1, scope: !10515, file: !1619, line: 596, type: !1495)
!10518 = !DILocalVariable(name: "config", scope: !10515, file: !1619, line: 598, type: !10452)
!10519 = !DILocalVariable(name: "err", scope: !10515, file: !1619, line: 599, type: !121)
!10520 = !DILocation(line: 0, scope: !10515)
!10521 = !DILocation(line: 598, column: 48, scope: !10515)
!10522 = !DILocation(line: 606, column: 40, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 606, column: 6)
!10524 = !DILocation(line: 606, column: 6, scope: !10523)
!10525 = !DILocation(line: 606, column: 6, scope: !10515)
!10526 = !DILocation(line: 610, column: 39, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 610, column: 6)
!10528 = !DILocation(line: 610, column: 6, scope: !10527)
!10529 = !DILocation(line: 610, column: 6, scope: !10515)
!10530 = !DILocation(line: 614, column: 39, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 614, column: 6)
!10532 = !DILocation(line: 614, column: 6, scope: !10531)
!10533 = !DILocation(line: 614, column: 6, scope: !10515)
!10534 = !DILocation(line: 619, column: 40, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 619, column: 6)
!10536 = !DILocation(line: 619, column: 6, scope: !10535)
!10537 = !DILocation(line: 619, column: 6, scope: !10515)
!10538 = !DILocation(line: 623, column: 10, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 623, column: 6)
!10540 = !DILocation(line: 623, column: 6, scope: !10515)
!10541 = !DILocation(line: 624, column: 34, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10539, file: !1619, line: 623, column: 24)
!10543 = !DILocation(line: 624, column: 3, scope: !10542)
!10544 = !DILocation(line: 625, column: 2, scope: !10542)
!10545 = !DILocation(line: 632, column: 10, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 632, column: 6)
!10547 = !DILocation(line: 632, column: 6, scope: !10515)
!10548 = !DILocation(line: 633, column: 34, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10546, file: !1619, line: 632, column: 32)
!10550 = !DILocation(line: 633, column: 3, scope: !10549)
!10551 = !DILocation(line: 634, column: 2, scope: !10549)
!10552 = !DILocation(line: 636, column: 10, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 636, column: 6)
!10554 = !DILocation(line: 636, column: 6, scope: !10515)
!10555 = !DILocation(line: 637, column: 33, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10553, file: !1619, line: 636, column: 31)
!10557 = !DILocation(line: 637, column: 3, scope: !10556)
!10558 = !DILocation(line: 638, column: 2, scope: !10556)
!10559 = !DILocation(line: 640, column: 10, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10515, file: !1619, line: 640, column: 6)
!10561 = !DILocation(line: 640, column: 6, scope: !10515)
!10562 = !DILocation(line: 641, column: 33, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10560, file: !1619, line: 640, column: 32)
!10564 = !DILocation(line: 641, column: 3, scope: !10563)
!10565 = !DILocation(line: 642, column: 2, scope: !10563)
!10566 = !DILocation(line: 646, column: 32, scope: !10515)
!10567 = !DILocation(line: 646, column: 2, scope: !10515)
!10568 = !DILocation(line: 648, column: 2, scope: !10515)
!10569 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1619, file: !1619, line: 419, type: !1520, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10570)
!10570 = !{!10571, !10572, !10573, !10574, !10576, !10577, !10578, !10579}
!10571 = !DILocalVariable(name: "dev", arg: 1, scope: !10569, file: !1619, line: 419, type: !1495)
!10572 = !DILocalVariable(name: "cfg", arg: 2, scope: !10569, file: !1619, line: 420, type: !1522)
!10573 = !DILocalVariable(name: "config", scope: !10569, file: !1619, line: 422, type: !10452)
!10574 = !DILocalVariable(name: "data", scope: !10569, file: !1619, line: 423, type: !10575)
!10575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!10576 = !DILocalVariable(name: "parity", scope: !10569, file: !1619, line: 424, type: !7041)
!10577 = !DILocalVariable(name: "stopbits", scope: !10569, file: !1619, line: 425, type: !7041)
!10578 = !DILocalVariable(name: "databits", scope: !10569, file: !1619, line: 426, type: !7041)
!10579 = !DILocalVariable(name: "flowctrl", scope: !10569, file: !1619, line: 428, type: !7041)
!10580 = !DILocation(line: 0, scope: !10569)
!10581 = !DILocation(line: 422, column: 48, scope: !10569)
!10582 = !DILocation(line: 423, column: 38, scope: !10569)
!10583 = !DILocation(line: 424, column: 56, scope: !10569)
!10584 = !DILocation(line: 424, column: 51, scope: !10569)
!10585 = !DILocation(line: 424, column: 26, scope: !10569)
!10586 = !DILocation(line: 425, column: 60, scope: !10569)
!10587 = !DILocation(line: 425, column: 55, scope: !10569)
!10588 = !DILocation(line: 425, column: 28, scope: !10569)
!10589 = !DILocation(line: 426, column: 60, scope: !10569)
!10590 = !DILocation(line: 426, column: 55, scope: !10569)
!10591 = !DILocation(line: 426, column: 28, scope: !10569)
!10592 = !DILocation(line: 428, column: 58, scope: !10569)
!10593 = !DILocation(line: 428, column: 53, scope: !10569)
!10594 = !DILocation(line: 428, column: 28, scope: !10569)
!10595 = !DILocation(line: 431, column: 44, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 431, column: 6)
!10597 = !DILocation(line: 438, column: 22, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 437, column: 6)
!10599 = !DILocation(line: 437, column: 6, scope: !10569)
!10600 = !DILocation(line: 448, column: 6, scope: !10569)
!10601 = !DILocation(line: 465, column: 47, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 465, column: 6)
!10603 = !DILocation(line: 475, column: 21, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 475, column: 6)
!10605 = !DILocation(line: 475, column: 6, scope: !10569)
!10606 = !DILocation(line: 476, column: 8, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !1619, line: 476, column: 7)
!10608 = distinct !DILexicalBlock(scope: !10604, file: !1619, line: 475, column: 49)
!10609 = !DILocation(line: 477, column: 34, scope: !10607)
!10610 = !DILocation(line: 476, column: 7, scope: !10608)
!10611 = !DILocation(line: 482, column: 27, scope: !10569)
!10612 = !DILocation(line: 482, column: 2, scope: !10569)
!10613 = !DILocation(line: 484, column: 16, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 484, column: 6)
!10615 = !DILocation(line: 484, column: 13, scope: !10614)
!10616 = !DILocation(line: 484, column: 6, scope: !10569)
!10617 = !DILocation(line: 485, column: 3, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10614, file: !1619, line: 484, column: 44)
!10619 = !DILocation(line: 486, column: 2, scope: !10618)
!10620 = !DILocation(line: 488, column: 18, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 488, column: 6)
!10622 = !DILocation(line: 488, column: 15, scope: !10621)
!10623 = !DILocation(line: 488, column: 6, scope: !10569)
!10624 = !DILocation(line: 489, column: 3, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10621, file: !1619, line: 488, column: 48)
!10626 = !DILocation(line: 490, column: 2, scope: !10625)
!10627 = !DILocation(line: 492, column: 18, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 492, column: 6)
!10629 = !DILocation(line: 492, column: 15, scope: !10628)
!10630 = !DILocation(line: 492, column: 6, scope: !10569)
!10631 = !DILocation(line: 493, column: 3, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10628, file: !1619, line: 492, column: 48)
!10633 = !DILocation(line: 494, column: 2, scope: !10632)
!10634 = !DILocation(line: 496, column: 18, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 496, column: 6)
!10636 = !DILocation(line: 496, column: 15, scope: !10635)
!10637 = !DILocation(line: 496, column: 6, scope: !10569)
!10638 = !DILocation(line: 497, column: 3, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10635, file: !1619, line: 496, column: 46)
!10640 = !DILocation(line: 498, column: 2, scope: !10639)
!10641 = !DILocation(line: 500, column: 11, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10569, file: !1619, line: 500, column: 6)
!10643 = !DILocation(line: 500, column: 29, scope: !10642)
!10644 = !DILocation(line: 500, column: 20, scope: !10642)
!10645 = !DILocation(line: 500, column: 6, scope: !10569)
!10646 = !DILocation(line: 501, column: 3, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10642, file: !1619, line: 500, column: 40)
!10648 = !DILocation(line: 502, column: 26, scope: !10647)
!10649 = !DILocation(line: 502, column: 19, scope: !10647)
!10650 = !DILocation(line: 503, column: 2, scope: !10647)
!10651 = !DILocation(line: 505, column: 26, scope: !10569)
!10652 = !DILocation(line: 505, column: 2, scope: !10569)
!10653 = !DILocation(line: 506, column: 2, scope: !10569)
!10654 = !DILocation(line: 507, column: 1, scope: !10569)
!10655 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1619, file: !1619, line: 509, type: !1533, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10656)
!10656 = !{!10657, !10658, !10659}
!10657 = !DILocalVariable(name: "dev", arg: 1, scope: !10655, file: !1619, line: 509, type: !1495)
!10658 = !DILocalVariable(name: "cfg", arg: 2, scope: !10655, file: !1619, line: 510, type: !1535)
!10659 = !DILocalVariable(name: "data", scope: !10655, file: !1619, line: 512, type: !10575)
!10660 = !DILocation(line: 0, scope: !10655)
!10661 = !DILocation(line: 512, column: 38, scope: !10655)
!10662 = !DILocation(line: 514, column: 24, scope: !10655)
!10663 = !DILocation(line: 514, column: 7, scope: !10655)
!10664 = !DILocation(line: 514, column: 16, scope: !10655)
!10665 = !DILocation(line: 515, column: 41, scope: !10655)
!10666 = !{i32 0, i32 1537}
!10667 = !DILocation(line: 515, column: 16, scope: !10655)
!10668 = !DILocation(line: 515, column: 7, scope: !10655)
!10669 = !DILocation(line: 515, column: 14, scope: !10655)
!10670 = !DILocation(line: 517, column: 3, scope: !10655)
!10671 = !{i32 0, i32 12289}
!10672 = !DILocation(line: 516, column: 19, scope: !10655)
!10673 = !DILocation(line: 516, column: 7, scope: !10655)
!10674 = !DILocation(line: 516, column: 17, scope: !10655)
!10675 = !DILocation(line: 519, column: 3, scope: !10655)
!10676 = !DILocation(line: 519, column: 33, scope: !10655)
!10677 = !DILocation(line: 518, column: 19, scope: !10655)
!10678 = !DILocation(line: 518, column: 7, scope: !10655)
!10679 = !DILocation(line: 518, column: 17, scope: !10655)
!10680 = !DILocation(line: 521, column: 3, scope: !10655)
!10681 = !{i32 0, i32 769}
!10682 = !DILocation(line: 520, column: 19, scope: !10655)
!10683 = !DILocation(line: 520, column: 7, scope: !10655)
!10684 = !DILocation(line: 520, column: 17, scope: !10655)
!10685 = !DILocation(line: 522, column: 2, scope: !10655)
!10686 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1619, file: !1619, line: 661, type: !1538, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10687)
!10687 = !{!10688, !10689, !10690, !10691, !10692, !10693}
!10688 = !DILocalVariable(name: "dev", arg: 1, scope: !10686, file: !1619, line: 661, type: !1495)
!10689 = !DILocalVariable(name: "tx_data", arg: 2, scope: !10686, file: !1619, line: 662, type: !268)
!10690 = !DILocalVariable(name: "size", arg: 3, scope: !10686, file: !1619, line: 663, type: !103)
!10691 = !DILocalVariable(name: "config", scope: !10686, file: !1619, line: 665, type: !10452)
!10692 = !DILocalVariable(name: "num_tx", scope: !10686, file: !1619, line: 666, type: !167)
!10693 = !DILocalVariable(name: "key", scope: !10686, file: !1619, line: 667, type: !32)
!10694 = !DILocation(line: 0, scope: !10686)
!10695 = !DILocation(line: 665, column: 48, scope: !10686)
!10696 = !DILocation(line: 669, column: 41, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10686, file: !1619, line: 669, column: 6)
!10698 = !DILocation(line: 669, column: 7, scope: !10697)
!10699 = !DILocation(line: 669, column: 6, scope: !10686)
!10700 = !DILocation(line: 55, column: 2, scope: !10487, inlinedAt: !10701)
!10701 = distinct !DILocation(line: 674, column: 8, scope: !10686)
!10702 = !DILocation(line: 0, scope: !10487, inlinedAt: !10701)
!10703 = !DILocation(line: 676, column: 24, scope: !10686)
!10704 = !DILocation(line: 676, column: 29, scope: !10686)
!10705 = !DILocation(line: 677, column: 43, scope: !10686)
!10706 = !DILocation(line: 677, column: 9, scope: !10686)
!10707 = !DILocation(line: 676, column: 2, scope: !10686)
!10708 = !DILocation(line: 681, column: 34, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10686, file: !1619, line: 677, column: 51)
!10710 = !DILocation(line: 681, column: 55, scope: !10709)
!10711 = !DILocation(line: 681, column: 41, scope: !10709)
!10712 = !DILocation(line: 681, column: 3, scope: !10709)
!10713 = !DILocation(line: 676, column: 17, scope: !10686)
!10714 = distinct !{!10714, !10707, !10715}
!10715 = !DILocation(line: 682, column: 2, scope: !10686)
!10716 = !DILocation(line: 0, scope: !10500, inlinedAt: !10717)
!10717 = distinct !DILocation(line: 684, column: 2, scope: !10686)
!10718 = !DILocation(line: 95, column: 2, scope: !10500, inlinedAt: !10717)
!10719 = !DILocation(line: 686, column: 2, scope: !10686)
!10720 = !DILocation(line: 687, column: 1, scope: !10686)
!10721 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1619, file: !1619, line: 689, type: !1542, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10722)
!10722 = !{!10723, !10724, !10725, !10726, !10727}
!10723 = !DILocalVariable(name: "dev", arg: 1, scope: !10721, file: !1619, line: 689, type: !1495)
!10724 = !DILocalVariable(name: "rx_data", arg: 2, scope: !10721, file: !1619, line: 689, type: !274)
!10725 = !DILocalVariable(name: "size", arg: 3, scope: !10721, file: !1619, line: 690, type: !275)
!10726 = !DILocalVariable(name: "config", scope: !10721, file: !1619, line: 692, type: !10452)
!10727 = !DILocalVariable(name: "num_rx", scope: !10721, file: !1619, line: 693, type: !167)
!10728 = !DILocation(line: 0, scope: !10721)
!10729 = !DILocation(line: 692, column: 48, scope: !10721)
!10730 = !DILocation(line: 696, column: 44, scope: !10721)
!10731 = !DILocation(line: 695, column: 24, scope: !10721)
!10732 = !DILocation(line: 695, column: 29, scope: !10721)
!10733 = !DILocation(line: 696, column: 9, scope: !10721)
!10734 = !DILocation(line: 695, column: 2, scope: !10721)
!10735 = !DILocation(line: 700, column: 53, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10721, file: !1619, line: 696, column: 52)
!10737 = !DILocation(line: 700, column: 23, scope: !10736)
!10738 = !DILocation(line: 700, column: 17, scope: !10736)
!10739 = !DILocation(line: 700, column: 3, scope: !10736)
!10740 = !DILocation(line: 700, column: 21, scope: !10736)
!10741 = !DILocation(line: 703, column: 41, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10736, file: !1619, line: 703, column: 7)
!10743 = !DILocation(line: 703, column: 7, scope: !10742)
!10744 = !DILocation(line: 703, column: 7, scope: !10736)
!10745 = !DILocation(line: 704, column: 35, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10742, file: !1619, line: 703, column: 49)
!10747 = !DILocation(line: 704, column: 4, scope: !10746)
!10748 = !DILocation(line: 709, column: 3, scope: !10746)
!10749 = !DILocation(line: 695, column: 17, scope: !10721)
!10750 = distinct !{!10750, !10734, !10751}
!10751 = !DILocation(line: 710, column: 2, scope: !10721)
!10752 = !DILocation(line: 712, column: 2, scope: !10721)
!10753 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1619, file: !1619, line: 715, type: !1546, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10754)
!10754 = !{!10755, !10756}
!10755 = !DILocalVariable(name: "dev", arg: 1, scope: !10753, file: !1619, line: 715, type: !1495)
!10756 = !DILocalVariable(name: "config", scope: !10753, file: !1619, line: 717, type: !10452)
!10757 = !DILocation(line: 0, scope: !10753)
!10758 = !DILocation(line: 717, column: 48, scope: !10753)
!10759 = !DILocation(line: 729, column: 31, scope: !10753)
!10760 = !DILocation(line: 729, column: 2, scope: !10753)
!10761 = !DILocation(line: 734, column: 1, scope: !10753)
!10762 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1619, file: !1619, line: 736, type: !1546, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10763)
!10763 = !{!10764, !10765}
!10764 = !DILocalVariable(name: "dev", arg: 1, scope: !10762, file: !1619, line: 736, type: !1495)
!10765 = !DILocalVariable(name: "config", scope: !10762, file: !1619, line: 738, type: !10452)
!10766 = !DILocation(line: 0, scope: !10762)
!10767 = !DILocation(line: 738, column: 48, scope: !10762)
!10768 = !DILocation(line: 746, column: 32, scope: !10762)
!10769 = !DILocation(line: 746, column: 2, scope: !10762)
!10770 = !DILocation(line: 756, column: 1, scope: !10762)
!10771 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1619, file: !1619, line: 758, type: !1516, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10772)
!10772 = !{!10773, !10774}
!10773 = !DILocalVariable(name: "dev", arg: 1, scope: !10771, file: !1619, line: 758, type: !1495)
!10774 = !DILocalVariable(name: "config", scope: !10771, file: !1619, line: 760, type: !10452)
!10775 = !DILocation(line: 0, scope: !10771)
!10776 = !DILocation(line: 760, column: 48, scope: !10771)
!10777 = !DILocation(line: 762, column: 43, scope: !10771)
!10778 = !DILocation(line: 762, column: 9, scope: !10771)
!10779 = !DILocation(line: 762, column: 50, scope: !10771)
!10780 = !DILocation(line: 763, column: 35, scope: !10771)
!10781 = !DILocation(line: 763, column: 3, scope: !10771)
!10782 = !DILocation(line: 762, column: 2, scope: !10771)
!10783 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1619, file: !1619, line: 773, type: !1546, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10784)
!10784 = !{!10785, !10786}
!10785 = !DILocalVariable(name: "dev", arg: 1, scope: !10783, file: !1619, line: 773, type: !1495)
!10786 = !DILocalVariable(name: "config", scope: !10783, file: !1619, line: 775, type: !10452)
!10787 = !DILocation(line: 0, scope: !10783)
!10788 = !DILocation(line: 775, column: 48, scope: !10783)
!10789 = !DILocation(line: 777, column: 33, scope: !10783)
!10790 = !DILocation(line: 777, column: 2, scope: !10783)
!10791 = !DILocation(line: 778, column: 1, scope: !10783)
!10792 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1619, file: !1619, line: 780, type: !1546, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10793)
!10793 = !{!10794, !10795}
!10794 = !DILocalVariable(name: "dev", arg: 1, scope: !10792, file: !1619, line: 780, type: !1495)
!10795 = !DILocalVariable(name: "config", scope: !10792, file: !1619, line: 782, type: !10452)
!10796 = !DILocation(line: 0, scope: !10792)
!10797 = !DILocation(line: 782, column: 48, scope: !10792)
!10798 = !DILocation(line: 784, column: 34, scope: !10792)
!10799 = !DILocation(line: 784, column: 2, scope: !10792)
!10800 = !DILocation(line: 785, column: 1, scope: !10792)
!10801 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1619, file: !1619, line: 766, type: !1516, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10802)
!10802 = !{!10803, !10804}
!10803 = !DILocalVariable(name: "dev", arg: 1, scope: !10801, file: !1619, line: 766, type: !1495)
!10804 = !DILocalVariable(name: "config", scope: !10801, file: !1619, line: 768, type: !10452)
!10805 = !DILocation(line: 0, scope: !10801)
!10806 = !DILocation(line: 768, column: 48, scope: !10801)
!10807 = !DILocation(line: 770, column: 42, scope: !10801)
!10808 = !DILocation(line: 770, column: 9, scope: !10801)
!10809 = !DILocation(line: 770, column: 2, scope: !10801)
!10810 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1619, file: !1619, line: 787, type: !1516, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10811)
!10811 = !{!10812, !10813}
!10812 = !DILocalVariable(name: "dev", arg: 1, scope: !10810, file: !1619, line: 787, type: !1495)
!10813 = !DILocalVariable(name: "config", scope: !10810, file: !1619, line: 789, type: !10452)
!10814 = !DILocation(line: 0, scope: !10810)
!10815 = !DILocation(line: 789, column: 48, scope: !10810)
!10816 = !DILocation(line: 794, column: 44, scope: !10810)
!10817 = !DILocation(line: 794, column: 9, scope: !10810)
!10818 = !DILocation(line: 794, column: 2, scope: !10810)
!10819 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1619, file: !1619, line: 797, type: !1546, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10820)
!10820 = !{!10821, !10822}
!10821 = !DILocalVariable(name: "dev", arg: 1, scope: !10819, file: !1619, line: 797, type: !1495)
!10822 = !DILocalVariable(name: "config", scope: !10819, file: !1619, line: 799, type: !10452)
!10823 = !DILocation(line: 0, scope: !10819)
!10824 = !DILocation(line: 799, column: 48, scope: !10819)
!10825 = !DILocation(line: 802, column: 34, scope: !10819)
!10826 = !DILocation(line: 802, column: 2, scope: !10819)
!10827 = !DILocation(line: 805, column: 6, scope: !10828)
!10828 = distinct !DILexicalBlock(scope: !10819, file: !1619, line: 805, column: 6)
!10829 = !DILocation(line: 806, column: 3, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10828, file: !1619, line: 805, column: 43)
!10831 = !DILocation(line: 810, column: 31, scope: !10819)
!10832 = !DILocation(line: 807, column: 2, scope: !10830)
!10833 = !DILocation(line: 810, column: 2, scope: !10819)
!10834 = !DILocation(line: 811, column: 1, scope: !10819)
!10835 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1619, file: !1619, line: 813, type: !1546, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10836)
!10836 = !{!10837, !10838}
!10837 = !DILocalVariable(name: "dev", arg: 1, scope: !10835, file: !1619, line: 813, type: !1495)
!10838 = !DILocalVariable(name: "config", scope: !10835, file: !1619, line: 815, type: !10452)
!10839 = !DILocation(line: 0, scope: !10835)
!10840 = !DILocation(line: 815, column: 48, scope: !10835)
!10841 = !DILocation(line: 818, column: 35, scope: !10835)
!10842 = !DILocation(line: 818, column: 2, scope: !10835)
!10843 = !DILocation(line: 821, column: 6, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10835, file: !1619, line: 821, column: 6)
!10845 = !DILocation(line: 822, column: 3, scope: !10846)
!10846 = distinct !DILexicalBlock(scope: !10844, file: !1619, line: 821, column: 43)
!10847 = !DILocation(line: 826, column: 32, scope: !10835)
!10848 = !DILocation(line: 823, column: 2, scope: !10846)
!10849 = !DILocation(line: 826, column: 2, scope: !10835)
!10850 = !DILocation(line: 827, column: 1, scope: !10835)
!10851 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1619, file: !1619, line: 829, type: !1516, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10852)
!10852 = !{!10853, !10854}
!10853 = !DILocalVariable(name: "dev", arg: 1, scope: !10851, file: !1619, line: 829, type: !1495)
!10854 = !DILocalVariable(name: "config", scope: !10851, file: !1619, line: 831, type: !10452)
!10855 = !DILocation(line: 0, scope: !10851)
!10856 = !DILocation(line: 831, column: 48, scope: !10851)
!10857 = !DILocation(line: 833, column: 46, scope: !10851)
!10858 = !DILocation(line: 833, column: 11, scope: !10851)
!10859 = !DILocation(line: 833, column: 53, scope: !10851)
!10860 = !DILocation(line: 834, column: 38, scope: !10851)
!10861 = !DILocation(line: 834, column: 4, scope: !10851)
!10862 = !DILocation(line: 834, column: 46, scope: !10851)
!10863 = !DILocation(line: 835, column: 37, scope: !10851)
!10864 = !DILocation(line: 835, column: 4, scope: !10851)
!10865 = !DILocation(line: 835, column: 44, scope: !10851)
!10866 = !DILocation(line: 836, column: 36, scope: !10851)
!10867 = !DILocation(line: 836, column: 4, scope: !10851)
!10868 = !DILocation(line: 833, column: 2, scope: !10851)
!10869 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1619, file: !1619, line: 839, type: !1516, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10870)
!10870 = !{!10871}
!10871 = !DILocalVariable(name: "dev", arg: 1, scope: !10869, file: !1619, line: 839, type: !1495)
!10872 = !DILocation(line: 0, scope: !10869)
!10873 = !DILocation(line: 841, column: 2, scope: !10869)
!10874 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1619, file: !1619, line: 844, type: !1560, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10875)
!10875 = !{!10876, !10877, !10878, !10879}
!10876 = !DILocalVariable(name: "dev", arg: 1, scope: !10874, file: !1619, line: 844, type: !1495)
!10877 = !DILocalVariable(name: "cb", arg: 2, scope: !10874, file: !1619, line: 845, type: !1562)
!10878 = !DILocalVariable(name: "cb_data", arg: 3, scope: !10874, file: !1619, line: 846, type: !102)
!10879 = !DILocalVariable(name: "data", scope: !10874, file: !1619, line: 848, type: !10575)
!10880 = !DILocation(line: 0, scope: !10874)
!10881 = !DILocation(line: 848, column: 38, scope: !10874)
!10882 = !DILocation(line: 850, column: 8, scope: !10874)
!10883 = !DILocation(line: 850, column: 16, scope: !10874)
!10884 = !DILocation(line: 851, column: 8, scope: !10874)
!10885 = !DILocation(line: 851, column: 18, scope: !10874)
!10886 = !DILocation(line: 852, column: 1, scope: !10874)
!10887 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10888, file: !10888, line: 1791, type: !10889, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10891)
!10888 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10889 = !DISubroutineType(types: !10890)
!10890 = !{!121, !1566}
!10891 = !{!10892}
!10892 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10887, file: !10888, line: 1791, type: !1566)
!10893 = !DILocation(line: 0, scope: !10887)
!10894 = !DILocation(line: 1793, column: 11, scope: !10887)
!10895 = !DILocation(line: 1793, column: 47, scope: !10887)
!10896 = !DILocation(line: 1793, column: 3, scope: !10887)
!10897 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !10888, file: !10888, line: 2226, type: !10889, scopeLine: 2227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10898)
!10898 = !{!10899}
!10899 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10897, file: !10888, line: 2226, type: !1566)
!10900 = !DILocation(line: 0, scope: !10897)
!10901 = !DILocation(line: 2228, column: 11, scope: !10897)
!10902 = !DILocation(line: 2228, column: 51, scope: !10897)
!10903 = !DILocation(line: 2228, column: 3, scope: !10897)
!10904 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !10888, file: !10888, line: 1802, type: !10889, scopeLine: 1803, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10905)
!10905 = !{!10906}
!10906 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10904, file: !10888, line: 1802, type: !1566)
!10907 = !DILocation(line: 0, scope: !10904)
!10908 = !DILocation(line: 1804, column: 11, scope: !10904)
!10909 = !DILocation(line: 1804, column: 45, scope: !10904)
!10910 = !DILocation(line: 1804, column: 3, scope: !10904)
!10911 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !10888, file: !10888, line: 2237, type: !10889, scopeLine: 2238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10912)
!10912 = !{!10913}
!10913 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10911, file: !10888, line: 2237, type: !1566)
!10914 = !DILocation(line: 0, scope: !10911)
!10915 = !DILocation(line: 2239, column: 11, scope: !10911)
!10916 = !DILocation(line: 2239, column: 49, scope: !10911)
!10917 = !DILocation(line: 2239, column: 3, scope: !10911)
!10918 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !10888, file: !10888, line: 2191, type: !10919, scopeLine: 2192, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10921)
!10919 = !DISubroutineType(types: !10920)
!10920 = !{null, !1566}
!10921 = !{!10922}
!10922 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10918, file: !10888, line: 2191, type: !1566)
!10923 = !DILocation(line: 0, scope: !10918)
!10924 = !DILocation(line: 2193, column: 3, scope: !10918)
!10925 = !DILocation(line: 2194, column: 1, scope: !10918)
!10926 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !10888, file: !10888, line: 2176, type: !10919, scopeLine: 2177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10927)
!10927 = !{!10928}
!10928 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10926, file: !10888, line: 2176, type: !1566)
!10929 = !DILocation(line: 0, scope: !10926)
!10930 = !DILocation(line: 2178, column: 3, scope: !10926)
!10931 = !DILocation(line: 2179, column: 1, scope: !10926)
!10932 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !10888, file: !10888, line: 2163, type: !10919, scopeLine: 2164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10933)
!10933 = !{!10934}
!10934 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10932, file: !10888, line: 2163, type: !1566)
!10935 = !DILocation(line: 0, scope: !10932)
!10936 = !DILocation(line: 2165, column: 3, scope: !10932)
!10937 = !DILocation(line: 2166, column: 1, scope: !10932)
!10938 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !10888, file: !10888, line: 2095, type: !10919, scopeLine: 2096, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10939)
!10939 = !{!10940}
!10940 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10938, file: !10888, line: 2095, type: !1566)
!10941 = !DILocation(line: 0, scope: !10938)
!10942 = !DILocation(line: 2097, column: 3, scope: !10938)
!10943 = !DILocation(line: 2098, column: 1, scope: !10938)
!10944 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !10888, file: !10888, line: 2080, type: !10919, scopeLine: 2081, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10945)
!10945 = !{!10946}
!10946 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10944, file: !10888, line: 2080, type: !1566)
!10947 = !DILocation(line: 0, scope: !10944)
!10948 = !DILocation(line: 2082, column: 3, scope: !10944)
!10949 = !DILocation(line: 2083, column: 1, scope: !10944)
!10950 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !10888, file: !10888, line: 2067, type: !10919, scopeLine: 2068, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10951)
!10951 = !{!10952}
!10952 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10950, file: !10888, line: 2067, type: !1566)
!10953 = !DILocation(line: 0, scope: !10950)
!10954 = !DILocation(line: 2069, column: 3, scope: !10950)
!10955 = !DILocation(line: 2070, column: 1, scope: !10950)
!10956 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !10888, file: !10888, line: 2130, type: !10919, scopeLine: 2131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10957)
!10957 = !{!10958}
!10958 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10956, file: !10888, line: 2130, type: !1566)
!10959 = !DILocation(line: 0, scope: !10956)
!10960 = !DILocation(line: 2132, column: 3, scope: !10956)
!10961 = !DILocation(line: 2133, column: 1, scope: !10956)
!10962 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !10888, file: !10888, line: 2034, type: !10919, scopeLine: 2035, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10963)
!10963 = !{!10964}
!10964 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10962, file: !10888, line: 2034, type: !1566)
!10965 = !DILocation(line: 0, scope: !10962)
!10966 = !DILocation(line: 2036, column: 3, scope: !10962)
!10967 = !DILocation(line: 2037, column: 1, scope: !10962)
!10968 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10888, file: !10888, line: 1813, type: !10889, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10969)
!10969 = !{!10970}
!10970 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10968, file: !10888, line: 1813, type: !1566)
!10971 = !DILocation(line: 0, scope: !10968)
!10972 = !DILocation(line: 1815, column: 11, scope: !10968)
!10973 = !DILocation(line: 1815, column: 46, scope: !10968)
!10974 = !DILocation(line: 1815, column: 3, scope: !10968)
!10975 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !10888, file: !10888, line: 2141, type: !10919, scopeLine: 2142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10976)
!10976 = !{!10977}
!10977 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10975, file: !10888, line: 2141, type: !1566)
!10978 = !DILocation(line: 0, scope: !10975)
!10979 = !DILocation(line: 2143, column: 3, scope: !10975)
!10980 = !DILocation(line: 2144, column: 1, scope: !10975)
!10981 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !10888, file: !10888, line: 2045, type: !10919, scopeLine: 2046, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10982)
!10982 = !{!10983}
!10983 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10981, file: !10888, line: 2045, type: !1566)
!10984 = !DILocation(line: 0, scope: !10981)
!10985 = !DILocation(line: 2047, column: 3, scope: !10981)
!10986 = !DILocation(line: 2048, column: 1, scope: !10981)
!10987 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10888, file: !10888, line: 2402, type: !10988, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10990)
!10988 = !DISubroutineType(types: !10989)
!10989 = !{!167, !1566}
!10990 = !{!10991}
!10991 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10987, file: !10888, line: 2402, type: !1566)
!10992 = !DILocation(line: 0, scope: !10987)
!10993 = !DILocation(line: 2404, column: 20, scope: !10987)
!10994 = !DILocation(line: 2404, column: 10, scope: !10987)
!10995 = !DILocation(line: 2404, column: 3, scope: !10987)
!10996 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10888, file: !10888, line: 1769, type: !10889, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !10997)
!10997 = !{!10998}
!10998 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10996, file: !10888, line: 1769, type: !1566)
!10999 = !DILocation(line: 0, scope: !10996)
!11000 = !DILocation(line: 1771, column: 11, scope: !10996)
!11001 = !DILocation(line: 1771, column: 46, scope: !10996)
!11002 = !DILocation(line: 1771, column: 3, scope: !10996)
!11003 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10888, file: !10888, line: 1933, type: !10919, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11004)
!11004 = !{!11005, !11006}
!11005 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11003, file: !10888, line: 1933, type: !1566)
!11006 = !DILocalVariable(name: "tmpreg", scope: !11003, file: !10888, line: 1935, type: !120)
!11007 = !DILocation(line: 0, scope: !11003)
!11008 = !DILocation(line: 1935, column: 3, scope: !11003)
!11009 = !DILocation(line: 1935, column: 17, scope: !11003)
!11010 = !DILocation(line: 1936, column: 20, scope: !11003)
!11011 = !DILocation(line: 1936, column: 10, scope: !11003)
!11012 = !DILocation(line: 1937, column: 10, scope: !11003)
!11013 = !DILocation(line: 1938, column: 20, scope: !11003)
!11014 = !DILocation(line: 1938, column: 10, scope: !11003)
!11015 = !DILocation(line: 1939, column: 10, scope: !11003)
!11016 = !DILocation(line: 1940, column: 1, scope: !11003)
!11017 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10888, file: !10888, line: 2425, type: !11018, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11020)
!11018 = !DISubroutineType(types: !11019)
!11019 = !{null, !1566, !167}
!11020 = !{!11021, !11022}
!11021 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11017, file: !10888, line: 2425, type: !1566)
!11022 = !DILocalVariable(name: "Value", arg: 2, scope: !11017, file: !10888, line: 2425, type: !167)
!11023 = !DILocation(line: 0, scope: !11017)
!11024 = !DILocation(line: 2427, column: 16, scope: !11017)
!11025 = !DILocation(line: 2427, column: 11, scope: !11017)
!11026 = !DILocation(line: 2427, column: 14, scope: !11017)
!11027 = !DILocation(line: 2428, column: 1, scope: !11017)
!11028 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1619, file: !1619, line: 205, type: !11029, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11031)
!11029 = !DISubroutineType(types: !11030)
!11030 = !{!121, !1495}
!11031 = !{!11032, !11033}
!11032 = !DILocalVariable(name: "dev", arg: 1, scope: !11028, file: !1619, line: 205, type: !1495)
!11033 = !DILocalVariable(name: "config", scope: !11028, file: !1619, line: 207, type: !10452)
!11034 = !DILocation(line: 0, scope: !11028)
!11035 = !DILocation(line: 207, column: 48, scope: !11028)
!11036 = !DILocation(line: 209, column: 36, scope: !11028)
!11037 = !DILocation(line: 209, column: 9, scope: !11028)
!11038 = !DILocation(line: 209, column: 2, scope: !11028)
!11039 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1619, file: !1619, line: 270, type: !11040, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11042)
!11040 = !DISubroutineType(types: !11041)
!11041 = !{!1461, !121}
!11042 = !{!11043}
!11043 = !DILocalVariable(name: "parity", arg: 1, scope: !11039, file: !1619, line: 270, type: !121)
!11044 = !DILocation(line: 0, scope: !11039)
!11045 = !DILocation(line: 272, column: 2, scope: !11039)
!11046 = !DILocation(line: 281, column: 1, scope: !11039)
!11047 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1619, file: !1619, line: 220, type: !11029, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11048)
!11048 = !{!11049, !11050}
!11049 = !DILocalVariable(name: "dev", arg: 1, scope: !11047, file: !1619, line: 220, type: !1495)
!11050 = !DILocalVariable(name: "config", scope: !11047, file: !1619, line: 222, type: !10452)
!11051 = !DILocation(line: 0, scope: !11047)
!11052 = !DILocation(line: 222, column: 48, scope: !11047)
!11053 = !DILocation(line: 224, column: 44, scope: !11047)
!11054 = !DILocation(line: 224, column: 9, scope: !11047)
!11055 = !DILocation(line: 224, column: 2, scope: !11047)
!11056 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1619, file: !1619, line: 304, type: !11057, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11059)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{!1475, !121}
!11059 = !{!11060}
!11060 = !DILocalVariable(name: "sb", arg: 1, scope: !11056, file: !1619, line: 304, type: !121)
!11061 = !DILocation(line: 0, scope: !11056)
!11062 = !DILocation(line: 306, column: 2, scope: !11056)
!11063 = !DILocation(line: 0, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11056, file: !1619, line: 306, column: 14)
!11065 = !DILocation(line: 323, column: 1, scope: !11056)
!11066 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1619, file: !1619, line: 235, type: !11029, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11067)
!11067 = !{!11068, !11069}
!11068 = !DILocalVariable(name: "dev", arg: 1, scope: !11066, file: !1619, line: 235, type: !1495)
!11069 = !DILocalVariable(name: "config", scope: !11066, file: !1619, line: 237, type: !10452)
!11070 = !DILocation(line: 0, scope: !11066)
!11071 = !DILocation(line: 237, column: 48, scope: !11066)
!11072 = !DILocation(line: 239, column: 39, scope: !11066)
!11073 = !DILocation(line: 239, column: 9, scope: !11066)
!11074 = !DILocation(line: 239, column: 2, scope: !11066)
!11075 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1619, file: !1619, line: 355, type: !11076, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11078)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!1468, !121, !121}
!11078 = !{!11079, !11080}
!11079 = !DILocalVariable(name: "db", arg: 1, scope: !11075, file: !1619, line: 355, type: !121)
!11080 = !DILocalVariable(name: "p", arg: 2, scope: !11075, file: !1619, line: 356, type: !121)
!11081 = !DILocation(line: 0, scope: !11075)
!11082 = !DILocation(line: 358, column: 2, scope: !11075)
!11083 = !DILocation(line: 384, column: 1, scope: !11075)
!11084 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1619, file: !1619, line: 250, type: !11029, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11085)
!11085 = !{!11086, !11087}
!11086 = !DILocalVariable(name: "dev", arg: 1, scope: !11084, file: !1619, line: 250, type: !1495)
!11087 = !DILocalVariable(name: "config", scope: !11084, file: !1619, line: 252, type: !10452)
!11088 = !DILocation(line: 0, scope: !11084)
!11089 = !DILocation(line: 252, column: 48, scope: !11084)
!11090 = !DILocation(line: 254, column: 40, scope: !11084)
!11091 = !DILocation(line: 254, column: 9, scope: !11084)
!11092 = !DILocation(line: 254, column: 2, scope: !11084)
!11093 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1619, file: !1619, line: 409, type: !11094, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11096)
!11094 = !DISubroutineType(types: !11095)
!11095 = !{!1481, !121}
!11096 = !{!11097}
!11097 = !DILocalVariable(name: "fc", arg: 1, scope: !11093, file: !1619, line: 409, type: !121)
!11098 = !DILocation(line: 0, scope: !11093)
!11099 = !DILocation(line: 411, column: 9, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11093, file: !1619, line: 411, column: 6)
!11101 = !DILocation(line: 416, column: 1, scope: !11093)
!11102 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10888, file: !10888, line: 966, type: !10889, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11103)
!11103 = !{!11104}
!11104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11102, file: !10888, line: 966, type: !1566)
!11105 = !DILocation(line: 0, scope: !11102)
!11106 = !DILocation(line: 968, column: 21, scope: !11102)
!11107 = !DILocation(line: 968, column: 3, scope: !11102)
!11108 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10888, file: !10888, line: 600, type: !10889, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11109)
!11109 = !{!11110}
!11110 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11108, file: !10888, line: 600, type: !1566)
!11111 = !DILocation(line: 0, scope: !11108)
!11112 = !DILocation(line: 602, column: 21, scope: !11108)
!11113 = !DILocation(line: 602, column: 3, scope: !11108)
!11114 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10888, file: !10888, line: 819, type: !10889, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11115)
!11115 = !{!11116}
!11116 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11114, file: !10888, line: 819, type: !1566)
!11117 = !DILocation(line: 0, scope: !11114)
!11118 = !DILocation(line: 821, column: 21, scope: !11114)
!11119 = !DILocation(line: 821, column: 3, scope: !11114)
!11120 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10888, file: !10888, line: 546, type: !10889, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11121)
!11121 = !{!11122}
!11122 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11120, file: !10888, line: 546, type: !1566)
!11123 = !DILocation(line: 0, scope: !11120)
!11124 = !DILocation(line: 548, column: 21, scope: !11120)
!11125 = !DILocation(line: 548, column: 3, scope: !11120)
!11126 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1619, file: !1619, line: 257, type: !11127, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11129)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{!121, !1461}
!11129 = !{!11130}
!11130 = !DILocalVariable(name: "parity", arg: 1, scope: !11126, file: !1619, line: 257, type: !1461)
!11131 = !DILocation(line: 0, scope: !11126)
!11132 = !DILocation(line: 259, column: 2, scope: !11126)
!11133 = !DILocation(line: 268, column: 1, scope: !11126)
!11134 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1619, file: !1619, line: 283, type: !11135, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11137)
!11135 = !DISubroutineType(types: !11136)
!11136 = !{!121, !1475}
!11137 = !{!11138}
!11138 = !DILocalVariable(name: "sb", arg: 1, scope: !11134, file: !1619, line: 283, type: !1475)
!11139 = !DILocation(line: 0, scope: !11134)
!11140 = !DILocation(line: 285, column: 2, scope: !11134)
!11141 = !DILocation(line: 0, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11134, file: !1619, line: 285, column: 14)
!11143 = !DILocation(line: 302, column: 1, scope: !11134)
!11144 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1619, file: !1619, line: 325, type: !11145, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11147)
!11145 = !DISubroutineType(types: !11146)
!11146 = !{!121, !1468, !1461}
!11147 = !{!11148, !11149}
!11148 = !DILocalVariable(name: "db", arg: 1, scope: !11144, file: !1619, line: 325, type: !1468)
!11149 = !DILocalVariable(name: "p", arg: 2, scope: !11144, file: !1619, line: 326, type: !1461)
!11150 = !DILocation(line: 0, scope: !11144)
!11151 = !DILocation(line: 328, column: 2, scope: !11144)
!11152 = !DILocation(line: 353, column: 1, scope: !11144)
!11153 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1619, file: !1619, line: 393, type: !11154, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11156)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{!121, !1481}
!11156 = !{!11157}
!11157 = !DILocalVariable(name: "fc", arg: 1, scope: !11153, file: !1619, line: 393, type: !1481)
!11158 = !DILocation(line: 0, scope: !11153)
!11159 = !DILocation(line: 395, column: 9, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11153, file: !1619, line: 395, column: 6)
!11161 = !DILocation(line: 400, column: 1, scope: !11153)
!11162 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10888, file: !10888, line: 423, type: !10919, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11163)
!11163 = !{!11164}
!11164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11162, file: !10888, line: 423, type: !1566)
!11165 = !DILocation(line: 0, scope: !11162)
!11166 = !DILocation(line: 425, column: 3, scope: !11162)
!11167 = !DILocation(line: 426, column: 1, scope: !11162)
!11168 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1619, file: !1619, line: 197, type: !11169, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11171)
!11169 = !DISubroutineType(types: !11170)
!11170 = !{null, !1495, !121}
!11171 = !{!11172, !11173, !11174}
!11172 = !DILocalVariable(name: "dev", arg: 1, scope: !11168, file: !1619, line: 197, type: !1495)
!11173 = !DILocalVariable(name: "parity", arg: 2, scope: !11168, file: !1619, line: 198, type: !121)
!11174 = !DILocalVariable(name: "config", scope: !11168, file: !1619, line: 200, type: !10452)
!11175 = !DILocation(line: 0, scope: !11168)
!11176 = !DILocation(line: 200, column: 48, scope: !11168)
!11177 = !DILocation(line: 202, column: 29, scope: !11168)
!11178 = !DILocation(line: 202, column: 2, scope: !11168)
!11179 = !DILocation(line: 203, column: 1, scope: !11168)
!11180 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1619, file: !1619, line: 212, type: !11169, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11181)
!11181 = !{!11182, !11183, !11184}
!11182 = !DILocalVariable(name: "dev", arg: 1, scope: !11180, file: !1619, line: 212, type: !1495)
!11183 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11180, file: !1619, line: 213, type: !121)
!11184 = !DILocalVariable(name: "config", scope: !11180, file: !1619, line: 215, type: !10452)
!11185 = !DILocation(line: 0, scope: !11180)
!11186 = !DILocation(line: 215, column: 48, scope: !11180)
!11187 = !DILocation(line: 217, column: 37, scope: !11180)
!11188 = !DILocation(line: 217, column: 2, scope: !11180)
!11189 = !DILocation(line: 218, column: 1, scope: !11180)
!11190 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1619, file: !1619, line: 227, type: !11169, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11191)
!11191 = !{!11192, !11193, !11194}
!11192 = !DILocalVariable(name: "dev", arg: 1, scope: !11190, file: !1619, line: 227, type: !1495)
!11193 = !DILocalVariable(name: "databits", arg: 2, scope: !11190, file: !1619, line: 228, type: !121)
!11194 = !DILocalVariable(name: "config", scope: !11190, file: !1619, line: 230, type: !10452)
!11195 = !DILocation(line: 0, scope: !11190)
!11196 = !DILocation(line: 230, column: 48, scope: !11190)
!11197 = !DILocation(line: 232, column: 32, scope: !11190)
!11198 = !DILocation(line: 232, column: 2, scope: !11190)
!11199 = !DILocation(line: 233, column: 1, scope: !11190)
!11200 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1619, file: !1619, line: 242, type: !11169, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11201)
!11201 = !{!11202, !11203, !11204}
!11202 = !DILocalVariable(name: "dev", arg: 1, scope: !11200, file: !1619, line: 242, type: !1495)
!11203 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11200, file: !1619, line: 243, type: !121)
!11204 = !DILocalVariable(name: "config", scope: !11200, file: !1619, line: 245, type: !10452)
!11205 = !DILocation(line: 0, scope: !11200)
!11206 = !DILocation(line: 245, column: 48, scope: !11200)
!11207 = !DILocation(line: 247, column: 33, scope: !11200)
!11208 = !DILocation(line: 247, column: 2, scope: !11200)
!11209 = !DILocation(line: 248, column: 1, scope: !11200)
!11210 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1619, file: !1619, line: 107, type: !11169, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11211)
!11211 = !{!11212, !11213, !11214, !11215, !11216}
!11212 = !DILocalVariable(name: "dev", arg: 1, scope: !11210, file: !1619, line: 107, type: !1495)
!11213 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11210, file: !1619, line: 107, type: !121)
!11214 = !DILocalVariable(name: "config", scope: !11210, file: !1619, line: 109, type: !10452)
!11215 = !DILocalVariable(name: "data", scope: !11210, file: !1619, line: 110, type: !10575)
!11216 = !DILocalVariable(name: "clock_rate", scope: !11210, file: !1619, line: 112, type: !121)
!11217 = !DILocation(line: 0, scope: !11210)
!11218 = !DILocation(line: 109, column: 48, scope: !11210)
!11219 = !DILocation(line: 110, column: 38, scope: !11210)
!11220 = !DILocation(line: 112, column: 2, scope: !11210)
!11221 = !DILocation(line: 123, column: 36, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !1619, line: 123, column: 7)
!11223 = distinct !DILexicalBlock(scope: !11224, file: !1619, line: 122, column: 9)
!11224 = distinct !DILexicalBlock(scope: !11210, file: !1619, line: 115, column: 6)
!11225 = !DILocation(line: 124, column: 42, scope: !11222)
!11226 = !DILocation(line: 123, column: 7, scope: !11222)
!11227 = !DILocation(line: 125, column: 22, scope: !11222)
!11228 = !DILocation(line: 123, column: 7, scope: !11223)
!11229 = !DILocation(line: 176, column: 36, scope: !11210)
!11230 = !DILocation(line: 176, column: 3, scope: !11210)
!11231 = !DILocation(line: 179, column: 32, scope: !11210)
!11232 = !DILocation(line: 180, column: 10, scope: !11210)
!11233 = !DILocation(line: 179, column: 3, scope: !11210)
!11234 = !DILocation(line: 195, column: 1, scope: !11210)
!11235 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10888, file: !10888, line: 409, type: !10919, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11236)
!11236 = !{!11237}
!11237 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11235, file: !10888, line: 409, type: !1566)
!11238 = !DILocation(line: 0, scope: !11235)
!11239 = !DILocation(line: 411, column: 3, scope: !11235)
!11240 = !DILocation(line: 412, column: 1, scope: !11235)
!11241 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !871, file: !871, line: 216, type: !1599, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11242)
!11242 = !{!11243, !11244, !11245, !11246}
!11243 = !DILocalVariable(name: "dev", arg: 1, scope: !11241, file: !871, line: 216, type: !1495)
!11244 = !DILocalVariable(name: "sys", arg: 2, scope: !11241, file: !871, line: 217, type: !946)
!11245 = !DILocalVariable(name: "rate", arg: 3, scope: !11241, file: !871, line: 218, type: !902)
!11246 = !DILocalVariable(name: "api", scope: !11241, file: !871, line: 220, type: !1577)
!11247 = !DILocation(line: 0, scope: !11241)
!11248 = !DILocation(line: 221, column: 49, scope: !11241)
!11249 = !DILocation(line: 223, column: 11, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11241, file: !871, line: 223, column: 6)
!11251 = !DILocation(line: 223, column: 20, scope: !11250)
!11252 = !DILocation(line: 223, column: 6, scope: !11241)
!11253 = !DILocation(line: 227, column: 9, scope: !11241)
!11254 = !DILocation(line: 227, column: 2, scope: !11241)
!11255 = !DILocation(line: 228, column: 1, scope: !11241)
!11256 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10888, file: !10888, line: 614, type: !11257, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11259)
!11257 = !DISubroutineType(types: !11258)
!11258 = !{null, !1566, !121}
!11259 = !{!11260, !11261}
!11260 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11256, file: !10888, line: 614, type: !1566)
!11261 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11256, file: !10888, line: 614, type: !121)
!11262 = !DILocation(line: 0, scope: !11256)
!11263 = !DILocation(line: 616, column: 3, scope: !11256)
!11264 = !DILocation(line: 617, column: 1, scope: !11256)
!11265 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10888, file: !10888, line: 1019, type: !11266, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{null, !1566, !121, !121, !121}
!11268 = !{!11269, !11270, !11271, !11272}
!11269 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11265, file: !10888, line: 1019, type: !1566)
!11270 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11265, file: !10888, line: 1019, type: !121)
!11271 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11265, file: !10888, line: 1019, type: !121)
!11272 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11265, file: !10888, line: 1020, type: !121)
!11273 = !DILocation(line: 0, scope: !11265)
!11274 = !DILocation(line: 1028, column: 30, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !10888, line: 1027, column: 3)
!11276 = distinct !DILexicalBlock(scope: !11265, file: !10888, line: 1022, column: 7)
!11277 = !DILocation(line: 1028, column: 19, scope: !11275)
!11278 = !DILocation(line: 1028, column: 13, scope: !11275)
!11279 = !DILocation(line: 1028, column: 17, scope: !11275)
!11280 = !DILocation(line: 1030, column: 1, scope: !11265)
!11281 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10888, file: !10888, line: 948, type: !11257, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11282)
!11282 = !{!11283, !11284}
!11283 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11281, file: !10888, line: 948, type: !1566)
!11284 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11281, file: !10888, line: 948, type: !121)
!11285 = !DILocation(line: 0, scope: !11281)
!11286 = !DILocation(line: 950, column: 3, scope: !11281)
!11287 = !DILocation(line: 951, column: 1, scope: !11281)
!11288 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10888, file: !10888, line: 587, type: !11257, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11289)
!11289 = !{!11290, !11291}
!11290 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11288, file: !10888, line: 587, type: !1566)
!11291 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11288, file: !10888, line: 587, type: !121)
!11292 = !DILocation(line: 0, scope: !11288)
!11293 = !DILocation(line: 589, column: 3, scope: !11288)
!11294 = !DILocation(line: 590, column: 1, scope: !11288)
!11295 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10888, file: !10888, line: 804, type: !11257, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11296)
!11296 = !{!11297, !11298}
!11297 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11295, file: !10888, line: 804, type: !1566)
!11298 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11295, file: !10888, line: 804, type: !121)
!11299 = !DILocation(line: 0, scope: !11295)
!11300 = !DILocation(line: 806, column: 3, scope: !11295)
!11301 = !DILocation(line: 807, column: 1, scope: !11295)
!11302 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10888, file: !10888, line: 531, type: !11257, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11303)
!11303 = !{!11304, !11305}
!11304 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11302, file: !10888, line: 531, type: !1566)
!11305 = !DILocalVariable(name: "Parity", arg: 2, scope: !11302, file: !10888, line: 531, type: !121)
!11306 = !DILocation(line: 0, scope: !11302)
!11307 = !DILocation(line: 533, column: 3, scope: !11302)
!11308 = !DILocation(line: 534, column: 1, scope: !11302)
!11309 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10888, file: !10888, line: 1736, type: !10889, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11310)
!11310 = !{!11311}
!11311 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11309, file: !10888, line: 1736, type: !1566)
!11312 = !DILocation(line: 0, scope: !11309)
!11313 = !DILocation(line: 1738, column: 11, scope: !11309)
!11314 = !DILocation(line: 1738, column: 3, scope: !11309)
!11315 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10888, file: !10888, line: 1747, type: !10889, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11316)
!11316 = !{!11317}
!11317 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11315, file: !10888, line: 1747, type: !1566)
!11318 = !DILocation(line: 0, scope: !11315)
!11319 = !DILocation(line: 1749, column: 11, scope: !11315)
!11320 = !DILocation(line: 1749, column: 45, scope: !11315)
!11321 = !DILocation(line: 1749, column: 3, scope: !11315)
!11322 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10888, file: !10888, line: 1826, type: !10889, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11323)
!11323 = !{!11324}
!11324 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11322, file: !10888, line: 1826, type: !1566)
!11325 = !DILocation(line: 0, scope: !11322)
!11326 = !DILocation(line: 1828, column: 11, scope: !11322)
!11327 = !DILocation(line: 1828, column: 46, scope: !11322)
!11328 = !DILocation(line: 1828, column: 3, scope: !11322)
!11329 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10888, file: !10888, line: 1991, type: !10919, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11330)
!11330 = !{!11331}
!11331 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11329, file: !10888, line: 1991, type: !1566)
!11332 = !DILocation(line: 0, scope: !11329)
!11333 = !DILocation(line: 1993, column: 3, scope: !11329)
!11334 = !DILocation(line: 1994, column: 1, scope: !11329)
!11335 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10888, file: !10888, line: 1876, type: !10919, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11336)
!11336 = !{!11337, !11338}
!11337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11335, file: !10888, line: 1876, type: !1566)
!11338 = !DILocalVariable(name: "tmpreg", scope: !11335, file: !10888, line: 1878, type: !120)
!11339 = !DILocation(line: 0, scope: !11335)
!11340 = !DILocation(line: 1878, column: 3, scope: !11335)
!11341 = !DILocation(line: 1878, column: 17, scope: !11335)
!11342 = !DILocation(line: 1879, column: 20, scope: !11335)
!11343 = !DILocation(line: 1879, column: 10, scope: !11335)
!11344 = !DILocation(line: 1880, column: 10, scope: !11335)
!11345 = !DILocation(line: 1881, column: 20, scope: !11335)
!11346 = !DILocation(line: 1881, column: 10, scope: !11335)
!11347 = !DILocation(line: 1882, column: 10, scope: !11335)
!11348 = !DILocation(line: 1883, column: 1, scope: !11335)
!11349 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10888, file: !10888, line: 1895, type: !10919, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11350)
!11350 = !{!11351, !11352}
!11351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11349, file: !10888, line: 1895, type: !1566)
!11352 = !DILocalVariable(name: "tmpreg", scope: !11349, file: !10888, line: 1897, type: !120)
!11353 = !DILocation(line: 0, scope: !11349)
!11354 = !DILocation(line: 1897, column: 3, scope: !11349)
!11355 = !DILocation(line: 1897, column: 17, scope: !11349)
!11356 = !DILocation(line: 1898, column: 20, scope: !11349)
!11357 = !DILocation(line: 1898, column: 10, scope: !11349)
!11358 = !DILocation(line: 1899, column: 10, scope: !11349)
!11359 = !DILocation(line: 1900, column: 20, scope: !11349)
!11360 = !DILocation(line: 1900, column: 10, scope: !11349)
!11361 = !DILocation(line: 1901, column: 10, scope: !11349)
!11362 = !DILocation(line: 1902, column: 1, scope: !11349)
!11363 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10888, file: !10888, line: 1914, type: !10919, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11364)
!11364 = !{!11365, !11366}
!11365 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11363, file: !10888, line: 1914, type: !1566)
!11366 = !DILocalVariable(name: "tmpreg", scope: !11363, file: !10888, line: 1916, type: !120)
!11367 = !DILocation(line: 0, scope: !11363)
!11368 = !DILocation(line: 1916, column: 3, scope: !11363)
!11369 = !DILocation(line: 1916, column: 17, scope: !11363)
!11370 = !DILocation(line: 1917, column: 20, scope: !11363)
!11371 = !DILocation(line: 1917, column: 10, scope: !11363)
!11372 = !DILocation(line: 1918, column: 10, scope: !11363)
!11373 = !DILocation(line: 1919, column: 20, scope: !11363)
!11374 = !DILocation(line: 1919, column: 10, scope: !11363)
!11375 = !DILocation(line: 1920, column: 10, scope: !11363)
!11376 = !DILocation(line: 1921, column: 1, scope: !11363)
!11377 = !DILocation(line: 0, scope: !1678)
!11378 = !DILocation(line: 1914, column: 1, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !1678, file: !1619, line: 1914, column: 1)
!11380 = !DILocation(line: 1914, column: 1, scope: !1678)
!11381 = !DILocation(line: 0, scope: !1727)
!11382 = !DILocation(line: 1914, column: 1, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !1727, file: !1619, line: 1914, column: 1)
!11384 = !DILocation(line: 1914, column: 1, scope: !1727)
!11385 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1619, file: !1619, line: 987, type: !1546, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11386)
!11386 = !{!11387, !11388}
!11387 = !DILocalVariable(name: "dev", arg: 1, scope: !11385, file: !1619, line: 987, type: !1495)
!11388 = !DILocalVariable(name: "data", scope: !11385, file: !1619, line: 989, type: !10575)
!11389 = !DILocation(line: 0, scope: !11385)
!11390 = !DILocation(line: 989, column: 38, scope: !11385)
!11391 = !DILocation(line: 1014, column: 12, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11385, file: !1619, line: 1014, column: 6)
!11393 = !DILocation(line: 1014, column: 6, scope: !11392)
!11394 = !DILocation(line: 1014, column: 6, scope: !11385)
!11395 = !DILocation(line: 1015, column: 28, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11392, file: !1619, line: 1014, column: 21)
!11397 = !DILocation(line: 1015, column: 3, scope: !11396)
!11398 = !DILocation(line: 1016, column: 2, scope: !11396)
!11399 = !DILocation(line: 1059, column: 1, scope: !11385)
!11400 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1619, file: !1619, line: 1583, type: !1516, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11401)
!11401 = !{!11402, !11403, !11404, !11405, !11406, !11407}
!11402 = !DILocalVariable(name: "dev", arg: 1, scope: !11400, file: !1619, line: 1583, type: !1495)
!11403 = !DILocalVariable(name: "config", scope: !11400, file: !1619, line: 1585, type: !10452)
!11404 = !DILocalVariable(name: "data", scope: !11400, file: !1619, line: 1586, type: !10575)
!11405 = !DILocalVariable(name: "ll_parity", scope: !11400, file: !1619, line: 1587, type: !121)
!11406 = !DILocalVariable(name: "ll_datawidth", scope: !11400, file: !1619, line: 1588, type: !121)
!11407 = !DILocalVariable(name: "err", scope: !11400, file: !1619, line: 1589, type: !103)
!11408 = !DILocation(line: 0, scope: !11400)
!11409 = !DILocation(line: 1585, column: 48, scope: !11400)
!11410 = !DILocation(line: 1586, column: 38, scope: !11400)
!11411 = !DILocation(line: 1591, column: 2, scope: !11400)
!11412 = !DILocation(line: 1593, column: 29, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11400, file: !1619, line: 1593, column: 6)
!11414 = !DILocation(line: 1593, column: 7, scope: !11413)
!11415 = !DILocation(line: 1593, column: 6, scope: !11400)
!11416 = !DILocation(line: 1599, column: 31, scope: !11400)
!11417 = !DILocation(line: 1599, column: 71, scope: !11400)
!11418 = !DILocation(line: 1599, column: 8, scope: !11400)
!11419 = !DILocation(line: 1600, column: 10, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11400, file: !1619, line: 1600, column: 6)
!11421 = !DILocation(line: 1600, column: 6, scope: !11400)
!11422 = !DILocation(line: 1616, column: 36, scope: !11400)
!11423 = !DILocation(line: 1616, column: 8, scope: !11400)
!11424 = !DILocation(line: 1617, column: 10, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11400, file: !1619, line: 1617, column: 6)
!11426 = !DILocation(line: 1617, column: 6, scope: !11400)
!11427 = !DILocation(line: 1621, column: 27, scope: !11400)
!11428 = !DILocation(line: 1621, column: 2, scope: !11400)
!11429 = !DILocation(line: 1624, column: 40, scope: !11400)
!11430 = !DILocation(line: 1624, column: 2, scope: !11400)
!11431 = !DILocation(line: 1630, column: 14, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11400, file: !1619, line: 1630, column: 6)
!11433 = !DILocation(line: 1630, column: 6, scope: !11400)
!11434 = !DILocation(line: 1638, column: 2, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !1619, line: 1634, column: 34)
!11436 = distinct !DILexicalBlock(scope: !11432, file: !1619, line: 1634, column: 13)
!11437 = !DILocation(line: 0, scope: !11432)
!11438 = !DILocation(line: 1649, column: 35, scope: !11400)
!11439 = !DILocation(line: 1649, column: 2, scope: !11400)
!11440 = !DILocation(line: 1654, column: 14, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11400, file: !1619, line: 1654, column: 6)
!11442 = !DILocation(line: 1654, column: 6, scope: !11400)
!11443 = !DILocation(line: 1655, column: 3, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11441, file: !1619, line: 1654, column: 31)
!11445 = !DILocation(line: 1656, column: 2, scope: !11444)
!11446 = !DILocation(line: 1659, column: 37, scope: !11400)
!11447 = !DILocation(line: 1659, column: 2, scope: !11400)
!11448 = !DILocation(line: 1662, column: 14, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11400, file: !1619, line: 1662, column: 6)
!11450 = !DILocation(line: 1662, column: 6, scope: !11400)
!11451 = !DILocation(line: 1663, column: 37, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11449, file: !1619, line: 1662, column: 27)
!11453 = !DILocation(line: 1663, column: 3, scope: !11452)
!11454 = !DILocation(line: 1664, column: 2, scope: !11452)
!11455 = !DILocation(line: 1684, column: 26, scope: !11400)
!11456 = !DILocation(line: 1684, column: 2, scope: !11400)
!11457 = !DILocation(line: 1701, column: 10, scope: !11400)
!11458 = !DILocation(line: 1701, column: 2, scope: !11400)
!11459 = !DILocation(line: 1722, column: 2, scope: !11400)
!11460 = !DILocation(line: 1724, column: 1, scope: !11400)
!11461 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1619, file: !1619, line: 651, type: !1546, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11462)
!11462 = !{!11463, !11464, !11465}
!11463 = !DILocalVariable(name: "dev", arg: 1, scope: !11461, file: !1619, line: 651, type: !1495)
!11464 = !DILocalVariable(name: "data", scope: !11461, file: !1619, line: 653, type: !10575)
!11465 = !DILocalVariable(name: "clk", scope: !11461, file: !1619, line: 654, type: !11466)
!11466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!11467 = !DILocation(line: 0, scope: !11461)
!11468 = !DILocation(line: 653, column: 38, scope: !11461)
!11469 = !DILocation(line: 656, column: 8, scope: !11461)
!11470 = !DILocation(line: 656, column: 14, scope: !11461)
!11471 = !DILocation(line: 657, column: 1, scope: !11461)
!11472 = distinct !DISubprogram(name: "device_is_ready", scope: !6639, file: !6639, line: 47, type: !11473, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11475)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{!170, !1495}
!11475 = !{!11476}
!11476 = !DILocalVariable(name: "dev", arg: 1, scope: !11472, file: !6639, line: 47, type: !1495)
!11477 = !DILocation(line: 0, scope: !11472)
!11478 = !DILocation(line: 55, column: 2, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11472, file: !6639, line: 55, column: 2)
!11480 = !{i64 2152491543}
!11481 = !DILocation(line: 56, column: 9, scope: !11472)
!11482 = !DILocation(line: 56, column: 2, scope: !11472)
!11483 = distinct !DISubprogram(name: "clock_control_on", scope: !871, file: !871, line: 123, type: !1584, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11484)
!11484 = !{!11485, !11486, !11487}
!11485 = !DILocalVariable(name: "dev", arg: 1, scope: !11483, file: !871, line: 123, type: !1495)
!11486 = !DILocalVariable(name: "sys", arg: 2, scope: !11483, file: !871, line: 124, type: !946)
!11487 = !DILocalVariable(name: "api", scope: !11483, file: !871, line: 126, type: !1577)
!11488 = !DILocation(line: 0, scope: !11483)
!11489 = !DILocation(line: 127, column: 49, scope: !11483)
!11490 = !DILocation(line: 129, column: 14, scope: !11483)
!11491 = !DILocation(line: 129, column: 9, scope: !11483)
!11492 = !DILocation(line: 129, column: 2, scope: !11483)
!11493 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1651, file: !1651, line: 342, type: !11494, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11496)
!11494 = !DISubroutineType(types: !11495)
!11495 = !{!103, !1714, !167}
!11496 = !{!11497, !11498, !11499, !11500}
!11497 = !DILocalVariable(name: "config", arg: 1, scope: !11493, file: !1651, line: 342, type: !1714)
!11498 = !DILocalVariable(name: "id", arg: 2, scope: !11493, file: !1651, line: 343, type: !167)
!11499 = !DILocalVariable(name: "ret", scope: !11493, file: !1651, line: 345, type: !103)
!11500 = !DILocalVariable(name: "state", scope: !11493, file: !1651, line: 346, type: !1654)
!11501 = !DILocation(line: 0, scope: !11493)
!11502 = !DILocation(line: 346, column: 2, scope: !11493)
!11503 = !DILocation(line: 348, column: 8, scope: !11493)
!11504 = !DILocation(line: 349, column: 10, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11493, file: !1651, line: 349, column: 6)
!11506 = !DILocation(line: 349, column: 6, scope: !11493)
!11507 = !DILocation(line: 353, column: 44, scope: !11493)
!11508 = !DILocation(line: 353, column: 9, scope: !11493)
!11509 = !DILocation(line: 353, column: 2, scope: !11493)
!11510 = !DILocation(line: 354, column: 1, scope: !11493)
!11511 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10888, file: !10888, line: 496, type: !11257, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11512)
!11512 = !{!11513, !11514}
!11513 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11511, file: !10888, line: 496, type: !1566)
!11514 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11511, file: !10888, line: 496, type: !121)
!11515 = !DILocation(line: 0, scope: !11511)
!11516 = !DILocation(line: 498, column: 3, scope: !11511)
!11517 = !DILocation(line: 499, column: 1, scope: !11511)
!11518 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10888, file: !10888, line: 849, type: !11266, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11519)
!11519 = !{!11520, !11521, !11522, !11523}
!11520 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11518, file: !10888, line: 849, type: !1566)
!11521 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11518, file: !10888, line: 849, type: !121)
!11522 = !DILocalVariable(name: "Parity", arg: 3, scope: !11518, file: !10888, line: 849, type: !121)
!11523 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11518, file: !10888, line: 850, type: !121)
!11524 = !DILocation(line: 0, scope: !11518)
!11525 = !DILocation(line: 852, column: 3, scope: !11518)
!11526 = !DILocation(line: 853, column: 3, scope: !11518)
!11527 = !DILocation(line: 854, column: 1, scope: !11518)
!11528 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10888, file: !10888, line: 1336, type: !10919, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11529)
!11529 = !{!11530}
!11530 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11528, file: !10888, line: 1336, type: !1566)
!11531 = !DILocation(line: 0, scope: !11528)
!11532 = !DILocation(line: 1338, column: 3, scope: !11528)
!11533 = !DILocation(line: 1339, column: 1, scope: !11528)
!11534 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1651, file: !1651, line: 316, type: !11535, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11537)
!11535 = !DISubroutineType(types: !11536)
!11536 = !{!103, !1714, !1654}
!11537 = !{!11538, !11539, !11540}
!11538 = !DILocalVariable(name: "config", arg: 1, scope: !11534, file: !1651, line: 317, type: !1714)
!11539 = !DILocalVariable(name: "state", arg: 2, scope: !11534, file: !1651, line: 318, type: !1654)
!11540 = !DILocalVariable(name: "reg", scope: !11534, file: !1651, line: 320, type: !22)
!11541 = !DILocation(line: 0, scope: !11534)
!11542 = !DILocation(line: 329, column: 39, scope: !11534)
!11543 = !DILocation(line: 329, column: 52, scope: !11534)
!11544 = !DILocation(line: 329, column: 9, scope: !11534)
!11545 = !DILocation(line: 329, column: 2, scope: !11534)
!11546 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !11473, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1451, retainedNodes: !11547)
!11547 = !{!11548}
!11548 = !DILocalVariable(name: "dev", arg: 1, scope: !11546, file: !154, line: 730, type: !1495)
!11549 = !DILocation(line: 0, scope: !11546)
!11550 = !DILocation(line: 732, column: 9, scope: !11546)
!11551 = !DILocation(line: 732, column: 2, scope: !11546)
!11552 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1814, file: !1814, line: 270, type: !1820, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11553)
!11553 = !{!11554}
!11554 = !DILocalVariable(name: "dev", arg: 1, scope: !11552, file: !1814, line: 270, type: !1822)
!11555 = !DILocation(line: 0, scope: !11552)
!11556 = !DILocation(line: 274, column: 2, scope: !11552)
!11557 = !DILocation(line: 275, column: 12, scope: !11552)
!11558 = !DILocation(line: 276, column: 15, scope: !11552)
!11559 = !DILocation(line: 277, column: 16, scope: !11552)
!11560 = !DILocation(line: 278, column: 15, scope: !11552)
!11561 = !DILocation(line: 279, column: 16, scope: !11552)
!11562 = !DILocation(line: 282, column: 2, scope: !11552)
!11563 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1638, type: !6832, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11564)
!11564 = !{!11565, !11566}
!11565 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11563, file: !508, line: 1638, type: !829)
!11566 = !DILocalVariable(name: "priority", arg: 2, scope: !11563, file: !508, line: 1638, type: !121)
!11567 = !DILocation(line: 0, scope: !11563)
!11568 = !DILocation(line: 1646, column: 46, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !508, line: 1645, column: 3)
!11570 = distinct !DILexicalBlock(scope: !11563, file: !508, line: 1640, column: 7)
!11571 = !DILocation(line: 1648, column: 1, scope: !11563)
!11572 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1814, file: !1814, line: 118, type: !6735, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11573)
!11573 = !{!11574, !11575}
!11574 = !DILocalVariable(name: "arg", arg: 1, scope: !11572, file: !1814, line: 118, type: !102)
!11575 = !DILocalVariable(name: "dticks", scope: !11572, file: !1814, line: 121, type: !121)
!11576 = !DILocation(line: 0, scope: !11572)
!11577 = !DILocation(line: 124, column: 2, scope: !11572)
!11578 = !DILocation(line: 129, column: 17, scope: !11572)
!11579 = !DILocation(line: 129, column: 14, scope: !11572)
!11580 = !DILocation(line: 130, column: 15, scope: !11572)
!11581 = !DILocation(line: 145, column: 27, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !1814, line: 132, column: 16)
!11583 = distinct !DILexicalBlock(scope: !11572, file: !1814, line: 132, column: 6)
!11584 = !DILocation(line: 145, column: 25, scope: !11582)
!11585 = !DILocation(line: 145, column: 45, scope: !11582)
!11586 = !DILocation(line: 146, column: 30, scope: !11582)
!11587 = !DILocation(line: 146, column: 20, scope: !11582)
!11588 = !DILocation(line: 147, column: 3, scope: !11582)
!11589 = !DILocation(line: 151, column: 2, scope: !11572)
!11590 = !DILocation(line: 152, column: 1, scope: !11572)
!11591 = distinct !DISubprogram(name: "elapsed", scope: !1814, file: !1814, line: 85, type: !7548, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11592)
!11592 = !{!11593, !11594, !11595}
!11593 = !DILocalVariable(name: "val1", scope: !11591, file: !1814, line: 87, type: !121)
!11594 = !DILocalVariable(name: "ctrl", scope: !11591, file: !1814, line: 88, type: !121)
!11595 = !DILocalVariable(name: "val2", scope: !11591, file: !1814, line: 89, type: !121)
!11596 = !DILocation(line: 87, column: 27, scope: !11591)
!11597 = !DILocation(line: 0, scope: !11591)
!11598 = !DILocation(line: 88, column: 27, scope: !11591)
!11599 = !DILocation(line: 89, column: 27, scope: !11591)
!11600 = !DILocation(line: 105, column: 12, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11591, file: !1814, line: 105, column: 6)
!11602 = !DILocation(line: 106, column: 6, scope: !11601)
!11603 = !DILocation(line: 107, column: 16, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11601, file: !1814, line: 106, column: 24)
!11605 = !DILocation(line: 111, column: 18, scope: !11604)
!11606 = !DILocation(line: 112, column: 2, scope: !11604)
!11607 = !DILocation(line: 114, column: 20, scope: !11591)
!11608 = !DILocation(line: 114, column: 30, scope: !11591)
!11609 = !DILocation(line: 114, column: 28, scope: !11591)
!11610 = !DILocation(line: 114, column: 2, scope: !11591)
!11611 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1814, file: !1814, line: 154, type: !11612, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11614)
!11612 = !DISubroutineType(types: !11613)
!11613 = !{null, !345, !170}
!11614 = !{!11615, !11616, !11617, !11618, !11619, !11620, !11621, !11626, !11627}
!11615 = !DILocalVariable(name: "ticks", arg: 1, scope: !11611, file: !1814, line: 154, type: !345)
!11616 = !DILocalVariable(name: "idle", arg: 2, scope: !11611, file: !1814, line: 154, type: !170)
!11617 = !DILocalVariable(name: "delay", scope: !11611, file: !1814, line: 169, type: !121)
!11618 = !DILocalVariable(name: "val1", scope: !11611, file: !1814, line: 170, type: !121)
!11619 = !DILocalVariable(name: "val2", scope: !11611, file: !1814, line: 170, type: !121)
!11620 = !DILocalVariable(name: "last_load_", scope: !11611, file: !1814, line: 171, type: !121)
!11621 = !DILocalVariable(name: "key", scope: !11611, file: !1814, line: 176, type: !11622)
!11622 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !11623)
!11623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !11624)
!11624 = !{!11625}
!11625 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11623, file: !473, line: 33, baseType: !103, size: 32)
!11626 = !DILocalVariable(name: "pending", scope: !11611, file: !1814, line: 178, type: !121)
!11627 = !DILocalVariable(name: "unannounced", scope: !11611, file: !1814, line: 185, type: !121)
!11628 = !DILocation(line: 0, scope: !11611)
!11629 = !DILocation(line: 162, column: 49, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11611, file: !1814, line: 162, column: 6)
!11631 = !DILocation(line: 163, column: 17, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11630, file: !1814, line: 162, column: 78)
!11633 = !DILocation(line: 164, column: 13, scope: !11632)
!11634 = !DILocation(line: 165, column: 3, scope: !11632)
!11635 = !DILocation(line: 171, column: 24, scope: !11611)
!11636 = !DILocation(line: 173, column: 10, scope: !11611)
!11637 = !DILocation(line: 174, column: 10, scope: !11611)
!11638 = !DILocalVariable(name: "l", arg: 1, scope: !11639, file: !473, line: 136, type: !11642)
!11639 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !11640, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11643)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{!11622, !11642}
!11642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!11643 = !{!11638, !11644}
!11644 = !DILocalVariable(name: "k", scope: !11639, file: !473, line: 139, type: !11622)
!11645 = !DILocation(line: 0, scope: !11639, inlinedAt: !11646)
!11646 = distinct !DILocation(line: 176, column: 25, scope: !11611)
!11647 = !DILocation(line: 55, column: 2, scope: !11648, inlinedAt: !11652)
!11648 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11649)
!11649 = !{!11650, !11651}
!11650 = !DILocalVariable(name: "key", scope: !11648, file: !5761, line: 44, type: !32)
!11651 = !DILocalVariable(name: "tmp", scope: !11648, file: !5761, line: 53, type: !32)
!11652 = distinct !DILocation(line: 145, column: 10, scope: !11639, inlinedAt: !11646)
!11653 = !{i64 1617627}
!11654 = !DILocation(line: 0, scope: !11648, inlinedAt: !11652)
!11655 = !DILocation(line: 178, column: 21, scope: !11611)
!11656 = !DILocation(line: 180, column: 18, scope: !11611)
!11657 = !DILocation(line: 182, column: 14, scope: !11611)
!11658 = !DILocation(line: 183, column: 15, scope: !11611)
!11659 = !DILocation(line: 185, column: 39, scope: !11611)
!11660 = !DILocation(line: 185, column: 37, scope: !11611)
!11661 = !DILocation(line: 187, column: 27, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11611, file: !1814, line: 187, column: 6)
!11663 = !DILocation(line: 187, column: 6, scope: !11611)
!11664 = !DILocation(line: 202, column: 27, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11662, file: !1814, line: 195, column: 9)
!11666 = !DILocation(line: 202, column: 48, scope: !11665)
!11667 = !DILocation(line: 203, column: 9, scope: !11665)
!11668 = !DILocation(line: 204, column: 11, scope: !11665)
!11669 = !DILocation(line: 205, column: 13, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11665, file: !1814, line: 205, column: 7)
!11671 = !DILocation(line: 205, column: 7, scope: !11665)
!11672 = !DILocation(line: 0, scope: !11662)
!11673 = !DILocation(line: 212, column: 18, scope: !11611)
!11674 = !DILocation(line: 214, column: 28, scope: !11611)
!11675 = !DILocation(line: 214, column: 16, scope: !11611)
!11676 = !DILocation(line: 215, column: 15, scope: !11611)
!11677 = !DILocation(line: 227, column: 11, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11611, file: !1814, line: 227, column: 6)
!11679 = !DILocation(line: 227, column: 6, scope: !11611)
!11680 = !DILocation(line: 228, column: 15, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11678, file: !1814, line: 227, column: 19)
!11682 = !DILocation(line: 228, column: 38, scope: !11681)
!11683 = !DILocation(line: 228, column: 24, scope: !11681)
!11684 = !DILocation(line: 229, column: 2, scope: !11681)
!11685 = !DILocation(line: 230, column: 24, scope: !11686)
!11686 = distinct !DILexicalBlock(scope: !11678, file: !1814, line: 229, column: 9)
!11687 = !DILocation(line: 230, column: 15, scope: !11686)
!11688 = !DILocation(line: 0, scope: !11678)
!11689 = !DILocalVariable(name: "key", arg: 2, scope: !11690, file: !473, line: 190, type: !11622)
!11690 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !11691, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11693)
!11691 = !DISubroutineType(types: !11692)
!11692 = !{null, !11642, !11622}
!11693 = !{!11694, !11689}
!11694 = !DILocalVariable(name: "l", arg: 1, scope: !11690, file: !473, line: 189, type: !11642)
!11695 = !DILocation(line: 0, scope: !11690, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 232, column: 2, scope: !11611)
!11697 = !DILocalVariable(name: "key", arg: 1, scope: !11698, file: !5761, line: 84, type: !32)
!11698 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11699)
!11699 = !{!11697}
!11700 = !DILocation(line: 0, scope: !11698, inlinedAt: !11701)
!11701 = distinct !DILocation(line: 215, column: 2, scope: !11690, inlinedAt: !11696)
!11702 = !DILocation(line: 95, column: 2, scope: !11698, inlinedAt: !11701)
!11703 = !{i64 1618444}
!11704 = !DILocation(line: 234, column: 1, scope: !11611)
!11705 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1814, file: !1814, line: 236, type: !7548, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11706)
!11706 = !{!11707, !11708}
!11707 = !DILocalVariable(name: "key", scope: !11705, file: !1814, line: 242, type: !11622)
!11708 = !DILocalVariable(name: "cyc", scope: !11705, file: !1814, line: 243, type: !121)
!11709 = !DILocation(line: 0, scope: !11639, inlinedAt: !11710)
!11710 = distinct !DILocation(line: 242, column: 25, scope: !11705)
!11711 = !DILocation(line: 55, column: 2, scope: !11648, inlinedAt: !11712)
!11712 = distinct !DILocation(line: 145, column: 10, scope: !11639, inlinedAt: !11710)
!11713 = !DILocation(line: 0, scope: !11648, inlinedAt: !11712)
!11714 = !DILocation(line: 0, scope: !11705)
!11715 = !DILocation(line: 243, column: 17, scope: !11705)
!11716 = !DILocation(line: 243, column: 29, scope: !11705)
!11717 = !DILocation(line: 243, column: 27, scope: !11705)
!11718 = !DILocation(line: 243, column: 43, scope: !11705)
!11719 = !DILocation(line: 243, column: 41, scope: !11705)
!11720 = !DILocation(line: 0, scope: !11690, inlinedAt: !11721)
!11721 = distinct !DILocation(line: 245, column: 2, scope: !11705)
!11722 = !DILocation(line: 0, scope: !11698, inlinedAt: !11723)
!11723 = distinct !DILocation(line: 215, column: 2, scope: !11690, inlinedAt: !11721)
!11724 = !DILocation(line: 95, column: 2, scope: !11698, inlinedAt: !11723)
!11725 = !DILocation(line: 246, column: 13, scope: !11705)
!11726 = !DILocation(line: 246, column: 2, scope: !11705)
!11727 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1814, file: !1814, line: 249, type: !7548, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !11728)
!11728 = !{!11729, !11730}
!11729 = !DILocalVariable(name: "key", scope: !11727, file: !1814, line: 251, type: !11622)
!11730 = !DILocalVariable(name: "ret", scope: !11727, file: !1814, line: 252, type: !121)
!11731 = !DILocation(line: 0, scope: !11639, inlinedAt: !11732)
!11732 = distinct !DILocation(line: 251, column: 25, scope: !11727)
!11733 = !DILocation(line: 55, column: 2, scope: !11648, inlinedAt: !11734)
!11734 = distinct !DILocation(line: 145, column: 10, scope: !11639, inlinedAt: !11732)
!11735 = !DILocation(line: 0, scope: !11648, inlinedAt: !11734)
!11736 = !DILocation(line: 0, scope: !11727)
!11737 = !DILocation(line: 252, column: 17, scope: !11727)
!11738 = !DILocation(line: 252, column: 29, scope: !11727)
!11739 = !DILocation(line: 252, column: 27, scope: !11727)
!11740 = !DILocation(line: 0, scope: !11690, inlinedAt: !11741)
!11741 = distinct !DILocation(line: 254, column: 2, scope: !11727)
!11742 = !DILocation(line: 0, scope: !11698, inlinedAt: !11743)
!11743 = distinct !DILocation(line: 215, column: 2, scope: !11690, inlinedAt: !11741)
!11744 = !DILocation(line: 95, column: 2, scope: !11698, inlinedAt: !11743)
!11745 = !DILocation(line: 255, column: 2, scope: !11727)
!11746 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1814, file: !1814, line: 258, type: !3217, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !474)
!11747 = !DILocation(line: 260, column: 6, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11746, file: !1814, line: 260, column: 6)
!11749 = !DILocation(line: 260, column: 16, scope: !11748)
!11750 = !DILocation(line: 260, column: 6, scope: !11746)
!11751 = !DILocation(line: 261, column: 17, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11748, file: !1814, line: 260, column: 34)
!11753 = !DILocation(line: 262, column: 2, scope: !11752)
!11754 = !DILocation(line: 263, column: 1, scope: !11746)
!11755 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1814, file: !1814, line: 265, type: !3217, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1734, retainedNodes: !474)
!11756 = !DILocation(line: 267, column: 16, scope: !11755)
!11757 = !DILocation(line: 268, column: 1, scope: !11755)
!11758 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11759, file: !11759, line: 9, type: !11760, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3055, retainedNodes: !11783)
!11759 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!103, !11762, !167, !11782}
!11762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11763, size: 32)
!11763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11764)
!11764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1651, line: 60, size: 64, elements: !11765)
!11765 = !{!11766, !11781}
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11764, file: !1651, line: 69, baseType: !11767, size: 32)
!11767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11768, size: 32)
!11768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11769)
!11769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1651, line: 50, size: 64, elements: !11770)
!11770 = !{!11771, !11779, !11780}
!11771 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11769, file: !1651, line: 52, baseType: !11772, size: 32)
!11772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11773, size: 32)
!11773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11774)
!11774 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1662, line: 37, baseType: !11775)
!11775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1662, line: 32, size: 64, elements: !11776)
!11776 = !{!11777, !11778}
!11777 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11775, file: !1662, line: 34, baseType: !121, size: 32)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11775, file: !1662, line: 36, baseType: !121, size: 32, offset: 32)
!11779 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11769, file: !1651, line: 54, baseType: !167, size: 8, offset: 32)
!11780 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11769, file: !1651, line: 56, baseType: !167, size: 8, offset: 40)
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11764, file: !1651, line: 71, baseType: !167, size: 8, offset: 32)
!11782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11767, size: 32)
!11783 = !{!11784, !11785, !11786}
!11784 = !DILocalVariable(name: "config", arg: 1, scope: !11758, file: !11759, line: 9, type: !11762)
!11785 = !DILocalVariable(name: "id", arg: 2, scope: !11758, file: !11759, line: 9, type: !167)
!11786 = !DILocalVariable(name: "state", arg: 3, scope: !11758, file: !11759, line: 10, type: !11782)
!11787 = !DILocation(line: 0, scope: !11758)
!11788 = !DILocation(line: 12, column: 20, scope: !11758)
!11789 = !DILocation(line: 13, column: 27, scope: !11758)
!11790 = !DILocation(line: 13, column: 42, scope: !11758)
!11791 = !DILocation(line: 13, column: 19, scope: !11758)
!11792 = !DILocation(line: 13, column: 16, scope: !11758)
!11793 = !DILocation(line: 13, column: 2, scope: !11758)
!11794 = distinct !{!11794, !11793, !11795}
!11795 = !DILocation(line: 19, column: 2, scope: !11758)
!11796 = !DILocation(line: 14, column: 23, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !11759, line: 14, column: 7)
!11798 = distinct !DILexicalBlock(scope: !11758, file: !11759, line: 13, column: 54)
!11799 = !DILocation(line: 14, column: 10, scope: !11797)
!11800 = !DILocation(line: 18, column: 11, scope: !11798)
!11801 = !DILocation(line: 14, column: 7, scope: !11798)
!11802 = !DILocation(line: 22, column: 1, scope: !11758)
!11803 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1930, file: !1930, line: 193, type: !11804, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1849, retainedNodes: !11813)
!11804 = !DISubroutineType(types: !11805)
!11805 = !{!103, !11806, !167, !22}
!11806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11807, size: 32)
!11807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11808)
!11808 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1662, line: 37, baseType: !11809)
!11809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1662, line: 32, size: 64, elements: !11810)
!11810 = !{!11811, !11812}
!11811 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11809, file: !1662, line: 34, baseType: !121, size: 32)
!11812 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11809, file: !1662, line: 36, baseType: !121, size: 32, offset: 32)
!11813 = !{!11814, !11815, !11816, !11817, !11818, !11819, !11820, !11821, !11823}
!11814 = !DILocalVariable(name: "pins", arg: 1, scope: !11803, file: !1930, line: 193, type: !11806)
!11815 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11803, file: !1930, line: 193, type: !167)
!11816 = !DILocalVariable(name: "reg", arg: 3, scope: !11803, file: !1930, line: 194, type: !22)
!11817 = !DILocalVariable(name: "pin", scope: !11803, file: !1930, line: 196, type: !121)
!11818 = !DILocalVariable(name: "mux", scope: !11803, file: !1930, line: 196, type: !121)
!11819 = !DILocalVariable(name: "pin_cgf", scope: !11803, file: !1930, line: 197, type: !121)
!11820 = !DILocalVariable(name: "ret", scope: !11803, file: !1930, line: 198, type: !103)
!11821 = !DILocalVariable(name: "i", scope: !11822, file: !1930, line: 209, type: !167)
!11822 = distinct !DILexicalBlock(scope: !11803, file: !1930, line: 209, column: 2)
!11823 = !DILocalVariable(name: "gpio_out", scope: !11824, file: !1930, line: 239, type: !121)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !1930, line: 238, column: 55)
!11825 = distinct !DILexicalBlock(scope: !11826, file: !1930, line: 238, column: 14)
!11826 = distinct !DILexicalBlock(scope: !11827, file: !1930, line: 236, column: 14)
!11827 = distinct !DILexicalBlock(scope: !11828, file: !1930, line: 234, column: 7)
!11828 = distinct !DILexicalBlock(scope: !11829, file: !1930, line: 209, column: 41)
!11829 = distinct !DILexicalBlock(scope: !11822, file: !1930, line: 209, column: 2)
!11830 = !DILocation(line: 0, scope: !11803)
!11831 = !DILocation(line: 0, scope: !11822)
!11832 = !DILocation(line: 209, column: 25, scope: !11829)
!11833 = !DILocation(line: 209, column: 2, scope: !11822)
!11834 = distinct !{!11834, !11833, !11835}
!11835 = !DILocation(line: 259, column: 2, scope: !11822)
!11836 = !DILocation(line: 210, column: 17, scope: !11828)
!11837 = !DILocation(line: 234, column: 7, scope: !11827)
!11838 = !DILocation(line: 234, column: 33, scope: !11827)
!11839 = !DILocation(line: 234, column: 7, scope: !11828)
!11840 = !DILocation(line: 235, column: 22, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11827, file: !1930, line: 234, column: 49)
!11842 = !DILocation(line: 235, column: 29, scope: !11841)
!11843 = !DILocation(line: 236, column: 3, scope: !11841)
!11844 = !DILocation(line: 236, column: 14, scope: !11827)
!11845 = !DILocation(line: 239, column: 32, scope: !11824)
!11846 = !DILocation(line: 0, scope: !11824)
!11847 = !DILocation(line: 241, column: 8, scope: !11824)
!11848 = !DILocation(line: 246, column: 3, scope: !11824)
!11849 = !DILocation(line: 252, column: 9, scope: !11828)
!11850 = !DILocation(line: 255, column: 9, scope: !11828)
!11851 = !DILocation(line: 256, column: 11, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11828, file: !1930, line: 256, column: 7)
!11853 = !DILocation(line: 209, column: 37, scope: !11829)
!11854 = !DILocation(line: 256, column: 7, scope: !11828)
!11855 = !DILocation(line: 262, column: 1, scope: !11803)
!11856 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1930, file: !1930, line: 176, type: !11857, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1849, retainedNodes: !11859)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{!103, !121, !121, !121}
!11859 = !{!11860, !11861, !11862, !11863}
!11860 = !DILocalVariable(name: "pin", arg: 1, scope: !11856, file: !1930, line: 176, type: !121)
!11861 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11856, file: !1930, line: 176, type: !121)
!11862 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11856, file: !1930, line: 176, type: !121)
!11863 = !DILocalVariable(name: "port_device", scope: !11856, file: !1930, line: 178, type: !1860)
!11864 = !DILocation(line: 0, scope: !11856)
!11865 = !DILocation(line: 180, column: 22, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11856, file: !1930, line: 180, column: 6)
!11867 = !DILocation(line: 180, column: 6, scope: !11856)
!11868 = !DILocation(line: 180, column: 6, scope: !11866)
!11869 = !DILocation(line: 184, column: 16, scope: !11856)
!11870 = !DILocation(line: 186, column: 19, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11856, file: !1930, line: 186, column: 6)
!11872 = !DILocation(line: 186, column: 28, scope: !11871)
!11873 = !DILocation(line: 186, column: 33, scope: !11871)
!11874 = !DILocation(line: 186, column: 6, scope: !11856)
!11875 = !DILocation(line: 190, column: 43, scope: !11856)
!11876 = !DILocation(line: 190, column: 9, scope: !11856)
!11877 = !DILocation(line: 190, column: 2, scope: !11856)
!11878 = !DILocation(line: 191, column: 1, scope: !11856)
!11879 = distinct !DISubprogram(name: "device_is_ready", scope: !6639, file: !6639, line: 47, type: !11880, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1849, retainedNodes: !11882)
!11880 = !DISubroutineType(types: !11881)
!11881 = !{!170, !1860}
!11882 = !{!11883}
!11883 = !DILocalVariable(name: "dev", arg: 1, scope: !11879, file: !6639, line: 47, type: !1860)
!11884 = !DILocation(line: 0, scope: !11879)
!11885 = !DILocation(line: 55, column: 2, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11879, file: !6639, line: 55, column: 2)
!11887 = !{i64 2148851636}
!11888 = !DILocation(line: 56, column: 9, scope: !11879)
!11889 = !DILocation(line: 56, column: 2, scope: !11879)
!11890 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !11880, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1849, retainedNodes: !11891)
!11891 = !{!11892}
!11892 = !DILocalVariable(name: "dev", arg: 1, scope: !11890, file: !154, line: 730, type: !1860)
!11893 = !DILocation(line: 0, scope: !11890)
!11894 = !DILocation(line: 732, column: 9, scope: !11890)
!11895 = !DILocation(line: 732, column: 2, scope: !11890)
!11896 = distinct !DISubprogram(name: "SystemInit", scope: !1960, file: !1960, line: 160, type: !3217, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1936, retainedNodes: !474)
!11897 = !DILocation(line: 170, column: 1, scope: !11896)
!11898 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1960, file: !1960, line: 210, type: !3217, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1936, retainedNodes: !11899)
!11899 = !{!11900, !11901, !11902, !11903, !11904}
!11900 = !DILocalVariable(name: "tmp", scope: !11898, file: !1960, line: 212, type: !121)
!11901 = !DILocalVariable(name: "pllmul", scope: !11898, file: !1960, line: 212, type: !121)
!11902 = !DILocalVariable(name: "plldiv", scope: !11898, file: !1960, line: 212, type: !121)
!11903 = !DILocalVariable(name: "pllsource", scope: !11898, file: !1960, line: 212, type: !121)
!11904 = !DILocalVariable(name: "msirange", scope: !11898, file: !1960, line: 212, type: !121)
!11905 = !DILocation(line: 0, scope: !11898)
!11906 = !DILocation(line: 215, column: 14, scope: !11898)
!11907 = !DILocation(line: 217, column: 3, scope: !11898)
!11908 = !DILocation(line: 220, column: 24, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11898, file: !1960, line: 218, column: 3)
!11910 = !DILocation(line: 220, column: 52, scope: !11909)
!11911 = !DILocation(line: 221, column: 32, scope: !11909)
!11912 = !DILocation(line: 222, column: 7, scope: !11909)
!11913 = !DILocation(line: 228, column: 7, scope: !11909)
!11914 = !DILocation(line: 231, column: 21, scope: !11909)
!11915 = !DILocation(line: 232, column: 21, scope: !11909)
!11916 = !DILocation(line: 233, column: 36, scope: !11909)
!11917 = !DILocation(line: 233, column: 16, scope: !11909)
!11918 = !DILocation(line: 234, column: 24, scope: !11909)
!11919 = !DILocation(line: 234, column: 31, scope: !11909)
!11920 = !DILocation(line: 236, column: 24, scope: !11909)
!11921 = !DILocation(line: 236, column: 29, scope: !11909)
!11922 = !DILocation(line: 238, column: 21, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11909, file: !1960, line: 238, column: 11)
!11924 = !DILocation(line: 238, column: 11, scope: !11909)
!11925 = !DILocation(line: 241, column: 41, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11923, file: !1960, line: 239, column: 7)
!11927 = !DILocation(line: 241, column: 51, scope: !11926)
!11928 = !DILocation(line: 242, column: 7, scope: !11926)
!11929 = !DILocation(line: 246, column: 41, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11923, file: !1960, line: 244, column: 7)
!11931 = !DILocation(line: 246, column: 51, scope: !11930)
!11932 = !DILocation(line: 0, scope: !11909)
!11933 = !DILocation(line: 256, column: 30, scope: !11898)
!11934 = !DILocation(line: 256, column: 52, scope: !11898)
!11935 = !DILocation(line: 256, column: 9, scope: !11898)
!11936 = !DILocation(line: 258, column: 19, scope: !11898)
!11937 = !DILocation(line: 259, column: 1, scope: !11898)
!11938 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11939, file: !11939, line: 228, type: !11940, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !11943)
!11939 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11940 = !DISubroutineType(types: !11941)
!11941 = !{!11942}
!11942 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3061, line: 45, baseType: !3060)
!11943 = !{!11944, !11945}
!11944 = !DILocalVariable(name: "tickstart", scope: !11938, file: !11939, line: 230, type: !121)
!11945 = !DILocalVariable(name: "status", scope: !11938, file: !11939, line: 231, type: !11942)
!11946 = !DILocation(line: 234, column: 3, scope: !11938)
!11947 = !DILocation(line: 238, column: 3, scope: !11938)
!11948 = !DILocation(line: 241, column: 15, scope: !11938)
!11949 = !DILocation(line: 0, scope: !11938)
!11950 = !DILocation(line: 244, column: 3, scope: !11938)
!11951 = !DILocation(line: 244, column: 10, scope: !11938)
!11952 = !DILocation(line: 244, column: 43, scope: !11938)
!11953 = !DILocation(line: 246, column: 10, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11955, file: !11939, line: 246, column: 9)
!11955 = distinct !DILexicalBlock(scope: !11938, file: !11939, line: 245, column: 3)
!11956 = !DILocation(line: 246, column: 24, scope: !11954)
!11957 = !DILocation(line: 246, column: 37, scope: !11954)
!11958 = !DILocation(line: 246, column: 9, scope: !11955)
!11959 = distinct !{!11959, !11950, !11960}
!11960 = !DILocation(line: 250, column: 3, scope: !11938)
!11961 = !DILocation(line: 253, column: 3, scope: !11938)
!11962 = !DILocation(line: 256, column: 3, scope: !11938)
!11963 = !DILocation(line: 256, column: 10, scope: !11938)
!11964 = !DILocation(line: 256, column: 44, scope: !11938)
!11965 = !DILocation(line: 258, column: 10, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !11939, line: 258, column: 9)
!11967 = distinct !DILexicalBlock(scope: !11938, file: !11939, line: 257, column: 3)
!11968 = !DILocation(line: 258, column: 24, scope: !11966)
!11969 = !DILocation(line: 258, column: 37, scope: !11966)
!11970 = !DILocation(line: 258, column: 9, scope: !11967)
!11971 = distinct !{!11971, !11962, !11972}
!11972 = !DILocation(line: 262, column: 3, scope: !11938)
!11973 = !DILocation(line: 265, column: 19, scope: !11938)
!11974 = !DILocation(line: 268, column: 25, scope: !11938)
!11975 = !DILocation(line: 268, column: 12, scope: !11938)
!11976 = !DILocation(line: 269, column: 13, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11938, file: !11939, line: 269, column: 6)
!11978 = !DILocation(line: 269, column: 6, scope: !11938)
!11979 = !DILocation(line: 275, column: 3, scope: !11938)
!11980 = !DILocation(line: 277, column: 3, scope: !11938)
!11981 = !DILocation(line: 280, column: 15, scope: !11938)
!11982 = !DILocation(line: 283, column: 3, scope: !11938)
!11983 = !DILocation(line: 283, column: 10, scope: !11938)
!11984 = !DILocation(line: 283, column: 43, scope: !11938)
!11985 = !DILocation(line: 285, column: 10, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11987, file: !11939, line: 285, column: 9)
!11987 = distinct !DILexicalBlock(scope: !11938, file: !11939, line: 284, column: 3)
!11988 = !DILocation(line: 285, column: 24, scope: !11986)
!11989 = !DILocation(line: 285, column: 37, scope: !11986)
!11990 = !DILocation(line: 285, column: 9, scope: !11987)
!11991 = distinct !{!11991, !11982, !11992}
!11992 = !DILocation(line: 289, column: 3, scope: !11938)
!11993 = !DILocation(line: 292, column: 3, scope: !11938)
!11994 = !DILocation(line: 295, column: 3, scope: !11938)
!11995 = !DILocation(line: 299, column: 3, scope: !11938)
!11996 = !DILocation(line: 305, column: 3, scope: !11938)
!11997 = !DILocation(line: 307, column: 3, scope: !11938)
!11998 = !DILocation(line: 308, column: 1, scope: !11938)
!11999 = !DISubprogram(name: "HAL_GetTick", scope: !12000, file: !12000, line: 945, type: !7548, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12000 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12001 = !DISubprogram(name: "HAL_InitTick", scope: !12000, file: !12000, line: 932, type: !12002, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12002 = !DISubroutineType(types: !12003)
!12003 = !{!11942, !121}
!12004 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11939, file: !11939, line: 324, type: !12005, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12029)
!12005 = !DISubroutineType(types: !12006)
!12006 = !{!11942, !12007}
!12007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12008, size: 32)
!12008 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12009, line: 283, baseType: !12010)
!12009 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12010 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12009, line: 252, size: 416, elements: !12011)
!12011 = !{!12012, !12013, !12014, !12015, !12016, !12017, !12018, !12019, !12020, !12021}
!12012 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12010, file: !12009, line: 254, baseType: !121, size: 32)
!12013 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12010, file: !12009, line: 257, baseType: !121, size: 32, offset: 32)
!12014 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12010, file: !12009, line: 260, baseType: !121, size: 32, offset: 64)
!12015 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12010, file: !12009, line: 263, baseType: !121, size: 32, offset: 96)
!12016 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12010, file: !12009, line: 266, baseType: !121, size: 32, offset: 128)
!12017 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12010, file: !12009, line: 269, baseType: !121, size: 32, offset: 160)
!12018 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !12010, file: !12009, line: 272, baseType: !121, size: 32, offset: 192)
!12019 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !12010, file: !12009, line: 275, baseType: !121, size: 32, offset: 224)
!12020 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !12010, file: !12009, line: 278, baseType: !121, size: 32, offset: 256)
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12010, file: !12009, line: 281, baseType: !12022, size: 128, offset: 288)
!12022 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12009, line: 247, baseType: !12023)
!12023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12009, line: 234, size: 128, elements: !12024)
!12024 = !{!12025, !12026, !12027, !12028}
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12023, file: !12009, line: 236, baseType: !121, size: 32)
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12023, file: !12009, line: 239, baseType: !121, size: 32, offset: 32)
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !12023, file: !12009, line: 242, baseType: !121, size: 32, offset: 64)
!12028 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !12023, file: !12009, line: 245, baseType: !121, size: 32, offset: 96)
!12029 = !{!12030, !12031, !12032, !12033, !12034, !12035, !12039}
!12030 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12004, file: !11939, line: 324, type: !12007)
!12031 = !DILocalVariable(name: "tickstart", scope: !12004, file: !11939, line: 326, type: !121)
!12032 = !DILocalVariable(name: "status", scope: !12004, file: !11939, line: 327, type: !11942)
!12033 = !DILocalVariable(name: "sysclk_source", scope: !12004, file: !11939, line: 328, type: !121)
!12034 = !DILocalVariable(name: "pll_config", scope: !12004, file: !11939, line: 328, type: !121)
!12035 = !DILocalVariable(name: "pwrclkchanged", scope: !12036, file: !11939, line: 613, type: !12038)
!12036 = distinct !DILexicalBlock(scope: !12037, file: !11939, line: 612, column: 3)
!12037 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 611, column: 6)
!12038 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !866, line: 181, baseType: !3071)
!12039 = !DILocalVariable(name: "tmpreg", scope: !12040, file: !11939, line: 622, type: !120)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !11939, line: 622, column: 7)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !11939, line: 621, column: 5)
!12042 = distinct !DILexicalBlock(scope: !12036, file: !11939, line: 620, column: 8)
!12043 = !DILocation(line: 0, scope: !12004)
!12044 = !DILocation(line: 331, column: 24, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 331, column: 6)
!12046 = !DILocation(line: 331, column: 6, scope: !12004)
!12047 = !DILocation(line: 338, column: 19, scope: !12004)
!12048 = !DILocation(line: 339, column: 16, scope: !12004)
!12049 = !DILocation(line: 342, column: 27, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 342, column: 6)
!12051 = !DILocation(line: 342, column: 43, scope: !12050)
!12052 = !DILocation(line: 342, column: 69, scope: !12050)
!12053 = !DILocation(line: 342, column: 6, scope: !12004)
!12054 = !DILocation(line: 348, column: 23, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !11939, line: 348, column: 8)
!12056 = distinct !DILexicalBlock(scope: !12050, file: !11939, line: 343, column: 3)
!12057 = !DILocation(line: 349, column: 8, scope: !12055)
!12058 = !DILocation(line: 349, column: 27, scope: !12055)
!12059 = !DILocation(line: 349, column: 62, scope: !12055)
!12060 = !DILocation(line: 351, column: 11, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !11939, line: 351, column: 10)
!12062 = distinct !DILexicalBlock(scope: !12055, file: !11939, line: 350, column: 5)
!12063 = !DILocation(line: 351, column: 47, scope: !12061)
!12064 = !DILocation(line: 351, column: 54, scope: !12061)
!12065 = !DILocation(line: 351, column: 77, scope: !12061)
!12066 = !DILocation(line: 351, column: 86, scope: !12061)
!12067 = !DILocation(line: 351, column: 10, scope: !12062)
!12068 = !DILocation(line: 359, column: 7, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !11939, line: 359, column: 7)
!12070 = distinct !DILexicalBlock(scope: !12071, file: !11939, line: 359, column: 7)
!12071 = distinct !DILexicalBlock(scope: !12055, file: !11939, line: 357, column: 5)
!12072 = !DILocation(line: 359, column: 7, scope: !12070)
!12073 = !DILocation(line: 359, column: 7, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12069, file: !11939, line: 359, column: 7)
!12075 = !DILocation(line: 359, column: 7, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !11939, line: 359, column: 7)
!12077 = distinct !DILexicalBlock(scope: !12069, file: !11939, line: 359, column: 7)
!12078 = !DILocation(line: 359, column: 7, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !11939, line: 359, column: 7)
!12080 = distinct !DILexicalBlock(scope: !12077, file: !11939, line: 359, column: 7)
!12081 = !DILocation(line: 359, column: 7, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12080, file: !11939, line: 359, column: 7)
!12083 = !DILocation(line: 0, scope: !12069)
!12084 = !DILocation(line: 362, column: 29, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12071, file: !11939, line: 362, column: 10)
!12086 = !DILocation(line: 362, column: 38, scope: !12085)
!12087 = !DILocation(line: 0, scope: !12085)
!12088 = !DILocation(line: 362, column: 10, scope: !12071)
!12089 = !DILocation(line: 368, column: 15, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12085, file: !11939, line: 363, column: 7)
!12091 = !DILocation(line: 368, column: 51, scope: !12090)
!12092 = !DILocation(line: 368, column: 9, scope: !12090)
!12093 = !DILocation(line: 370, column: 15, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12095, file: !11939, line: 370, column: 14)
!12095 = distinct !DILexicalBlock(scope: !12090, file: !11939, line: 369, column: 9)
!12096 = !DILocation(line: 370, column: 29, scope: !12094)
!12097 = !DILocation(line: 370, column: 43, scope: !12094)
!12098 = !DILocation(line: 370, column: 14, scope: !12095)
!12099 = distinct !{!12099, !12092, !12100}
!12100 = !DILocation(line: 374, column: 9, scope: !12090)
!12101 = !DILocation(line: 382, column: 15, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12085, file: !11939, line: 377, column: 7)
!12103 = !DILocation(line: 382, column: 51, scope: !12102)
!12104 = !DILocation(line: 382, column: 9, scope: !12102)
!12105 = !DILocation(line: 384, column: 16, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12107, file: !11939, line: 384, column: 15)
!12107 = distinct !DILexicalBlock(scope: !12102, file: !11939, line: 383, column: 9)
!12108 = !DILocation(line: 384, column: 30, scope: !12106)
!12109 = !DILocation(line: 384, column: 44, scope: !12106)
!12110 = !DILocation(line: 384, column: 15, scope: !12107)
!12111 = distinct !{!12111, !12104, !12112}
!12112 = !DILocation(line: 388, column: 9, scope: !12102)
!12113 = !DILocation(line: 393, column: 27, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 393, column: 6)
!12115 = !DILocation(line: 393, column: 43, scope: !12114)
!12116 = !DILocation(line: 393, column: 69, scope: !12114)
!12117 = !DILocation(line: 393, column: 6, scope: !12004)
!12118 = !DILocation(line: 400, column: 23, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !11939, line: 400, column: 8)
!12120 = distinct !DILexicalBlock(scope: !12114, file: !11939, line: 394, column: 3)
!12121 = !DILocation(line: 401, column: 8, scope: !12119)
!12122 = !DILocation(line: 401, column: 27, scope: !12119)
!12123 = !DILocation(line: 401, column: 62, scope: !12119)
!12124 = !DILocation(line: 404, column: 11, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !11939, line: 404, column: 10)
!12126 = distinct !DILexicalBlock(scope: !12119, file: !11939, line: 402, column: 5)
!12127 = !DILocation(line: 404, column: 47, scope: !12125)
!12128 = !DILocation(line: 404, column: 54, scope: !12125)
!12129 = !DILocation(line: 404, column: 77, scope: !12125)
!12130 = !DILocation(line: 404, column: 86, scope: !12125)
!12131 = !DILocation(line: 404, column: 10, scope: !12126)
!12132 = !DILocation(line: 418, column: 29, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12134, file: !11939, line: 418, column: 10)
!12134 = distinct !DILexicalBlock(scope: !12119, file: !11939, line: 416, column: 5)
!12135 = !DILocation(line: 418, column: 38, scope: !12133)
!12136 = !DILocation(line: 418, column: 10, scope: !12134)
!12137 = !DILocation(line: 421, column: 9, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12133, file: !11939, line: 419, column: 7)
!12139 = !DILocation(line: 424, column: 21, scope: !12138)
!12140 = !DILocation(line: 427, column: 9, scope: !12138)
!12141 = !DILocation(line: 427, column: 15, scope: !12138)
!12142 = !DILocation(line: 427, column: 51, scope: !12138)
!12143 = !DILocation(line: 429, column: 15, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !11939, line: 429, column: 14)
!12145 = distinct !DILexicalBlock(scope: !12138, file: !11939, line: 428, column: 9)
!12146 = !DILocation(line: 429, column: 29, scope: !12144)
!12147 = !DILocation(line: 429, column: 43, scope: !12144)
!12148 = !DILocation(line: 429, column: 14, scope: !12145)
!12149 = distinct !{!12149, !12140, !12150}
!12150 = !DILocation(line: 433, column: 9, scope: !12138)
!12151 = !DILocation(line: 441, column: 9, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12133, file: !11939, line: 439, column: 7)
!12153 = !DILocation(line: 444, column: 21, scope: !12152)
!12154 = !DILocation(line: 447, column: 9, scope: !12152)
!12155 = !DILocation(line: 447, column: 15, scope: !12152)
!12156 = !DILocation(line: 447, column: 51, scope: !12152)
!12157 = !DILocation(line: 449, column: 15, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !11939, line: 449, column: 14)
!12159 = distinct !DILexicalBlock(scope: !12152, file: !11939, line: 448, column: 9)
!12160 = !DILocation(line: 449, column: 29, scope: !12158)
!12161 = !DILocation(line: 449, column: 43, scope: !12158)
!12162 = !DILocation(line: 449, column: 14, scope: !12159)
!12163 = distinct !{!12163, !12154, !12164}
!12164 = !DILocation(line: 453, column: 9, scope: !12152)
!12165 = !DILocation(line: 0, scope: !12119)
!12166 = !DILocation(line: 458, column: 27, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 458, column: 6)
!12168 = !DILocation(line: 458, column: 43, scope: !12167)
!12169 = !DILocation(line: 458, column: 69, scope: !12167)
!12170 = !DILocation(line: 458, column: 6, scope: !12004)
!12171 = !DILocation(line: 461, column: 22, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !11939, line: 461, column: 8)
!12173 = distinct !DILexicalBlock(scope: !12167, file: !11939, line: 459, column: 3)
!12174 = !DILocation(line: 461, column: 8, scope: !12173)
!12175 = !DILocation(line: 463, column: 11, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !11939, line: 463, column: 10)
!12177 = distinct !DILexicalBlock(scope: !12172, file: !11939, line: 462, column: 5)
!12178 = !DILocation(line: 463, column: 47, scope: !12176)
!12179 = !DILocation(line: 463, column: 54, scope: !12176)
!12180 = !DILocation(line: 463, column: 77, scope: !12176)
!12181 = !DILocation(line: 463, column: 86, scope: !12176)
!12182 = !DILocation(line: 463, column: 10, scope: !12177)
!12183 = !DILocation(line: 477, column: 31, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !11939, line: 477, column: 12)
!12185 = distinct !DILexicalBlock(scope: !12176, file: !11939, line: 469, column: 7)
!12186 = !DILocation(line: 477, column: 47, scope: !12184)
!12187 = !DILocation(line: 477, column: 45, scope: !12184)
!12188 = !DILocation(line: 477, column: 12, scope: !12185)
!12189 = !DILocation(line: 480, column: 14, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12191, file: !11939, line: 480, column: 14)
!12191 = distinct !DILexicalBlock(scope: !12184, file: !11939, line: 478, column: 9)
!12192 = !DILocation(line: 480, column: 80, scope: !12190)
!12193 = !DILocation(line: 480, column: 14, scope: !12191)
!12194 = !DILocation(line: 486, column: 11, scope: !12191)
!12195 = !DILocation(line: 488, column: 11, scope: !12191)
!12196 = !DILocation(line: 489, column: 9, scope: !12191)
!12197 = !DILocation(line: 494, column: 11, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12184, file: !11939, line: 491, column: 9)
!12199 = !DILocation(line: 496, column: 11, scope: !12198)
!12200 = !DILocation(line: 499, column: 65, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12198, file: !11939, line: 499, column: 14)
!12202 = !DILocation(line: 499, column: 14, scope: !12201)
!12203 = !DILocation(line: 499, column: 80, scope: !12201)
!12204 = !DILocation(line: 499, column: 14, scope: !12198)
!12205 = !DILocation(line: 506, column: 67, scope: !12185)
!12206 = !DILocation(line: 506, column: 81, scope: !12185)
!12207 = !DILocation(line: 506, column: 36, scope: !12185)
!12208 = !DILocation(line: 507, column: 52, scope: !12185)
!12209 = !DILocation(line: 507, column: 74, scope: !12185)
!12210 = !DILocation(line: 507, column: 31, scope: !12185)
!12211 = !DILocation(line: 507, column: 28, scope: !12185)
!12212 = !DILocation(line: 506, column: 25, scope: !12185)
!12213 = !DILocation(line: 510, column: 31, scope: !12185)
!12214 = !DILocation(line: 510, column: 18, scope: !12185)
!12215 = !DILocation(line: 511, column: 19, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12185, file: !11939, line: 511, column: 12)
!12217 = !DILocation(line: 511, column: 12, scope: !12185)
!12218 = !DILocation(line: 523, column: 29, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12220, file: !11939, line: 523, column: 10)
!12220 = distinct !DILexicalBlock(scope: !12172, file: !11939, line: 518, column: 5)
!12221 = !DILocation(line: 523, column: 38, scope: !12219)
!12222 = !DILocation(line: 523, column: 10, scope: !12220)
!12223 = !DILocation(line: 526, column: 9, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12219, file: !11939, line: 524, column: 7)
!12225 = !DILocation(line: 529, column: 21, scope: !12224)
!12226 = !DILocation(line: 532, column: 9, scope: !12224)
!12227 = !DILocation(line: 532, column: 15, scope: !12224)
!12228 = !DILocation(line: 532, column: 51, scope: !12224)
!12229 = !DILocation(line: 534, column: 15, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12231, file: !11939, line: 534, column: 14)
!12231 = distinct !DILexicalBlock(scope: !12224, file: !11939, line: 533, column: 9)
!12232 = !DILocation(line: 534, column: 29, scope: !12230)
!12233 = !DILocation(line: 534, column: 42, scope: !12230)
!12234 = !DILocation(line: 534, column: 14, scope: !12231)
!12235 = distinct !{!12235, !12226, !12236}
!12236 = !DILocation(line: 538, column: 9, scope: !12224)
!12237 = !DILocation(line: 544, column: 9, scope: !12224)
!12238 = !DILocation(line: 546, column: 9, scope: !12224)
!12239 = !DILocation(line: 548, column: 7, scope: !12224)
!12240 = !DILocation(line: 552, column: 9, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12219, file: !11939, line: 550, column: 7)
!12242 = !DILocation(line: 555, column: 21, scope: !12241)
!12243 = !DILocation(line: 558, column: 9, scope: !12241)
!12244 = !DILocation(line: 558, column: 15, scope: !12241)
!12245 = !DILocation(line: 558, column: 51, scope: !12241)
!12246 = !DILocation(line: 560, column: 15, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12248, file: !11939, line: 560, column: 14)
!12248 = distinct !DILexicalBlock(scope: !12241, file: !11939, line: 559, column: 9)
!12249 = !DILocation(line: 560, column: 29, scope: !12247)
!12250 = !DILocation(line: 560, column: 42, scope: !12247)
!12251 = !DILocation(line: 560, column: 14, scope: !12248)
!12252 = distinct !{!12252, !12243, !12253}
!12253 = !DILocation(line: 564, column: 9, scope: !12241)
!12254 = !DILocation(line: 569, column: 27, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 569, column: 6)
!12256 = !DILocation(line: 569, column: 43, scope: !12255)
!12257 = !DILocation(line: 569, column: 69, scope: !12255)
!12258 = !DILocation(line: 569, column: 6, scope: !12004)
!12259 = !DILocation(line: 575, column: 27, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12261, file: !11939, line: 575, column: 8)
!12261 = distinct !DILexicalBlock(scope: !12255, file: !11939, line: 570, column: 3)
!12262 = !DILocation(line: 575, column: 36, scope: !12260)
!12263 = !DILocation(line: 575, column: 8, scope: !12261)
!12264 = !DILocation(line: 578, column: 7, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12260, file: !11939, line: 576, column: 5)
!12266 = !DILocation(line: 581, column: 19, scope: !12265)
!12267 = !DILocation(line: 584, column: 7, scope: !12265)
!12268 = !DILocation(line: 584, column: 13, scope: !12265)
!12269 = !DILocation(line: 584, column: 49, scope: !12265)
!12270 = !DILocation(line: 586, column: 13, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !11939, line: 586, column: 12)
!12272 = distinct !DILexicalBlock(scope: !12265, file: !11939, line: 585, column: 7)
!12273 = !DILocation(line: 586, column: 27, scope: !12271)
!12274 = !DILocation(line: 586, column: 41, scope: !12271)
!12275 = !DILocation(line: 586, column: 12, scope: !12272)
!12276 = distinct !{!12276, !12267, !12277}
!12277 = !DILocation(line: 590, column: 7, scope: !12265)
!12278 = !DILocation(line: 595, column: 7, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12260, file: !11939, line: 593, column: 5)
!12280 = !DILocation(line: 598, column: 19, scope: !12279)
!12281 = !DILocation(line: 601, column: 7, scope: !12279)
!12282 = !DILocation(line: 601, column: 13, scope: !12279)
!12283 = !DILocation(line: 601, column: 49, scope: !12279)
!12284 = !DILocation(line: 603, column: 13, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !11939, line: 603, column: 12)
!12286 = distinct !DILexicalBlock(scope: !12279, file: !11939, line: 602, column: 7)
!12287 = !DILocation(line: 603, column: 27, scope: !12285)
!12288 = !DILocation(line: 603, column: 41, scope: !12285)
!12289 = !DILocation(line: 603, column: 12, scope: !12286)
!12290 = distinct !{!12290, !12281, !12291}
!12291 = !DILocation(line: 607, column: 7, scope: !12279)
!12292 = !DILocation(line: 611, column: 27, scope: !12037)
!12293 = !DILocation(line: 611, column: 43, scope: !12037)
!12294 = !DILocation(line: 611, column: 69, scope: !12037)
!12295 = !DILocation(line: 611, column: 6, scope: !12004)
!12296 = !DILocation(line: 0, scope: !12036)
!12297 = !DILocation(line: 620, column: 8, scope: !12042)
!12298 = !DILocation(line: 620, column: 8, scope: !12036)
!12299 = !DILocation(line: 622, column: 7, scope: !12040)
!12300 = !DILocation(line: 622, column: 7, scope: !12041)
!12301 = !DILocation(line: 624, column: 5, scope: !12041)
!12302 = !DILocation(line: 626, column: 8, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12036, file: !11939, line: 626, column: 8)
!12304 = !DILocation(line: 626, column: 8, scope: !12036)
!12305 = !DILocation(line: 629, column: 7, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12303, file: !11939, line: 627, column: 5)
!12307 = !DILocation(line: 632, column: 19, scope: !12306)
!12308 = !DILocation(line: 634, column: 7, scope: !12306)
!12309 = !DILocation(line: 634, column: 13, scope: !12306)
!12310 = !DILocation(line: 636, column: 13, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !11939, line: 636, column: 12)
!12312 = distinct !DILexicalBlock(scope: !12306, file: !11939, line: 635, column: 7)
!12313 = !DILocation(line: 636, column: 27, scope: !12311)
!12314 = !DILocation(line: 636, column: 40, scope: !12311)
!12315 = !DILocation(line: 636, column: 12, scope: !12312)
!12316 = distinct !{!12316, !12308, !12317}
!12317 = !DILocation(line: 640, column: 7, scope: !12306)
!12318 = !DILocation(line: 644, column: 5, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !11939, line: 644, column: 5)
!12320 = distinct !DILexicalBlock(scope: !12036, file: !11939, line: 644, column: 5)
!12321 = !DILocation(line: 644, column: 5, scope: !12320)
!12322 = !DILocation(line: 644, column: 5, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12319, file: !11939, line: 644, column: 5)
!12324 = !DILocation(line: 644, column: 5, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12326, file: !11939, line: 644, column: 5)
!12326 = distinct !DILexicalBlock(scope: !12319, file: !11939, line: 644, column: 5)
!12327 = !DILocation(line: 644, column: 5, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12329, file: !11939, line: 644, column: 5)
!12329 = distinct !DILexicalBlock(scope: !12326, file: !11939, line: 644, column: 5)
!12330 = !DILocation(line: 644, column: 5, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12329, file: !11939, line: 644, column: 5)
!12332 = !DILocation(line: 0, scope: !12319)
!12333 = !DILocation(line: 646, column: 27, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12036, file: !11939, line: 646, column: 8)
!12335 = !DILocation(line: 646, column: 36, scope: !12334)
!12336 = !DILocation(line: 0, scope: !12334)
!12337 = !DILocation(line: 646, column: 8, scope: !12036)
!12338 = !DILocation(line: 652, column: 13, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12334, file: !11939, line: 647, column: 5)
!12340 = !DILocation(line: 652, column: 49, scope: !12339)
!12341 = !DILocation(line: 652, column: 7, scope: !12339)
!12342 = !DILocation(line: 654, column: 13, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12344, file: !11939, line: 654, column: 12)
!12344 = distinct !DILexicalBlock(scope: !12339, file: !11939, line: 653, column: 7)
!12345 = !DILocation(line: 654, column: 27, scope: !12343)
!12346 = !DILocation(line: 654, column: 41, scope: !12343)
!12347 = !DILocation(line: 654, column: 12, scope: !12344)
!12348 = distinct !{!12348, !12341, !12349}
!12349 = !DILocation(line: 658, column: 7, scope: !12339)
!12350 = !DILocation(line: 666, column: 13, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12334, file: !11939, line: 661, column: 5)
!12352 = !DILocation(line: 666, column: 49, scope: !12351)
!12353 = !DILocation(line: 666, column: 7, scope: !12351)
!12354 = !DILocation(line: 668, column: 13, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12356, file: !11939, line: 668, column: 12)
!12356 = distinct !DILexicalBlock(scope: !12351, file: !11939, line: 667, column: 7)
!12357 = !DILocation(line: 668, column: 27, scope: !12355)
!12358 = !DILocation(line: 668, column: 41, scope: !12355)
!12359 = !DILocation(line: 668, column: 12, scope: !12356)
!12360 = distinct !{!12360, !12353, !12361}
!12361 = !DILocation(line: 672, column: 7, scope: !12351)
!12362 = !DILocation(line: 676, column: 8, scope: !12036)
!12363 = !DILocation(line: 678, column: 7, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12365, file: !11939, line: 677, column: 5)
!12365 = distinct !DILexicalBlock(scope: !12036, file: !11939, line: 676, column: 8)
!12366 = !DILocation(line: 679, column: 5, scope: !12364)
!12367 = !DILocation(line: 685, column: 31, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12004, file: !11939, line: 685, column: 7)
!12369 = !DILocation(line: 685, column: 41, scope: !12368)
!12370 = !DILocation(line: 685, column: 7, scope: !12004)
!12371 = !DILocation(line: 688, column: 22, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !11939, line: 688, column: 8)
!12373 = distinct !DILexicalBlock(scope: !12368, file: !11939, line: 686, column: 3)
!12374 = !DILocation(line: 688, column: 8, scope: !12373)
!12375 = !DILocation(line: 690, column: 44, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !11939, line: 690, column: 10)
!12377 = distinct !DILexicalBlock(scope: !12372, file: !11939, line: 689, column: 5)
!12378 = !DILocation(line: 0, scope: !12376)
!12379 = !DILocation(line: 690, column: 10, scope: !12377)
!12380 = !DILocation(line: 704, column: 15, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12376, file: !11939, line: 691, column: 7)
!12382 = !DILocation(line: 704, column: 51, scope: !12381)
!12383 = !DILocation(line: 704, column: 9, scope: !12381)
!12384 = !DILocation(line: 706, column: 15, scope: !12385)
!12385 = distinct !DILexicalBlock(scope: !12386, file: !11939, line: 706, column: 14)
!12386 = distinct !DILexicalBlock(scope: !12381, file: !11939, line: 705, column: 9)
!12387 = !DILocation(line: 706, column: 29, scope: !12385)
!12388 = !DILocation(line: 706, column: 43, scope: !12385)
!12389 = !DILocation(line: 706, column: 14, scope: !12386)
!12390 = distinct !{!12390, !12383, !12391}
!12391 = !DILocation(line: 710, column: 9, scope: !12381)
!12392 = !DILocation(line: 713, column: 9, scope: !12381)
!12393 = !DILocation(line: 717, column: 9, scope: !12381)
!12394 = !DILocation(line: 720, column: 21, scope: !12381)
!12395 = !DILocation(line: 723, column: 9, scope: !12381)
!12396 = !DILocation(line: 723, column: 15, scope: !12381)
!12397 = !DILocation(line: 723, column: 51, scope: !12381)
!12398 = !DILocation(line: 725, column: 15, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12400, file: !11939, line: 725, column: 14)
!12400 = distinct !DILexicalBlock(scope: !12381, file: !11939, line: 724, column: 9)
!12401 = !DILocation(line: 725, column: 29, scope: !12399)
!12402 = !DILocation(line: 725, column: 43, scope: !12399)
!12403 = !DILocation(line: 725, column: 14, scope: !12400)
!12404 = distinct !{!12404, !12395, !12405}
!12405 = !DILocation(line: 729, column: 9, scope: !12381)
!12406 = !DILocation(line: 740, column: 15, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12376, file: !11939, line: 732, column: 7)
!12408 = !DILocation(line: 740, column: 51, scope: !12407)
!12409 = !DILocation(line: 740, column: 9, scope: !12407)
!12410 = !DILocation(line: 742, column: 15, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !11939, line: 742, column: 14)
!12412 = distinct !DILexicalBlock(scope: !12407, file: !11939, line: 741, column: 9)
!12413 = !DILocation(line: 742, column: 29, scope: !12411)
!12414 = !DILocation(line: 742, column: 43, scope: !12411)
!12415 = !DILocation(line: 742, column: 14, scope: !12412)
!12416 = distinct !{!12416, !12409, !12417}
!12417 = !DILocation(line: 746, column: 9, scope: !12407)
!12418 = !DILocation(line: 752, column: 44, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !11939, line: 752, column: 10)
!12420 = distinct !DILexicalBlock(scope: !12372, file: !11939, line: 750, column: 5)
!12421 = !DILocation(line: 752, column: 10, scope: !12420)
!12422 = !DILocation(line: 759, column: 27, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12419, file: !11939, line: 757, column: 7)
!12424 = !DILocation(line: 760, column: 13, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12423, file: !11939, line: 760, column: 12)
!12426 = !DILocation(line: 760, column: 77, scope: !12425)
!12427 = !DILocation(line: 760, column: 51, scope: !12425)
!12428 = !DILocation(line: 760, column: 88, scope: !12425)
!12429 = !DILocation(line: 761, column: 13, scope: !12425)
!12430 = !DILocation(line: 761, column: 77, scope: !12425)
!12431 = !DILocation(line: 761, column: 51, scope: !12425)
!12432 = !DILocation(line: 761, column: 85, scope: !12425)
!12433 = !DILocation(line: 762, column: 13, scope: !12425)
!12434 = !DILocation(line: 762, column: 77, scope: !12425)
!12435 = !DILocation(line: 762, column: 51, scope: !12425)
!12436 = !DILocation(line: 760, column: 12, scope: !12423)
!12437 = !DILocation(line: 770, column: 3, scope: !12004)
!12438 = !DILocation(line: 771, column: 1, scope: !12004)
!12439 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11939, file: !11939, line: 1343, type: !12002, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12440)
!12440 = !{!12441, !12442, !12443, !12444}
!12441 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12439, file: !11939, line: 1343, type: !121)
!12442 = !DILocalVariable(name: "vos", scope: !12439, file: !11939, line: 1345, type: !121)
!12443 = !DILocalVariable(name: "latency", scope: !12439, file: !11939, line: 1346, type: !121)
!12444 = !DILocalVariable(name: "tmpreg", scope: !12445, file: !11939, line: 1357, type: !120)
!12445 = distinct !DILexicalBlock(scope: !12446, file: !11939, line: 1357, column: 7)
!12446 = distinct !DILexicalBlock(scope: !12447, file: !11939, line: 1356, column: 5)
!12447 = distinct !DILexicalBlock(scope: !12448, file: !11939, line: 1351, column: 8)
!12448 = distinct !DILexicalBlock(scope: !12449, file: !11939, line: 1350, column: 3)
!12449 = distinct !DILexicalBlock(scope: !12439, file: !11939, line: 1349, column: 7)
!12450 = !DILocation(line: 0, scope: !12439)
!12451 = !DILocation(line: 1349, column: 7, scope: !12449)
!12452 = !DILocation(line: 1349, column: 42, scope: !12449)
!12453 = !DILocation(line: 1349, column: 7, scope: !12439)
!12454 = !DILocation(line: 1351, column: 8, scope: !12447)
!12455 = !DILocation(line: 1351, column: 8, scope: !12448)
!12456 = !DILocation(line: 1353, column: 13, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12447, file: !11939, line: 1352, column: 5)
!12458 = !DILocation(line: 1354, column: 5, scope: !12457)
!12459 = !DILocation(line: 1357, column: 7, scope: !12445)
!12460 = !DILocation(line: 1357, column: 7, scope: !12446)
!12461 = !DILocation(line: 1358, column: 13, scope: !12446)
!12462 = !DILocation(line: 1359, column: 7, scope: !12446)
!12463 = !DILocation(line: 0, scope: !12447)
!12464 = !DILocation(line: 1363, column: 13, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12448, file: !11939, line: 1363, column: 8)
!12466 = !DILocation(line: 1363, column: 46, scope: !12465)
!12467 = !DILocation(line: 1369, column: 3, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12439, file: !11939, line: 1369, column: 3)
!12469 = !DILocation(line: 1369, column: 3, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12471, file: !11939, line: 1369, column: 3)
!12471 = distinct !DILexicalBlock(scope: !12468, file: !11939, line: 1369, column: 3)
!12472 = !DILocation(line: 1373, column: 6, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12439, file: !11939, line: 1373, column: 6)
!12474 = !DILocation(line: 1379, column: 1, scope: !12439)
!12475 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11939, file: !11939, line: 799, type: !12476, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12487)
!12476 = !DISubroutineType(types: !12477)
!12477 = !{!11942, !12478, !121}
!12478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12479, size: 32)
!12479 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12009, line: 304, baseType: !12480)
!12480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12009, line: 288, size: 160, elements: !12481)
!12481 = !{!12482, !12483, !12484, !12485, !12486}
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12480, file: !12009, line: 290, baseType: !121, size: 32)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12480, file: !12009, line: 293, baseType: !121, size: 32, offset: 32)
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12480, file: !12009, line: 296, baseType: !121, size: 32, offset: 64)
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12480, file: !12009, line: 299, baseType: !121, size: 32, offset: 96)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12480, file: !12009, line: 302, baseType: !121, size: 32, offset: 128)
!12487 = !{!12488, !12489, !12490, !12491}
!12488 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12475, file: !11939, line: 799, type: !12478)
!12489 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12475, file: !11939, line: 799, type: !121)
!12490 = !DILocalVariable(name: "tickstart", scope: !12475, file: !11939, line: 801, type: !121)
!12491 = !DILocalVariable(name: "status", scope: !12475, file: !11939, line: 802, type: !11942)
!12492 = !DILocation(line: 0, scope: !12475)
!12493 = !DILocation(line: 805, column: 24, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 805, column: 6)
!12495 = !DILocation(line: 805, column: 6, scope: !12475)
!12496 = !DILocation(line: 817, column: 17, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 817, column: 6)
!12498 = !DILocation(line: 817, column: 15, scope: !12497)
!12499 = !DILocation(line: 817, column: 6, scope: !12475)
!12500 = !DILocation(line: 820, column: 5, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !11939, line: 820, column: 5)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !11939, line: 820, column: 5)
!12503 = distinct !DILexicalBlock(scope: !12497, file: !11939, line: 818, column: 3)
!12504 = !DILocation(line: 820, column: 5, scope: !12502)
!12505 = !DILocation(line: 820, column: 5, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12501, file: !11939, line: 820, column: 5)
!12507 = !DILocation(line: 824, column: 8, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12503, file: !11939, line: 824, column: 8)
!12509 = !DILocation(line: 824, column: 34, scope: !12508)
!12510 = !DILocation(line: 824, column: 8, scope: !12503)
!12511 = !DILocation(line: 831, column: 27, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 831, column: 6)
!12513 = !DILocation(line: 831, column: 38, scope: !12512)
!12514 = !DILocation(line: 831, column: 60, scope: !12512)
!12515 = !DILocation(line: 831, column: 6, scope: !12475)
!12516 = !DILocation(line: 834, column: 5, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12512, file: !11939, line: 832, column: 3)
!12518 = !DILocation(line: 838, column: 27, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 838, column: 6)
!12520 = !DILocation(line: 835, column: 3, scope: !12517)
!12521 = !DILocation(line: 838, column: 38, scope: !12519)
!12522 = !DILocation(line: 838, column: 62, scope: !12519)
!12523 = !DILocation(line: 838, column: 6, scope: !12475)
!12524 = !DILocation(line: 843, column: 27, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !11939, line: 843, column: 8)
!12526 = distinct !DILexicalBlock(scope: !12519, file: !11939, line: 839, column: 3)
!12527 = !DILocation(line: 843, column: 8, scope: !12526)
!12528 = !DILocation(line: 846, column: 10, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12530, file: !11939, line: 846, column: 10)
!12530 = distinct !DILexicalBlock(scope: !12525, file: !11939, line: 844, column: 5)
!12531 = !DILocation(line: 846, column: 46, scope: !12529)
!12532 = !DILocation(line: 846, column: 10, scope: !12530)
!12533 = !DILocation(line: 855, column: 10, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !11939, line: 855, column: 10)
!12535 = distinct !DILexicalBlock(scope: !12536, file: !11939, line: 853, column: 5)
!12536 = distinct !DILexicalBlock(scope: !12525, file: !11939, line: 852, column: 13)
!12537 = !DILocation(line: 855, column: 46, scope: !12534)
!12538 = !DILocation(line: 855, column: 10, scope: !12535)
!12539 = !DILocation(line: 864, column: 10, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12541, file: !11939, line: 864, column: 10)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !11939, line: 862, column: 5)
!12542 = distinct !DILexicalBlock(scope: !12536, file: !11939, line: 861, column: 13)
!12543 = !DILocation(line: 864, column: 46, scope: !12540)
!12544 = !DILocation(line: 864, column: 10, scope: !12541)
!12545 = !DILocation(line: 873, column: 10, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !11939, line: 873, column: 10)
!12547 = distinct !DILexicalBlock(scope: !12542, file: !11939, line: 871, column: 5)
!12548 = !DILocation(line: 873, column: 46, scope: !12546)
!12549 = !DILocation(line: 873, column: 10, scope: !12547)
!12550 = !DILocation(line: 878, column: 5, scope: !12526)
!12551 = !DILocation(line: 881, column: 17, scope: !12526)
!12552 = !DILocation(line: 883, column: 27, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12526, file: !11939, line: 883, column: 8)
!12554 = !DILocation(line: 883, column: 8, scope: !12526)
!12555 = !DILocation(line: 885, column: 14, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12553, file: !11939, line: 884, column: 5)
!12557 = !DILocation(line: 885, column: 44, scope: !12556)
!12558 = !DILocation(line: 885, column: 7, scope: !12556)
!12559 = !DILocation(line: 887, column: 13, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !11939, line: 887, column: 12)
!12561 = distinct !DILexicalBlock(scope: !12556, file: !11939, line: 886, column: 7)
!12562 = !DILocation(line: 887, column: 27, scope: !12560)
!12563 = !DILocation(line: 887, column: 41, scope: !12560)
!12564 = !DILocation(line: 887, column: 12, scope: !12561)
!12565 = distinct !{!12565, !12558, !12566}
!12566 = !DILocation(line: 891, column: 7, scope: !12556)
!12567 = !DILocation(line: 895, column: 14, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !11939, line: 894, column: 5)
!12569 = distinct !DILexicalBlock(scope: !12553, file: !11939, line: 893, column: 13)
!12570 = !DILocation(line: 895, column: 44, scope: !12568)
!12571 = !DILocation(line: 895, column: 7, scope: !12568)
!12572 = !DILocation(line: 897, column: 13, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !11939, line: 897, column: 12)
!12574 = distinct !DILexicalBlock(scope: !12568, file: !11939, line: 896, column: 7)
!12575 = !DILocation(line: 897, column: 27, scope: !12573)
!12576 = !DILocation(line: 897, column: 41, scope: !12573)
!12577 = !DILocation(line: 897, column: 12, scope: !12574)
!12578 = distinct !{!12578, !12571, !12579}
!12579 = !DILocation(line: 901, column: 7, scope: !12568)
!12580 = !DILocation(line: 905, column: 14, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !11939, line: 904, column: 5)
!12582 = distinct !DILexicalBlock(scope: !12569, file: !11939, line: 903, column: 13)
!12583 = !DILocation(line: 905, column: 44, scope: !12581)
!12584 = !DILocation(line: 905, column: 7, scope: !12581)
!12585 = !DILocation(line: 907, column: 13, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !11939, line: 907, column: 12)
!12587 = distinct !DILexicalBlock(scope: !12581, file: !11939, line: 906, column: 7)
!12588 = !DILocation(line: 907, column: 27, scope: !12586)
!12589 = !DILocation(line: 907, column: 41, scope: !12586)
!12590 = !DILocation(line: 907, column: 12, scope: !12587)
!12591 = distinct !{!12591, !12584, !12592}
!12592 = !DILocation(line: 911, column: 7, scope: !12581)
!12593 = !DILocation(line: 915, column: 13, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12582, file: !11939, line: 914, column: 5)
!12595 = !DILocation(line: 915, column: 43, scope: !12594)
!12596 = !DILocation(line: 915, column: 7, scope: !12594)
!12597 = !DILocation(line: 917, column: 13, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12599, file: !11939, line: 917, column: 12)
!12599 = distinct !DILexicalBlock(scope: !12594, file: !11939, line: 916, column: 7)
!12600 = !DILocation(line: 917, column: 27, scope: !12598)
!12601 = !DILocation(line: 917, column: 41, scope: !12598)
!12602 = !DILocation(line: 917, column: 12, scope: !12599)
!12603 = distinct !{!12603, !12596, !12604}
!12604 = !DILocation(line: 921, column: 7, scope: !12594)
!12605 = !DILocation(line: 925, column: 17, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 925, column: 6)
!12607 = !DILocation(line: 925, column: 15, scope: !12606)
!12608 = !DILocation(line: 925, column: 6, scope: !12475)
!12609 = !DILocation(line: 928, column: 5, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12611, file: !11939, line: 928, column: 5)
!12611 = distinct !DILexicalBlock(scope: !12606, file: !11939, line: 926, column: 3)
!12612 = !DILocation(line: 932, column: 8, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12611, file: !11939, line: 932, column: 8)
!12614 = !DILocation(line: 932, column: 34, scope: !12613)
!12615 = !DILocation(line: 932, column: 8, scope: !12611)
!12616 = !DILocation(line: 939, column: 27, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 939, column: 6)
!12618 = !DILocation(line: 939, column: 38, scope: !12617)
!12619 = !DILocation(line: 939, column: 61, scope: !12617)
!12620 = !DILocation(line: 939, column: 6, scope: !12475)
!12621 = !DILocation(line: 942, column: 5, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12617, file: !11939, line: 940, column: 3)
!12623 = !DILocation(line: 946, column: 27, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12475, file: !11939, line: 946, column: 6)
!12625 = !DILocation(line: 943, column: 3, scope: !12622)
!12626 = !DILocation(line: 946, column: 38, scope: !12624)
!12627 = !DILocation(line: 946, column: 61, scope: !12624)
!12628 = !DILocation(line: 946, column: 6, scope: !12475)
!12629 = !DILocation(line: 949, column: 5, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12624, file: !11939, line: 947, column: 3)
!12631 = !DILocation(line: 950, column: 3, scope: !12630)
!12632 = !DILocation(line: 953, column: 21, scope: !12475)
!12633 = !DILocation(line: 953, column: 70, scope: !12475)
!12634 = !DILocation(line: 953, column: 91, scope: !12475)
!12635 = !DILocation(line: 953, column: 50, scope: !12475)
!12636 = !DILocation(line: 953, column: 47, scope: !12475)
!12637 = !DILocation(line: 953, column: 19, scope: !12475)
!12638 = !DILocation(line: 956, column: 25, scope: !12475)
!12639 = !DILocation(line: 956, column: 12, scope: !12475)
!12640 = !DILocation(line: 958, column: 3, scope: !12475)
!12641 = !DILocation(line: 959, column: 1, scope: !12475)
!12642 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11939, file: !11939, line: 1083, type: !7548, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12643)
!12643 = !{!12644, !12645, !12646, !12647, !12648, !12649}
!12644 = !DILocalVariable(name: "tmpreg", scope: !12642, file: !11939, line: 1085, type: !121)
!12645 = !DILocalVariable(name: "pllm", scope: !12642, file: !11939, line: 1085, type: !121)
!12646 = !DILocalVariable(name: "plld", scope: !12642, file: !11939, line: 1085, type: !121)
!12647 = !DILocalVariable(name: "pllvco", scope: !12642, file: !11939, line: 1085, type: !121)
!12648 = !DILocalVariable(name: "msiclkrange", scope: !12642, file: !11939, line: 1085, type: !121)
!12649 = !DILocalVariable(name: "sysclockfreq", scope: !12642, file: !11939, line: 1085, type: !121)
!12650 = !DILocation(line: 1087, column: 17, scope: !12642)
!12651 = !DILocation(line: 0, scope: !12642)
!12652 = !DILocation(line: 1090, column: 3, scope: !12642)
!12653 = !DILocation(line: 1100, column: 7, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !11939, line: 1098, column: 5)
!12655 = distinct !DILexicalBlock(scope: !12642, file: !11939, line: 1091, column: 3)
!12656 = !DILocation(line: 1104, column: 63, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12655, file: !11939, line: 1103, column: 5)
!12658 = !DILocation(line: 1104, column: 14, scope: !12657)
!12659 = !DILocation(line: 1105, column: 52, scope: !12657)
!12660 = !DILocation(line: 1105, column: 76, scope: !12657)
!12661 = !DILocation(line: 1106, column: 11, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12657, file: !11939, line: 1106, column: 11)
!12663 = !DILocation(line: 1106, column: 41, scope: !12662)
!12664 = !DILocation(line: 1106, column: 11, scope: !12657)
!12665 = !DILocation(line: 0, scope: !12662)
!12666 = !DILocation(line: 1117, column: 7, scope: !12657)
!12667 = !DILocation(line: 1122, column: 27, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12655, file: !11939, line: 1121, column: 5)
!12669 = !DILocation(line: 1122, column: 56, scope: !12668)
!12670 = !DILocation(line: 1123, column: 30, scope: !12668)
!12671 = !DILocation(line: 1124, column: 7, scope: !12668)
!12672 = !DILocation(line: 0, scope: !12655)
!12673 = !DILocation(line: 1127, column: 3, scope: !12642)
!12674 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11939, file: !11939, line: 1005, type: !8961, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12675)
!12675 = !{!12676, !12677, !12678, !12679, !12689}
!12676 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12674, file: !11939, line: 1005, type: !121)
!12677 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12674, file: !11939, line: 1005, type: !121)
!12678 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12674, file: !11939, line: 1005, type: !121)
!12679 = !DILocalVariable(name: "gpio", scope: !12674, file: !11939, line: 1007, type: !12680)
!12680 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12681, line: 64, baseType: !12682)
!12681 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12681, line: 48, size: 160, elements: !12683)
!12683 = !{!12684, !12685, !12686, !12687, !12688}
!12684 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12682, file: !12681, line: 50, baseType: !121, size: 32)
!12685 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12682, file: !12681, line: 53, baseType: !121, size: 32, offset: 32)
!12686 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12682, file: !12681, line: 56, baseType: !121, size: 32, offset: 64)
!12687 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12682, file: !12681, line: 59, baseType: !121, size: 32, offset: 96)
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12682, file: !12681, line: 62, baseType: !121, size: 32, offset: 128)
!12689 = !DILocalVariable(name: "tmpreg", scope: !12690, file: !11939, line: 1022, type: !120)
!12690 = distinct !DILexicalBlock(scope: !12674, file: !11939, line: 1022, column: 3)
!12691 = !DILocation(line: 0, scope: !12674)
!12692 = !DILocation(line: 1007, column: 3, scope: !12674)
!12693 = !DILocation(line: 1007, column: 20, scope: !12674)
!12694 = !DILocation(line: 1015, column: 8, scope: !12674)
!12695 = !DILocation(line: 1015, column: 18, scope: !12674)
!12696 = !DILocation(line: 1016, column: 8, scope: !12674)
!12697 = !DILocation(line: 1016, column: 18, scope: !12674)
!12698 = !DILocation(line: 1017, column: 8, scope: !12674)
!12699 = !DILocation(line: 1017, column: 18, scope: !12674)
!12700 = !DILocation(line: 1018, column: 8, scope: !12674)
!12701 = !DILocation(line: 1018, column: 18, scope: !12674)
!12702 = !DILocation(line: 1019, column: 8, scope: !12674)
!12703 = !DILocation(line: 1019, column: 18, scope: !12674)
!12704 = !DILocation(line: 1022, column: 3, scope: !12690)
!12705 = !DILocation(line: 1022, column: 3, scope: !12674)
!12706 = !DILocation(line: 1024, column: 3, scope: !12674)
!12707 = !DILocation(line: 1027, column: 3, scope: !12674)
!12708 = !DILocation(line: 1028, column: 1, scope: !12674)
!12709 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12681, file: !12681, line: 293, type: !12710, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!12710 = !DISubroutineType(types: !12711)
!12711 = !{null, !3114, !12712}
!12712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12680, size: 32)
!12713 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11939, file: !11939, line: 1039, type: !3217, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12714 = !DILocation(line: 1041, column: 38, scope: !12713)
!12715 = !DILocation(line: 1042, column: 1, scope: !12713)
!12716 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11939, file: !11939, line: 1048, type: !3217, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12717 = !DILocation(line: 1050, column: 38, scope: !12716)
!12718 = !DILocation(line: 1051, column: 1, scope: !12716)
!12719 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11939, file: !11939, line: 1139, type: !7548, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12720 = !DILocation(line: 1141, column: 10, scope: !12719)
!12721 = !DILocation(line: 1141, column: 3, scope: !12719)
!12722 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11939, file: !11939, line: 1150, type: !7548, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12723 = !DILocation(line: 1153, column: 11, scope: !12722)
!12724 = !DILocation(line: 1153, column: 56, scope: !12722)
!12725 = !DILocation(line: 1153, column: 79, scope: !12722)
!12726 = !DILocation(line: 1153, column: 36, scope: !12722)
!12727 = !DILocation(line: 1153, column: 33, scope: !12722)
!12728 = !DILocation(line: 1153, column: 3, scope: !12722)
!12729 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11939, file: !11939, line: 1162, type: !7548, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12730 = !DILocation(line: 1165, column: 11, scope: !12729)
!12731 = !DILocation(line: 1165, column: 55, scope: !12729)
!12732 = !DILocation(line: 1165, column: 78, scope: !12729)
!12733 = !DILocation(line: 1165, column: 35, scope: !12729)
!12734 = !DILocation(line: 1165, column: 32, scope: !12729)
!12735 = !DILocation(line: 1165, column: 3, scope: !12729)
!12736 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11939, file: !11939, line: 1175, type: !12737, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12739)
!12737 = !DISubroutineType(types: !12738)
!12738 = !{null, !12007}
!12739 = !{!12740}
!12740 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12736, file: !11939, line: 1175, type: !12007)
!12741 = !DILocation(line: 0, scope: !12736)
!12742 = !DILocation(line: 1181, column: 22, scope: !12736)
!12743 = !DILocation(line: 1181, column: 37, scope: !12736)
!12744 = !DILocation(line: 1186, column: 12, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12736, file: !11939, line: 1186, column: 6)
!12746 = !DILocation(line: 1186, column: 15, scope: !12745)
!12747 = !DILocation(line: 1186, column: 31, scope: !12745)
!12748 = !DILocation(line: 1186, column: 6, scope: !12736)
!12749 = !DILocation(line: 1188, column: 24, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12745, file: !11939, line: 1187, column: 3)
!12751 = !DILocation(line: 1188, column: 33, scope: !12750)
!12752 = !DILocation(line: 1189, column: 3, scope: !12750)
!12753 = !DILocation(line: 1190, column: 17, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12745, file: !11939, line: 1190, column: 11)
!12755 = !DILocation(line: 1190, column: 20, scope: !12754)
!12756 = !DILocation(line: 1190, column: 35, scope: !12754)
!12757 = !DILocation(line: 0, scope: !12754)
!12758 = !DILocation(line: 1190, column: 11, scope: !12745)
!12759 = !DILocation(line: 1192, column: 33, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12754, file: !11939, line: 1191, column: 3)
!12761 = !DILocation(line: 1193, column: 3, scope: !12760)
!12762 = !DILocation(line: 1196, column: 33, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12754, file: !11939, line: 1195, column: 3)
!12764 = !DILocation(line: 1200, column: 12, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12736, file: !11939, line: 1200, column: 6)
!12766 = !DILocation(line: 1200, column: 15, scope: !12765)
!12767 = !DILocation(line: 1206, column: 24, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12765, file: !11939, line: 1205, column: 3)
!12769 = !DILocation(line: 1206, column: 33, scope: !12768)
!12770 = !DILocation(line: 1209, column: 61, scope: !12736)
!12771 = !DILocation(line: 1209, column: 88, scope: !12736)
!12772 = !DILocation(line: 1209, column: 22, scope: !12736)
!12773 = !DILocation(line: 1209, column: 42, scope: !12736)
!12774 = !DILocation(line: 1212, column: 12, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12736, file: !11939, line: 1212, column: 6)
!12776 = !DILocation(line: 1212, column: 6, scope: !12736)
!12777 = !DILocation(line: 1218, column: 24, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12775, file: !11939, line: 1217, column: 3)
!12779 = !DILocation(line: 1218, column: 33, scope: !12778)
!12780 = !DILocation(line: 1221, column: 61, scope: !12736)
!12781 = !DILocation(line: 1221, column: 88, scope: !12736)
!12782 = !DILocation(line: 1221, column: 22, scope: !12736)
!12783 = !DILocation(line: 1221, column: 42, scope: !12736)
!12784 = !DILocation(line: 1222, column: 55, scope: !12736)
!12785 = !DILocation(line: 1222, column: 61, scope: !12736)
!12786 = !DILocation(line: 1222, column: 22, scope: !12736)
!12787 = !DILocation(line: 1222, column: 36, scope: !12736)
!12788 = !DILocation(line: 1225, column: 12, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12736, file: !11939, line: 1225, column: 6)
!12790 = !DILocation(line: 1225, column: 16, scope: !12789)
!12791 = !DILocation(line: 1225, column: 33, scope: !12789)
!12792 = !DILocation(line: 1225, column: 6, scope: !12736)
!12793 = !DILocation(line: 1227, column: 24, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12789, file: !11939, line: 1226, column: 3)
!12795 = !DILocation(line: 1227, column: 33, scope: !12794)
!12796 = !DILocation(line: 1228, column: 3, scope: !12794)
!12797 = !DILocation(line: 1229, column: 17, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12789, file: !11939, line: 1229, column: 11)
!12799 = !DILocation(line: 1229, column: 21, scope: !12798)
!12800 = !DILocation(line: 1229, column: 37, scope: !12798)
!12801 = !DILocation(line: 0, scope: !12798)
!12802 = !DILocation(line: 1229, column: 11, scope: !12789)
!12803 = !DILocation(line: 1231, column: 33, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12798, file: !11939, line: 1230, column: 3)
!12805 = !DILocation(line: 1232, column: 3, scope: !12804)
!12806 = !DILocation(line: 1235, column: 33, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12798, file: !11939, line: 1234, column: 3)
!12808 = !DILocation(line: 1239, column: 12, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12736, file: !11939, line: 1239, column: 6)
!12810 = !DILocation(line: 1239, column: 16, scope: !12809)
!12811 = !DILocation(line: 1245, column: 24, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12809, file: !11939, line: 1244, column: 3)
!12813 = !DILocation(line: 1245, column: 33, scope: !12812)
!12814 = !DILocation(line: 1250, column: 12, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12736, file: !11939, line: 1250, column: 6)
!12816 = !DILocation(line: 1250, column: 15, scope: !12815)
!12817 = !DILocation(line: 1250, column: 30, scope: !12815)
!12818 = !DILocation(line: 1250, column: 6, scope: !12736)
!12819 = !DILocation(line: 1256, column: 28, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12815, file: !11939, line: 1255, column: 3)
!12821 = !DILocation(line: 1256, column: 37, scope: !12820)
!12822 = !DILocation(line: 1258, column: 54, scope: !12736)
!12823 = !DILocation(line: 1258, column: 59, scope: !12736)
!12824 = !DILocation(line: 1258, column: 26, scope: !12736)
!12825 = !DILocation(line: 1258, column: 36, scope: !12736)
!12826 = !DILocation(line: 1259, column: 51, scope: !12736)
!12827 = !DILocation(line: 1259, column: 56, scope: !12736)
!12828 = !DILocation(line: 1259, column: 26, scope: !12736)
!12829 = !DILocation(line: 1259, column: 33, scope: !12736)
!12830 = !DILocation(line: 1260, column: 51, scope: !12736)
!12831 = !DILocation(line: 1260, column: 56, scope: !12736)
!12832 = !DILocation(line: 1260, column: 26, scope: !12736)
!12833 = !DILocation(line: 1260, column: 33, scope: !12736)
!12834 = !DILocation(line: 1261, column: 1, scope: !12736)
!12835 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11939, file: !11939, line: 1271, type: !12836, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !12838)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{null, !12478, !902}
!12838 = !{!12839, !12840}
!12839 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12835, file: !11939, line: 1271, type: !12478)
!12840 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12835, file: !11939, line: 1271, type: !902)
!12841 = !DILocation(line: 0, scope: !12835)
!12842 = !DILocation(line: 1278, column: 22, scope: !12835)
!12843 = !DILocation(line: 1278, column: 32, scope: !12835)
!12844 = !DILocation(line: 1281, column: 53, scope: !12835)
!12845 = !DILocation(line: 1281, column: 58, scope: !12835)
!12846 = !DILocation(line: 1281, column: 22, scope: !12835)
!12847 = !DILocation(line: 1281, column: 35, scope: !12835)
!12848 = !DILocation(line: 1284, column: 54, scope: !12835)
!12849 = !DILocation(line: 1284, column: 59, scope: !12835)
!12850 = !DILocation(line: 1284, column: 22, scope: !12835)
!12851 = !DILocation(line: 1284, column: 36, scope: !12835)
!12852 = !DILocation(line: 1287, column: 55, scope: !12835)
!12853 = !DILocation(line: 1287, column: 60, scope: !12835)
!12854 = !DILocation(line: 1287, column: 22, scope: !12835)
!12855 = !DILocation(line: 1287, column: 37, scope: !12835)
!12856 = !DILocation(line: 1290, column: 56, scope: !12835)
!12857 = !DILocation(line: 1290, column: 79, scope: !12835)
!12858 = !DILocation(line: 1290, column: 22, scope: !12835)
!12859 = !DILocation(line: 1290, column: 37, scope: !12835)
!12860 = !DILocation(line: 1293, column: 16, scope: !12835)
!12861 = !DILocation(line: 1293, column: 14, scope: !12835)
!12862 = !DILocation(line: 1294, column: 1, scope: !12835)
!12863 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11939, file: !11939, line: 1301, type: !3217, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12864 = !DILocation(line: 1304, column: 6, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12863, file: !11939, line: 1304, column: 6)
!12866 = !DILocation(line: 1304, column: 6, scope: !12863)
!12867 = !DILocation(line: 1307, column: 5, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12865, file: !11939, line: 1305, column: 3)
!12869 = !DILocation(line: 1310, column: 5, scope: !12868)
!12870 = !DILocation(line: 1311, column: 3, scope: !12868)
!12871 = !DILocation(line: 1312, column: 1, scope: !12863)
!12872 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11939, file: !11939, line: 1318, type: !3217, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !474)
!12873 = !DILocation(line: 1323, column: 1, scope: !12872)
!12874 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12875, file: !12875, line: 147, type: !5785, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12876)
!12875 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12876 = !{!12877}
!12877 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12874, file: !12875, line: 147, type: !121)
!12878 = !DILocation(line: 0, scope: !12874)
!12879 = !DILocation(line: 150, column: 3, scope: !12874)
!12880 = !DILocation(line: 151, column: 1, scope: !12874)
!12881 = distinct !DISubprogram(name: "LL_InitTick", scope: !12882, file: !12882, line: 222, type: !10078, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12883)
!12882 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12883 = !{!12884, !12885}
!12884 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12881, file: !12882, line: 222, type: !121)
!12885 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12881, file: !12882, line: 222, type: !121)
!12886 = !DILocation(line: 0, scope: !12881)
!12887 = !DILocation(line: 225, column: 46, scope: !12881)
!12888 = !DILocation(line: 225, column: 55, scope: !12881)
!12889 = !DILocation(line: 225, column: 18, scope: !12881)
!12890 = !DILocation(line: 226, column: 18, scope: !12881)
!12891 = !DILocation(line: 227, column: 18, scope: !12881)
!12892 = !DILocation(line: 229, column: 1, scope: !12881)
!12893 = distinct !DISubprogram(name: "LL_mDelay", scope: !12875, file: !12875, line: 163, type: !5785, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12894)
!12894 = !{!12895, !12896, !12897}
!12895 = !DILocalVariable(name: "Delay", arg: 1, scope: !12893, file: !12875, line: 163, type: !121)
!12896 = !DILocalVariable(name: "tmp", scope: !12893, file: !12875, line: 165, type: !120)
!12897 = !DILocalVariable(name: "tmpDelay", scope: !12893, file: !12875, line: 166, type: !121)
!12898 = !DILocation(line: 0, scope: !12893)
!12899 = !DILocation(line: 165, column: 3, scope: !12893)
!12900 = !DILocation(line: 165, column: 18, scope: !12893)
!12901 = !DILocation(line: 165, column: 33, scope: !12893)
!12902 = !DILocation(line: 169, column: 10, scope: !12893)
!12903 = !DILocation(line: 172, column: 15, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12893, file: !12875, line: 172, column: 6)
!12905 = !DILocation(line: 177, column: 3, scope: !12893)
!12906 = !DILocation(line: 179, column: 18, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12908, file: !12875, line: 179, column: 8)
!12908 = distinct !DILexicalBlock(scope: !12893, file: !12875, line: 178, column: 3)
!12909 = !DILocation(line: 177, column: 19, scope: !12893)
!12910 = !DILocation(line: 184, column: 1, scope: !12893)
!12911 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12875, file: !12875, line: 227, type: !5785, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12912)
!12912 = !{!12913}
!12913 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12911, file: !12875, line: 227, type: !121)
!12914 = !DILocation(line: 0, scope: !12911)
!12915 = !DILocation(line: 230, column: 19, scope: !12911)
!12916 = !DILocation(line: 231, column: 1, scope: !12911)
!12917 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12875, file: !12875, line: 242, type: !12918, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12921)
!12918 = !DISubroutineType(types: !12919)
!12919 = !{!12920, !121}
!12920 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !866, line: 194, baseType: !865)
!12921 = !{!12922, !12923, !12924}
!12922 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12917, file: !12875, line: 242, type: !121)
!12923 = !DILocalVariable(name: "status", scope: !12917, file: !12875, line: 244, type: !12920)
!12924 = !DILocalVariable(name: "latency", scope: !12917, file: !12875, line: 246, type: !121)
!12925 = !DILocation(line: 0, scope: !12917)
!12926 = !DILocation(line: 249, column: 25, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12917, file: !12875, line: 249, column: 7)
!12928 = !DILocation(line: 255, column: 9, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !12875, line: 255, column: 9)
!12930 = distinct !DILexicalBlock(scope: !12927, file: !12875, line: 254, column: 3)
!12931 = !DILocation(line: 255, column: 41, scope: !12929)
!12932 = !DILocation(line: 255, column: 9, scope: !12930)
!12933 = !DILocation(line: 257, column: 21, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !12875, line: 257, column: 11)
!12935 = distinct !DILexicalBlock(scope: !12929, file: !12875, line: 256, column: 5)
!12936 = !DILocation(line: 284, column: 9, scope: !12930)
!12937 = !DILocation(line: 264, column: 14, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12929, file: !12875, line: 264, column: 14)
!12939 = !DILocation(line: 264, column: 46, scope: !12938)
!12940 = !DILocation(line: 264, column: 14, scope: !12929)
!12941 = !DILocation(line: 266, column: 21, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12943, file: !12875, line: 266, column: 11)
!12943 = distinct !DILexicalBlock(scope: !12938, file: !12875, line: 265, column: 5)
!12944 = !DILocation(line: 275, column: 21, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !12875, line: 275, column: 11)
!12946 = distinct !DILexicalBlock(scope: !12938, file: !12875, line: 274, column: 5)
!12947 = !DILocation(line: 286, column: 7, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12949, file: !12875, line: 285, column: 5)
!12949 = distinct !DILexicalBlock(scope: !12930, file: !12875, line: 284, column: 9)
!12950 = !DILocation(line: 287, column: 5, scope: !12948)
!12951 = !DILocation(line: 289, column: 5, scope: !12930)
!12952 = !DILocation(line: 293, column: 9, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12930, file: !12875, line: 293, column: 9)
!12954 = !DILocation(line: 293, column: 31, scope: !12953)
!12955 = !DILocation(line: 293, column: 9, scope: !12930)
!12956 = !DILocation(line: 298, column: 3, scope: !12917)
!12957 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5799, file: !5799, line: 285, type: !7548, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!12958 = !DILocation(line: 287, column: 21, scope: !12957)
!12959 = !DILocation(line: 287, column: 3, scope: !12957)
!12960 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10077, file: !10077, line: 1897, type: !3217, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!12961 = !DILocation(line: 1899, column: 3, scope: !12960)
!12962 = !DILocation(line: 1900, column: 1, scope: !12960)
!12963 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10077, file: !10077, line: 1843, type: !5785, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12964)
!12964 = !{!12965}
!12965 = !DILocalVariable(name: "Latency", arg: 1, scope: !12963, file: !10077, line: 1843, type: !121)
!12966 = !DILocation(line: 0, scope: !12963)
!12967 = !DILocation(line: 1845, column: 3, scope: !12963)
!12968 = !DILocation(line: 1846, column: 1, scope: !12963)
!12969 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10077, file: !10077, line: 1855, type: !7548, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!12970 = !DILocation(line: 1857, column: 21, scope: !12969)
!12971 = !DILocation(line: 1857, column: 3, scope: !12969)
!12972 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12875, file: !12875, line: 323, type: !12973, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !12988)
!12973 = !DISubroutineType(types: !12974)
!12974 = !{!12920, !12975, !12981}
!12975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12976, size: 32)
!12976 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12882, line: 103, baseType: !12977)
!12977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12882, line: 90, size: 64, elements: !12978)
!12978 = !{!12979, !12980}
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12977, file: !12882, line: 92, baseType: !121, size: 32)
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12977, file: !12882, line: 98, baseType: !121, size: 32, offset: 32)
!12981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12982, size: 32)
!12982 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12882, line: 128, baseType: !12983)
!12983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12882, line: 108, size: 96, elements: !12984)
!12984 = !{!12985, !12986, !12987}
!12985 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12983, file: !12882, line: 110, baseType: !121, size: 32)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12983, file: !12882, line: 116, baseType: !121, size: 32, offset: 32)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12983, file: !12882, line: 122, baseType: !121, size: 32, offset: 64)
!12988 = !{!12989, !12990, !12991, !12992}
!12989 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12972, file: !12875, line: 323, type: !12975)
!12990 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12972, file: !12875, line: 324, type: !12981)
!12991 = !DILocalVariable(name: "status", scope: !12972, file: !12875, line: 326, type: !12920)
!12992 = !DILocalVariable(name: "pllfreq", scope: !12972, file: !12875, line: 327, type: !121)
!12993 = !DILocation(line: 0, scope: !12972)
!12994 = !DILocation(line: 330, column: 7, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12972, file: !12875, line: 330, column: 7)
!12996 = !DILocation(line: 330, column: 26, scope: !12995)
!12997 = !DILocation(line: 330, column: 7, scope: !12972)
!12998 = !DILocation(line: 333, column: 15, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12995, file: !12875, line: 331, column: 3)
!13000 = !DILocation(line: 336, column: 9, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12999, file: !12875, line: 336, column: 9)
!13002 = !DILocation(line: 336, column: 30, scope: !13001)
!13003 = !DILocation(line: 336, column: 9, scope: !12999)
!13004 = !DILocation(line: 338, column: 7, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13001, file: !12875, line: 337, column: 5)
!13006 = !DILocation(line: 339, column: 7, scope: !13005)
!13007 = !DILocation(line: 339, column: 14, scope: !13005)
!13008 = !DILocation(line: 339, column: 35, scope: !13005)
!13009 = distinct !{!13009, !13006, !13010}
!13010 = !DILocation(line: 342, column: 7, scope: !13005)
!13011 = !DILocation(line: 346, column: 76, scope: !12999)
!13012 = !DILocation(line: 346, column: 105, scope: !12999)
!13013 = !DILocation(line: 346, column: 5, scope: !12999)
!13014 = !DILocation(line: 349, column: 14, scope: !12999)
!13015 = !DILocation(line: 350, column: 3, scope: !12999)
!13016 = !DILocation(line: 0, scope: !12995)
!13017 = !DILocation(line: 357, column: 3, scope: !12972)
!13018 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12875, file: !12875, line: 487, type: !13019, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13021)
!13019 = !DISubroutineType(types: !13020)
!13020 = !{!12920}
!13021 = !{!13022}
!13022 = !DILocalVariable(name: "status", scope: !13018, file: !12875, line: 489, type: !12920)
!13023 = !DILocation(line: 0, scope: !13018)
!13024 = !DILocation(line: 492, column: 7, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13018, file: !12875, line: 492, column: 7)
!13026 = !DILocation(line: 492, column: 28, scope: !13025)
!13027 = !DILocation(line: 492, column: 7, scope: !13018)
!13028 = !DILocation(line: 498, column: 3, scope: !13018)
!13029 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12875, file: !12875, line: 457, type: !13030, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13032)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{!121, !121, !12975}
!13032 = !{!13033, !13034, !13035}
!13033 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13029, file: !12875, line: 457, type: !121)
!13034 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13029, file: !12875, line: 457, type: !12975)
!13035 = !DILocalVariable(name: "pllfreq", scope: !13029, file: !12875, line: 459, type: !121)
!13036 = !DILocation(line: 0, scope: !13029)
!13037 = !DILocation(line: 470, column: 68, scope: !13029)
!13038 = !DILocation(line: 470, column: 75, scope: !13029)
!13039 = !DILocation(line: 470, column: 35, scope: !13029)
!13040 = !DILocation(line: 470, column: 34, scope: !13029)
!13041 = !DILocation(line: 470, column: 32, scope: !13029)
!13042 = !DILocation(line: 475, column: 46, scope: !13029)
!13043 = !DILocation(line: 475, column: 53, scope: !13029)
!13044 = !DILocation(line: 475, column: 76, scope: !13029)
!13045 = !DILocation(line: 475, column: 21, scope: !13029)
!13046 = !DILocation(line: 478, column: 3, scope: !13029)
!13047 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8838, file: !8838, line: 612, type: !7548, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13048 = !DILocation(line: 614, column: 12, scope: !13047)
!13049 = !DILocation(line: 614, column: 11, scope: !13047)
!13050 = !DILocation(line: 614, column: 3, scope: !13047)
!13051 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8838, file: !8838, line: 592, type: !3217, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13052 = !DILocation(line: 594, column: 3, scope: !13051)
!13053 = !DILocation(line: 595, column: 1, scope: !13051)
!13054 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8838, file: !8838, line: 1219, type: !8961, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13055)
!13055 = !{!13056, !13057, !13058}
!13056 = !DILocalVariable(name: "Source", arg: 1, scope: !13054, file: !8838, line: 1219, type: !121)
!13057 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !13054, file: !8838, line: 1219, type: !121)
!13058 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !13054, file: !8838, line: 1219, type: !121)
!13059 = !DILocation(line: 0, scope: !13054)
!13060 = !DILocation(line: 1221, column: 3, scope: !13054)
!13061 = !DILocation(line: 1222, column: 1, scope: !13054)
!13062 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12875, file: !12875, line: 510, type: !13063, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13065)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!12920, !121, !12981}
!13065 = !{!13066, !13067, !13068, !13069}
!13066 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13062, file: !12875, line: 510, type: !121)
!13067 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13062, file: !12875, line: 510, type: !12981)
!13068 = !DILocalVariable(name: "status", scope: !13062, file: !12875, line: 512, type: !12920)
!13069 = !DILocalVariable(name: "hclk_frequency", scope: !13062, file: !12875, line: 513, type: !121)
!13070 = !DILocation(line: 0, scope: !13062)
!13071 = !DILocation(line: 520, column: 20, scope: !13062)
!13072 = !DILocation(line: 523, column: 7, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13062, file: !12875, line: 523, column: 7)
!13074 = !DILocation(line: 523, column: 23, scope: !13073)
!13075 = !DILocation(line: 523, column: 7, scope: !13062)
!13076 = !DILocation(line: 526, column: 14, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13073, file: !12875, line: 524, column: 3)
!13078 = !DILocation(line: 530, column: 14, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13062, file: !12875, line: 530, column: 7)
!13080 = !DILocation(line: 530, column: 7, scope: !13062)
!13081 = !DILocation(line: 533, column: 5, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13079, file: !12875, line: 531, column: 3)
!13083 = !DILocation(line: 534, column: 5, scope: !13082)
!13084 = !DILocation(line: 534, column: 12, scope: !13082)
!13085 = !DILocation(line: 534, column: 33, scope: !13082)
!13086 = distinct !{!13086, !13083, !13087}
!13087 = !DILocation(line: 537, column: 5, scope: !13082)
!13088 = !DILocation(line: 540, column: 49, scope: !13082)
!13089 = !DILocation(line: 540, column: 5, scope: !13082)
!13090 = !DILocation(line: 541, column: 5, scope: !13082)
!13091 = !DILocation(line: 542, column: 5, scope: !13082)
!13092 = !DILocation(line: 542, column: 12, scope: !13082)
!13093 = !DILocation(line: 542, column: 37, scope: !13082)
!13094 = distinct !{!13094, !13091, !13095}
!13095 = !DILocation(line: 545, column: 5, scope: !13082)
!13096 = !DILocation(line: 548, column: 50, scope: !13082)
!13097 = !DILocation(line: 548, column: 5, scope: !13082)
!13098 = !DILocation(line: 549, column: 50, scope: !13082)
!13099 = !DILocation(line: 549, column: 5, scope: !13082)
!13100 = !DILocation(line: 550, column: 3, scope: !13082)
!13101 = !DILocation(line: 553, column: 7, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13062, file: !12875, line: 553, column: 7)
!13103 = !DILocation(line: 553, column: 23, scope: !13102)
!13104 = !DILocation(line: 553, column: 7, scope: !13062)
!13105 = !DILocation(line: 556, column: 14, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13102, file: !12875, line: 554, column: 3)
!13107 = !DILocation(line: 557, column: 3, scope: !13106)
!13108 = !DILocation(line: 560, column: 14, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13062, file: !12875, line: 560, column: 7)
!13110 = !DILocation(line: 560, column: 7, scope: !13062)
!13111 = !DILocation(line: 562, column: 5, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13109, file: !12875, line: 561, column: 3)
!13113 = !DILocation(line: 563, column: 3, scope: !13112)
!13114 = !DILocation(line: 565, column: 3, scope: !13062)
!13115 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8838, file: !8838, line: 1169, type: !3217, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13116 = !DILocation(line: 1171, column: 3, scope: !13115)
!13117 = !DILocation(line: 1172, column: 1, scope: !13115)
!13118 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8838, file: !8838, line: 1190, type: !7548, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13119 = !DILocation(line: 1192, column: 12, scope: !13118)
!13120 = !DILocation(line: 1192, column: 11, scope: !13118)
!13121 = !DILocation(line: 1192, column: 3, scope: !13118)
!13122 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8838, file: !8838, line: 944, type: !5785, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13123)
!13123 = !{!13124}
!13124 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13122, file: !8838, line: 944, type: !121)
!13125 = !DILocation(line: 0, scope: !13122)
!13126 = !DILocation(line: 946, column: 3, scope: !13122)
!13127 = !DILocation(line: 947, column: 1, scope: !13122)
!13128 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8838, file: !8838, line: 910, type: !5785, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13129)
!13129 = !{!13130}
!13130 = !DILocalVariable(name: "Source", arg: 1, scope: !13128, file: !8838, line: 910, type: !121)
!13131 = !DILocation(line: 0, scope: !13128)
!13132 = !DILocation(line: 912, column: 3, scope: !13128)
!13133 = !DILocation(line: 913, column: 1, scope: !13128)
!13134 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8838, file: !8838, line: 924, type: !7548, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13135 = !DILocation(line: 926, column: 21, scope: !13134)
!13136 = !DILocation(line: 926, column: 3, scope: !13134)
!13137 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8838, file: !8838, line: 960, type: !5785, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13138)
!13138 = !{!13139}
!13139 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13137, file: !8838, line: 960, type: !121)
!13140 = !DILocation(line: 0, scope: !13137)
!13141 = !DILocation(line: 962, column: 3, scope: !13137)
!13142 = !DILocation(line: 963, column: 1, scope: !13137)
!13143 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8838, file: !8838, line: 976, type: !5785, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13144)
!13144 = !{!13145}
!13145 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13143, file: !8838, line: 976, type: !121)
!13146 = !DILocation(line: 0, scope: !13143)
!13147 = !DILocation(line: 978, column: 3, scope: !13143)
!13148 = !DILocation(line: 979, column: 1, scope: !13143)
!13149 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12875, file: !12875, line: 385, type: !13150, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{!12920, !121, !121, !12975, !12981}
!13152 = !{!13153, !13154, !13155, !13156, !13157, !13158}
!13153 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13149, file: !12875, line: 385, type: !121)
!13154 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13149, file: !12875, line: 385, type: !121)
!13155 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13149, file: !12875, line: 386, type: !12975)
!13156 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13149, file: !12875, line: 386, type: !12981)
!13157 = !DILocalVariable(name: "status", scope: !13149, file: !12875, line: 388, type: !12920)
!13158 = !DILocalVariable(name: "pllfreq", scope: !13149, file: !12875, line: 389, type: !121)
!13159 = !DILocation(line: 0, scope: !13149)
!13160 = !DILocation(line: 396, column: 7, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13149, file: !12875, line: 396, column: 7)
!13162 = !DILocation(line: 396, column: 26, scope: !13161)
!13163 = !DILocation(line: 396, column: 7, scope: !13149)
!13164 = !DILocation(line: 400, column: 15, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13161, file: !12875, line: 397, column: 3)
!13166 = !DILocation(line: 403, column: 9, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13165, file: !12875, line: 403, column: 9)
!13168 = !DILocation(line: 403, column: 30, scope: !13167)
!13169 = !DILocation(line: 403, column: 9, scope: !13165)
!13170 = !DILocation(line: 406, column: 21, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !12875, line: 406, column: 11)
!13172 = distinct !DILexicalBlock(scope: !13167, file: !12875, line: 404, column: 5)
!13173 = !DILocation(line: 406, column: 11, scope: !13172)
!13174 = !DILocation(line: 408, column: 9, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13171, file: !12875, line: 407, column: 7)
!13176 = !DILocation(line: 409, column: 7, scope: !13175)
!13177 = !DILocation(line: 412, column: 9, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13171, file: !12875, line: 411, column: 7)
!13179 = !DILocation(line: 416, column: 7, scope: !13172)
!13180 = !DILocation(line: 417, column: 7, scope: !13172)
!13181 = !DILocation(line: 417, column: 14, scope: !13172)
!13182 = !DILocation(line: 417, column: 35, scope: !13172)
!13183 = distinct !{!13183, !13180, !13184}
!13184 = !DILocation(line: 420, column: 7, scope: !13172)
!13185 = !DILocation(line: 424, column: 78, scope: !13165)
!13186 = !DILocation(line: 424, column: 107, scope: !13165)
!13187 = !DILocation(line: 424, column: 7, scope: !13165)
!13188 = !DILocation(line: 427, column: 14, scope: !13165)
!13189 = !DILocation(line: 428, column: 3, scope: !13165)
!13190 = !DILocation(line: 0, scope: !13161)
!13191 = !DILocation(line: 435, column: 3, scope: !13149)
!13192 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8838, file: !8838, line: 545, type: !7548, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13193 = !DILocation(line: 547, column: 12, scope: !13192)
!13194 = !DILocation(line: 547, column: 11, scope: !13192)
!13195 = !DILocation(line: 547, column: 3, scope: !13192)
!13196 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8838, file: !8838, line: 505, type: !3217, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13197 = !DILocation(line: 507, column: 3, scope: !13196)
!13198 = !DILocation(line: 508, column: 1, scope: !13196)
!13199 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8838, file: !8838, line: 515, type: !3217, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13200 = !DILocation(line: 517, column: 3, scope: !13199)
!13201 = !DILocation(line: 518, column: 1, scope: !13199)
!13202 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8838, file: !8838, line: 525, type: !3217, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3128, retainedNodes: !474)
!13203 = !DILocation(line: 527, column: 3, scope: !13202)
!13204 = !DILocation(line: 528, column: 1, scope: !13202)
!13205 = distinct !DISubprogram(name: "z_device_state_init", scope: !13206, file: !13206, line: 23, type: !3217, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13207)
!13206 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13207 = !{!13208}
!13208 = !DILocalVariable(name: "dev", scope: !13205, file: !13206, line: 25, type: !13209)
!13209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13210, size: 32)
!13210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13211)
!13211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !13212)
!13212 = !{!13213, !13214, !13215, !13216, !13222, !13223}
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13211, file: !154, line: 380, baseType: !157, size: 32)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13211, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13211, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13211, file: !154, line: 386, baseType: !13217, size: 32, offset: 96)
!13217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13218, size: 32)
!13218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !13219)
!13219 = !{!13220, !13221}
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13218, file: !154, line: 359, baseType: !167, size: 8)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13218, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13211, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13211, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!13224 = !DILocation(line: 0, scope: !13205)
!13225 = !DILocation(line: 31, column: 1, scope: !13205)
!13226 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13206, file: !13206, line: 33, type: !13227, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13229)
!13227 = !DISubroutineType(types: !13228)
!13228 = !{!13209, !157}
!13229 = !{!13230, !13231}
!13230 = !DILocalVariable(name: "name", arg: 1, scope: !13226, file: !13206, line: 33, type: !157)
!13231 = !DILocalVariable(name: "dev", scope: !13226, file: !13206, line: 35, type: !13209)
!13232 = !DILocation(line: 0, scope: !13226)
!13233 = !DILocation(line: 40, column: 12, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13226, file: !13206, line: 40, column: 6)
!13235 = !DILocation(line: 40, column: 21, scope: !13234)
!13236 = !DILocation(line: 40, column: 25, scope: !13234)
!13237 = !DILocation(line: 40, column: 33, scope: !13234)
!13238 = !DILocation(line: 40, column: 6, scope: !13226)
!13239 = !DILocation(line: 55, column: 2, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13226, file: !13206, line: 55, column: 2)
!13241 = !DILocation(line: 50, column: 7, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !13206, line: 50, column: 7)
!13243 = distinct !DILexicalBlock(scope: !13244, file: !13206, line: 49, column: 57)
!13244 = distinct !DILexicalBlock(scope: !13245, file: !13206, line: 49, column: 2)
!13245 = distinct !DILexicalBlock(scope: !13226, file: !13206, line: 49, column: 2)
!13246 = !DILocation(line: 50, column: 30, scope: !13242)
!13247 = !DILocation(line: 50, column: 39, scope: !13242)
!13248 = !DILocation(line: 50, column: 44, scope: !13242)
!13249 = !DILocation(line: 50, column: 7, scope: !13243)
!13250 = !DILocation(line: 49, column: 53, scope: !13244)
!13251 = !DILocation(line: 49, column: 33, scope: !13244)
!13252 = !DILocation(line: 49, column: 2, scope: !13245)
!13253 = distinct !{!13253, !13252, !13254}
!13254 = !DILocation(line: 53, column: 2, scope: !13245)
!13255 = !DILocation(line: 56, column: 7, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !13206, line: 56, column: 7)
!13257 = distinct !DILexicalBlock(scope: !13258, file: !13206, line: 55, column: 57)
!13258 = distinct !DILexicalBlock(scope: !13240, file: !13206, line: 55, column: 2)
!13259 = !DILocation(line: 56, column: 30, scope: !13256)
!13260 = !DILocation(line: 56, column: 52, scope: !13256)
!13261 = !DILocation(line: 56, column: 34, scope: !13256)
!13262 = !DILocation(line: 56, column: 58, scope: !13256)
!13263 = !DILocation(line: 56, column: 7, scope: !13257)
!13264 = !DILocation(line: 55, column: 53, scope: !13258)
!13265 = !DILocation(line: 55, column: 33, scope: !13258)
!13266 = distinct !{!13266, !13239, !13267}
!13267 = !DILocation(line: 59, column: 2, scope: !13240)
!13268 = !DILocation(line: 62, column: 1, scope: !13226)
!13269 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13206, file: !13206, line: 93, type: !13270, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13272)
!13270 = !DISubroutineType(types: !13271)
!13271 = !{!170, !13209}
!13272 = !{!13273}
!13273 = !DILocalVariable(name: "dev", arg: 1, scope: !13269, file: !13206, line: 93, type: !13209)
!13274 = !DILocation(line: 0, scope: !13269)
!13275 = !DILocation(line: 99, column: 10, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13269, file: !13206, line: 99, column: 6)
!13277 = !DILocation(line: 99, column: 6, scope: !13269)
!13278 = !DILocation(line: 103, column: 14, scope: !13269)
!13279 = !DILocation(line: 103, column: 21, scope: !13269)
!13280 = !DILocation(line: 103, column: 33, scope: !13269)
!13281 = !DILocation(line: 103, column: 49, scope: !13269)
!13282 = !DILocation(line: 103, column: 58, scope: !13269)
!13283 = !DILocation(line: 104, column: 1, scope: !13269)
!13284 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13206, file: !13206, line: 87, type: !13285, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13288)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{!357, !13287}
!13287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13209, size: 32)
!13288 = !{!13289}
!13289 = !DILocalVariable(name: "devices", arg: 1, scope: !13284, file: !13206, line: 87, type: !13287)
!13290 = !DILocation(line: 0, scope: !13284)
!13291 = !DILocation(line: 89, column: 11, scope: !13284)
!13292 = !DILocation(line: 90, column: 2, scope: !13284)
!13293 = distinct !DISubprogram(name: "device_required_foreach", scope: !13206, file: !13206, line: 125, type: !13294, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13300)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{!103, !13209, !13296, !102}
!13296 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !154, line: 471, baseType: !13297)
!13297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13298, size: 32)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!103, !13209, !102}
!13300 = !{!13301, !13302, !13303, !13304, !13305}
!13301 = !DILocalVariable(name: "dev", arg: 1, scope: !13293, file: !13206, line: 125, type: !13209)
!13302 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13293, file: !13206, line: 126, type: !13296)
!13303 = !DILocalVariable(name: "context", arg: 3, scope: !13293, file: !13206, line: 127, type: !102)
!13304 = !DILocalVariable(name: "handle_count", scope: !13293, file: !13206, line: 129, type: !357)
!13305 = !DILocalVariable(name: "handles", scope: !13293, file: !13206, line: 130, type: !173)
!13306 = !DILocation(line: 0, scope: !13293)
!13307 = !DILocation(line: 129, column: 2, scope: !13293)
!13308 = !DILocation(line: 129, column: 9, scope: !13293)
!13309 = !DILocation(line: 130, column: 35, scope: !13293)
!13310 = !DILocation(line: 132, column: 33, scope: !13293)
!13311 = !DILocation(line: 132, column: 9, scope: !13293)
!13312 = !DILocation(line: 133, column: 1, scope: !13293)
!13313 = !DILocation(line: 132, column: 2, scope: !13293)
!13314 = distinct !DISubprogram(name: "device_required_handles_get", scope: !154, file: !154, line: 493, type: !13315, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!173, !13209, !2640}
!13317 = !{!13318, !13319, !13320, !13321}
!13318 = !DILocalVariable(name: "dev", arg: 1, scope: !13314, file: !154, line: 493, type: !13209)
!13319 = !DILocalVariable(name: "count", arg: 2, scope: !13314, file: !154, line: 493, type: !2640)
!13320 = !DILocalVariable(name: "rv", scope: !13314, file: !154, line: 495, type: !173)
!13321 = !DILocalVariable(name: "i", scope: !13322, file: !154, line: 498, type: !357)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !154, line: 497, column: 18)
!13323 = distinct !DILexicalBlock(scope: !13314, file: !154, line: 497, column: 6)
!13324 = !DILocation(line: 0, scope: !13314)
!13325 = !DILocation(line: 495, column: 35, scope: !13314)
!13326 = !DILocation(line: 497, column: 9, scope: !13323)
!13327 = !DILocation(line: 497, column: 6, scope: !13314)
!13328 = !DILocation(line: 0, scope: !13322)
!13329 = !DILocation(line: 500, column: 11, scope: !13322)
!13330 = !DILocation(line: 500, column: 40, scope: !13322)
!13331 = !DILocation(line: 502, column: 4, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13322, file: !154, line: 501, column: 40)
!13333 = distinct !{!13333, !13334, !13335}
!13334 = !DILocation(line: 500, column: 3, scope: !13322)
!13335 = !DILocation(line: 503, column: 3, scope: !13322)
!13336 = !DILocation(line: 504, column: 10, scope: !13322)
!13337 = !DILocation(line: 505, column: 2, scope: !13322)
!13338 = !DILocation(line: 507, column: 2, scope: !13314)
!13339 = distinct !DISubprogram(name: "device_visitor", scope: !13206, file: !13206, line: 106, type: !13340, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13342)
!13340 = !DISubroutineType(types: !13341)
!13341 = !{!103, !173, !357, !13296, !102}
!13342 = !{!13343, !13344, !13345, !13346, !13347, !13349, !13352, !13353}
!13343 = !DILocalVariable(name: "handles", arg: 1, scope: !13339, file: !13206, line: 106, type: !173)
!13344 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13339, file: !13206, line: 107, type: !357)
!13345 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13339, file: !13206, line: 108, type: !13296)
!13346 = !DILocalVariable(name: "context", arg: 4, scope: !13339, file: !13206, line: 109, type: !102)
!13347 = !DILocalVariable(name: "i", scope: !13348, file: !13206, line: 112, type: !357)
!13348 = distinct !DILexicalBlock(scope: !13339, file: !13206, line: 112, column: 2)
!13349 = !DILocalVariable(name: "dh", scope: !13350, file: !13206, line: 113, type: !175)
!13350 = distinct !DILexicalBlock(scope: !13351, file: !13206, line: 112, column: 44)
!13351 = distinct !DILexicalBlock(scope: !13348, file: !13206, line: 112, column: 2)
!13352 = !DILocalVariable(name: "rdev", scope: !13350, file: !13206, line: 114, type: !13209)
!13353 = !DILocalVariable(name: "rc", scope: !13350, file: !13206, line: 115, type: !103)
!13354 = !DILocation(line: 0, scope: !13339)
!13355 = !DILocation(line: 0, scope: !13348)
!13356 = !DILocation(line: 112, column: 23, scope: !13351)
!13357 = !DILocation(line: 112, column: 2, scope: !13348)
!13358 = distinct !{!13358, !13357, !13359}
!13359 = !DILocation(line: 120, column: 2, scope: !13348)
!13360 = !DILocation(line: 113, column: 24, scope: !13350)
!13361 = !DILocation(line: 0, scope: !13350)
!13362 = !DILocation(line: 114, column: 31, scope: !13350)
!13363 = !DILocation(line: 115, column: 12, scope: !13350)
!13364 = !DILocation(line: 117, column: 10, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13350, file: !13206, line: 117, column: 7)
!13366 = !DILocation(line: 112, column: 39, scope: !13351)
!13367 = !DILocation(line: 123, column: 1, scope: !13339)
!13368 = distinct !DISubprogram(name: "device_from_handle", scope: !154, file: !154, line: 439, type: !13369, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13371)
!13369 = !DISubroutineType(types: !13370)
!13370 = !{!13209, !175}
!13371 = !{!13372, !13373, !13374}
!13372 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13368, file: !154, line: 439, type: !175)
!13373 = !DILocalVariable(name: "dev", scope: !13368, file: !154, line: 443, type: !13209)
!13374 = !DILocalVariable(name: "numdev", scope: !13368, file: !154, line: 444, type: !357)
!13375 = !DILocation(line: 0, scope: !13368)
!13376 = !DILocation(line: 446, column: 7, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13368, file: !154, line: 446, column: 6)
!13378 = !DILocation(line: 446, column: 18, scope: !13377)
!13379 = !DILocation(line: 446, column: 23, scope: !13377)
!13380 = !DILocation(line: 450, column: 2, scope: !13368)
!13381 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13206, file: !13206, line: 135, type: !13294, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13382)
!13382 = !{!13383, !13384, !13385, !13386, !13387}
!13383 = !DILocalVariable(name: "dev", arg: 1, scope: !13381, file: !13206, line: 135, type: !13209)
!13384 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13381, file: !13206, line: 136, type: !13296)
!13385 = !DILocalVariable(name: "context", arg: 3, scope: !13381, file: !13206, line: 137, type: !102)
!13386 = !DILocalVariable(name: "handle_count", scope: !13381, file: !13206, line: 139, type: !357)
!13387 = !DILocalVariable(name: "handles", scope: !13381, file: !13206, line: 140, type: !173)
!13388 = !DILocation(line: 0, scope: !13381)
!13389 = !DILocation(line: 139, column: 2, scope: !13381)
!13390 = !DILocation(line: 139, column: 9, scope: !13381)
!13391 = !DILocation(line: 140, column: 35, scope: !13381)
!13392 = !DILocation(line: 142, column: 33, scope: !13381)
!13393 = !DILocation(line: 142, column: 9, scope: !13381)
!13394 = !DILocation(line: 143, column: 1, scope: !13381)
!13395 = !DILocation(line: 142, column: 2, scope: !13381)
!13396 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !154, file: !154, line: 573, type: !13315, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !13397)
!13397 = !{!13398, !13399, !13400, !13401, !13402}
!13398 = !DILocalVariable(name: "dev", arg: 1, scope: !13396, file: !154, line: 573, type: !13209)
!13399 = !DILocalVariable(name: "count", arg: 2, scope: !13396, file: !154, line: 573, type: !2640)
!13400 = !DILocalVariable(name: "rv", scope: !13396, file: !154, line: 575, type: !173)
!13401 = !DILocalVariable(name: "region", scope: !13396, file: !154, line: 576, type: !357)
!13402 = !DILocalVariable(name: "i", scope: !13396, file: !154, line: 577, type: !357)
!13403 = !DILocation(line: 0, scope: !13396)
!13404 = !DILocation(line: 575, column: 35, scope: !13396)
!13405 = !DILocation(line: 579, column: 9, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13396, file: !154, line: 579, column: 6)
!13407 = !DILocation(line: 579, column: 6, scope: !13396)
!13408 = !DILocation(line: 582, column: 8, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !154, line: 582, column: 8)
!13410 = distinct !DILexicalBlock(scope: !13411, file: !154, line: 581, column: 23)
!13411 = distinct !DILexicalBlock(scope: !13406, file: !154, line: 579, column: 18)
!13412 = !DILocation(line: 582, column: 12, scope: !13409)
!13413 = !DILocation(line: 585, column: 6, scope: !13410)
!13414 = !DILocation(line: 0, scope: !13411)
!13415 = !DILocation(line: 581, column: 17, scope: !13411)
!13416 = !DILocation(line: 581, column: 3, scope: !13411)
!13417 = !DILocation(line: 588, column: 10, scope: !13411)
!13418 = !DILocation(line: 588, column: 16, scope: !13411)
!13419 = !DILocation(line: 589, column: 4, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13411, file: !154, line: 588, column: 39)
!13421 = !DILocation(line: 588, column: 3, scope: !13411)
!13422 = distinct !{!13422, !13421, !13423}
!13423 = !DILocation(line: 590, column: 3, scope: !13411)
!13424 = !DILocation(line: 591, column: 10, scope: !13411)
!13425 = !DILocation(line: 592, column: 2, scope: !13411)
!13426 = !DILocation(line: 575, column: 25, scope: !13396)
!13427 = !DILocation(line: 594, column: 2, scope: !13396)
!13428 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1973, file: !1973, line: 49, type: !5970, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !474)
!13429 = !DILocation(line: 51, column: 10, scope: !13428)
!13430 = !DILocation(line: 51, column: 20, scope: !13428)
!13431 = !DILocation(line: 51, column: 2, scope: !13428)
!13432 = distinct !DISubprogram(name: "coredump", scope: !3184, file: !3184, line: 209, type: !13433, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13579)
!13433 = !DISubroutineType(types: !13434)
!13434 = !{null, !32, !13435, !13479}
!13435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13436, size: 32)
!13436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13437)
!13437 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2847, line: 141, baseType: !13438)
!13438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2847, line: 97, size: 256, elements: !13439)
!13439 = !{!13440}
!13440 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13438, file: !2847, line: 107, baseType: !13441, size: 256)
!13441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2847, line: 98, size: 256, elements: !13442)
!13442 = !{!13443, !13448, !13453, !13458, !13463, !13468, !13473, !13478}
!13443 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 99, baseType: !13444, size: 32)
!13444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 99, size: 32, elements: !13445)
!13445 = !{!13446, !13447}
!13446 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13444, file: !2847, line: 99, baseType: !121, size: 32)
!13447 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13444, file: !2847, line: 99, baseType: !121, size: 32)
!13448 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 100, baseType: !13449, size: 32, offset: 32)
!13449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 100, size: 32, elements: !13450)
!13450 = !{!13451, !13452}
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13449, file: !2847, line: 100, baseType: !121, size: 32)
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13449, file: !2847, line: 100, baseType: !121, size: 32)
!13453 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 101, baseType: !13454, size: 32, offset: 64)
!13454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 101, size: 32, elements: !13455)
!13455 = !{!13456, !13457}
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13454, file: !2847, line: 101, baseType: !121, size: 32)
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13454, file: !2847, line: 101, baseType: !121, size: 32)
!13458 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 102, baseType: !13459, size: 32, offset: 96)
!13459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 102, size: 32, elements: !13460)
!13460 = !{!13461, !13462}
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13459, file: !2847, line: 102, baseType: !121, size: 32)
!13462 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13459, file: !2847, line: 102, baseType: !121, size: 32)
!13463 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 103, baseType: !13464, size: 32, offset: 128)
!13464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 103, size: 32, elements: !13465)
!13465 = !{!13466, !13467}
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13464, file: !2847, line: 103, baseType: !121, size: 32)
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13464, file: !2847, line: 103, baseType: !121, size: 32)
!13468 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 104, baseType: !13469, size: 32, offset: 160)
!13469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 104, size: 32, elements: !13470)
!13470 = !{!13471, !13472}
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13469, file: !2847, line: 104, baseType: !121, size: 32)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13469, file: !2847, line: 104, baseType: !121, size: 32)
!13473 = !DIDerivedType(tag: DW_TAG_member, scope: !13441, file: !2847, line: 105, baseType: !13474, size: 32, offset: 192)
!13474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13441, file: !2847, line: 105, size: 32, elements: !13475)
!13475 = !{!13476, !13477}
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13474, file: !2847, line: 105, baseType: !121, size: 32)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13474, file: !2847, line: 105, baseType: !121, size: 32)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13441, file: !2847, line: 106, baseType: !121, size: 32, offset: 224)
!13479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13480, size: 32)
!13480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !13481)
!13481 = !{!13482, !13540, !13552, !13553, !13554, !13555, !13561, !13574}
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13480, file: !368, line: 247, baseType: !13483, size: 384)
!13483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !13484)
!13484 = !{!13485, !13509, !13516, !13517, !13518, !13527, !13528, !13529}
!13485 = !DIDerivedType(tag: DW_TAG_member, scope: !13483, file: !368, line: 60, baseType: !13486, size: 64)
!13486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13483, file: !368, line: 60, size: 64, elements: !13487)
!13487 = !{!13488, !13503}
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13486, file: !368, line: 61, baseType: !13489, size: 64)
!13489 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !322, line: 49, baseType: !13490)
!13490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !322, line: 37, size: 64, elements: !13491)
!13491 = !{!13492, !13498}
!13492 = !DIDerivedType(tag: DW_TAG_member, scope: !13490, file: !322, line: 38, baseType: !13493, size: 32)
!13493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13490, file: !322, line: 38, size: 32, elements: !13494)
!13494 = !{!13495, !13497}
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13493, file: !322, line: 39, baseType: !13496, size: 32)
!13496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13490, size: 32)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13493, file: !322, line: 40, baseType: !13496, size: 32)
!13498 = !DIDerivedType(tag: DW_TAG_member, scope: !13490, file: !322, line: 42, baseType: !13499, size: 32, offset: 32)
!13499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13490, file: !322, line: 42, size: 32, elements: !13500)
!13500 = !{!13501, !13502}
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13499, file: !322, line: 43, baseType: !13496, size: 32)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13499, file: !322, line: 44, baseType: !13496, size: 32)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13486, file: !368, line: 62, baseType: !13504, size: 64)
!13504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !13505)
!13505 = !{!13506}
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13504, file: !393, line: 50, baseType: !13507, size: 64)
!13507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13508, size: 64, elements: !398)
!13508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13504, size: 32)
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13483, file: !368, line: 68, baseType: !13510, size: 32, offset: 64)
!13510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13511, size: 32)
!13511 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !13512)
!13512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !13513)
!13513 = !{!13514}
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13512, file: !317, line: 232, baseType: !13515, size: 64)
!13515 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !13490)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13483, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13483, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!13518 = !DIDerivedType(tag: DW_TAG_member, scope: !13483, file: !368, line: 90, baseType: !13519, size: 16, offset: 112)
!13519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13483, file: !368, line: 90, size: 16, elements: !13520)
!13520 = !{!13521, !13526}
!13521 = !DIDerivedType(tag: DW_TAG_member, scope: !13519, file: !368, line: 91, baseType: !13522, size: 16)
!13522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13519, file: !368, line: 91, size: 16, elements: !13523)
!13523 = !{!13524, !13525}
!13524 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13522, file: !368, line: 96, baseType: !416, size: 8)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13522, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13519, file: !368, line: 100, baseType: !341, size: 16)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13483, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!13528 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13483, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13483, file: !368, line: 131, baseType: !13530, size: 192, offset: 192)
!13530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !13531)
!13531 = !{!13532, !13533, !13539}
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13530, file: !317, line: 245, baseType: !13489, size: 64)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13530, file: !317, line: 246, baseType: !13534, size: 32, offset: 64)
!13534 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !13535)
!13535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13536, size: 32)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{null, !13538}
!13538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13530, size: 32)
!13539 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13530, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13480, file: !368, line: 250, baseType: !13541, size: 288, offset: 384)
!13541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !13542)
!13542 = !{!13543, !13544, !13545, !13546, !13547, !13548, !13549, !13550, !13551}
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13541, file: !437, line: 26, baseType: !121, size: 32)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13541, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13541, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13541, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13541, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13541, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13541, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!13550 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13541, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!13551 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13541, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13480, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13480, file: !368, line: 256, baseType: !13511, size: 64, offset: 704)
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13480, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13480, file: !368, line: 300, baseType: !13556, size: 96, offset: 800)
!13556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !13557)
!13557 = !{!13558, !13559, !13560}
!13558 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13556, file: !368, line: 153, baseType: !22, size: 32)
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13556, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13556, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!13561 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13480, file: !368, line: 325, baseType: !13562, size: 32, offset: 896)
!13562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13563, size: 32)
!13563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !13564)
!13564 = !{!13565, !13571, !13572}
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13563, file: !313, line: 5074, baseType: !13566, size: 96)
!13566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !13567)
!13567 = !{!13568, !13569, !13570}
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13566, file: !463, line: 57, baseType: !466, size: 32)
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13566, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13566, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13563, file: !313, line: 5075, baseType: !13511, size: 64, offset: 96)
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13563, file: !313, line: 5076, baseType: !13573, offset: 160)
!13573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13480, file: !368, line: 343, baseType: !13575, size: 64, offset: 928)
!13575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !13576)
!13576 = !{!13577, !13578}
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13575, file: !437, line: 63, baseType: !121, size: 32)
!13578 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13575, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!13579 = !{!13580, !13581, !13582}
!13580 = !DILocalVariable(name: "reason", arg: 1, scope: !13432, file: !3184, line: 209, type: !32)
!13581 = !DILocalVariable(name: "esf", arg: 2, scope: !13432, file: !3184, line: 209, type: !13435)
!13582 = !DILocalVariable(name: "thread", arg: 3, scope: !13432, file: !3184, line: 210, type: !13479)
!13583 = !DILocation(line: 0, scope: !13432)
!13584 = !DILocation(line: 212, column: 1, scope: !13432)
!13585 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3184, file: !3184, line: 214, type: !13586, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13588)
!13586 = !DISubroutineType(types: !13587)
!13587 = !{null, !22, !22}
!13588 = !{!13589, !13590}
!13589 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13585, file: !3184, line: 214, type: !22)
!13590 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13585, file: !3184, line: 214, type: !22)
!13591 = !DILocation(line: 0, scope: !13585)
!13592 = !DILocation(line: 216, column: 1, scope: !13585)
!13593 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3184, file: !3184, line: 218, type: !13594, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13596)
!13594 = !DISubroutineType(types: !13595)
!13595 = !{null, !274, !357}
!13596 = !{!13597, !13598}
!13597 = !DILocalVariable(name: "buf", arg: 1, scope: !13593, file: !3184, line: 218, type: !274)
!13598 = !DILocalVariable(name: "buflen", arg: 2, scope: !13593, file: !3184, line: 218, type: !357)
!13599 = !DILocation(line: 0, scope: !13593)
!13600 = !DILocation(line: 220, column: 1, scope: !13593)
!13601 = distinct !DISubprogram(name: "coredump_query", scope: !3184, file: !3184, line: 222, type: !13602, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13604)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!103, !3183, !102}
!13604 = !{!13605, !13606}
!13605 = !DILocalVariable(name: "query_id", arg: 1, scope: !13601, file: !3184, line: 222, type: !3183)
!13606 = !DILocalVariable(name: "arg", arg: 2, scope: !13601, file: !3184, line: 222, type: !102)
!13607 = !DILocation(line: 0, scope: !13601)
!13608 = !DILocation(line: 224, column: 2, scope: !13601)
!13609 = distinct !DISubprogram(name: "coredump_cmd", scope: !3184, file: !3184, line: 227, type: !13610, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13612)
!13610 = !DISubroutineType(types: !13611)
!13611 = !{!103, !3190, !102}
!13612 = !{!13613, !13614}
!13613 = !DILocalVariable(name: "query_id", arg: 1, scope: !13609, file: !3184, line: 227, type: !3190)
!13614 = !DILocalVariable(name: "arg", arg: 2, scope: !13609, file: !3184, line: 227, type: !102)
!13615 = !DILocation(line: 0, scope: !13609)
!13616 = !DILocation(line: 229, column: 2, scope: !13609)
!13617 = distinct !DISubprogram(name: "arch_system_halt", scope: !13618, file: !13618, line: 23, type: !5772, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13619)
!13618 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13619 = !{!13620}
!13620 = !DILocalVariable(name: "reason", arg: 1, scope: !13617, file: !13618, line: 23, type: !32)
!13621 = !DILocation(line: 0, scope: !13617)
!13622 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !13627)
!13623 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13624)
!13624 = !{!13625, !13626}
!13625 = !DILocalVariable(name: "key", scope: !13623, file: !5761, line: 44, type: !32)
!13626 = !DILocalVariable(name: "tmp", scope: !13623, file: !5761, line: 53, type: !32)
!13627 = distinct !DILocation(line: 31, column: 8, scope: !13617)
!13628 = !{i64 1650629}
!13629 = !DILocation(line: 0, scope: !13623, inlinedAt: !13627)
!13630 = !DILocation(line: 32, column: 2, scope: !13617)
!13631 = !DILocation(line: 32, column: 2, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13633, file: !13618, line: 32, column: 2)
!13633 = distinct !DILexicalBlock(scope: !13617, file: !13618, line: 32, column: 2)
!13634 = distinct !{!13634, !13635, !13636}
!13635 = !DILocation(line: 32, column: 2, scope: !13633)
!13636 = !DILocation(line: 34, column: 2, scope: !13633)
!13637 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13618, file: !13618, line: 39, type: !13638, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13640)
!13638 = !DISubroutineType(types: !13639)
!13639 = !{null, !32, !13435}
!13640 = !{!13641, !13642}
!13641 = !DILocalVariable(name: "reason", arg: 1, scope: !13637, file: !13618, line: 39, type: !32)
!13642 = !DILocalVariable(name: "esf", arg: 2, scope: !13637, file: !13618, line: 40, type: !13435)
!13643 = !DILocation(line: 0, scope: !13637)
!13644 = !DILocation(line: 46, column: 2, scope: !13637)
!13645 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13618, file: !13618, line: 81, type: !5772, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13646)
!13646 = !{!13647}
!13647 = !DILocalVariable(name: "reason", arg: 1, scope: !13645, file: !13618, line: 81, type: !32)
!13648 = !DILocation(line: 0, scope: !13645)
!13649 = !DILocation(line: 83, column: 2, scope: !13645)
!13650 = distinct !DISubprogram(name: "z_fatal_error", scope: !13618, file: !13618, line: 96, type: !13638, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13651)
!13651 = !{!13652, !13653, !13654, !13655}
!13652 = !DILocalVariable(name: "reason", arg: 1, scope: !13650, file: !13618, line: 96, type: !32)
!13653 = !DILocalVariable(name: "esf", arg: 2, scope: !13650, file: !13618, line: 96, type: !13435)
!13654 = !DILocalVariable(name: "key", scope: !13650, file: !13618, line: 102, type: !32)
!13655 = !DILocalVariable(name: "thread", scope: !13650, file: !13618, line: 103, type: !13479)
!13656 = !DILocation(line: 0, scope: !13650)
!13657 = !DILocation(line: 55, column: 2, scope: !13623, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 102, column: 21, scope: !13650)
!13659 = !DILocation(line: 0, scope: !13623, inlinedAt: !13658)
!13660 = !DILocation(line: 119, column: 11, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13650, file: !13618, line: 119, column: 6)
!13662 = !DILocation(line: 119, column: 20, scope: !13661)
!13663 = !DILocation(line: 131, column: 2, scope: !13650)
!13664 = !DILocation(line: 151, column: 7, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !13618, line: 146, column: 32)
!13666 = distinct !DILexicalBlock(scope: !13650, file: !13618, line: 146, column: 6)
!13667 = !DILocation(line: 151, column: 21, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13665, file: !13618, line: 151, column: 7)
!13669 = !DILocation(line: 104, column: 4, scope: !13650)
!13670 = !DILocalVariable(name: "key", arg: 1, scope: !13671, file: !5761, line: 84, type: !32)
!13671 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13672)
!13672 = !{!13670}
!13673 = !DILocation(line: 0, scope: !13671, inlinedAt: !13674)
!13674 = distinct !DILocation(line: 186, column: 2, scope: !13650)
!13675 = !DILocation(line: 95, column: 2, scope: !13671, inlinedAt: !13674)
!13676 = !{i64 1651446}
!13677 = !DILocation(line: 189, column: 3, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !13618, line: 188, column: 41)
!13679 = distinct !DILexicalBlock(scope: !13650, file: !13618, line: 188, column: 6)
!13680 = !DILocation(line: 191, column: 1, scope: !13650)
!13681 = distinct !DISubprogram(name: "k_current_get", scope: !313, file: !313, line: 530, type: !13682, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !474)
!13682 = !DISubroutineType(types: !13683)
!13683 = !{!13684}
!13684 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !368, line: 347, baseType: !13479)
!13685 = !DILocation(line: 535, column: 9, scope: !13681)
!13686 = !DILocation(line: 535, column: 2, scope: !13681)
!13687 = distinct !DISubprogram(name: "k_thread_abort", scope: !3650, file: !3650, line: 188, type: !13688, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !13690)
!13688 = !DISubroutineType(types: !13689)
!13689 = !{null, !13684}
!13690 = !{!13691}
!13691 = !DILocalVariable(name: "thread", arg: 1, scope: !13687, file: !3650, line: 188, type: !13684)
!13692 = !DILocation(line: 0, scope: !13687)
!13693 = !DILocation(line: 197, column: 2, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13687, file: !3650, line: 197, column: 2)
!13695 = !{i64 2152216287}
!13696 = !DILocation(line: 198, column: 2, scope: !13687)
!13697 = !DILocation(line: 199, column: 1, scope: !13687)
!13698 = distinct !DISubprogram(name: "z_current_get", scope: !3650, file: !3650, line: 173, type: !13682, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3180, retainedNodes: !474)
!13699 = !DILocation(line: 180, column: 2, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13698, file: !3650, line: 180, column: 2)
!13701 = !{i64 2152216219}
!13702 = !DILocation(line: 181, column: 9, scope: !13698)
!13703 = !DILocation(line: 181, column: 2, scope: !13698)
!13704 = distinct !DISubprogram(name: "z_early_memset", scope: !1980, file: !1980, line: 108, type: !13705, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13707)
!13705 = !DISubroutineType(types: !13706)
!13706 = !{null, !102, !103, !357}
!13707 = !{!13708, !13709, !13710}
!13708 = !DILocalVariable(name: "dst", arg: 1, scope: !13704, file: !1980, line: 108, type: !102)
!13709 = !DILocalVariable(name: "c", arg: 2, scope: !13704, file: !1980, line: 108, type: !103)
!13710 = !DILocalVariable(name: "n", arg: 3, scope: !13704, file: !1980, line: 108, type: !357)
!13711 = !DILocation(line: 0, scope: !13704)
!13712 = !DILocation(line: 110, column: 9, scope: !13704)
!13713 = !DILocation(line: 111, column: 1, scope: !13704)
!13714 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1980, file: !1980, line: 121, type: !13715, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13717)
!13715 = !DISubroutineType(types: !13716)
!13716 = !{null, !102, !13, !357}
!13717 = !{!13718, !13719, !13720}
!13718 = !DILocalVariable(name: "dst", arg: 1, scope: !13714, file: !1980, line: 121, type: !102)
!13719 = !DILocalVariable(name: "src", arg: 2, scope: !13714, file: !1980, line: 121, type: !13)
!13720 = !DILocalVariable(name: "n", arg: 3, scope: !13714, file: !1980, line: 121, type: !357)
!13721 = !DILocation(line: 0, scope: !13714)
!13722 = !DILocation(line: 123, column: 9, scope: !13714)
!13723 = !DILocation(line: 124, column: 1, scope: !13714)
!13724 = distinct !DISubprogram(name: "z_bss_zero", scope: !1980, file: !1980, line: 132, type: !3217, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !474)
!13725 = !DILocation(line: 143, column: 2, scope: !13724)
!13726 = !DILocation(line: 168, column: 1, scope: !13724)
!13727 = distinct !DISubprogram(name: "z_init_cpu", scope: !1980, file: !1980, line: 372, type: !8510, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13728)
!13728 = !{!13729}
!13729 = !DILocalVariable(name: "id", arg: 1, scope: !13727, file: !1980, line: 372, type: !103)
!13730 = !DILocation(line: 0, scope: !13727)
!13731 = !DILocation(line: 374, column: 2, scope: !13727)
!13732 = !DILocation(line: 375, column: 34, scope: !13727)
!13733 = !DILocation(line: 375, column: 19, scope: !13727)
!13734 = !DILocation(line: 375, column: 31, scope: !13727)
!13735 = !DILocation(line: 376, column: 24, scope: !13727)
!13736 = !DILocation(line: 376, column: 19, scope: !13727)
!13737 = !DILocation(line: 376, column: 22, scope: !13727)
!13738 = !DILocation(line: 378, column: 26, scope: !13727)
!13739 = !DILocation(line: 378, column: 4, scope: !13727)
!13740 = !DILocation(line: 378, column: 50, scope: !13727)
!13741 = !DILocation(line: 377, column: 19, scope: !13727)
!13742 = !DILocation(line: 377, column: 29, scope: !13727)
!13743 = !DILocation(line: 384, column: 1, scope: !13727)
!13744 = distinct !DISubprogram(name: "init_idle_thread", scope: !1980, file: !1980, line: 343, type: !8510, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13745)
!13745 = !{!13746, !13747, !13748, !13751}
!13746 = !DILocalVariable(name: "i", arg: 1, scope: !13744, file: !1980, line: 343, type: !103)
!13747 = !DILocalVariable(name: "thread", scope: !13744, file: !1980, line: 345, type: !2072)
!13748 = !DILocalVariable(name: "stack", scope: !13744, file: !1980, line: 346, type: !13749)
!13749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13750, size: 32)
!13750 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3529, line: 44, baseType: !2186)
!13751 = !DILocalVariable(name: "tname", scope: !13744, file: !1980, line: 358, type: !1128)
!13752 = !DILocation(line: 0, scope: !13744)
!13753 = !DILocation(line: 345, column: 29, scope: !13744)
!13754 = !DILocation(line: 346, column: 28, scope: !13744)
!13755 = !DILocation(line: 362, column: 37, scope: !13744)
!13756 = !DILocation(line: 362, column: 36, scope: !13744)
!13757 = !DILocation(line: 361, column: 2, scope: !13744)
!13758 = !DILocation(line: 365, column: 2, scope: !13744)
!13759 = !DILocation(line: 370, column: 1, scope: !13744)
!13760 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2187, file: !2187, line: 331, type: !13761, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13763)
!13761 = !DISubroutineType(types: !13762)
!13762 = !{!1128, !13749}
!13763 = !{!13764}
!13764 = !DILocalVariable(name: "sym", arg: 1, scope: !13760, file: !2187, line: 331, type: !13749)
!13765 = !DILocation(line: 0, scope: !13760)
!13766 = !DILocation(line: 333, column: 21, scope: !13760)
!13767 = !DILocation(line: 333, column: 2, scope: !13760)
!13768 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13769, file: !13769, line: 155, type: !13770, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13772)
!13769 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13770 = !DISubroutineType(types: !13771)
!13771 = !{null, !2072}
!13772 = !{!13773}
!13773 = !DILocalVariable(name: "thread", arg: 1, scope: !13768, file: !13769, line: 155, type: !2072)
!13774 = !DILocation(line: 0, scope: !13768)
!13775 = !DILocation(line: 157, column: 15, scope: !13768)
!13776 = !DILocation(line: 157, column: 28, scope: !13768)
!13777 = !DILocation(line: 158, column: 1, scope: !13768)
!13778 = distinct !DISubprogram(name: "z_cstart", scope: !1980, file: !1980, line: 501, type: !3217, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13779)
!13779 = !{!13780}
!13780 = !DILocalVariable(name: "dummy_thread", scope: !13778, file: !1980, line: 518, type: !2073)
!13781 = !DILocation(line: 507, column: 2, scope: !13778)
!13782 = !DILocation(line: 43, column: 14, scope: !13783, inlinedAt: !13787)
!13783 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13784, file: !13784, line: 40, type: !3217, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13785)
!13784 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13785 = !{!13786}
!13786 = !DILocalVariable(name: "msp", scope: !13783, file: !13784, line: 42, type: !121)
!13787 = distinct !DILocation(line: 44, column: 2, scope: !13788, inlinedAt: !13790)
!13788 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13789, file: !13789, line: 42, type: !3217, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !474)
!13789 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13790 = distinct !DILocation(line: 510, column: 2, scope: !13778)
!13791 = !DILocation(line: 43, column: 3, scope: !13783, inlinedAt: !13787)
!13792 = !DILocation(line: 43, column: 60, scope: !13783, inlinedAt: !13787)
!13793 = !DILocation(line: 0, scope: !13783, inlinedAt: !13787)
!13794 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13795, file: !6798, line: 1153, type: !121)
!13795 = distinct !DISubprogram(name: "__set_MSP", scope: !6798, file: !6798, line: 1153, type: !5785, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13796)
!13796 = !{!13794}
!13797 = !DILocation(line: 0, scope: !13795, inlinedAt: !13798)
!13798 = distinct !DILocation(line: 46, column: 2, scope: !13783, inlinedAt: !13787)
!13799 = !DILocation(line: 1155, column: 3, scope: !13795, inlinedAt: !13798)
!13800 = !{i64 2464069}
!13801 = !DILocation(line: 62, column: 11, scope: !13783, inlinedAt: !13787)
!13802 = !DILocation(line: 102, column: 2, scope: !13803, inlinedAt: !13804)
!13803 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7554, file: !7554, line: 97, type: !3217, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !474)
!13804 = distinct !DILocation(line: 45, column: 2, scope: !13788, inlinedAt: !13790)
!13805 = !DILocation(line: 108, column: 2, scope: !13803, inlinedAt: !13804)
!13806 = !DILocation(line: 112, column: 2, scope: !13803, inlinedAt: !13804)
!13807 = !DILocation(line: 113, column: 2, scope: !13803, inlinedAt: !13804)
!13808 = !DILocation(line: 114, column: 2, scope: !13803, inlinedAt: !13804)
!13809 = !DILocation(line: 116, column: 2, scope: !13803, inlinedAt: !13804)
!13810 = !DILocation(line: 123, column: 13, scope: !13803, inlinedAt: !13804)
!13811 = !DILocation(line: 46, column: 2, scope: !13788, inlinedAt: !13790)
!13812 = !DILocation(line: 47, column: 2, scope: !13788, inlinedAt: !13790)
!13813 = !DILocation(line: 174, column: 12, scope: !13814, inlinedAt: !13815)
!13814 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7554, file: !7554, line: 169, type: !3217, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !474)
!13815 = distinct !DILocation(line: 48, column: 2, scope: !13788, inlinedAt: !13790)
!13816 = !DILocation(line: 179, column: 12, scope: !13814, inlinedAt: !13815)
!13817 = !DILocation(line: 50, column: 2, scope: !13788, inlinedAt: !13790)
!13818 = !DILocation(line: 57, column: 2, scope: !13788, inlinedAt: !13790)
!13819 = !DILocation(line: 518, column: 2, scope: !13778)
!13820 = !DILocation(line: 518, column: 18, scope: !13778)
!13821 = !DILocation(line: 520, column: 2, scope: !13778)
!13822 = !DILocation(line: 523, column: 2, scope: !13778)
!13823 = !DILocation(line: 526, column: 2, scope: !13778)
!13824 = !DILocation(line: 527, column: 2, scope: !13778)
!13825 = !DILocation(line: 543, column: 24, scope: !13778)
!13826 = !DILocation(line: 543, column: 2, scope: !13778)
!13827 = !DILocation(line: 0, scope: !2206)
!13828 = !DILocation(line: 246, column: 15, scope: !2224)
!13829 = !DILocation(line: 246, column: 36, scope: !2223)
!13830 = !DILocation(line: 246, column: 2, scope: !2224)
!13831 = !DILocation(line: 247, column: 37, scope: !2222)
!13832 = !DILocation(line: 0, scope: !2222)
!13833 = !DILocation(line: 248, column: 19, scope: !2222)
!13834 = !DILocation(line: 248, column: 12, scope: !2222)
!13835 = !DILocation(line: 250, column: 11, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !2222, file: !1980, line: 250, column: 7)
!13837 = !DILocation(line: 250, column: 7, scope: !2222)
!13838 = !DILocation(line: 254, column: 11, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !1980, line: 254, column: 8)
!13840 = distinct !DILexicalBlock(scope: !13836, file: !1980, line: 250, column: 20)
!13841 = !DILocation(line: 254, column: 8, scope: !13840)
!13842 = !DILocation(line: 255, column: 9, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13839, file: !1980, line: 254, column: 17)
!13844 = !DILocation(line: 258, column: 9, scope: !13843)
!13845 = !DILocation(line: 261, column: 28, scope: !13843)
!13846 = !DILocation(line: 261, column: 10, scope: !13843)
!13847 = !DILocation(line: 261, column: 17, scope: !13843)
!13848 = !DILocation(line: 261, column: 26, scope: !13843)
!13849 = !DILocation(line: 262, column: 4, scope: !13843)
!13850 = !DILocation(line: 263, column: 9, scope: !13840)
!13851 = !DILocation(line: 263, column: 16, scope: !13840)
!13852 = !DILocation(line: 263, column: 28, scope: !13840)
!13853 = !DILocation(line: 264, column: 3, scope: !13840)
!13854 = !DILocation(line: 246, column: 60, scope: !2223)
!13855 = distinct !{!13855, !13830, !13856}
!13856 = !DILocation(line: 265, column: 2, scope: !2224)
!13857 = !DILocation(line: 266, column: 1, scope: !2206)
!13858 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !508, file: !508, line: 1638, type: !6832, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13859)
!13859 = !{!13860, !13861}
!13860 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13858, file: !508, line: 1638, type: !829)
!13861 = !DILocalVariable(name: "priority", arg: 2, scope: !13858, file: !508, line: 1638, type: !121)
!13862 = !DILocation(line: 0, scope: !13858)
!13863 = !DILocation(line: 1646, column: 48, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !508, line: 1645, column: 3)
!13865 = distinct !DILexicalBlock(scope: !13858, file: !508, line: 1640, column: 7)
!13866 = !DILocation(line: 1646, column: 32, scope: !13864)
!13867 = !DILocation(line: 1646, column: 40, scope: !13864)
!13868 = !DILocation(line: 1646, column: 5, scope: !13864)
!13869 = !DILocation(line: 1646, column: 46, scope: !13864)
!13870 = !DILocation(line: 1648, column: 1, scope: !13858)
!13871 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13789, file: !13789, line: 32, type: !3217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!13872 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13873, file: !13873, line: 215, type: !13770, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13874)
!13873 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13874 = !{!13875}
!13875 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13872, file: !13873, line: 215, type: !2072)
!13876 = !DILocation(line: 0, scope: !13872)
!13877 = !DILocation(line: 217, column: 21, scope: !13872)
!13878 = !DILocation(line: 217, column: 34, scope: !13872)
!13879 = !DILocation(line: 221, column: 21, scope: !13872)
!13880 = !DILocation(line: 221, column: 34, scope: !13872)
!13881 = !DILocation(line: 223, column: 27, scope: !13872)
!13882 = !DILocation(line: 223, column: 33, scope: !13872)
!13883 = !DILocation(line: 224, column: 27, scope: !13872)
!13884 = !DILocation(line: 224, column: 32, scope: !13872)
!13885 = !DILocation(line: 232, column: 16, scope: !13872)
!13886 = !DILocation(line: 232, column: 30, scope: !13872)
!13887 = !DILocation(line: 239, column: 24, scope: !13872)
!13888 = !DILocation(line: 240, column: 1, scope: !13872)
!13889 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1980, file: !1980, line: 399, type: !13890, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13892)
!13890 = !DISubroutineType(types: !13891)
!13891 = !{!1128}
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "stack_ptr", scope: !13889, file: !1980, line: 401, type: !1128)
!13894 = !DILocation(line: 404, column: 2, scope: !13889)
!13895 = !DILocation(line: 416, column: 24, scope: !13889)
!13896 = !DILocation(line: 418, column: 14, scope: !13889)
!13897 = !DILocation(line: 0, scope: !13889)
!13898 = !DILocation(line: 423, column: 2, scope: !13889)
!13899 = !DILocation(line: 424, column: 2, scope: !13889)
!13900 = !DILocation(line: 426, column: 2, scope: !13889)
!13901 = !DILocation(line: 428, column: 2, scope: !13889)
!13902 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1980, file: !1980, line: 432, type: !13903, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13905)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{null, !1128}
!13905 = !{!13906}
!13906 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13902, file: !1980, line: 432, type: !1128)
!13907 = !DILocation(line: 0, scope: !13902)
!13908 = !DILocation(line: 435, column: 2, scope: !13902)
!13909 = !DILocation(line: 445, column: 2, scope: !13902)
!13910 = distinct !DISubprogram(name: "bg_thread_main", scope: !1980, file: !1980, line: 277, type: !3531, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1976, retainedNodes: !13911)
!13911 = !{!13912, !13913, !13914}
!13912 = !DILocalVariable(name: "unused1", arg: 1, scope: !13910, file: !1980, line: 277, type: !102)
!13913 = !DILocalVariable(name: "unused2", arg: 2, scope: !13910, file: !1980, line: 277, type: !102)
!13914 = !DILocalVariable(name: "unused3", arg: 3, scope: !13910, file: !1980, line: 277, type: !102)
!13915 = !DILocation(line: 0, scope: !13910)
!13916 = !DILocation(line: 291, column: 20, scope: !13910)
!13917 = !DILocation(line: 293, column: 2, scope: !13910)
!13918 = !DILocation(line: 297, column: 2, scope: !13910)
!13919 = !DILocation(line: 305, column: 2, scope: !13910)
!13920 = !DILocation(line: 307, column: 2, scope: !13910)
!13921 = !DILocation(line: 330, column: 8, scope: !13910)
!13922 = !DILocation(line: 333, column: 34, scope: !13910)
!13923 = !DILocation(line: 339, column: 1, scope: !13910)
!13924 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2233, file: !2233, line: 45, type: !13925, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13933)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{null, !13927, !102}
!13927 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !313, line: 103, baseType: !13928)
!13928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13929, size: 32)
!13929 = !DISubroutineType(types: !13930)
!13930 = !{null, !13931, !102}
!13931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13932, size: 32)
!13932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2238)
!13933 = !{!13934, !13935}
!13934 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13924, file: !2233, line: 45, type: !13927)
!13935 = !DILocalVariable(name: "user_data", arg: 2, scope: !13924, file: !2233, line: 45, type: !102)
!13936 = !DILocation(line: 0, scope: !13924)
!13937 = !DILocation(line: 71, column: 1, scope: !13924)
!13938 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2233, file: !2233, line: 73, type: !13925, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13939)
!13939 = !{!13940, !13941}
!13940 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13938, file: !2233, line: 73, type: !13927)
!13941 = !DILocalVariable(name: "user_data", arg: 2, scope: !13938, file: !2233, line: 73, type: !102)
!13942 = !DILocation(line: 0, scope: !13938)
!13943 = !DILocation(line: 95, column: 1, scope: !13938)
!13944 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2233, file: !2233, line: 97, type: !7555, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!13945 = !DILocation(line: 1031, column: 3, scope: !13946, inlinedAt: !13949)
!13946 = distinct !DISubprogram(name: "__get_IPSR", scope: !6798, file: !6798, line: 1027, type: !7548, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13947)
!13947 = !{!13948}
!13948 = !DILocalVariable(name: "result", scope: !13946, file: !6798, line: 1029, type: !121)
!13949 = distinct !DILocation(line: 48, column: 10, scope: !13950, inlinedAt: !13951)
!13950 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7554, file: !7554, line: 46, type: !7555, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!13951 = distinct !DILocation(line: 99, column: 9, scope: !13944)
!13952 = !{i64 2469720}
!13953 = !DILocation(line: 0, scope: !13946, inlinedAt: !13949)
!13954 = !DILocation(line: 48, column: 9, scope: !13950, inlinedAt: !13951)
!13955 = !DILocation(line: 99, column: 2, scope: !13944)
!13956 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2233, file: !2233, line: 106, type: !3217, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!13957 = !DILocation(line: 108, column: 2, scope: !13956)
!13958 = !DILocation(line: 108, column: 17, scope: !13956)
!13959 = !DILocation(line: 108, column: 30, scope: !13956)
!13960 = !DILocation(line: 109, column: 1, scope: !13956)
!13961 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2233, file: !2233, line: 116, type: !3217, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!13962 = !DILocation(line: 118, column: 2, scope: !13961)
!13963 = !DILocation(line: 118, column: 17, scope: !13961)
!13964 = !DILocation(line: 118, column: 30, scope: !13961)
!13965 = !DILocation(line: 119, column: 1, scope: !13961)
!13966 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2233, file: !2233, line: 126, type: !7555, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !474)
!13967 = !DILocation(line: 128, column: 10, scope: !13966)
!13968 = !DILocation(line: 128, column: 25, scope: !13966)
!13969 = !DILocation(line: 128, column: 38, scope: !13966)
!13970 = !DILocation(line: 128, column: 53, scope: !13966)
!13971 = !DILocation(line: 128, column: 2, scope: !13966)
!13972 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2233, file: !2233, line: 187, type: !13973, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13975)
!13973 = !DISubroutineType(types: !13974)
!13974 = !{!103, !2237, !157}
!13975 = !{!13976, !13977}
!13976 = !DILocalVariable(name: "thread", arg: 1, scope: !13972, file: !2233, line: 187, type: !2237)
!13977 = !DILocalVariable(name: "value", arg: 2, scope: !13972, file: !2233, line: 187, type: !157)
!13978 = !DILocation(line: 0, scope: !13972)
!13979 = !DILocation(line: 206, column: 2, scope: !13972)
!13980 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2233, file: !2233, line: 238, type: !13981, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13983)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{!157, !2237}
!13983 = !{!13984}
!13984 = !DILocalVariable(name: "thread", arg: 1, scope: !13980, file: !2233, line: 238, type: !2237)
!13985 = !DILocation(line: 0, scope: !13980)
!13986 = !DILocation(line: 244, column: 2, scope: !13980)
!13987 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2233, file: !2233, line: 248, type: !13988, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !13990)
!13988 = !DISubroutineType(types: !13989)
!13989 = !{!103, !2236, !1128, !357}
!13990 = !{!13991, !13992, !13993}
!13991 = !DILocalVariable(name: "thread", arg: 1, scope: !13987, file: !2233, line: 248, type: !2236)
!13992 = !DILocalVariable(name: "buf", arg: 2, scope: !13987, file: !2233, line: 248, type: !1128)
!13993 = !DILocalVariable(name: "size", arg: 3, scope: !13987, file: !2233, line: 248, type: !357)
!13994 = !DILocation(line: 0, scope: !13987)
!13995 = !DILocation(line: 257, column: 2, scope: !13987)
!13996 = !DILocation(line: 0, scope: !2232)
!13997 = !DILocation(line: 281, column: 11, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !2232, file: !2233, line: 281, column: 6)
!13999 = !DILocation(line: 281, column: 20, scope: !13998)
!14000 = !DILocation(line: 275, column: 45, scope: !2232)
!14001 = !DILocation(line: 285, column: 10, scope: !2232)
!14002 = !DILocation(line: 0, scope: !2355)
!14003 = !DILocation(line: 293, column: 39, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !2355, file: !2233, line: 293, column: 2)
!14005 = !DILocation(line: 293, column: 2, scope: !2355)
!14006 = !DILocation(line: 273, column: 14, scope: !2232)
!14007 = !DILocation(line: 309, column: 2, scope: !2232)
!14008 = !DILocation(line: 309, column: 11, scope: !2232)
!14009 = !DILocation(line: 311, column: 2, scope: !2232)
!14010 = !DILocation(line: 293, column: 26, scope: !14004)
!14011 = !DILocation(line: 294, column: 9, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !14004, file: !2233, line: 293, column: 54)
!14013 = !DILocation(line: 295, column: 21, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14012, file: !2233, line: 295, column: 7)
!14015 = !DILocation(line: 295, column: 28, scope: !14014)
!14016 = !DILocation(line: 295, column: 7, scope: !14012)
!14017 = !DILocation(line: 299, column: 25, scope: !14012)
!14018 = !DILocation(line: 299, column: 41, scope: !14012)
!14019 = !DILocation(line: 300, column: 7, scope: !14012)
!14020 = !DILocation(line: 300, column: 26, scope: !14012)
!14021 = !DILocation(line: 299, column: 10, scope: !14012)
!14022 = !DILocation(line: 299, column: 7, scope: !14012)
!14023 = !DILocation(line: 302, column: 16, scope: !14012)
!14024 = !DILocation(line: 304, column: 20, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14012, file: !2233, line: 304, column: 7)
!14026 = !DILocation(line: 304, column: 7, scope: !14012)
!14027 = !DILocation(line: 305, column: 26, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14025, file: !2233, line: 304, column: 26)
!14029 = !DILocation(line: 305, column: 42, scope: !14028)
!14030 = !DILocation(line: 305, column: 11, scope: !14028)
!14031 = !DILocation(line: 305, column: 8, scope: !14028)
!14032 = !DILocation(line: 306, column: 3, scope: !14028)
!14033 = !DILocation(line: 293, column: 50, scope: !14004)
!14034 = !DILocation(line: 312, column: 1, scope: !2232)
!14035 = distinct !DISubprogram(name: "copy_bytes", scope: !2233, file: !2233, line: 261, type: !14036, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14038)
!14036 = !DISubroutineType(types: !14037)
!14037 = !{!357, !1128, !357, !157, !357}
!14038 = !{!14039, !14040, !14041, !14042, !14043}
!14039 = !DILocalVariable(name: "dest", arg: 1, scope: !14035, file: !2233, line: 261, type: !1128)
!14040 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14035, file: !2233, line: 261, type: !357)
!14041 = !DILocalVariable(name: "src", arg: 3, scope: !14035, file: !2233, line: 261, type: !157)
!14042 = !DILocalVariable(name: "src_size", arg: 4, scope: !14035, file: !2233, line: 261, type: !357)
!14043 = !DILocalVariable(name: "bytes_to_copy", scope: !14035, file: !2233, line: 263, type: !357)
!14044 = !DILocation(line: 0, scope: !14035)
!14045 = !DILocation(line: 265, column: 18, scope: !14035)
!14046 = !DILocation(line: 266, column: 2, scope: !14035)
!14047 = !DILocation(line: 268, column: 2, scope: !14035)
!14048 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2233, file: !2233, line: 383, type: !14049, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14051)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{null, !2237}
!14051 = !{!14052}
!14052 = !DILocalVariable(name: "thread", arg: 1, scope: !14048, file: !2233, line: 383, type: !2237)
!14053 = !DILocation(line: 0, scope: !14048)
!14054 = !DILocation(line: 387, column: 2, scope: !14048)
!14055 = !DILocation(line: 388, column: 1, scope: !14048)
!14056 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2233, file: !2233, line: 528, type: !14057, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14064)
!14057 = !DISubroutineType(types: !14058)
!14058 = !{!1128, !2237, !14059, !357, !3528, !102, !102, !102, !103, !121, !157}
!14059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14060, size: 32)
!14060 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3529, line: 44, baseType: !14061)
!14061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2187, line: 47, size: 8, elements: !14062)
!14062 = !{!14063}
!14063 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14061, file: !2187, line: 48, baseType: !159, size: 8)
!14064 = !{!14065, !14066, !14067, !14068, !14069, !14070, !14071, !14072, !14073, !14074, !14075}
!14065 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14056, file: !2233, line: 528, type: !2237)
!14066 = !DILocalVariable(name: "stack", arg: 2, scope: !14056, file: !2233, line: 529, type: !14059)
!14067 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14056, file: !2233, line: 529, type: !357)
!14068 = !DILocalVariable(name: "entry", arg: 4, scope: !14056, file: !2233, line: 530, type: !3528)
!14069 = !DILocalVariable(name: "p1", arg: 5, scope: !14056, file: !2233, line: 531, type: !102)
!14070 = !DILocalVariable(name: "p2", arg: 6, scope: !14056, file: !2233, line: 531, type: !102)
!14071 = !DILocalVariable(name: "p3", arg: 7, scope: !14056, file: !2233, line: 531, type: !102)
!14072 = !DILocalVariable(name: "prio", arg: 8, scope: !14056, file: !2233, line: 532, type: !103)
!14073 = !DILocalVariable(name: "options", arg: 9, scope: !14056, file: !2233, line: 532, type: !121)
!14074 = !DILocalVariable(name: "name", arg: 10, scope: !14056, file: !2233, line: 532, type: !157)
!14075 = !DILocalVariable(name: "stack_ptr", scope: !14056, file: !2233, line: 534, type: !1128)
!14076 = !DILocation(line: 0, scope: !14056)
!14077 = !DILocation(line: 550, column: 28, scope: !14056)
!14078 = !DILocation(line: 550, column: 2, scope: !14056)
!14079 = !DILocation(line: 553, column: 34, scope: !14056)
!14080 = !DILocation(line: 553, column: 2, scope: !14056)
!14081 = !DILocation(line: 554, column: 14, scope: !14056)
!14082 = !DILocation(line: 564, column: 2, scope: !14056)
!14083 = !DILocation(line: 567, column: 14, scope: !14056)
!14084 = !DILocation(line: 567, column: 24, scope: !14056)
!14085 = !DILocation(line: 612, column: 7, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14056, file: !2233, line: 612, column: 6)
!14087 = !DILocation(line: 612, column: 6, scope: !14056)
!14088 = !DILocation(line: 627, column: 40, scope: !14056)
!14089 = !DILocation(line: 637, column: 2, scope: !14056)
!14090 = !DILocation(line: 613, column: 15, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14086, file: !2233, line: 612, column: 17)
!14092 = !DILocation(line: 613, column: 29, scope: !14091)
!14093 = !DILocation(line: 638, column: 1, scope: !14056)
!14094 = distinct !DISubprogram(name: "z_waitq_init", scope: !14095, file: !14095, line: 47, type: !14096, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14098)
!14095 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14096 = !DISubroutineType(types: !14097)
!14097 = !{null, !2268}
!14098 = !{!14099}
!14099 = !DILocalVariable(name: "w", arg: 1, scope: !14094, file: !14095, line: 47, type: !2268)
!14100 = !DILocation(line: 0, scope: !14094)
!14101 = !DILocation(line: 49, column: 21, scope: !14094)
!14102 = !DILocation(line: 49, column: 2, scope: !14094)
!14103 = !DILocation(line: 50, column: 1, scope: !14094)
!14104 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2233, file: !2233, line: 791, type: !14105, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14108)
!14105 = !DISubroutineType(types: !14106)
!14106 = !{null, !14107, !103, !121, !32}
!14107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!14108 = !{!14109, !14110, !14111, !14112}
!14109 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14104, file: !2233, line: 791, type: !14107)
!14110 = !DILocalVariable(name: "priority", arg: 2, scope: !14104, file: !2233, line: 791, type: !103)
!14111 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14104, file: !2233, line: 792, type: !121)
!14112 = !DILocalVariable(name: "options", arg: 4, scope: !14104, file: !2233, line: 792, type: !32)
!14113 = !DILocation(line: 0, scope: !14104)
!14114 = !DILocation(line: 795, column: 15, scope: !14104)
!14115 = !DILocation(line: 795, column: 25, scope: !14104)
!14116 = !DILocation(line: 796, column: 30, scope: !14104)
!14117 = !DILocation(line: 796, column: 15, scope: !14104)
!14118 = !DILocation(line: 796, column: 28, scope: !14104)
!14119 = !DILocation(line: 797, column: 30, scope: !14104)
!14120 = !DILocation(line: 797, column: 15, scope: !14104)
!14121 = !DILocation(line: 797, column: 28, scope: !14104)
!14122 = !DILocation(line: 799, column: 22, scope: !14104)
!14123 = !DILocation(line: 799, column: 15, scope: !14104)
!14124 = !DILocation(line: 799, column: 20, scope: !14104)
!14125 = !DILocation(line: 801, column: 15, scope: !14104)
!14126 = !DILocation(line: 801, column: 28, scope: !14104)
!14127 = !DILocation(line: 814, column: 2, scope: !14104)
!14128 = !DILocation(line: 815, column: 1, scope: !14104)
!14129 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2233, file: !2233, line: 449, type: !14130, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14132)
!14130 = !DISubroutineType(types: !14131)
!14131 = !{!1128, !2237, !14059, !357}
!14132 = !{!14133, !14134, !14135, !14136, !14137, !14138, !14139, !14140}
!14133 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14129, file: !2233, line: 449, type: !2237)
!14134 = !DILocalVariable(name: "stack", arg: 2, scope: !14129, file: !2233, line: 450, type: !14059)
!14135 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14129, file: !2233, line: 450, type: !357)
!14136 = !DILocalVariable(name: "stack_obj_size", scope: !14129, file: !2233, line: 452, type: !357)
!14137 = !DILocalVariable(name: "stack_buf_size", scope: !14129, file: !2233, line: 452, type: !357)
!14138 = !DILocalVariable(name: "stack_ptr", scope: !14129, file: !2233, line: 453, type: !1128)
!14139 = !DILocalVariable(name: "stack_buf_start", scope: !14129, file: !2233, line: 453, type: !1128)
!14140 = !DILocalVariable(name: "delta", scope: !14129, file: !2233, line: 454, type: !357)
!14141 = !DILocation(line: 0, scope: !14129)
!14142 = !DILocation(line: 465, column: 20, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14129, file: !2233, line: 463, column: 2)
!14144 = !DILocation(line: 466, column: 21, scope: !14143)
!14145 = !DILocation(line: 473, column: 28, scope: !14129)
!14146 = !DILocation(line: 514, column: 33, scope: !14129)
!14147 = !DILocation(line: 514, column: 25, scope: !14129)
!14148 = !DILocation(line: 514, column: 31, scope: !14129)
!14149 = !DILocation(line: 515, column: 25, scope: !14129)
!14150 = !DILocation(line: 515, column: 30, scope: !14129)
!14151 = !DILocation(line: 516, column: 25, scope: !14129)
!14152 = !DILocation(line: 516, column: 31, scope: !14129)
!14153 = !DILocation(line: 520, column: 2, scope: !14129)
!14154 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2187, file: !2187, line: 331, type: !14155, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14157)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{!1128, !14059}
!14157 = !{!14158}
!14158 = !DILocalVariable(name: "sym", arg: 1, scope: !14154, file: !2187, line: 331, type: !14059)
!14159 = !DILocation(line: 0, scope: !14154)
!14160 = !DILocation(line: 333, column: 21, scope: !14154)
!14161 = !DILocation(line: 333, column: 2, scope: !14154)
!14162 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14163, file: !14163, line: 40, type: !14164, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14166)
!14163 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14164 = !DISubroutineType(types: !14165)
!14165 = !{null, !14107}
!14166 = !{!14167}
!14167 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14162, file: !14163, line: 40, type: !14107)
!14168 = !DILocation(line: 0, scope: !14162)
!14169 = !DILocation(line: 42, column: 31, scope: !14162)
!14170 = !DILocation(line: 42, column: 2, scope: !14162)
!14171 = !DILocation(line: 43, column: 1, scope: !14162)
!14172 = distinct !DISubprogram(name: "z_init_timeout", scope: !14163, file: !14163, line: 25, type: !2294, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14173)
!14173 = !{!14174}
!14174 = !DILocalVariable(name: "to", arg: 1, scope: !14172, file: !14163, line: 25, type: !2296)
!14175 = !DILocation(line: 0, scope: !14172)
!14176 = !DILocation(line: 27, column: 22, scope: !14172)
!14177 = !DILocation(line: 27, column: 2, scope: !14172)
!14178 = !DILocation(line: 28, column: 1, scope: !14172)
!14179 = distinct !DISubprogram(name: "sys_dnode_init", scope: !322, file: !322, line: 211, type: !14180, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14182)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{null, !2340}
!14182 = !{!14183}
!14183 = !DILocalVariable(name: "node", arg: 1, scope: !14179, file: !322, line: 211, type: !2340)
!14184 = !DILocation(line: 0, scope: !14179)
!14185 = !DILocation(line: 213, column: 8, scope: !14179)
!14186 = !DILocation(line: 213, column: 13, scope: !14179)
!14187 = !DILocation(line: 214, column: 8, scope: !14179)
!14188 = !DILocation(line: 214, column: 13, scope: !14179)
!14189 = !DILocation(line: 215, column: 1, scope: !14179)
!14190 = distinct !DISubprogram(name: "sys_dlist_init", scope: !322, file: !322, line: 197, type: !14191, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14194)
!14191 = !DISubroutineType(types: !14192)
!14192 = !{null, !14193}
!14193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!14194 = !{!14195}
!14195 = !DILocalVariable(name: "list", arg: 1, scope: !14190, file: !322, line: 197, type: !14193)
!14196 = !DILocation(line: 0, scope: !14190)
!14197 = !DILocation(line: 199, column: 8, scope: !14190)
!14198 = !DILocation(line: 199, column: 13, scope: !14190)
!14199 = !DILocation(line: 200, column: 8, scope: !14190)
!14200 = !DILocation(line: 200, column: 13, scope: !14190)
!14201 = !DILocation(line: 201, column: 1, scope: !14190)
!14202 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2233, file: !2233, line: 641, type: !14203, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14209)
!14203 = !DISubroutineType(types: !14204)
!14204 = !{!2236, !2237, !14059, !357, !3528, !102, !102, !102, !103, !121, !14205}
!14205 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !14206)
!14206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !14207)
!14207 = !{!14208}
!14208 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14206, file: !1739, line: 66, baseType: !1738, size: 64)
!14209 = !{!14210, !14211, !14212, !14213, !14214, !14215, !14216, !14217, !14218, !14219}
!14210 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14202, file: !2233, line: 641, type: !2237)
!14211 = !DILocalVariable(name: "stack", arg: 2, scope: !14202, file: !2233, line: 642, type: !14059)
!14212 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14202, file: !2233, line: 643, type: !357)
!14213 = !DILocalVariable(name: "entry", arg: 4, scope: !14202, file: !2233, line: 643, type: !3528)
!14214 = !DILocalVariable(name: "p1", arg: 5, scope: !14202, file: !2233, line: 644, type: !102)
!14215 = !DILocalVariable(name: "p2", arg: 6, scope: !14202, file: !2233, line: 644, type: !102)
!14216 = !DILocalVariable(name: "p3", arg: 7, scope: !14202, file: !2233, line: 644, type: !102)
!14217 = !DILocalVariable(name: "prio", arg: 8, scope: !14202, file: !2233, line: 645, type: !103)
!14218 = !DILocalVariable(name: "options", arg: 9, scope: !14202, file: !2233, line: 645, type: !121)
!14219 = !DILocalVariable(name: "delay", arg: 10, scope: !14202, file: !2233, line: 645, type: !14205)
!14220 = !DILocation(line: 0, scope: !14202)
!14221 = !DILocation(line: 649, column: 2, scope: !14202)
!14222 = !DILocation(line: 652, column: 7, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14202, file: !2233, line: 652, column: 6)
!14224 = !DILocation(line: 652, column: 6, scope: !14202)
!14225 = !DILocation(line: 653, column: 3, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14223, file: !2233, line: 652, column: 39)
!14227 = !DILocation(line: 654, column: 2, scope: !14226)
!14228 = !DILocation(line: 656, column: 2, scope: !14202)
!14229 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2233, file: !2233, line: 401, type: !14230, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14232)
!14230 = !DISubroutineType(types: !14231)
!14231 = !{null, !2237, !14205}
!14232 = !{!14233, !14234}
!14233 = !DILocalVariable(name: "thread", arg: 1, scope: !14229, file: !2233, line: 401, type: !2237)
!14234 = !DILocalVariable(name: "delay", arg: 2, scope: !14229, file: !2233, line: 401, type: !14205)
!14235 = !DILocation(line: 0, scope: !14229)
!14236 = !DILocation(line: 404, column: 6, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14229, file: !2233, line: 404, column: 6)
!14238 = !DILocation(line: 404, column: 6, scope: !14229)
!14239 = !DILocation(line: 405, column: 3, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14237, file: !2233, line: 404, column: 38)
!14241 = !DILocation(line: 406, column: 2, scope: !14240)
!14242 = !DILocation(line: 407, column: 3, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14237, file: !2233, line: 406, column: 9)
!14244 = !DILocation(line: 413, column: 1, scope: !14229)
!14245 = distinct !DISubprogram(name: "k_thread_start", scope: !3650, file: !3650, line: 205, type: !14246, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14248)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{null, !2236}
!14248 = !{!14249}
!14249 = !DILocalVariable(name: "thread", arg: 1, scope: !14245, file: !3650, line: 205, type: !2236)
!14250 = !DILocation(line: 0, scope: !14245)
!14251 = !DILocation(line: 214, column: 2, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !14245, file: !3650, line: 214, column: 2)
!14253 = !{i64 2152241511}
!14254 = !DILocation(line: 215, column: 2, scope: !14245)
!14255 = !DILocation(line: 216, column: 1, scope: !14245)
!14256 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14163, file: !14163, line: 47, type: !14230, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14257)
!14257 = !{!14258, !14259}
!14258 = !DILocalVariable(name: "thread", arg: 1, scope: !14256, file: !14163, line: 47, type: !2237)
!14259 = !DILocalVariable(name: "ticks", arg: 2, scope: !14256, file: !14163, line: 47, type: !14205)
!14260 = !DILocation(line: 0, scope: !14256)
!14261 = !DILocation(line: 49, column: 30, scope: !14256)
!14262 = !DILocation(line: 49, column: 2, scope: !14256)
!14263 = !DILocation(line: 50, column: 1, scope: !14256)
!14264 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2233, file: !2233, line: 748, type: !3217, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14265)
!14265 = !{!14266, !14284}
!14266 = !DILocalVariable(name: "thread_data", scope: !14267, file: !2233, line: 750, type: !14268)
!14267 = distinct !DILexicalBlock(scope: !14264, file: !2233, line: 750, column: 2)
!14268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14269, size: 32)
!14269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !313, line: 620, size: 384, elements: !14270)
!14270 = !{!14271, !14272, !14273, !14274, !14275, !14276, !14277, !14278, !14279, !14280, !14281, !14283}
!14271 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14269, file: !313, line: 621, baseType: !2237, size: 32)
!14272 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14269, file: !313, line: 622, baseType: !14059, size: 32, offset: 32)
!14273 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14269, file: !313, line: 623, baseType: !32, size: 32, offset: 64)
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14269, file: !313, line: 624, baseType: !3528, size: 32, offset: 96)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14269, file: !313, line: 625, baseType: !102, size: 32, offset: 128)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14269, file: !313, line: 626, baseType: !102, size: 32, offset: 160)
!14277 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14269, file: !313, line: 627, baseType: !102, size: 32, offset: 192)
!14278 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14269, file: !313, line: 628, baseType: !103, size: 32, offset: 224)
!14279 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14269, file: !313, line: 629, baseType: !121, size: 32, offset: 256)
!14280 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14269, file: !313, line: 630, baseType: !345, size: 32, offset: 288)
!14281 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14269, file: !313, line: 631, baseType: !14282, size: 32, offset: 320)
!14282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 32)
!14283 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14269, file: !313, line: 632, baseType: !157, size: 32, offset: 352)
!14284 = !DILocalVariable(name: "thread_data", scope: !14285, file: !2233, line: 781, type: !14268)
!14285 = distinct !DILexicalBlock(scope: !14264, file: !2233, line: 781, column: 2)
!14286 = !DILocation(line: 0, scope: !14267)
!14287 = !DILocation(line: 750, column: 2, scope: !14267)
!14288 = !DILocation(line: 780, column: 2, scope: !14264)
!14289 = !DILocation(line: 0, scope: !14285)
!14290 = !DILocation(line: 781, column: 2, scope: !14285)
!14291 = !DILocation(line: 752, column: 17, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !2233, line: 750, column: 38)
!14293 = distinct !DILexicalBlock(scope: !14267, file: !2233, line: 750, column: 2)
!14294 = !DILocation(line: 753, column: 17, scope: !14292)
!14295 = !DILocation(line: 754, column: 17, scope: !14292)
!14296 = !DILocation(line: 755, column: 17, scope: !14292)
!14297 = !DILocation(line: 756, column: 17, scope: !14292)
!14298 = !DILocation(line: 757, column: 17, scope: !14292)
!14299 = !DILocation(line: 758, column: 17, scope: !14292)
!14300 = !DILocation(line: 759, column: 17, scope: !14292)
!14301 = !DILocation(line: 760, column: 17, scope: !14292)
!14302 = !DILocation(line: 751, column: 3, scope: !14292)
!14303 = !DILocation(line: 763, column: 16, scope: !14292)
!14304 = !DILocation(line: 763, column: 29, scope: !14292)
!14305 = !DILocation(line: 763, column: 39, scope: !14292)
!14306 = !DILocation(line: 750, column: 2, scope: !14293)
!14307 = !DILocation(line: 750, column: 2, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14293, file: !2233, line: 750, column: 2)
!14309 = distinct !{!14309, !14287, !14310}
!14310 = !DILocation(line: 764, column: 2, scope: !14267)
!14311 = !DILocation(line: 787, column: 2, scope: !14264)
!14312 = !DILocation(line: 788, column: 1, scope: !14264)
!14313 = !DILocation(line: 782, column: 20, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14315, file: !2233, line: 782, column: 7)
!14315 = distinct !DILexicalBlock(scope: !14316, file: !2233, line: 781, column: 38)
!14316 = distinct !DILexicalBlock(scope: !14285, file: !2233, line: 781, column: 2)
!14317 = !DILocation(line: 782, column: 31, scope: !14314)
!14318 = !DILocation(line: 782, column: 7, scope: !14315)
!14319 = !DILocation(line: 783, column: 37, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14314, file: !2233, line: 782, column: 51)
!14321 = !DILocation(line: 784, column: 10, scope: !14320)
!14322 = !DILocation(line: 783, column: 4, scope: !14320)
!14323 = !DILocation(line: 785, column: 3, scope: !14320)
!14324 = !DILocation(line: 781, column: 2, scope: !14316)
!14325 = !DILocation(line: 781, column: 2, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14316, file: !2233, line: 781, column: 2)
!14327 = distinct !{!14327, !14290, !14328}
!14328 = !DILocation(line: 786, column: 2, scope: !14285)
!14329 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !5978, file: !5978, line: 403, type: !5979, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14330)
!14330 = !{!14331}
!14331 = !DILocalVariable(name: "t", arg: 1, scope: !14329, file: !5978, line: 403, type: !2341)
!14332 = !DILocation(line: 0, scope: !14329)
!14333 = !DILocalVariable(name: "t", arg: 1, scope: !14334, file: !5978, line: 102, type: !2341)
!14334 = distinct !DISubprogram(name: "z_tmcvt", scope: !5978, file: !5978, line: 102, type: !5986, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14335)
!14335 = !{!14333, !14336, !14337, !14338, !14339, !14340, !14341, !14342, !14343, !14344, !14345}
!14336 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14334, file: !5978, line: 102, type: !121)
!14337 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14334, file: !5978, line: 103, type: !121)
!14338 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14334, file: !5978, line: 103, type: !170)
!14339 = !DILocalVariable(name: "result32", arg: 5, scope: !14334, file: !5978, line: 104, type: !170)
!14340 = !DILocalVariable(name: "round_up", arg: 6, scope: !14334, file: !5978, line: 104, type: !170)
!14341 = !DILocalVariable(name: "round_off", arg: 7, scope: !14334, file: !5978, line: 105, type: !170)
!14342 = !DILocalVariable(name: "mul_ratio", scope: !14334, file: !5978, line: 107, type: !170)
!14343 = !DILocalVariable(name: "div_ratio", scope: !14334, file: !5978, line: 109, type: !170)
!14344 = !DILocalVariable(name: "off", scope: !14334, file: !5978, line: 116, type: !2341)
!14345 = !DILocalVariable(name: "rdivisor", scope: !14346, file: !5978, line: 119, type: !121)
!14346 = distinct !DILexicalBlock(scope: !14347, file: !5978, line: 118, column: 18)
!14347 = distinct !DILexicalBlock(scope: !14334, file: !5978, line: 118, column: 6)
!14348 = !DILocation(line: 0, scope: !14334, inlinedAt: !14349)
!14349 = distinct !DILocation(line: 406, column: 9, scope: !14329)
!14350 = !DILocation(line: 145, column: 13, scope: !14351, inlinedAt: !14349)
!14351 = distinct !DILexicalBlock(scope: !14352, file: !5978, line: 144, column: 10)
!14352 = distinct !DILexicalBlock(scope: !14353, file: !5978, line: 142, column: 7)
!14353 = distinct !DILexicalBlock(scope: !14354, file: !5978, line: 141, column: 24)
!14354 = distinct !DILexicalBlock(scope: !14355, file: !5978, line: 141, column: 13)
!14355 = distinct !DILexicalBlock(scope: !14334, file: !5978, line: 134, column: 6)
!14356 = !DILocation(line: 406, column: 2, scope: !14329)
!14357 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2233, file: !2233, line: 817, type: !3526, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14358)
!14358 = !{!14359, !14360, !14361, !14362}
!14359 = !DILocalVariable(name: "entry", arg: 1, scope: !14357, file: !2233, line: 817, type: !3528)
!14360 = !DILocalVariable(name: "p1", arg: 2, scope: !14357, file: !2233, line: 818, type: !102)
!14361 = !DILocalVariable(name: "p2", arg: 3, scope: !14357, file: !2233, line: 818, type: !102)
!14362 = !DILocalVariable(name: "p3", arg: 4, scope: !14357, file: !2233, line: 818, type: !102)
!14363 = !DILocation(line: 0, scope: !14357)
!14364 = !DILocation(line: 822, column: 2, scope: !14357)
!14365 = !DILocation(line: 822, column: 17, scope: !14357)
!14366 = !DILocation(line: 822, column: 30, scope: !14357)
!14367 = !DILocation(line: 823, column: 2, scope: !14357)
!14368 = !DILocation(line: 845, column: 2, scope: !14357)
!14369 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2233, file: !2233, line: 888, type: !14370, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14372)
!14370 = !DISubroutineType(types: !14371)
!14371 = !{!103, !2237}
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "thread", arg: 1, scope: !14369, file: !2233, line: 888, type: !2237)
!14374 = !DILocation(line: 0, scope: !14369)
!14375 = !DILocation(line: 893, column: 2, scope: !14369)
!14376 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2233, file: !2233, line: 897, type: !14377, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14379)
!14377 = !DISubroutineType(types: !14378)
!14378 = !{!103, !2237, !32}
!14379 = !{!14380, !14381}
!14380 = !DILocalVariable(name: "thread", arg: 1, scope: !14376, file: !2233, line: 897, type: !2237)
!14381 = !DILocalVariable(name: "options", arg: 2, scope: !14376, file: !2233, line: 897, type: !32)
!14382 = !DILocation(line: 0, scope: !14376)
!14383 = !DILocation(line: 902, column: 2, scope: !14376)
!14384 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2233, file: !2233, line: 1072, type: !14385, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14390)
!14385 = !DISubroutineType(types: !14386)
!14386 = !{!103, !2236, !14387}
!14387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14388, size: 32)
!14388 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !368, line: 234, baseType: !14389)
!14389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !368, line: 192, elements: !474)
!14390 = !{!14391, !14392}
!14391 = !DILocalVariable(name: "thread", arg: 1, scope: !14384, file: !2233, line: 1072, type: !2236)
!14392 = !DILocalVariable(name: "stats", arg: 2, scope: !14384, file: !2233, line: 1073, type: !14387)
!14393 = !DILocation(line: 0, scope: !14384)
!14394 = !DILocation(line: 1075, column: 14, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14384, file: !2233, line: 1075, column: 6)
!14396 = !DILocation(line: 1075, column: 23, scope: !14395)
!14397 = !DILocation(line: 1086, column: 1, scope: !14384)
!14398 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2233, file: !2233, line: 1088, type: !14399, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2337, retainedNodes: !14401)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{!103, !14387}
!14401 = !{!14402}
!14402 = !DILocalVariable(name: "stats", arg: 1, scope: !14398, file: !2233, line: 1088, type: !14387)
!14403 = !DILocation(line: 0, scope: !14398)
!14404 = !DILocation(line: 1094, column: 12, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14398, file: !2233, line: 1094, column: 6)
!14406 = !DILocation(line: 1120, column: 1, scope: !14398)
!14407 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14408, file: !14408, line: 20, type: !3217, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !474)
!14408 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14409 = !DILocation(line: 30, column: 2, scope: !14407)
!14410 = !DILocation(line: 31, column: 1, scope: !14407)
!14411 = distinct !DISubprogram(name: "idle", scope: !14408, file: !14408, line: 33, type: !3531, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14412)
!14412 = !{!14413, !14414, !14415}
!14413 = !DILocalVariable(name: "unused1", arg: 1, scope: !14411, file: !14408, line: 33, type: !102)
!14414 = !DILocalVariable(name: "unused2", arg: 2, scope: !14411, file: !14408, line: 33, type: !102)
!14415 = !DILocalVariable(name: "unused3", arg: 3, scope: !14411, file: !14408, line: 33, type: !102)
!14416 = !DILocation(line: 0, scope: !14411)
!14417 = !DILocation(line: 41, column: 2, scope: !14411)
!14418 = !DILocation(line: 55, column: 2, scope: !14419, inlinedAt: !14423)
!14419 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !14420)
!14420 = !{!14421, !14422}
!14421 = !DILocalVariable(name: "key", scope: !14419, file: !5761, line: 44, type: !32)
!14422 = !DILocalVariable(name: "tmp", scope: !14419, file: !5761, line: 53, type: !32)
!14423 = distinct !DILocation(line: 62, column: 10, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14411, file: !14408, line: 41, column: 15)
!14425 = !{i64 1648971}
!14426 = !DILocation(line: 0, scope: !14419, inlinedAt: !14423)
!14427 = !DILocation(line: 86, column: 3, scope: !14424)
!14428 = distinct !{!14428, !14417, !14429}
!14429 = !DILocation(line: 105, column: 2, scope: !14411)
!14430 = distinct !DISubprogram(name: "k_cpu_idle", scope: !313, file: !313, line: 5627, type: !3217, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3198, retainedNodes: !474)
!14431 = !DILocation(line: 5629, column: 2, scope: !14430)
!14432 = !DILocation(line: 5630, column: 1, scope: !14430)
!14433 = !DISubprogram(name: "arch_cpu_idle", scope: !3529, file: !3529, line: 167, type: !3217, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!14434 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2378, file: !2378, line: 41, type: !14435, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14448)
!14435 = !DISubroutineType(types: !14436)
!14436 = !{!103, !14437, !32, !32}
!14437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14438, size: 32)
!14438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !313, line: 2909, size: 128, elements: !14439)
!14439 = !{!14440, !14446, !14447}
!14440 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14438, file: !313, line: 2910, baseType: !14441, size: 64)
!14441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !14442)
!14442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !14443)
!14443 = !{!14444}
!14444 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14442, file: !317, line: 232, baseType: !14445, size: 64)
!14445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !2364)
!14446 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !14438, file: !313, line: 2911, baseType: !32, size: 32, offset: 64)
!14447 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !14438, file: !313, line: 2912, baseType: !32, size: 32, offset: 96)
!14448 = !{!14449, !14450, !14451}
!14449 = !DILocalVariable(name: "sem", arg: 1, scope: !14434, file: !2378, line: 41, type: !14437)
!14450 = !DILocalVariable(name: "initial_count", arg: 2, scope: !14434, file: !2378, line: 41, type: !32)
!14451 = !DILocalVariable(name: "limit", arg: 3, scope: !14434, file: !2378, line: 42, type: !32)
!14452 = !DILocation(line: 0, scope: !14434)
!14453 = !DILocation(line: 47, column: 2, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14434, file: !2378, line: 47, column: 2)
!14455 = !DILocation(line: 53, column: 7, scope: !14434)
!14456 = !DILocation(line: 53, column: 13, scope: !14434)
!14457 = !DILocation(line: 54, column: 7, scope: !14434)
!14458 = !DILocation(line: 54, column: 13, scope: !14434)
!14459 = !DILocation(line: 58, column: 21, scope: !14434)
!14460 = !DILocation(line: 58, column: 2, scope: !14434)
!14461 = !DILocation(line: 64, column: 2, scope: !14434)
!14462 = !DILocation(line: 65, column: 1, scope: !14434)
!14463 = distinct !DISubprogram(name: "z_waitq_init", scope: !14095, file: !14095, line: 47, type: !14464, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14467)
!14464 = !DISubroutineType(types: !14465)
!14465 = !{null, !14466}
!14466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14441, size: 32)
!14467 = !{!14468}
!14468 = !DILocalVariable(name: "w", arg: 1, scope: !14463, file: !14095, line: 47, type: !14466)
!14469 = !DILocation(line: 0, scope: !14463)
!14470 = !DILocation(line: 49, column: 21, scope: !14463)
!14471 = !DILocation(line: 49, column: 2, scope: !14463)
!14472 = !DILocation(line: 50, column: 1, scope: !14463)
!14473 = distinct !DISubprogram(name: "sys_dlist_init", scope: !322, file: !322, line: 197, type: !14474, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14477)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{null, !14476}
!14476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14445, size: 32)
!14477 = !{!14478}
!14478 = !DILocalVariable(name: "list", arg: 1, scope: !14473, file: !322, line: 197, type: !14476)
!14479 = !DILocation(line: 0, scope: !14473)
!14480 = !DILocation(line: 199, column: 8, scope: !14473)
!14481 = !DILocation(line: 199, column: 13, scope: !14473)
!14482 = !DILocation(line: 200, column: 8, scope: !14473)
!14483 = !DILocation(line: 200, column: 13, scope: !14473)
!14484 = !DILocation(line: 201, column: 1, scope: !14473)
!14485 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2378, file: !2378, line: 86, type: !14486, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14488)
!14486 = !DISubroutineType(types: !14487)
!14487 = !{null, !14437}
!14488 = !{!14489, !14490, !14495}
!14489 = !DILocalVariable(name: "sem", arg: 1, scope: !14485, file: !2378, line: 86, type: !14437)
!14490 = !DILocalVariable(name: "key", scope: !14485, file: !2378, line: 88, type: !14491)
!14491 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !14492)
!14492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !14493)
!14493 = !{!14494}
!14494 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14492, file: !473, line: 33, baseType: !103, size: 32)
!14495 = !DILocalVariable(name: "thread", scope: !14485, file: !2378, line: 89, type: !14496)
!14496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14497, size: 32)
!14497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !368, line: 245, size: 1024, elements: !14498)
!14498 = !{!14499, !14537, !14549, !14550, !14551, !14552, !14558, !14570}
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14497, file: !368, line: 247, baseType: !14500, size: 384)
!14500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !368, line: 57, size: 384, elements: !14501)
!14501 = !{!14502, !14512, !14513, !14514, !14515, !14524, !14525, !14526}
!14502 = !DIDerivedType(tag: DW_TAG_member, scope: !14500, file: !368, line: 60, baseType: !14503, size: 64)
!14503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14500, file: !368, line: 60, size: 64, elements: !14504)
!14504 = !{!14505, !14506}
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14503, file: !368, line: 61, baseType: !2363, size: 64)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14503, file: !368, line: 62, baseType: !14507, size: 64)
!14507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !393, line: 49, size: 64, elements: !14508)
!14508 = !{!14509}
!14509 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14507, file: !393, line: 50, baseType: !14510, size: 64)
!14510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14511, size: 64, elements: !398)
!14511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14507, size: 32)
!14512 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14500, file: !368, line: 68, baseType: !14466, size: 32, offset: 64)
!14513 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14500, file: !368, line: 71, baseType: !167, size: 8, offset: 96)
!14514 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14500, file: !368, line: 74, baseType: !167, size: 8, offset: 104)
!14515 = !DIDerivedType(tag: DW_TAG_member, scope: !14500, file: !368, line: 90, baseType: !14516, size: 16, offset: 112)
!14516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14500, file: !368, line: 90, size: 16, elements: !14517)
!14517 = !{!14518, !14523}
!14518 = !DIDerivedType(tag: DW_TAG_member, scope: !14516, file: !368, line: 91, baseType: !14519, size: 16)
!14519 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14516, file: !368, line: 91, size: 16, elements: !14520)
!14520 = !{!14521, !14522}
!14521 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14519, file: !368, line: 96, baseType: !416, size: 8)
!14522 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14519, file: !368, line: 97, baseType: !167, size: 8, offset: 8)
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14516, file: !368, line: 100, baseType: !341, size: 16)
!14524 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14500, file: !368, line: 107, baseType: !121, size: 32, offset: 128)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14500, file: !368, line: 127, baseType: !102, size: 32, offset: 160)
!14526 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14500, file: !368, line: 131, baseType: !14527, size: 192, offset: 192)
!14527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !317, line: 244, size: 192, elements: !14528)
!14528 = !{!14529, !14530, !14536}
!14529 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14527, file: !317, line: 245, baseType: !2363, size: 64)
!14530 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14527, file: !317, line: 246, baseType: !14531, size: 32, offset: 64)
!14531 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !317, line: 242, baseType: !14532)
!14532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14533, size: 32)
!14533 = !DISubroutineType(types: !14534)
!14534 = !{null, !14535}
!14535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14527, size: 32)
!14536 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14527, file: !317, line: 249, baseType: !433, size: 64, offset: 128)
!14537 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14497, file: !368, line: 250, baseType: !14538, size: 288, offset: 384)
!14538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !437, line: 25, size: 288, elements: !14539)
!14539 = !{!14540, !14541, !14542, !14543, !14544, !14545, !14546, !14547, !14548}
!14540 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14538, file: !437, line: 26, baseType: !121, size: 32)
!14541 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14538, file: !437, line: 27, baseType: !121, size: 32, offset: 32)
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14538, file: !437, line: 28, baseType: !121, size: 32, offset: 64)
!14543 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14538, file: !437, line: 29, baseType: !121, size: 32, offset: 96)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14538, file: !437, line: 30, baseType: !121, size: 32, offset: 128)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14538, file: !437, line: 31, baseType: !121, size: 32, offset: 160)
!14546 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14538, file: !437, line: 32, baseType: !121, size: 32, offset: 192)
!14547 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14538, file: !437, line: 33, baseType: !121, size: 32, offset: 224)
!14548 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14538, file: !437, line: 34, baseType: !121, size: 32, offset: 256)
!14549 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14497, file: !368, line: 253, baseType: !102, size: 32, offset: 672)
!14550 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14497, file: !368, line: 256, baseType: !14441, size: 64, offset: 704)
!14551 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14497, file: !368, line: 294, baseType: !103, size: 32, offset: 768)
!14552 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14497, file: !368, line: 300, baseType: !14553, size: 96, offset: 800)
!14553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !368, line: 149, size: 96, elements: !14554)
!14554 = !{!14555, !14556, !14557}
!14555 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14553, file: !368, line: 153, baseType: !22, size: 32)
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14553, file: !368, line: 162, baseType: !357, size: 32, offset: 32)
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14553, file: !368, line: 168, baseType: !357, size: 32, offset: 64)
!14558 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14497, file: !368, line: 325, baseType: !14559, size: 32, offset: 896)
!14559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14560, size: 32)
!14560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !14561)
!14561 = !{!14562, !14568, !14569}
!14562 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14560, file: !313, line: 5074, baseType: !14563, size: 96)
!14563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !14564)
!14564 = !{!14565, !14566, !14567}
!14565 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14563, file: !463, line: 57, baseType: !466, size: 32)
!14566 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14563, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14563, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!14568 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14560, file: !313, line: 5075, baseType: !14441, size: 64, offset: 96)
!14569 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14560, file: !313, line: 5076, baseType: !2379, offset: 160)
!14570 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14497, file: !368, line: 343, baseType: !14571, size: 64, offset: 928)
!14571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !437, line: 60, size: 64, elements: !14572)
!14572 = !{!14573, !14574}
!14573 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14571, file: !437, line: 63, baseType: !121, size: 32)
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14571, file: !437, line: 66, baseType: !121, size: 32, offset: 32)
!14575 = !DILocation(line: 0, scope: !14485)
!14576 = !DILocalVariable(name: "l", arg: 1, scope: !14577, file: !473, line: 136, type: !14580)
!14577 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !14578, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14581)
!14578 = !DISubroutineType(types: !14579)
!14579 = !{!14491, !14580}
!14580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!14581 = !{!14576, !14582}
!14582 = !DILocalVariable(name: "k", scope: !14577, file: !473, line: 139, type: !14491)
!14583 = !DILocation(line: 0, scope: !14577, inlinedAt: !14584)
!14584 = distinct !DILocation(line: 88, column: 25, scope: !14485)
!14585 = !DILocation(line: 55, column: 2, scope: !14586, inlinedAt: !14590)
!14586 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14587)
!14587 = !{!14588, !14589}
!14588 = !DILocalVariable(name: "key", scope: !14586, file: !5761, line: 44, type: !32)
!14589 = !DILocalVariable(name: "tmp", scope: !14586, file: !5761, line: 53, type: !32)
!14590 = distinct !DILocation(line: 145, column: 10, scope: !14577, inlinedAt: !14584)
!14591 = !{i64 1650533}
!14592 = !DILocation(line: 0, scope: !14586, inlinedAt: !14590)
!14593 = !DILocation(line: 93, column: 39, scope: !14485)
!14594 = !DILocation(line: 93, column: 11, scope: !14485)
!14595 = !DILocation(line: 95, column: 13, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14485, file: !2378, line: 95, column: 6)
!14597 = !DILocation(line: 95, column: 6, scope: !14485)
!14598 = !DILocalVariable(name: "thread", arg: 1, scope: !14599, file: !13789, line: 65, type: !14496)
!14599 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13789, file: !13789, line: 65, type: !14600, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14602)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{null, !14496, !32}
!14602 = !{!14598, !14603}
!14603 = !DILocalVariable(name: "value", arg: 2, scope: !14599, file: !13789, line: 65, type: !32)
!14604 = !DILocation(line: 0, scope: !14599, inlinedAt: !14605)
!14605 = distinct !DILocation(line: 96, column: 3, scope: !14606)
!14606 = distinct !DILexicalBlock(scope: !14596, file: !2378, line: 95, column: 22)
!14607 = !DILocation(line: 67, column: 15, scope: !14599, inlinedAt: !14605)
!14608 = !DILocation(line: 67, column: 33, scope: !14599, inlinedAt: !14605)
!14609 = !DILocation(line: 97, column: 3, scope: !14606)
!14610 = !DILocation(line: 98, column: 2, scope: !14606)
!14611 = !DILocation(line: 99, column: 23, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14596, file: !2378, line: 98, column: 9)
!14613 = !DILocation(line: 99, column: 37, scope: !14612)
!14614 = !DILocation(line: 99, column: 29, scope: !14612)
!14615 = !DILocation(line: 99, column: 17, scope: !14612)
!14616 = !DILocation(line: 99, column: 14, scope: !14612)
!14617 = !DILocation(line: 103, column: 2, scope: !14485)
!14618 = !DILocation(line: 106, column: 1, scope: !14485)
!14619 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2378, file: !2378, line: 117, type: !14620, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14626)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{!103, !14437, !14622}
!14622 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !14623)
!14623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !14624)
!14624 = !{!14625}
!14625 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14623, file: !1739, line: 66, baseType: !1738, size: 64)
!14626 = !{!14627, !14628, !14629, !14630, !14631}
!14627 = !DILocalVariable(name: "sem", arg: 1, scope: !14619, file: !2378, line: 117, type: !14437)
!14628 = !DILocalVariable(name: "timeout", arg: 2, scope: !14619, file: !2378, line: 117, type: !14622)
!14629 = !DILocalVariable(name: "ret", scope: !14619, file: !2378, line: 119, type: !103)
!14630 = !DILocalVariable(name: "key", scope: !14619, file: !2378, line: 124, type: !14491)
!14631 = !DILabel(scope: !14619, name: "out", file: !2378, line: 145)
!14632 = !DILocation(line: 0, scope: !14619)
!14633 = !DILocation(line: 0, scope: !14577, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 124, column: 25, scope: !14619)
!14635 = !DILocation(line: 55, column: 2, scope: !14586, inlinedAt: !14636)
!14636 = distinct !DILocation(line: 145, column: 10, scope: !14577, inlinedAt: !14634)
!14637 = !DILocation(line: 0, scope: !14586, inlinedAt: !14636)
!14638 = !DILocation(line: 128, column: 6, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14619, file: !2378, line: 128, column: 6)
!14640 = !DILocation(line: 128, column: 6, scope: !14619)
!14641 = !{!"branch_weights", i32 1, i32 2000}
!14642 = !DILocation(line: 129, column: 13, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14639, file: !2378, line: 128, column: 31)
!14644 = !DILocalVariable(name: "key", arg: 2, scope: !14645, file: !473, line: 190, type: !14491)
!14645 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !14646, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14648)
!14646 = !DISubroutineType(types: !14647)
!14647 = !{null, !14580, !14491}
!14648 = !{!14649, !14644}
!14649 = !DILocalVariable(name: "l", arg: 1, scope: !14645, file: !473, line: 189, type: !14580)
!14650 = !DILocation(line: 0, scope: !14645, inlinedAt: !14651)
!14651 = distinct !DILocation(line: 130, column: 3, scope: !14643)
!14652 = !DILocalVariable(name: "key", arg: 1, scope: !14653, file: !5761, line: 84, type: !32)
!14653 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14654)
!14654 = !{!14652}
!14655 = !DILocation(line: 0, scope: !14653, inlinedAt: !14656)
!14656 = distinct !DILocation(line: 215, column: 2, scope: !14645, inlinedAt: !14651)
!14657 = !DILocation(line: 95, column: 2, scope: !14653, inlinedAt: !14656)
!14658 = !{i64 1651350}
!14659 = !DILocation(line: 132, column: 3, scope: !14643)
!14660 = !DILocation(line: 135, column: 6, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14619, file: !2378, line: 135, column: 6)
!14662 = !DILocation(line: 135, column: 6, scope: !14619)
!14663 = !DILocation(line: 0, scope: !14645, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 136, column: 3, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14661, file: !2378, line: 135, column: 40)
!14666 = !DILocation(line: 0, scope: !14653, inlinedAt: !14667)
!14667 = distinct !DILocation(line: 215, column: 2, scope: !14645, inlinedAt: !14664)
!14668 = !DILocation(line: 95, column: 2, scope: !14653, inlinedAt: !14667)
!14669 = !DILocation(line: 138, column: 3, scope: !14665)
!14670 = !DILocation(line: 143, column: 38, scope: !14619)
!14671 = !DILocation(line: 143, column: 8, scope: !14619)
!14672 = !DILocation(line: 143, column: 2, scope: !14619)
!14673 = !DILocation(line: 145, column: 1, scope: !14619)
!14674 = !DILocation(line: 148, column: 2, scope: !14619)
!14675 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2378, file: !2378, line: 151, type: !14486, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2359, retainedNodes: !14676)
!14676 = !{!14677, !14678, !14679}
!14677 = !DILocalVariable(name: "sem", arg: 1, scope: !14675, file: !2378, line: 151, type: !14437)
!14678 = !DILocalVariable(name: "thread", scope: !14675, file: !2378, line: 153, type: !14496)
!14679 = !DILocalVariable(name: "key", scope: !14675, file: !2378, line: 154, type: !14491)
!14680 = !DILocation(line: 0, scope: !14675)
!14681 = !DILocation(line: 0, scope: !14577, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 154, column: 25, scope: !14675)
!14683 = !DILocation(line: 55, column: 2, scope: !14586, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 145, column: 10, scope: !14577, inlinedAt: !14682)
!14685 = !DILocation(line: 0, scope: !14586, inlinedAt: !14684)
!14686 = !DILocation(line: 157, column: 12, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14675, file: !2378, line: 156, column: 15)
!14688 = !DILocation(line: 158, column: 14, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14687, file: !2378, line: 158, column: 7)
!14690 = !DILocation(line: 158, column: 7, scope: !14687)
!14691 = !DILocation(line: 0, scope: !14599, inlinedAt: !14692)
!14692 = distinct !DILocation(line: 161, column: 3, scope: !14687)
!14693 = !DILocation(line: 67, column: 15, scope: !14599, inlinedAt: !14692)
!14694 = !DILocation(line: 67, column: 33, scope: !14599, inlinedAt: !14692)
!14695 = !DILocation(line: 162, column: 3, scope: !14687)
!14696 = distinct !{!14696, !14697, !14698}
!14697 = !DILocation(line: 156, column: 2, scope: !14675)
!14698 = !DILocation(line: 163, column: 2, scope: !14675)
!14699 = !DILocation(line: 164, column: 7, scope: !14675)
!14700 = !DILocation(line: 164, column: 13, scope: !14675)
!14701 = !DILocation(line: 170, column: 2, scope: !14675)
!14702 = !DILocation(line: 171, column: 1, scope: !14675)
!14703 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2490, file: !2490, line: 93, type: !14704, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14706)
!14704 = !DISubroutineType(types: !14705)
!14705 = !{!345, !2385, !2385}
!14706 = !{!14707, !14708, !14709, !14710}
!14707 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14703, file: !2490, line: 93, type: !2385)
!14708 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14703, file: !2490, line: 94, type: !2385)
!14709 = !DILocalVariable(name: "b1", scope: !14703, file: !2490, line: 97, type: !345)
!14710 = !DILocalVariable(name: "b2", scope: !14703, file: !2490, line: 98, type: !345)
!14711 = !DILocation(line: 0, scope: !14703)
!14712 = !DILocation(line: 97, column: 30, scope: !14703)
!14713 = !DILocation(line: 98, column: 30, scope: !14703)
!14714 = !DILocation(line: 100, column: 9, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14703, file: !2490, line: 100, column: 6)
!14716 = !DILocation(line: 100, column: 6, scope: !14703)
!14717 = !DILocation(line: 125, column: 1, scope: !14703)
!14718 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2490, file: !2490, line: 428, type: !14719, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14721)
!14719 = !DISubroutineType(types: !14720)
!14720 = !{null, !2385}
!14721 = !{!14722}
!14722 = !DILocalVariable(name: "curr", arg: 1, scope: !14718, file: !2490, line: 428, type: !2385)
!14723 = !DILocation(line: 0, scope: !14718)
!14724 = !DILocation(line: 434, column: 6, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14718, file: !2490, line: 434, column: 6)
!14726 = !DILocation(line: 434, column: 23, scope: !14725)
!14727 = !DILocation(line: 434, column: 6, scope: !14718)
!14728 = !DILocation(line: 435, column: 50, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14725, file: !2490, line: 434, column: 29)
!14730 = !DILocation(line: 435, column: 48, scope: !14729)
!14731 = !DILocation(line: 435, column: 29, scope: !14729)
!14732 = !DILocation(line: 436, column: 24, scope: !14729)
!14733 = !DILocation(line: 436, column: 3, scope: !14729)
!14734 = !DILocation(line: 437, column: 2, scope: !14729)
!14735 = !DILocation(line: 438, column: 1, scope: !14718)
!14736 = distinct !DISubprogram(name: "slice_time", scope: !2490, file: !2490, line: 407, type: !14737, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14739)
!14737 = !DISubroutineType(types: !14738)
!14738 = !{!103, !2385}
!14739 = !{!14740, !14741}
!14740 = !DILocalVariable(name: "curr", arg: 1, scope: !14736, file: !2490, line: 407, type: !2385)
!14741 = !DILocalVariable(name: "ret", scope: !14736, file: !2490, line: 409, type: !103)
!14742 = !DILocation(line: 0, scope: !14736)
!14743 = !DILocation(line: 409, column: 12, scope: !14736)
!14744 = !DILocation(line: 416, column: 2, scope: !14736)
!14745 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2490, file: !2490, line: 440, type: !14746, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14748)
!14746 = !DISubroutineType(types: !14747)
!14747 = !{null, !345, !103}
!14748 = !{!14749, !14750, !14751, !14757}
!14749 = !DILocalVariable(name: "slice", arg: 1, scope: !14745, file: !2490, line: 440, type: !345)
!14750 = !DILocalVariable(name: "prio", arg: 2, scope: !14745, file: !2490, line: 440, type: !103)
!14751 = !DILocalVariable(name: "__i", scope: !14752, file: !2490, line: 442, type: !14753)
!14752 = distinct !DILexicalBlock(scope: !14745, file: !2490, line: 442, column: 2)
!14753 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !14754)
!14754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !14755)
!14755 = !{!14756}
!14756 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14754, file: !473, line: 33, baseType: !103, size: 32)
!14757 = !DILocalVariable(name: "__key", scope: !14752, file: !2490, line: 442, type: !14753)
!14758 = !DILocation(line: 0, scope: !14745)
!14759 = !DILocation(line: 0, scope: !14752)
!14760 = !DILocalVariable(name: "l", arg: 1, scope: !14761, file: !473, line: 136, type: !14764)
!14761 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !14762, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14765)
!14762 = !DISubroutineType(types: !14763)
!14763 = !{!14753, !14764}
!14764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!14765 = !{!14760, !14766}
!14766 = !DILocalVariable(name: "k", scope: !14761, file: !473, line: 139, type: !14753)
!14767 = !DILocation(line: 0, scope: !14761, inlinedAt: !14768)
!14768 = distinct !DILocation(line: 442, column: 2, scope: !14752)
!14769 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !14774)
!14770 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14771)
!14771 = !{!14772, !14773}
!14772 = !DILocalVariable(name: "key", scope: !14770, file: !5761, line: 44, type: !32)
!14773 = !DILocalVariable(name: "tmp", scope: !14770, file: !5761, line: 53, type: !32)
!14774 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !14768)
!14775 = !{i64 1692942}
!14776 = !DILocation(line: 0, scope: !14770, inlinedAt: !14774)
!14777 = !DILocation(line: 443, column: 29, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14779, file: !2490, line: 442, column: 26)
!14779 = distinct !DILexicalBlock(scope: !14752, file: !2490, line: 442, column: 2)
!14780 = !DILocation(line: 444, column: 17, scope: !14778)
!14781 = !DILocation(line: 445, column: 51, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14778, file: !2490, line: 445, column: 7)
!14783 = !DILocation(line: 445, column: 7, scope: !14778)
!14784 = !DILocation(line: 0, scope: !14778)
!14785 = !DILocation(line: 451, column: 18, scope: !14778)
!14786 = !DILocation(line: 452, column: 3, scope: !14778)
!14787 = !DILocalVariable(name: "key", arg: 2, scope: !14788, file: !473, line: 190, type: !14753)
!14788 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !14789, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14791)
!14789 = !DISubroutineType(types: !14790)
!14790 = !{null, !14764, !14753}
!14791 = !{!14792, !14787}
!14792 = !DILocalVariable(name: "l", arg: 1, scope: !14788, file: !473, line: 189, type: !14764)
!14793 = !DILocation(line: 0, scope: !14788, inlinedAt: !14794)
!14794 = distinct !DILocation(line: 442, column: 2, scope: !14779)
!14795 = !DILocalVariable(name: "key", arg: 1, scope: !14796, file: !5761, line: 84, type: !32)
!14796 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14797)
!14797 = !{!14795}
!14798 = !DILocation(line: 0, scope: !14796, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !14794)
!14800 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !14799)
!14801 = !{i64 1693759}
!14802 = !DILocation(line: 454, column: 1, scope: !14745)
!14803 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !5978, file: !5978, line: 389, type: !7767, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14804)
!14804 = !{!14805}
!14805 = !DILocalVariable(name: "t", arg: 1, scope: !14803, file: !5978, line: 389, type: !121)
!14806 = !DILocation(line: 0, scope: !14803)
!14807 = !DILocalVariable(name: "t", arg: 1, scope: !14808, file: !5978, line: 102, type: !2341)
!14808 = distinct !DISubprogram(name: "z_tmcvt", scope: !5978, file: !5978, line: 102, type: !5986, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14809)
!14809 = !{!14807, !14810, !14811, !14812, !14813, !14814, !14815, !14816, !14817, !14818, !14819}
!14810 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14808, file: !5978, line: 102, type: !121)
!14811 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14808, file: !5978, line: 103, type: !121)
!14812 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14808, file: !5978, line: 103, type: !170)
!14813 = !DILocalVariable(name: "result32", arg: 5, scope: !14808, file: !5978, line: 104, type: !170)
!14814 = !DILocalVariable(name: "round_up", arg: 6, scope: !14808, file: !5978, line: 104, type: !170)
!14815 = !DILocalVariable(name: "round_off", arg: 7, scope: !14808, file: !5978, line: 105, type: !170)
!14816 = !DILocalVariable(name: "mul_ratio", scope: !14808, file: !5978, line: 107, type: !170)
!14817 = !DILocalVariable(name: "div_ratio", scope: !14808, file: !5978, line: 109, type: !170)
!14818 = !DILocalVariable(name: "off", scope: !14808, file: !5978, line: 116, type: !2341)
!14819 = !DILocalVariable(name: "rdivisor", scope: !14820, file: !5978, line: 119, type: !121)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !5978, line: 118, column: 18)
!14821 = distinct !DILexicalBlock(scope: !14808, file: !5978, line: 118, column: 6)
!14822 = !DILocation(line: 0, scope: !14808, inlinedAt: !14823)
!14823 = distinct !DILocation(line: 392, column: 9, scope: !14803)
!14824 = !DILocation(line: 143, column: 25, scope: !14825, inlinedAt: !14823)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !5978, line: 142, column: 17)
!14826 = distinct !DILexicalBlock(scope: !14827, file: !5978, line: 142, column: 7)
!14827 = distinct !DILexicalBlock(scope: !14828, file: !5978, line: 141, column: 24)
!14828 = distinct !DILexicalBlock(scope: !14829, file: !5978, line: 141, column: 13)
!14829 = distinct !DILexicalBlock(scope: !14808, file: !5978, line: 134, column: 6)
!14830 = !DILocation(line: 392, column: 2, scope: !14803)
!14831 = distinct !DISubprogram(name: "z_time_slice", scope: !2490, file: !2490, line: 502, type: !8510, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14832)
!14832 = !{!14833, !14834}
!14833 = !DILocalVariable(name: "ticks", arg: 1, scope: !14831, file: !2490, line: 502, type: !103)
!14834 = !DILocalVariable(name: "key", scope: !14831, file: !2490, line: 511, type: !14753)
!14835 = !DILocation(line: 0, scope: !14831)
!14836 = !DILocation(line: 0, scope: !14761, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 511, column: 25, scope: !14831)
!14838 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !14837)
!14840 = !DILocation(line: 0, scope: !14770, inlinedAt: !14839)
!14841 = !DILocation(line: 514, column: 6, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14831, file: !2490, line: 514, column: 6)
!14843 = !DILocation(line: 514, column: 25, scope: !14842)
!14844 = !DILocation(line: 514, column: 22, scope: !14842)
!14845 = !DILocation(line: 514, column: 6, scope: !14831)
!14846 = !DILocation(line: 515, column: 3, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14842, file: !2490, line: 514, column: 35)
!14848 = !DILocation(line: 0, scope: !14788, inlinedAt: !14849)
!14849 = distinct !DILocation(line: 516, column: 3, scope: !14847)
!14850 = !DILocation(line: 0, scope: !14796, inlinedAt: !14851)
!14851 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !14849)
!14852 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !14851)
!14853 = !DILocation(line: 517, column: 3, scope: !14847)
!14854 = !DILocation(line: 519, column: 18, scope: !14831)
!14855 = !DILocation(line: 522, column: 6, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14831, file: !2490, line: 522, column: 6)
!14857 = !DILocation(line: 522, column: 27, scope: !14856)
!14858 = !DILocation(line: 522, column: 30, scope: !14856)
!14859 = !DILocation(line: 522, column: 6, scope: !14831)
!14860 = !DILocation(line: 523, column: 30, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !2490, line: 523, column: 7)
!14862 = distinct !DILexicalBlock(scope: !14856, file: !2490, line: 522, column: 51)
!14863 = !DILocation(line: 523, column: 13, scope: !14861)
!14864 = !DILocation(line: 523, column: 7, scope: !14862)
!14865 = !DILocation(line: 530, column: 10, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14861, file: !2490, line: 523, column: 43)
!14867 = !DILocation(line: 531, column: 3, scope: !14866)
!14868 = !DILocation(line: 532, column: 30, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14861, file: !2490, line: 531, column: 10)
!14870 = !DILocation(line: 535, column: 29, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14856, file: !2490, line: 534, column: 9)
!14872 = !DILocation(line: 0, scope: !14788, inlinedAt: !14873)
!14873 = distinct !DILocation(line: 537, column: 2, scope: !14831)
!14874 = !DILocation(line: 0, scope: !14796, inlinedAt: !14875)
!14875 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !14873)
!14876 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !14875)
!14877 = !DILocation(line: 538, column: 1, scope: !14831)
!14878 = distinct !DISubprogram(name: "sliceable", scope: !2490, file: !2490, line: 468, type: !14879, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14881)
!14879 = !DISubroutineType(types: !14880)
!14880 = !{!170, !2385}
!14881 = !{!14882, !14883}
!14882 = !DILocalVariable(name: "thread", arg: 1, scope: !14878, file: !2490, line: 468, type: !2385)
!14883 = !DILocalVariable(name: "ret", scope: !14878, file: !2490, line: 470, type: !170)
!14884 = !DILocation(line: 0, scope: !14878)
!14885 = !DILocation(line: 470, column: 13, scope: !14878)
!14886 = !DILocation(line: 471, column: 3, scope: !14878)
!14887 = !DILocation(line: 471, column: 7, scope: !14878)
!14888 = !DILocation(line: 472, column: 3, scope: !14878)
!14889 = !DILocation(line: 472, column: 37, scope: !14878)
!14890 = !DILocation(line: 472, column: 24, scope: !14878)
!14891 = !DILocation(line: 472, column: 43, scope: !14878)
!14892 = !DILocation(line: 472, column: 7, scope: !14878)
!14893 = !DILocation(line: 473, column: 3, scope: !14878)
!14894 = !DILocation(line: 473, column: 7, scope: !14878)
!14895 = !DILocation(line: 473, column: 6, scope: !14878)
!14896 = !DILocation(line: 479, column: 2, scope: !14878)
!14897 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2490, file: !2490, line: 482, type: !14898, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14900)
!14898 = !DISubroutineType(types: !14899)
!14899 = !{!14753, !14753}
!14900 = !{!14901, !14902}
!14901 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14897, file: !2490, line: 482, type: !14753)
!14902 = !DILocalVariable(name: "curr", scope: !14897, file: !2490, line: 484, type: !2385)
!14903 = !DILocation(line: 0, scope: !14897)
!14904 = !DILocation(line: 484, column: 26, scope: !14897)
!14905 = !DILocation(line: 493, column: 7, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14897, file: !2490, line: 493, column: 6)
!14907 = !DILocation(line: 493, column: 6, scope: !14897)
!14908 = !DILocation(line: 494, column: 3, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14906, file: !2490, line: 493, column: 49)
!14910 = !DILocation(line: 495, column: 2, scope: !14909)
!14911 = !DILocation(line: 496, column: 2, scope: !14897)
!14912 = !DILocation(line: 499, column: 1, scope: !14897)
!14913 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13769, file: !13769, line: 106, type: !14879, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14914)
!14914 = !{!14915, !14916}
!14915 = !DILocalVariable(name: "thread", arg: 1, scope: !14913, file: !13769, line: 106, type: !2385)
!14916 = !DILocalVariable(name: "state", scope: !14913, file: !13769, line: 108, type: !167)
!14917 = !DILocation(line: 0, scope: !14913)
!14918 = !DILocation(line: 108, column: 31, scope: !14913)
!14919 = !DILocation(line: 110, column: 16, scope: !14913)
!14920 = !DILocation(line: 111, column: 41, scope: !14913)
!14921 = !DILocation(line: 110, column: 2, scope: !14913)
!14922 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2490, file: !2490, line: 393, type: !14719, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14923)
!14923 = !{!14924}
!14924 = !DILocalVariable(name: "thread", arg: 1, scope: !14922, file: !2490, line: 393, type: !2385)
!14925 = !DILocation(line: 0, scope: !14922)
!14926 = !DILocation(line: 395, column: 6, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14922, file: !2490, line: 395, column: 6)
!14928 = !DILocation(line: 395, column: 6, scope: !14922)
!14929 = !DILocalVariable(name: "thread", arg: 1, scope: !14930, file: !2490, line: 264, type: !2385)
!14930 = distinct !DISubprogram(name: "dequeue_thread", scope: !2490, file: !2490, line: 264, type: !14719, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14931)
!14931 = !{!14929}
!14932 = !DILocation(line: 0, scope: !14930, inlinedAt: !14933)
!14933 = distinct !DILocation(line: 396, column: 3, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14927, file: !2490, line: 395, column: 34)
!14935 = !DILocation(line: 266, column: 15, scope: !14930, inlinedAt: !14933)
!14936 = !DILocation(line: 266, column: 28, scope: !14930, inlinedAt: !14933)
!14937 = !DILocalVariable(name: "thread", arg: 1, scope: !14938, file: !2490, line: 232, type: !2385)
!14938 = distinct !DISubprogram(name: "runq_remove", scope: !2490, file: !2490, line: 232, type: !14719, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14939)
!14939 = !{!14937}
!14940 = !DILocation(line: 0, scope: !14938, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 268, column: 3, scope: !14942, inlinedAt: !14933)
!14942 = distinct !DILexicalBlock(scope: !14943, file: !2490, line: 267, column: 35)
!14943 = distinct !DILexicalBlock(scope: !14930, file: !2490, line: 267, column: 6)
!14944 = !DILocation(line: 234, column: 2, scope: !14938, inlinedAt: !14941)
!14945 = !DILocation(line: 397, column: 2, scope: !14934)
!14946 = !DILocalVariable(name: "thread", arg: 1, scope: !14947, file: !2490, line: 250, type: !2385)
!14947 = distinct !DISubprogram(name: "queue_thread", scope: !2490, file: !2490, line: 250, type: !14719, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14948)
!14948 = !{!14946}
!14949 = !DILocation(line: 0, scope: !14947, inlinedAt: !14950)
!14950 = distinct !DILocation(line: 398, column: 2, scope: !14922)
!14951 = !DILocation(line: 252, column: 15, scope: !14947, inlinedAt: !14950)
!14952 = !DILocation(line: 252, column: 28, scope: !14947, inlinedAt: !14950)
!14953 = !DILocalVariable(name: "thread", arg: 1, scope: !14954, file: !2490, line: 227, type: !2385)
!14954 = distinct !DISubprogram(name: "runq_add", scope: !2490, file: !2490, line: 227, type: !14719, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14955)
!14955 = !{!14953}
!14956 = !DILocation(line: 0, scope: !14954, inlinedAt: !14957)
!14957 = distinct !DILocation(line: 254, column: 3, scope: !14958, inlinedAt: !14950)
!14958 = distinct !DILexicalBlock(scope: !14959, file: !2490, line: 253, column: 35)
!14959 = distinct !DILexicalBlock(scope: !14947, file: !2490, line: 253, column: 6)
!14960 = !DILocalVariable(name: "pq", arg: 1, scope: !14961, file: !2490, line: 181, type: !14964)
!14961 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2490, file: !2490, line: 181, type: !14962, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14965)
!14962 = !DISubroutineType(types: !14963)
!14963 = !{null, !14964, !2385}
!14964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!14965 = !{!14960, !14966, !14967}
!14966 = !DILocalVariable(name: "thread", arg: 2, scope: !14961, file: !2490, line: 182, type: !2385)
!14967 = !DILocalVariable(name: "t", scope: !14961, file: !2490, line: 184, type: !2385)
!14968 = !DILocation(line: 0, scope: !14961, inlinedAt: !14969)
!14969 = distinct !DILocation(line: 229, column: 2, scope: !14954, inlinedAt: !14957)
!14970 = !DILocation(line: 188, column: 2, scope: !14971, inlinedAt: !14969)
!14971 = distinct !DILexicalBlock(scope: !14961, file: !2490, line: 188, column: 2)
!14972 = !DILocation(line: 188, column: 2, scope: !14973, inlinedAt: !14969)
!14973 = distinct !DILexicalBlock(scope: !14971, file: !2490, line: 188, column: 2)
!14974 = !DILocation(line: 0, scope: !14971, inlinedAt: !14969)
!14975 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !14969)
!14976 = distinct !DILexicalBlock(scope: !14977, file: !2490, line: 189, column: 7)
!14977 = distinct !DILexicalBlock(scope: !14973, file: !2490, line: 188, column: 56)
!14978 = !DILocation(line: 189, column: 35, scope: !14976, inlinedAt: !14969)
!14979 = !DILocation(line: 189, column: 7, scope: !14977, inlinedAt: !14969)
!14980 = !DILocation(line: 191, column: 21, scope: !14981, inlinedAt: !14969)
!14981 = distinct !DILexicalBlock(scope: !14976, file: !2490, line: 189, column: 40)
!14982 = !DILocation(line: 190, column: 4, scope: !14981, inlinedAt: !14969)
!14983 = !DILocation(line: 192, column: 4, scope: !14981, inlinedAt: !14969)
!14984 = distinct !{!14984, !14970, !14985}
!14985 = !DILocation(line: 194, column: 2, scope: !14971, inlinedAt: !14969)
!14986 = !DILocation(line: 196, column: 37, scope: !14961, inlinedAt: !14969)
!14987 = !DILocation(line: 196, column: 2, scope: !14961, inlinedAt: !14969)
!14988 = !DILocation(line: 197, column: 1, scope: !14961, inlinedAt: !14969)
!14989 = !DILocation(line: 399, column: 25, scope: !14922)
!14990 = !DILocation(line: 399, column: 22, scope: !14922)
!14991 = !DILocation(line: 399, column: 2, scope: !14922)
!14992 = !DILocation(line: 400, column: 1, scope: !14922)
!14993 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13769, file: !13769, line: 136, type: !14879, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !14994)
!14994 = !{!14995}
!14995 = !DILocalVariable(name: "thread", arg: 1, scope: !14993, file: !13769, line: 136, type: !2385)
!14996 = !DILocation(line: 0, scope: !14993)
!14997 = !DILocation(line: 138, column: 9, scope: !14993)
!14998 = !DILocation(line: 138, column: 2, scope: !14993)
!14999 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2490, file: !2490, line: 1137, type: !14962, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15000)
!15000 = !{!15001, !15002}
!15001 = !DILocalVariable(name: "pq", arg: 1, scope: !14999, file: !2490, line: 1137, type: !14964)
!15002 = !DILocalVariable(name: "thread", arg: 2, scope: !14999, file: !2490, line: 1137, type: !2385)
!15003 = !DILocation(line: 0, scope: !14999)
!15004 = !DILocation(line: 1141, column: 33, scope: !14999)
!15005 = !DILocation(line: 1141, column: 2, scope: !14999)
!15006 = !DILocation(line: 1142, column: 1, scope: !14999)
!15007 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !322, file: !322, line: 294, type: !15008, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15010)
!15008 = !DISubroutineType(types: !15009)
!15009 = !{!2486, !14964}
!15010 = !{!15011}
!15011 = !DILocalVariable(name: "list", arg: 1, scope: !15007, file: !322, line: 294, type: !14964)
!15012 = !DILocation(line: 0, scope: !15007)
!15013 = !DILocation(line: 296, column: 9, scope: !15007)
!15014 = !DILocation(line: 296, column: 49, scope: !15007)
!15015 = !DILocation(line: 296, column: 2, scope: !15007)
!15016 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !322, file: !322, line: 443, type: !15017, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15019)
!15017 = !DISubroutineType(types: !15018)
!15018 = !{null, !2486, !2486}
!15019 = !{!15020, !15021, !15022}
!15020 = !DILocalVariable(name: "successor", arg: 1, scope: !15016, file: !322, line: 443, type: !2486)
!15021 = !DILocalVariable(name: "node", arg: 2, scope: !15016, file: !322, line: 443, type: !2486)
!15022 = !DILocalVariable(name: "prev", scope: !15016, file: !322, line: 445, type: !15023)
!15023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2486)
!15024 = !DILocation(line: 0, scope: !15016)
!15025 = !DILocation(line: 445, column: 39, scope: !15016)
!15026 = !DILocation(line: 447, column: 8, scope: !15016)
!15027 = !DILocation(line: 447, column: 13, scope: !15016)
!15028 = !DILocation(line: 448, column: 8, scope: !15016)
!15029 = !DILocation(line: 448, column: 13, scope: !15016)
!15030 = !DILocation(line: 449, column: 8, scope: !15016)
!15031 = !DILocation(line: 449, column: 13, scope: !15016)
!15032 = !DILocation(line: 450, column: 18, scope: !15016)
!15033 = !DILocation(line: 451, column: 1, scope: !15016)
!15034 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !322, file: !322, line: 341, type: !15035, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15037)
!15035 = !DISubroutineType(types: !15036)
!15036 = !{!2486, !14964, !2486}
!15037 = !{!15038, !15039}
!15038 = !DILocalVariable(name: "list", arg: 1, scope: !15034, file: !322, line: 341, type: !14964)
!15039 = !DILocalVariable(name: "node", arg: 2, scope: !15034, file: !322, line: 342, type: !2486)
!15040 = !DILocation(line: 0, scope: !15034)
!15041 = !DILocation(line: 344, column: 15, scope: !15034)
!15042 = !DILocation(line: 344, column: 9, scope: !15034)
!15043 = !DILocation(line: 344, column: 26, scope: !15034)
!15044 = !DILocation(line: 344, column: 2, scope: !15034)
!15045 = distinct !DISubprogram(name: "sys_dlist_append", scope: !322, file: !322, line: 404, type: !15046, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15048)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{null, !14964, !2486}
!15048 = !{!15049, !15050, !15051}
!15049 = !DILocalVariable(name: "list", arg: 1, scope: !15045, file: !322, line: 404, type: !14964)
!15050 = !DILocalVariable(name: "node", arg: 2, scope: !15045, file: !322, line: 404, type: !2486)
!15051 = !DILocalVariable(name: "tail", scope: !15045, file: !322, line: 406, type: !15023)
!15052 = !DILocation(line: 0, scope: !15045)
!15053 = !DILocation(line: 406, column: 34, scope: !15045)
!15054 = !DILocation(line: 408, column: 8, scope: !15045)
!15055 = !DILocation(line: 408, column: 13, scope: !15045)
!15056 = !DILocation(line: 409, column: 8, scope: !15045)
!15057 = !DILocation(line: 409, column: 13, scope: !15045)
!15058 = !DILocation(line: 411, column: 8, scope: !15045)
!15059 = !DILocation(line: 411, column: 13, scope: !15045)
!15060 = !DILocation(line: 412, column: 13, scope: !15045)
!15061 = !DILocation(line: 413, column: 1, scope: !15045)
!15062 = distinct !DISubprogram(name: "update_cache", scope: !2490, file: !2490, line: 559, type: !8510, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15063)
!15063 = !{!15064, !15065}
!15064 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15062, file: !2490, line: 559, type: !103)
!15065 = !DILocalVariable(name: "thread", scope: !15062, file: !2490, line: 562, type: !2385)
!15066 = !DILocation(line: 0, scope: !15062)
!15067 = !DILocation(line: 239, column: 9, scope: !15068, inlinedAt: !15071)
!15068 = distinct !DISubprogram(name: "runq_best", scope: !2490, file: !2490, line: 237, type: !15069, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!15069 = !DISubroutineType(types: !15070)
!15070 = !{!2385}
!15071 = distinct !DILocation(line: 314, column: 28, scope: !15072, inlinedAt: !15075)
!15072 = distinct !DISubprogram(name: "next_up", scope: !2490, file: !2490, line: 312, type: !15069, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15073)
!15073 = !{!15074}
!15074 = !DILocalVariable(name: "thread", scope: !15072, file: !2490, line: 314, type: !2385)
!15075 = distinct !DILocation(line: 562, column: 28, scope: !15062)
!15076 = !DILocation(line: 0, scope: !15072, inlinedAt: !15075)
!15077 = !DILocation(line: 340, column: 17, scope: !15072, inlinedAt: !15075)
!15078 = !DILocation(line: 340, column: 9, scope: !15072, inlinedAt: !15075)
!15079 = !DILocalVariable(name: "thread", arg: 1, scope: !15080, file: !2490, line: 127, type: !2385)
!15080 = distinct !DISubprogram(name: "should_preempt", scope: !2490, file: !2490, line: 127, type: !15081, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15083)
!15081 = !DISubroutineType(types: !15082)
!15082 = !{!170, !2385, !103}
!15083 = !{!15079, !15084}
!15084 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15080, file: !2490, line: 128, type: !103)
!15085 = !DILocation(line: 0, scope: !15080, inlinedAt: !15086)
!15086 = distinct !DILocation(line: 564, column: 6, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15062, file: !2490, line: 564, column: 6)
!15088 = !DILocation(line: 133, column: 17, scope: !15089, inlinedAt: !15086)
!15089 = distinct !DILexicalBlock(scope: !15080, file: !2490, line: 133, column: 6)
!15090 = !DILocation(line: 0, scope: !15087)
!15091 = !DILocation(line: 133, column: 6, scope: !15080, inlinedAt: !15086)
!15092 = !DILocation(line: 140, column: 6, scope: !15093, inlinedAt: !15086)
!15093 = distinct !DILexicalBlock(scope: !15080, file: !2490, line: 140, column: 6)
!15094 = !DILocation(line: 140, column: 6, scope: !15080, inlinedAt: !15086)
!15095 = !DILocation(line: 150, column: 9, scope: !15096, inlinedAt: !15086)
!15096 = distinct !DILexicalBlock(scope: !15080, file: !2490, line: 149, column: 6)
!15097 = !DILocation(line: 149, column: 6, scope: !15080, inlinedAt: !15086)
!15098 = !DILocation(line: 157, column: 6, scope: !15099, inlinedAt: !15086)
!15099 = distinct !DILexicalBlock(scope: !15080, file: !2490, line: 157, column: 6)
!15100 = !DILocation(line: 564, column: 6, scope: !15062)
!15101 = !DILocation(line: 566, column: 14, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15103, file: !2490, line: 566, column: 7)
!15103 = distinct !DILexicalBlock(scope: !15087, file: !2490, line: 564, column: 42)
!15104 = !DILocation(line: 566, column: 7, scope: !15103)
!15105 = !DILocation(line: 567, column: 4, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15102, file: !2490, line: 566, column: 27)
!15107 = !DILocation(line: 568, column: 3, scope: !15106)
!15108 = !DILocation(line: 585, column: 1, scope: !15062)
!15109 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2490, file: !2490, line: 1144, type: !15110, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15112)
!15110 = !DISubroutineType(types: !15111)
!15111 = !{!2385, !14964}
!15112 = !{!15113, !15114, !15115}
!15113 = !DILocalVariable(name: "pq", arg: 1, scope: !15109, file: !2490, line: 1144, type: !14964)
!15114 = !DILocalVariable(name: "thread", scope: !15109, file: !2490, line: 1146, type: !2385)
!15115 = !DILocalVariable(name: "n", scope: !15109, file: !2490, line: 1147, type: !2486)
!15116 = !DILocation(line: 0, scope: !15109)
!15117 = !DILocation(line: 1147, column: 19, scope: !15109)
!15118 = !DILocation(line: 1152, column: 2, scope: !15109)
!15119 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13769, file: !13769, line: 115, type: !14879, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15120)
!15120 = !{!15121}
!15121 = !DILocalVariable(name: "thread", arg: 1, scope: !15119, file: !13769, line: 115, type: !2385)
!15122 = !DILocation(line: 0, scope: !15119)
!15123 = !DILocation(line: 117, column: 46, scope: !15119)
!15124 = !DILocation(line: 117, column: 10, scope: !15119)
!15125 = !DILocation(line: 117, column: 9, scope: !15119)
!15126 = !DILocation(line: 117, column: 2, scope: !15119)
!15127 = distinct !DISubprogram(name: "is_preempt", scope: !2490, file: !2490, line: 62, type: !14737, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15128)
!15128 = !{!15129}
!15129 = !DILocalVariable(name: "thread", arg: 1, scope: !15127, file: !2490, line: 62, type: !2385)
!15130 = !DILocation(line: 0, scope: !15127)
!15131 = !DILocation(line: 65, column: 22, scope: !15127)
!15132 = !DILocation(line: 65, column: 30, scope: !15127)
!15133 = !DILocation(line: 65, column: 2, scope: !15127)
!15134 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14163, file: !14163, line: 35, type: !15135, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15139)
!15135 = !DISubroutineType(types: !15136)
!15136 = !{!170, !15137}
!15137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15138, size: 32)
!15138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2436)
!15139 = !{!15140}
!15140 = !DILocalVariable(name: "to", arg: 1, scope: !15134, file: !14163, line: 35, type: !15137)
!15141 = !DILocation(line: 0, scope: !15134)
!15142 = !DILocation(line: 37, column: 35, scope: !15134)
!15143 = !DILocation(line: 37, column: 10, scope: !15134)
!15144 = !DILocation(line: 37, column: 9, scope: !15134)
!15145 = !DILocation(line: 37, column: 2, scope: !15134)
!15146 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !322, file: !322, line: 225, type: !15147, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15151)
!15147 = !DISubroutineType(types: !15148)
!15148 = !{!170, !15149}
!15149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15150, size: 32)
!15150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2395)
!15151 = !{!15152}
!15152 = !DILocalVariable(name: "node", arg: 1, scope: !15146, file: !322, line: 225, type: !15149)
!15153 = !DILocation(line: 0, scope: !15146)
!15154 = !DILocation(line: 227, column: 15, scope: !15146)
!15155 = !DILocation(line: 227, column: 20, scope: !15146)
!15156 = !DILocation(line: 227, column: 2, scope: !15146)
!15157 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !322, file: !322, line: 325, type: !15035, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15158)
!15158 = !{!15159, !15160}
!15159 = !DILocalVariable(name: "list", arg: 1, scope: !15157, file: !322, line: 325, type: !14964)
!15160 = !DILocalVariable(name: "node", arg: 2, scope: !15157, file: !322, line: 326, type: !2486)
!15161 = !DILocation(line: 0, scope: !15157)
!15162 = !DILocation(line: 328, column: 24, scope: !15157)
!15163 = !DILocation(line: 328, column: 15, scope: !15157)
!15164 = !DILocation(line: 328, column: 9, scope: !15157)
!15165 = !DILocation(line: 328, column: 45, scope: !15157)
!15166 = !DILocation(line: 328, column: 2, scope: !15157)
!15167 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !322, file: !322, line: 266, type: !15168, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15170)
!15168 = !DISubroutineType(types: !15169)
!15169 = !{!170, !14964}
!15170 = !{!15171}
!15171 = !DILocalVariable(name: "list", arg: 1, scope: !15167, file: !322, line: 266, type: !14964)
!15172 = !DILocation(line: 0, scope: !15167)
!15173 = !DILocation(line: 268, column: 15, scope: !15167)
!15174 = !DILocation(line: 268, column: 20, scope: !15167)
!15175 = !DILocation(line: 268, column: 2, scope: !15167)
!15176 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !322, file: !322, line: 496, type: !15177, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15179)
!15177 = !DISubroutineType(types: !15178)
!15178 = !{null, !2486}
!15179 = !{!15180, !15181, !15182}
!15180 = !DILocalVariable(name: "node", arg: 1, scope: !15176, file: !322, line: 496, type: !2486)
!15181 = !DILocalVariable(name: "prev", scope: !15176, file: !322, line: 498, type: !15023)
!15182 = !DILocalVariable(name: "next", scope: !15176, file: !322, line: 499, type: !15023)
!15183 = !DILocation(line: 0, scope: !15176)
!15184 = !DILocation(line: 498, column: 34, scope: !15176)
!15185 = !DILocation(line: 499, column: 34, scope: !15176)
!15186 = !DILocation(line: 501, column: 8, scope: !15176)
!15187 = !DILocation(line: 501, column: 13, scope: !15176)
!15188 = !DILocation(line: 502, column: 8, scope: !15176)
!15189 = !DILocation(line: 502, column: 13, scope: !15176)
!15190 = !DILocation(line: 503, column: 2, scope: !15176)
!15191 = !DILocation(line: 504, column: 1, scope: !15176)
!15192 = distinct !DISubprogram(name: "sys_dnode_init", scope: !322, file: !322, line: 211, type: !15177, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15193)
!15193 = !{!15194}
!15194 = !DILocalVariable(name: "node", arg: 1, scope: !15192, file: !322, line: 211, type: !2486)
!15195 = !DILocation(line: 0, scope: !15192)
!15196 = !DILocation(line: 213, column: 8, scope: !15192)
!15197 = !DILocation(line: 213, column: 13, scope: !15192)
!15198 = !DILocation(line: 214, column: 8, scope: !15192)
!15199 = !DILocation(line: 214, column: 13, scope: !15192)
!15200 = !DILocation(line: 215, column: 1, scope: !15192)
!15201 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13769, file: !13769, line: 131, type: !15202, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15204)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{!170, !2385, !121}
!15204 = !{!15205, !15206}
!15205 = !DILocalVariable(name: "thread", arg: 1, scope: !15201, file: !13769, line: 131, type: !2385)
!15206 = !DILocalVariable(name: "state", arg: 2, scope: !15201, file: !13769, line: 131, type: !121)
!15207 = !DILocation(line: 0, scope: !15201)
!15208 = !DILocation(line: 133, column: 23, scope: !15201)
!15209 = !DILocation(line: 133, column: 45, scope: !15201)
!15210 = !DILocation(line: 133, column: 2, scope: !15201)
!15211 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13769, file: !13769, line: 211, type: !15212, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15214)
!15212 = !DISubroutineType(types: !15213)
!15213 = !{!170, !103, !103}
!15214 = !{!15215, !15216}
!15215 = !DILocalVariable(name: "prio", arg: 1, scope: !15211, file: !13769, line: 211, type: !103)
!15216 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15211, file: !13769, line: 211, type: !103)
!15217 = !DILocation(line: 0, scope: !15211)
!15218 = !DILocation(line: 213, column: 9, scope: !15211)
!15219 = !DILocation(line: 213, column: 2, scope: !15211)
!15220 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13769, file: !13769, line: 83, type: !14879, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15221)
!15221 = !{!15222}
!15222 = !DILocalVariable(name: "thread", arg: 1, scope: !15220, file: !13769, line: 83, type: !2385)
!15223 = !DILocation(line: 0, scope: !15220)
!15224 = !DILocation(line: 89, column: 16, scope: !15220)
!15225 = !DILocation(line: 89, column: 2, scope: !15220)
!15226 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13769, file: !13769, line: 206, type: !15212, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15227)
!15227 = !{!15228, !15229}
!15228 = !DILocalVariable(name: "prio1", arg: 1, scope: !15226, file: !13769, line: 206, type: !103)
!15229 = !DILocalVariable(name: "prio2", arg: 2, scope: !15226, file: !13769, line: 206, type: !103)
!15230 = !DILocation(line: 0, scope: !15226)
!15231 = !DILocation(line: 208, column: 15, scope: !15226)
!15232 = !DILocation(line: 208, column: 2, scope: !15226)
!15233 = distinct !DISubprogram(name: "z_ready_thread", scope: !2490, file: !2490, line: 635, type: !14719, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15234)
!15234 = !{!15235, !15236, !15238}
!15235 = !DILocalVariable(name: "thread", arg: 1, scope: !15233, file: !2490, line: 635, type: !2385)
!15236 = !DILocalVariable(name: "__i", scope: !15237, file: !2490, line: 637, type: !14753)
!15237 = distinct !DILexicalBlock(scope: !15233, file: !2490, line: 637, column: 2)
!15238 = !DILocalVariable(name: "__key", scope: !15237, file: !2490, line: 637, type: !14753)
!15239 = !DILocation(line: 0, scope: !15233)
!15240 = !DILocation(line: 0, scope: !15237)
!15241 = !DILocation(line: 0, scope: !14761, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 637, column: 2, scope: !15237)
!15243 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15242)
!15245 = !DILocation(line: 0, scope: !14770, inlinedAt: !15244)
!15246 = !DILocation(line: 639, column: 4, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15248, file: !2490, line: 638, column: 41)
!15248 = distinct !DILexicalBlock(scope: !15249, file: !2490, line: 638, column: 7)
!15249 = distinct !DILexicalBlock(scope: !15250, file: !2490, line: 637, column: 26)
!15250 = distinct !DILexicalBlock(scope: !15237, file: !2490, line: 637, column: 2)
!15251 = !DILocation(line: 0, scope: !14788, inlinedAt: !15252)
!15252 = distinct !DILocation(line: 637, column: 2, scope: !15250)
!15253 = !DILocation(line: 0, scope: !14796, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15252)
!15255 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15254)
!15256 = !DILocation(line: 642, column: 1, scope: !15233)
!15257 = distinct !DISubprogram(name: "ready_thread", scope: !2490, file: !2490, line: 617, type: !14719, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15258)
!15258 = !{!15259}
!15259 = !DILocalVariable(name: "thread", arg: 1, scope: !15257, file: !2490, line: 617, type: !2385)
!15260 = !DILocation(line: 0, scope: !15257)
!15261 = !DILocation(line: 626, column: 7, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15257, file: !2490, line: 626, column: 6)
!15263 = !DILocation(line: 626, column: 34, scope: !15262)
!15264 = !DILocation(line: 626, column: 37, scope: !15262)
!15265 = !DILocation(line: 626, column: 6, scope: !15257)
!15266 = !DILocation(line: 0, scope: !14947, inlinedAt: !15267)
!15267 = distinct !DILocation(line: 629, column: 3, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15262, file: !2490, line: 626, column: 64)
!15269 = !DILocation(line: 252, column: 15, scope: !14947, inlinedAt: !15267)
!15270 = !DILocation(line: 252, column: 28, scope: !14947, inlinedAt: !15267)
!15271 = !DILocation(line: 0, scope: !14954, inlinedAt: !15272)
!15272 = distinct !DILocation(line: 254, column: 3, scope: !14958, inlinedAt: !15267)
!15273 = !DILocation(line: 0, scope: !14961, inlinedAt: !15274)
!15274 = distinct !DILocation(line: 229, column: 2, scope: !14954, inlinedAt: !15272)
!15275 = !DILocation(line: 188, column: 2, scope: !14971, inlinedAt: !15274)
!15276 = !DILocation(line: 188, column: 2, scope: !14973, inlinedAt: !15274)
!15277 = !DILocation(line: 0, scope: !14971, inlinedAt: !15274)
!15278 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !15274)
!15279 = !DILocation(line: 189, column: 35, scope: !14976, inlinedAt: !15274)
!15280 = !DILocation(line: 189, column: 7, scope: !14977, inlinedAt: !15274)
!15281 = !DILocation(line: 191, column: 21, scope: !14981, inlinedAt: !15274)
!15282 = !DILocation(line: 190, column: 4, scope: !14981, inlinedAt: !15274)
!15283 = !DILocation(line: 192, column: 4, scope: !14981, inlinedAt: !15274)
!15284 = distinct !{!15284, !15275, !15285}
!15285 = !DILocation(line: 194, column: 2, scope: !14971, inlinedAt: !15274)
!15286 = !DILocation(line: 196, column: 37, scope: !14961, inlinedAt: !15274)
!15287 = !DILocation(line: 196, column: 2, scope: !14961, inlinedAt: !15274)
!15288 = !DILocation(line: 197, column: 1, scope: !14961, inlinedAt: !15274)
!15289 = !DILocation(line: 630, column: 3, scope: !15268)
!15290 = !DILocation(line: 632, column: 2, scope: !15268)
!15291 = !DILocation(line: 633, column: 1, scope: !15257)
!15292 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13769, file: !13769, line: 120, type: !14879, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15293)
!15293 = !{!15294}
!15294 = !DILocalVariable(name: "thread", arg: 1, scope: !15292, file: !13769, line: 120, type: !2385)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 122, column: 12, scope: !15292)
!15297 = !DILocation(line: 122, column: 62, scope: !15292)
!15298 = !DILocation(line: 123, column: 4, scope: !15292)
!15299 = !DILocation(line: 122, column: 2, scope: !15292)
!15300 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2490, file: !2490, line: 644, type: !14719, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15301)
!15301 = !{!15302, !15303, !15305}
!15302 = !DILocalVariable(name: "thread", arg: 1, scope: !15300, file: !2490, line: 644, type: !2385)
!15303 = !DILocalVariable(name: "__i", scope: !15304, file: !2490, line: 646, type: !14753)
!15304 = distinct !DILexicalBlock(scope: !15300, file: !2490, line: 646, column: 2)
!15305 = !DILocalVariable(name: "__key", scope: !15304, file: !2490, line: 646, type: !14753)
!15306 = !DILocation(line: 0, scope: !15300)
!15307 = !DILocation(line: 0, scope: !15304)
!15308 = !DILocation(line: 0, scope: !14761, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 646, column: 2, scope: !15304)
!15310 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15309)
!15312 = !DILocation(line: 0, scope: !14770, inlinedAt: !15311)
!15313 = !DILocation(line: 647, column: 3, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15315, file: !2490, line: 646, column: 26)
!15315 = distinct !DILexicalBlock(scope: !15304, file: !2490, line: 646, column: 2)
!15316 = !DILocation(line: 0, scope: !14788, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 646, column: 2, scope: !15315)
!15318 = !DILocation(line: 0, scope: !14796, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15317)
!15320 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15319)
!15321 = !DILocation(line: 649, column: 1, scope: !15300)
!15322 = distinct !DISubprogram(name: "z_sched_start", scope: !2490, file: !2490, line: 651, type: !14719, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15323)
!15323 = !{!15324, !15325}
!15324 = !DILocalVariable(name: "thread", arg: 1, scope: !15322, file: !2490, line: 651, type: !2385)
!15325 = !DILocalVariable(name: "key", scope: !15322, file: !2490, line: 653, type: !14753)
!15326 = !DILocation(line: 0, scope: !15322)
!15327 = !DILocation(line: 0, scope: !14761, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 653, column: 25, scope: !15322)
!15329 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15328)
!15331 = !DILocation(line: 0, scope: !14770, inlinedAt: !15330)
!15332 = !DILocation(line: 655, column: 6, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15322, file: !2490, line: 655, column: 6)
!15334 = !DILocation(line: 655, column: 6, scope: !15322)
!15335 = !DILocation(line: 0, scope: !14788, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 656, column: 3, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15333, file: !2490, line: 655, column: 36)
!15338 = !DILocation(line: 0, scope: !14796, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15336)
!15340 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15339)
!15341 = !DILocation(line: 657, column: 3, scope: !15337)
!15342 = !DILocation(line: 660, column: 2, scope: !15322)
!15343 = !DILocation(line: 661, column: 2, scope: !15322)
!15344 = !DILocation(line: 662, column: 2, scope: !15322)
!15345 = !DILocation(line: 663, column: 1, scope: !15322)
!15346 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13769, file: !13769, line: 126, type: !14879, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15347)
!15347 = !{!15348}
!15348 = !DILocalVariable(name: "thread", arg: 1, scope: !15346, file: !13769, line: 126, type: !2385)
!15349 = !DILocation(line: 0, scope: !15346)
!15350 = !DILocation(line: 128, column: 23, scope: !15346)
!15351 = !DILocation(line: 128, column: 36, scope: !15346)
!15352 = !DILocation(line: 128, column: 56, scope: !15346)
!15353 = !DILocation(line: 128, column: 2, scope: !15346)
!15354 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13769, file: !13769, line: 155, type: !14719, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15355)
!15355 = !{!15356}
!15356 = !DILocalVariable(name: "thread", arg: 1, scope: !15354, file: !13769, line: 155, type: !2385)
!15357 = !DILocation(line: 0, scope: !15354)
!15358 = !DILocation(line: 157, column: 15, scope: !15354)
!15359 = !DILocation(line: 157, column: 28, scope: !15354)
!15360 = !DILocation(line: 158, column: 1, scope: !15354)
!15361 = distinct !DISubprogram(name: "z_reschedule", scope: !2490, file: !2490, line: 967, type: !14789, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15362)
!15362 = !{!15363, !15364}
!15363 = !DILocalVariable(name: "lock", arg: 1, scope: !15361, file: !2490, line: 967, type: !14764)
!15364 = !DILocalVariable(name: "key", arg: 2, scope: !15361, file: !2490, line: 967, type: !14753)
!15365 = !DILocation(line: 0, scope: !15361)
!15366 = !DILocation(line: 969, column: 6, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15361, file: !2490, line: 969, column: 6)
!15368 = !DILocation(line: 969, column: 23, scope: !15367)
!15369 = !DILocation(line: 969, column: 26, scope: !15367)
!15370 = !DILocation(line: 969, column: 6, scope: !15361)
!15371 = !DILocalVariable(name: "key", arg: 2, scope: !15372, file: !13873, line: 193, type: !14753)
!15372 = distinct !DISubprogram(name: "z_swap", scope: !13873, file: !13873, line: 193, type: !15373, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15375)
!15373 = !DISubroutineType(types: !15374)
!15374 = !{!103, !14764, !14753}
!15375 = !{!15376, !15371}
!15376 = !DILocalVariable(name: "lock", arg: 1, scope: !15372, file: !13873, line: 193, type: !14764)
!15377 = !DILocation(line: 0, scope: !15372, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 970, column: 3, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15367, file: !2490, line: 969, column: 39)
!15380 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !15378)
!15381 = !DILocation(line: 971, column: 2, scope: !15379)
!15382 = !DILocation(line: 0, scope: !14788, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 972, column: 3, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15367, file: !2490, line: 971, column: 9)
!15385 = !DILocation(line: 0, scope: !14796, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15383)
!15387 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15386)
!15388 = !DILocation(line: 975, column: 1, scope: !15361)
!15389 = distinct !DISubprogram(name: "resched", scope: !2490, file: !2490, line: 940, type: !15390, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15392)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{!170, !121}
!15392 = !{!15393}
!15393 = !DILocalVariable(name: "key", arg: 1, scope: !15389, file: !2490, line: 940, type: !121)
!15394 = !DILocation(line: 0, scope: !15389)
!15395 = !DILocalVariable(name: "key", arg: 1, scope: !15396, file: !5761, line: 112, type: !32)
!15396 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5761, file: !5761, line: 112, type: !15397, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15399)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{!170, !32}
!15399 = !{!15395}
!15400 = !DILocation(line: 0, scope: !15396, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 946, column: 9, scope: !15389)
!15402 = !DILocation(line: 115, column: 13, scope: !15396, inlinedAt: !15401)
!15403 = !DILocation(line: 946, column: 32, scope: !15389)
!15404 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !15408)
!15405 = distinct !DISubprogram(name: "__get_IPSR", scope: !6798, file: !6798, line: 1027, type: !7548, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15406)
!15406 = !{!15407}
!15407 = !DILocalVariable(name: "result", scope: !15405, file: !6798, line: 1029, type: !121)
!15408 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !15410)
!15409 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7554, file: !7554, line: 46, type: !7555, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!15410 = distinct !DILocation(line: 946, column: 36, scope: !15389)
!15411 = !{i64 2486877}
!15412 = !DILocation(line: 0, scope: !15405, inlinedAt: !15408)
!15413 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !15410)
!15414 = !DILocation(line: 946, column: 2, scope: !15389)
!15415 = distinct !DISubprogram(name: "need_swap", scope: !2490, file: !2490, line: 953, type: !7555, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15416)
!15416 = !{!15417}
!15417 = !DILocalVariable(name: "new_thread", scope: !15415, file: !2490, line: 959, type: !2385)
!15418 = !DILocation(line: 962, column: 31, scope: !15415)
!15419 = !DILocation(line: 0, scope: !15415)
!15420 = !DILocation(line: 963, column: 23, scope: !15415)
!15421 = !DILocation(line: 963, column: 20, scope: !15415)
!15422 = !DILocation(line: 963, column: 2, scope: !15415)
!15423 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13873, file: !13873, line: 181, type: !6808, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15424)
!15424 = !{!15425, !15426}
!15425 = !DILocalVariable(name: "key", arg: 1, scope: !15423, file: !13873, line: 181, type: !32)
!15426 = !DILocalVariable(name: "ret", scope: !15423, file: !13873, line: 183, type: !103)
!15427 = !DILocation(line: 0, scope: !15423)
!15428 = !DILocation(line: 185, column: 8, scope: !15423)
!15429 = !DILocation(line: 186, column: 2, scope: !15423)
!15430 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2490, file: !2490, line: 665, type: !14719, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15431)
!15431 = !{!15432, !15433, !15435}
!15432 = !DILocalVariable(name: "thread", arg: 1, scope: !15430, file: !2490, line: 665, type: !2385)
!15433 = !DILocalVariable(name: "__i", scope: !15434, file: !2490, line: 671, type: !14753)
!15434 = distinct !DILexicalBlock(scope: !15430, file: !2490, line: 671, column: 2)
!15435 = !DILocalVariable(name: "__key", scope: !15434, file: !2490, line: 671, type: !14753)
!15436 = !DILocation(line: 0, scope: !15430)
!15437 = !DILocation(line: 669, column: 8, scope: !15430)
!15438 = !DILocation(line: 0, scope: !15434)
!15439 = !DILocation(line: 0, scope: !14761, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 671, column: 2, scope: !15434)
!15441 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15440)
!15443 = !DILocation(line: 0, scope: !14770, inlinedAt: !15442)
!15444 = !DILocation(line: 672, column: 7, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15446, file: !2490, line: 672, column: 7)
!15446 = distinct !DILexicalBlock(scope: !15447, file: !2490, line: 671, column: 26)
!15447 = distinct !DILexicalBlock(scope: !15434, file: !2490, line: 671, column: 2)
!15448 = !DILocation(line: 672, column: 7, scope: !15446)
!15449 = !DILocation(line: 0, scope: !14930, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 673, column: 4, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15445, file: !2490, line: 672, column: 35)
!15452 = !DILocation(line: 266, column: 15, scope: !14930, inlinedAt: !15450)
!15453 = !DILocation(line: 266, column: 28, scope: !14930, inlinedAt: !15450)
!15454 = !DILocation(line: 0, scope: !14938, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 268, column: 3, scope: !14942, inlinedAt: !15450)
!15456 = !DILocation(line: 234, column: 2, scope: !14938, inlinedAt: !15455)
!15457 = !DILocation(line: 674, column: 3, scope: !15451)
!15458 = !DILocation(line: 675, column: 3, scope: !15446)
!15459 = !DILocation(line: 676, column: 26, scope: !15446)
!15460 = !DILocation(line: 676, column: 23, scope: !15446)
!15461 = !DILocation(line: 676, column: 3, scope: !15446)
!15462 = !DILocation(line: 0, scope: !14788, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 671, column: 2, scope: !15447)
!15464 = !DILocation(line: 0, scope: !14796, inlinedAt: !15465)
!15465 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15463)
!15466 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15465)
!15467 = !DILocation(line: 679, column: 16, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15430, file: !2490, line: 679, column: 6)
!15469 = !DILocation(line: 679, column: 13, scope: !15468)
!15470 = !DILocation(line: 679, column: 6, scope: !15430)
!15471 = !DILocation(line: 680, column: 3, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15468, file: !2490, line: 679, column: 26)
!15473 = !DILocation(line: 681, column: 2, scope: !15472)
!15474 = !DILocation(line: 684, column: 1, scope: !15430)
!15475 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14163, file: !14163, line: 52, type: !14737, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15476)
!15476 = !{!15477}
!15477 = !DILocalVariable(name: "thread", arg: 1, scope: !15475, file: !14163, line: 52, type: !2385)
!15478 = !DILocation(line: 0, scope: !15475)
!15479 = !DILocation(line: 54, column: 39, scope: !15475)
!15480 = !DILocation(line: 54, column: 9, scope: !15475)
!15481 = !DILocation(line: 54, column: 2, scope: !15475)
!15482 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13769, file: !13769, line: 141, type: !14719, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15483)
!15483 = !{!15484}
!15484 = !DILocalVariable(name: "thread", arg: 1, scope: !15482, file: !13769, line: 141, type: !2385)
!15485 = !DILocation(line: 0, scope: !15482)
!15486 = !DILocation(line: 143, column: 15, scope: !15482)
!15487 = !DILocation(line: 143, column: 28, scope: !15482)
!15488 = !DILocation(line: 146, column: 1, scope: !15482)
!15489 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13769, file: !13769, line: 73, type: !3217, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!15490 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 75, column: 30, scope: !15489)
!15492 = !DILocation(line: 0, scope: !14770, inlinedAt: !15491)
!15493 = !DILocation(line: 75, column: 9, scope: !15489)
!15494 = !DILocation(line: 76, column: 1, scope: !15489)
!15495 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2490, file: !2490, line: 977, type: !5785, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15496)
!15496 = !{!15497}
!15497 = !DILocalVariable(name: "key", arg: 1, scope: !15495, file: !2490, line: 977, type: !121)
!15498 = !DILocation(line: 0, scope: !15495)
!15499 = !DILocation(line: 979, column: 6, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15495, file: !2490, line: 979, column: 6)
!15501 = !DILocation(line: 979, column: 6, scope: !15495)
!15502 = !DILocation(line: 980, column: 3, scope: !15503)
!15503 = distinct !DILexicalBlock(scope: !15500, file: !2490, line: 979, column: 20)
!15504 = !DILocation(line: 981, column: 2, scope: !15503)
!15505 = !DILocation(line: 0, scope: !14796, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 982, column: 3, scope: !15507)
!15507 = distinct !DILexicalBlock(scope: !15500, file: !2490, line: 981, column: 9)
!15508 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15506)
!15509 = !DILocation(line: 985, column: 1, scope: !15495)
!15510 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2490, file: !2490, line: 695, type: !14719, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15511)
!15511 = !{!15512, !15513}
!15512 = !DILocalVariable(name: "thread", arg: 1, scope: !15510, file: !2490, line: 695, type: !2385)
!15513 = !DILocalVariable(name: "key", scope: !15510, file: !2490, line: 699, type: !14753)
!15514 = !DILocation(line: 0, scope: !15510)
!15515 = !DILocation(line: 0, scope: !14761, inlinedAt: !15516)
!15516 = distinct !DILocation(line: 699, column: 25, scope: !15510)
!15517 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15518)
!15518 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15516)
!15519 = !DILocation(line: 0, scope: !14770, inlinedAt: !15518)
!15520 = !DILocation(line: 702, column: 7, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15510, file: !2490, line: 702, column: 6)
!15522 = !DILocation(line: 702, column: 6, scope: !15510)
!15523 = !DILocation(line: 0, scope: !14788, inlinedAt: !15524)
!15524 = distinct !DILocation(line: 703, column: 3, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15521, file: !2490, line: 702, column: 38)
!15526 = !DILocation(line: 0, scope: !14796, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15524)
!15528 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15527)
!15529 = !DILocation(line: 704, column: 3, scope: !15525)
!15530 = !DILocation(line: 707, column: 2, scope: !15510)
!15531 = !DILocation(line: 708, column: 2, scope: !15510)
!15532 = !DILocation(line: 710, column: 2, scope: !15510)
!15533 = !DILocation(line: 713, column: 1, scope: !15510)
!15534 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13769, file: !13769, line: 96, type: !14879, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15535)
!15535 = !{!15536}
!15536 = !DILocalVariable(name: "thread", arg: 1, scope: !15534, file: !13769, line: 96, type: !2385)
!15537 = !DILocation(line: 0, scope: !15534)
!15538 = !DILocation(line: 98, column: 23, scope: !15534)
!15539 = !DILocation(line: 98, column: 36, scope: !15534)
!15540 = !DILocation(line: 98, column: 57, scope: !15534)
!15541 = !DILocation(line: 98, column: 2, scope: !15534)
!15542 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13769, file: !13769, line: 148, type: !14719, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15543)
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "thread", arg: 1, scope: !15542, file: !13769, line: 148, type: !2385)
!15545 = !DILocation(line: 0, scope: !15542)
!15546 = !DILocation(line: 150, column: 15, scope: !15542)
!15547 = !DILocation(line: 150, column: 28, scope: !15542)
!15548 = !DILocation(line: 153, column: 1, scope: !15542)
!15549 = distinct !DISubprogram(name: "z_pend_thread", scope: !2490, file: !2490, line: 770, type: !15550, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15556)
!15550 = !DISubroutineType(types: !15551)
!15551 = !{null, !2385, !2416, !15552}
!15552 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !15553)
!15553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !15554)
!15554 = !{!15555}
!15555 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15553, file: !1739, line: 66, baseType: !1738, size: 64)
!15556 = !{!15557, !15558, !15559, !15560, !15562}
!15557 = !DILocalVariable(name: "thread", arg: 1, scope: !15549, file: !2490, line: 770, type: !2385)
!15558 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15549, file: !2490, line: 770, type: !2416)
!15559 = !DILocalVariable(name: "timeout", arg: 3, scope: !15549, file: !2490, line: 771, type: !15552)
!15560 = !DILocalVariable(name: "__i", scope: !15561, file: !2490, line: 774, type: !14753)
!15561 = distinct !DILexicalBlock(scope: !15549, file: !2490, line: 774, column: 2)
!15562 = !DILocalVariable(name: "__key", scope: !15561, file: !2490, line: 774, type: !14753)
!15563 = !DILocation(line: 0, scope: !15549)
!15564 = !DILocation(line: 0, scope: !15561)
!15565 = !DILocation(line: 0, scope: !14761, inlinedAt: !15566)
!15566 = distinct !DILocation(line: 774, column: 2, scope: !15561)
!15567 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15566)
!15569 = !DILocation(line: 0, scope: !14770, inlinedAt: !15568)
!15570 = !DILocation(line: 775, column: 3, scope: !15571)
!15571 = distinct !DILexicalBlock(scope: !15572, file: !2490, line: 774, column: 26)
!15572 = distinct !DILexicalBlock(scope: !15561, file: !2490, line: 774, column: 2)
!15573 = !DILocation(line: 0, scope: !14788, inlinedAt: !15574)
!15574 = distinct !DILocation(line: 774, column: 2, scope: !15572)
!15575 = !DILocation(line: 0, scope: !14796, inlinedAt: !15576)
!15576 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15574)
!15577 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15576)
!15578 = !DILocation(line: 777, column: 1, scope: !15549)
!15579 = distinct !DISubprogram(name: "pend_locked", scope: !2490, file: !2490, line: 760, type: !15550, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15580)
!15580 = !{!15581, !15582, !15583}
!15581 = !DILocalVariable(name: "thread", arg: 1, scope: !15579, file: !2490, line: 760, type: !2385)
!15582 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15579, file: !2490, line: 760, type: !2416)
!15583 = !DILocalVariable(name: "timeout", arg: 3, scope: !15579, file: !2490, line: 761, type: !15552)
!15584 = !DILocation(line: 0, scope: !15579)
!15585 = !DILocation(line: 766, column: 2, scope: !15579)
!15586 = !DILocation(line: 767, column: 2, scope: !15579)
!15587 = !DILocation(line: 768, column: 1, scope: !15579)
!15588 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2490, file: !2490, line: 740, type: !15589, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15591)
!15589 = !DISubroutineType(types: !15590)
!15590 = !{null, !2385, !2416}
!15591 = !{!15592, !15593}
!15592 = !DILocalVariable(name: "thread", arg: 1, scope: !15588, file: !2490, line: 740, type: !2385)
!15593 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15588, file: !2490, line: 740, type: !2416)
!15594 = !DILocation(line: 0, scope: !15588)
!15595 = !DILocation(line: 742, column: 2, scope: !15588)
!15596 = !DILocation(line: 743, column: 2, scope: !15588)
!15597 = !DILocation(line: 747, column: 13, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15588, file: !2490, line: 747, column: 6)
!15599 = !DILocation(line: 747, column: 6, scope: !15588)
!15600 = !DILocation(line: 748, column: 16, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15598, file: !2490, line: 747, column: 22)
!15602 = !DILocation(line: 748, column: 26, scope: !15601)
!15603 = !DILocation(line: 749, column: 28, scope: !15601)
!15604 = !DILocation(line: 0, scope: !14961, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 749, column: 3, scope: !15601)
!15606 = !DILocation(line: 188, column: 2, scope: !14971, inlinedAt: !15605)
!15607 = !DILocation(line: 188, column: 2, scope: !14973, inlinedAt: !15605)
!15608 = !DILocation(line: 0, scope: !14971, inlinedAt: !15605)
!15609 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !15605)
!15610 = !DILocation(line: 189, column: 35, scope: !14976, inlinedAt: !15605)
!15611 = !DILocation(line: 189, column: 7, scope: !14977, inlinedAt: !15605)
!15612 = !DILocation(line: 191, column: 21, scope: !14981, inlinedAt: !15605)
!15613 = !DILocation(line: 190, column: 4, scope: !14981, inlinedAt: !15605)
!15614 = !DILocation(line: 192, column: 4, scope: !14981, inlinedAt: !15605)
!15615 = distinct !{!15615, !15606, !15616}
!15616 = !DILocation(line: 194, column: 2, scope: !14971, inlinedAt: !15605)
!15617 = !DILocation(line: 196, column: 37, scope: !14961, inlinedAt: !15605)
!15618 = !DILocation(line: 196, column: 2, scope: !14961, inlinedAt: !15605)
!15619 = !DILocation(line: 197, column: 1, scope: !14961, inlinedAt: !15605)
!15620 = !DILocation(line: 751, column: 1, scope: !15588)
!15621 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2490, file: !2490, line: 753, type: !15622, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15624)
!15622 = !DISubroutineType(types: !15623)
!15623 = !{null, !2385, !15552}
!15624 = !{!15625, !15626}
!15625 = !DILocalVariable(name: "thread", arg: 1, scope: !15621, file: !2490, line: 753, type: !2385)
!15626 = !DILocalVariable(name: "timeout", arg: 2, scope: !15621, file: !2490, line: 753, type: !15552)
!15627 = !DILocation(line: 0, scope: !15621)
!15628 = !DILocation(line: 755, column: 7, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15621, file: !2490, line: 755, column: 6)
!15630 = !DILocation(line: 755, column: 6, scope: !15621)
!15631 = !DILocation(line: 756, column: 3, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15629, file: !2490, line: 755, column: 41)
!15633 = !DILocation(line: 757, column: 2, scope: !15632)
!15634 = !DILocation(line: 758, column: 1, scope: !15621)
!15635 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14163, file: !14163, line: 47, type: !15622, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15636)
!15636 = !{!15637, !15638}
!15637 = !DILocalVariable(name: "thread", arg: 1, scope: !15635, file: !14163, line: 47, type: !2385)
!15638 = !DILocalVariable(name: "ticks", arg: 2, scope: !15635, file: !14163, line: 47, type: !15552)
!15639 = !DILocation(line: 0, scope: !15635)
!15640 = !DILocation(line: 49, column: 30, scope: !15635)
!15641 = !DILocation(line: 49, column: 2, scope: !15635)
!15642 = !DILocation(line: 50, column: 1, scope: !15635)
!15643 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2490, file: !2490, line: 795, type: !2442, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15644)
!15644 = !{!15645, !15646, !15647, !15649, !15650}
!15645 = !DILocalVariable(name: "timeout", arg: 1, scope: !15643, file: !2490, line: 795, type: !2444)
!15646 = !DILocalVariable(name: "thread", scope: !15643, file: !2490, line: 797, type: !2385)
!15647 = !DILocalVariable(name: "__i", scope: !15648, file: !2490, line: 800, type: !14753)
!15648 = distinct !DILexicalBlock(scope: !15643, file: !2490, line: 800, column: 2)
!15649 = !DILocalVariable(name: "__key", scope: !15648, file: !2490, line: 800, type: !14753)
!15650 = !DILocalVariable(name: "killed", scope: !15651, file: !2490, line: 801, type: !170)
!15651 = distinct !DILexicalBlock(scope: !15652, file: !2490, line: 800, column: 26)
!15652 = distinct !DILexicalBlock(scope: !15648, file: !2490, line: 800, column: 2)
!15653 = !DILocation(line: 0, scope: !15643)
!15654 = !DILocation(line: 797, column: 28, scope: !15643)
!15655 = !DILocation(line: 0, scope: !15648)
!15656 = !DILocation(line: 0, scope: !14761, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 800, column: 2, scope: !15648)
!15658 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15657)
!15660 = !DILocation(line: 0, scope: !14770, inlinedAt: !15659)
!15661 = !DILocation(line: 801, column: 27, scope: !15651)
!15662 = !DILocation(line: 801, column: 32, scope: !15651)
!15663 = !DILocation(line: 801, column: 61, scope: !15651)
!15664 = !DILocation(line: 0, scope: !15651)
!15665 = !DILocation(line: 804, column: 7, scope: !15651)
!15666 = !DILocation(line: 805, column: 21, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15668, file: !2490, line: 805, column: 8)
!15668 = distinct !DILexicalBlock(scope: !15669, file: !2490, line: 804, column: 16)
!15669 = distinct !DILexicalBlock(scope: !15651, file: !2490, line: 804, column: 7)
!15670 = !DILocation(line: 805, column: 31, scope: !15667)
!15671 = !DILocation(line: 805, column: 8, scope: !15668)
!15672 = !DILocation(line: 806, column: 5, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15667, file: !2490, line: 805, column: 40)
!15674 = !DILocation(line: 807, column: 4, scope: !15673)
!15675 = !DILocation(line: 808, column: 4, scope: !15668)
!15676 = !DILocation(line: 809, column: 4, scope: !15668)
!15677 = !DILocation(line: 810, column: 4, scope: !15668)
!15678 = !DILocation(line: 811, column: 3, scope: !15668)
!15679 = !DILocation(line: 0, scope: !14788, inlinedAt: !15680)
!15680 = distinct !DILocation(line: 800, column: 2, scope: !15652)
!15681 = !DILocation(line: 0, scope: !14796, inlinedAt: !15682)
!15682 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15680)
!15683 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15682)
!15684 = !DILocation(line: 813, column: 1, scope: !15643)
!15685 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2490, file: !2490, line: 779, type: !14719, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15686)
!15686 = !{!15687}
!15687 = !DILocalVariable(name: "thread", arg: 1, scope: !15685, file: !2490, line: 779, type: !2385)
!15688 = !DILocation(line: 0, scope: !15685)
!15689 = !DILocation(line: 781, column: 2, scope: !15685)
!15690 = !DILocation(line: 782, column: 2, scope: !15685)
!15691 = !DILocation(line: 783, column: 15, scope: !15685)
!15692 = !DILocation(line: 783, column: 25, scope: !15685)
!15693 = !DILocation(line: 784, column: 1, scope: !15685)
!15694 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13769, file: !13769, line: 165, type: !14719, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15695)
!15695 = !{!15696}
!15696 = !DILocalVariable(name: "thread", arg: 1, scope: !15694, file: !13769, line: 165, type: !2385)
!15697 = !DILocation(line: 0, scope: !15694)
!15698 = !DILocation(line: 167, column: 15, scope: !15694)
!15699 = !DILocation(line: 167, column: 28, scope: !15694)
!15700 = !DILocation(line: 168, column: 1, scope: !15694)
!15701 = distinct !DISubprogram(name: "unready_thread", scope: !2490, file: !2490, line: 731, type: !14719, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15702)
!15702 = !{!15703}
!15703 = !DILocalVariable(name: "thread", arg: 1, scope: !15701, file: !2490, line: 731, type: !2385)
!15704 = !DILocation(line: 0, scope: !15701)
!15705 = !DILocation(line: 733, column: 6, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15701, file: !2490, line: 733, column: 6)
!15707 = !DILocation(line: 733, column: 6, scope: !15701)
!15708 = !DILocation(line: 0, scope: !14930, inlinedAt: !15709)
!15709 = distinct !DILocation(line: 734, column: 3, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15706, file: !2490, line: 733, column: 34)
!15711 = !DILocation(line: 266, column: 15, scope: !14930, inlinedAt: !15709)
!15712 = !DILocation(line: 266, column: 28, scope: !14930, inlinedAt: !15709)
!15713 = !DILocation(line: 0, scope: !14938, inlinedAt: !15714)
!15714 = distinct !DILocation(line: 268, column: 3, scope: !14942, inlinedAt: !15709)
!15715 = !DILocation(line: 234, column: 2, scope: !14938, inlinedAt: !15714)
!15716 = !DILocation(line: 735, column: 2, scope: !15710)
!15717 = !DILocation(line: 736, column: 25, scope: !15701)
!15718 = !DILocation(line: 736, column: 22, scope: !15701)
!15719 = !DILocation(line: 736, column: 2, scope: !15701)
!15720 = !DILocation(line: 737, column: 1, scope: !15701)
!15721 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13769, file: !13769, line: 160, type: !14719, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15722)
!15722 = !{!15723}
!15723 = !DILocalVariable(name: "thread", arg: 1, scope: !15721, file: !13769, line: 160, type: !2385)
!15724 = !DILocation(line: 0, scope: !15721)
!15725 = !DILocation(line: 162, column: 15, scope: !15721)
!15726 = !DILocation(line: 162, column: 28, scope: !15721)
!15727 = !DILocation(line: 163, column: 1, scope: !15721)
!15728 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2490, file: !2490, line: 786, type: !14719, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15729)
!15729 = !{!15730, !15731, !15733}
!15730 = !DILocalVariable(name: "thread", arg: 1, scope: !15728, file: !2490, line: 786, type: !2385)
!15731 = !DILocalVariable(name: "__i", scope: !15732, file: !2490, line: 788, type: !14753)
!15732 = distinct !DILexicalBlock(scope: !15728, file: !2490, line: 788, column: 2)
!15733 = !DILocalVariable(name: "__key", scope: !15732, file: !2490, line: 788, type: !14753)
!15734 = !DILocation(line: 0, scope: !15728)
!15735 = !DILocation(line: 0, scope: !15732)
!15736 = !DILocation(line: 0, scope: !14761, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 788, column: 2, scope: !15732)
!15738 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15739)
!15739 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15737)
!15740 = !DILocation(line: 0, scope: !14770, inlinedAt: !15739)
!15741 = !DILocation(line: 789, column: 3, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15743, file: !2490, line: 788, column: 26)
!15743 = distinct !DILexicalBlock(scope: !15732, file: !2490, line: 788, column: 2)
!15744 = !DILocation(line: 0, scope: !14788, inlinedAt: !15745)
!15745 = distinct !DILocation(line: 788, column: 2, scope: !15743)
!15746 = !DILocation(line: 0, scope: !14796, inlinedAt: !15747)
!15747 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15745)
!15748 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15747)
!15749 = !DILocation(line: 791, column: 1, scope: !15728)
!15750 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2490, file: !2490, line: 816, type: !15751, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15753)
!15751 = !DISubroutineType(types: !15752)
!15752 = !{!103, !121, !2416, !15552}
!15753 = !{!15754, !15755, !15756, !15757, !15758, !15760}
!15754 = !DILocalVariable(name: "key", arg: 1, scope: !15750, file: !2490, line: 816, type: !121)
!15755 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15750, file: !2490, line: 816, type: !2416)
!15756 = !DILocalVariable(name: "timeout", arg: 3, scope: !15750, file: !2490, line: 816, type: !15552)
!15757 = !DILocalVariable(name: "ret", scope: !15750, file: !2490, line: 828, type: !103)
!15758 = !DILocalVariable(name: "__i", scope: !15759, file: !2490, line: 829, type: !14753)
!15759 = distinct !DILexicalBlock(scope: !15750, file: !2490, line: 829, column: 2)
!15760 = !DILocalVariable(name: "__key", scope: !15759, file: !2490, line: 829, type: !14753)
!15761 = !DILocation(line: 0, scope: !15750)
!15762 = !DILocation(line: 823, column: 14, scope: !15750)
!15763 = !DILocation(line: 823, column: 2, scope: !15750)
!15764 = !DILocation(line: 826, column: 20, scope: !15750)
!15765 = !DILocation(line: 826, column: 18, scope: !15750)
!15766 = !DILocation(line: 828, column: 12, scope: !15750)
!15767 = !DILocation(line: 0, scope: !15759)
!15768 = !DILocation(line: 0, scope: !14761, inlinedAt: !15769)
!15769 = distinct !DILocation(line: 829, column: 2, scope: !15759)
!15770 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15771)
!15771 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15769)
!15772 = !DILocation(line: 0, scope: !14770, inlinedAt: !15771)
!15773 = !DILocation(line: 830, column: 7, scope: !15774)
!15774 = distinct !DILexicalBlock(scope: !15775, file: !2490, line: 830, column: 7)
!15775 = distinct !DILexicalBlock(scope: !15776, file: !2490, line: 829, column: 26)
!15776 = distinct !DILexicalBlock(scope: !15759, file: !2490, line: 829, column: 2)
!15777 = !DILocation(line: 830, column: 26, scope: !15774)
!15778 = !DILocation(line: 830, column: 23, scope: !15774)
!15779 = !DILocation(line: 830, column: 7, scope: !15775)
!15780 = !DILocation(line: 831, column: 20, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15774, file: !2490, line: 830, column: 36)
!15782 = !DILocation(line: 832, column: 3, scope: !15781)
!15783 = !DILocation(line: 0, scope: !14788, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 829, column: 2, scope: !15776)
!15785 = !DILocation(line: 0, scope: !14796, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15784)
!15787 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15786)
!15788 = !DILocation(line: 834, column: 2, scope: !15750)
!15789 = distinct !DISubprogram(name: "z_pend_curr", scope: !2490, file: !2490, line: 840, type: !15790, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15792)
!15790 = !DISubroutineType(types: !15791)
!15791 = !{!103, !14764, !14753, !2416, !15552}
!15792 = !{!15793, !15794, !15795, !15796}
!15793 = !DILocalVariable(name: "lock", arg: 1, scope: !15789, file: !2490, line: 840, type: !14764)
!15794 = !DILocalVariable(name: "key", arg: 2, scope: !15789, file: !2490, line: 840, type: !14753)
!15795 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15789, file: !2490, line: 841, type: !2416)
!15796 = !DILocalVariable(name: "timeout", arg: 4, scope: !15789, file: !2490, line: 841, type: !15552)
!15797 = !DILocation(line: 0, scope: !15789)
!15798 = !DILocation(line: 844, column: 20, scope: !15789)
!15799 = !DILocation(line: 844, column: 18, scope: !15789)
!15800 = !DILocation(line: 0, scope: !14761, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 856, column: 9, scope: !15789)
!15802 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15801)
!15804 = !DILocation(line: 0, scope: !14770, inlinedAt: !15803)
!15805 = !DILocation(line: 857, column: 14, scope: !15789)
!15806 = !DILocation(line: 857, column: 2, scope: !15789)
!15807 = !DILocation(line: 0, scope: !15372, inlinedAt: !15808)
!15808 = distinct !DILocation(line: 859, column: 9, scope: !15789)
!15809 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !15808)
!15810 = !DILocation(line: 859, column: 2, scope: !15789)
!15811 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2490, file: !2490, line: 862, type: !15812, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15814)
!15812 = !DISubroutineType(types: !15813)
!15813 = !{!2385, !2416}
!15814 = !{!15815, !15816, !15817, !15819}
!15815 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15811, file: !2490, line: 862, type: !2416)
!15816 = !DILocalVariable(name: "thread", scope: !15811, file: !2490, line: 864, type: !2385)
!15817 = !DILocalVariable(name: "__i", scope: !15818, file: !2490, line: 866, type: !14753)
!15818 = distinct !DILexicalBlock(scope: !15811, file: !2490, line: 866, column: 2)
!15819 = !DILocalVariable(name: "__key", scope: !15818, file: !2490, line: 866, type: !14753)
!15820 = !DILocation(line: 0, scope: !15811)
!15821 = !DILocation(line: 0, scope: !15818)
!15822 = !DILocation(line: 0, scope: !14761, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 866, column: 2, scope: !15818)
!15824 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15823)
!15826 = !DILocation(line: 0, scope: !14770, inlinedAt: !15825)
!15827 = !DILocation(line: 867, column: 12, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15829, file: !2490, line: 866, column: 26)
!15829 = distinct !DILexicalBlock(scope: !15818, file: !2490, line: 866, column: 2)
!15830 = !DILocation(line: 869, column: 14, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15828, file: !2490, line: 869, column: 7)
!15832 = !DILocation(line: 869, column: 7, scope: !15828)
!15833 = !DILocation(line: 870, column: 4, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15831, file: !2490, line: 869, column: 23)
!15835 = !DILocation(line: 871, column: 3, scope: !15834)
!15836 = !DILocation(line: 0, scope: !14788, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 866, column: 2, scope: !15829)
!15838 = !DILocation(line: 0, scope: !14796, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15837)
!15840 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15839)
!15841 = !DILocation(line: 874, column: 2, scope: !15811)
!15842 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2490, file: !2490, line: 877, type: !15812, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15843)
!15843 = !{!15844, !15845, !15846, !15848}
!15844 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15842, file: !2490, line: 877, type: !2416)
!15845 = !DILocalVariable(name: "thread", scope: !15842, file: !2490, line: 879, type: !2385)
!15846 = !DILocalVariable(name: "__i", scope: !15847, file: !2490, line: 881, type: !14753)
!15847 = distinct !DILexicalBlock(scope: !15842, file: !2490, line: 881, column: 2)
!15848 = !DILocalVariable(name: "__key", scope: !15847, file: !2490, line: 881, type: !14753)
!15849 = !DILocation(line: 0, scope: !15842)
!15850 = !DILocation(line: 0, scope: !15847)
!15851 = !DILocation(line: 0, scope: !14761, inlinedAt: !15852)
!15852 = distinct !DILocation(line: 881, column: 2, scope: !15847)
!15853 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15854)
!15854 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15852)
!15855 = !DILocation(line: 0, scope: !14770, inlinedAt: !15854)
!15856 = !DILocation(line: 882, column: 12, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15858, file: !2490, line: 881, column: 26)
!15858 = distinct !DILexicalBlock(scope: !15847, file: !2490, line: 881, column: 2)
!15859 = !DILocation(line: 884, column: 14, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15857, file: !2490, line: 884, column: 7)
!15861 = !DILocation(line: 884, column: 7, scope: !15857)
!15862 = !DILocation(line: 885, column: 4, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15860, file: !2490, line: 884, column: 23)
!15864 = !DILocation(line: 886, column: 10, scope: !15863)
!15865 = !DILocation(line: 887, column: 3, scope: !15863)
!15866 = !DILocation(line: 0, scope: !14788, inlinedAt: !15867)
!15867 = distinct !DILocation(line: 881, column: 2, scope: !15858)
!15868 = !DILocation(line: 0, scope: !14796, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15867)
!15870 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15869)
!15871 = !DILocation(line: 890, column: 2, scope: !15842)
!15872 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2490, file: !2490, line: 893, type: !14719, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15873)
!15873 = !{!15874}
!15874 = !DILocalVariable(name: "thread", arg: 1, scope: !15872, file: !2490, line: 893, type: !2385)
!15875 = !DILocation(line: 0, scope: !15872)
!15876 = !DILocation(line: 0, scope: !15728, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 895, column: 2, scope: !15872)
!15878 = !DILocation(line: 0, scope: !15732, inlinedAt: !15877)
!15879 = !DILocation(line: 0, scope: !14761, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 788, column: 2, scope: !15732, inlinedAt: !15877)
!15881 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15880)
!15883 = !DILocation(line: 0, scope: !14770, inlinedAt: !15882)
!15884 = !DILocation(line: 789, column: 3, scope: !15742, inlinedAt: !15877)
!15885 = !DILocation(line: 0, scope: !14788, inlinedAt: !15886)
!15886 = distinct !DILocation(line: 788, column: 2, scope: !15743, inlinedAt: !15877)
!15887 = !DILocation(line: 0, scope: !14796, inlinedAt: !15888)
!15888 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15886)
!15889 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15888)
!15890 = !DILocation(line: 896, column: 8, scope: !15872)
!15891 = !DILocation(line: 897, column: 1, scope: !15872)
!15892 = distinct !DISubprogram(name: "z_set_prio", scope: !2490, file: !2490, line: 902, type: !15081, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15893)
!15893 = !{!15894, !15895, !15896, !15897, !15899}
!15894 = !DILocalVariable(name: "thread", arg: 1, scope: !15892, file: !2490, line: 902, type: !2385)
!15895 = !DILocalVariable(name: "prio", arg: 2, scope: !15892, file: !2490, line: 902, type: !103)
!15896 = !DILocalVariable(name: "need_sched", scope: !15892, file: !2490, line: 904, type: !170)
!15897 = !DILocalVariable(name: "__i", scope: !15898, file: !2490, line: 906, type: !14753)
!15898 = distinct !DILexicalBlock(scope: !15892, file: !2490, line: 906, column: 2)
!15899 = !DILocalVariable(name: "__key", scope: !15898, file: !2490, line: 906, type: !14753)
!15900 = !DILocation(line: 0, scope: !15892)
!15901 = !DILocation(line: 0, scope: !15898)
!15902 = !DILocation(line: 0, scope: !14761, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 906, column: 2, scope: !15898)
!15904 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15903)
!15906 = !DILocation(line: 0, scope: !14770, inlinedAt: !15905)
!15907 = !DILocation(line: 907, column: 16, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15909, file: !2490, line: 906, column: 26)
!15909 = distinct !DILexicalBlock(scope: !15898, file: !2490, line: 906, column: 2)
!15910 = !DILocation(line: 909, column: 7, scope: !15908)
!15911 = !DILocation(line: 0, scope: !14930, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 912, column: 5, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15914, file: !2490, line: 911, column: 63)
!15914 = distinct !DILexicalBlock(scope: !15915, file: !2490, line: 911, column: 8)
!15915 = distinct !DILexicalBlock(scope: !15916, file: !2490, line: 909, column: 19)
!15916 = distinct !DILexicalBlock(scope: !15908, file: !2490, line: 909, column: 7)
!15917 = !DILocation(line: 266, column: 28, scope: !14930, inlinedAt: !15912)
!15918 = !DILocation(line: 0, scope: !14938, inlinedAt: !15919)
!15919 = distinct !DILocation(line: 268, column: 3, scope: !14942, inlinedAt: !15912)
!15920 = !DILocation(line: 234, column: 2, scope: !14938, inlinedAt: !15919)
!15921 = !DILocation(line: 913, column: 23, scope: !15913)
!15922 = !DILocation(line: 0, scope: !14947, inlinedAt: !15923)
!15923 = distinct !DILocation(line: 914, column: 5, scope: !15913)
!15924 = !DILocation(line: 252, column: 28, scope: !14947, inlinedAt: !15923)
!15925 = !DILocation(line: 0, scope: !14954, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 254, column: 3, scope: !14958, inlinedAt: !15923)
!15927 = !DILocation(line: 0, scope: !14961, inlinedAt: !15928)
!15928 = distinct !DILocation(line: 229, column: 2, scope: !14954, inlinedAt: !15926)
!15929 = !DILocation(line: 188, column: 2, scope: !14971, inlinedAt: !15928)
!15930 = !DILocation(line: 188, column: 2, scope: !14973, inlinedAt: !15928)
!15931 = !DILocation(line: 0, scope: !14971, inlinedAt: !15928)
!15932 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !15928)
!15933 = !DILocation(line: 189, column: 35, scope: !14976, inlinedAt: !15928)
!15934 = !DILocation(line: 189, column: 7, scope: !14977, inlinedAt: !15928)
!15935 = !DILocation(line: 190, column: 4, scope: !14981, inlinedAt: !15928)
!15936 = !DILocation(line: 192, column: 4, scope: !14981, inlinedAt: !15928)
!15937 = distinct !{!15937, !15929, !15938}
!15938 = !DILocation(line: 194, column: 2, scope: !14971, inlinedAt: !15928)
!15939 = !DILocation(line: 196, column: 2, scope: !14961, inlinedAt: !15928)
!15940 = !DILocation(line: 197, column: 1, scope: !14961, inlinedAt: !15928)
!15941 = !DILocation(line: 918, column: 4, scope: !15915)
!15942 = !DILocation(line: 919, column: 3, scope: !15915)
!15943 = !DILocation(line: 920, column: 22, scope: !15944)
!15944 = distinct !DILexicalBlock(scope: !15916, file: !2490, line: 919, column: 10)
!15945 = !DILocation(line: 0, scope: !14788, inlinedAt: !15946)
!15946 = distinct !DILocation(line: 906, column: 2, scope: !15909)
!15947 = !DILocation(line: 0, scope: !14796, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15946)
!15949 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15948)
!15950 = !DILocation(line: 926, column: 2, scope: !15892)
!15951 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2490, file: !2490, line: 929, type: !15952, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15954)
!15952 = !DISubroutineType(types: !15953)
!15953 = !{null, !2385, !103}
!15954 = !{!15955, !15956, !15957}
!15955 = !DILocalVariable(name: "thread", arg: 1, scope: !15951, file: !2490, line: 929, type: !2385)
!15956 = !DILocalVariable(name: "prio", arg: 2, scope: !15951, file: !2490, line: 929, type: !103)
!15957 = !DILocalVariable(name: "need_sched", scope: !15951, file: !2490, line: 931, type: !170)
!15958 = !DILocation(line: 0, scope: !15951)
!15959 = !DILocation(line: 931, column: 20, scope: !15951)
!15960 = !DILocation(line: 935, column: 17, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15951, file: !2490, line: 935, column: 6)
!15962 = !DILocation(line: 935, column: 20, scope: !15961)
!15963 = !DILocation(line: 935, column: 35, scope: !15961)
!15964 = !DILocation(line: 935, column: 48, scope: !15961)
!15965 = !DILocation(line: 935, column: 6, scope: !15951)
!15966 = !DILocation(line: 936, column: 3, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15961, file: !2490, line: 935, column: 55)
!15968 = !DILocation(line: 937, column: 2, scope: !15967)
!15969 = !DILocation(line: 938, column: 1, scope: !15951)
!15970 = distinct !DISubprogram(name: "k_sched_lock", scope: !2490, file: !2490, line: 987, type: !3217, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15971)
!15971 = !{!15972, !15974}
!15972 = !DILocalVariable(name: "__i", scope: !15973, file: !2490, line: 989, type: !14753)
!15973 = distinct !DILexicalBlock(scope: !15970, file: !2490, line: 989, column: 2)
!15974 = !DILocalVariable(name: "__key", scope: !15973, file: !2490, line: 989, type: !14753)
!15975 = !DILocation(line: 0, scope: !15973)
!15976 = !DILocation(line: 0, scope: !14761, inlinedAt: !15977)
!15977 = distinct !DILocation(line: 989, column: 2, scope: !15973)
!15978 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !15979)
!15979 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !15977)
!15980 = !DILocation(line: 0, scope: !14770, inlinedAt: !15979)
!15981 = !DILocation(line: 992, column: 3, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15983, file: !2490, line: 989, column: 26)
!15983 = distinct !DILexicalBlock(scope: !15973, file: !2490, line: 989, column: 2)
!15984 = !DILocation(line: 0, scope: !14788, inlinedAt: !15985)
!15985 = distinct !DILocation(line: 989, column: 2, scope: !15983)
!15986 = !DILocation(line: 0, scope: !14796, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !15985)
!15988 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !15987)
!15989 = !DILocation(line: 994, column: 1, scope: !15970)
!15990 = distinct !DISubprogram(name: "z_sched_lock", scope: !13769, file: !13769, line: 251, type: !3217, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!15991 = !DILocation(line: 256, column: 4, scope: !15990)
!15992 = !DILocation(line: 256, column: 19, scope: !15990)
!15993 = !DILocation(line: 256, column: 2, scope: !15990)
!15994 = !DILocation(line: 258, column: 2, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15990, file: !13769, line: 258, column: 2)
!15996 = !{i64 2152340687}
!15997 = !DILocation(line: 259, column: 1, scope: !15990)
!15998 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2490, file: !2490, line: 996, type: !3217, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !15999)
!15999 = !{!16000, !16002}
!16000 = !DILocalVariable(name: "__i", scope: !16001, file: !2490, line: 998, type: !14753)
!16001 = distinct !DILexicalBlock(scope: !15998, file: !2490, line: 998, column: 2)
!16002 = !DILocalVariable(name: "__key", scope: !16001, file: !2490, line: 998, type: !14753)
!16003 = !DILocation(line: 0, scope: !16001)
!16004 = !DILocation(line: 0, scope: !14761, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 998, column: 2, scope: !16001)
!16006 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !16005)
!16008 = !DILocation(line: 0, scope: !14770, inlinedAt: !16007)
!16009 = !DILocation(line: 1002, column: 5, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16011, file: !2490, line: 998, column: 26)
!16011 = distinct !DILexicalBlock(scope: !16001, file: !2490, line: 998, column: 2)
!16012 = !DILocation(line: 1002, column: 20, scope: !16010)
!16013 = !DILocation(line: 1002, column: 3, scope: !16010)
!16014 = !DILocation(line: 1003, column: 3, scope: !16010)
!16015 = !DILocation(line: 0, scope: !14788, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 998, column: 2, scope: !16011)
!16017 = !DILocation(line: 0, scope: !14796, inlinedAt: !16018)
!16018 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !16016)
!16019 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !16018)
!16020 = !DILocation(line: 1011, column: 2, scope: !15998)
!16021 = !DILocation(line: 1012, column: 1, scope: !15998)
!16022 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2490, file: !2490, line: 1014, type: !15069, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!16023 = !DILocation(line: 1028, column: 25, scope: !16022)
!16024 = !DILocation(line: 1028, column: 2, scope: !16022)
!16025 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2490, file: !2490, line: 1155, type: !16026, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16028)
!16026 = !DISubroutineType(types: !16027)
!16027 = !{!170, !2414, !2414}
!16028 = !{!16029, !16030, !16031, !16032, !16033}
!16029 = !DILocalVariable(name: "a", arg: 1, scope: !16025, file: !2490, line: 1155, type: !2414)
!16030 = !DILocalVariable(name: "b", arg: 2, scope: !16025, file: !2490, line: 1155, type: !2414)
!16031 = !DILocalVariable(name: "thread_a", scope: !16025, file: !2490, line: 1157, type: !2385)
!16032 = !DILocalVariable(name: "thread_b", scope: !16025, file: !2490, line: 1157, type: !2385)
!16033 = !DILocalVariable(name: "cmp", scope: !16025, file: !2490, line: 1158, type: !345)
!16034 = !DILocation(line: 0, scope: !16025)
!16035 = !DILocation(line: 1160, column: 13, scope: !16025)
!16036 = !DILocation(line: 1161, column: 13, scope: !16025)
!16037 = !DILocation(line: 1163, column: 8, scope: !16025)
!16038 = !DILocation(line: 1165, column: 10, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16025, file: !2490, line: 1165, column: 6)
!16040 = !DILocation(line: 1165, column: 6, scope: !16025)
!16041 = !DILocation(line: 1167, column: 17, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16039, file: !2490, line: 1167, column: 13)
!16043 = !DILocation(line: 1167, column: 13, scope: !16039)
!16044 = !DILocation(line: 1170, column: 25, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16042, file: !2490, line: 1169, column: 9)
!16046 = !DILocation(line: 1170, column: 52, scope: !16045)
!16047 = !DILocation(line: 1170, column: 35, scope: !16045)
!16048 = !DILocation(line: 1170, column: 3, scope: !16045)
!16049 = !DILocation(line: 0, scope: !16039)
!16050 = !DILocation(line: 1173, column: 1, scope: !16025)
!16051 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2490, file: !2490, line: 1175, type: !16052, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16067)
!16052 = !DISubroutineType(types: !16053)
!16053 = !{null, !16054, !2385}
!16054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16055, size: 32)
!16055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16056, line: 37, size: 128, elements: !16057)
!16056 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16057 = !{!16058, !16066}
!16058 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16055, file: !16056, line: 38, baseType: !16059, size: 96)
!16059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !393, line: 83, size: 96, elements: !16060)
!16060 = !{!16061, !16062, !16065}
!16061 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16059, file: !393, line: 84, baseType: !2414, size: 32)
!16062 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16059, file: !393, line: 85, baseType: !16063, size: 32, offset: 32)
!16063 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !393, line: 81, baseType: !16064)
!16064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16026, size: 32)
!16065 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16059, file: !393, line: 86, baseType: !103, size: 32, offset: 64)
!16066 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16055, file: !16056, line: 39, baseType: !103, size: 32, offset: 96)
!16067 = !{!16068, !16069, !16070, !16071, !16080}
!16068 = !DILocalVariable(name: "pq", arg: 1, scope: !16051, file: !2490, line: 1175, type: !16054)
!16069 = !DILocalVariable(name: "thread", arg: 2, scope: !16051, file: !2490, line: 1175, type: !2385)
!16070 = !DILocalVariable(name: "t", scope: !16051, file: !2490, line: 1177, type: !2385)
!16071 = !DILocalVariable(name: "__f", scope: !16072, file: !2490, line: 1190, type: !16075)
!16072 = distinct !DILexicalBlock(scope: !16073, file: !2490, line: 1190, column: 3)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !2490, line: 1189, column: 27)
!16074 = distinct !DILexicalBlock(scope: !16051, file: !2490, line: 1189, column: 6)
!16075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !393, line: 155, size: 96, elements: !16076)
!16076 = !{!16077, !16078, !16079}
!16077 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16075, file: !393, line: 156, baseType: !2485, size: 32)
!16078 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16075, file: !393, line: 157, baseType: !274, size: 32, offset: 32)
!16079 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16075, file: !393, line: 158, baseType: !345, size: 32, offset: 64)
!16080 = !DILocalVariable(name: "n", scope: !16081, file: !2490, line: 1190, type: !2414)
!16081 = distinct !DILexicalBlock(scope: !16082, file: !2490, line: 1190, column: 3)
!16082 = distinct !DILexicalBlock(scope: !16072, file: !2490, line: 1190, column: 3)
!16083 = !DILocation(line: 0, scope: !16051)
!16084 = !DILocation(line: 1181, column: 31, scope: !16051)
!16085 = !DILocation(line: 1181, column: 45, scope: !16051)
!16086 = !DILocation(line: 1181, column: 15, scope: !16051)
!16087 = !DILocation(line: 1181, column: 25, scope: !16051)
!16088 = !DILocation(line: 1189, column: 11, scope: !16074)
!16089 = !DILocation(line: 1189, column: 7, scope: !16074)
!16090 = !DILocation(line: 1189, column: 6, scope: !16051)
!16091 = !DILocation(line: 1190, column: 3, scope: !16072)
!16092 = !DILocation(line: 1190, column: 3, scope: !16081)
!16093 = !DILocation(line: 0, scope: !16081)
!16094 = !DILocation(line: 1190, column: 3, scope: !16082)
!16095 = !DILocation(line: 1193, column: 2, scope: !16073)
!16096 = !DILocation(line: 1191, column: 42, scope: !16097)
!16097 = distinct !DILexicalBlock(scope: !16082, file: !2490, line: 1190, column: 54)
!16098 = !DILocation(line: 1191, column: 12, scope: !16097)
!16099 = !DILocation(line: 1191, column: 22, scope: !16097)
!16100 = distinct !{!16100, !16091, !16101}
!16101 = !DILocation(line: 1192, column: 3, scope: !16072)
!16102 = !DILocation(line: 1195, column: 17, scope: !16051)
!16103 = !DILocation(line: 1195, column: 37, scope: !16051)
!16104 = !DILocation(line: 1195, column: 2, scope: !16051)
!16105 = !DILocation(line: 1196, column: 1, scope: !16051)
!16106 = !DISubprogram(name: "z_rb_foreach_next", scope: !393, file: !393, line: 176, type: !16107, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{!2414, !16109, !16110}
!16109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16059, size: 32)
!16110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16075, size: 32)
!16111 = !DISubprogram(name: "rb_insert", scope: !393, file: !393, line: 105, type: !16112, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!16112 = !DISubroutineType(types: !16113)
!16113 = !{null, !16109, !2414}
!16114 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2490, file: !2490, line: 1198, type: !16052, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16115)
!16115 = !{!16116, !16117}
!16116 = !DILocalVariable(name: "pq", arg: 1, scope: !16114, file: !2490, line: 1198, type: !16054)
!16117 = !DILocalVariable(name: "thread", arg: 2, scope: !16114, file: !2490, line: 1198, type: !2385)
!16118 = !DILocation(line: 0, scope: !16114)
!16119 = !DILocation(line: 1202, column: 17, scope: !16114)
!16120 = !DILocation(line: 1202, column: 37, scope: !16114)
!16121 = !DILocation(line: 1202, column: 2, scope: !16114)
!16122 = !DILocation(line: 1204, column: 16, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16114, file: !2490, line: 1204, column: 6)
!16124 = !DILocation(line: 1204, column: 7, scope: !16123)
!16125 = !DILocation(line: 1204, column: 6, scope: !16114)
!16126 = !DILocation(line: 1205, column: 7, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16123, file: !2490, line: 1204, column: 22)
!16128 = !DILocation(line: 1205, column: 22, scope: !16127)
!16129 = !DILocation(line: 1206, column: 2, scope: !16127)
!16130 = !DILocation(line: 1207, column: 1, scope: !16114)
!16131 = !DISubprogram(name: "rb_remove", scope: !393, file: !393, line: 110, type: !16112, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!16132 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2490, file: !2490, line: 1209, type: !16133, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16135)
!16133 = !DISubroutineType(types: !16134)
!16134 = !{!2385, !16054}
!16135 = !{!16136, !16137, !16138}
!16136 = !DILocalVariable(name: "pq", arg: 1, scope: !16132, file: !2490, line: 1209, type: !16054)
!16137 = !DILocalVariable(name: "thread", scope: !16132, file: !2490, line: 1211, type: !2385)
!16138 = !DILocalVariable(name: "n", scope: !16132, file: !2490, line: 1212, type: !2414)
!16139 = !DILocation(line: 0, scope: !16132)
!16140 = !DILocation(line: 1212, column: 37, scope: !16132)
!16141 = !DILocation(line: 1212, column: 21, scope: !16132)
!16142 = !DILocation(line: 1217, column: 2, scope: !16132)
!16143 = distinct !DISubprogram(name: "rb_get_min", scope: !393, file: !393, line: 115, type: !16144, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16146)
!16144 = !DISubroutineType(types: !16145)
!16145 = !{!2414, !16109}
!16146 = !{!16147}
!16147 = !DILocalVariable(name: "tree", arg: 1, scope: !16143, file: !393, line: 115, type: !16109)
!16148 = !DILocation(line: 0, scope: !16143)
!16149 = !DILocation(line: 117, column: 9, scope: !16143)
!16150 = !DILocation(line: 117, column: 2, scope: !16143)
!16151 = !DISubprogram(name: "z_rb_get_minmax", scope: !393, file: !393, line: 100, type: !16152, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !474)
!16152 = !DISubroutineType(types: !16153)
!16153 = !{!2414, !16109, !167}
!16154 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2490, file: !2490, line: 1246, type: !16155, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16163)
!16155 = !DISubroutineType(types: !16156)
!16156 = !{!2385, !16157}
!16157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16158, size: 32)
!16158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16056, line: 53, size: 2080, elements: !16159)
!16159 = !{!16160, !16162}
!16160 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16158, file: !16056, line: 54, baseType: !16161, size: 2048)
!16161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2421, size: 2048, elements: !908)
!16162 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16158, file: !16056, line: 55, baseType: !32, size: 32, offset: 2048)
!16163 = !{!16164, !16165, !16166, !16167}
!16164 = !DILocalVariable(name: "pq", arg: 1, scope: !16154, file: !2490, line: 1246, type: !16157)
!16165 = !DILocalVariable(name: "thread", scope: !16154, file: !2490, line: 1252, type: !2385)
!16166 = !DILocalVariable(name: "l", scope: !16154, file: !2490, line: 1253, type: !14964)
!16167 = !DILocalVariable(name: "n", scope: !16154, file: !2490, line: 1254, type: !2486)
!16168 = !DILocation(line: 0, scope: !16154)
!16169 = !DILocation(line: 1248, column: 11, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16154, file: !2490, line: 1248, column: 6)
!16171 = !DILocation(line: 1248, column: 7, scope: !16170)
!16172 = !DILocation(line: 1248, column: 6, scope: !16154)
!16173 = !DILocation(line: 1253, column: 31, scope: !16154)
!16174 = !DILocation(line: 1253, column: 20, scope: !16154)
!16175 = !DILocation(line: 1254, column: 19, scope: !16154)
!16176 = !DILocation(line: 1260, column: 1, scope: !16154)
!16177 = distinct !DISubprogram(name: "z_unpend_all", scope: !2490, file: !2490, line: 1262, type: !16178, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16180)
!16178 = !DISubroutineType(types: !16179)
!16179 = !{!103, !2416}
!16180 = !{!16181, !16182, !16183}
!16181 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16177, file: !2490, line: 1262, type: !2416)
!16182 = !DILocalVariable(name: "need_sched", scope: !16177, file: !2490, line: 1264, type: !103)
!16183 = !DILocalVariable(name: "thread", scope: !16177, file: !2490, line: 1265, type: !2385)
!16184 = !DILocation(line: 0, scope: !16177)
!16185 = !DILocation(line: 1267, column: 19, scope: !16177)
!16186 = !DILocation(line: 1267, column: 41, scope: !16177)
!16187 = !DILocation(line: 1267, column: 2, scope: !16177)
!16188 = !DILocation(line: 1268, column: 3, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16177, file: !2490, line: 1267, column: 50)
!16190 = !DILocation(line: 1269, column: 3, scope: !16189)
!16191 = distinct !{!16191, !16187, !16192}
!16192 = !DILocation(line: 1271, column: 2, scope: !16177)
!16193 = !DILocation(line: 1273, column: 2, scope: !16177)
!16194 = distinct !DISubprogram(name: "z_waitq_head", scope: !14095, file: !14095, line: 52, type: !15812, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16195)
!16195 = !{!16196}
!16196 = !DILocalVariable(name: "w", arg: 1, scope: !16194, file: !14095, line: 52, type: !2416)
!16197 = !DILocation(line: 0, scope: !16194)
!16198 = !DILocation(line: 54, column: 52, scope: !16194)
!16199 = !DILocation(line: 54, column: 28, scope: !16194)
!16200 = !DILocation(line: 54, column: 9, scope: !16194)
!16201 = !DILocation(line: 54, column: 2, scope: !16194)
!16202 = distinct !DISubprogram(name: "init_ready_q", scope: !2490, file: !2490, line: 1276, type: !16203, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16210)
!16203 = !DISubroutineType(types: !16204)
!16204 = !{null, !16205}
!16205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16206, size: 32)
!16206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !317, line: 83, size: 96, elements: !16207)
!16207 = !{!16208, !16209}
!16208 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16206, file: !317, line: 86, baseType: !2385, size: 32)
!16209 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16206, file: !317, line: 90, baseType: !2421, size: 64, offset: 32)
!16210 = !{!16211}
!16211 = !DILocalVariable(name: "rq", arg: 1, scope: !16202, file: !2490, line: 1276, type: !16205)
!16212 = !DILocation(line: 0, scope: !16202)
!16213 = !DILocation(line: 1289, column: 22, scope: !16202)
!16214 = !DILocation(line: 1289, column: 2, scope: !16202)
!16215 = !DILocation(line: 1291, column: 1, scope: !16202)
!16216 = distinct !DISubprogram(name: "sys_dlist_init", scope: !322, file: !322, line: 197, type: !16217, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16219)
!16217 = !DISubroutineType(types: !16218)
!16218 = !{null, !14964}
!16219 = !{!16220}
!16220 = !DILocalVariable(name: "list", arg: 1, scope: !16216, file: !322, line: 197, type: !14964)
!16221 = !DILocation(line: 0, scope: !16216)
!16222 = !DILocation(line: 199, column: 8, scope: !16216)
!16223 = !DILocation(line: 199, column: 13, scope: !16216)
!16224 = !DILocation(line: 200, column: 8, scope: !16216)
!16225 = !DILocation(line: 200, column: 13, scope: !16216)
!16226 = !DILocation(line: 201, column: 1, scope: !16216)
!16227 = distinct !DISubprogram(name: "z_sched_init", scope: !2490, file: !2490, line: 1293, type: !3217, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!16228 = !DILocation(line: 1302, column: 2, scope: !16227)
!16229 = !DILocation(line: 1306, column: 2, scope: !16227)
!16230 = !DILocation(line: 1309, column: 1, scope: !16227)
!16231 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2490, file: !2490, line: 1311, type: !16232, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16235)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{!103, !16234}
!16234 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !368, line: 347, baseType: !2385)
!16235 = !{!16236}
!16236 = !DILocalVariable(name: "thread", arg: 1, scope: !16231, file: !2490, line: 1311, type: !16234)
!16237 = !DILocation(line: 0, scope: !16231)
!16238 = !DILocation(line: 1313, column: 22, scope: !16231)
!16239 = !DILocation(line: 1313, column: 9, scope: !16231)
!16240 = !DILocation(line: 1313, column: 2, scope: !16231)
!16241 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2490, file: !2490, line: 1325, type: !16242, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16244)
!16242 = !DISubroutineType(types: !16243)
!16243 = !{null, !16234, !103}
!16244 = !{!16245, !16246, !16247}
!16245 = !DILocalVariable(name: "thread", arg: 1, scope: !16241, file: !2490, line: 1325, type: !16234)
!16246 = !DILocalVariable(name: "prio", arg: 2, scope: !16241, file: !2490, line: 1325, type: !103)
!16247 = !DILocalVariable(name: "th", scope: !16241, file: !2490, line: 1334, type: !2385)
!16248 = !DILocation(line: 0, scope: !16241)
!16249 = !DILocation(line: 1336, column: 2, scope: !16241)
!16250 = !DILocation(line: 1337, column: 1, scope: !16241)
!16251 = distinct !DISubprogram(name: "k_can_yield", scope: !2490, file: !2490, line: 1384, type: !7555, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!16252 = !DILocation(line: 1386, column: 11, scope: !16251)
!16253 = !DILocation(line: 1386, column: 29, scope: !16251)
!16254 = !DILocation(line: 1386, column: 32, scope: !16251)
!16255 = !DILocation(line: 1386, column: 46, scope: !16251)
!16256 = !DILocation(line: 1387, column: 28, scope: !16251)
!16257 = !DILocation(line: 1387, column: 4, scope: !16251)
!16258 = !DILocation(line: 1386, column: 2, scope: !16251)
!16259 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !313, file: !313, line: 989, type: !7555, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!16260 = !DILocation(line: 993, column: 10, scope: !16259)
!16261 = !DILocation(line: 993, column: 2, scope: !16259)
!16262 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2490, file: !2490, line: 1390, type: !3217, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16263)
!16263 = !{!16264}
!16264 = !DILocalVariable(name: "key", scope: !16262, file: !2490, line: 1396, type: !14753)
!16265 = !DILocation(line: 0, scope: !14761, inlinedAt: !16266)
!16266 = distinct !DILocation(line: 1396, column: 25, scope: !16262)
!16267 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !16268)
!16268 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !16266)
!16269 = !DILocation(line: 0, scope: !14770, inlinedAt: !16268)
!16270 = !DILocation(line: 0, scope: !16262)
!16271 = !DILocation(line: 1400, column: 18, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16273, file: !2490, line: 1399, column: 36)
!16273 = distinct !DILexicalBlock(scope: !16262, file: !2490, line: 1398, column: 6)
!16274 = !DILocation(line: 0, scope: !14930, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 1400, column: 3, scope: !16272)
!16276 = !DILocation(line: 266, column: 15, scope: !14930, inlinedAt: !16275)
!16277 = !DILocation(line: 266, column: 28, scope: !14930, inlinedAt: !16275)
!16278 = !DILocation(line: 0, scope: !14938, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 268, column: 3, scope: !14942, inlinedAt: !16275)
!16280 = !DILocation(line: 234, column: 2, scope: !14938, inlinedAt: !16279)
!16281 = !DILocation(line: 1402, column: 15, scope: !16262)
!16282 = !DILocation(line: 0, scope: !14947, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 1402, column: 2, scope: !16262)
!16284 = !DILocation(line: 252, column: 15, scope: !14947, inlinedAt: !16283)
!16285 = !DILocation(line: 252, column: 28, scope: !14947, inlinedAt: !16283)
!16286 = !DILocation(line: 0, scope: !14954, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 254, column: 3, scope: !14958, inlinedAt: !16283)
!16288 = !DILocation(line: 0, scope: !14961, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 229, column: 2, scope: !14954, inlinedAt: !16287)
!16290 = !DILocation(line: 188, column: 2, scope: !14971, inlinedAt: !16289)
!16291 = !DILocation(line: 188, column: 2, scope: !14973, inlinedAt: !16289)
!16292 = !DILocation(line: 0, scope: !14971, inlinedAt: !16289)
!16293 = !DILocation(line: 189, column: 7, scope: !14976, inlinedAt: !16289)
!16294 = !DILocation(line: 189, column: 35, scope: !14976, inlinedAt: !16289)
!16295 = !DILocation(line: 189, column: 7, scope: !14977, inlinedAt: !16289)
!16296 = !DILocation(line: 191, column: 21, scope: !14981, inlinedAt: !16289)
!16297 = !DILocation(line: 190, column: 4, scope: !14981, inlinedAt: !16289)
!16298 = !DILocation(line: 192, column: 4, scope: !14981, inlinedAt: !16289)
!16299 = distinct !{!16299, !16290, !16300}
!16300 = !DILocation(line: 194, column: 2, scope: !14971, inlinedAt: !16289)
!16301 = !DILocation(line: 196, column: 37, scope: !14961, inlinedAt: !16289)
!16302 = !DILocation(line: 196, column: 2, scope: !14961, inlinedAt: !16289)
!16303 = !DILocation(line: 197, column: 1, scope: !14961, inlinedAt: !16289)
!16304 = !DILocation(line: 1403, column: 2, scope: !16262)
!16305 = !DILocation(line: 0, scope: !15372, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 1404, column: 2, scope: !16262)
!16307 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16306)
!16308 = !DILocation(line: 1405, column: 1, scope: !16262)
!16309 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2490, file: !2490, line: 1459, type: !16310, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16312)
!16310 = !DISubroutineType(types: !16311)
!16311 = !{!345, !15552}
!16312 = !{!16313, !16314, !16315}
!16313 = !DILocalVariable(name: "timeout", arg: 1, scope: !16309, file: !2490, line: 1459, type: !15552)
!16314 = !DILocalVariable(name: "ticks", scope: !16309, file: !2490, line: 1461, type: !1738)
!16315 = !DILocalVariable(name: "ret", scope: !16309, file: !2490, line: 1480, type: !345)
!16316 = !DILocation(line: 0, scope: !16309)
!16317 = !DILocation(line: 1468, column: 6, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16309, file: !2490, line: 1468, column: 6)
!16319 = !DILocation(line: 1468, column: 6, scope: !16309)
!16320 = !DILocation(line: 1469, column: 20, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16318, file: !2490, line: 1468, column: 40)
!16322 = !DILocation(line: 1469, column: 3, scope: !16321)
!16323 = !DILocation(line: 1473, column: 3, scope: !16321)
!16324 = !DILocation(line: 1478, column: 10, scope: !16309)
!16325 = !DILocation(line: 1480, column: 16, scope: !16309)
!16326 = !DILocation(line: 1485, column: 1, scope: !16309)
!16327 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3650, file: !3650, line: 310, type: !16328, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16330)
!16328 = !DISubroutineType(types: !16329)
!16329 = !{null, !16234}
!16330 = !{!16331}
!16331 = !DILocalVariable(name: "thread", arg: 1, scope: !16327, file: !3650, line: 310, type: !16234)
!16332 = !DILocation(line: 0, scope: !16327)
!16333 = !DILocation(line: 319, column: 2, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16327, file: !3650, line: 319, column: 2)
!16335 = !{i64 2152259076}
!16336 = !DILocation(line: 320, column: 2, scope: !16327)
!16337 = !DILocation(line: 321, column: 1, scope: !16327)
!16338 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2490, file: !2490, line: 1415, type: !16339, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16341)
!16339 = !DISubroutineType(types: !16340)
!16340 = !{!345, !1738}
!16341 = !{!16342, !16343, !16344, !16345}
!16342 = !DILocalVariable(name: "ticks", arg: 1, scope: !16338, file: !2490, line: 1415, type: !1738)
!16343 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16338, file: !2490, line: 1418, type: !121)
!16344 = !DILocalVariable(name: "timeout", scope: !16338, file: !2490, line: 1430, type: !15552)
!16345 = !DILocalVariable(name: "key", scope: !16338, file: !2490, line: 1437, type: !14753)
!16346 = !DILocation(line: 0, scope: !16338)
!16347 = !DILocation(line: 1425, column: 12, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16338, file: !2490, line: 1425, column: 6)
!16349 = !DILocation(line: 1425, column: 6, scope: !16338)
!16350 = !DILocation(line: 1426, column: 3, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16348, file: !2490, line: 1425, column: 18)
!16352 = !DILocation(line: 1427, column: 3, scope: !16351)
!16353 = !DILocation(line: 1431, column: 24, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16338, file: !2490, line: 1431, column: 6)
!16355 = !DILocation(line: 1431, column: 6, scope: !16338)
!16356 = !DILocation(line: 1432, column: 35, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16354, file: !2490, line: 1431, column: 30)
!16358 = !DILocation(line: 1432, column: 27, scope: !16357)
!16359 = !DILocation(line: 1433, column: 2, scope: !16357)
!16360 = !DILocation(line: 1434, column: 27, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16354, file: !2490, line: 1433, column: 9)
!16362 = !DILocation(line: 0, scope: !16354)
!16363 = !DILocation(line: 0, scope: !14761, inlinedAt: !16364)
!16364 = distinct !DILocation(line: 1437, column: 25, scope: !16338)
!16365 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !16364)
!16367 = !DILocation(line: 0, scope: !14770, inlinedAt: !16366)
!16368 = !DILocation(line: 1440, column: 20, scope: !16338)
!16369 = !DILocation(line: 1440, column: 18, scope: !16338)
!16370 = !DILocation(line: 1442, column: 2, scope: !16338)
!16371 = !DILocation(line: 1443, column: 23, scope: !16338)
!16372 = !DILocation(line: 1443, column: 2, scope: !16338)
!16373 = !DILocation(line: 1444, column: 29, scope: !16338)
!16374 = !DILocation(line: 1444, column: 2, scope: !16338)
!16375 = !DILocation(line: 0, scope: !15372, inlinedAt: !16376)
!16376 = distinct !DILocation(line: 1446, column: 8, scope: !16338)
!16377 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16376)
!16378 = !DILocation(line: 1450, column: 10, scope: !16338)
!16379 = !DILocation(line: 1450, column: 45, scope: !16338)
!16380 = !DILocation(line: 1450, column: 43, scope: !16338)
!16381 = !DILocation(line: 1451, column: 6, scope: !16338)
!16382 = !DILocation(line: 1457, column: 1, scope: !16338)
!16383 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !5978, file: !5978, line: 1103, type: !5979, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16384)
!16384 = !{!16385}
!16385 = !DILocalVariable(name: "t", arg: 1, scope: !16383, file: !5978, line: 1103, type: !2341)
!16386 = !DILocation(line: 0, scope: !16383)
!16387 = !DILocation(line: 0, scope: !14808, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 1106, column: 9, scope: !16383)
!16389 = !DILocation(line: 139, column: 13, scope: !16390, inlinedAt: !16388)
!16390 = distinct !DILexicalBlock(scope: !16391, file: !5978, line: 138, column: 10)
!16391 = distinct !DILexicalBlock(scope: !16392, file: !5978, line: 136, column: 7)
!16392 = distinct !DILexicalBlock(scope: !14829, file: !5978, line: 134, column: 17)
!16393 = !DILocation(line: 1106, column: 2, scope: !16383)
!16394 = distinct !DISubprogram(name: "k_yield", scope: !3650, file: !3650, line: 140, type: !3217, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!16395 = !DILocation(line: 148, column: 2, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16394, file: !3650, line: 148, column: 2)
!16397 = !{i64 2152258396}
!16398 = !DILocation(line: 149, column: 2, scope: !16394)
!16399 = !DILocation(line: 150, column: 1, scope: !16394)
!16400 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2490, file: !2490, line: 1495, type: !16401, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16403)
!16401 = !DISubroutineType(types: !16402)
!16402 = !{!345, !103}
!16403 = !{!16404, !16405}
!16404 = !DILocalVariable(name: "us", arg: 1, scope: !16400, file: !2490, line: 1495, type: !103)
!16405 = !DILocalVariable(name: "ticks", scope: !16400, file: !2490, line: 1497, type: !345)
!16406 = !DILocation(line: 0, scope: !16400)
!16407 = !DILocation(line: 1501, column: 31, scope: !16400)
!16408 = !DILocation(line: 1501, column: 10, scope: !16400)
!16409 = !DILocation(line: 1502, column: 23, scope: !16400)
!16410 = !DILocation(line: 1502, column: 10, scope: !16400)
!16411 = !DILocation(line: 1506, column: 31, scope: !16400)
!16412 = !DILocation(line: 1506, column: 9, scope: !16400)
!16413 = !DILocation(line: 1506, column: 2, scope: !16400)
!16414 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !5978, file: !5978, line: 571, type: !5979, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16415)
!16415 = !{!16416}
!16416 = !DILocalVariable(name: "t", arg: 1, scope: !16414, file: !5978, line: 571, type: !2341)
!16417 = !DILocation(line: 0, scope: !16414)
!16418 = !DILocation(line: 0, scope: !14808, inlinedAt: !16419)
!16419 = distinct !DILocation(line: 574, column: 9, scope: !16414)
!16420 = !DILocation(line: 135, column: 5, scope: !16392, inlinedAt: !16419)
!16421 = !DILocation(line: 139, column: 13, scope: !16390, inlinedAt: !16419)
!16422 = !DILocation(line: 574, column: 2, scope: !16414)
!16423 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !5978, file: !5978, line: 1187, type: !5979, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16424)
!16424 = !{!16425}
!16425 = !DILocalVariable(name: "t", arg: 1, scope: !16423, file: !5978, line: 1187, type: !2341)
!16426 = !DILocation(line: 0, scope: !16423)
!16427 = !DILocation(line: 0, scope: !14808, inlinedAt: !16428)
!16428 = distinct !DILocation(line: 1190, column: 9, scope: !16423)
!16429 = !DILocation(line: 145, column: 13, scope: !16430, inlinedAt: !16428)
!16430 = distinct !DILexicalBlock(scope: !14826, file: !5978, line: 144, column: 10)
!16431 = !DILocation(line: 1190, column: 2, scope: !16423)
!16432 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2490, file: !2490, line: 1517, type: !16328, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16433)
!16433 = !{!16434}
!16434 = !DILocalVariable(name: "thread", arg: 1, scope: !16432, file: !2490, line: 1517, type: !16234)
!16435 = !DILocation(line: 0, scope: !16432)
!16436 = !DILocation(line: 1521, column: 6, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16432, file: !2490, line: 1521, column: 6)
!16438 = !DILocation(line: 1521, column: 6, scope: !16432)
!16439 = !DILocation(line: 1525, column: 6, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16432, file: !2490, line: 1525, column: 6)
!16441 = !DILocation(line: 1525, column: 37, scope: !16440)
!16442 = !DILocation(line: 1525, column: 6, scope: !16432)
!16443 = !DILocation(line: 1527, column: 20, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16445, file: !2490, line: 1527, column: 7)
!16445 = distinct !DILexicalBlock(scope: !16440, file: !2490, line: 1525, column: 42)
!16446 = !DILocation(line: 1527, column: 33, scope: !16444)
!16447 = !DILocation(line: 1527, column: 7, scope: !16445)
!16448 = !DILocation(line: 1532, column: 2, scope: !16432)
!16449 = !DILocation(line: 1533, column: 2, scope: !16432)
!16450 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 1537, column: 7, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16432, file: !2490, line: 1537, column: 6)
!16454 = !DILocation(line: 0, scope: !15405, inlinedAt: !16451)
!16455 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16452)
!16456 = !DILocation(line: 1537, column: 6, scope: !16432)
!16457 = !DILocation(line: 1538, column: 3, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16453, file: !2490, line: 1537, column: 25)
!16459 = !DILocation(line: 1539, column: 2, scope: !16458)
!16460 = !DILocation(line: 1540, column: 1, scope: !16432)
!16461 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13769, file: !13769, line: 101, type: !14879, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16462)
!16462 = !{!16463}
!16463 = !DILocalVariable(name: "thread", arg: 1, scope: !16461, file: !13769, line: 101, type: !2385)
!16464 = !DILocation(line: 0, scope: !16461)
!16465 = !DILocation(line: 103, column: 23, scope: !16461)
!16466 = !DILocation(line: 103, column: 36, scope: !16461)
!16467 = !DILocation(line: 103, column: 55, scope: !16461)
!16468 = !DILocation(line: 103, column: 2, scope: !16461)
!16469 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2490, file: !2490, line: 1567, type: !16470, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16472)
!16470 = !DISubroutineType(types: !16471)
!16471 = !{!16234}
!16472 = !{!16473}
!16473 = !DILocalVariable(name: "ret", scope: !16469, file: !2490, line: 1577, type: !16234)
!16474 = !DILocation(line: 1577, column: 30, scope: !16469)
!16475 = !DILocation(line: 0, scope: !16469)
!16476 = !DILocation(line: 1582, column: 2, scope: !16469)
!16477 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2490, file: !2490, line: 1593, type: !6602, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !474)
!16478 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16479)
!16479 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 1595, column: 10, scope: !16477)
!16481 = !DILocation(line: 0, scope: !15405, inlinedAt: !16479)
!16482 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16480)
!16483 = !DILocation(line: 1595, column: 27, scope: !16477)
!16484 = !DILocation(line: 1595, column: 41, scope: !16477)
!16485 = !DILocation(line: 1595, column: 30, scope: !16477)
!16486 = !DILocation(line: 1595, column: 2, scope: !16477)
!16487 = distinct !DISubprogram(name: "z_thread_abort", scope: !2490, file: !2490, line: 1725, type: !14719, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16488)
!16488 = !{!16489, !16490}
!16489 = !DILocalVariable(name: "thread", arg: 1, scope: !16487, file: !2490, line: 1725, type: !2385)
!16490 = !DILocalVariable(name: "key", scope: !16487, file: !2490, line: 1727, type: !14753)
!16491 = !DILocation(line: 0, scope: !16487)
!16492 = !DILocation(line: 0, scope: !14761, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 1727, column: 25, scope: !16487)
!16494 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !16493)
!16496 = !DILocation(line: 0, scope: !14770, inlinedAt: !16495)
!16497 = !DILocation(line: 1729, column: 20, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16487, file: !2490, line: 1729, column: 6)
!16499 = !DILocation(line: 1729, column: 33, scope: !16498)
!16500 = !DILocation(line: 1729, column: 48, scope: !16498)
!16501 = !DILocation(line: 1729, column: 6, scope: !16487)
!16502 = !DILocation(line: 0, scope: !14788, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 1730, column: 3, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16498, file: !2490, line: 1729, column: 54)
!16505 = !DILocation(line: 0, scope: !14796, inlinedAt: !16506)
!16506 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !16503)
!16507 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !16506)
!16508 = !DILocation(line: 1732, column: 3, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16504, file: !2490, line: 1732, column: 3)
!16510 = !{i64 2152995806, i64 2152995822, i64 2152995848, i64 2152995876, i64 2152995896}
!16511 = !DILocation(line: 1733, column: 3, scope: !16504)
!16512 = !DILocation(line: 1736, column: 20, scope: !16513)
!16513 = distinct !DILexicalBlock(scope: !16487, file: !2490, line: 1736, column: 6)
!16514 = !DILocation(line: 1736, column: 33, scope: !16513)
!16515 = !DILocation(line: 1736, column: 49, scope: !16513)
!16516 = !DILocation(line: 1736, column: 6, scope: !16487)
!16517 = !DILocation(line: 0, scope: !14788, inlinedAt: !16518)
!16518 = distinct !DILocation(line: 1737, column: 3, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16513, file: !2490, line: 1736, column: 56)
!16520 = !DILocation(line: 0, scope: !14796, inlinedAt: !16521)
!16521 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !16518)
!16522 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !16521)
!16523 = !DILocation(line: 1738, column: 3, scope: !16519)
!16524 = !DILocation(line: 1775, column: 2, scope: !16487)
!16525 = !DILocation(line: 1776, column: 16, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16487, file: !2490, line: 1776, column: 6)
!16527 = !DILocation(line: 1776, column: 13, scope: !16526)
!16528 = !DILocation(line: 1776, column: 25, scope: !16526)
!16529 = !DILocation(line: 1031, column: 3, scope: !15405, inlinedAt: !16530)
!16530 = distinct !DILocation(line: 48, column: 10, scope: !15409, inlinedAt: !16531)
!16531 = distinct !DILocation(line: 1776, column: 29, scope: !16526)
!16532 = !DILocation(line: 0, scope: !15405, inlinedAt: !16530)
!16533 = !DILocation(line: 48, column: 9, scope: !15409, inlinedAt: !16531)
!16534 = !DILocation(line: 1776, column: 6, scope: !16487)
!16535 = !DILocation(line: 0, scope: !15372, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 1777, column: 3, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16526, file: !2490, line: 1776, column: 47)
!16538 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16536)
!16539 = !DILocation(line: 1779, column: 2, scope: !16537)
!16540 = !DILocation(line: 0, scope: !14788, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 1780, column: 2, scope: !16487)
!16542 = !DILocation(line: 0, scope: !14796, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !16541)
!16544 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !16543)
!16545 = !DILocation(line: 1781, column: 1, scope: !16487)
!16546 = distinct !DISubprogram(name: "end_thread", scope: !2490, file: !2490, line: 1690, type: !14719, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16547)
!16547 = !{!16548}
!16548 = !DILocalVariable(name: "thread", arg: 1, scope: !16546, file: !2490, line: 1690, type: !2385)
!16549 = !DILocation(line: 0, scope: !16546)
!16550 = !DILocation(line: 1695, column: 20, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16546, file: !2490, line: 1695, column: 6)
!16552 = !DILocation(line: 1695, column: 33, scope: !16551)
!16553 = !DILocation(line: 1695, column: 49, scope: !16551)
!16554 = !DILocation(line: 1695, column: 6, scope: !16546)
!16555 = !DILocation(line: 1697, column: 29, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16551, file: !2490, line: 1695, column: 56)
!16557 = !DILocation(line: 1698, column: 7, scope: !16558)
!16558 = distinct !DILexicalBlock(scope: !16556, file: !2490, line: 1698, column: 7)
!16559 = !DILocation(line: 1698, column: 7, scope: !16556)
!16560 = !DILocation(line: 0, scope: !14930, inlinedAt: !16561)
!16561 = distinct !DILocation(line: 1699, column: 4, scope: !16562)
!16562 = distinct !DILexicalBlock(scope: !16558, file: !2490, line: 1698, column: 35)
!16563 = !DILocation(line: 266, column: 28, scope: !14930, inlinedAt: !16561)
!16564 = !DILocation(line: 0, scope: !14938, inlinedAt: !16565)
!16565 = distinct !DILocation(line: 268, column: 3, scope: !14942, inlinedAt: !16561)
!16566 = !DILocation(line: 234, column: 2, scope: !14938, inlinedAt: !16565)
!16567 = !DILocation(line: 1700, column: 3, scope: !16562)
!16568 = !DILocation(line: 1701, column: 20, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16556, file: !2490, line: 1701, column: 7)
!16570 = !DILocation(line: 1701, column: 30, scope: !16569)
!16571 = !DILocation(line: 1701, column: 7, scope: !16556)
!16572 = !DILocation(line: 1702, column: 4, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16569, file: !2490, line: 1701, column: 39)
!16574 = !DILocation(line: 1703, column: 3, scope: !16573)
!16575 = !DILocation(line: 1704, column: 9, scope: !16556)
!16576 = !DILocation(line: 1705, column: 23, scope: !16556)
!16577 = !DILocation(line: 1705, column: 3, scope: !16556)
!16578 = !DILocation(line: 1706, column: 3, scope: !16556)
!16579 = !DILocation(line: 1722, column: 2, scope: !16556)
!16580 = !DILocation(line: 1723, column: 1, scope: !16546)
!16581 = distinct !DISubprogram(name: "unpend_all", scope: !2490, file: !2490, line: 1674, type: !16582, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16584)
!16582 = !DISubroutineType(types: !16583)
!16583 = !{null, !2416}
!16584 = !{!16585, !16586}
!16585 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16581, file: !2490, line: 1674, type: !2416)
!16586 = !DILocalVariable(name: "thread", scope: !16581, file: !2490, line: 1676, type: !2385)
!16587 = !DILocation(line: 0, scope: !16581)
!16588 = !DILocation(line: 1678, column: 19, scope: !16581)
!16589 = !DILocation(line: 1678, column: 41, scope: !16581)
!16590 = !DILocation(line: 1678, column: 2, scope: !16581)
!16591 = !DILocation(line: 1679, column: 3, scope: !16592)
!16592 = distinct !DILexicalBlock(scope: !16581, file: !2490, line: 1678, column: 50)
!16593 = !DILocation(line: 1680, column: 9, scope: !16592)
!16594 = !DILocalVariable(name: "thread", arg: 1, scope: !16595, file: !13789, line: 65, type: !2385)
!16595 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13789, file: !13789, line: 65, type: !16596, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16598)
!16596 = !DISubroutineType(types: !16597)
!16597 = !{null, !2385, !32}
!16598 = !{!16594, !16599}
!16599 = !DILocalVariable(name: "value", arg: 2, scope: !16595, file: !13789, line: 65, type: !32)
!16600 = !DILocation(line: 0, scope: !16595, inlinedAt: !16601)
!16601 = distinct !DILocation(line: 1681, column: 3, scope: !16592)
!16602 = !DILocation(line: 67, column: 15, scope: !16595, inlinedAt: !16601)
!16603 = !DILocation(line: 67, column: 33, scope: !16595, inlinedAt: !16601)
!16604 = !DILocation(line: 1682, column: 3, scope: !16592)
!16605 = distinct !{!16605, !16590, !16606}
!16606 = !DILocation(line: 1683, column: 2, scope: !16581)
!16607 = !DILocation(line: 1684, column: 1, scope: !16581)
!16608 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2490, file: !2490, line: 1794, type: !16609, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16611)
!16609 = !DISubroutineType(types: !16610)
!16610 = !{!103, !2385, !15552}
!16611 = !{!16612, !16613, !16614, !16615}
!16612 = !DILocalVariable(name: "thread", arg: 1, scope: !16608, file: !2490, line: 1794, type: !2385)
!16613 = !DILocalVariable(name: "timeout", arg: 2, scope: !16608, file: !2490, line: 1794, type: !15552)
!16614 = !DILocalVariable(name: "key", scope: !16608, file: !2490, line: 1796, type: !14753)
!16615 = !DILocalVariable(name: "ret", scope: !16608, file: !2490, line: 1797, type: !103)
!16616 = !DILocation(line: 0, scope: !16608)
!16617 = !DILocation(line: 0, scope: !14761, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 1796, column: 25, scope: !16608)
!16619 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !16618)
!16621 = !DILocation(line: 0, scope: !14770, inlinedAt: !16620)
!16622 = !DILocation(line: 1801, column: 20, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16608, file: !2490, line: 1801, column: 6)
!16624 = !DILocation(line: 1801, column: 33, scope: !16623)
!16625 = !DILocation(line: 1801, column: 49, scope: !16623)
!16626 = !DILocation(line: 1801, column: 6, scope: !16608)
!16627 = !DILocation(line: 1803, column: 13, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16623, file: !2490, line: 1803, column: 13)
!16629 = !DILocation(line: 1803, column: 13, scope: !16623)
!16630 = !DILocation(line: 1805, column: 24, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16628, file: !2490, line: 1805, column: 13)
!16632 = !DILocation(line: 1805, column: 21, scope: !16631)
!16633 = !DILocation(line: 1805, column: 34, scope: !16631)
!16634 = !DILocation(line: 1806, column: 20, scope: !16631)
!16635 = !DILocation(line: 1806, column: 44, scope: !16631)
!16636 = !DILocation(line: 1806, column: 30, scope: !16631)
!16637 = !DILocation(line: 1805, column: 13, scope: !16628)
!16638 = !DILocation(line: 1810, column: 42, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16631, file: !2490, line: 1808, column: 9)
!16640 = !DILocation(line: 1810, column: 3, scope: !16639)
!16641 = !DILocation(line: 1811, column: 22, scope: !16639)
!16642 = !DILocation(line: 1811, column: 3, scope: !16639)
!16643 = !DILocation(line: 0, scope: !15372, inlinedAt: !16644)
!16644 = distinct !DILocation(line: 1814, column: 9, scope: !16639)
!16645 = !DILocation(line: 196, column: 9, scope: !15372, inlinedAt: !16644)
!16646 = !DILocation(line: 1817, column: 3, scope: !16639)
!16647 = !DILocation(line: 0, scope: !16623)
!16648 = !DILocation(line: 0, scope: !14788, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 1822, column: 2, scope: !16608)
!16650 = !DILocation(line: 0, scope: !14796, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !16649)
!16652 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !16651)
!16653 = !DILocation(line: 1823, column: 2, scope: !16608)
!16654 = !DILocation(line: 1824, column: 1, scope: !16608)
!16655 = distinct !DISubprogram(name: "z_sched_wake", scope: !2490, file: !2490, line: 1882, type: !16656, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16658)
!16656 = !DISubroutineType(types: !16657)
!16657 = !{!170, !2416, !103, !102}
!16658 = !{!16659, !16660, !16661, !16662, !16663, !16664, !16666}
!16659 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16655, file: !2490, line: 1882, type: !2416)
!16660 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16655, file: !2490, line: 1882, type: !103)
!16661 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16655, file: !2490, line: 1882, type: !102)
!16662 = !DILocalVariable(name: "thread", scope: !16655, file: !2490, line: 1884, type: !2385)
!16663 = !DILocalVariable(name: "ret", scope: !16655, file: !2490, line: 1885, type: !170)
!16664 = !DILocalVariable(name: "__i", scope: !16665, file: !2490, line: 1887, type: !14753)
!16665 = distinct !DILexicalBlock(scope: !16655, file: !2490, line: 1887, column: 2)
!16666 = !DILocalVariable(name: "__key", scope: !16665, file: !2490, line: 1887, type: !14753)
!16667 = !DILocation(line: 0, scope: !16655)
!16668 = !DILocation(line: 0, scope: !16665)
!16669 = !DILocation(line: 0, scope: !14761, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 1887, column: 2, scope: !16665)
!16671 = !DILocation(line: 55, column: 2, scope: !14770, inlinedAt: !16672)
!16672 = distinct !DILocation(line: 145, column: 10, scope: !14761, inlinedAt: !16670)
!16673 = !DILocation(line: 0, scope: !14770, inlinedAt: !16672)
!16674 = !DILocation(line: 1888, column: 12, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !2490, line: 1887, column: 26)
!16676 = distinct !DILexicalBlock(scope: !16665, file: !2490, line: 1887, column: 2)
!16677 = !DILocation(line: 1890, column: 14, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16675, file: !2490, line: 1890, column: 7)
!16679 = !DILocation(line: 1890, column: 7, scope: !16675)
!16680 = !DILocalVariable(name: "thread", arg: 1, scope: !16681, file: !16682, line: 134, type: !2385)
!16681 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16682, file: !16682, line: 134, type: !16683, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16685)
!16682 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16683 = !DISubroutineType(types: !16684)
!16684 = !{null, !2385, !32, !102}
!16685 = !{!16680, !16686, !16687}
!16686 = !DILocalVariable(name: "value", arg: 2, scope: !16681, file: !16682, line: 135, type: !32)
!16687 = !DILocalVariable(name: "data", arg: 3, scope: !16681, file: !16682, line: 136, type: !102)
!16688 = !DILocation(line: 0, scope: !16681, inlinedAt: !16689)
!16689 = distinct !DILocation(line: 1891, column: 4, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16678, file: !2490, line: 1890, column: 23)
!16691 = !DILocation(line: 0, scope: !16595, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 138, column: 2, scope: !16681, inlinedAt: !16689)
!16693 = !DILocation(line: 67, column: 15, scope: !16595, inlinedAt: !16692)
!16694 = !DILocation(line: 67, column: 33, scope: !16595, inlinedAt: !16692)
!16695 = !DILocation(line: 139, column: 15, scope: !16681, inlinedAt: !16689)
!16696 = !DILocation(line: 139, column: 25, scope: !16681, inlinedAt: !16689)
!16697 = !DILocation(line: 1894, column: 4, scope: !16690)
!16698 = !DILocation(line: 1895, column: 10, scope: !16690)
!16699 = !DILocation(line: 1896, column: 4, scope: !16690)
!16700 = !DILocation(line: 1898, column: 3, scope: !16690)
!16701 = !DILocation(line: 0, scope: !14788, inlinedAt: !16702)
!16702 = distinct !DILocation(line: 1887, column: 2, scope: !16676)
!16703 = !DILocation(line: 0, scope: !14796, inlinedAt: !16704)
!16704 = distinct !DILocation(line: 215, column: 2, scope: !14788, inlinedAt: !16702)
!16705 = !DILocation(line: 95, column: 2, scope: !14796, inlinedAt: !16704)
!16706 = !DILocation(line: 1901, column: 2, scope: !16655)
!16707 = distinct !DISubprogram(name: "z_sched_wait", scope: !2490, file: !2490, line: 1904, type: !16708, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16711)
!16708 = !DISubroutineType(types: !16709)
!16709 = !{!103, !14764, !14753, !2416, !15552, !16710}
!16710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16711 = !{!16712, !16713, !16714, !16715, !16716, !16717}
!16712 = !DILocalVariable(name: "lock", arg: 1, scope: !16707, file: !2490, line: 1904, type: !14764)
!16713 = !DILocalVariable(name: "key", arg: 2, scope: !16707, file: !2490, line: 1904, type: !14753)
!16714 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16707, file: !2490, line: 1905, type: !2416)
!16715 = !DILocalVariable(name: "timeout", arg: 4, scope: !16707, file: !2490, line: 1905, type: !15552)
!16716 = !DILocalVariable(name: "data", arg: 5, scope: !16707, file: !2490, line: 1905, type: !16710)
!16717 = !DILocalVariable(name: "ret", scope: !16707, file: !2490, line: 1907, type: !103)
!16718 = !DILocation(line: 0, scope: !16707)
!16719 = !DILocation(line: 1907, column: 12, scope: !16707)
!16720 = !DILocation(line: 1909, column: 11, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16707, file: !2490, line: 1909, column: 6)
!16722 = !DILocation(line: 1909, column: 6, scope: !16707)
!16723 = !DILocation(line: 1910, column: 11, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16721, file: !2490, line: 1909, column: 20)
!16725 = !DILocation(line: 1910, column: 26, scope: !16724)
!16726 = !DILocation(line: 1910, column: 9, scope: !16724)
!16727 = !DILocation(line: 1911, column: 2, scope: !16724)
!16728 = !DILocation(line: 1912, column: 2, scope: !16707)
!16729 = distinct !DISubprogram(name: "z_data_copy", scope: !16730, file: !16730, line: 22, type: !3217, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3200, retainedNodes: !474)
!16730 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16731 = !DILocation(line: 24, column: 2, scope: !16729)
!16732 = !DILocation(line: 27, column: 2, scope: !16729)
!16733 = !DILocation(line: 71, column: 1, scope: !16729)
!16734 = distinct !DISubprogram(name: "z_add_timeout", scope: !2527, file: !2527, line: 88, type: !16735, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16741)
!16735 = !DISubroutineType(types: !16736)
!16736 = !{null, !2500, !2519, !16737}
!16737 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !16738)
!16738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !16739)
!16739 = !{!16740}
!16740 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16738, file: !1739, line: 66, baseType: !1738, size: 64)
!16741 = !{!16742, !16743, !16744, !16745, !16751, !16752, !16755, !16758}
!16742 = !DILocalVariable(name: "to", arg: 1, scope: !16734, file: !2527, line: 88, type: !2500)
!16743 = !DILocalVariable(name: "fn", arg: 2, scope: !16734, file: !2527, line: 88, type: !2519)
!16744 = !DILocalVariable(name: "timeout", arg: 3, scope: !16734, file: !2527, line: 89, type: !16737)
!16745 = !DILocalVariable(name: "__i", scope: !16746, file: !2527, line: 102, type: !16747)
!16746 = distinct !DILexicalBlock(scope: !16734, file: !2527, line: 102, column: 2)
!16747 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !16748)
!16748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !16749)
!16749 = !{!16750}
!16750 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16748, file: !473, line: 33, baseType: !103, size: 32)
!16751 = !DILocalVariable(name: "__key", scope: !16746, file: !2527, line: 102, type: !16747)
!16752 = !DILocalVariable(name: "t", scope: !16753, file: !2527, line: 103, type: !2500)
!16753 = distinct !DILexicalBlock(scope: !16754, file: !2527, line: 102, column: 24)
!16754 = distinct !DILexicalBlock(scope: !16746, file: !2527, line: 102, column: 2)
!16755 = !DILocalVariable(name: "ticks", scope: !16756, file: !2527, line: 107, type: !1738)
!16756 = distinct !DILexicalBlock(scope: !16757, file: !2527, line: 106, column: 39)
!16757 = distinct !DILexicalBlock(scope: !16753, file: !2527, line: 105, column: 7)
!16758 = !DILocalVariable(name: "next_time", scope: !16759, file: !2527, line: 137, type: !345)
!16759 = distinct !DILexicalBlock(scope: !16760, file: !2527, line: 127, column: 22)
!16760 = distinct !DILexicalBlock(scope: !16753, file: !2527, line: 127, column: 7)
!16761 = !DILocation(line: 0, scope: !16734)
!16762 = !DILocation(line: 91, column: 6, scope: !16763)
!16763 = distinct !DILexicalBlock(scope: !16734, file: !2527, line: 91, column: 6)
!16764 = !DILocation(line: 91, column: 6, scope: !16734)
!16765 = !DILocation(line: 100, column: 6, scope: !16734)
!16766 = !DILocation(line: 100, column: 9, scope: !16734)
!16767 = !DILocation(line: 0, scope: !16746)
!16768 = !DILocalVariable(name: "l", arg: 1, scope: !16769, file: !473, line: 136, type: !16772)
!16769 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !16770, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16773)
!16770 = !DISubroutineType(types: !16771)
!16771 = !{!16747, !16772}
!16772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 32)
!16773 = !{!16768, !16774}
!16774 = !DILocalVariable(name: "k", scope: !16769, file: !473, line: 139, type: !16747)
!16775 = !DILocation(line: 0, scope: !16769, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 102, column: 2, scope: !16746)
!16777 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !16782)
!16778 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16779)
!16779 = !{!16780, !16781}
!16780 = !DILocalVariable(name: "key", scope: !16778, file: !5761, line: 44, type: !32)
!16781 = !DILocalVariable(name: "tmp", scope: !16778, file: !5761, line: 53, type: !32)
!16782 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !16776)
!16783 = !{i64 1654484}
!16784 = !DILocation(line: 0, scope: !16778, inlinedAt: !16782)
!16785 = !DILocation(line: 106, column: 33, scope: !16757)
!16786 = !DILocation(line: 105, column: 7, scope: !16753)
!16787 = !DILocation(line: 107, column: 50, scope: !16756)
!16788 = !DILocation(line: 107, column: 48, scope: !16756)
!16789 = !DILocation(line: 0, scope: !16756)
!16790 = !DILocation(line: 109, column: 17, scope: !16756)
!16791 = !DILocation(line: 110, column: 3, scope: !16756)
!16792 = !DILocation(line: 111, column: 31, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16757, file: !2527, line: 110, column: 10)
!16794 = !DILocation(line: 111, column: 37, scope: !16793)
!16795 = !DILocation(line: 111, column: 35, scope: !16793)
!16796 = !DILocation(line: 0, scope: !16757)
!16797 = !DILocation(line: 109, column: 8, scope: !16756)
!16798 = !DILocation(line: 109, column: 15, scope: !16756)
!16799 = !DILocation(line: 114, column: 12, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16753, file: !2527, line: 114, column: 3)
!16801 = !DILocation(line: 0, scope: !16753)
!16802 = !DILocation(line: 114, column: 3, scope: !16800)
!16803 = !DILocation(line: 115, column: 24, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16805, file: !2527, line: 115, column: 8)
!16805 = distinct !DILexicalBlock(scope: !16806, file: !2527, line: 114, column: 45)
!16806 = distinct !DILexicalBlock(scope: !16800, file: !2527, line: 114, column: 3)
!16807 = !DILocation(line: 115, column: 11, scope: !16804)
!16808 = !DILocation(line: 115, column: 18, scope: !16804)
!16809 = !DILocation(line: 115, column: 8, scope: !16805)
!16810 = !DILocation(line: 116, column: 15, scope: !16811)
!16811 = distinct !DILexicalBlock(scope: !16804, file: !2527, line: 115, column: 32)
!16812 = !DILocation(line: 117, column: 26, scope: !16811)
!16813 = !DILocation(line: 117, column: 37, scope: !16811)
!16814 = !DILocation(line: 117, column: 5, scope: !16811)
!16815 = !DILocation(line: 123, column: 7, scope: !16753)
!16816 = !DILocation(line: 120, column: 15, scope: !16805)
!16817 = !DILocation(line: 114, column: 36, scope: !16806)
!16818 = distinct !{!16818, !16802, !16819}
!16819 = !DILocation(line: 121, column: 3, scope: !16800)
!16820 = !DILocation(line: 124, column: 41, scope: !16821)
!16821 = distinct !DILexicalBlock(scope: !16822, file: !2527, line: 123, column: 18)
!16822 = distinct !DILexicalBlock(scope: !16753, file: !2527, line: 123, column: 7)
!16823 = !DILocation(line: 124, column: 4, scope: !16821)
!16824 = !DILocation(line: 125, column: 3, scope: !16821)
!16825 = !DILocation(line: 127, column: 13, scope: !16760)
!16826 = !DILocation(line: 127, column: 10, scope: !16760)
!16827 = !DILocation(line: 127, column: 7, scope: !16753)
!16828 = !DILocation(line: 137, column: 24, scope: !16759)
!16829 = !DILocation(line: 0, scope: !16759)
!16830 = !DILocation(line: 139, column: 18, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16759, file: !2527, line: 139, column: 8)
!16832 = !DILocation(line: 139, column: 23, scope: !16831)
!16833 = !DILocation(line: 141, column: 5, scope: !16834)
!16834 = distinct !DILexicalBlock(scope: !16831, file: !2527, line: 140, column: 48)
!16835 = !DILocation(line: 142, column: 4, scope: !16834)
!16836 = !DILocalVariable(name: "key", arg: 2, scope: !16837, file: !473, line: 190, type: !16747)
!16837 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !16838, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16840)
!16838 = !DISubroutineType(types: !16839)
!16839 = !{null, !16772, !16747}
!16840 = !{!16841, !16836}
!16841 = !DILocalVariable(name: "l", arg: 1, scope: !16837, file: !473, line: 189, type: !16772)
!16842 = !DILocation(line: 0, scope: !16837, inlinedAt: !16843)
!16843 = distinct !DILocation(line: 102, column: 2, scope: !16754)
!16844 = !DILocalVariable(name: "key", arg: 1, scope: !16845, file: !5761, line: 84, type: !32)
!16845 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16846)
!16846 = !{!16844}
!16847 = !DILocation(line: 0, scope: !16845, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !16843)
!16849 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !16848)
!16850 = !{i64 1655301}
!16851 = !DILocation(line: 148, column: 1, scope: !16734)
!16852 = distinct !DISubprogram(name: "elapsed", scope: !2527, file: !2527, line: 62, type: !16853, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !474)
!16853 = !DISubroutineType(types: !16854)
!16854 = !{!345}
!16855 = !DILocation(line: 64, column: 9, scope: !16852)
!16856 = !DILocation(line: 64, column: 28, scope: !16852)
!16857 = !DILocation(line: 64, column: 35, scope: !16852)
!16858 = !DILocation(line: 64, column: 2, scope: !16852)
!16859 = distinct !DISubprogram(name: "first", scope: !2527, file: !2527, line: 39, type: !16860, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16862)
!16860 = !DISubroutineType(types: !16861)
!16861 = !{!2500}
!16862 = !{!16863}
!16863 = !DILocalVariable(name: "t", scope: !16859, file: !2527, line: 41, type: !16864)
!16864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!16865 = !DILocation(line: 41, column: 19, scope: !16859)
!16866 = !DILocation(line: 0, scope: !16859)
!16867 = !DILocation(line: 43, column: 9, scope: !16859)
!16868 = !DILocation(line: 43, column: 2, scope: !16859)
!16869 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !322, file: !322, line: 443, type: !16870, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16872)
!16870 = !DISubroutineType(types: !16871)
!16871 = !{null, !16864, !16864}
!16872 = !{!16873, !16874, !16875}
!16873 = !DILocalVariable(name: "successor", arg: 1, scope: !16869, file: !322, line: 443, type: !16864)
!16874 = !DILocalVariable(name: "node", arg: 2, scope: !16869, file: !322, line: 443, type: !16864)
!16875 = !DILocalVariable(name: "prev", scope: !16869, file: !322, line: 445, type: !16876)
!16876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16864)
!16877 = !DILocation(line: 0, scope: !16869)
!16878 = !DILocation(line: 445, column: 39, scope: !16869)
!16879 = !DILocation(line: 447, column: 8, scope: !16869)
!16880 = !DILocation(line: 447, column: 13, scope: !16869)
!16881 = !DILocation(line: 448, column: 8, scope: !16869)
!16882 = !DILocation(line: 448, column: 13, scope: !16869)
!16883 = !DILocation(line: 449, column: 8, scope: !16869)
!16884 = !DILocation(line: 449, column: 13, scope: !16869)
!16885 = !DILocation(line: 450, column: 18, scope: !16869)
!16886 = !DILocation(line: 451, column: 1, scope: !16869)
!16887 = distinct !DISubprogram(name: "next", scope: !2527, file: !2527, line: 46, type: !16888, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16890)
!16888 = !DISubroutineType(types: !16889)
!16889 = !{!2500, !2500}
!16890 = !{!16891, !16892}
!16891 = !DILocalVariable(name: "t", arg: 1, scope: !16887, file: !2527, line: 46, type: !2500)
!16892 = !DILocalVariable(name: "n", scope: !16887, file: !2527, line: 48, type: !16864)
!16893 = !DILocation(line: 0, scope: !16887)
!16894 = !DILocation(line: 48, column: 58, scope: !16887)
!16895 = !DILocation(line: 48, column: 19, scope: !16887)
!16896 = !DILocation(line: 50, column: 9, scope: !16887)
!16897 = !DILocation(line: 50, column: 2, scope: !16887)
!16898 = distinct !DISubprogram(name: "sys_dlist_append", scope: !322, file: !322, line: 404, type: !16899, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16902)
!16899 = !DISubroutineType(types: !16900)
!16900 = !{null, !16901, !16864}
!16901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 32)
!16902 = !{!16903, !16904, !16905}
!16903 = !DILocalVariable(name: "list", arg: 1, scope: !16898, file: !322, line: 404, type: !16901)
!16904 = !DILocalVariable(name: "node", arg: 2, scope: !16898, file: !322, line: 404, type: !16864)
!16905 = !DILocalVariable(name: "tail", scope: !16898, file: !322, line: 406, type: !16876)
!16906 = !DILocation(line: 0, scope: !16898)
!16907 = !DILocation(line: 406, column: 34, scope: !16898)
!16908 = !DILocation(line: 408, column: 8, scope: !16898)
!16909 = !DILocation(line: 408, column: 13, scope: !16898)
!16910 = !DILocation(line: 409, column: 8, scope: !16898)
!16911 = !DILocation(line: 409, column: 13, scope: !16898)
!16912 = !DILocation(line: 411, column: 8, scope: !16898)
!16913 = !DILocation(line: 411, column: 13, scope: !16898)
!16914 = !DILocation(line: 412, column: 13, scope: !16898)
!16915 = !DILocation(line: 413, column: 1, scope: !16898)
!16916 = distinct !DISubprogram(name: "next_timeout", scope: !2527, file: !2527, line: 67, type: !16853, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16917)
!16917 = !{!16918, !16919, !16920}
!16918 = !DILocalVariable(name: "to", scope: !16916, file: !2527, line: 69, type: !2500)
!16919 = !DILocalVariable(name: "ticks_elapsed", scope: !16916, file: !2527, line: 70, type: !345)
!16920 = !DILocalVariable(name: "ret", scope: !16916, file: !2527, line: 71, type: !345)
!16921 = !DILocation(line: 69, column: 24, scope: !16916)
!16922 = !DILocation(line: 0, scope: !16916)
!16923 = !DILocation(line: 70, column: 26, scope: !16916)
!16924 = !DILocation(line: 73, column: 10, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16916, file: !2527, line: 73, column: 6)
!16926 = !DILocation(line: 73, column: 19, scope: !16925)
!16927 = !DILocation(line: 74, column: 21, scope: !16925)
!16928 = !DILocation(line: 74, column: 30, scope: !16925)
!16929 = !DILocation(line: 74, column: 28, scope: !16925)
!16930 = !DILocation(line: 74, column: 45, scope: !16925)
!16931 = !DILocation(line: 73, column: 6, scope: !16916)
!16932 = !DILocation(line: 77, column: 9, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16925, file: !2527, line: 76, column: 9)
!16934 = !DILocation(line: 0, scope: !16925)
!16935 = !DILocation(line: 81, column: 20, scope: !16936)
!16936 = distinct !DILexicalBlock(scope: !16916, file: !2527, line: 81, column: 6)
!16937 = !DILocation(line: 81, column: 6, scope: !16936)
!16938 = !DILocation(line: 81, column: 32, scope: !16936)
!16939 = !DILocation(line: 85, column: 2, scope: !16916)
!16940 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !322, file: !322, line: 341, type: !16941, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16943)
!16941 = !DISubroutineType(types: !16942)
!16942 = !{!16864, !16901, !16864}
!16943 = !{!16944, !16945}
!16944 = !DILocalVariable(name: "list", arg: 1, scope: !16940, file: !322, line: 341, type: !16901)
!16945 = !DILocalVariable(name: "node", arg: 2, scope: !16940, file: !322, line: 342, type: !16864)
!16946 = !DILocation(line: 0, scope: !16940)
!16947 = !DILocation(line: 344, column: 15, scope: !16940)
!16948 = !DILocation(line: 344, column: 9, scope: !16940)
!16949 = !DILocation(line: 344, column: 26, scope: !16940)
!16950 = !DILocation(line: 344, column: 2, scope: !16940)
!16951 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !322, file: !322, line: 325, type: !16941, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16952)
!16952 = !{!16953, !16954}
!16953 = !DILocalVariable(name: "list", arg: 1, scope: !16951, file: !322, line: 325, type: !16901)
!16954 = !DILocalVariable(name: "node", arg: 2, scope: !16951, file: !322, line: 326, type: !16864)
!16955 = !DILocation(line: 0, scope: !16951)
!16956 = !DILocation(line: 328, column: 24, scope: !16951)
!16957 = !DILocation(line: 328, column: 15, scope: !16951)
!16958 = !DILocation(line: 328, column: 9, scope: !16951)
!16959 = !DILocation(line: 328, column: 45, scope: !16951)
!16960 = !DILocation(line: 328, column: 2, scope: !16951)
!16961 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !322, file: !322, line: 294, type: !16962, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16964)
!16962 = !DISubroutineType(types: !16963)
!16963 = !{!16864, !16901}
!16964 = !{!16965}
!16965 = !DILocalVariable(name: "list", arg: 1, scope: !16961, file: !322, line: 294, type: !16901)
!16966 = !DILocation(line: 0, scope: !16961)
!16967 = !DILocation(line: 296, column: 9, scope: !16961)
!16968 = !DILocation(line: 296, column: 2, scope: !16961)
!16969 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !322, file: !322, line: 266, type: !16970, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16972)
!16970 = !DISubroutineType(types: !16971)
!16971 = !{!170, !16901}
!16972 = !{!16973}
!16973 = !DILocalVariable(name: "list", arg: 1, scope: !16969, file: !322, line: 266, type: !16901)
!16974 = !DILocation(line: 0, scope: !16969)
!16975 = !DILocation(line: 268, column: 15, scope: !16969)
!16976 = !DILocation(line: 268, column: 20, scope: !16969)
!16977 = !DILocation(line: 268, column: 2, scope: !16969)
!16978 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2527, file: !2527, line: 150, type: !16979, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !16981)
!16979 = !DISubroutineType(types: !16980)
!16980 = !{!103, !2500}
!16981 = !{!16982, !16983, !16984, !16986}
!16982 = !DILocalVariable(name: "to", arg: 1, scope: !16978, file: !2527, line: 150, type: !2500)
!16983 = !DILocalVariable(name: "ret", scope: !16978, file: !2527, line: 152, type: !103)
!16984 = !DILocalVariable(name: "__i", scope: !16985, file: !2527, line: 154, type: !16747)
!16985 = distinct !DILexicalBlock(scope: !16978, file: !2527, line: 154, column: 2)
!16986 = !DILocalVariable(name: "__key", scope: !16985, file: !2527, line: 154, type: !16747)
!16987 = !DILocation(line: 0, scope: !16978)
!16988 = !DILocation(line: 0, scope: !16985)
!16989 = !DILocation(line: 0, scope: !16769, inlinedAt: !16990)
!16990 = distinct !DILocation(line: 154, column: 2, scope: !16985)
!16991 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !16992)
!16992 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !16990)
!16993 = !DILocation(line: 0, scope: !16778, inlinedAt: !16992)
!16994 = !DILocation(line: 155, column: 7, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16996, file: !2527, line: 155, column: 7)
!16996 = distinct !DILexicalBlock(scope: !16997, file: !2527, line: 154, column: 24)
!16997 = distinct !DILexicalBlock(scope: !16985, file: !2527, line: 154, column: 2)
!16998 = !DILocation(line: 155, column: 7, scope: !16996)
!16999 = !DILocation(line: 156, column: 4, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16995, file: !2527, line: 155, column: 39)
!17001 = !DILocation(line: 158, column: 3, scope: !17000)
!17002 = !DILocation(line: 0, scope: !16837, inlinedAt: !17003)
!17003 = distinct !DILocation(line: 154, column: 2, scope: !16997)
!17004 = !DILocation(line: 0, scope: !16845, inlinedAt: !17005)
!17005 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17003)
!17006 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17005)
!17007 = !DILocation(line: 161, column: 2, scope: !16978)
!17008 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !322, file: !322, line: 225, type: !17009, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17013)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{!170, !17011}
!17011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17012, size: 32)
!17012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2504)
!17013 = !{!17014}
!17014 = !DILocalVariable(name: "node", arg: 1, scope: !17008, file: !322, line: 225, type: !17011)
!17015 = !DILocation(line: 0, scope: !17008)
!17016 = !DILocation(line: 227, column: 15, scope: !17008)
!17017 = !DILocation(line: 227, column: 20, scope: !17008)
!17018 = !DILocation(line: 227, column: 2, scope: !17008)
!17019 = distinct !DISubprogram(name: "remove_timeout", scope: !2527, file: !2527, line: 53, type: !2521, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17020)
!17020 = !{!17021}
!17021 = !DILocalVariable(name: "t", arg: 1, scope: !17019, file: !2527, line: 53, type: !2500)
!17022 = !DILocation(line: 0, scope: !17019)
!17023 = !DILocation(line: 55, column: 6, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17019, file: !2527, line: 55, column: 6)
!17025 = !DILocation(line: 55, column: 14, scope: !17024)
!17026 = !DILocation(line: 55, column: 6, scope: !17019)
!17027 = !DILocation(line: 56, column: 25, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17024, file: !2527, line: 55, column: 23)
!17029 = !DILocation(line: 56, column: 12, scope: !17028)
!17030 = !DILocation(line: 56, column: 19, scope: !17028)
!17031 = !DILocation(line: 57, column: 2, scope: !17028)
!17032 = !DILocation(line: 59, column: 23, scope: !17019)
!17033 = !DILocation(line: 59, column: 2, scope: !17019)
!17034 = !DILocation(line: 60, column: 1, scope: !17019)
!17035 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !322, file: !322, line: 496, type: !17036, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17038)
!17036 = !DISubroutineType(types: !17037)
!17037 = !{null, !16864}
!17038 = !{!17039, !17040, !17041}
!17039 = !DILocalVariable(name: "node", arg: 1, scope: !17035, file: !322, line: 496, type: !16864)
!17040 = !DILocalVariable(name: "prev", scope: !17035, file: !322, line: 498, type: !16876)
!17041 = !DILocalVariable(name: "next", scope: !17035, file: !322, line: 499, type: !16876)
!17042 = !DILocation(line: 0, scope: !17035)
!17043 = !DILocation(line: 498, column: 34, scope: !17035)
!17044 = !DILocation(line: 499, column: 34, scope: !17035)
!17045 = !DILocation(line: 501, column: 8, scope: !17035)
!17046 = !DILocation(line: 501, column: 13, scope: !17035)
!17047 = !DILocation(line: 502, column: 8, scope: !17035)
!17048 = !DILocation(line: 502, column: 13, scope: !17035)
!17049 = !DILocation(line: 503, column: 2, scope: !17035)
!17050 = !DILocation(line: 504, column: 1, scope: !17035)
!17051 = distinct !DISubprogram(name: "sys_dnode_init", scope: !322, file: !322, line: 211, type: !17036, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17052)
!17052 = !{!17053}
!17053 = !DILocalVariable(name: "node", arg: 1, scope: !17051, file: !322, line: 211, type: !16864)
!17054 = !DILocation(line: 0, scope: !17051)
!17055 = !DILocation(line: 213, column: 8, scope: !17051)
!17056 = !DILocation(line: 213, column: 13, scope: !17051)
!17057 = !DILocation(line: 214, column: 8, scope: !17051)
!17058 = !DILocation(line: 214, column: 13, scope: !17051)
!17059 = !DILocation(line: 215, column: 1, scope: !17051)
!17060 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2527, file: !2527, line: 183, type: !17061, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17065)
!17061 = !DISubroutineType(types: !17062)
!17062 = !{!1738, !17063}
!17063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17064, size: 32)
!17064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2501)
!17065 = !{!17066, !17067, !17068, !17070}
!17066 = !DILocalVariable(name: "timeout", arg: 1, scope: !17060, file: !2527, line: 183, type: !17063)
!17067 = !DILocalVariable(name: "ticks", scope: !17060, file: !2527, line: 185, type: !1738)
!17068 = !DILocalVariable(name: "__i", scope: !17069, file: !2527, line: 187, type: !16747)
!17069 = distinct !DILexicalBlock(scope: !17060, file: !2527, line: 187, column: 2)
!17070 = !DILocalVariable(name: "__key", scope: !17069, file: !2527, line: 187, type: !16747)
!17071 = !DILocation(line: 0, scope: !17060)
!17072 = !DILocation(line: 0, scope: !17069)
!17073 = !DILocation(line: 0, scope: !16769, inlinedAt: !17074)
!17074 = distinct !DILocation(line: 187, column: 2, scope: !17069)
!17075 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17076)
!17076 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17074)
!17077 = !DILocation(line: 0, scope: !16778, inlinedAt: !17076)
!17078 = !DILocation(line: 188, column: 11, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17080, file: !2527, line: 187, column: 24)
!17080 = distinct !DILexicalBlock(scope: !17069, file: !2527, line: 187, column: 2)
!17081 = !DILocation(line: 0, scope: !16837, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 187, column: 2, scope: !17080)
!17083 = !DILocation(line: 0, scope: !16845, inlinedAt: !17084)
!17084 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17082)
!17085 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17084)
!17086 = !DILocation(line: 191, column: 2, scope: !17060)
!17087 = distinct !DISubprogram(name: "timeout_rem", scope: !2527, file: !2527, line: 165, type: !17061, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17088)
!17088 = !{!17089, !17090, !17091}
!17089 = !DILocalVariable(name: "timeout", arg: 1, scope: !17087, file: !2527, line: 165, type: !17063)
!17090 = !DILocalVariable(name: "ticks", scope: !17087, file: !2527, line: 167, type: !1738)
!17091 = !DILocalVariable(name: "t", scope: !17092, file: !2527, line: 173, type: !2500)
!17092 = distinct !DILexicalBlock(scope: !17087, file: !2527, line: 173, column: 2)
!17093 = !DILocation(line: 0, scope: !17087)
!17094 = !DILocation(line: 169, column: 6, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17087, file: !2527, line: 169, column: 6)
!17096 = !DILocation(line: 169, column: 6, scope: !17087)
!17097 = !DILocation(line: 173, column: 28, scope: !17092)
!17098 = !DILocation(line: 0, scope: !17092)
!17099 = !DILocation(line: 173, column: 39, scope: !17100)
!17100 = distinct !DILexicalBlock(scope: !17092, file: !2527, line: 173, column: 2)
!17101 = !DILocation(line: 173, column: 2, scope: !17092)
!17102 = !DILocation(line: 174, column: 15, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17100, file: !2527, line: 173, column: 61)
!17104 = !DILocation(line: 174, column: 9, scope: !17103)
!17105 = !DILocation(line: 175, column: 15, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17103, file: !2527, line: 175, column: 7)
!17107 = !DILocation(line: 175, column: 7, scope: !17103)
!17108 = !DILocation(line: 173, column: 52, scope: !17100)
!17109 = distinct !{!17109, !17101, !17110}
!17110 = !DILocation(line: 178, column: 2, scope: !17092)
!17111 = !DILocation(line: 180, column: 17, scope: !17087)
!17112 = !DILocation(line: 180, column: 15, scope: !17087)
!17113 = !DILocation(line: 180, column: 2, scope: !17087)
!17114 = !DILocation(line: 181, column: 1, scope: !17087)
!17115 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14163, file: !14163, line: 35, type: !17116, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17118)
!17116 = !DISubroutineType(types: !17117)
!17117 = !{!170, !17063}
!17118 = !{!17119}
!17119 = !DILocalVariable(name: "to", arg: 1, scope: !17115, file: !14163, line: 35, type: !17063)
!17120 = !DILocation(line: 0, scope: !17115)
!17121 = !DILocation(line: 37, column: 35, scope: !17115)
!17122 = !DILocation(line: 37, column: 10, scope: !17115)
!17123 = !DILocation(line: 37, column: 9, scope: !17115)
!17124 = !DILocation(line: 37, column: 2, scope: !17115)
!17125 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2527, file: !2527, line: 194, type: !17061, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17126)
!17126 = !{!17127, !17128, !17129, !17131}
!17127 = !DILocalVariable(name: "timeout", arg: 1, scope: !17125, file: !2527, line: 194, type: !17063)
!17128 = !DILocalVariable(name: "ticks", scope: !17125, file: !2527, line: 196, type: !1738)
!17129 = !DILocalVariable(name: "__i", scope: !17130, file: !2527, line: 198, type: !16747)
!17130 = distinct !DILexicalBlock(scope: !17125, file: !2527, line: 198, column: 2)
!17131 = !DILocalVariable(name: "__key", scope: !17130, file: !2527, line: 198, type: !16747)
!17132 = !DILocation(line: 0, scope: !17125)
!17133 = !DILocation(line: 0, scope: !17130)
!17134 = !DILocation(line: 0, scope: !16769, inlinedAt: !17135)
!17135 = distinct !DILocation(line: 198, column: 2, scope: !17130)
!17136 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17137)
!17137 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17135)
!17138 = !DILocation(line: 0, scope: !16778, inlinedAt: !17137)
!17139 = !DILocation(line: 199, column: 11, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17141, file: !2527, line: 198, column: 24)
!17141 = distinct !DILexicalBlock(scope: !17130, file: !2527, line: 198, column: 2)
!17142 = !DILocation(line: 199, column: 23, scope: !17140)
!17143 = !DILocation(line: 0, scope: !16837, inlinedAt: !17144)
!17144 = distinct !DILocation(line: 198, column: 2, scope: !17141)
!17145 = !DILocation(line: 0, scope: !16845, inlinedAt: !17146)
!17146 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17144)
!17147 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17146)
!17148 = !DILocation(line: 199, column: 21, scope: !17140)
!17149 = !DILocation(line: 202, column: 2, scope: !17125)
!17150 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2527, file: !2527, line: 205, type: !16853, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17151)
!17151 = !{!17152, !17153, !17155}
!17152 = !DILocalVariable(name: "ret", scope: !17150, file: !2527, line: 207, type: !345)
!17153 = !DILocalVariable(name: "__i", scope: !17154, file: !2527, line: 209, type: !16747)
!17154 = distinct !DILexicalBlock(scope: !17150, file: !2527, line: 209, column: 2)
!17155 = !DILocalVariable(name: "__key", scope: !17154, file: !2527, line: 209, type: !16747)
!17156 = !DILocation(line: 0, scope: !17150)
!17157 = !DILocation(line: 0, scope: !17154)
!17158 = !DILocation(line: 0, scope: !16769, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 209, column: 2, scope: !17154)
!17160 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17159)
!17162 = !DILocation(line: 0, scope: !16778, inlinedAt: !17161)
!17163 = !DILocation(line: 210, column: 9, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17165, file: !2527, line: 209, column: 24)
!17165 = distinct !DILexicalBlock(scope: !17154, file: !2527, line: 209, column: 2)
!17166 = !DILocation(line: 0, scope: !16837, inlinedAt: !17167)
!17167 = distinct !DILocation(line: 209, column: 2, scope: !17165)
!17168 = !DILocation(line: 0, scope: !16845, inlinedAt: !17169)
!17169 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17167)
!17170 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17169)
!17171 = !DILocation(line: 212, column: 2, scope: !17150)
!17172 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2527, file: !2527, line: 215, type: !11612, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17173)
!17173 = !{!17174, !17175, !17176, !17178, !17179, !17182, !17183}
!17174 = !DILocalVariable(name: "ticks", arg: 1, scope: !17172, file: !2527, line: 215, type: !345)
!17175 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17172, file: !2527, line: 215, type: !170)
!17176 = !DILocalVariable(name: "__i", scope: !17177, file: !2527, line: 217, type: !16747)
!17177 = distinct !DILexicalBlock(scope: !17172, file: !2527, line: 217, column: 2)
!17178 = !DILocalVariable(name: "__key", scope: !17177, file: !2527, line: 217, type: !16747)
!17179 = !DILocalVariable(name: "next_to", scope: !17180, file: !2527, line: 218, type: !103)
!17180 = distinct !DILexicalBlock(scope: !17181, file: !2527, line: 217, column: 24)
!17181 = distinct !DILexicalBlock(scope: !17177, file: !2527, line: 217, column: 2)
!17182 = !DILocalVariable(name: "sooner", scope: !17180, file: !2527, line: 219, type: !170)
!17183 = !DILocalVariable(name: "imminent", scope: !17180, file: !2527, line: 221, type: !170)
!17184 = !DILocation(line: 0, scope: !17172)
!17185 = !DILocation(line: 0, scope: !17177)
!17186 = !DILocation(line: 0, scope: !16769, inlinedAt: !17187)
!17187 = distinct !DILocation(line: 217, column: 2, scope: !17177)
!17188 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17187)
!17190 = !DILocation(line: 0, scope: !16778, inlinedAt: !17189)
!17191 = !DILocation(line: 218, column: 17, scope: !17180)
!17192 = !DILocation(line: 0, scope: !17180)
!17193 = !DILocation(line: 221, column: 27, scope: !17180)
!17194 = !DILocation(line: 233, column: 17, scope: !17195)
!17195 = distinct !DILexicalBlock(scope: !17180, file: !2527, line: 233, column: 7)
!17196 = !DILocation(line: 234, column: 26, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17195, file: !2527, line: 233, column: 56)
!17198 = !DILocation(line: 234, column: 4, scope: !17197)
!17199 = !DILocation(line: 235, column: 3, scope: !17197)
!17200 = !DILocation(line: 0, scope: !16837, inlinedAt: !17201)
!17201 = distinct !DILocation(line: 217, column: 2, scope: !17181)
!17202 = !DILocation(line: 0, scope: !16845, inlinedAt: !17203)
!17203 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17201)
!17204 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17203)
!17205 = !DILocation(line: 237, column: 1, scope: !17172)
!17206 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2527, file: !2527, line: 239, type: !17207, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17209)
!17207 = !DISubroutineType(types: !17208)
!17208 = !{null, !345}
!17209 = !{!17210, !17211, !17212, !17214}
!17210 = !DILocalVariable(name: "ticks", arg: 1, scope: !17206, file: !2527, line: 239, type: !345)
!17211 = !DILocalVariable(name: "key", scope: !17206, file: !2527, line: 245, type: !16747)
!17212 = !DILocalVariable(name: "t", scope: !17213, file: !2527, line: 262, type: !2500)
!17213 = distinct !DILexicalBlock(scope: !17206, file: !2527, line: 261, column: 67)
!17214 = !DILocalVariable(name: "dt", scope: !17213, file: !2527, line: 263, type: !103)
!17215 = !DILocation(line: 0, scope: !17206)
!17216 = !DILocation(line: 242, column: 2, scope: !17206)
!17217 = !DILocation(line: 0, scope: !16769, inlinedAt: !17218)
!17218 = distinct !DILocation(line: 245, column: 25, scope: !17206)
!17219 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17220)
!17220 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17218)
!17221 = !DILocation(line: 0, scope: !16778, inlinedAt: !17220)
!17222 = !DILocation(line: 261, column: 9, scope: !17206)
!17223 = !DILocation(line: 261, column: 17, scope: !17206)
!17224 = !DILocation(line: 261, column: 25, scope: !17206)
!17225 = !DILocation(line: 261, column: 37, scope: !17206)
!17226 = !DILocation(line: 261, column: 47, scope: !17206)
!17227 = !DILocation(line: 261, column: 44, scope: !17206)
!17228 = !DILocation(line: 261, column: 2, scope: !17206)
!17229 = !DILocation(line: 0, scope: !17213)
!17230 = !DILocation(line: 263, column: 12, scope: !17213)
!17231 = !DILocation(line: 265, column: 16, scope: !17213)
!17232 = !DILocation(line: 265, column: 13, scope: !17213)
!17233 = !DILocation(line: 266, column: 13, scope: !17213)
!17234 = !DILocation(line: 267, column: 3, scope: !17213)
!17235 = !DILocation(line: 0, scope: !16837, inlinedAt: !17236)
!17236 = distinct !DILocation(line: 269, column: 3, scope: !17213)
!17237 = !DILocation(line: 0, scope: !16845, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17236)
!17239 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17238)
!17240 = !DILocation(line: 270, column: 6, scope: !17213)
!17241 = !DILocation(line: 270, column: 3, scope: !17213)
!17242 = !DILocation(line: 0, scope: !16769, inlinedAt: !17243)
!17243 = distinct !DILocation(line: 271, column: 9, scope: !17213)
!17244 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17245)
!17245 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17243)
!17246 = !DILocation(line: 0, scope: !16778, inlinedAt: !17245)
!17247 = !DILocation(line: 272, column: 22, scope: !17213)
!17248 = distinct !{!17248, !17228, !17249}
!17249 = !DILocation(line: 273, column: 2, scope: !17206)
!17250 = !DILocation(line: 276, column: 19, scope: !17251)
!17251 = distinct !DILexicalBlock(scope: !17252, file: !2527, line: 275, column: 23)
!17252 = distinct !DILexicalBlock(scope: !17206, file: !2527, line: 275, column: 6)
!17253 = !DILocation(line: 277, column: 2, scope: !17251)
!17254 = !DILocation(line: 279, column: 15, scope: !17206)
!17255 = !DILocation(line: 279, column: 12, scope: !17206)
!17256 = !DILocation(line: 280, column: 21, scope: !17206)
!17257 = !DILocation(line: 282, column: 24, scope: !17206)
!17258 = !DILocation(line: 282, column: 2, scope: !17206)
!17259 = !DILocation(line: 0, scope: !16837, inlinedAt: !17260)
!17260 = distinct !DILocation(line: 284, column: 2, scope: !17206)
!17261 = !DILocation(line: 0, scope: !16845, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17260)
!17263 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17262)
!17264 = !DILocation(line: 285, column: 1, scope: !17206)
!17265 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2527, file: !2527, line: 287, type: !17266, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17268)
!17266 = !DISubroutineType(types: !17267)
!17267 = !{!433}
!17268 = !{!17269, !17270, !17272}
!17269 = !DILocalVariable(name: "t", scope: !17265, file: !2527, line: 289, type: !2341)
!17270 = !DILocalVariable(name: "__i", scope: !17271, file: !2527, line: 291, type: !16747)
!17271 = distinct !DILexicalBlock(scope: !17265, file: !2527, line: 291, column: 2)
!17272 = !DILocalVariable(name: "__key", scope: !17271, file: !2527, line: 291, type: !16747)
!17273 = !DILocation(line: 0, scope: !17265)
!17274 = !DILocation(line: 0, scope: !17271)
!17275 = !DILocation(line: 0, scope: !16769, inlinedAt: !17276)
!17276 = distinct !DILocation(line: 291, column: 2, scope: !17271)
!17277 = !DILocation(line: 55, column: 2, scope: !16778, inlinedAt: !17278)
!17278 = distinct !DILocation(line: 145, column: 10, scope: !16769, inlinedAt: !17276)
!17279 = !DILocation(line: 0, scope: !16778, inlinedAt: !17278)
!17280 = !DILocation(line: 292, column: 7, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17282, file: !2527, line: 291, column: 24)
!17282 = distinct !DILexicalBlock(scope: !17271, file: !2527, line: 291, column: 2)
!17283 = !DILocation(line: 292, column: 19, scope: !17281)
!17284 = !DILocation(line: 0, scope: !16837, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 291, column: 2, scope: !17282)
!17286 = !DILocation(line: 0, scope: !16845, inlinedAt: !17287)
!17287 = distinct !DILocation(line: 215, column: 2, scope: !16837, inlinedAt: !17285)
!17288 = !DILocation(line: 95, column: 2, scope: !16845, inlinedAt: !17287)
!17289 = !DILocation(line: 292, column: 17, scope: !17281)
!17290 = !DILocation(line: 294, column: 2, scope: !17265)
!17291 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2527, file: !2527, line: 297, type: !7548, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !474)
!17292 = !DILocation(line: 300, column: 19, scope: !17291)
!17293 = !DILocation(line: 300, column: 9, scope: !17291)
!17294 = !DILocation(line: 300, column: 2, scope: !17291)
!17295 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2527, file: !2527, line: 306, type: !17266, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !474)
!17296 = !DILocation(line: 308, column: 9, scope: !17295)
!17297 = !DILocation(line: 308, column: 2, scope: !17295)
!17298 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2527, file: !2527, line: 319, type: !5785, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17299)
!17299 = !{!17300, !17301, !17302, !17303}
!17300 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17298, file: !2527, line: 319, type: !121)
!17301 = !DILocalVariable(name: "start_cycles", scope: !17298, file: !2527, line: 328, type: !121)
!17302 = !DILocalVariable(name: "cycles_to_wait", scope: !17298, file: !2527, line: 331, type: !121)
!17303 = !DILocalVariable(name: "current_cycles", scope: !17304, file: !2527, line: 338, type: !121)
!17304 = distinct !DILexicalBlock(scope: !17305, file: !2527, line: 337, column: 11)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2527, line: 337, column: 2)
!17306 = distinct !DILexicalBlock(scope: !17298, file: !2527, line: 337, column: 2)
!17307 = !DILocation(line: 0, scope: !17298)
!17308 = !DILocation(line: 322, column: 19, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17298, file: !2527, line: 322, column: 6)
!17310 = !DILocation(line: 322, column: 6, scope: !17298)
!17311 = !DILocation(line: 328, column: 26, scope: !17298)
!17312 = !DILocation(line: 333, column: 43, scope: !17298)
!17313 = !DILocation(line: 337, column: 2, scope: !17298)
!17314 = !DILocation(line: 338, column: 29, scope: !17304)
!17315 = !DILocation(line: 0, scope: !17304)
!17316 = !DILocation(line: 341, column: 23, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17304, file: !2527, line: 341, column: 7)
!17318 = !DILocation(line: 341, column: 39, scope: !17317)
!17319 = !DILocation(line: 349, column: 1, scope: !17298)
!17320 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !313, file: !313, line: 1675, type: !7548, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !474)
!17321 = !DILocation(line: 1677, column: 9, scope: !17320)
!17322 = !DILocation(line: 1677, column: 2, scope: !17320)
!17323 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17324, file: !17324, line: 24, type: !7548, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !474)
!17324 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17325 = !DILocation(line: 26, column: 9, scope: !17323)
!17326 = !DILocation(line: 26, column: 2, scope: !17323)
!17327 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2527, file: !2527, line: 364, type: !17328, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2497, retainedNodes: !17330)
!17328 = !DISubroutineType(types: !17329)
!17329 = !{!2341, !16737}
!17330 = !{!17331, !17332}
!17331 = !DILocalVariable(name: "timeout", arg: 1, scope: !17327, file: !2527, line: 364, type: !16737)
!17332 = !DILocalVariable(name: "dt", scope: !17327, file: !2527, line: 366, type: !1738)
!17333 = !DILocation(line: 0, scope: !17327)
!17334 = !DILocation(line: 368, column: 6, scope: !17327)
!17335 = !DILocation(line: 371, column: 10, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17337, file: !2527, line: 370, column: 47)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !2527, line: 370, column: 13)
!17338 = distinct !DILexicalBlock(scope: !17327, file: !2527, line: 368, column: 6)
!17339 = !DILocation(line: 371, column: 3, scope: !17336)
!17340 = !DILocation(line: 376, column: 58, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17342, file: !2527, line: 376, column: 7)
!17342 = distinct !DILexicalBlock(scope: !17337, file: !2527, line: 372, column: 9)
!17343 = !DILocation(line: 376, column: 7, scope: !17342)
!17344 = !DILocation(line: 376, column: 43, scope: !17341)
!17345 = !DILocation(line: 377, column: 4, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17341, file: !2527, line: 376, column: 64)
!17347 = !DILocation(line: 379, column: 10, scope: !17342)
!17348 = !DILocation(line: 379, column: 33, scope: !17342)
!17349 = !DILocation(line: 379, column: 31, scope: !17342)
!17350 = !DILocation(line: 379, column: 3, scope: !17342)
!17351 = !DILocation(line: 0, scope: !17338)
!17352 = !DILocation(line: 381, column: 1, scope: !17327)
!17353 = distinct !DISubprogram(name: "boot_banner", scope: !17354, file: !17354, line: 26, type: !3217, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3203, retainedNodes: !474)
!17354 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17355 = !DILocation(line: 34, column: 2, scope: !17353)
!17356 = !DILocation(line: 36, column: 1, scope: !17353)
!17357 = distinct !DISubprogram(name: "statics_init", scope: !2555, file: !2555, line: 21, type: !2561, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17358)
!17358 = !{!17359, !17360}
!17359 = !DILocalVariable(name: "unused", arg: 1, scope: !17357, file: !2555, line: 21, type: !2563)
!17360 = !DILocalVariable(name: "h", scope: !17361, file: !2555, line: 24, type: !17362)
!17361 = distinct !DILexicalBlock(scope: !17357, file: !2555, line: 24, column: 2)
!17362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17363, size: 32)
!17363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !313, line: 5073, size: 160, elements: !17364)
!17364 = !{!17365, !17371, !17377}
!17365 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17363, file: !313, line: 5074, baseType: !17366, size: 96)
!17366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !463, line: 56, size: 96, elements: !17367)
!17367 = !{!17368, !17369, !17370}
!17368 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17366, file: !463, line: 57, baseType: !466, size: 32)
!17369 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17366, file: !463, line: 58, baseType: !102, size: 32, offset: 32)
!17370 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17366, file: !463, line: 59, baseType: !357, size: 32, offset: 64)
!17371 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17363, file: !313, line: 5075, baseType: !17372, size: 64, offset: 96)
!17372 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !317, line: 233, baseType: !17373)
!17373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !317, line: 231, size: 64, elements: !17374)
!17374 = !{!17375}
!17375 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17373, file: !317, line: 232, baseType: !17376, size: 64)
!17376 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !322, line: 48, baseType: !2541)
!17377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17363, file: !313, line: 5076, baseType: !17378, offset: 160)
!17378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !473, line: 43, elements: !474)
!17379 = !DILocation(line: 0, scope: !17357)
!17380 = !DILocation(line: 0, scope: !17361)
!17381 = !DILocation(line: 24, column: 2, scope: !17361)
!17382 = !DILocation(line: 52, column: 2, scope: !17357)
!17383 = !DILocation(line: 49, column: 27, scope: !17384)
!17384 = distinct !DILexicalBlock(scope: !17385, file: !2555, line: 48, column: 3)
!17385 = distinct !DILexicalBlock(scope: !17386, file: !2555, line: 24, column: 36)
!17386 = distinct !DILexicalBlock(scope: !17361, file: !2555, line: 24, column: 2)
!17387 = !DILocation(line: 49, column: 45, scope: !17384)
!17388 = !DILocation(line: 49, column: 4, scope: !17384)
!17389 = !DILocation(line: 24, column: 2, scope: !17386)
!17390 = !DILocation(line: 24, column: 2, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17386, file: !2555, line: 24, column: 2)
!17392 = distinct !{!17392, !17381, !17393}
!17393 = !DILocation(line: 51, column: 2, scope: !17361)
!17394 = distinct !DISubprogram(name: "k_heap_init", scope: !2555, file: !2555, line: 13, type: !17395, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17397)
!17395 = !DISubroutineType(types: !17396)
!17396 = !{null, !17362, !102, !357}
!17397 = !{!17398, !17399, !17400}
!17398 = !DILocalVariable(name: "h", arg: 1, scope: !17394, file: !2555, line: 13, type: !17362)
!17399 = !DILocalVariable(name: "mem", arg: 2, scope: !17394, file: !2555, line: 13, type: !102)
!17400 = !DILocalVariable(name: "bytes", arg: 3, scope: !17394, file: !2555, line: 13, type: !357)
!17401 = !DILocation(line: 0, scope: !17394)
!17402 = !DILocation(line: 15, column: 19, scope: !17394)
!17403 = !DILocation(line: 15, column: 2, scope: !17394)
!17404 = !DILocation(line: 16, column: 20, scope: !17394)
!17405 = !DILocation(line: 16, column: 2, scope: !17394)
!17406 = !DILocation(line: 19, column: 1, scope: !17394)
!17407 = distinct !DISubprogram(name: "z_waitq_init", scope: !14095, file: !14095, line: 47, type: !17408, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17411)
!17408 = !DISubroutineType(types: !17409)
!17409 = !{null, !17410}
!17410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17372, size: 32)
!17411 = !{!17412}
!17412 = !DILocalVariable(name: "w", arg: 1, scope: !17407, file: !14095, line: 47, type: !17410)
!17413 = !DILocation(line: 0, scope: !17407)
!17414 = !DILocation(line: 49, column: 21, scope: !17407)
!17415 = !DILocation(line: 49, column: 2, scope: !17407)
!17416 = !DILocation(line: 50, column: 1, scope: !17407)
!17417 = distinct !DISubprogram(name: "sys_dlist_init", scope: !322, file: !322, line: 197, type: !17418, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17421)
!17418 = !DISubroutineType(types: !17419)
!17419 = !{null, !17420}
!17420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17376, size: 32)
!17421 = !{!17422}
!17422 = !DILocalVariable(name: "list", arg: 1, scope: !17417, file: !322, line: 197, type: !17420)
!17423 = !DILocation(line: 0, scope: !17417)
!17424 = !DILocation(line: 199, column: 8, scope: !17417)
!17425 = !DILocation(line: 199, column: 13, scope: !17417)
!17426 = !DILocation(line: 200, column: 8, scope: !17417)
!17427 = !DILocation(line: 200, column: 13, scope: !17417)
!17428 = !DILocation(line: 201, column: 1, scope: !17417)
!17429 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2555, file: !2555, line: 64, type: !17430, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17436)
!17430 = !DISubroutineType(types: !17431)
!17431 = !{!102, !17362, !357, !357, !17432}
!17432 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1739, line: 67, baseType: !17433)
!17433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1739, line: 65, size: 64, elements: !17434)
!17434 = !{!17435}
!17435 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17433, file: !1739, line: 66, baseType: !1738, size: 64)
!17436 = !{!17437, !17438, !17439, !17440, !17441, !17442, !17443, !17444, !17449}
!17437 = !DILocalVariable(name: "h", arg: 1, scope: !17429, file: !2555, line: 64, type: !17362)
!17438 = !DILocalVariable(name: "align", arg: 2, scope: !17429, file: !2555, line: 64, type: !357)
!17439 = !DILocalVariable(name: "bytes", arg: 3, scope: !17429, file: !2555, line: 64, type: !357)
!17440 = !DILocalVariable(name: "timeout", arg: 4, scope: !17429, file: !2555, line: 65, type: !17432)
!17441 = !DILocalVariable(name: "now", scope: !17429, file: !2555, line: 67, type: !433)
!17442 = !DILocalVariable(name: "end", scope: !17429, file: !2555, line: 67, type: !433)
!17443 = !DILocalVariable(name: "ret", scope: !17429, file: !2555, line: 68, type: !102)
!17444 = !DILocalVariable(name: "key", scope: !17429, file: !2555, line: 72, type: !17445)
!17445 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !473, line: 106, baseType: !17446)
!17446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !473, line: 32, size: 32, elements: !17447)
!17447 = !{!17448}
!17448 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17446, file: !473, line: 33, baseType: !103, size: 32)
!17449 = !DILocalVariable(name: "blocked_alloc", scope: !17429, file: !2555, line: 78, type: !170)
!17450 = !DILocation(line: 0, scope: !17429)
!17451 = !DILocation(line: 67, column: 21, scope: !17429)
!17452 = !DILocation(line: 70, column: 8, scope: !17429)
!17453 = !DILocation(line: 72, column: 41, scope: !17429)
!17454 = !DILocalVariable(name: "l", arg: 1, scope: !17455, file: !473, line: 136, type: !17458)
!17455 = distinct !DISubprogram(name: "k_spin_lock", scope: !473, file: !473, line: 136, type: !17456, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17459)
!17456 = !DISubroutineType(types: !17457)
!17457 = !{!17445, !17458}
!17458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17378, size: 32)
!17459 = !{!17454, !17460}
!17460 = !DILocalVariable(name: "k", scope: !17455, file: !473, line: 139, type: !17445)
!17461 = !DILocation(line: 0, scope: !17455, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 72, column: 25, scope: !17429)
!17463 = !DILocation(line: 55, column: 2, scope: !17464, inlinedAt: !17468)
!17464 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5761, file: !5761, line: 42, type: !5762, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17465)
!17465 = !{!17466, !17467}
!17466 = !DILocalVariable(name: "key", scope: !17464, file: !5761, line: 44, type: !32)
!17467 = !DILocalVariable(name: "tmp", scope: !17464, file: !5761, line: 53, type: !32)
!17468 = distinct !DILocation(line: 145, column: 10, scope: !17455, inlinedAt: !17462)
!17469 = !{i64 1649538}
!17470 = !DILocation(line: 0, scope: !17464, inlinedAt: !17468)
!17471 = !DILocation(line: 81, column: 9, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17429, file: !2555, line: 80, column: 22)
!17473 = !DILocation(line: 83, column: 9, scope: !17472)
!17474 = !DILocation(line: 85, column: 12, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17472, file: !2555, line: 84, column: 7)
!17476 = !DILocation(line: 85, column: 21, scope: !17475)
!17477 = !DILocation(line: 85, column: 30, scope: !17475)
!17478 = !DILocation(line: 85, column: 37, scope: !17475)
!17479 = !DILocation(line: 84, column: 7, scope: !17472)
!17480 = !DILocation(line: 99, column: 10, scope: !17472)
!17481 = !DILocation(line: 0, scope: !17455, inlinedAt: !17482)
!17482 = distinct !DILocation(line: 101, column: 9, scope: !17472)
!17483 = !DILocation(line: 55, column: 2, scope: !17464, inlinedAt: !17484)
!17484 = distinct !DILocation(line: 145, column: 10, scope: !17455, inlinedAt: !17482)
!17485 = !DILocation(line: 0, scope: !17464, inlinedAt: !17484)
!17486 = distinct !{!17486, !17487, !17488}
!17487 = !DILocation(line: 80, column: 2, scope: !17429)
!17488 = !DILocation(line: 102, column: 2, scope: !17429)
!17489 = !DILocalVariable(name: "key", arg: 2, scope: !17490, file: !473, line: 190, type: !17445)
!17490 = distinct !DISubprogram(name: "k_spin_unlock", scope: !473, file: !473, line: 189, type: !17491, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17493)
!17491 = !DISubroutineType(types: !17492)
!17492 = !{null, !17458, !17445}
!17493 = !{!17494, !17489}
!17494 = !DILocalVariable(name: "l", arg: 1, scope: !17490, file: !473, line: 189, type: !17458)
!17495 = !DILocation(line: 0, scope: !17490, inlinedAt: !17496)
!17496 = distinct !DILocation(line: 106, column: 2, scope: !17429)
!17497 = !DILocalVariable(name: "key", arg: 1, scope: !17498, file: !5761, line: 84, type: !32)
!17498 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5761, file: !5761, line: 84, type: !5772, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17499)
!17499 = !{!17497}
!17500 = !DILocation(line: 0, scope: !17498, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 215, column: 2, scope: !17490, inlinedAt: !17496)
!17502 = !DILocation(line: 95, column: 2, scope: !17498, inlinedAt: !17501)
!17503 = !{i64 1650355}
!17504 = !DILocation(line: 107, column: 2, scope: !17429)
!17505 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2555, file: !2555, line: 110, type: !17506, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17508)
!17506 = !DISubroutineType(types: !17507)
!17507 = !{!102, !17362, !357, !17432}
!17508 = !{!17509, !17510, !17511, !17512}
!17509 = !DILocalVariable(name: "h", arg: 1, scope: !17505, file: !2555, line: 110, type: !17362)
!17510 = !DILocalVariable(name: "bytes", arg: 2, scope: !17505, file: !2555, line: 110, type: !357)
!17511 = !DILocalVariable(name: "timeout", arg: 3, scope: !17505, file: !2555, line: 110, type: !17432)
!17512 = !DILocalVariable(name: "ret", scope: !17505, file: !2555, line: 114, type: !102)
!17513 = !DILocation(line: 0, scope: !17505)
!17514 = !DILocation(line: 114, column: 14, scope: !17505)
!17515 = !DILocation(line: 118, column: 2, scope: !17505)
!17516 = distinct !DISubprogram(name: "k_heap_free", scope: !2555, file: !2555, line: 121, type: !17517, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2536, retainedNodes: !17519)
!17517 = !DISubroutineType(types: !17518)
!17518 = !{null, !17362, !102}
!17519 = !{!17520, !17521, !17522}
!17520 = !DILocalVariable(name: "h", arg: 1, scope: !17516, file: !2555, line: 121, type: !17362)
!17521 = !DILocalVariable(name: "mem", arg: 2, scope: !17516, file: !2555, line: 121, type: !102)
!17522 = !DILocalVariable(name: "key", scope: !17516, file: !2555, line: 123, type: !17445)
!17523 = !DILocation(line: 0, scope: !17516)
!17524 = !DILocation(line: 0, scope: !17455, inlinedAt: !17525)
!17525 = distinct !DILocation(line: 123, column: 25, scope: !17516)
!17526 = !DILocation(line: 55, column: 2, scope: !17464, inlinedAt: !17527)
!17527 = distinct !DILocation(line: 145, column: 10, scope: !17455, inlinedAt: !17525)
!17528 = !DILocation(line: 0, scope: !17464, inlinedAt: !17527)
!17529 = !DILocation(line: 125, column: 20, scope: !17516)
!17530 = !DILocation(line: 125, column: 2, scope: !17516)
!17531 = !DILocation(line: 128, column: 60, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17516, file: !2555, line: 128, column: 6)
!17533 = !DILocation(line: 128, column: 43, scope: !17532)
!17534 = !DILocation(line: 128, column: 68, scope: !17532)
!17535 = !DILocation(line: 128, column: 6, scope: !17516)
!17536 = !DILocation(line: 123, column: 41, scope: !17516)
!17537 = !DILocation(line: 129, column: 3, scope: !17538)
!17538 = distinct !DILexicalBlock(scope: !17532, file: !2555, line: 128, column: 74)
!17539 = !DILocation(line: 130, column: 2, scope: !17538)
!17540 = !DILocation(line: 0, scope: !17490, inlinedAt: !17541)
!17541 = distinct !DILocation(line: 131, column: 3, scope: !17542)
!17542 = distinct !DILexicalBlock(scope: !17532, file: !2555, line: 130, column: 9)
!17543 = !DILocation(line: 0, scope: !17498, inlinedAt: !17544)
!17544 = distinct !DILocation(line: 215, column: 2, scope: !17490, inlinedAt: !17541)
!17545 = !DILocation(line: 95, column: 2, scope: !17498, inlinedAt: !17544)
!17546 = !DILocation(line: 133, column: 1, scope: !17516)
